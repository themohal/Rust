{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13","program":"/home/farjad-ali/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","wayland_scanner","/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata,link","-C","debuginfo=2","-C","metadata=a32b029dd30d2791","-C","extra-filename=-a32b029dd30d2791","--out-dir","/home/farjad-ali/Rust/Quarter 2/kiss3d/target/rls/debug/deps","-L","dependency=/home/farjad-ali/Rust/Quarter 2/kiss3d/target/rls/debug/deps","--extern","proc_macro2=/home/farjad-ali/Rust/Quarter 2/kiss3d/target/rls/debug/deps/libproc_macro2-5784ddc7a5716111.rmeta","--extern","quote=/home/farjad-ali/Rust/Quarter 2/kiss3d/target/rls/debug/deps/libquote-31334cd4bfa58489.rmeta","--extern","xml=/home/farjad-ali/Rust/Quarter 2/kiss3d/target/rls/debug/deps/libxml-c7691a1b9105c65c.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/farjad-ali/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/farjad-ali/Rust/Quarter 2/kiss3d/target/rls/debug/deps/libwayland_scanner-a32b029dd30d2791.rmeta"},"prelude":{"crate_id":{"name":"wayland_scanner","disambiguator":[5556212384067863233,2776297117239743158]},"crate_root":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src","external_crates":[{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9564622754343001814,6395353584576912375]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[16347567532895737325,10433174518283571136]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[6035154360143295752,3120051156278071757]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[17970804288108720841,8277620835330235672]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[16732030649177302276,7623982932271952002]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[2049976911787826744,13979720418681232837]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[17847122289935873599,14578858192368606437]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12400616498443773685,4537628398871354645]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[1484644931138181661,6065563251080435870]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[10540921678309121045,13783658537477923762]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[14352423081837475994,16315607114161141584]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[15159368332461590608,12067571535011159917]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[565700744459104052,3788273681611333969]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[2676206115383283879,17948995864942817625]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","num":15,"id":{"name":"proc_macro2","disambiguator":[14742049948937415759,11559973672133299341]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","num":16,"id":{"name":"proc_macro","disambiguator":[8912973543497943285,2905486896263459045]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","num":17,"id":{"name":"unicode_xid","disambiguator":[9230249137946530849,15123375613828751242]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","num":18,"id":{"name":"quote","disambiguator":[13680274901743829219,17705847409261404188]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","num":19,"id":{"name":"xml","disambiguator":[4376883901507272167,5602151888901509262]}}],"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":0,"byte_end":9162,"line_start":1,"line_end":263,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":311},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":3920,"byte_end":3924,"line_start":116,"line_end":116,"column_start":15,"column_end":19},"alias_span":null,"name":"Side","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":0,"byte_end":9162,"line_start":1,"line_end":263,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":38},{"krate":0,"index":58},{"krate":0,"index":112},{"krate":0,"index":140},{"krate":0,"index":160},{"krate":0,"index":174},{"krate":0,"index":183},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":200},{"krate":0,"index":203},{"krate":0,"index":206},{"krate":0,"index":209},{"krate":0,"index":212},{"krate":0,"index":215}],"decl_id":null,"docs":" Wayland scanner crate","sig":null,"attributes":[{"value":"! Wayland scanner crate","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":0,"byte_end":25,"line_start":1,"line_end":1,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":26,"byte_end":29,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":30,"byte_end":33,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"! This crate is a rust equivalent of the wayland-scanner tool from the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":34,"byte_end":106,"line_start":4,"line_end":4,"column_start":1,"column_end":73}},{"value":"! official wayland C library.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":107,"byte_end":138,"line_start":5,"line_end":5,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":139,"byte_end":142,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! You can use in your build script to generate the rust code for any","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":143,"byte_end":213,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"! wayland protocol file, to use alongside the `wayland_client` and","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":214,"byte_end":282,"line_start":8,"line_end":8,"column_start":1,"column_end":69}},{"value":"! `wayland_server` crate to build your applications.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":283,"byte_end":337,"line_start":9,"line_end":9,"column_start":1,"column_end":55}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":338,"byte_end":341,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! ## How to use this crate","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":342,"byte_end":370,"line_start":11,"line_end":11,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":371,"byte_end":374,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! This crate is to be used in a build script. It provides you two","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":375,"byte_end":442,"line_start":13,"line_end":13,"column_start":1,"column_end":68}},{"value":"! functions, `generate_c_code` and `generate_c_interfaces`. They'll","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":443,"byte_end":512,"line_start":14,"line_end":14,"column_start":1,"column_end":70}},{"value":"! allow you to generate the code to use with the `wayland_client` or","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":513,"byte_end":583,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"! `wayland_server` crates for any XML wayland protocol file (NB: you don't","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":584,"byte_end":660,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"! need to do it for the core protocol, which is already included in both crates).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":661,"byte_end":744,"line_start":17,"line_end":17,"column_start":1,"column_end":84}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":745,"byte_end":748,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"! First, have the XML files you want to use in your project, somewhere the build script","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":749,"byte_end":838,"line_start":19,"line_end":19,"column_start":1,"column_end":90}},{"value":"! will be able to read them.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":839,"byte_end":869,"line_start":20,"line_end":20,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":870,"byte_end":873,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! Then, you'll need to invoke both `generate_c_interfaces` *and* `generate_c_code` for","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":874,"byte_end":962,"line_start":22,"line_end":22,"column_start":1,"column_end":89}},{"value":"! each of these files.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":963,"byte_end":987,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":988,"byte_end":991,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"! A sample build script:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":992,"byte_end":1018,"line_start":25,"line_end":25,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":1019,"byte_end":1022,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":1023,"byte_end":1036,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"! extern crate wayland_scanner;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":1037,"byte_end":1070,"line_start":28,"line_end":28,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":1071,"byte_end":1074,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"! use std::env::var;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":1075,"byte_end":1097,"line_start":30,"line_end":30,"column_start":1,"column_end":23}},{"value":"! use std::path::Path;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":1098,"byte_end":1122,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":1123,"byte_end":1126,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"! use wayland_scanner::{Side, generate_c_code, generate_c_interfaces};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":1127,"byte_end":1199,"line_start":33,"line_end":33,"column_start":1,"column_end":73}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":1200,"byte_end":1203,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"! fn main() {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":1204,"byte_end":1219,"line_start":35,"line_end":35,"column_start":1,"column_end":16}},{"value":"!     // Location of the xml file, relative to the `Cargo.toml`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":1220,"byte_end":1285,"line_start":36,"line_end":36,"column_start":1,"column_end":66}},{"value":"!     let protocol_file = \"./my_protocol.xml\";","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":1286,"byte_end":1334,"line_start":37,"line_end":37,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":1335,"byte_end":1338,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"!     // Target directory for the generate files","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":1339,"byte_end":1389,"line_start":39,"line_end":39,"column_start":1,"column_end":51}},{"value":"!     let out_dir_str = var(\"OUT_DIR\").unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":1390,"byte_end":1440,"line_start":40,"line_end":40,"column_start":1,"column_end":51}},{"value":"!     let out_dir = Path::new(&out_dir_str);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":1441,"byte_end":1487,"line_start":41,"line_end":41,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":1488,"byte_end":1491,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"!     generate_c_code(","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":1492,"byte_end":1516,"line_start":43,"line_end":43,"column_start":1,"column_end":25}},{"value":"!         protocol_file,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":1517,"byte_end":1543,"line_start":44,"line_end":44,"column_start":1,"column_end":27}},{"value":"!         out_dir.join(\"my_protocol_api.rs\"),","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":1544,"byte_end":1591,"line_start":45,"line_end":45,"column_start":1,"column_end":48}},{"value":"!         Side::Client, // Replace by `Side::Server` for server-side code","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":1592,"byte_end":1667,"line_start":46,"line_end":46,"column_start":1,"column_end":76}},{"value":"!     );","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":1668,"byte_end":1678,"line_start":47,"line_end":47,"column_start":1,"column_end":11}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":1679,"byte_end":1682,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"!     // interfaces are the same for client and server","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":1683,"byte_end":1739,"line_start":49,"line_end":49,"column_start":1,"column_end":57}},{"value":"!     generate_c_interfaces(","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":1740,"byte_end":1770,"line_start":50,"line_end":50,"column_start":1,"column_end":31}},{"value":"!         protocol_file,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":1771,"byte_end":1797,"line_start":51,"line_end":51,"column_start":1,"column_end":27}},{"value":"!         out_dir.join(\"my_protocol_interfaces.rs\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":1798,"byte_end":1851,"line_start":52,"line_end":52,"column_start":1,"column_end":54}},{"value":"!     );","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":1852,"byte_end":1862,"line_start":53,"line_end":53,"column_start":1,"column_end":11}},{"value":"! }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":1863,"byte_end":1868,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":1869,"byte_end":1876,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":1877,"byte_end":1880,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"! The above example will output two `.rs` files in the `OUT_DIR` defined by","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":1881,"byte_end":1958,"line_start":57,"line_end":57,"column_start":1,"column_end":78}},{"value":"! cargo. Then, you'll need to include these two generated files (using the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":1959,"byte_end":2035,"line_start":58,"line_end":58,"column_start":1,"column_end":77}},{"value":"! macro of the same name) to make this code available in your crate.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":2036,"byte_end":2106,"line_start":59,"line_end":59,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":2107,"byte_end":2110,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"! ```ignore","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":2111,"byte_end":2124,"line_start":61,"line_end":61,"column_start":1,"column_end":14}},{"value":"! // The generated code will import stuff from wayland_sys","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":2125,"byte_end":2185,"line_start":62,"line_end":62,"column_start":1,"column_end":61}},{"value":"! extern crate wayland_sys;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":2186,"byte_end":2215,"line_start":63,"line_end":63,"column_start":1,"column_end":30}},{"value":"! extern crate wayland_client;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":2216,"byte_end":2248,"line_start":64,"line_end":64,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":2249,"byte_end":2252,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"! // Re-export only the actual code, and then only use this re-export","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":2253,"byte_end":2324,"line_start":66,"line_end":66,"column_start":1,"column_end":72}},{"value":"! // The `generated` module below is just some boilerplate to properly isolate stuff","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":2325,"byte_end":2411,"line_start":67,"line_end":67,"column_start":1,"column_end":87}},{"value":"! // and avoid exposing internal details.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":2412,"byte_end":2455,"line_start":68,"line_end":68,"column_start":1,"column_end":44}},{"value":"! //","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":2456,"byte_end":2462,"line_start":69,"line_end":69,"column_start":1,"column_end":7}},{"value":"! // You can use all the types from my_protocol as if they went from `wayland_client::protocol`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":2463,"byte_end":2561,"line_start":70,"line_end":70,"column_start":1,"column_end":99}},{"value":"! pub use generated::client as my_protocol;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":2562,"byte_end":2607,"line_start":71,"line_end":71,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":2608,"byte_end":2611,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"! mod generated {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":2612,"byte_end":2631,"line_start":73,"line_end":73,"column_start":1,"column_end":20}},{"value":"!     // The generated code tends to trigger a lot of warnings","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":2632,"byte_end":2696,"line_start":74,"line_end":74,"column_start":1,"column_end":65}},{"value":"!     // so we isolate it into a very permissive module","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":2697,"byte_end":2754,"line_start":75,"line_end":75,"column_start":1,"column_end":58}},{"value":"!     #![allow(dead_code,non_camel_case_types,unused_unsafe,unused_variables)]","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":2755,"byte_end":2835,"line_start":76,"line_end":76,"column_start":1,"column_end":81}},{"value":"!     #![allow(non_upper_case_globals,non_snake_case,unused_imports)]","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":2836,"byte_end":2907,"line_start":77,"line_end":77,"column_start":1,"column_end":72}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":2908,"byte_end":2911,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"!     pub mod interfaces {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":2912,"byte_end":2940,"line_start":79,"line_end":79,"column_start":1,"column_end":29}},{"value":"!         // include the interfaces, they just need to be accessible to the generated code","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":2941,"byte_end":3033,"line_start":80,"line_end":80,"column_start":1,"column_end":93}},{"value":"!         // so this module is `pub` so that it can be imported by the other one.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":3034,"byte_end":3117,"line_start":81,"line_end":81,"column_start":1,"column_end":84}},{"value":"!         include!(concat!(env!(\"OUT_DIR\"), \"/my_protocol_interfaces.rs\"));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":3118,"byte_end":3195,"line_start":82,"line_end":82,"column_start":1,"column_end":78}},{"value":"!     }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":3196,"byte_end":3205,"line_start":83,"line_end":83,"column_start":1,"column_end":10}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":3206,"byte_end":3209,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"!     pub mod client {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":3210,"byte_end":3234,"line_start":85,"line_end":85,"column_start":1,"column_end":25}},{"value":"!         // If you protocol interacts with objects from other protocols, you'll need to import","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":3235,"byte_end":3332,"line_start":86,"line_end":86,"column_start":1,"column_end":98}},{"value":"!         // their modules, like so:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":3333,"byte_end":3371,"line_start":87,"line_end":87,"column_start":1,"column_end":39}},{"value":"!         pub(crate) use wayland_client::protocol::{wl_surface, wl_region};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":3372,"byte_end":3449,"line_start":88,"line_end":88,"column_start":1,"column_end":78}},{"value":"!         include!(concat!(env!(\"OUT_DIR\"), \"/my_protocol_code.rs\"));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":3450,"byte_end":3521,"line_start":89,"line_end":89,"column_start":1,"column_end":72}},{"value":"!     }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":3522,"byte_end":3531,"line_start":90,"line_end":90,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":3532,"byte_end":3537,"line_start":91,"line_end":91,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":3538,"byte_end":3545,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"recursion_limit = \"128\"","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":3547,"byte_end":3574,"line_start":94,"line_end":94,"column_start":1,"column_end":28}},{"value":"warn(missing_docs)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":3575,"byte_end":3597,"line_start":95,"line_end":95,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":312},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/side.rs","byte_start":84564,"byte_end":84570,"line_start":12,"line_end":12,"column_start":5,"column_end":11},"name":"Client","qualname":"::side::Side::Client","value":"Side::Client","parent":{"krate":0,"index":311},"children":[],"decl_id":null,"docs":" wayland client applications\n","sig":null,"attributes":[{"value":"/ wayland client applications","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/side.rs","byte_start":84528,"byte_end":84559,"line_start":11,"line_end":11,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":314},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/side.rs","byte_start":84604,"byte_end":84610,"line_start":14,"line_end":14,"column_start":5,"column_end":11},"name":"Server","qualname":"::side::Side::Server","value":"Side::Server","parent":{"krate":0,"index":311},"children":[],"decl_id":null,"docs":" wayland compositors\n","sig":null,"attributes":[{"value":"/ wayland compositors","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/side.rs","byte_start":84576,"byte_end":84599,"line_start":13,"line_end":13,"column_start":5,"column_end":28}}]},{"kind":"Enum","id":{"krate":0,"index":311},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/side.rs","byte_start":84517,"byte_end":84521,"line_start":10,"line_end":10,"column_start":10,"column_end":14},"name":"Side","qualname":"::side::Side","value":"Side::{Client, Server}","parent":null,"children":[{"krate":0,"index":312},{"krate":0,"index":314}],"decl_id":null,"docs":" Side to generate","sig":null,"attributes":[{"value":"/ Side to generate","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/side.rs","byte_start":84343,"byte_end":84363,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/side.rs","byte_start":84364,"byte_end":84367,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This enum represents the two possible sides of","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/side.rs","byte_start":84368,"byte_end":84418,"line_start":7,"line_end":7,"column_start":1,"column_end":51}},{"value":"/ the protocol API that can be generated.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/side.rs","byte_start":84419,"byte_end":84462,"line_start":8,"line_end":8,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":200},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":4496,"byte_end":4517,"line_start":135,"line_end":135,"column_start":8,"column_end":29},"name":"generate_c_interfaces","qualname":"::generate_c_interfaces","value":"fn <P1, P2> (protocol: P1, target: P2) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Generate the interfaces for a protocol","sig":null,"attributes":[{"value":"/ Generate the interfaces for a protocol","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":4167,"byte_end":4209,"line_start":126,"line_end":126,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":4210,"byte_end":4213,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ See this crate's toplevel documentation for details.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":4214,"byte_end":4270,"line_start":128,"line_end":128,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":4271,"byte_end":4274,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ Args:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":4275,"byte_end":4284,"line_start":130,"line_end":130,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":4285,"byte_end":4288,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ - `protocol`: a path to the XML file describing the protocol, absolute or relative to","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":4289,"byte_end":4378,"line_start":132,"line_end":132,"column_start":1,"column_end":90}},{"value":"/   the build script using this function.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":4379,"byte_end":4422,"line_start":133,"line_end":133,"column_start":1,"column_end":44}},{"value":"/ - `target`: the path of the file to store this interfaces in.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":4423,"byte_end":4488,"line_start":134,"line_end":134,"column_start":1,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":203},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":5370,"byte_end":5388,"line_start":161,"line_end":161,"column_start":8,"column_end":26},"name":"generate_rust_code","qualname":"::generate_rust_code","value":"fn <P1, P2> (prot: P1, target: P2, side: Side) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Generate the code for a protocol using the Rust implementation","sig":null,"attributes":[{"value":"/ Generate the code for a protocol using the Rust implementation","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":4962,"byte_end":5028,"line_start":151,"line_end":151,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":5029,"byte_end":5032,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ See this crate toplevel documentation for details.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":5033,"byte_end":5087,"line_start":153,"line_end":153,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":5088,"byte_end":5091,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ Args:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":5092,"byte_end":5101,"line_start":155,"line_end":155,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":5102,"byte_end":5105,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ - `protocol`: a path to the XML file describing the protocol, absolute or relative to","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":5106,"byte_end":5195,"line_start":157,"line_end":157,"column_start":1,"column_end":90}},{"value":"/   the build script using this function.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":5196,"byte_end":5239,"line_start":158,"line_end":158,"column_start":1,"column_end":44}},{"value":"/ - `target`: the path of the file to store the code in.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":5240,"byte_end":5298,"line_start":159,"line_end":159,"column_start":1,"column_end":59}},{"value":"/ - `side`: the side (client or server) to generate code for.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":5299,"byte_end":5362,"line_start":160,"line_end":160,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":206},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":6403,"byte_end":6418,"line_start":192,"line_end":192,"column_start":8,"column_end":23},"name":"generate_c_code","qualname":"::generate_c_code","value":"fn <P1, P2> (prot: P1, target: P2, side: Side) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Generate the code for a protocol using the C system libs","sig":null,"attributes":[{"value":"/ Generate the code for a protocol using the C system libs","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":6001,"byte_end":6061,"line_start":182,"line_end":182,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":6062,"byte_end":6065,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ See this crate toplevel documentation for details.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":6066,"byte_end":6120,"line_start":184,"line_end":184,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":6121,"byte_end":6124,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ Args:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":6125,"byte_end":6134,"line_start":186,"line_end":186,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":6135,"byte_end":6138,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ - `protocol`: a path to the XML file describing the protocol, absolute or relative to","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":6139,"byte_end":6228,"line_start":188,"line_end":188,"column_start":1,"column_end":90}},{"value":"/   the build script using this function.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":6229,"byte_end":6272,"line_start":189,"line_end":189,"column_start":1,"column_end":44}},{"value":"/ - `target`: the path of the file to store the code in.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":6273,"byte_end":6331,"line_start":190,"line_end":190,"column_start":1,"column_end":59}},{"value":"/ - `side`: the side (client or server) to generate code for.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":6332,"byte_end":6395,"line_start":191,"line_end":191,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":209},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":7363,"byte_end":7392,"line_start":222,"line_end":222,"column_start":8,"column_end":37},"name":"generate_c_interfaces_streams","qualname":"::generate_c_interfaces_streams","value":"fn <P1, P2> (protocol: P1, target: &mut P2) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Generate the interfaces for a protocol from/to IO streams","sig":null,"attributes":[{"value":"/ Generate the interfaces for a protocol from/to IO streams","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":7026,"byte_end":7087,"line_start":214,"line_end":214,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":7088,"byte_end":7091,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ Like `generate_c_interfaces`, but takes IO Streams directly rather than filenames","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":7092,"byte_end":7177,"line_start":216,"line_end":216,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":7178,"byte_end":7181,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ Args:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":7182,"byte_end":7191,"line_start":218,"line_end":218,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":7192,"byte_end":7195,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ - `protocol`: an object `Read`-able containing the XML protocol file","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":7196,"byte_end":7268,"line_start":220,"line_end":220,"column_start":1,"column_end":73}},{"value":"/ - `target`: a `Write`-able object to which the generated code will be outputted to","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":7269,"byte_end":7355,"line_start":221,"line_end":221,"column_start":1,"column_end":87}}]},{"kind":"Function","id":{"krate":0,"index":212},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":8000,"byte_end":8026,"line_start":236,"line_end":236,"column_start":8,"column_end":34},"name":"generate_rust_code_streams","qualname":"::generate_rust_code_streams","value":"fn <P1, P2> (protocol: P1, target: &mut P2, side: Side) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Generate the code for a protocol from/to IO streams using the rust implementation","sig":null,"attributes":[{"value":"/ Generate the code for a protocol from/to IO streams using the rust implementation","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":7583,"byte_end":7668,"line_start":227,"line_end":227,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":7669,"byte_end":7672,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ Like `generate_code`, but takes IO Streams directly rather than filenames","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":7673,"byte_end":7750,"line_start":229,"line_end":229,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":7751,"byte_end":7754,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/ Args:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":7755,"byte_end":7764,"line_start":231,"line_end":231,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":7765,"byte_end":7768,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/ - `protocol`: an object `Read`-able containing the XML protocol file","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":7769,"byte_end":7841,"line_start":233,"line_end":233,"column_start":1,"column_end":73}},{"value":"/ - `target`: a `Write`-able object to which the generated code will be outputted to","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":7842,"byte_end":7928,"line_start":234,"line_end":234,"column_start":1,"column_end":87}},{"value":"/ - `side`: the side (client or server) to generate code for.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":7929,"byte_end":7992,"line_start":235,"line_end":235,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":215},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":8788,"byte_end":8811,"line_start":255,"line_end":255,"column_start":8,"column_end":31},"name":"generate_c_code_streams","qualname":"::generate_c_code_streams","value":"fn <P1, P2> (protocol: P1, target: &mut P2, side: Side) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Generate the code for a protocol from/to IO streams using the C system libs","sig":null,"attributes":[{"value":"/ Generate the code for a protocol from/to IO streams using the C system libs","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":8377,"byte_end":8456,"line_start":246,"line_end":246,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":8457,"byte_end":8460,"line_start":247,"line_end":247,"column_start":1,"column_end":4}},{"value":"/ Like `generate_code`, but takes IO Streams directly rather than filenames","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":8461,"byte_end":8538,"line_start":248,"line_end":248,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":8539,"byte_end":8542,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ Args:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":8543,"byte_end":8552,"line_start":250,"line_end":250,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":8553,"byte_end":8556,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ - `protocol`: an object `Read`-able containing the XML protocol file","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":8557,"byte_end":8629,"line_start":252,"line_end":252,"column_start":1,"column_end":73}},{"value":"/ - `target`: a `Write`-able object to which the generated code will be outputted to","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":8630,"byte_end":8716,"line_start":253,"line_end":253,"column_start":1,"column_end":87}},{"value":"/ - `side`: the side (client or server) to generate code for.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/lib.rs","byte_start":8717,"byte_end":8780,"line_start":254,"line_end":254,"column_start":1,"column_end":64}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/common_gen.rs","byte_start":37341,"byte_end":37345,"line_start":28,"line_end":28,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/protocol.rs","byte_start":76791,"byte_end":76799,"line_start":11,"line_end":11,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/protocol.rs","byte_start":77231,"byte_end":77240,"line_start":32,"line_end":32,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/protocol.rs","byte_start":77719,"byte_end":77726,"line_start":55,"line_end":55,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":147},{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/protocol.rs","byte_start":78404,"byte_end":78407,"line_start":85,"line_end":85,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/protocol.rs","byte_start":78868,"byte_end":78872,"line_start":108,"line_end":108,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/protocol.rs","byte_start":79277,"byte_end":79282,"line_start":129,"line_end":129,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/protocol.rs","byte_start":79652,"byte_end":79656,"line_start":154,"line_end":154,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/side.rs","byte_start":84620,"byte_end":84624,"line_start":17,"line_end":17,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/common_gen.rs","byte_start":37341,"byte_end":37345,"line_start":28,"line_end":28,"column_start":19,"column_end":23},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":261},"to":{"krate":18,"index":57}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/protocol.rs","byte_start":76791,"byte_end":76799,"line_start":11,"line_end":11,"column_start":6,"column_end":14},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":218},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/protocol.rs","byte_start":77231,"byte_end":77240,"line_start":32,"line_end":32,"column_start":6,"column_end":15},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":227},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/protocol.rs","byte_start":77719,"byte_end":77726,"line_start":55,"line_end":55,"column_start":6,"column_end":13},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":238},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/protocol.rs","byte_start":78404,"byte_end":78407,"line_start":85,"line_end":85,"column_start":6,"column_end":9},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":249},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/protocol.rs","byte_start":78868,"byte_end":78872,"line_start":108,"line_end":108,"column_start":6,"column_end":10},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":261},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/protocol.rs","byte_start":79277,"byte_end":79282,"line_start":129,"line_end":129,"column_start":6,"column_end":11},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":271},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/protocol.rs","byte_start":79652,"byte_end":79656,"line_start":154,"line_end":154,"column_start":6,"column_end":10},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":281},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/wayland-scanner-0.21.13/src/side.rs","byte_start":84620,"byte_end":84624,"line_start":17,"line_end":17,"column_start":6,"column_end":10},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":311},"to":{"krate":4294967295,"index":4294967295}}]}