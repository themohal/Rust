{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0","program":"/home/farjad-ali/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","ncollide3d","--edition=2018","/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"dim3\"","-C","metadata=edafea5e37b6deaa","-C","extra-filename=-edafea5e37b6deaa","--out-dir","/home/farjad-ali/Rust/Quarter 2/kiss3d/target/rls/debug/deps","-L","dependency=/home/farjad-ali/Rust/Quarter 2/kiss3d/target/rls/debug/deps","--extern","approx=/home/farjad-ali/Rust/Quarter 2/kiss3d/target/rls/debug/deps/libapprox-224d59d13d32eeb0.rmeta","--extern","bitflags=/home/farjad-ali/Rust/Quarter 2/kiss3d/target/rls/debug/deps/libbitflags-185fea5d756d81c4.rmeta","--extern","downcast_rs=/home/farjad-ali/Rust/Quarter 2/kiss3d/target/rls/debug/deps/libdowncast_rs-1c61e6e3ee4424d8.rmeta","--extern","either=/home/farjad-ali/Rust/Quarter 2/kiss3d/target/rls/debug/deps/libeither-4d1d7cefa526cb81.rmeta","--extern","nalgebra=/home/farjad-ali/Rust/Quarter 2/kiss3d/target/rls/debug/deps/libnalgebra-ac00f15a0761121a.rmeta","--extern","num_traits=/home/farjad-ali/Rust/Quarter 2/kiss3d/target/rls/debug/deps/libnum_traits-cdf93f73925a1d07.rmeta","--extern","petgraph=/home/farjad-ali/Rust/Quarter 2/kiss3d/target/rls/debug/deps/libpetgraph-72c94714a107ddeb.rmeta","--extern","simba=/home/farjad-ali/Rust/Quarter 2/kiss3d/target/rls/debug/deps/libsimba-98012b013ecd9437.rmeta","--extern","slab=/home/farjad-ali/Rust/Quarter 2/kiss3d/target/rls/debug/deps/libslab-e0e781a108986d56.rmeta","--extern","slotmap=/home/farjad-ali/Rust/Quarter 2/kiss3d/target/rls/debug/deps/libslotmap-9615b186bb3c0f1a.rmeta","--extern","smallvec=/home/farjad-ali/Rust/Quarter 2/kiss3d/target/rls/debug/deps/libsmallvec-69c3c3d74425d9d3.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/farjad-ali/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/farjad-ali/Rust/Quarter 2/kiss3d/target/rls/debug/deps/libncollide3d-edafea5e37b6deaa.rmeta"},"prelude":{"crate_id":{"name":"ncollide3d","disambiguator":[5704373104143677519,2402196551323222405]},"crate_root":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src","external_crates":[{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9564622754343001814,6395353584576912375]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[16347567532895737325,10433174518283571136]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[6035154360143295752,3120051156278071757]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[17970804288108720841,8277620835330235672]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[16732030649177302276,7623982932271952002]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[2049976911787826744,13979720418681232837]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[17847122289935873599,14578858192368606437]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12400616498443773685,4537628398871354645]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[1484644931138181661,6065563251080435870]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[10540921678309121045,13783658537477923762]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[14352423081837475994,16315607114161141584]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[15159368332461590608,12067571535011159917]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[565700744459104052,3788273681611333969]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[2676206115383283879,17948995864942817625]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","num":15,"id":{"name":"approx","disambiguator":[4659412410510464707,8179273015758229317]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","num":16,"id":{"name":"num_traits","disambiguator":[18280951367680062438,17399211580599509837]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","num":17,"id":{"name":"downcast_rs","disambiguator":[541655597091059662,12900306445994371244]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","num":18,"id":{"name":"bitflags","disambiguator":[13008310792646294399,18111922045990790205]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","num":19,"id":{"name":"nalgebra","disambiguator":[15628696787522050203,7991634580994669825]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","num":20,"id":{"name":"matrixmultiply","disambiguator":[16810115894398399111,2821757940363213925]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","num":21,"id":{"name":"rawpointer","disambiguator":[12175646293835987387,6358191257837919929]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","num":22,"id":{"name":"rand_distr","disambiguator":[7819059941814983980,6907032081130253966]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","num":23,"id":{"name":"rand","disambiguator":[5872653678934046551,17707811861653497161]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","num":24,"id":{"name":"rand_core","disambiguator":[474046970265584131,16317056499667026151]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","num":25,"id":{"name":"getrandom","disambiguator":[5257712510970732985,11318898845138337117]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","num":26,"id":{"name":"cfg_if","disambiguator":[6956900293673062683,13192834746660551626]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","num":27,"id":{"name":"libc","disambiguator":[657624222426815521,10684527131133059072]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","num":28,"id":{"name":"rand_chacha","disambiguator":[17380563507190122393,10169145866536563654]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","num":29,"id":{"name":"ppv_lite86","disambiguator":[5200464393876613351,13424582627006814768]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","num":30,"id":{"name":"simba","disambiguator":[6216583338450269413,12924415775222353370]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","num":31,"id":{"name":"num_complex","disambiguator":[13109746978719735377,2968288435886182343]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","num":32,"id":{"name":"paste","disambiguator":[9347646932603485813,8717825850453567916]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","num":33,"id":{"name":"proc_macro_hack","disambiguator":[6420530350504618305,13182919156808654971]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","num":34,"id":{"name":"paste_impl","disambiguator":[14446104188430901687,11289301769036049829]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","num":35,"id":{"name":"generic_array","disambiguator":[7907160341891213291,18141815836686927397]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","num":36,"id":{"name":"typenum","disambiguator":[16574785526192663555,11852271692604152690]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","num":37,"id":{"name":"num_rational","disambiguator":[9906114152297790726,17878255054636837789]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","num":38,"id":{"name":"num_integer","disambiguator":[4183640638276385209,3904821750051454826]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/dbvt.rs","num":39,"id":{"name":"slab","disambiguator":[594030813312570608,14863839120191776902]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","num":40,"id":{"name":"petgraph","disambiguator":[6205972419863187816,13422425009824627465]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","num":41,"id":{"name":"fixedbitset","disambiguator":[4049304466008160416,18077949060421055281]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","num":42,"id":{"name":"indexmap","disambiguator":[11724058860261362466,1714968007248294582]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","num":43,"id":{"name":"hashbrown","disambiguator":[16731230451928029902,11361204978456882515]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/narrow_phase.rs","num":44,"id":{"name":"slotmap","disambiguator":[6790502538296183258,8446174306406620894]}}],"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","byte_start":0,"byte_end":4430,"line_start":1,"line_end":169,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":876},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","byte_start":2222,"byte_end":2233,"line_start":81,"line_end":81,"column_start":27,"column_end":38},"alias_span":null,"name":"broad_phase","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1217},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","byte_start":2235,"byte_end":2247,"line_start":81,"line_end":81,"column_start":40,"column_end":52},"alias_span":null,"name":"narrow_phase","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2274},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","byte_start":2249,"byte_end":2254,"line_start":81,"line_end":81,"column_start":54,"column_end":59},"alias_span":null,"name":"world","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6620},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/mod.rs","byte_start":4484,"byte_end":4496,"line_start":3,"line_end":3,"column_start":30,"column_end":42},"alias_span":null,"name":"CircularCone","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":6648},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/mod.rs","byte_start":4537,"byte_end":4558,"line_start":4,"line_end":4,"column_start":40,"column_end":61},"alias_span":null,"name":"SpatializedNormalCone","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":73},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/mod.rs","byte_start":4614,"byte_end":4618,"line_start":6,"line_end":6,"column_start":40,"column_end":44},"alias_span":null,"name":"aabb","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":76},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/mod.rs","byte_start":4620,"byte_end":4630,"line_start":6,"line_end":6,"column_start":46,"column_end":56},"alias_span":null,"name":"local_aabb","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":6584},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/mod.rs","byte_start":4632,"byte_end":4636,"line_start":6,"line_end":6,"column_start":58,"column_end":62},"alias_span":null,"name":"AABB","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":117},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/mod.rs","byte_start":4682,"byte_end":4691,"line_start":7,"line_end":7,"column_start":44,"column_end":53},"alias_span":null,"name":"ball_aabb","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":296},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/mod.rs","byte_start":4743,"byte_end":4765,"line_start":9,"line_end":9,"column_start":5,"column_end":27},"alias_span":null,"name":"local_point_cloud_aabb","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":289},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/mod.rs","byte_start":4767,"byte_end":4789,"line_start":9,"line_end":9,"column_start":29,"column_end":51},"alias_span":null,"name":"local_support_map_aabb","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":292},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/mod.rs","byte_start":4791,"byte_end":4807,"line_start":9,"line_end":9,"column_start":53,"column_end":69},"alias_span":null,"name":"point_cloud_aabb","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":286},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/mod.rs","byte_start":4809,"byte_end":4825,"line_start":9,"line_end":9,"column_start":71,"column_end":87},"alias_span":null,"name":"support_map_aabb","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":310},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/mod.rs","byte_start":4900,"byte_end":4915,"line_start":13,"line_end":13,"column_start":5,"column_end":20},"alias_span":null,"name":"bounding_sphere","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":313},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/mod.rs","byte_start":4917,"byte_end":4938,"line_start":13,"line_end":13,"column_start":22,"column_end":43},"alias_span":null,"name":"local_bounding_sphere","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":6602},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/mod.rs","byte_start":4940,"byte_end":4954,"line_start":13,"line_end":13,"column_start":45,"column_end":59},"alias_span":null,"name":"BoundingSphere","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":512},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/mod.rs","byte_start":5020,"byte_end":5047,"line_start":16,"line_end":16,"column_start":5,"column_end":32},"alias_span":null,"name":"point_cloud_bounding_sphere","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":510},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/mod.rs","byte_start":5049,"byte_end":5088,"line_start":16,"line_end":16,"column_start":34,"column_end":73},"alias_span":null,"name":"point_cloud_bounding_sphere_with_center","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":48},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/mod.rs","byte_start":5158,"byte_end":5172,"line_start":19,"line_end":19,"column_start":51,"column_end":65},"alias_span":null,"name":"BoundingVolume","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":43},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/mod.rs","byte_start":5174,"byte_end":5191,"line_start":19,"line_end":19,"column_start":67,"column_end":84},"alias_span":null,"name":"HasBoundingVolume","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":579},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/mod.rs","byte_start":49283,"byte_end":49316,"line_start":4,"line_end":4,"column_start":5,"column_end":38},"alias_span":null,"name":"ConstantLinearVelocityRigidMotion","value":"","parent":{"krate":0,"index":548}},{"kind":"Use","ref_id":{"krate":0,"index":6658},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/mod.rs","byte_start":49318,"byte_end":49345,"line_start":4,"line_end":4,"column_start":40,"column_end":67},"alias_span":null,"name":"ConstantVelocityRigidMotion","value":"","parent":{"krate":0,"index":548}},{"kind":"Use","ref_id":{"krate":0,"index":569},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/mod.rs","byte_start":49347,"byte_end":49370,"line_start":4,"line_end":4,"column_start":69,"column_end":92},"alias_span":null,"name":"InterpolatedRigidMotion","value":"","parent":{"krate":0,"index":548}},{"kind":"Use","ref_id":{"krate":0,"index":563},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/mod.rs","byte_start":49376,"byte_end":49387,"line_start":5,"line_end":5,"column_start":5,"column_end":16},"alias_span":null,"name":"RigidMotion","value":"","parent":{"krate":0,"index":548}},{"kind":"Use","ref_id":{"krate":0,"index":596},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/mod.rs","byte_start":49389,"byte_end":49411,"line_start":5,"line_end":5,"column_start":18,"column_end":40},"alias_span":null,"name":"RigidMotionComposition","value":"","parent":{"krate":0,"index":548}},{"kind":"Use","ref_id":{"krate":0,"index":6668},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/mod.rs","byte_start":55843,"byte_end":55850,"line_start":3,"line_end":3,"column_start":21,"column_end":28},"alias_span":null,"name":"BVHImpl","value":"","parent":{"krate":0,"index":625}},{"kind":"Use","ref_id":{"krate":0,"index":658},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/mod.rs","byte_start":55852,"byte_end":55855,"line_start":3,"line_end":3,"column_start":30,"column_end":33},"alias_span":null,"name":"BVH","value":"","parent":{"krate":0,"index":625}},{"kind":"Use","ref_id":{"krate":0,"index":6703},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/mod.rs","byte_start":55878,"byte_end":55887,"line_start":4,"line_end":4,"column_start":21,"column_end":30},"alias_span":null,"name":"BVTNodeId","value":"","parent":{"krate":0,"index":625}},{"kind":"Use","ref_id":{"krate":0,"index":742},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/mod.rs","byte_start":55889,"byte_end":55904,"line_start":4,"line_end":4,"column_start":32,"column_end":47},"alias_span":null,"name":"BinaryPartition","value":"","parent":{"krate":0,"index":625}},{"kind":"Use","ref_id":{"krate":0,"index":6690},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/mod.rs","byte_start":55906,"byte_end":55909,"line_start":4,"line_end":4,"column_start":49,"column_end":52},"alias_span":null,"name":"BVT","value":"","parent":{"krate":0,"index":625}},{"kind":"Use","ref_id":{"krate":0,"index":6819},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/mod.rs","byte_start":55933,"byte_end":55941,"line_start":5,"line_end":5,"column_start":22,"column_end":30},"alias_span":null,"name":"DBVTLeaf","value":"","parent":{"krate":0,"index":625}},{"kind":"Use","ref_id":{"krate":0,"index":6747},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/mod.rs","byte_start":55943,"byte_end":55953,"line_start":5,"line_end":5,"column_start":32,"column_end":42},"alias_span":null,"name":"DBVTLeafId","value":"","parent":{"krate":0,"index":625}},{"kind":"Use","ref_id":{"krate":0,"index":6792},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/mod.rs","byte_start":55955,"byte_end":55965,"line_start":5,"line_end":5,"column_start":44,"column_end":54},"alias_span":null,"name":"DBVTNodeId","value":"","parent":{"krate":0,"index":625}},{"kind":"Use","ref_id":{"krate":0,"index":6807},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/mod.rs","byte_start":55967,"byte_end":55971,"line_start":5,"line_end":5,"column_start":56,"column_end":60},"alias_span":null,"name":"DBVT","value":"","parent":{"krate":0,"index":625}},{"kind":"Use","ref_id":{"krate":0,"index":853},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/mod.rs","byte_start":56003,"byte_end":56023,"line_start":7,"line_end":7,"column_start":5,"column_end":25},"alias_span":null,"name":"BestFirstVisitStatus","value":"","parent":{"krate":0,"index":625}},{"kind":"Use","ref_id":{"krate":0,"index":864},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/mod.rs","byte_start":56025,"byte_end":56041,"line_start":7,"line_end":7,"column_start":27,"column_end":43},"alias_span":null,"name":"BestFirstVisitor","value":"","parent":{"krate":0,"index":625}},{"kind":"Use","ref_id":{"krate":0,"index":849},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/mod.rs","byte_start":56043,"byte_end":56062,"line_start":7,"line_end":7,"column_start":45,"column_end":64},"alias_span":null,"name":"SimultaneousVisitor","value":"","parent":{"krate":0,"index":625}},{"kind":"Use","ref_id":{"krate":0,"index":838},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/mod.rs","byte_start":56064,"byte_end":56075,"line_start":7,"line_end":7,"column_start":66,"column_end":77},"alias_span":null,"name":"VisitStatus","value":"","parent":{"krate":0,"index":625}},{"kind":"Use","ref_id":{"krate":0,"index":845},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/mod.rs","byte_start":56077,"byte_end":56084,"line_start":7,"line_end":7,"column_start":79,"column_end":86},"alias_span":null,"name":"Visitor","value":"","parent":{"krate":0,"index":625}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/mod.rs","byte_start":97463,"byte_end":97464,"line_start":3,"line_end":3,"column_start":28,"column_end":29},"alias_span":null,"name":"*","value":"BroadPhaseProxyHandle, BroadPhase","parent":{"krate":0,"index":870}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/mod.rs","byte_start":97463,"byte_end":97464,"line_start":3,"line_end":3,"column_start":28,"column_end":29},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":870}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/mod.rs","byte_start":97463,"byte_end":97464,"line_start":3,"line_end":3,"column_start":28,"column_end":29},"alias_span":null,"name":"*","value":"CapsuleCapsuleManifoldGenerator, PlaneConvexPolyhedronManifoldGenerator, ConvexPolyhedronConvexPolyhedronManifoldGenerator, ContactAlgorithm, CapsuleShapeManifoldGenerator, BallBallManifoldGenerator, HeightFieldShapeManifoldGenerator, ContactDispatcher, CompositeShapeCompositeShapeManifoldGenerator, BallConvexPolyhedronManifoldGenerator, PlaneBallManifoldGenerator, ContactManifoldGenerator, CompositeShapeShapeManifoldGenerator","parent":{"krate":0,"index":870}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/mod.rs","byte_start":97463,"byte_end":97464,"line_start":3,"line_end":3,"column_start":28,"column_end":29},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":870}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/mod.rs","byte_start":97463,"byte_end":97464,"line_start":3,"line_end":3,"column_start":28,"column_end":29},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":870}},{"kind":"Use","ref_id":{"krate":0,"index":899},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/mod.rs","byte_start":97721,"byte_end":97731,"line_start":4,"line_end":4,"column_start":29,"column_end":39},"alias_span":null,"name":"BroadPhase","value":"","parent":{"krate":0,"index":876}},{"kind":"Use","ref_id":{"krate":0,"index":894},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/mod.rs","byte_start":97733,"byte_end":97762,"line_start":4,"line_end":4,"column_start":41,"column_end":70},"alias_span":null,"name":"BroadPhaseInterferenceHandler","value":"","parent":{"krate":0,"index":876}},{"kind":"Use","ref_id":{"krate":0,"index":6845},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/mod.rs","byte_start":97764,"byte_end":97785,"line_start":4,"line_end":4,"column_start":72,"column_end":93},"alias_span":null,"name":"BroadPhaseProxyHandle","value":"","parent":{"krate":0,"index":876}},{"kind":"Use","ref_id":{"krate":0,"index":922},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/mod.rs","byte_start":97827,"byte_end":97847,"line_start":5,"line_end":5,"column_start":40,"column_end":60},"alias_span":null,"name":"BroadPhasePairFilter","value":"","parent":{"krate":0,"index":876}},{"kind":"Use","ref_id":{"krate":0,"index":974},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/mod.rs","byte_start":97881,"byte_end":97895,"line_start":6,"line_end":6,"column_start":33,"column_end":47},"alias_span":null,"name":"DBVTBroadPhase","value":"","parent":{"krate":0,"index":876}},{"kind":"Use","ref_id":{"krate":0,"index":1118},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/mod.rs","byte_start":118339,"byte_end":118366,"line_start":4,"line_end":4,"column_start":5,"column_end":32},"alias_span":null,"name":"first_interference_with_ray","value":"","parent":{"krate":0,"index":1017}},{"kind":"Use","ref_id":{"krate":0,"index":1097},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/mod.rs","byte_start":118368,"byte_end":118391,"line_start":4,"line_end":4,"column_start":34,"column_end":57},"alias_span":null,"name":"interferences_with_aabb","value":"","parent":{"krate":0,"index":1017}},{"kind":"Use","ref_id":{"krate":0,"index":1075},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/mod.rs","byte_start":118393,"byte_end":118417,"line_start":4,"line_end":4,"column_start":59,"column_end":83},"alias_span":null,"name":"interferences_with_point","value":"","parent":{"krate":0,"index":1017}},{"kind":"Use","ref_id":{"krate":0,"index":1052},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/mod.rs","byte_start":118423,"byte_end":118445,"line_start":5,"line_end":5,"column_start":5,"column_end":27},"alias_span":null,"name":"interferences_with_ray","value":"","parent":{"krate":0,"index":1017}},{"kind":"Use","ref_id":{"krate":0,"index":6896},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/mod.rs","byte_start":118447,"byte_end":118471,"line_start":5,"line_end":5,"column_start":29,"column_end":53},"alias_span":null,"name":"FirstInterferenceWithRay","value":"","parent":{"krate":0,"index":1017}},{"kind":"Use","ref_id":{"krate":0,"index":1103},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/mod.rs","byte_start":118473,"byte_end":118494,"line_start":5,"line_end":5,"column_start":55,"column_end":76},"alias_span":null,"name":"InterferencesWithAABB","value":"","parent":{"krate":0,"index":1017}},{"kind":"Use","ref_id":{"krate":0,"index":1081},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/mod.rs","byte_start":118500,"byte_end":118522,"line_start":6,"line_end":6,"column_start":5,"column_end":27},"alias_span":null,"name":"InterferencesWithPoint","value":"","parent":{"krate":0,"index":1017}},{"kind":"Use","ref_id":{"krate":0,"index":1058},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/mod.rs","byte_start":118524,"byte_end":118544,"line_start":6,"line_end":6,"column_start":29,"column_end":49},"alias_span":null,"name":"InterferencesWithRay","value":"","parent":{"krate":0,"index":1017}},{"kind":"Use","ref_id":{"krate":0,"index":1146},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/mod.rs","byte_start":118570,"byte_end":118584,"line_start":9,"line_end":9,"column_start":5,"column_end":19},"alias_span":null,"name":"create_proxies","value":"","parent":{"krate":0,"index":1017}},{"kind":"Use","ref_id":{"krate":0,"index":1162},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/mod.rs","byte_start":118586,"byte_end":118605,"line_start":9,"line_end":9,"column_start":21,"column_end":40},"alias_span":null,"name":"default_broad_phase","value":"","parent":{"krate":0,"index":1017}},{"kind":"Use","ref_id":{"krate":0,"index":1165},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/mod.rs","byte_start":118607,"byte_end":118632,"line_start":9,"line_end":9,"column_start":42,"column_end":67},"alias_span":null,"name":"default_interaction_graph","value":"","parent":{"krate":0,"index":1017}},{"kind":"Use","ref_id":{"krate":0,"index":1159},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/mod.rs","byte_start":118634,"byte_end":118654,"line_start":9,"line_end":9,"column_start":69,"column_end":89},"alias_span":null,"name":"default_narrow_phase","value":"","parent":{"krate":0,"index":1017}},{"kind":"Use","ref_id":{"krate":0,"index":1152},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/mod.rs","byte_start":118660,"byte_end":118674,"line_start":10,"line_end":10,"column_start":5,"column_end":19},"alias_span":null,"name":"remove_proxies","value":"","parent":{"krate":0,"index":1017}},{"kind":"Use","ref_id":{"krate":0,"index":1211},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/mod.rs","byte_start":118696,"byte_end":118716,"line_start":12,"line_end":12,"column_start":18,"column_end":38},"alias_span":null,"name":"perform_all_pipeline","value":"","parent":{"krate":0,"index":1017}},{"kind":"Use","ref_id":{"krate":0,"index":1202},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/mod.rs","byte_start":118718,"byte_end":118737,"line_start":12,"line_end":12,"column_start":40,"column_end":59},"alias_span":null,"name":"perform_broad_phase","value":"","parent":{"krate":0,"index":1017}},{"kind":"Use","ref_id":{"krate":0,"index":1208},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/mod.rs","byte_start":118739,"byte_end":118759,"line_start":12,"line_end":12,"column_start":61,"column_end":81},"alias_span":null,"name":"perform_narrow_phase","value":"","parent":{"krate":0,"index":1017}},{"kind":"Use","ref_id":{"krate":0,"index":1668},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/mod.rs","byte_start":135846,"byte_end":135877,"line_start":4,"line_end":4,"column_start":34,"column_end":65},"alias_span":null,"name":"TriMeshTriMeshManifoldGenerator","value":"","parent":{"krate":0,"index":1217}},{"kind":"Use","ref_id":{"krate":0,"index":6908},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/mod.rs","byte_start":135933,"byte_end":135958,"line_start":7,"line_end":7,"column_start":5,"column_end":30},"alias_span":null,"name":"BallBallManifoldGenerator","value":"","parent":{"krate":0,"index":1217}},{"kind":"Use","ref_id":{"krate":0,"index":6914},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/mod.rs","byte_start":135960,"byte_end":135997,"line_start":7,"line_end":7,"column_start":32,"column_end":69},"alias_span":null,"name":"BallConvexPolyhedronManifoldGenerator","value":"","parent":{"krate":0,"index":1217}},{"kind":"Use","ref_id":{"krate":0,"index":1345},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/mod.rs","byte_start":136003,"byte_end":136034,"line_start":8,"line_end":8,"column_start":5,"column_end":36},"alias_span":null,"name":"CapsuleCapsuleManifoldGenerator","value":"","parent":{"krate":0,"index":1217}},{"kind":"Use","ref_id":{"krate":0,"index":1371},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/mod.rs","byte_start":136036,"byte_end":136065,"line_start":8,"line_end":8,"column_start":38,"column_end":67},"alias_span":null,"name":"CapsuleShapeManifoldGenerator","value":"","parent":{"krate":0,"index":1217}},{"kind":"Use","ref_id":{"krate":0,"index":1401},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/mod.rs","byte_start":136071,"byte_end":136116,"line_start":9,"line_end":9,"column_start":5,"column_end":50},"alias_span":null,"name":"CompositeShapeCompositeShapeManifoldGenerator","value":"","parent":{"krate":0,"index":1217}},{"kind":"Use","ref_id":{"krate":0,"index":1445},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/mod.rs","byte_start":136118,"byte_end":136154,"line_start":9,"line_end":9,"column_start":52,"column_end":88},"alias_span":null,"name":"CompositeShapeShapeManifoldGenerator","value":"","parent":{"krate":0,"index":1217}},{"kind":"Use","ref_id":{"krate":0,"index":1475},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/mod.rs","byte_start":136160,"byte_end":136176,"line_start":10,"line_end":10,"column_start":5,"column_end":21},"alias_span":null,"name":"ContactAlgorithm","value":"","parent":{"krate":0,"index":1217}},{"kind":"Use","ref_id":{"krate":0,"index":1477},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/mod.rs","byte_start":136178,"byte_end":136195,"line_start":10,"line_end":10,"column_start":23,"column_end":40},"alias_span":null,"name":"ContactDispatcher","value":"","parent":{"krate":0,"index":1217}},{"kind":"Use","ref_id":{"krate":0,"index":1471},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/mod.rs","byte_start":136197,"byte_end":136221,"line_start":10,"line_end":10,"column_start":42,"column_end":66},"alias_span":null,"name":"ContactManifoldGenerator","value":"","parent":{"krate":0,"index":1217}},{"kind":"Use","ref_id":{"krate":0,"index":6921},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/mod.rs","byte_start":136227,"byte_end":136276,"line_start":11,"line_end":11,"column_start":5,"column_end":54},"alias_span":null,"name":"ConvexPolyhedronConvexPolyhedronManifoldGenerator","value":"","parent":{"krate":0,"index":1217}},{"kind":"Use","ref_id":{"krate":0,"index":1534},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/mod.rs","byte_start":136278,"byte_end":136302,"line_start":11,"line_end":11,"column_start":56,"column_end":80},"alias_span":null,"name":"DefaultContactDispatcher","value":"","parent":{"krate":0,"index":1217}},{"kind":"Use","ref_id":{"krate":0,"index":1563},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/mod.rs","byte_start":136308,"byte_end":136341,"line_start":12,"line_end":12,"column_start":5,"column_end":38},"alias_span":null,"name":"HeightFieldShapeManifoldGenerator","value":"","parent":{"krate":0,"index":1217}},{"kind":"Use","ref_id":{"krate":0,"index":6933},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/mod.rs","byte_start":136343,"byte_end":136369,"line_start":12,"line_end":12,"column_start":40,"column_end":66},"alias_span":null,"name":"PlaneBallManifoldGenerator","value":"","parent":{"krate":0,"index":1217}},{"kind":"Use","ref_id":{"krate":0,"index":6940},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/mod.rs","byte_start":136375,"byte_end":136413,"line_start":13,"line_end":13,"column_start":5,"column_end":43},"alias_span":null,"name":"PlaneConvexPolyhedronManifoldGenerator","value":"","parent":{"krate":0,"index":1217}},{"kind":"Use","ref_id":{"krate":0,"index":6947},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/mod.rs","byte_start":136441,"byte_end":136453,"line_start":15,"line_end":15,"column_start":24,"column_end":36},"alias_span":null,"name":"ContactEvent","value":"","parent":{"krate":0,"index":1217}},{"kind":"Use","ref_id":{"krate":0,"index":1698},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/mod.rs","byte_start":136455,"byte_end":136468,"line_start":15,"line_end":15,"column_start":38,"column_end":51},"alias_span":null,"name":"ContactEvents","value":"","parent":{"krate":0,"index":1217}},{"kind":"Use","ref_id":{"krate":0,"index":1695},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/mod.rs","byte_start":136470,"byte_end":136479,"line_start":15,"line_end":15,"column_start":53,"column_end":62},"alias_span":null,"name":"EventPool","value":"","parent":{"krate":0,"index":1217}},{"kind":"Use","ref_id":{"krate":0,"index":6969},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/mod.rs","byte_start":136481,"byte_end":136495,"line_start":15,"line_end":15,"column_start":64,"column_end":78},"alias_span":null,"name":"ProximityEvent","value":"","parent":{"krate":0,"index":1217}},{"kind":"Use","ref_id":{"krate":0,"index":1700},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/mod.rs","byte_start":136497,"byte_end":136512,"line_start":15,"line_end":15,"column_start":80,"column_end":95},"alias_span":null,"name":"ProximityEvents","value":"","parent":{"krate":0,"index":1217}},{"kind":"Use","ref_id":{"krate":0,"index":1736},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/mod.rs","byte_start":136554,"byte_end":136579,"line_start":17,"line_end":17,"column_start":5,"column_end":30},"alias_span":null,"name":"CollisionObjectGraphIndex","value":"","parent":{"krate":0,"index":1217}},{"kind":"Use","ref_id":{"krate":0,"index":1738},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/mod.rs","byte_start":136581,"byte_end":136592,"line_start":17,"line_end":17,"column_start":32,"column_end":43},"alias_span":null,"name":"Interaction","value":"","parent":{"krate":0,"index":1217}},{"kind":"Use","ref_id":{"krate":0,"index":1752},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/mod.rs","byte_start":136594,"byte_end":136610,"line_start":17,"line_end":17,"column_start":45,"column_end":61},"alias_span":null,"name":"InteractionGraph","value":"","parent":{"krate":0,"index":1217}},{"kind":"Use","ref_id":{"krate":0,"index":1737},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/mod.rs","byte_start":136612,"byte_end":136637,"line_start":17,"line_end":17,"column_start":63,"column_end":88},"alias_span":null,"name":"TemporaryInteractionIndex","value":"","parent":{"krate":0,"index":1217}},{"kind":"Use","ref_id":{"krate":0,"index":1844},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/mod.rs","byte_start":136670,"byte_end":136681,"line_start":19,"line_end":19,"column_start":29,"column_end":40},"alias_span":null,"name":"NarrowPhase","value":"","parent":{"krate":0,"index":1217}},{"kind":"Use","ref_id":{"krate":0,"index":1901},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/mod.rs","byte_start":136738,"byte_end":136763,"line_start":22,"line_end":22,"column_start":5,"column_end":30},"alias_span":null,"name":"BallBallProximityDetector","value":"","parent":{"krate":0,"index":1217}},{"kind":"Use","ref_id":{"krate":0,"index":1931},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/mod.rs","byte_start":136765,"byte_end":136801,"line_start":22,"line_end":22,"column_start":32,"column_end":68},"alias_span":null,"name":"CompositeShapeShapeProximityDetector","value":"","parent":{"krate":0,"index":1217}},{"kind":"Use","ref_id":{"krate":0,"index":1965},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/mod.rs","byte_start":136803,"byte_end":136829,"line_start":22,"line_end":22,"column_start":70,"column_end":96},"alias_span":null,"name":"DefaultProximityDispatcher","value":"","parent":{"krate":0,"index":1217}},{"kind":"Use","ref_id":{"krate":0,"index":6983},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/mod.rs","byte_start":136835,"byte_end":136867,"line_start":23,"line_end":23,"column_start":5,"column_end":37},"alias_span":null,"name":"PlaneSupportMapProximityDetector","value":"","parent":{"krate":0,"index":1217}},{"kind":"Use","ref_id":{"krate":0,"index":2002},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/mod.rs","byte_start":136869,"byte_end":136887,"line_start":23,"line_end":23,"column_start":39,"column_end":57},"alias_span":null,"name":"ProximityAlgorithm","value":"","parent":{"krate":0,"index":1217}},{"kind":"Use","ref_id":{"krate":0,"index":1999},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/mod.rs","byte_start":136889,"byte_end":136906,"line_start":23,"line_end":23,"column_start":59,"column_end":76},"alias_span":null,"name":"ProximityDetector","value":"","parent":{"krate":0,"index":1217}},{"kind":"Use","ref_id":{"krate":0,"index":2004},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/mod.rs","byte_start":136908,"byte_end":136927,"line_start":23,"line_end":23,"column_start":78,"column_end":97},"alias_span":null,"name":"ProximityDispatcher","value":"","parent":{"krate":0,"index":1217}},{"kind":"Use","ref_id":{"krate":0,"index":6986},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/mod.rs","byte_start":136933,"byte_end":136965,"line_start":24,"line_end":24,"column_start":5,"column_end":37},"alias_span":null,"name":"SupportMapPlaneProximityDetector","value":"","parent":{"krate":0,"index":1217}},{"kind":"Use","ref_id":{"krate":0,"index":6990},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/mod.rs","byte_start":136967,"byte_end":137004,"line_start":24,"line_end":24,"column_start":39,"column_end":76},"alias_span":null,"name":"SupportMapSupportMapProximityDetector","value":"","parent":{"krate":0,"index":1217}},{"kind":"Use","ref_id":{"krate":0,"index":6908},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/mod.rs","byte_start":137266,"byte_end":137291,"line_start":2,"line_end":2,"column_start":45,"column_end":70},"alias_span":null,"name":"BallBallManifoldGenerator","value":"","parent":{"krate":0,"index":1256}},{"kind":"Use","ref_id":{"krate":0,"index":6914},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/mod.rs","byte_start":137350,"byte_end":137387,"line_start":3,"line_end":3,"column_start":58,"column_end":95},"alias_span":null,"name":"BallConvexPolyhedronManifoldGenerator","value":"","parent":{"krate":0,"index":1256}},{"kind":"Use","ref_id":{"krate":0,"index":1345},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/mod.rs","byte_start":137439,"byte_end":137470,"line_start":4,"line_end":4,"column_start":51,"column_end":82},"alias_span":null,"name":"CapsuleCapsuleManifoldGenerator","value":"","parent":{"krate":0,"index":1256}},{"kind":"Use","ref_id":{"krate":0,"index":1371},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/mod.rs","byte_start":137520,"byte_end":137549,"line_start":5,"line_end":5,"column_start":49,"column_end":78},"alias_span":null,"name":"CapsuleShapeManifoldGenerator","value":"","parent":{"krate":0,"index":1256}},{"kind":"Use","ref_id":{"krate":0,"index":1401},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/mod.rs","byte_start":137617,"byte_end":137662,"line_start":6,"line_end":6,"column_start":67,"column_end":112},"alias_span":null,"name":"CompositeShapeCompositeShapeManifoldGenerator","value":"","parent":{"krate":0,"index":1256}},{"kind":"Use","ref_id":{"krate":0,"index":1445},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/mod.rs","byte_start":137720,"byte_end":137756,"line_start":7,"line_end":7,"column_start":57,"column_end":93},"alias_span":null,"name":"CompositeShapeShapeManifoldGenerator","value":"","parent":{"krate":0,"index":1256}},{"kind":"Use","ref_id":{"krate":0,"index":1475},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/mod.rs","byte_start":137821,"byte_end":137837,"line_start":10,"line_end":10,"column_start":5,"column_end":21},"alias_span":null,"name":"ContactAlgorithm","value":"","parent":{"krate":0,"index":1256}},{"kind":"Use","ref_id":{"krate":0,"index":1477},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/mod.rs","byte_start":137839,"byte_end":137856,"line_start":10,"line_end":10,"column_start":23,"column_end":40},"alias_span":null,"name":"ContactDispatcher","value":"","parent":{"krate":0,"index":1256}},{"kind":"Use","ref_id":{"krate":0,"index":1471},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/mod.rs","byte_start":137858,"byte_end":137882,"line_start":10,"line_end":10,"column_start":42,"column_end":66},"alias_span":null,"name":"ContactManifoldGenerator","value":"","parent":{"krate":0,"index":1256}},{"kind":"Use","ref_id":{"krate":0,"index":6921},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/mod.rs","byte_start":137957,"byte_end":138006,"line_start":12,"line_end":12,"column_start":71,"column_end":120},"alias_span":null,"name":"ConvexPolyhedronConvexPolyhedronManifoldGenerator","value":"","parent":{"krate":0,"index":1256}},{"kind":"Use","ref_id":{"krate":0,"index":1534},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/mod.rs","byte_start":138050,"byte_end":138074,"line_start":13,"line_end":13,"column_start":43,"column_end":67},"alias_span":null,"name":"DefaultContactDispatcher","value":"","parent":{"krate":0,"index":1256}},{"kind":"Use","ref_id":{"krate":0,"index":1563},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/mod.rs","byte_start":138128,"byte_end":138161,"line_start":14,"line_end":14,"column_start":53,"column_end":86},"alias_span":null,"name":"HeightFieldShapeManifoldGenerator","value":"","parent":{"krate":0,"index":1256}},{"kind":"Use","ref_id":{"krate":0,"index":6933},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/mod.rs","byte_start":138208,"byte_end":138234,"line_start":15,"line_end":15,"column_start":46,"column_end":72},"alias_span":null,"name":"PlaneBallManifoldGenerator","value":"","parent":{"krate":0,"index":1256}},{"kind":"Use","ref_id":{"krate":0,"index":6940},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/mod.rs","byte_start":138294,"byte_end":138332,"line_start":16,"line_end":16,"column_start":59,"column_end":97},"alias_span":null,"name":"PlaneConvexPolyhedronManifoldGenerator","value":"","parent":{"krate":0,"index":1256}},{"kind":"Use","ref_id":{"krate":0,"index":1668},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/mod.rs","byte_start":138409,"byte_end":138440,"line_start":18,"line_end":18,"column_start":51,"column_end":82},"alias_span":null,"name":"TriMeshTriMeshManifoldGenerator","value":"","parent":{"krate":0,"index":1256}},{"kind":"Use","ref_id":{"krate":0,"index":1901},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/mod.rs","byte_start":245738,"byte_end":245763,"line_start":3,"line_end":3,"column_start":45,"column_end":70},"alias_span":null,"name":"BallBallProximityDetector","value":"","parent":{"krate":0,"index":1875}},{"kind":"Use","ref_id":{"krate":0,"index":1931},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/mod.rs","byte_start":245821,"byte_end":245857,"line_start":4,"line_end":4,"column_start":57,"column_end":93},"alias_span":null,"name":"CompositeShapeShapeProximityDetector","value":"","parent":{"krate":0,"index":1875}},{"kind":"Use","ref_id":{"krate":0,"index":1965},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/mod.rs","byte_start":245903,"byte_end":245929,"line_start":5,"line_end":5,"column_start":45,"column_end":71},"alias_span":null,"name":"DefaultProximityDispatcher","value":"","parent":{"krate":0,"index":1875}},{"kind":"Use","ref_id":{"krate":0,"index":6983},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/mod.rs","byte_start":245989,"byte_end":246021,"line_start":7,"line_end":7,"column_start":5,"column_end":37},"alias_span":null,"name":"PlaneSupportMapProximityDetector","value":"","parent":{"krate":0,"index":1875}},{"kind":"Use","ref_id":{"krate":0,"index":6986},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/mod.rs","byte_start":246023,"byte_end":246055,"line_start":7,"line_end":7,"column_start":39,"column_end":71},"alias_span":null,"name":"SupportMapPlaneProximityDetector","value":"","parent":{"krate":0,"index":1875}},{"kind":"Use","ref_id":{"krate":0,"index":2002},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/mod.rs","byte_start":246095,"byte_end":246113,"line_start":9,"line_end":9,"column_start":36,"column_end":54},"alias_span":null,"name":"ProximityAlgorithm","value":"","parent":{"krate":0,"index":1875}},{"kind":"Use","ref_id":{"krate":0,"index":1999},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/mod.rs","byte_start":246115,"byte_end":246132,"line_start":9,"line_end":9,"column_start":56,"column_end":73},"alias_span":null,"name":"ProximityDetector","value":"","parent":{"krate":0,"index":1875}},{"kind":"Use","ref_id":{"krate":0,"index":2004},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/mod.rs","byte_start":246134,"byte_end":246153,"line_start":9,"line_end":9,"column_start":75,"column_end":94},"alias_span":null,"name":"ProximityDispatcher","value":"","parent":{"krate":0,"index":1875}},{"kind":"Use","ref_id":{"krate":0,"index":6990},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/mod.rs","byte_start":246214,"byte_end":246251,"line_start":10,"line_end":10,"column_start":59,"column_end":96},"alias_span":null,"name":"SupportMapSupportMapProximityDetector","value":"","parent":{"krate":0,"index":1875}},{"kind":"Use","ref_id":{"krate":0,"index":6997},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/mod.rs","byte_start":260909,"byte_end":260924,"line_start":3,"line_end":3,"column_start":34,"column_end":49},"alias_span":null,"name":"CollisionGroups","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":2092},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/mod.rs","byte_start":260926,"byte_end":260951,"line_start":3,"line_end":3,"column_start":51,"column_end":76},"alias_span":null,"name":"CollisionGroupsPairFilter","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":2134},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/mod.rs","byte_start":260992,"byte_end":261007,"line_start":5,"line_end":5,"column_start":5,"column_end":20},"alias_span":null,"name":"CollisionObject","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":2120},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/mod.rs","byte_start":261009,"byte_end":261027,"line_start":5,"line_end":5,"column_start":22,"column_end":40},"alias_span":null,"name":"CollisionObjectRef","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":7114},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/mod.rs","byte_start":261029,"byte_end":261054,"line_start":5,"line_end":5,"column_start":42,"column_end":67},"alias_span":null,"name":"CollisionObjectSlabHandle","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":7006},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/mod.rs","byte_start":261056,"byte_end":261082,"line_start":5,"line_end":5,"column_start":69,"column_end":95},"alias_span":null,"name":"CollisionObjectUpdateFlags","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":2195},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/mod.rs","byte_start":261129,"byte_end":261150,"line_start":8,"line_end":8,"column_start":5,"column_end":26},"alias_span":null,"name":"CollisionObjectHandle","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":2198},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/mod.rs","byte_start":261152,"byte_end":261170,"line_start":8,"line_end":8,"column_start":28,"column_end":46},"alias_span":null,"name":"CollisionObjectSet","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":2213},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/mod.rs","byte_start":261172,"byte_end":261191,"line_start":8,"line_end":8,"column_start":48,"column_end":67},"alias_span":null,"name":"CollisionObjectSlab","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":2241},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/mod.rs","byte_start":261193,"byte_end":261209,"line_start":8,"line_end":8,"column_start":69,"column_end":85},"alias_span":null,"name":"CollisionObjects","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":7140},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/mod.rs","byte_start":261240,"byte_end":261258,"line_start":10,"line_end":10,"column_start":27,"column_end":45},"alias_span":null,"name":"GeometricQueryType","value":"","parent":{"krate":0,"index":2028}},{"kind":"Use","ref_id":{"krate":0,"index":2680},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/mod.rs","byte_start":320951,"byte_end":320963,"line_start":3,"line_end":3,"column_start":24,"column_end":36},"alias_span":null,"name":"bezier_curve","value":"","parent":{"krate":0,"index":2409}},{"kind":"Use","ref_id":{"krate":0,"index":2676},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/mod.rs","byte_start":320965,"byte_end":320980,"line_start":3,"line_end":3,"column_start":38,"column_end":53},"alias_span":null,"name":"bezier_curve_at","value":"","parent":{"krate":0,"index":2409}},{"kind":"Use","ref_id":{"krate":0,"index":2682},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/mod.rs","byte_start":321031,"byte_end":321045,"line_start":5,"line_end":5,"column_start":24,"column_end":38},"alias_span":null,"name":"bezier_surface","value":"","parent":{"krate":0,"index":2409}},{"kind":"Use","ref_id":{"krate":0,"index":2678},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/mod.rs","byte_start":321047,"byte_end":321064,"line_start":5,"line_end":5,"column_start":40,"column_end":57},"alias_span":null,"name":"bezier_surface_at","value":"","parent":{"krate":0,"index":2409}},{"kind":"Use","ref_id":{"krate":0,"index":2693},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/mod.rs","byte_start":321115,"byte_end":321122,"line_start":7,"line_end":7,"column_start":24,"column_end":31},"alias_span":null,"name":"capsule","value":"","parent":{"krate":0,"index":2409}},{"kind":"Use","ref_id":{"krate":0,"index":2705},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/mod.rs","byte_start":321170,"byte_end":321174,"line_start":9,"line_end":9,"column_start":22,"column_end":26},"alias_span":null,"name":"cone","value":"","parent":{"krate":0,"index":2409}},{"kind":"Use","ref_id":{"krate":0,"index":2707},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/mod.rs","byte_start":321176,"byte_end":321185,"line_start":9,"line_end":9,"column_start":28,"column_end":37},"alias_span":null,"name":"unit_cone","value":"","parent":{"krate":0,"index":2409}},{"kind":"Use","ref_id":{"krate":0,"index":2720},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/mod.rs","byte_start":321236,"byte_end":321242,"line_start":11,"line_end":11,"column_start":24,"column_end":30},"alias_span":null,"name":"cuboid","value":"","parent":{"krate":0,"index":2409}},{"kind":"Use","ref_id":{"krate":0,"index":2722},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/mod.rs","byte_start":321244,"byte_end":321255,"line_start":11,"line_end":11,"column_start":32,"column_end":43},"alias_span":null,"name":"unit_cuboid","value":"","parent":{"krate":0,"index":2409}},{"kind":"Use","ref_id":{"krate":0,"index":2734},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/mod.rs","byte_start":321384,"byte_end":321392,"line_start":15,"line_end":15,"column_start":26,"column_end":34},"alias_span":null,"name":"cylinder","value":"","parent":{"krate":0,"index":2409}},{"kind":"Use","ref_id":{"krate":0,"index":2736},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/mod.rs","byte_start":321394,"byte_end":321407,"line_start":15,"line_end":15,"column_start":36,"column_end":49},"alias_span":null,"name":"unit_cylinder","value":"","parent":{"krate":0,"index":2409}},{"kind":"Use","ref_id":{"krate":0,"index":2751},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/mod.rs","byte_start":321515,"byte_end":321519,"line_start":19,"line_end":19,"column_start":22,"column_end":26},"alias_span":null,"name":"quad","value":"","parent":{"krate":0,"index":2409}},{"kind":"Use","ref_id":{"krate":0,"index":2753},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/mod.rs","byte_start":321521,"byte_end":321539,"line_start":19,"line_end":19,"column_start":28,"column_end":46},"alias_span":null,"name":"quad_with_vertices","value":"","parent":{"krate":0,"index":2409}},{"kind":"Use","ref_id":{"krate":0,"index":2755},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/mod.rs","byte_start":321541,"byte_end":321550,"line_start":19,"line_end":19,"column_start":48,"column_end":57},"alias_span":null,"name":"unit_quad","value":"","parent":{"krate":0,"index":2409}},{"kind":"Use","ref_id":{"krate":0,"index":2770},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/mod.rs","byte_start":321671,"byte_end":321677,"line_start":23,"line_end":23,"column_start":24,"column_end":30},"alias_span":null,"name":"sphere","value":"","parent":{"krate":0,"index":2409}},{"kind":"Use","ref_id":{"krate":0,"index":2780},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/mod.rs","byte_start":321679,"byte_end":321694,"line_start":23,"line_end":23,"column_start":32,"column_end":47},"alias_span":null,"name":"unit_hemisphere","value":"","parent":{"krate":0,"index":2409}},{"kind":"Use","ref_id":{"krate":0,"index":2772},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/mod.rs","byte_start":321696,"byte_end":321707,"line_start":23,"line_end":23,"column_start":49,"column_end":60},"alias_span":null,"name":"unit_sphere","value":"","parent":{"krate":0,"index":2409}},{"kind":"Use","ref_id":{"krate":0,"index":7163},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/mod.rs","byte_start":321759,"byte_end":321770,"line_start":25,"line_end":25,"column_start":25,"column_end":36},"alias_span":null,"name":"IndexBuffer","value":"","parent":{"krate":0,"index":2409}},{"kind":"Use","ref_id":{"krate":0,"index":7174},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/mod.rs","byte_start":321772,"byte_end":321779,"line_start":25,"line_end":25,"column_start":38,"column_end":45},"alias_span":null,"name":"TriMesh","value":"","parent":{"krate":0,"index":2409}},{"kind":"Use","ref_id":{"krate":0,"index":2457},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/mod.rs","byte_start":322157,"byte_end":322169,"line_start":3,"line_end":3,"column_start":37,"column_end":49},"alias_span":null,"name":"ArrowheadCap","value":"","parent":{"krate":0,"index":2437}},{"kind":"Use","ref_id":{"krate":0,"index":2477},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/mod.rs","byte_start":322200,"byte_end":322205,"line_start":4,"line_end":4,"column_start":30,"column_end":35},"alias_span":null,"name":"NoCap","value":"","parent":{"krate":0,"index":2437}},{"kind":"Use","ref_id":{"krate":0,"index":2507},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/mod.rs","byte_start":322235,"byte_end":322247,"line_start":5,"line_end":5,"column_start":29,"column_end":41},"alias_span":null,"name":"CurveSampler","value":"","parent":{"krate":0,"index":2437}},{"kind":"Use","ref_id":{"krate":0,"index":2491},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/mod.rs","byte_start":322249,"byte_end":322259,"line_start":5,"line_end":5,"column_start":43,"column_end":53},"alias_span":null,"name":"PathSample","value":"","parent":{"krate":0,"index":2437}},{"kind":"Use","ref_id":{"krate":0,"index":2510},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/mod.rs","byte_start":322261,"byte_end":322274,"line_start":5,"line_end":5,"column_start":55,"column_end":68},"alias_span":null,"name":"StrokePattern","value":"","parent":{"krate":0,"index":2437}},{"kind":"Use","ref_id":{"krate":0,"index":2522},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/mod.rs","byte_start":322313,"byte_end":322325,"line_start":6,"line_end":6,"column_start":37,"column_end":49},"alias_span":null,"name":"PolylinePath","value":"","parent":{"krate":0,"index":2437}},{"kind":"Use","ref_id":{"krate":0,"index":2563},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/mod.rs","byte_start":322367,"byte_end":322388,"line_start":7,"line_end":7,"column_start":41,"column_end":62},"alias_span":null,"name":"PolylineCompatibleCap","value":"","parent":{"krate":0,"index":2437}},{"kind":"Use","ref_id":{"krate":0,"index":2554},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/mod.rs","byte_start":322390,"byte_end":322405,"line_start":7,"line_end":7,"column_start":64,"column_end":79},"alias_span":null,"name":"PolylinePattern","value":"","parent":{"krate":0,"index":2437}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/mod.rs","byte_start":384089,"byte_end":384090,"line_start":28,"line_end":28,"column_start":31,"column_end":32},"alias_span":null,"name":"*","value":"closest_points_ball_ball, closest_points_line_line, ClosestPoints, closest_points_support_map_plane, closest_points_composite_shape_shape, closest_points_support_map_support_map, closest_points_segment_segment, closest_points, closest_points_shape_composite_shape, closest_points_support_map_support_map_with_params, closest_points_segment_segment_with_locations_nD, closest_points_plane_support_map","parent":{"krate":0,"index":2783}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/mod.rs","byte_start":384089,"byte_end":384090,"line_start":28,"line_end":28,"column_start":31,"column_end":32},"alias_span":null,"name":"*","value":"ContactPrediction, contact_support_map_plane, contact_composite_shape_shape, ContactTrackingMode, TrackedContact, NeighborhoodGeometry, ContactManifold, contact_ball_ball, contact_support_map_support_map, contact_plane_support_map, contact_convex_polyhedron_ball, LocalShapeApproximation, ContactPreprocessor, ContactKinematic, Contact, ContactId, contact, contact_shape_composite_shape, contact_support_map_support_map_with_params, contact_ball_convex_polyhedron","parent":{"krate":0,"index":2783}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/mod.rs","byte_start":384089,"byte_end":384090,"line_start":28,"line_end":28,"column_start":31,"column_end":32},"alias_span":null,"name":"*","value":"distance_composite_shape_shape, distance_plane_support_map, distance_ball_ball, distance_support_map_support_map, distance_shape_composite_shape, distance, distance_support_map_plane","parent":{"krate":0,"index":2783}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/mod.rs","byte_start":384089,"byte_end":384090,"line_start":28,"line_end":28,"column_start":31,"column_end":32},"alias_span":null,"name":"*","value":"Unsupported","parent":{"krate":0,"index":2783}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/mod.rs","byte_start":384089,"byte_end":384090,"line_start":28,"line_end":28,"column_start":31,"column_end":32},"alias_span":null,"name":"*","value":"nonlinear_time_of_impact_composite_shape_shape, nonlinear_time_of_impact_support_map_support_map, nonlinear_time_of_impact_ball_ball, nonlinear_time_of_impact, nonlinear_time_of_impact_shape_composite_shape, nonlinear_time_of_impact_support_map_support_map_with_closest_points_function","parent":{"krate":0,"index":2783}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/mod.rs","byte_start":384089,"byte_end":384090,"line_start":28,"line_end":28,"column_start":31,"column_end":32},"alias_span":null,"name":"*","value":"PointProjection, PointQueryWithLocation, PointQuery","parent":{"krate":0,"index":2783}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/mod.rs","byte_start":384089,"byte_end":384090,"line_start":28,"line_end":28,"column_start":31,"column_end":32},"alias_span":null,"name":"*","value":"proximity_ball_ball, proximity_plane_support_map, proximity_support_map_support_map_with_params, Proximity, proximity, proximity_support_map_support_map, proximity_composite_shape_shape, proximity_shape_composite_shape, proximity_support_map_plane","parent":{"krate":0,"index":2783}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/mod.rs","byte_start":384089,"byte_end":384090,"line_start":28,"line_end":28,"column_start":31,"column_end":32},"alias_span":null,"name":"*","value":"RayCast, ray_intersection_with_triangle, ray_toi_with_ball, ray_toi_with_plane, ray_intersection_with_support_map_with_params, Ray, line_toi_with_plane, RayIntersection","parent":{"krate":0,"index":2783}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/mod.rs","byte_start":384089,"byte_end":384090,"line_start":28,"line_end":28,"column_start":31,"column_end":32},"alias_span":null,"name":"*","value":"time_of_impact, TOI, time_of_impact_support_map_plane, time_of_impact_composite_shape_shape, TOIStatus, time_of_impact_support_map_support_map, time_of_impact_shape_composite_shape, time_of_impact_plane_support_map, time_of_impact_ball_ball","parent":{"krate":0,"index":2783}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/mod.rs","byte_start":384089,"byte_end":384090,"line_start":28,"line_end":28,"column_start":31,"column_end":32},"alias_span":null,"name":"*","value":"TOIDispatcher, DefaultTOIDispatcher","parent":{"krate":0,"index":2783}},{"kind":"Use","ref_id":{"krate":0,"index":7186},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/mod.rs","byte_start":384651,"byte_end":384659,"line_start":3,"line_end":3,"column_start":26,"column_end":34},"alias_span":null,"name":"CSOPoint","value":"","parent":{"krate":0,"index":2794}},{"kind":"Use","ref_id":{"krate":0,"index":2878},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/mod.rs","byte_start":384756,"byte_end":384759,"line_start":7,"line_end":7,"column_start":21,"column_end":24},"alias_span":null,"name":"EPA","value":"","parent":{"krate":0,"index":2794}},{"kind":"Use","ref_id":{"krate":0,"index":7264},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/mod.rs","byte_start":384891,"byte_end":384905,"line_start":11,"line_end":11,"column_start":33,"column_end":47},"alias_span":null,"name":"VoronoiSimplex","value":"","parent":{"krate":0,"index":2794}},{"kind":"Use","ref_id":{"krate":0,"index":4837},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/mod.rs","byte_start":670338,"byte_end":670368,"line_start":3,"line_end":3,"column_start":50,"column_end":80},"alias_span":null,"name":"AABBSetsInterferencesCollector","value":"","parent":{"krate":0,"index":4817}},{"kind":"Use","ref_id":{"krate":0,"index":4862},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/mod.rs","byte_start":670425,"byte_end":670461,"line_start":4,"line_end":4,"column_start":56,"column_end":92},"alias_span":null,"name":"BoundingVolumeInterferencesCollector","value":"","parent":{"krate":0,"index":4817}},{"kind":"Use","ref_id":{"krate":0,"index":4897},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/mod.rs","byte_start":670510,"byte_end":670538,"line_start":5,"line_end":5,"column_start":48,"column_end":76},"alias_span":null,"name":"CompositeClosestPointVisitor","value":"","parent":{"krate":0,"index":4817}},{"kind":"Use","ref_id":{"krate":0,"index":4927},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/mod.rs","byte_start":670588,"byte_end":670617,"line_start":6,"line_end":6,"column_start":49,"column_end":78},"alias_span":null,"name":"CompositePointContainmentTest","value":"","parent":{"krate":0,"index":4817}},{"kind":"Use","ref_id":{"krate":0,"index":4950},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/mod.rs","byte_start":670664,"byte_end":670691,"line_start":7,"line_end":7,"column_start":46,"column_end":73},"alias_span":null,"name":"PointInterferencesCollector","value":"","parent":{"krate":0,"index":4817}},{"kind":"Use","ref_id":{"krate":0,"index":4976},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/mod.rs","byte_start":670736,"byte_end":670761,"line_start":8,"line_end":8,"column_start":44,"column_end":69},"alias_span":null,"name":"RayInterferencesCollector","value":"","parent":{"krate":0,"index":4817}},{"kind":"Use","ref_id":{"krate":0,"index":5010},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/mod.rs","byte_start":670811,"byte_end":670839,"line_start":9,"line_end":9,"column_start":49,"column_end":77},"alias_span":null,"name":"RayIntersectionCostFnVisitor","value":"","parent":{"krate":0,"index":4817}},{"kind":"Use","ref_id":{"krate":0,"index":7634},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/mod.rs","byte_start":685089,"byte_end":685093,"line_start":3,"line_end":3,"column_start":21,"column_end":25},"alias_span":null,"name":"Ball","value":"","parent":{"krate":0,"index":5035}},{"kind":"Use","ref_id":{"krate":0,"index":7651},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/mod.rs","byte_start":685118,"byte_end":685125,"line_start":4,"line_end":4,"column_start":24,"column_end":31},"alias_span":null,"name":"Capsule","value":"","parent":{"krate":0,"index":5035}},{"kind":"Use","ref_id":{"krate":0,"index":5139},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/mod.rs","byte_start":685173,"byte_end":685187,"line_start":6,"line_end":6,"column_start":32,"column_end":46},"alias_span":null,"name":"CompositeShape","value":"","parent":{"krate":0,"index":5035}},{"kind":"Use","ref_id":{"krate":0,"index":7669},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/mod.rs","byte_start":685213,"byte_end":685221,"line_start":7,"line_end":7,"column_start":25,"column_end":33},"alias_span":null,"name":"Compound","value":"","parent":{"krate":0,"index":5035}},{"kind":"Use","ref_id":{"krate":0,"index":7678},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/mod.rs","byte_start":685268,"byte_end":685272,"line_start":9,"line_end":9,"column_start":21,"column_end":25},"alias_span":null,"name":"Cone","value":"","parent":{"krate":0,"index":5035}},{"kind":"Use","ref_id":{"krate":0,"index":7767},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/mod.rs","byte_start":685321,"byte_end":685331,"line_start":11,"line_end":11,"column_start":23,"column_end":33},"alias_span":null,"name":"ConvexHull","value":"","parent":{"krate":0,"index":5035}},{"kind":"Use","ref_id":{"krate":0,"index":7789},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/mod.rs","byte_start":685560,"byte_end":685573,"line_start":17,"line_end":17,"column_start":43,"column_end":56},"alias_span":null,"name":"ClippingCache","value":"","parent":{"krate":0,"index":5035}},{"kind":"Use","ref_id":{"krate":0,"index":7796},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/mod.rs","byte_start":685575,"byte_end":685597,"line_start":17,"line_end":17,"column_start":58,"column_end":80},"alias_span":null,"name":"ConvexPolygonalFeature","value":"","parent":{"krate":0,"index":5035}},{"kind":"Use","ref_id":{"krate":0,"index":5333},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/mod.rs","byte_start":685634,"byte_end":685650,"line_start":18,"line_end":18,"column_start":35,"column_end":51},"alias_span":null,"name":"ConvexPolyhedron","value":"","parent":{"krate":0,"index":5035}},{"kind":"Use","ref_id":{"krate":0,"index":7810},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/mod.rs","byte_start":685652,"byte_end":685661,"line_start":18,"line_end":18,"column_start":53,"column_end":62},"alias_span":null,"name":"FeatureId","value":"","parent":{"krate":0,"index":5035}},{"kind":"Use","ref_id":{"krate":0,"index":7837},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/mod.rs","byte_start":685686,"byte_end":685692,"line_start":19,"line_end":19,"column_start":23,"column_end":29},"alias_span":null,"name":"Cuboid","value":"","parent":{"krate":0,"index":5035}},{"kind":"Use","ref_id":{"krate":0,"index":7854},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/mod.rs","byte_start":685743,"byte_end":685751,"line_start":21,"line_end":21,"column_start":25,"column_end":33},"alias_span":null,"name":"Cylinder","value":"","parent":{"krate":0,"index":5035}},{"kind":"Use","ref_id":{"krate":0,"index":5396},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/mod.rs","byte_start":685786,"byte_end":685801,"line_start":22,"line_end":22,"column_start":34,"column_end":49},"alias_span":null,"name":"DeformableShape","value":"","parent":{"krate":0,"index":5035}},{"kind":"Use","ref_id":{"krate":0,"index":7872},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/mod.rs","byte_start":685803,"byte_end":685819,"line_start":22,"line_end":22,"column_start":51,"column_end":67},"alias_span":null,"name":"DeformationsType","value":"","parent":{"krate":0,"index":5035}},{"kind":"Use","ref_id":{"krate":0,"index":7996},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/mod.rs","byte_start":686024,"byte_end":686035,"line_start":28,"line_end":28,"column_start":30,"column_end":41},"alias_span":null,"name":"HeightField","value":"","parent":{"krate":0,"index":5035}},{"kind":"Use","ref_id":{"krate":0,"index":7893},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/mod.rs","byte_start":686037,"byte_end":686058,"line_start":28,"line_end":28,"column_start":43,"column_end":64},"alias_span":null,"name":"HeightFieldCellStatus","value":"","parent":{"krate":0,"index":5035}},{"kind":"Use","ref_id":{"krate":0,"index":8009},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/mod.rs","byte_start":686082,"byte_end":686087,"line_start":29,"line_end":29,"column_start":22,"column_end":27},"alias_span":null,"name":"Plane","value":"","parent":{"krate":0,"index":5035}},{"kind":"Use","ref_id":{"krate":0,"index":8047},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/mod.rs","byte_start":686113,"byte_end":686121,"line_start":30,"line_end":30,"column_start":25,"column_end":33},"alias_span":null,"name":"Polyline","value":"","parent":{"krate":0,"index":5035}},{"kind":"Use","ref_id":{"krate":0,"index":8060},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/mod.rs","byte_start":686147,"byte_end":686154,"line_start":31,"line_end":31,"column_start":25,"column_end":32},"alias_span":null,"name":"Segment","value":"","parent":{"krate":0,"index":5035}},{"kind":"Use","ref_id":{"krate":0,"index":8078},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/mod.rs","byte_start":686156,"byte_end":686176,"line_start":31,"line_end":31,"column_start":34,"column_end":54},"alias_span":null,"name":"SegmentPointLocation","value":"","parent":{"krate":0,"index":5035}},{"kind":"Use","ref_id":{"krate":0,"index":5656},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/mod.rs","byte_start":686216,"byte_end":686221,"line_start":33,"line_end":33,"column_start":23,"column_end":28},"alias_span":null,"name":"Shape","value":"","parent":{"krate":0,"index":5035}},{"kind":"Use","ref_id":{"krate":0,"index":8113},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/mod.rs","byte_start":686223,"byte_end":686234,"line_start":33,"line_end":33,"column_start":30,"column_end":41},"alias_span":null,"name":"ShapeHandle","value":"","parent":{"krate":0,"index":5035}},{"kind":"Use","ref_id":{"krate":0,"index":5775},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/mod.rs","byte_start":686279,"byte_end":686289,"line_start":35,"line_end":35,"column_start":28,"column_end":38},"alias_span":null,"name":"SupportMap","value":"","parent":{"krate":0,"index":5035}},{"kind":"Use","ref_id":{"krate":0,"index":8211},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/mod.rs","byte_start":686344,"byte_end":686355,"line_start":37,"line_end":37,"column_start":29,"column_end":40},"alias_span":null,"name":"Tetrahedron","value":"","parent":{"krate":0,"index":5035}},{"kind":"Use","ref_id":{"krate":0,"index":8225},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/mod.rs","byte_start":686357,"byte_end":686381,"line_start":37,"line_end":37,"column_start":42,"column_end":66},"alias_span":null,"name":"TetrahedronPointLocation","value":"","parent":{"krate":0,"index":5035}},{"kind":"Use","ref_id":{"krate":0,"index":8250},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/mod.rs","byte_start":686409,"byte_end":686417,"line_start":38,"line_end":38,"column_start":26,"column_end":34},"alias_span":null,"name":"Triangle","value":"","parent":{"krate":0,"index":5035}},{"kind":"Use","ref_id":{"krate":0,"index":8269},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/mod.rs","byte_start":686419,"byte_end":686440,"line_start":38,"line_end":38,"column_start":36,"column_end":57},"alias_span":null,"name":"TrianglePointLocation","value":"","parent":{"krate":0,"index":5035}},{"kind":"Use","ref_id":{"krate":0,"index":8330},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/mod.rs","byte_start":686492,"byte_end":686499,"line_start":40,"line_end":40,"column_start":25,"column_end":32},"alias_span":null,"name":"TriMesh","value":"","parent":{"krate":0,"index":5035}},{"kind":"Use","ref_id":{"krate":0,"index":8309},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/mod.rs","byte_start":686501,"byte_end":686512,"line_start":40,"line_end":40,"column_start":34,"column_end":45},"alias_span":null,"name":"TriMeshFace","value":"","parent":{"krate":0,"index":5035}},{"kind":"Use","ref_id":{"krate":0,"index":6044},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/mod.rs","byte_start":885228,"byte_end":885240,"line_start":8,"line_end":8,"column_start":29,"column_end":41},"alias_span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/mod.rs","byte_start":885244,"byte_end":885255,"line_start":8,"line_end":8,"column_start":45,"column_end":56},"name":"convex_hull","value":"","parent":{"krate":0,"index":5986}},{"kind":"Use","ref_id":{"krate":0,"index":6152},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/mod.rs","byte_start":885302,"byte_end":885306,"line_start":10,"line_end":10,"column_start":21,"column_end":25},"alias_span":null,"name":"hacd","value":"","parent":{"krate":0,"index":5986}},{"kind":"Use","ref_id":{"krate":0,"index":6316},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/mod.rs","byte_start":885423,"byte_end":885432,"line_start":14,"line_end":14,"column_start":27,"column_end":36},"alias_span":null,"name":"ToTriMesh","value":"","parent":{"krate":0,"index":5986}},{"kind":"Use","ref_id":{"krate":0,"index":6316},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/to_trimesh/mod.rs","byte_start":940745,"byte_end":940754,"line_start":1,"line_end":1,"column_start":27,"column_end":36},"alias_span":null,"name":"ToTriMesh","value":"","parent":{"krate":0,"index":6256}},{"kind":"Use","ref_id":{"krate":0,"index":6376},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/mod.rs","byte_start":944982,"byte_end":944989,"line_start":4,"line_end":4,"column_start":25,"column_end":32},"alias_span":null,"name":"AsBytes","value":"","parent":{"krate":0,"index":6338}},{"kind":"Use","ref_id":{"krate":0,"index":6386},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/mod.rs","byte_start":945022,"byte_end":945037,"line_start":5,"line_end":5,"column_start":32,"column_end":47},"alias_span":null,"name":"ccw_face_normal","value":"","parent":{"krate":0,"index":6338}},{"kind":"Use","ref_id":{"krate":0,"index":6394},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/mod.rs","byte_start":945061,"byte_end":945067,"line_start":6,"line_end":6,"column_start":23,"column_end":29},"alias_span":null,"name":"center","value":"","parent":{"krate":0,"index":6338}},{"kind":"Use","ref_id":{"krate":0,"index":6402},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/mod.rs","byte_start":945117,"byte_end":945137,"line_start":8,"line_end":8,"column_start":24,"column_end":44},"alias_span":null,"name":"remove_unused_points","value":"","parent":{"krate":0,"index":6338}},{"kind":"Use","ref_id":{"krate":0,"index":6408},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/mod.rs","byte_start":945174,"byte_end":945192,"line_start":9,"line_end":9,"column_start":36,"column_end":54},"alias_span":null,"name":"DeterministicState","value":"","parent":{"krate":0,"index":6338}},{"kind":"Use","ref_id":{"krate":0,"index":8361},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/mod.rs","byte_start":945229,"byte_end":945246,"line_start":10,"line_end":10,"column_start":36,"column_end":53},"alias_span":null,"name":"HashablePartialEq","value":"","parent":{"krate":0,"index":6338}},{"kind":"Use","ref_id":{"krate":0,"index":6436},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/mod.rs","byte_start":945276,"byte_end":945287,"line_start":11,"line_end":11,"column_start":29,"column_end":40},"alias_span":null,"name":"IsometryOps","value":"","parent":{"krate":0,"index":6338}},{"kind":"Use","ref_id":{"krate":0,"index":6450},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/mod.rs","byte_start":945311,"byte_end":945317,"line_start":12,"line_end":12,"column_start":23,"column_end":29},"alias_span":null,"name":"median","value":"","parent":{"krate":0,"index":6338}},{"kind":"Use","ref_id":{"krate":0,"index":6462},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/mod.rs","byte_start":945366,"byte_end":945391,"line_start":14,"line_end":14,"column_start":5,"column_end":30},"alias_span":null,"name":"point_cloud_support_point","value":"","parent":{"krate":0,"index":6338}},{"kind":"Use","ref_id":{"krate":0,"index":6460},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/mod.rs","byte_start":945393,"byte_end":945421,"line_start":14,"line_end":14,"column_start":32,"column_end":60},"alias_span":null,"name":"point_cloud_support_point_id","value":"","parent":{"krate":0,"index":6338}},{"kind":"Use","ref_id":{"krate":0,"index":6468},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/mod.rs","byte_start":945457,"byte_end":945472,"line_start":16,"line_end":16,"column_start":32,"column_end":47},"alias_span":null,"name":"point_in_poly2d","value":"","parent":{"krate":0,"index":6338}},{"kind":"Use","ref_id":{"krate":0,"index":6472},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/mod.rs","byte_start":945503,"byte_end":945514,"line_start":17,"line_end":17,"column_start":30,"column_end":41},"alias_span":null,"name":"RefWithCost","value":"","parent":{"krate":0,"index":6338}},{"kind":"Use","ref_id":{"krate":0,"index":6503},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/mod.rs","byte_start":945537,"byte_end":945542,"line_start":18,"line_end":18,"column_start":22,"column_end":27},"alias_span":null,"name":"sort2","value":"","parent":{"krate":0,"index":6338}},{"kind":"Use","ref_id":{"krate":0,"index":6506},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/mod.rs","byte_start":945544,"byte_end":945549,"line_start":18,"line_end":18,"column_start":29,"column_end":34},"alias_span":null,"name":"sort3","value":"","parent":{"krate":0,"index":6338}},{"kind":"Use","ref_id":{"krate":0,"index":8376},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/mod.rs","byte_start":945579,"byte_end":945589,"line_start":19,"line_end":19,"column_start":28,"column_end":38},"alias_span":null,"name":"SortedPair","value":"","parent":{"krate":0,"index":6338}},{"kind":"Use","ref_id":{"krate":0,"index":6532},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/mod.rs","byte_start":945644,"byte_end":945662,"line_start":21,"line_end":21,"column_start":29,"column_end":47},"alias_span":null,"name":"tetrahedron_center","value":"","parent":{"krate":0,"index":6338}},{"kind":"Use","ref_id":{"krate":0,"index":6530},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/mod.rs","byte_start":945664,"byte_end":945689,"line_start":21,"line_end":21,"column_start":49,"column_end":74},"alias_span":null,"name":"tetrahedron_signed_volume","value":"","parent":{"krate":0,"index":6338}},{"kind":"Use","ref_id":{"krate":0,"index":6528},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/mod.rs","byte_start":945691,"byte_end":945709,"line_start":21,"line_end":21,"column_start":76,"column_end":94},"alias_span":null,"name":"tetrahedron_volume","value":"","parent":{"krate":0,"index":6338}},{"kind":"Use","ref_id":{"krate":0,"index":6547},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/mod.rs","byte_start":945761,"byte_end":945791,"line_start":23,"line_end":23,"column_start":25,"column_end":55},"alias_span":null,"name":"is_affinely_dependent_triangle","value":"","parent":{"krate":0,"index":6338}},{"kind":"Use","ref_id":{"krate":0,"index":6545},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/mod.rs","byte_start":945823,"byte_end":945835,"line_start":25,"line_end":25,"column_start":5,"column_end":17},"alias_span":null,"name":"circumcircle","value":"","parent":{"krate":0,"index":6338}},{"kind":"Use","ref_id":{"krate":0,"index":6549},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/mod.rs","byte_start":945837,"byte_end":945857,"line_start":25,"line_end":25,"column_start":19,"column_end":39},"alias_span":null,"name":"is_point_in_triangle","value":"","parent":{"krate":0,"index":6338}},{"kind":"Use","ref_id":{"krate":0,"index":6539},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/mod.rs","byte_start":945859,"byte_end":945872,"line_start":25,"line_end":25,"column_start":41,"column_end":54},"alias_span":null,"name":"triangle_area","value":"","parent":{"krate":0,"index":6338}},{"kind":"Use","ref_id":{"krate":0,"index":6541},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/mod.rs","byte_start":945874,"byte_end":945889,"line_start":25,"line_end":25,"column_start":56,"column_end":71},"alias_span":null,"name":"triangle_center","value":"","parent":{"krate":0,"index":6338}},{"kind":"Use","ref_id":{"krate":0,"index":6543},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/mod.rs","byte_start":945891,"byte_end":945909,"line_start":25,"line_end":25,"column_start":73,"column_end":91},"alias_span":null,"name":"triangle_perimeter","value":"","parent":{"krate":0,"index":6338}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","byte_start":0,"byte_end":4430,"line_start":1,"line_end":169,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":15},{"krate":0,"index":548},{"krate":0,"index":625},{"krate":0,"index":870},{"krate":0,"index":2409},{"krate":0,"index":2783},{"krate":0,"index":5035},{"krate":0,"index":5986},{"krate":0,"index":6338},{"krate":0,"index":6551}],"decl_id":null,"docs":"ncollide\n========","sig":null,"attributes":[{"value":"!\nncollide\n========\n\n**ncollide** is a 2 and 3-dimensional collision detection library written with\nthe rust programming language.\n\nAs its name suggests, it is generic wrt the dimension: it works with both\n2-dimensional and 3-dimensional shapes.\n\nThe official user guide is available [here](http://ncollide.org).\nThe rustdoc documentation is available [here](http://ncollide.org/rustdoc/ncollide).\n\n## Compilation\nYou will need the last stable build of the [rust compiler](http://www.rust-lang.org)\nand the official package manager: [cargo](https://github.com/rust-lang/cargo).\n\nSimply add the following to your `Cargo.toml` file:\n\n```.ignore\n[dependencies]\nncollide2d = \"0.23\" # For 2D collision detection.\nncollide3d = \"0.23\" # For 3D collision detection.\n```\n\n\n## Features\n- dynamic bounding volume tree based broad phase\n- ball vs. ball collision detection,\n- plane vs. any convex object collision detection.\n- collision detection between arbitrary convex objects\n- compound shapes\n- ray-casting\n- time of impact computation  for objects without rotational movement (compound vs. compound is not\n  yet implemented)\n\nAnd various traits for collision detectors and broad phase collision detection.\n*/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","byte_start":0,"byte_end":1204,"line_start":1,"line_end":38,"column_start":1,"column_end":3}},{"value":"deny(non_camel_case_types)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","byte_start":1206,"byte_end":1236,"line_start":40,"line_end":40,"column_start":1,"column_end":31}},{"value":"deny(unused_parens)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","byte_start":1237,"byte_end":1260,"line_start":41,"line_end":41,"column_start":1,"column_end":24}},{"value":"deny(non_upper_case_globals)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","byte_start":1261,"byte_end":1293,"line_start":42,"line_end":42,"column_start":1,"column_end":33}},{"value":"deny(unused_qualifications)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","byte_start":1294,"byte_end":1325,"line_start":43,"line_end":43,"column_start":1,"column_end":32}},{"value":"deny(missing_docs)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","byte_start":1326,"byte_end":1348,"line_start":44,"line_end":44,"column_start":1,"column_end":23}},{"value":"deny(unused_results)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","byte_start":1377,"byte_end":1401,"line_start":45,"line_end":45,"column_start":1,"column_end":25}},{"value":"warn(unused_imports)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","byte_start":1402,"byte_end":1426,"line_start":46,"line_end":46,"column_start":1,"column_end":25}},{"value":"allow(missing_copy_implementations)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","byte_start":1427,"byte_end":1466,"line_start":47,"line_end":47,"column_start":1,"column_end":40}}]},{"kind":"Mod","id":{"krate":0,"index":15},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"bounding_volume","qualname":"::bounding_volume","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/mod.rs","parent":null,"children":[{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":28},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":59},{"krate":0,"index":107},{"krate":0,"index":125},{"krate":0,"index":138},{"krate":0,"index":150},{"krate":0,"index":164},{"krate":0,"index":177},{"krate":0,"index":193},{"krate":0,"index":206},{"krate":0,"index":217},{"krate":0,"index":246},{"krate":0,"index":261},{"krate":0,"index":274},{"krate":0,"index":300},{"krate":0,"index":333},{"krate":0,"index":346},{"krate":0,"index":359},{"krate":0,"index":370},{"krate":0,"index":383},{"krate":0,"index":395},{"krate":0,"index":410},{"krate":0,"index":423},{"krate":0,"index":434},{"krate":0,"index":447},{"krate":0,"index":458},{"krate":0,"index":470},{"krate":0,"index":481},{"krate":0,"index":493},{"krate":0,"index":504},{"krate":0,"index":514},{"krate":0,"index":530}],"decl_id":null,"docs":" Bounding volumes.\n","sig":null,"attributes":[{"value":"! Bounding volumes.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/mod.rs","byte_start":4432,"byte_end":4453,"line_start":1,"line_end":1,"column_start":1,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":38},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_volume.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"bounding_volume","qualname":"::bounding_volume::bounding_volume","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_volume.rs","parent":null,"children":[{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":48}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":43},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_volume.rs","byte_start":6387,"byte_end":6404,"line_start":5,"line_end":5,"column_start":11,"column_end":28},"name":"HasBoundingVolume","qualname":"::bounding_volume::bounding_volume::HasBoundingVolume","value":"HasBoundingVolume<N: RealField, BV>","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":47}],"decl_id":null,"docs":" Traits of objects having a bounding volume.\n","sig":null,"attributes":[{"value":"/ Traits of objects having a bounding volume.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_volume.rs","byte_start":6329,"byte_end":6376,"line_start":4,"line_end":4,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_volume.rs","byte_start":6490,"byte_end":6505,"line_start":7,"line_end":7,"column_start":8,"column_end":23},"name":"bounding_volume","qualname":"::bounding_volume::bounding_volume::HasBoundingVolume::bounding_volume","value":"fn (&self, m: &Isometry<N>) -> BV","parent":{"krate":0,"index":43},"children":[],"decl_id":null,"docs":" The bounding volume of `self` transformed by `m`.\n","sig":null,"attributes":[{"value":"/ The bounding volume of `self` transformed by `m`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_volume.rs","byte_start":6429,"byte_end":6482,"line_start":6,"line_end":6,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_volume.rs","byte_start":6583,"byte_end":6604,"line_start":9,"line_end":9,"column_start":8,"column_end":29},"name":"local_bounding_volume","qualname":"::bounding_volume::bounding_volume::HasBoundingVolume::local_bounding_volume","value":"fn (&self) -> BV","parent":{"krate":0,"index":43},"children":[],"decl_id":null,"docs":" The bounding volume of `self`.\n","sig":null,"attributes":[{"value":"/ The bounding volume of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_volume.rs","byte_start":6541,"byte_end":6575,"line_start":8,"line_end":8,"column_start":5,"column_end":39}}]},{"kind":"Trait","id":{"krate":0,"index":48},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_volume.rs","byte_start":6926,"byte_end":6940,"line_start":19,"line_end":19,"column_start":11,"column_end":25},"name":"BoundingVolume","qualname":"::bounding_volume::bounding_volume::BoundingVolume","value":"BoundingVolume<N: RealField>: std::fmt::Debug","parent":null,"children":[{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58}],"decl_id":null,"docs":" Trait of bounding volumes.","sig":null,"attributes":[{"value":"/ Trait of bounding volumes.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_volume.rs","byte_start":6681,"byte_end":6711,"line_start":14,"line_end":14,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_volume.rs","byte_start":6712,"byte_end":6715,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Bounding volumes are coarse approximations of shapes. It usually have constant time","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_volume.rs","byte_start":6716,"byte_end":6803,"line_start":16,"line_end":16,"column_start":1,"column_end":88}},{"value":"/ intersection, inclusion test. Two bounding volume must also be mergeable into a bigger bounding","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_volume.rs","byte_start":6804,"byte_end":6903,"line_start":17,"line_end":17,"column_start":1,"column_end":100}},{"value":"/ volume.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_volume.rs","byte_start":6904,"byte_end":6915,"line_start":18,"line_end":18,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_volume.rs","byte_start":7186,"byte_end":7192,"line_start":23,"line_end":23,"column_start":8,"column_end":14},"name":"center","qualname":"::bounding_volume::bounding_volume::BoundingVolume::center","value":"fn (&self) -> Point<N>","parent":{"krate":0,"index":48},"children":[],"decl_id":null,"docs":" Returns a point inside of this bounding volume. This is ideally its center.\n","sig":null,"attributes":[{"value":"/ Returns a point inside of this bounding volume. This is ideally its center.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_volume.rs","byte_start":7099,"byte_end":7178,"line_start":22,"line_end":22,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_volume.rs","byte_start":7288,"byte_end":7298,"line_start":26,"line_end":26,"column_start":8,"column_end":18},"name":"intersects","qualname":"::bounding_volume::bounding_volume::BoundingVolume::intersects","value":"fn (&self, _: &Self) -> bool","parent":{"krate":0,"index":48},"children":[],"decl_id":null,"docs":" Checks if this bounding volume intersect with another one.\n","sig":null,"attributes":[{"value":"/ Checks if this bounding volume intersect with another one.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_volume.rs","byte_start":7218,"byte_end":7280,"line_start":25,"line_end":25,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_volume.rs","byte_start":7394,"byte_end":7402,"line_start":29,"line_end":29,"column_start":8,"column_end":16},"name":"contains","qualname":"::bounding_volume::bounding_volume::BoundingVolume::contains","value":"fn (&self, _: &Self) -> bool","parent":{"krate":0,"index":48},"children":[],"decl_id":null,"docs":" Checks if this bounding volume contains another one.\n","sig":null,"attributes":[{"value":"/ Checks if this bounding volume contains another one.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_volume.rs","byte_start":7330,"byte_end":7386,"line_start":28,"line_end":28,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_volume.rs","byte_start":7519,"byte_end":7524,"line_start":32,"line_end":32,"column_start":8,"column_end":13},"name":"merge","qualname":"::bounding_volume::bounding_volume::BoundingVolume::merge","value":"fn (&mut self, _: &Self) -> ()","parent":{"krate":0,"index":48},"children":[],"decl_id":null,"docs":" Merges this bounding volume with another one. The merge is done in-place.\n","sig":null,"attributes":[{"value":"/ Merges this bounding volume with another one. The merge is done in-place.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_volume.rs","byte_start":7434,"byte_end":7511,"line_start":31,"line_end":31,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_volume.rs","byte_start":7609,"byte_end":7615,"line_start":35,"line_end":35,"column_start":8,"column_end":14},"name":"merged","qualname":"::bounding_volume::bounding_volume::BoundingVolume::merged","value":"fn (&self, _: &Self) -> Self","parent":{"krate":0,"index":48},"children":[],"decl_id":null,"docs":" Merges this bounding volume with another one.\n","sig":null,"attributes":[{"value":"/ Merges this bounding volume with another one.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_volume.rs","byte_start":7552,"byte_end":7601,"line_start":34,"line_end":34,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_volume.rs","byte_start":7689,"byte_end":7695,"line_start":38,"line_end":38,"column_start":8,"column_end":14},"name":"loosen","qualname":"::bounding_volume::bounding_volume::BoundingVolume::loosen","value":"fn (&mut self, _: N) -> ()","parent":{"krate":0,"index":48},"children":[],"decl_id":null,"docs":" Enlarges this bounding volume.\n","sig":null,"attributes":[{"value":"/ Enlarges this bounding volume.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_volume.rs","byte_start":7647,"byte_end":7681,"line_start":37,"line_end":37,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_volume.rs","byte_start":7788,"byte_end":7796,"line_start":41,"line_end":41,"column_start":8,"column_end":16},"name":"loosened","qualname":"::bounding_volume::bounding_volume::BoundingVolume::loosened","value":"fn (&self, _: N) -> Self","parent":{"krate":0,"index":48},"children":[],"decl_id":null,"docs":" Creates a new, enlarged version, of this bounding volume.\n","sig":null,"attributes":[{"value":"/ Creates a new, enlarged version, of this bounding volume.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_volume.rs","byte_start":7719,"byte_end":7780,"line_start":40,"line_end":40,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_volume.rs","byte_start":7865,"byte_end":7872,"line_start":44,"line_end":44,"column_start":8,"column_end":15},"name":"tighten","qualname":"::bounding_volume::bounding_volume::BoundingVolume::tighten","value":"fn (&mut self, _: N) -> ()","parent":{"krate":0,"index":48},"children":[],"decl_id":null,"docs":" Tighten this bounding volume.\n","sig":null,"attributes":[{"value":"/ Tighten this bounding volume.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_volume.rs","byte_start":7824,"byte_end":7857,"line_start":43,"line_end":43,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_volume.rs","byte_start":7966,"byte_end":7975,"line_start":47,"line_end":47,"column_start":8,"column_end":17},"name":"tightened","qualname":"::bounding_volume::bounding_volume::BoundingVolume::tightened","value":"fn (&self, _: N) -> Self","parent":{"krate":0,"index":48},"children":[],"decl_id":null,"docs":" Creates a new, tightened version, of this bounding volume.\n","sig":null,"attributes":[{"value":"/ Creates a new, tightened version, of this bounding volume.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_volume.rs","byte_start":7896,"byte_end":7958,"line_start":46,"line_end":46,"column_start":5,"column_end":67}}]},{"kind":"Mod","id":{"krate":0,"index":59},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"aabb","qualname":"::bounding_volume::aabb","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb.rs","parent":null,"children":[{"krate":0,"index":60},{"krate":0,"index":64},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":73},{"krate":0,"index":76},{"krate":0,"index":6584},{"krate":0,"index":6599},{"krate":0,"index":6593},{"krate":0,"index":6595},{"krate":0,"index":6591},{"krate":0,"index":6588},{"krate":0,"index":79},{"krate":0,"index":96}],"decl_id":null,"docs":" Axis Aligned Bounding Box.\n","sig":null,"attributes":[{"value":"! Axis Aligned Bounding Box.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb.rs","byte_start":8001,"byte_end":8031,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":73},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb.rs","byte_start":8401,"byte_end":8405,"line_start":13,"line_end":13,"column_start":8,"column_end":12},"name":"aabb","qualname":"::bounding_volume::aabb::aabb","value":"fn <N, G> (g: &G, m: &Isometry<N>) -> AABB<N>","parent":null,"children":[],"decl_id":null,"docs":" Computes the axis-aligned bounding box of a shape `g` transformed by `m`.","sig":null,"attributes":[{"value":"/ Computes the axis-aligned bounding box of a shape `g` transformed by `m`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb.rs","byte_start":8277,"byte_end":8354,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb.rs","byte_start":8355,"byte_end":8358,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Same as `g.aabb(m)`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb.rs","byte_start":8359,"byte_end":8383,"line_start":11,"line_end":11,"column_start":1,"column_end":25}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb.rs","byte_start":8384,"byte_end":8393,"line_start":12,"line_end":12,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":76},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb.rs","byte_start":8713,"byte_end":8723,"line_start":26,"line_end":26,"column_start":8,"column_end":18},"name":"local_aabb","qualname":"::bounding_volume::aabb::local_aabb","value":"fn <N, G> (g: &G) -> AABB<N>","parent":null,"children":[],"decl_id":null,"docs":" Computes the axis-aligned bounding box of a shape `g`.","sig":null,"attributes":[{"value":"/ Computes the axis-aligned bounding box of a shape `g`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb.rs","byte_start":8602,"byte_end":8660,"line_start":22,"line_end":22,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb.rs","byte_start":8661,"byte_end":8664,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Same as `g.local_aabb(m)`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb.rs","byte_start":8665,"byte_end":8695,"line_start":24,"line_end":24,"column_start":1,"column_end":31}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb.rs","byte_start":8696,"byte_end":8705,"line_start":25,"line_end":25,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":6584},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb.rs","byte_start":9002,"byte_end":9006,"line_start":37,"line_end":37,"column_start":12,"column_end":16},"name":"AABB","qualname":"::bounding_volume::aabb::AABB","value":"AABB { mins, maxs }","parent":null,"children":[{"krate":0,"index":6586},{"krate":0,"index":6587}],"decl_id":null,"docs":" An Axis Aligned Bounding Box.\n","sig":null,"attributes":[{"value":"/ An Axis Aligned Bounding Box.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb.rs","byte_start":8853,"byte_end":8886,"line_start":34,"line_end":34,"column_start":1,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":6586},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb.rs","byte_start":9031,"byte_end":9035,"line_start":38,"line_end":38,"column_start":9,"column_end":13},"name":"mins","qualname":"::bounding_volume::aabb::AABB::mins","value":"na::Point<N, na::U3>","parent":{"krate":0,"index":6584},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6587},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb.rs","byte_start":9055,"byte_end":9059,"line_start":39,"line_end":39,"column_start":9,"column_end":13},"name":"maxs","qualname":"::bounding_volume::aabb::AABB::maxs","value":"na::Point<N, na::U3>","parent":{"krate":0,"index":6584},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb.rs","byte_start":9422,"byte_end":9425,"line_start":50,"line_end":50,"column_start":12,"column_end":15},"name":"new","qualname":"<AABB<N>>::new","value":"fn (mins: Point<N>, maxs: Point<N>) -> AABB<N>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new AABB.","sig":null,"attributes":[{"value":"/ Creates a new AABB.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb.rs","byte_start":9107,"byte_end":9130,"line_start":43,"line_end":43,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb.rs","byte_start":9135,"byte_end":9138,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ # Arguments:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb.rs","byte_start":9143,"byte_end":9159,"line_start":45,"line_end":45,"column_start":5,"column_end":21}},{"value":"/   * `mins` - position of the point with the smallest coordinates.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb.rs","byte_start":9164,"byte_end":9233,"line_start":46,"line_end":46,"column_start":5,"column_end":74}},{"value":"/   * `maxs` - position of the point with the highest coordinates. Each component of `mins`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb.rs","byte_start":9238,"byte_end":9331,"line_start":47,"line_end":47,"column_start":5,"column_end":98}},{"value":"/   must be smaller than the related components of `maxs`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb.rs","byte_start":9336,"byte_end":9396,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb.rs","byte_start":9401,"byte_end":9410,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb.rs","byte_start":9745,"byte_end":9756,"line_start":58,"line_end":58,"column_start":12,"column_end":23},"name":"new_invalid","qualname":"<AABB<N>>::new_invalid","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an invalid AABB with `mins` components set to `N::max_values` and `maxs`components set to `-N::max_values`.","sig":null,"attributes":[{"value":"/ Creates an invalid AABB with `mins` components set to `N::max_values` and `maxs`components set to `-N::max_values`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb.rs","byte_start":9510,"byte_end":9629,"line_start":54,"line_end":54,"column_start":5,"column_end":124}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb.rs","byte_start":9634,"byte_end":9637,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ This is often used as the initial values of some AABB merging algorithms.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb.rs","byte_start":9642,"byte_end":9719,"line_start":56,"line_end":56,"column_start":5,"column_end":82}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb.rs","byte_start":9724,"byte_end":9733,"line_start":57,"line_end":57,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb.rs","byte_start":9998,"byte_end":10015,"line_start":67,"line_end":67,"column_start":12,"column_end":29},"name":"from_half_extents","qualname":"<AABB<N>>::from_half_extents","value":"fn (center: Point<N>, half_extents: Vector<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new AABB from its center and its half-extents.\n","sig":null,"attributes":[{"value":"/ Creates a new AABB from its center and its half-extents.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb.rs","byte_start":9912,"byte_end":9972,"line_start":65,"line_end":65,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb.rs","byte_start":9977,"byte_end":9986,"line_start":66,"line_end":66,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb.rs","byte_start":10200,"byte_end":10211,"line_start":72,"line_end":72,"column_start":12,"column_end":23},"name":"from_points","qualname":"<AABB<N>>::from_points","value":"fn <'a, I> (pts: I) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new AABB from a set of points.\n","sig":null,"attributes":[{"value":"/ Creates a new AABB from a set of points.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb.rs","byte_start":10144,"byte_end":10188,"line_start":71,"line_end":71,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb.rs","byte_start":10532,"byte_end":10536,"line_start":82,"line_end":82,"column_start":12,"column_end":16},"name":"mins","qualname":"<AABB<N>>::mins","value":"fn (&self) -> &Point<N>","parent":null,"children":[],"decl_id":null,"docs":" Reference to the AABB point with the smallest components along each axis.\n","sig":null,"attributes":[{"value":"/ Reference to the AABB point with the smallest components along each axis.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb.rs","byte_start":10363,"byte_end":10440,"line_start":79,"line_end":79,"column_start":5,"column_end":82}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb.rs","byte_start":10445,"byte_end":10454,"line_start":80,"line_end":80,"column_start":5,"column_end":14}},{"value":"deprecated(note = \"use the `.mins` public field instead.\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb.rs","byte_start":10459,"byte_end":10520,"line_start":81,"line_end":81,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb.rs","byte_start":10757,"byte_end":10761,"line_start":89,"line_end":89,"column_start":12,"column_end":16},"name":"maxs","qualname":"<AABB<N>>::maxs","value":"fn (&self) -> &Point<N>","parent":null,"children":[],"decl_id":null,"docs":" Reference to the AABB point with the biggest components along each axis.\n","sig":null,"attributes":[{"value":"/ Reference to the AABB point with the biggest components along each axis.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb.rs","byte_start":10589,"byte_end":10665,"line_start":86,"line_end":86,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb.rs","byte_start":10670,"byte_end":10679,"line_start":87,"line_end":87,"column_start":5,"column_end":14}},{"value":"deprecated(note = \"use the `.maxs` public field instead.\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb.rs","byte_start":10684,"byte_end":10745,"line_start":88,"line_end":88,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb.rs","byte_start":10868,"byte_end":10874,"line_start":95,"line_end":95,"column_start":12,"column_end":18},"name":"center","qualname":"<AABB<N>>::center","value":"fn (&self) -> Point<N>","parent":null,"children":[],"decl_id":null,"docs":" The center of this AABB.\n","sig":null,"attributes":[{"value":"/ The center of this AABB.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb.rs","byte_start":10814,"byte_end":10842,"line_start":93,"line_end":93,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb.rs","byte_start":10847,"byte_end":10856,"line_start":94,"line_end":94,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb.rs","byte_start":11010,"byte_end":11022,"line_start":101,"line_end":101,"column_start":12,"column_end":24},"name":"half_extents","qualname":"<AABB<N>>::half_extents","value":"fn (&self) -> Vector<N>","parent":null,"children":[],"decl_id":null,"docs":" The half extents of this AABB.\n","sig":null,"attributes":[{"value":"/ The half extents of this AABB.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb.rs","byte_start":10950,"byte_end":10984,"line_start":99,"line_end":99,"column_start":5,"column_end":39}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb.rs","byte_start":10989,"byte_end":10998,"line_start":100,"line_end":100,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb.rs","byte_start":11190,"byte_end":11197,"line_start":108,"line_end":108,"column_start":12,"column_end":19},"name":"extents","qualname":"<AABB<N>>::extents","value":"fn (&self) -> Vector<N>","parent":null,"children":[],"decl_id":null,"docs":" The extents of this AABB.\n","sig":null,"attributes":[{"value":"/ The extents of this AABB.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb.rs","byte_start":11135,"byte_end":11164,"line_start":106,"line_end":106,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb.rs","byte_start":11169,"byte_end":11178,"line_start":107,"line_end":107,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb.rs","byte_start":11331,"byte_end":11341,"line_start":113,"line_end":113,"column_start":12,"column_end":22},"name":"take_point","qualname":"<AABB<N>>::take_point","value":"fn (&mut self, pt: Point<N>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Enlarges this AABB so it also contains the point `pt`.\n","sig":null,"attributes":[{"value":"/ Enlarges this AABB so it also contains the point `pt`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb.rs","byte_start":11261,"byte_end":11319,"line_start":112,"line_end":112,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb.rs","byte_start":11585,"byte_end":11597,"line_start":120,"line_end":120,"column_start":12,"column_end":24},"name":"transform_by","qualname":"<AABB<N>>::transform_by","value":"fn (&self, m: &Isometry<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the AABB bounding `self` transformed by `m`.\n","sig":null,"attributes":[{"value":"/ Computes the AABB bounding `self` transformed by `m`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb.rs","byte_start":11502,"byte_end":11559,"line_start":118,"line_end":118,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb.rs","byte_start":11564,"byte_end":11573,"line_start":119,"line_end":119,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb.rs","byte_start":11953,"byte_end":11968,"line_start":130,"line_end":130,"column_start":12,"column_end":27},"name":"bounding_sphere","qualname":"<AABB<N>>::bounding_sphere","value":"fn (&self) -> BoundingSphere<N>","parent":null,"children":[],"decl_id":null,"docs":" The smallest bounding sphere containing this AABB.\n","sig":null,"attributes":[{"value":"/ The smallest bounding sphere containing this AABB.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb.rs","byte_start":11873,"byte_end":11927,"line_start":128,"line_end":128,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb.rs","byte_start":11932,"byte_end":11941,"line_start":129,"line_end":129,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb.rs","byte_start":12165,"byte_end":12185,"line_start":138,"line_end":138,"column_start":12,"column_end":32},"name":"contains_local_point","qualname":"<AABB<N>>::contains_local_point","value":"fn (&self, point: &Point<N>) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb.rs","byte_start":12144,"byte_end":12153,"line_start":137,"line_end":137,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":117},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb_ball.rs","byte_start":14770,"byte_end":14779,"line_start":8,"line_end":8,"column_start":8,"column_end":17},"name":"ball_aabb","qualname":"::bounding_volume::aabb_ball::ball_aabb","value":"fn <N> (center: &Point<N>, radius: N) -> AABB<N>","parent":null,"children":[],"decl_id":null,"docs":" Computes the Axis-Aligned Bounding Box of a ball transformed by `center`.\n","sig":null,"attributes":[{"value":"/ Computes the Axis-Aligned Bounding Box of a ball transformed by `center`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb_ball.rs","byte_start":14675,"byte_end":14752,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb_ball.rs","byte_start":14753,"byte_end":14762,"line_start":7,"line_end":7,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":286},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb_utils.rs","byte_start":23256,"byte_end":23272,"line_start":9,"line_end":9,"column_start":8,"column_end":24},"name":"support_map_aabb","qualname":"::bounding_volume::aabb_utils::support_map_aabb","value":"fn <N, G> (m: &Isometry<N>, i: &G) -> AABB<N>","parent":null,"children":[],"decl_id":null,"docs":" Computes the AABB of an support mapped shape.\n","sig":null,"attributes":[{"value":"/ Computes the AABB of an support mapped shape.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb_utils.rs","byte_start":23199,"byte_end":23248,"line_start":8,"line_end":8,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":289},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb_utils.rs","byte_start":23961,"byte_end":23983,"line_start":34,"line_end":34,"column_start":8,"column_end":30},"name":"local_support_map_aabb","qualname":"::bounding_volume::aabb_utils::local_support_map_aabb","value":"fn <N, G> (i: &G) -> AABB<N>","parent":null,"children":[],"decl_id":null,"docs":" Computes the AABB of an support mapped shape.\n","sig":null,"attributes":[{"value":"/ Computes the AABB of an support mapped shape.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb_utils.rs","byte_start":23904,"byte_end":23953,"line_start":33,"line_end":33,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":292},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb_utils.rs","byte_start":24672,"byte_end":24688,"line_start":59,"line_end":59,"column_start":8,"column_end":24},"name":"point_cloud_aabb","qualname":"::bounding_volume::aabb_utils::point_cloud_aabb","value":"fn <'a, N, I> (m: &Isometry<N>, pts: I) -> AABB<N>","parent":null,"children":[],"decl_id":null,"docs":" Computes the AABB of a set of points transformed by `m`.\n","sig":null,"attributes":[{"value":"/ Computes the AABB of a set of points transformed by `m`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb_utils.rs","byte_start":24604,"byte_end":24664,"line_start":58,"line_end":58,"column_start":1,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":296},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb_utils.rs","byte_start":25254,"byte_end":25276,"line_start":82,"line_end":82,"column_start":8,"column_end":30},"name":"local_point_cloud_aabb","qualname":"::bounding_volume::aabb_utils::local_point_cloud_aabb","value":"fn <'a, N, I> (pts: I) -> AABB<N>","parent":null,"children":[],"decl_id":null,"docs":" Computes the AABB of a set of points.\n","sig":null,"attributes":[{"value":"/ Computes the AABB of a set of points.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb_utils.rs","byte_start":25205,"byte_end":25246,"line_start":81,"line_end":81,"column_start":1,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":300},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_sphere.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"bounding_sphere","qualname":"::bounding_volume::bounding_sphere","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_sphere.rs","parent":null,"children":[{"krate":0,"index":301},{"krate":0,"index":304},{"krate":0,"index":307},{"krate":0,"index":310},{"krate":0,"index":313},{"krate":0,"index":6602},{"krate":0,"index":6617},{"krate":0,"index":6611},{"krate":0,"index":6613},{"krate":0,"index":6609},{"krate":0,"index":6606},{"krate":0,"index":316},{"krate":0,"index":322}],"decl_id":null,"docs":" Bounding sphere.\n","sig":null,"attributes":[{"value":"! Bounding sphere.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_sphere.rs","byte_start":25710,"byte_end":25730,"line_start":1,"line_end":1,"column_start":1,"column_end":21}}]},{"kind":"Function","id":{"krate":0,"index":310},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_sphere.rs","byte_start":26031,"byte_end":26046,"line_start":11,"line_end":11,"column_start":8,"column_end":23},"name":"bounding_sphere","qualname":"::bounding_volume::bounding_sphere::bounding_sphere","value":"fn <N, G> (g: &G, m: &Isometry<N>) -> BoundingSphere<N>","parent":null,"children":[],"decl_id":null,"docs":" Computes the bounding sphere of a shape `g` transformed by `m`.","sig":null,"attributes":[{"value":"/ Computes the bounding sphere of a shape `g` transformed by `m`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_sphere.rs","byte_start":25916,"byte_end":25983,"line_start":8,"line_end":8,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_sphere.rs","byte_start":25984,"byte_end":25987,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Same as `g.bounding_sphere(m)`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_sphere.rs","byte_start":25988,"byte_end":26023,"line_start":10,"line_end":10,"column_start":1,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":313},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_sphere.rs","byte_start":26365,"byte_end":26386,"line_start":23,"line_end":23,"column_start":8,"column_end":29},"name":"local_bounding_sphere","qualname":"::bounding_volume::bounding_sphere::local_bounding_sphere","value":"fn <N, G> (g: &G) -> BoundingSphere<N>","parent":null,"children":[],"decl_id":null,"docs":" Computes the bounding sphere of a shape `g`.","sig":null,"attributes":[{"value":"/ Computes the bounding sphere of a shape `g`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_sphere.rs","byte_start":26263,"byte_end":26311,"line_start":20,"line_end":20,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_sphere.rs","byte_start":26312,"byte_end":26315,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Same as `g.local_bounding_sphere(m)`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_sphere.rs","byte_start":26316,"byte_end":26357,"line_start":22,"line_end":22,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":6602},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_sphere.rs","byte_start":26674,"byte_end":26688,"line_start":34,"line_end":34,"column_start":12,"column_end":26},"name":"BoundingSphere","qualname":"::bounding_volume::bounding_sphere::BoundingSphere","value":"BoundingSphere {  }","parent":null,"children":[{"krate":0,"index":6604},{"krate":0,"index":6605}],"decl_id":null,"docs":" A Bounding Sphere.\n","sig":null,"attributes":[{"value":"/ A Bounding Sphere.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_sphere.rs","byte_start":26536,"byte_end":26558,"line_start":31,"line_end":31,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_sphere.rs","byte_start":26834,"byte_end":26837,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<BoundingSphere<N>>::new","value":"fn (center: Point<N>, radius: N) -> BoundingSphere<N>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new bounding sphere.\n","sig":null,"attributes":[{"value":"/ Creates a new bounding sphere.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_sphere.rs","byte_start":26788,"byte_end":26822,"line_start":40,"line_end":40,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_sphere.rs","byte_start":27000,"byte_end":27006,"line_start":47,"line_end":47,"column_start":12,"column_end":18},"name":"center","qualname":"<BoundingSphere<N>>::center","value":"fn (&self) -> &Point<N>","parent":null,"children":[],"decl_id":null,"docs":" The bounding sphere center.\n","sig":null,"attributes":[{"value":"/ The bounding sphere center.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_sphere.rs","byte_start":26943,"byte_end":26974,"line_start":45,"line_end":45,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_sphere.rs","byte_start":26979,"byte_end":26988,"line_start":46,"line_end":46,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_sphere.rs","byte_start":27118,"byte_end":27124,"line_start":53,"line_end":53,"column_start":12,"column_end":18},"name":"radius","qualname":"<BoundingSphere<N>>::radius","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The bounding sphere radius.\n","sig":null,"attributes":[{"value":"/ The bounding sphere radius.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_sphere.rs","byte_start":27061,"byte_end":27092,"line_start":51,"line_end":51,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_sphere.rs","byte_start":27097,"byte_end":27106,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":321},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_sphere.rs","byte_start":27239,"byte_end":27251,"line_start":59,"line_end":59,"column_start":12,"column_end":24},"name":"transform_by","qualname":"<BoundingSphere<N>>::transform_by","value":"fn (&self, m: &Isometry<N>) -> BoundingSphere<N>","parent":null,"children":[],"decl_id":null,"docs":" Transforms this bounding sphere by `m`.\n","sig":null,"attributes":[{"value":"/ Transforms this bounding sphere by `m`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_sphere.rs","byte_start":27170,"byte_end":27213,"line_start":57,"line_end":57,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_sphere.rs","byte_start":27218,"byte_end":27227,"line_start":58,"line_end":58,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":510},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_sphere_utils.rs","byte_start":38667,"byte_end":38706,"line_start":8,"line_end":8,"column_start":8,"column_end":47},"name":"point_cloud_bounding_sphere_with_center","qualname":"::bounding_volume::bounding_sphere_utils::point_cloud_bounding_sphere_with_center","value":"fn <N> (pts: &[Point<N>], center: Point<N>) -> (Point<N>, N)","parent":null,"children":[],"decl_id":null,"docs":" Computes the bounding sphere of a set of point, given its center.\n","sig":null,"attributes":[{"value":"/ Computes the bounding sphere of a set of point, given its center.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_sphere_utils.rs","byte_start":38544,"byte_end":38613,"line_start":5,"line_end":5,"column_start":1,"column_end":70}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_sphere_utils.rs","byte_start":38650,"byte_end":38659,"line_start":7,"line_end":7,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":512},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_sphere_utils.rs","byte_start":39163,"byte_end":39190,"line_start":28,"line_end":28,"column_start":8,"column_end":35},"name":"point_cloud_bounding_sphere","qualname":"::bounding_volume::bounding_sphere_utils::point_cloud_bounding_sphere","value":"fn <N> (pts: &[Point<N>]) -> (Point<N>, N)","parent":null,"children":[],"decl_id":null,"docs":" Computes a bounding sphere of the specified set of point.\n","sig":null,"attributes":[{"value":"/ Computes a bounding sphere of the specified set of point.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_sphere_utils.rs","byte_start":39048,"byte_end":39109,"line_start":25,"line_end":25,"column_start":1,"column_end":62}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_sphere_utils.rs","byte_start":39146,"byte_end":39155,"line_start":27,"line_end":27,"column_start":1,"column_end":10}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6622},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/circular_cone.rs","byte_start":39876,"byte_end":39880,"line_start":13,"line_end":13,"column_start":5,"column_end":9},"name":"Full","qualname":"::bounding_volume::circular_cone::CircularCone::Full","value":"CircularCone::Full","parent":{"krate":0,"index":6620},"children":[],"decl_id":null,"docs":" A cone which is the whole space.\n","sig":null,"attributes":[{"value":"/ A cone which is the whole space.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/circular_cone.rs","byte_start":39835,"byte_end":39871,"line_start":12,"line_end":12,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6624},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/circular_cone.rs","byte_start":39941,"byte_end":39946,"line_start":15,"line_end":15,"column_start":5,"column_end":10},"name":"Empty","qualname":"::bounding_volume::circular_cone::CircularCone::Empty","value":"CircularCone::Empty","parent":{"krate":0,"index":6620},"children":[],"decl_id":null,"docs":" An empty cone containing only the zero vector.\n","sig":null,"attributes":[{"value":"/ An empty cone containing only the zero vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/circular_cone.rs","byte_start":39886,"byte_end":39936,"line_start":14,"line_end":14,"column_start":5,"column_end":55}}]},{"kind":"StructVariant","id":{"krate":0,"index":6626},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/circular_cone.rs","byte_start":40048,"byte_end":40054,"line_start":17,"line_end":17,"column_start":5,"column_end":11},"name":"Spread","qualname":"::bounding_volume::circular_cone::CircularCone::Spread","value":"CircularCone::Spread { axis, angle }","parent":{"krate":0,"index":6620},"children":[],"decl_id":null,"docs":" All the vectors emanating from the origin, with a maximal `angle` wrt the given `axis`.\n","sig":null,"attributes":[{"value":"/ All the vectors emanating from the origin, with a maximal `angle` wrt the given `axis`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/circular_cone.rs","byte_start":39952,"byte_end":40043,"line_start":16,"line_end":16,"column_start":5,"column_end":96}}]},{"kind":"Enum","id":{"krate":0,"index":6620},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/circular_cone.rs","byte_start":39802,"byte_end":39814,"line_start":11,"line_end":11,"column_start":10,"column_end":22},"name":"CircularCone","qualname":"::bounding_volume::circular_cone::CircularCone","value":"CircularCone::{Full, Empty, Spread}","parent":null,"children":[{"krate":0,"index":6622},{"krate":0,"index":6624},{"krate":0,"index":6626}],"decl_id":null,"docs":" A cone with a circular basis and its apex at the origin.","sig":null,"attributes":[{"value":"/ A cone with a circular basis and its apex at the origin.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/circular_cone.rs","byte_start":39373,"byte_end":39433,"line_start":4,"line_end":4,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/circular_cone.rs","byte_start":39434,"byte_end":39437,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ A circular cone is a set of half-lines emanating from its apex and forming an angle of at most `angle` with its `axis`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/circular_cone.rs","byte_start":39438,"byte_end":39561,"line_start":6,"line_end":6,"column_start":1,"column_end":124}},{"value":"/ It is usually used to bound a set of directions like normals and tangents.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/circular_cone.rs","byte_start":39562,"byte_end":39640,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/ It is convex and have a circular basis.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/circular_cone.rs","byte_start":39641,"byte_end":39684,"line_start":8,"line_end":8,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":522},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/circular_cone.rs","byte_start":40504,"byte_end":40516,"line_start":30,"line_end":30,"column_start":12,"column_end":24},"name":"from_vectors","qualname":"<CircularCone<N>>::from_vectors","value":"fn (dirs: &[Unit<Vector<N>>]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a circular cone from a set of vectors.\n","sig":null,"attributes":[{"value":"/ Creates a circular cone from a set of vectors.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/circular_cone.rs","byte_start":40442,"byte_end":40492,"line_start":29,"line_end":29,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":523},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/circular_cone.rs","byte_start":40737,"byte_end":40745,"line_start":41,"line_end":41,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<CircularCone<N>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this cone is empty.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this cone is empty.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/circular_cone.rs","byte_start":40684,"byte_end":40725,"line_start":40,"line_end":40,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":524},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/circular_cone.rs","byte_start":40870,"byte_end":40874,"line_start":46,"line_end":46,"column_start":12,"column_end":16},"name":"push","qualname":"<CircularCone<N>>::push","value":"fn (&mut self, dir: Unit<Vector<N>>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Enlarge this cone so it contains `dir` too.\n","sig":null,"attributes":[{"value":"/ Enlarge this cone so it contains `dir` too.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/circular_cone.rs","byte_start":40811,"byte_end":40858,"line_start":45,"line_end":45,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":525},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/circular_cone.rs","byte_start":42108,"byte_end":42118,"line_start":79,"line_end":79,"column_start":12,"column_end":22},"name":"intersects","qualname":"<CircularCone<N>>::intersects","value":"fn (&self, other: &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this cone intersects `other`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this cone intersects `other`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/circular_cone.rs","byte_start":42045,"byte_end":42096,"line_start":78,"line_end":78,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":526},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/circular_cone.rs","byte_start":42917,"byte_end":42939,"line_start":102,"line_end":102,"column_start":12,"column_end":34},"name":"double_cones_intersect","qualname":"<CircularCone<N>>::double_cones_intersect","value":"fn (&self, other: &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if this circular cone, extended to be a double cone, intersects the `other` circular cone, also seen as a double cone.\n","sig":null,"attributes":[{"value":"/ Tests if this circular cone, extended to be a double cone, intersects the `other` circular cone, also seen as a double cone.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/circular_cone.rs","byte_start":42777,"byte_end":42905,"line_start":101,"line_end":101,"column_start":5,"column_end":133}}]},{"kind":"Method","id":{"krate":0,"index":527},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/circular_cone.rs","byte_start":43699,"byte_end":43707,"line_start":125,"line_end":125,"column_start":12,"column_end":20},"name":"contains","qualname":"<CircularCone<N>>::contains","value":"fn (&self, other: &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this cone contains `other`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this cone contains `other`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/circular_cone.rs","byte_start":43638,"byte_end":43687,"line_start":124,"line_end":124,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":528},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/circular_cone.rs","byte_start":44446,"byte_end":44451,"line_start":148,"line_end":148,"column_start":12,"column_end":17},"name":"merge","qualname":"<CircularCone<N>>::merge","value":"fn (&mut self, other: &Self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Merges this cone with `other` in-place.\n","sig":null,"attributes":[{"value":"/ Merges this cone with `other` in-place.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/circular_cone.rs","byte_start":44391,"byte_end":44434,"line_start":147,"line_end":147,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":529},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/circular_cone.rs","byte_start":44571,"byte_end":44577,"line_start":153,"line_end":153,"column_start":12,"column_end":18},"name":"merged","qualname":"<CircularCone<N>>::merged","value":"fn (&self, other: &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Merges this cone with `other`.\n","sig":null,"attributes":[{"value":"/ Merges this cone with `other`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/circular_cone.rs","byte_start":44525,"byte_end":44559,"line_start":152,"line_end":152,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":6648},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/spatialized_normal_cone.rs","byte_start":47720,"byte_end":47741,"line_start":8,"line_end":8,"column_start":12,"column_end":33},"name":"SpatializedNormalCone","qualname":"::bounding_volume::spatialized_normal_cone::SpatializedNormalCone","value":"SpatializedNormalCone { aabb, normals }","parent":null,"children":[{"krate":0,"index":6650},{"krate":0,"index":6651}],"decl_id":null,"docs":" The combination of an AABB with a circular cone to bound both the space occupied by an geometry and its normals.\n","sig":null,"attributes":[{"value":"/ The combination of an AABB with a circular cone to bound both the space occupied by an geometry and its normals.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/spatialized_normal_cone.rs","byte_start":47505,"byte_end":47621,"line_start":5,"line_end":5,"column_start":1,"column_end":117}}]},{"kind":"Field","id":{"krate":0,"index":6650},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/spatialized_normal_cone.rs","byte_start":47825,"byte_end":47829,"line_start":10,"line_end":10,"column_start":9,"column_end":13},"name":"aabb","qualname":"::bounding_volume::spatialized_normal_cone::SpatializedNormalCone::aabb","value":"bounding_volume::aabb::AABB<N>","parent":{"krate":0,"index":6648},"children":[],"decl_id":null,"docs":" An AABB bounding the space occupied by a geometry.\n","sig":null,"attributes":[{"value":"/ An AABB bounding the space occupied by a geometry.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/spatialized_normal_cone.rs","byte_start":47762,"byte_end":47816,"line_start":9,"line_end":9,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":6651},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/spatialized_normal_cone.rs","byte_start":47908,"byte_end":47915,"line_start":12,"line_end":12,"column_start":9,"column_end":16},"name":"normals","qualname":"::bounding_volume::spatialized_normal_cone::SpatializedNormalCone::normals","value":"bounding_volume::circular_cone::CircularCone<N>","parent":{"krate":0,"index":6648},"children":[],"decl_id":null,"docs":" A circular cone bounding the normals of a geometry.\n","sig":null,"attributes":[{"value":"/ A circular cone bounding the normals of a geometry.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/spatialized_normal_cone.rs","byte_start":47844,"byte_end":47899,"line_start":11,"line_end":11,"column_start":5,"column_end":60}}]},{"kind":"Mod","id":{"krate":0,"index":548},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"interpolation","qualname":"::interpolation","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/mod.rs","parent":null,"children":[{"krate":0,"index":549},{"krate":0,"index":555}],"decl_id":null,"docs":" Interpolation of the motion of an object.\n","sig":null,"attributes":[{"value":"! Interpolation of the motion of an object.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/mod.rs","byte_start":49202,"byte_end":49247,"line_start":1,"line_end":1,"column_start":1,"column_end":46}}]},{"kind":"Trait","id":{"krate":0,"index":563},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":49846,"byte_end":49857,"line_start":11,"line_end":11,"column_start":11,"column_end":22},"name":"RigidMotion","qualname":"::interpolation::rigid_motion::RigidMotion","value":"RigidMotion<N: RealField>","parent":null,"children":[{"krate":0,"index":565}],"decl_id":null,"docs":" A continuous rigid motion.","sig":null,"attributes":[{"value":"/ A continuous rigid motion.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":49545,"byte_end":49575,"line_start":6,"line_end":6,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":49576,"byte_end":49579,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This is a function, assumed to be continuous, that, given a parameter `t` returns a direct isometry.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":49580,"byte_end":49684,"line_start":8,"line_end":8,"column_start":1,"column_end":105}},{"value":"/ Mathematically speaking this is a one-parameter curve on the space of direct isometries. This curve","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":49685,"byte_end":49788,"line_start":9,"line_end":9,"column_start":1,"column_end":104}},{"value":"/ should have a continuity of at least `C0`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":49789,"byte_end":49835,"line_start":10,"line_end":10,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":49921,"byte_end":49937,"line_start":13,"line_end":13,"column_start":8,"column_end":24},"name":"position_at_time","qualname":"::interpolation::rigid_motion::RigidMotion::position_at_time","value":"fn (&self, t: N) -> Isometry<N>","parent":{"krate":0,"index":563},"children":[],"decl_id":null,"docs":" Get a position at the time `t`.\n","sig":null,"attributes":[{"value":"/ Get a position at the time `t`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":49878,"byte_end":49913,"line_start":12,"line_end":12,"column_start":5,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":569},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":50215,"byte_end":50238,"line_start":23,"line_end":23,"column_start":12,"column_end":35},"name":"InterpolatedRigidMotion","qualname":"::interpolation::rigid_motion::InterpolatedRigidMotion","value":"InterpolatedRigidMotion { start, end }","parent":null,"children":[{"krate":0,"index":571},{"krate":0,"index":572}],"decl_id":null,"docs":" Interpolation between two isometries using LERP for the translation part and SLERP for the rotation.\n","sig":null,"attributes":[{"value":"/ Interpolation between two isometries using LERP for the translation part and SLERP for the rotation.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":50099,"byte_end":50203,"line_start":22,"line_end":22,"column_start":1,"column_end":105}}]},{"kind":"Field","id":{"krate":0,"index":571},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":50304,"byte_end":50309,"line_start":25,"line_end":25,"column_start":9,"column_end":14},"name":"start","qualname":"::interpolation::rigid_motion::InterpolatedRigidMotion::start","value":"na::Isometry<N, na::U3, na::Unit<na::Quaternion<N>>>","parent":{"krate":0,"index":569},"children":[],"decl_id":null,"docs":" The transformation at `t = 0.0`.\n","sig":null,"attributes":[{"value":"/ The transformation at `t = 0.0`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":50259,"byte_end":50295,"line_start":24,"line_end":24,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":572},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":50373,"byte_end":50376,"line_start":27,"line_end":27,"column_start":9,"column_end":12},"name":"end","qualname":"::interpolation::rigid_motion::InterpolatedRigidMotion::end","value":"na::Isometry<N, na::U3, na::Unit<na::Quaternion<N>>>","parent":{"krate":0,"index":569},"children":[],"decl_id":null,"docs":" The transformation at `t = 1.0`.\n","sig":null,"attributes":[{"value":"/ The transformation at `t = 1.0`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":50328,"byte_end":50364,"line_start":26,"line_end":26,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":575},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":50680,"byte_end":50683,"line_start":35,"line_end":35,"column_start":12,"column_end":15},"name":"new","qualname":"<InterpolatedRigidMotion<N>>::new","value":"fn (start: Isometry<N>, end: Isometry<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Initialize a lerp-slerp interpolation with the given start and end transformations.","sig":null,"attributes":[{"value":"/ Initialize a lerp-slerp interpolation with the given start and end transformations.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":50446,"byte_end":50533,"line_start":31,"line_end":31,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":50538,"byte_end":50541,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ The `start` is the transformation at the time `t = 0.0` and `end` is the transformation at","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":50546,"byte_end":50640,"line_start":33,"line_end":33,"column_start":5,"column_end":99}},{"value":"/ the time `t = 1.0`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":50645,"byte_end":50668,"line_start":34,"line_end":34,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":579},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":51064,"byte_end":51097,"line_start":47,"line_end":47,"column_start":12,"column_end":45},"name":"ConstantLinearVelocityRigidMotion","qualname":"::interpolation::rigid_motion::ConstantLinearVelocityRigidMotion","value":"ConstantLinearVelocityRigidMotion { t0, start, velocity }","parent":null,"children":[{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":583}],"decl_id":null,"docs":" A linear motion from a starting isometry traveling at constant translational velocity.\n","sig":null,"attributes":[{"value":"/ A linear motion from a starting isometry traveling at constant translational velocity.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":50962,"byte_end":51052,"line_start":46,"line_end":46,"column_start":1,"column_end":91}}]},{"kind":"Field","id":{"krate":0,"index":581},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":51194,"byte_end":51196,"line_start":49,"line_end":49,"column_start":9,"column_end":11},"name":"t0","qualname":"::interpolation::rigid_motion::ConstantLinearVelocityRigidMotion::t0","value":"N","parent":{"krate":0,"index":579},"children":[],"decl_id":null,"docs":" The time at which this parametrization begins. Can be negative.\n","sig":null,"attributes":[{"value":"/ The time at which this parametrization begins. Can be negative.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":51118,"byte_end":51185,"line_start":48,"line_end":48,"column_start":5,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":582},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":51257,"byte_end":51262,"line_start":51,"line_end":51,"column_start":9,"column_end":14},"name":"start","qualname":"::interpolation::rigid_motion::ConstantLinearVelocityRigidMotion::start","value":"na::Isometry<N, na::U3, na::Unit<na::Quaternion<N>>>","parent":{"krate":0,"index":579},"children":[],"decl_id":null,"docs":" The starting isometry at `t = self.t0`.\n","sig":null,"attributes":[{"value":"/ The starting isometry at `t = self.t0`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":51205,"byte_end":51248,"line_start":50,"line_end":50,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":583},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":51336,"byte_end":51344,"line_start":53,"line_end":53,"column_start":9,"column_end":17},"name":"velocity","qualname":"::interpolation::rigid_motion::ConstantLinearVelocityRigidMotion::velocity","value":"na::Matrix<N, na::U3, na::U1, <na::DefaultAllocator as na::allocator::Allocator<N, na::U3>>::Buffer>","parent":{"krate":0,"index":579},"children":[],"decl_id":null,"docs":" The translational velocity of this motion.\n","sig":null,"attributes":[{"value":"/ The translational velocity of this motion.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":51281,"byte_end":51327,"line_start":52,"line_end":52,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":586},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":51519,"byte_end":51522,"line_start":58,"line_end":58,"column_start":12,"column_end":15},"name":"new","qualname":"<ConstantLinearVelocityRigidMotion<N>>::new","value":"fn (t0: N, start: Isometry<N>, velocity: Vector<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Initialize a linear motion from a starting isometry and a translational velocity.\n","sig":null,"attributes":[{"value":"/ Initialize a linear motion from a starting isometry and a translational velocity.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":51422,"byte_end":51507,"line_start":57,"line_end":57,"column_start":5,"column_end":90}}]},{"kind":"Struct","id":{"krate":0,"index":6658},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":52117,"byte_end":52144,"line_start":78,"line_end":78,"column_start":12,"column_end":39},"name":"ConstantVelocityRigidMotion","qualname":"::interpolation::rigid_motion::ConstantVelocityRigidMotion","value":"ConstantVelocityRigidMotion { t0, start, local_center, linvel, angvel }","parent":null,"children":[{"krate":0,"index":6660},{"krate":0,"index":6661},{"krate":0,"index":6662},{"krate":0,"index":6663},{"krate":0,"index":6664}],"decl_id":null,"docs":" A linear motion from a starting isometry traveling at constant translational velocity.\n","sig":null,"attributes":[{"value":"/ A linear motion from a starting isometry traveling at constant translational velocity.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":51998,"byte_end":52088,"line_start":76,"line_end":76,"column_start":1,"column_end":91}}]},{"kind":"Field","id":{"krate":0,"index":6660},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":52241,"byte_end":52243,"line_start":80,"line_end":80,"column_start":9,"column_end":11},"name":"t0","qualname":"::interpolation::rigid_motion::ConstantVelocityRigidMotion::t0","value":"N","parent":{"krate":0,"index":6658},"children":[],"decl_id":null,"docs":" The time at which this parametrization begins. Can be negative.\n","sig":null,"attributes":[{"value":"/ The time at which this parametrization begins. Can be negative.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":52165,"byte_end":52232,"line_start":79,"line_end":79,"column_start":5,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":6661},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":52304,"byte_end":52309,"line_start":82,"line_end":82,"column_start":9,"column_end":14},"name":"start","qualname":"::interpolation::rigid_motion::ConstantVelocityRigidMotion::start","value":"na::Isometry<N, na::U3, na::Unit<na::Quaternion<N>>>","parent":{"krate":0,"index":6658},"children":[],"decl_id":null,"docs":" The starting isometry at `t = self.t0`.\n","sig":null,"attributes":[{"value":"/ The starting isometry at `t = self.t0`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":52252,"byte_end":52295,"line_start":81,"line_end":81,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":6662},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":52418,"byte_end":52430,"line_start":84,"line_end":84,"column_start":9,"column_end":21},"name":"local_center","qualname":"::interpolation::rigid_motion::ConstantVelocityRigidMotion::local_center","value":"na::Point<N, na::U3>","parent":{"krate":0,"index":6658},"children":[],"decl_id":null,"docs":" The local-space point at which the rotational part of this motion is applied.\n","sig":null,"attributes":[{"value":"/ The local-space point at which the rotational part of this motion is applied.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":52328,"byte_end":52409,"line_start":83,"line_end":83,"column_start":5,"column_end":86}}]},{"kind":"Field","id":{"krate":0,"index":6663},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":52501,"byte_end":52507,"line_start":86,"line_end":86,"column_start":9,"column_end":15},"name":"linvel","qualname":"::interpolation::rigid_motion::ConstantVelocityRigidMotion::linvel","value":"na::Matrix<N, na::U3, na::U1, <na::DefaultAllocator as na::allocator::Allocator<N, na::U3>>::Buffer>","parent":{"krate":0,"index":6658},"children":[],"decl_id":null,"docs":" The translational velocity of this motion.\n","sig":null,"attributes":[{"value":"/ The translational velocity of this motion.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":52446,"byte_end":52492,"line_start":85,"line_end":85,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":6664},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":52695,"byte_end":52701,"line_start":92,"line_end":92,"column_start":9,"column_end":15},"name":"angvel","qualname":"::interpolation::rigid_motion::ConstantVelocityRigidMotion::angvel","value":"na::Matrix<N, na::U3, na::U1, <na::DefaultAllocator as na::allocator::Allocator<N, na::U3>>::Buffer>","parent":{"krate":0,"index":6658},"children":[],"decl_id":null,"docs":" The angular velocity of this motion.\n","sig":null,"attributes":[{"value":"/ The angular velocity of this motion.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":52617,"byte_end":52657,"line_start":90,"line_end":90,"column_start":5,"column_end":45}},{"value":"cfg(feature = \"dim3\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":52662,"byte_end":52686,"line_start":91,"line_end":91,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":592},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":53323,"byte_end":53326,"line_start":116,"line_end":116,"column_start":12,"column_end":15},"name":"new","qualname":"<ConstantVelocityRigidMotion<N>>::new","value":"fn (t0: N, start: Isometry<N>, local_center: Point<N>, linvel: Vector<N>, angvel: Vector<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Initialize a motion from a starting isometry and linear and angular velocities.\n","sig":null,"attributes":[{"value":"/ Initialize a motion from a starting isometry and linear and angular velocities.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":53199,"byte_end":53282,"line_start":114,"line_end":114,"column_start":5,"column_end":88}},{"value":"cfg(feature = \"dim3\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":53287,"byte_end":53311,"line_start":115,"line_end":115,"column_start":5,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":596},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":54234,"byte_end":54256,"line_start":151,"line_end":151,"column_start":11,"column_end":33},"name":"RigidMotionComposition","qualname":"::interpolation::rigid_motion::RigidMotionComposition","value":"RigidMotionComposition<N: RealField>: RigidMotion<N>","parent":null,"children":[{"krate":0,"index":598},{"krate":0,"index":599}],"decl_id":null,"docs":" Trait for composing some rigid motions.\n","sig":null,"attributes":[{"value":"/ Trait for composing some rigid motions.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":54180,"byte_end":54223,"line_start":150,"line_end":150,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":54354,"byte_end":54373,"line_start":153,"line_end":153,"column_start":8,"column_end":27},"name":"prepend_translation","qualname":"::interpolation::rigid_motion::RigidMotionComposition::prepend_translation","value":"fn (&self, translation: Vector<N>) -> PrependTranslation<N, Self>","parent":{"krate":0,"index":596},"children":[],"decl_id":null,"docs":" Prepend a translation to the rigid motion `self`.\n","sig":null,"attributes":[{"value":"/ Prepend a translation to the rigid motion `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":54293,"byte_end":54346,"line_start":152,"line_end":152,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":599},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":54603,"byte_end":54625,"line_start":161,"line_end":161,"column_start":8,"column_end":30},"name":"prepend_transformation","qualname":"::interpolation::rigid_motion::RigidMotionComposition::prepend_transformation","value":"fn (&self, transformation: Isometry<N>) -> PrependTransformation<N, Self>","parent":{"krate":0,"index":596},"children":[],"decl_id":null,"docs":" Prepend a transformation to the rigid motion `self`.\n","sig":null,"attributes":[{"value":"/ Prepend a transformation to the rigid motion `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":54539,"byte_end":54595,"line_start":160,"line_end":160,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":603},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":54982,"byte_end":55000,"line_start":175,"line_end":175,"column_start":12,"column_end":30},"name":"PrependTranslation","qualname":"::interpolation::rigid_motion::PrependTranslation","value":"PrependTranslation {  }","parent":null,"children":[{"krate":0,"index":607},{"krate":0,"index":608}],"decl_id":null,"docs":" The result of prepending a translation to a rigid motion.\n","sig":null,"attributes":[{"value":"/ The result of prepending a translation to a rigid motion.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":54909,"byte_end":54970,"line_start":174,"line_end":174,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":614},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":55430,"byte_end":55451,"line_start":188,"line_end":188,"column_start":12,"column_end":33},"name":"PrependTransformation","qualname":"::interpolation::rigid_motion::PrependTransformation","value":"PrependTransformation {  }","parent":null,"children":[{"krate":0,"index":618},{"krate":0,"index":619}],"decl_id":null,"docs":" The result of prepending an isometric transformation to a rigid motion.\n","sig":null,"attributes":[{"value":"/ The result of prepending an isometric transformation to a rigid motion.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":55343,"byte_end":55418,"line_start":187,"line_end":187,"column_start":1,"column_end":76}}]},{"kind":"Mod","id":{"krate":0,"index":625},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"partitioning","qualname":"::partitioning","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/mod.rs","parent":null,"children":[{"krate":0,"index":626},{"krate":0,"index":629},{"krate":0,"index":633},{"krate":0,"index":638},{"krate":0,"index":644},{"krate":0,"index":726},{"krate":0,"index":789},{"krate":0,"index":837}],"decl_id":null,"docs":" Spatial partitioning tools.\n","sig":null,"attributes":[{"value":"! Spatial partitioning tools.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/mod.rs","byte_start":55790,"byte_end":55821,"line_start":1,"line_end":1,"column_start":1,"column_end":32}}]},{"kind":"Trait","id":{"krate":0,"index":658},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvh.rs","byte_start":56427,"byte_end":56430,"line_start":10,"line_end":10,"column_start":11,"column_end":14},"name":"BVH","qualname":"::partitioning::bvh::BVH","value":"BVH<T, BV>","parent":null,"children":[{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":663},{"krate":0,"index":664},{"krate":0,"index":665},{"krate":0,"index":666},{"krate":0,"index":668},{"krate":0,"index":671}],"decl_id":null,"docs":" Trait implemented by Bounding Volume Hierarchy.\n","sig":null,"attributes":[{"value":"/ Trait implemented by Bounding Volume Hierarchy.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvh.rs","byte_start":56365,"byte_end":56416,"line_start":9,"line_end":9,"column_start":1,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":661},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvh.rs","byte_start":56497,"byte_end":56501,"line_start":12,"line_end":12,"column_start":10,"column_end":14},"name":"Node","qualname":"::partitioning::bvh::BVH::Node","value":"type Node: Copy;","parent":{"krate":0,"index":658},"children":[],"decl_id":null,"docs":" Type of a node identifiers on this BVH.\n","sig":null,"attributes":[{"value":"/ Type of a node identifiers on this BVH.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvh.rs","byte_start":56444,"byte_end":56487,"line_start":11,"line_end":11,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":662},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvh.rs","byte_start":56546,"byte_end":56550,"line_start":15,"line_end":15,"column_start":8,"column_end":12},"name":"root","qualname":"::partitioning::bvh::BVH::root","value":"fn (&self) -> Option<Self::Node>","parent":{"krate":0,"index":658},"children":[],"decl_id":null,"docs":" The root of the BVH.\n","sig":null,"attributes":[{"value":"/ The root of the BVH.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvh.rs","byte_start":56514,"byte_end":56538,"line_start":14,"line_end":14,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":663},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvh.rs","byte_start":56638,"byte_end":56650,"line_start":17,"line_end":17,"column_start":8,"column_end":20},"name":"num_children","qualname":"::partitioning::bvh::BVH::num_children","value":"fn (&self, node: Self::Node) -> usize","parent":{"krate":0,"index":658},"children":[],"decl_id":null,"docs":" The number of children of the given node.\n","sig":null,"attributes":[{"value":"/ The number of children of the given node.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvh.rs","byte_start":56585,"byte_end":56630,"line_start":16,"line_end":16,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":664},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvh.rs","byte_start":56735,"byte_end":56740,"line_start":19,"line_end":19,"column_start":8,"column_end":13},"name":"child","qualname":"::partitioning::bvh::BVH::child","value":"fn (&self, i: usize, node: Self::Node) -> Self::Node","parent":{"krate":0,"index":658},"children":[],"decl_id":null,"docs":" The i-th child of the given node.\n","sig":null,"attributes":[{"value":"/ The i-th child of the given node.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvh.rs","byte_start":56690,"byte_end":56727,"line_start":18,"line_end":18,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":665},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvh.rs","byte_start":56864,"byte_end":56871,"line_start":21,"line_end":21,"column_start":8,"column_end":15},"name":"content","qualname":"::partitioning::bvh::BVH::content","value":"fn (&self, node: Self::Node) -> (&BV, Option<&T>)","parent":{"krate":0,"index":658},"children":[],"decl_id":null,"docs":" The bounding volume and data contained by the given node.\n","sig":null,"attributes":[{"value":"/ The bounding volume and data contained by the given node.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvh.rs","byte_start":56795,"byte_end":56856,"line_start":20,"line_end":20,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":666},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvh.rs","byte_start":56971,"byte_end":56976,"line_start":24,"line_end":24,"column_start":8,"column_end":13},"name":"visit","qualname":"::partitioning::bvh::BVH::visit","value":"fn (&self, visitor: &mut impl Visitor<T, BV>) -> ()","parent":{"krate":0,"index":658},"children":[],"decl_id":null,"docs":" Traverses this BVH using a visitor.\n","sig":null,"attributes":[{"value":"/ Traverses this BVH using a visitor.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvh.rs","byte_start":56924,"byte_end":56963,"line_start":23,"line_end":23,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":668},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvh.rs","byte_start":57793,"byte_end":57803,"line_start":48,"line_end":48,"column_start":8,"column_end":18},"name":"visit_bvtt","qualname":"::partitioning::bvh::BVH::visit_bvtt","value":"fn (&self, other: &impl BVH<T, BV>, visitor: &mut impl SimultaneousVisitor<T, BV>) -> ()","parent":{"krate":0,"index":658},"children":[],"decl_id":null,"docs":" Visits the bounding volume test tree implicitly formed with `other`.\n","sig":null,"attributes":[{"value":"/ Visits the bounding volume test tree implicitly formed with `other`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvh.rs","byte_start":57713,"byte_end":57785,"line_start":47,"line_end":47,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":671},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvh.rs","byte_start":60014,"byte_end":60031,"line_start":101,"line_end":101,"column_start":8,"column_end":25},"name":"best_first_search","qualname":"::partitioning::bvh::BVH::best_first_search","value":"fn <N, BFS> (&self, visitor: &mut BFS) -> Option<(Self::Node, BFS::Result)>","parent":{"krate":0,"index":658},"children":[],"decl_id":null,"docs":" Performs a best-first-search on the BVH.","sig":null,"attributes":[{"value":"/ Performs a best-first-search on the BVH.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvh.rs","byte_start":59836,"byte_end":59880,"line_start":97,"line_end":97,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvh.rs","byte_start":59885,"byte_end":59888,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ Returns the content of the leaf with the smallest associated cost, and a result of","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvh.rs","byte_start":59893,"byte_end":59979,"line_start":99,"line_end":99,"column_start":5,"column_end":91}},{"value":"/ user-defined type.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvh.rs","byte_start":59984,"byte_end":60006,"line_start":100,"line_end":100,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6673},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvh.rs","byte_start":62817,"byte_end":62820,"line_start":167,"line_end":167,"column_start":5,"column_end":8},"name":"BVT","qualname":"::partitioning::bvh::BVHImpl::BVT","value":"BVHImpl::BVT(&'a BVT<T, BV>)","parent":{"krate":0,"index":6668},"children":[],"decl_id":null,"docs":" A static binary bounding volume tree.\n","sig":null,"attributes":[{"value":"/ A static binary bounding volume tree.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvh.rs","byte_start":62770,"byte_end":62812,"line_start":166,"line_end":166,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6676},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvh.rs","byte_start":62889,"byte_end":62893,"line_start":169,"line_end":169,"column_start":5,"column_end":9},"name":"DBVT","qualname":"::partitioning::bvh::BVHImpl::DBVT","value":"BVHImpl::DBVT(&'a DBVT<N, T, BV>)","parent":{"krate":0,"index":6668},"children":[],"decl_id":null,"docs":" A dynamic binary bounding volume tree.\n","sig":null,"attributes":[{"value":"/ A dynamic binary bounding volume tree.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvh.rs","byte_start":62842,"byte_end":62884,"line_start":168,"line_end":168,"column_start":5,"column_end":47}}]},{"kind":"Enum","id":{"krate":0,"index":6668},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvh.rs","byte_start":62718,"byte_end":62725,"line_start":165,"line_end":165,"column_start":10,"column_end":17},"name":"BVHImpl","qualname":"::partitioning::bvh::BVHImpl","value":"BVHImpl::{BVT, DBVT}","parent":null,"children":[{"krate":0,"index":6673},{"krate":0,"index":6676}],"decl_id":null,"docs":" An enum grouping references to all the BVH implementations on ncollide.\n","sig":null,"attributes":[{"value":"/ An enum grouping references to all the BVH implementations on ncollide.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvh.rs","byte_start":62610,"byte_end":62685,"line_start":163,"line_end":163,"column_start":1,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":678},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvh.rs","byte_start":62998,"byte_end":63007,"line_start":175,"line_end":175,"column_start":5,"column_end":14},"name":"BVTNodeId","qualname":"::partitioning::bvh::BVHNodeId::BVTNodeId","value":"BVHNodeId::BVTNodeId(BVTNodeId)","parent":{"krate":0,"index":677},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":681},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvh.rs","byte_start":63049,"byte_end":63059,"line_start":177,"line_end":177,"column_start":5,"column_end":15},"name":"DBVTNodeId","qualname":"::partitioning::bvh::BVHNodeId::DBVTNodeId","value":"BVHNodeId::DBVTNodeId(DBVTNodeId)","parent":{"krate":0,"index":677},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":677},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvh.rs","byte_start":62958,"byte_end":62967,"line_start":173,"line_end":173,"column_start":10,"column_end":19},"name":"BVHNodeId","qualname":"::partitioning::bvh::BVHNodeId","value":"BVHNodeId::{BVTNodeId, DBVTNodeId}","parent":null,"children":[{"krate":0,"index":678},{"krate":0,"index":681}],"decl_id":null,"docs":" The Id of a node of a BVH.\n","sig":null,"attributes":[{"value":"/ The Id of a node of a BVH.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvh.rs","byte_start":62918,"byte_end":62948,"line_start":172,"line_end":172,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":689},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvh.rs","byte_start":63246,"byte_end":63256,"line_start":183,"line_end":183,"column_start":12,"column_end":22},"name":"unwrap_bvt","qualname":"<BVHImpl>::unwrap_bvt","value":"fn (self) -> &'a BVT<T, BV>","parent":null,"children":[],"decl_id":null,"docs":" Gets the underlying reference to a BVT, or panics if this is not a `BVTImpl::BVT`.\n","sig":null,"attributes":[{"value":"/ Gets the underlying reference to a BVT, or panics if this is not a `BVTImpl::BVT`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvh.rs","byte_start":63134,"byte_end":63220,"line_start":181,"line_end":181,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvh.rs","byte_start":63225,"byte_end":63234,"line_start":182,"line_end":182,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":690},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvh.rs","byte_start":63532,"byte_end":63543,"line_start":192,"line_end":192,"column_start":12,"column_end":23},"name":"unwrap_dbvt","qualname":"<BVHImpl>::unwrap_dbvt","value":"fn (self) -> &'a DBVT<N, T, BV>","parent":null,"children":[],"decl_id":null,"docs":" Gets the underlying reference to a DBVT, or panics if this is not a `BVTImpl::DBVT`.\n","sig":null,"attributes":[{"value":"/ Gets the underlying reference to a DBVT, or panics if this is not a `BVTImpl::DBVT`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvh.rs","byte_start":63418,"byte_end":63506,"line_start":190,"line_end":190,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvh.rs","byte_start":63511,"byte_end":63520,"line_start":191,"line_end":191,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":691},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvh.rs","byte_start":63765,"byte_end":63770,"line_start":200,"line_end":200,"column_start":12,"column_end":17},"name":"visit","qualname":"<BVHImpl>::visit","value":"fn (self, visitor: &mut impl Visitor<T, BV>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Traverses this tree using a visitor.\n","sig":null,"attributes":[{"value":"/ Traverses this tree using a visitor.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvh.rs","byte_start":63713,"byte_end":63753,"line_start":199,"line_end":199,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":693},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvh.rs","byte_start":64054,"byte_end":64064,"line_start":208,"line_end":208,"column_start":12,"column_end":22},"name":"visit_bvtt","qualname":"<BVHImpl>::visit_bvtt","value":"fn (self, other: BVHImpl<N, T, BV>, visitor: &mut impl SimultaneousVisitor<T, BV>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Visits the bounding volume traversal tree implicitly formed with `other`.\n","sig":null,"attributes":[{"value":"/ Visits the bounding volume traversal tree implicitly formed with `other`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvh.rs","byte_start":63965,"byte_end":64042,"line_start":207,"line_end":207,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":698},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvh.rs","byte_start":65009,"byte_end":65026,"line_start":236,"line_end":236,"column_start":12,"column_end":29},"name":"best_first_search","qualname":"<BVHImpl>::best_first_search","value":"fn <BFS> (self, visitor: &mut BFS) -> Option<(BVHNodeId, BFS::Result)>","parent":null,"children":[],"decl_id":null,"docs":" Performs a best-fist-search on the tree.","sig":null,"attributes":[{"value":"/ Performs a best-fist-search on the tree.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvh.rs","byte_start":64827,"byte_end":64871,"line_start":232,"line_end":232,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvh.rs","byte_start":64876,"byte_end":64879,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ Returns the content of the leaf with the smallest associated cost, and a result of","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvh.rs","byte_start":64884,"byte_end":64970,"line_start":234,"line_end":234,"column_start":5,"column_end":91}},{"value":"/ user-defined type.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvh.rs","byte_start":64975,"byte_end":64997,"line_start":235,"line_end":235,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":6690},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvt.rs","byte_start":66942,"byte_end":66945,"line_start":15,"line_end":15,"column_start":12,"column_end":15},"name":"BVT","qualname":"::partitioning::bvt::BVT","value":"BVT {  }","parent":null,"children":[{"krate":0,"index":6693},{"krate":0,"index":6694},{"krate":0,"index":6695},{"krate":0,"index":6696},{"krate":0,"index":6697},{"krate":0,"index":6698}],"decl_id":null,"docs":" A Bounding Volume Tree.\n","sig":null,"attributes":[{"value":"/ A Bounding Volume Tree.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvt.rs","byte_start":66823,"byte_end":66850,"line_start":12,"line_end":12,"column_start":1,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6704},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvt.rs","byte_start":67611,"byte_end":67619,"line_start":33,"line_end":33,"column_start":5,"column_end":13},"name":"Internal","qualname":"::partitioning::bvt::BVTNodeId::Internal","value":"BVTNodeId::Internal(usize)","parent":{"krate":0,"index":6703},"children":[],"decl_id":null,"docs":" Identifier of an internal node.\n","sig":null,"attributes":[{"value":"/ Identifier of an internal node.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvt.rs","byte_start":67571,"byte_end":67606,"line_start":32,"line_end":32,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6707},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvt.rs","byte_start":67667,"byte_end":67671,"line_start":35,"line_end":35,"column_start":5,"column_end":9},"name":"Leaf","qualname":"::partitioning::bvt::BVTNodeId::Leaf","value":"BVTNodeId::Leaf(usize)","parent":{"krate":0,"index":6703},"children":[],"decl_id":null,"docs":" Identifier of a leaf node.\n","sig":null,"attributes":[{"value":"/ Identifier of a leaf node.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvt.rs","byte_start":67632,"byte_end":67662,"line_start":34,"line_end":34,"column_start":5,"column_end":35}}]},{"kind":"Enum","id":{"krate":0,"index":6703},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvt.rs","byte_start":67555,"byte_end":67564,"line_start":31,"line_end":31,"column_start":10,"column_end":19},"name":"BVTNodeId","qualname":"::partitioning::bvt::BVTNodeId","value":"BVTNodeId::{Internal, Leaf}","parent":null,"children":[{"krate":0,"index":6704},{"krate":0,"index":6707}],"decl_id":null,"docs":" The identifier of a BVT node.\n","sig":null,"attributes":[{"value":"/ The identifier of a BVT node.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvt.rs","byte_start":67398,"byte_end":67431,"line_start":28,"line_end":28,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":6733},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvt.rs","byte_start":67973,"byte_end":67980,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"BVTLeaf","qualname":"::partitioning::bvt::BVTLeaf","value":"BVTLeaf {  }","parent":null,"children":[{"krate":0,"index":6736},{"krate":0,"index":6737}],"decl_id":null,"docs":" A leaf of the BVT.\n","sig":null,"attributes":[{"value":"/ A leaf of the BVT.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvt.rs","byte_start":67859,"byte_end":67881,"line_start":46,"line_end":46,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":740},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvt.rs","byte_start":68134,"byte_end":68149,"line_start":57,"line_end":57,"column_start":12,"column_end":27},"name":"bounding_volume","qualname":"<BVTLeaf<T, BV>>::bounding_volume","value":"fn (&self) -> &BV","parent":null,"children":[],"decl_id":null,"docs":" The bounding volume stored on this leaf.\n","sig":null,"attributes":[{"value":"/ The bounding volume stored on this leaf.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvt.rs","byte_start":68064,"byte_end":68108,"line_start":55,"line_end":55,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvt.rs","byte_start":68113,"byte_end":68122,"line_start":56,"line_end":56,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":741},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvt.rs","byte_start":68271,"byte_end":68275,"line_start":63,"line_end":63,"column_start":12,"column_end":16},"name":"data","qualname":"<BVTLeaf<T, BV>>::data","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" The user-data stored on this leaf.\n","sig":null,"attributes":[{"value":"/ The user-data stored on this leaf.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvt.rs","byte_start":68207,"byte_end":68245,"line_start":61,"line_end":61,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvt.rs","byte_start":68250,"byte_end":68259,"line_start":62,"line_end":62,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":745},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvt.rs","byte_start":68594,"byte_end":68598,"line_start":78,"line_end":78,"column_start":5,"column_end":9},"name":"Part","qualname":"::partitioning::bvt::BinaryPartition::Part","value":"BinaryPartition::Part(T)","parent":{"krate":0,"index":742},"children":[],"decl_id":null,"docs":" Result of the partitioning of one element.\n","sig":null,"attributes":[{"value":"/ Result of the partitioning of one element.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvt.rs","byte_start":68543,"byte_end":68589,"line_start":77,"line_end":77,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":748},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvt.rs","byte_start":68663,"byte_end":68668,"line_start":80,"line_end":80,"column_start":5,"column_end":10},"name":"Parts","qualname":"::partitioning::bvt::BinaryPartition::Parts","value":"BinaryPartition::Parts(Vec<(T, BV)>, Vec<(T, BV)>)","parent":{"krate":0,"index":742},"children":[],"decl_id":null,"docs":" Result of the partitioning of several elements.\n","sig":null,"attributes":[{"value":"/ Result of the partitioning of several elements.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvt.rs","byte_start":68607,"byte_end":68658,"line_start":79,"line_end":79,"column_start":5,"column_end":56}}]},{"kind":"Enum","id":{"krate":0,"index":742},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvt.rs","byte_start":68514,"byte_end":68529,"line_start":76,"line_end":76,"column_start":10,"column_end":25},"name":"BinaryPartition","qualname":"::partitioning::bvt::BinaryPartition","value":"BinaryPartition::{Part, Parts}","parent":null,"children":[{"krate":0,"index":745},{"krate":0,"index":748}],"decl_id":null,"docs":" Result of a binary partition.\n","sig":null,"attributes":[{"value":"/ Result of a binary partition.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvt.rs","byte_start":68471,"byte_end":68504,"line_start":75,"line_end":75,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":755},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvt.rs","byte_start":68885,"byte_end":68906,"line_start":86,"line_end":86,"column_start":12,"column_end":33},"name":"new_with_partitioning","qualname":"<BVT<T, BV>>::new_with_partitioning","value":"fn <F> (elements: Vec<(T, BV)>, partitioning: &mut F) -> BVT<T, BV>","parent":null,"children":[],"decl_id":null,"docs":" Builds a bounding volume tree using the specified partitioning function.\n","sig":null,"attributes":[{"value":"/ Builds a bounding volume tree using the specified partitioning function.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvt.rs","byte_start":68730,"byte_end":68806,"line_start":84,"line_end":84,"column_start":5,"column_end":81}},{"value":"deprecated(note = \"please use `from_partitioning` instead\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvt.rs","byte_start":68811,"byte_end":68873,"line_start":85,"line_end":85,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":757},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvt.rs","byte_start":69258,"byte_end":69275,"line_start":95,"line_end":95,"column_start":12,"column_end":29},"name":"from_partitioning","qualname":"<BVT<T, BV>>::from_partitioning","value":"fn (elements: Vec<(T, BV)>, partitioning:\n    &mut impl FnMut(usize, Vec<(T, BV)>) -> (BV, BinaryPartition<T, BV>)) -> BVT<T, BV>","parent":null,"children":[],"decl_id":null,"docs":" Builds a bounding volume tree using the specified partitioning function.\n","sig":null,"attributes":[{"value":"/ Builds a bounding volume tree using the specified partitioning function.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvt.rs","byte_start":69170,"byte_end":69246,"line_start":94,"line_end":94,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":759},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvt.rs","byte_start":70372,"byte_end":70378,"line_start":129,"line_end":129,"column_start":12,"column_end":18},"name":"leaves","qualname":"<BVT<T, BV>>::leaves","value":"fn (&self) -> &[BVTLeaf<T, BV>]","parent":null,"children":[],"decl_id":null,"docs":" The set of leaves on this BVT.\n","sig":null,"attributes":[{"value":"/ The set of leaves on this BVT.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvt.rs","byte_start":70312,"byte_end":70346,"line_start":127,"line_end":127,"column_start":5,"column_end":39}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvt.rs","byte_start":70351,"byte_end":70360,"line_start":128,"line_end":128,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":760},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvt.rs","byte_start":70509,"byte_end":70513,"line_start":135,"line_end":135,"column_start":12,"column_end":16},"name":"leaf","qualname":"<BVT<T, BV>>::leaf","value":"fn (&self, i: usize) -> &BVTLeaf<T, BV>","parent":null,"children":[],"decl_id":null,"docs":" Referenceto the i-th leaf of this BVT.\n","sig":null,"attributes":[{"value":"/ Referenceto the i-th leaf of this BVT.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvt.rs","byte_start":70441,"byte_end":70483,"line_start":133,"line_end":133,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvt.rs","byte_start":70488,"byte_end":70497,"line_start":134,"line_end":134,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":761},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvt.rs","byte_start":70653,"byte_end":70673,"line_start":140,"line_end":140,"column_start":12,"column_end":32},"name":"root_bounding_volume","qualname":"<BVT<T, BV>>::root_bounding_volume","value":"fn (&self) -> Option<&BV>","parent":null,"children":[],"decl_id":null,"docs":" Reference to the bounding volume of the tree root.\n","sig":null,"attributes":[{"value":"/ Reference to the bounding volume of the tree root.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvt.rs","byte_start":70587,"byte_end":70641,"line_start":139,"line_end":139,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":762},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvt.rs","byte_start":71425,"byte_end":71449,"line_start":158,"line_end":158,"column_start":12,"column_end":36},"name":"set_leaf_bounding_volume","qualname":"<BVT<T, BV>>::set_leaf_bounding_volume","value":"fn <N> (&mut self, i: usize, bv: BV, refit_now: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the bounding volume of the i-th leaf.","sig":null,"attributes":[{"value":"/ Set the bounding volume of the i-th leaf.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvt.rs","byte_start":70970,"byte_end":71015,"line_start":151,"line_end":151,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvt.rs","byte_start":71020,"byte_end":71023,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ If `refit_now` is `true`, the bounding volumes of all the ancestors of the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvt.rs","byte_start":71028,"byte_end":71106,"line_start":153,"line_end":153,"column_start":5,"column_end":83}},{"value":"/ modifiad leaf will be updated as well to enclose the new leaf bounding volume.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvt.rs","byte_start":71111,"byte_end":71193,"line_start":154,"line_end":154,"column_start":5,"column_end":87}},{"value":"/ If `refit_now` is `false`, no ancestor update will be performed until the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvt.rs","byte_start":71198,"byte_end":71275,"line_start":155,"line_end":155,"column_start":5,"column_end":82}},{"value":"/ `.refit()` method is called. This is useful to refit the tree only once after","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvt.rs","byte_start":71280,"byte_end":71361,"line_start":156,"line_end":156,"column_start":5,"column_end":86}},{"value":"/ several leaf bounding volume modifications.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvt.rs","byte_start":71366,"byte_end":71413,"line_start":157,"line_end":157,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":764},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvt.rs","byte_start":73599,"byte_end":73604,"line_start":202,"line_end":202,"column_start":12,"column_end":17},"name":"refit","qualname":"<BVT<T, BV>>::refit","value":"fn <N> (&mut self, margin: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Refits the bounding volumes so that all node of the BVT have boundin volumes that enclose their children.","sig":null,"attributes":[{"value":"/ Refits the bounding volumes so that all node of the BVT have boundin volumes that enclose their children.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvt.rs","byte_start":73037,"byte_end":73146,"line_start":194,"line_end":194,"column_start":5,"column_end":114}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvt.rs","byte_start":73151,"byte_end":73154,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ This must be called to ensure the BVT is in a valid state after several calls to","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvt.rs","byte_start":73159,"byte_end":73243,"line_start":196,"line_end":196,"column_start":5,"column_end":89}},{"value":"/ `.set_leaf_bounding_volume(_, _, false)`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvt.rs","byte_start":73248,"byte_end":73293,"line_start":197,"line_end":197,"column_start":5,"column_end":50}},{"value":"/ Every bounding volume created during this update will be enlarged by a margin of `margin`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvt.rs","byte_start":73298,"byte_end":73392,"line_start":198,"line_end":198,"column_start":5,"column_end":99}},{"value":"/ The larger this margin here, the looser will the resulting AABB will be, but the less frequent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvt.rs","byte_start":73397,"byte_end":73495,"line_start":199,"line_end":199,"column_start":5,"column_end":103}},{"value":"/ future updates will be necessary.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvt.rs","byte_start":73500,"byte_end":73537,"line_start":200,"line_end":200,"column_start":5,"column_end":42}},{"value":"/ Setting a margin equal to 0.0 is allowed.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvt.rs","byte_start":73542,"byte_end":73587,"line_start":201,"line_end":201,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":770},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvt.rs","byte_start":76613,"byte_end":76625,"line_start":277,"line_end":277,"column_start":12,"column_end":24},"name":"new_balanced","qualname":"<BVT<T, BV>>::new_balanced","value":"fn <N> (leaves: Vec<(T, BV)>) -> BVT<T, BV>","parent":null,"children":[],"decl_id":null,"docs":" Creates a balanced `BVT`.\n","sig":null,"attributes":[{"value":"/ Creates a balanced `BVT`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvt.rs","byte_start":76572,"byte_end":76601,"line_start":276,"line_end":276,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":772},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvt.rs","byte_start":76915,"byte_end":76947,"line_start":286,"line_end":286,"column_start":12,"column_end":44},"name":"median_partitioning_with_centers","qualname":"<BVT<T, BV>>::median_partitioning_with_centers","value":"fn <N, F> (depth: usize, leaves: Vec<(T, BV)>, center: &mut F) -> (BV, BinaryPartition<T, BV>)","parent":null,"children":[],"decl_id":null,"docs":" Construction function for a kdree to be used with `BVT::from_partitioning`.\n","sig":null,"attributes":[{"value":"/ Construction function for a kdree to be used with `BVT::from_partitioning`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvt.rs","byte_start":76824,"byte_end":76903,"line_start":285,"line_end":285,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":775},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvt.rs","byte_start":78898,"byte_end":78917,"line_start":349,"line_end":349,"column_start":12,"column_end":31},"name":"median_partitioning","qualname":"<BVT<T, BV>>::median_partitioning","value":"fn <N> (depth: usize, leaves: Vec<(T, BV)>) -> (BV, BinaryPartition<T, BV>)","parent":null,"children":[],"decl_id":null,"docs":" Construction function for a kdree to be used with `BVT::from_partitioning`.\n","sig":null,"attributes":[{"value":"/ Construction function for a kdree to be used with `BVT::from_partitioning`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvt.rs","byte_start":78807,"byte_end":78886,"line_start":348,"line_end":348,"column_start":5,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":6747},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/dbvt.rs","byte_start":82055,"byte_end":82065,"line_start":10,"line_end":10,"column_start":12,"column_end":22},"name":"DBVTLeafId","qualname":"::partitioning::dbvt::DBVTLeafId","value":"","parent":null,"children":[],"decl_id":null,"docs":" The unique identifier of a DBVT leaf.\n","sig":null,"attributes":[{"value":"/ The unique identifier of a DBVT leaf.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/dbvt.rs","byte_start":82002,"byte_end":82043,"line_start":9,"line_end":9,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":799},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/dbvt.rs","byte_start":82157,"byte_end":82168,"line_start":15,"line_end":15,"column_start":12,"column_end":23},"name":"new_invalid","qualname":"<DBVTLeafId>::new_invalid","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an invalid identifier.\n","sig":null,"attributes":[{"value":"/ Creates an invalid identifier.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/dbvt.rs","byte_start":82097,"byte_end":82131,"line_start":13,"line_end":13,"column_start":5,"column_end":39}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/dbvt.rs","byte_start":82136,"byte_end":82145,"line_start":14,"line_end":14,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":800},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/dbvt.rs","byte_start":82299,"byte_end":82309,"line_start":21,"line_end":21,"column_start":12,"column_end":22},"name":"is_invalid","qualname":"<DBVTLeafId>::is_invalid","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checkis if this identifier is invalid.\n","sig":null,"attributes":[{"value":"/ Checkis if this identifier is invalid.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/dbvt.rs","byte_start":82231,"byte_end":82273,"line_start":19,"line_end":19,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/dbvt.rs","byte_start":82278,"byte_end":82287,"line_start":20,"line_end":20,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6793},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/dbvt.rs","byte_start":82737,"byte_end":82741,"line_start":44,"line_end":44,"column_start":5,"column_end":9},"name":"Leaf","qualname":"::partitioning::dbvt::DBVTNodeId::Leaf","value":"DBVTNodeId::Leaf(usize)","parent":{"krate":0,"index":6792},"children":[],"decl_id":null,"docs":" Id of a leaf.\n","sig":null,"attributes":[{"value":"/ Id of a leaf.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/dbvt.rs","byte_start":82715,"byte_end":82732,"line_start":43,"line_end":43,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6796},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/dbvt.rs","byte_start":82786,"byte_end":82794,"line_start":46,"line_end":46,"column_start":5,"column_end":13},"name":"Internal","qualname":"::partitioning::dbvt::DBVTNodeId::Internal","value":"DBVTNodeId::Internal(usize)","parent":{"krate":0,"index":6792},"children":[],"decl_id":null,"docs":" Id of an internal node.\n","sig":null,"attributes":[{"value":"/ Id of an internal node.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/dbvt.rs","byte_start":82754,"byte_end":82781,"line_start":45,"line_end":45,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":6792},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/dbvt.rs","byte_start":82698,"byte_end":82708,"line_start":42,"line_end":42,"column_start":10,"column_end":20},"name":"DBVTNodeId","qualname":"::partitioning::dbvt::DBVTNodeId","value":"DBVTNodeId::{Leaf, Internal}","parent":null,"children":[{"krate":0,"index":6793},{"krate":0,"index":6796}],"decl_id":null,"docs":" The identifier of a node of the DBVT.\n","sig":null,"attributes":[{"value":"/ The identifier of a node of the DBVT.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/dbvt.rs","byte_start":82611,"byte_end":82652,"line_start":40,"line_end":40,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":6807},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/dbvt.rs","byte_start":82927,"byte_end":82931,"line_start":51,"line_end":51,"column_start":12,"column_end":16},"name":"DBVT","qualname":"::partitioning::dbvt::DBVT","value":"DBVT {  }","parent":null,"children":[{"krate":0,"index":6811},{"krate":0,"index":6812},{"krate":0,"index":6813}],"decl_id":null,"docs":" A bounding volume hierarchy on which objects can be added or removed after construction.\n","sig":null,"attributes":[{"value":"/ A bounding volume hierarchy on which objects can be added or removed after construction.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/dbvt.rs","byte_start":82806,"byte_end":82898,"line_start":49,"line_end":49,"column_start":1,"column_end":93}}]},{"kind":"Struct","id":{"krate":0,"index":6819},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/dbvt.rs","byte_start":83132,"byte_end":83140,"line_start":59,"line_end":59,"column_start":12,"column_end":20},"name":"DBVTLeaf","qualname":"::partitioning::dbvt::DBVTLeaf","value":"DBVTLeaf { bounding_volume, center, data }","parent":null,"children":[{"krate":0,"index":6823},{"krate":0,"index":6824},{"krate":0,"index":6825},{"krate":0,"index":6826}],"decl_id":null,"docs":" Leaf of a Dynamic Bounding Volume Tree.\n","sig":null,"attributes":[{"value":"/ Leaf of a Dynamic Bounding Volume Tree.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/dbvt.rs","byte_start":83060,"byte_end":83103,"line_start":57,"line_end":57,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":6823},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/dbvt.rs","byte_start":83214,"byte_end":83229,"line_start":61,"line_end":61,"column_start":9,"column_end":24},"name":"bounding_volume","qualname":"::partitioning::dbvt::DBVTLeaf::bounding_volume","value":"BV","parent":{"krate":0,"index":6819},"children":[],"decl_id":null,"docs":" The bounding volume of this node.\n","sig":null,"attributes":[{"value":"/ The bounding volume of this node.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/dbvt.rs","byte_start":83168,"byte_end":83205,"line_start":60,"line_end":60,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":6824},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/dbvt.rs","byte_start":83292,"byte_end":83298,"line_start":63,"line_end":63,"column_start":9,"column_end":15},"name":"center","qualname":"::partitioning::dbvt::DBVTLeaf::center","value":"na::Point<N, na::U3>","parent":{"krate":0,"index":6819},"children":[],"decl_id":null,"docs":" The center of this node bounding volume.\n","sig":null,"attributes":[{"value":"/ The center of this node bounding volume.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/dbvt.rs","byte_start":83239,"byte_end":83283,"line_start":62,"line_end":62,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":6825},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/dbvt.rs","byte_start":83348,"byte_end":83352,"line_start":65,"line_end":65,"column_start":9,"column_end":13},"name":"data","qualname":"::partitioning::dbvt::DBVTLeaf::data","value":"T","parent":{"krate":0,"index":6819},"children":[],"decl_id":null,"docs":" An user-defined data.\n","sig":null,"attributes":[{"value":"/ An user-defined data.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/dbvt.rs","byte_start":83314,"byte_end":83339,"line_start":64,"line_end":64,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":805},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/dbvt.rs","byte_start":84078,"byte_end":84081,"line_start":89,"line_end":89,"column_start":12,"column_end":15},"name":"new","qualname":"<DBVTLeaf<N, T, BV>>::new","value":"fn (bounding_volume: BV, data: T) -> DBVTLeaf<N, T, BV>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new DBVT leaf from its bounding volume and contained data.\n","sig":null,"attributes":[{"value":"/ Creates a new DBVT leaf from its bounding volume and contained data.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/dbvt.rs","byte_start":83994,"byte_end":84066,"line_start":88,"line_end":88,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":806},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/dbvt.rs","byte_start":84435,"byte_end":84442,"line_start":99,"line_end":99,"column_start":12,"column_end":19},"name":"is_root","qualname":"<DBVTLeaf<N, T, BV>>::is_root","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this leaf is the root of the tree, or if it detached from any tree.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this leaf is the root of the tree, or if it detached from any tree.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/dbvt.rs","byte_start":84334,"byte_end":84423,"line_start":98,"line_end":98,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":815},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/dbvt.rs","byte_start":85221,"byte_end":85224,"line_start":128,"line_end":128,"column_start":12,"column_end":15},"name":"new","qualname":"<DBVT<N, T, BV>>::new","value":"fn () -> DBVT<N, T, BV>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty dynamic bonding volume hierarchy.\n","sig":null,"attributes":[{"value":"/ Creates a new empty dynamic bonding volume hierarchy.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/dbvt.rs","byte_start":85152,"byte_end":85209,"line_start":127,"line_end":127,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":816},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/dbvt.rs","byte_start":85519,"byte_end":85539,"line_start":140,"line_end":140,"column_start":12,"column_end":32},"name":"root_bounding_volume","qualname":"<DBVT<N, T, BV>>::root_bounding_volume","value":"fn (&self) -> Option<&BV>","parent":null,"children":[],"decl_id":null,"docs":" The bounding volume of the root of this DBVT.","sig":null,"attributes":[{"value":"/ The bounding volume of the root of this DBVT.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/dbvt.rs","byte_start":85391,"byte_end":85440,"line_start":136,"line_end":136,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/dbvt.rs","byte_start":85445,"byte_end":85448,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the DBVT is empty.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/dbvt.rs","byte_start":85453,"byte_end":85493,"line_start":138,"line_end":138,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/dbvt.rs","byte_start":85498,"byte_end":85507,"line_start":139,"line_end":139,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":817},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/dbvt.rs","byte_start":85902,"byte_end":85910,"line_start":153,"line_end":153,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<DBVT<N, T, BV>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether this DBVT empty.\n","sig":null,"attributes":[{"value":"/ Indicates whether this DBVT empty.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/dbvt.rs","byte_start":85838,"byte_end":85876,"line_start":151,"line_end":151,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/dbvt.rs","byte_start":85881,"byte_end":85890,"line_start":152,"line_end":152,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":818},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/dbvt.rs","byte_start":86016,"byte_end":86022,"line_start":158,"line_end":158,"column_start":12,"column_end":18},"name":"insert","qualname":"<DBVT<N, T, BV>>::insert","value":"fn (&mut self, leaf: DBVTLeaf<N, T, BV>) -> DBVTLeafId","parent":null,"children":[],"decl_id":null,"docs":" Inserts a leaf into this DBVT.\n","sig":null,"attributes":[{"value":"/ Inserts a leaf into this DBVT.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/dbvt.rs","byte_start":85970,"byte_end":86004,"line_start":157,"line_end":157,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":819},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/dbvt.rs","byte_start":90509,"byte_end":90515,"line_start":260,"line_end":260,"column_start":12,"column_end":18},"name":"remove","qualname":"<DBVT<N, T, BV>>::remove","value":"fn (&mut self, leaf_id: DBVTLeafId) -> DBVTLeaf<N, T, BV>","parent":null,"children":[],"decl_id":null,"docs":" Removes a leaf from this DBVT.","sig":null,"attributes":[{"value":"/ Removes a leaf from this DBVT.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/dbvt.rs","byte_start":90389,"byte_end":90423,"line_start":257,"line_end":257,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/dbvt.rs","byte_start":90428,"byte_end":90431,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ Panics if the provided leaf is not attached to this DBVT.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/dbvt.rs","byte_start":90436,"byte_end":90497,"line_start":259,"line_end":259,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":820},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/dbvt.rs","byte_start":93137,"byte_end":93140,"line_start":332,"line_end":332,"column_start":12,"column_end":15},"name":"get","qualname":"<DBVT<N, T, BV>>::get","value":"fn (&self, DBVTLeafId(id): DBVTLeafId) -> Option<&DBVTLeaf<N, T, BV>>","parent":null,"children":[],"decl_id":null,"docs":" Gets the given leaf if it exists.\n","sig":null,"attributes":[{"value":"/ Gets the given leaf if it exists.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/dbvt.rs","byte_start":93074,"byte_end":93111,"line_start":330,"line_end":330,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/dbvt.rs","byte_start":93116,"byte_end":93125,"line_start":331,"line_end":331,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":839},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/visitor.rs","byte_start":94880,"byte_end":94888,"line_start":4,"line_end":4,"column_start":5,"column_end":13},"name":"Continue","qualname":"::partitioning::visitor::VisitStatus::Continue","value":"VisitStatus::Continue","parent":{"krate":0,"index":838},"children":[],"decl_id":null,"docs":" The traversal should continue on the children of the currently visited nodes.\n","sig":null,"attributes":[{"value":"/ The traversal should continue on the children of the currently visited nodes.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/visitor.rs","byte_start":94794,"byte_end":94875,"line_start":3,"line_end":3,"column_start":5,"column_end":86}}]},{"kind":"TupleVariant","id":{"krate":0,"index":841},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/visitor.rs","byte_start":94987,"byte_end":94991,"line_start":6,"line_end":6,"column_start":5,"column_end":9},"name":"Stop","qualname":"::partitioning::visitor::VisitStatus::Stop","value":"VisitStatus::Stop","parent":{"krate":0,"index":838},"children":[],"decl_id":null,"docs":" The traversal should not be executed on the children of the currently visited nodes.\n","sig":null,"attributes":[{"value":"/ The traversal should not be executed on the children of the currently visited nodes.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/visitor.rs","byte_start":94894,"byte_end":94982,"line_start":5,"line_end":5,"column_start":5,"column_end":93}}]},{"kind":"TupleVariant","id":{"krate":0,"index":843},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/visitor.rs","byte_start":95044,"byte_end":95053,"line_start":8,"line_end":8,"column_start":5,"column_end":14},"name":"ExitEarly","qualname":"::partitioning::visitor::VisitStatus::ExitEarly","value":"VisitStatus::ExitEarly","parent":{"krate":0,"index":838},"children":[],"decl_id":null,"docs":" The traversal should exit immediately.\n","sig":null,"attributes":[{"value":"/ The traversal should exit immediately.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/visitor.rs","byte_start":94997,"byte_end":95039,"line_start":7,"line_end":7,"column_start":5,"column_end":47}}]},{"kind":"Enum","id":{"krate":0,"index":838},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/visitor.rs","byte_start":94776,"byte_end":94787,"line_start":2,"line_end":2,"column_start":10,"column_end":21},"name":"VisitStatus","qualname":"::partitioning::visitor::VisitStatus","value":"VisitStatus::{Continue, Stop, ExitEarly}","parent":null,"children":[{"krate":0,"index":839},{"krate":0,"index":841},{"krate":0,"index":843}],"decl_id":null,"docs":" The status of the spatial partitioning structure traversal.\n","sig":null,"attributes":[{"value":"/ The status of the spatial partitioning structure traversal.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/visitor.rs","byte_start":94703,"byte_end":94766,"line_start":1,"line_end":1,"column_start":1,"column_end":64}}]},{"kind":"Trait","id":{"krate":0,"index":845},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/visitor.rs","byte_start":95171,"byte_end":95178,"line_start":12,"line_end":12,"column_start":11,"column_end":18},"name":"Visitor","qualname":"::partitioning::visitor::Visitor","value":"Visitor<T, BV>","parent":null,"children":[{"krate":0,"index":848}],"decl_id":null,"docs":" Trait implemented by visitor called during the traversal of a spatial partitioning data structure.\n","sig":null,"attributes":[{"value":"/ Trait implemented by visitor called during the traversal of a spatial partitioning data structure.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/visitor.rs","byte_start":95058,"byte_end":95160,"line_start":11,"line_end":11,"column_start":1,"column_end":103}}]},{"kind":"Method","id":{"krate":0,"index":848},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/visitor.rs","byte_start":95477,"byte_end":95482,"line_start":17,"line_end":17,"column_start":8,"column_end":13},"name":"visit","qualname":"::partitioning::visitor::Visitor::visit","value":"fn (&mut self, bv: &BV, data: Option<&T>) -> VisitStatus","parent":{"krate":0,"index":845},"children":[],"decl_id":null,"docs":" Execute an operation on the content of a node of the spatial partitioning structure.","sig":null,"attributes":[{"value":"/ Execute an operation on the content of a node of the spatial partitioning structure.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/visitor.rs","byte_start":95192,"byte_end":95280,"line_start":13,"line_end":13,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/visitor.rs","byte_start":95285,"byte_end":95288,"line_start":14,"line_end":14,"column_start":5,"column_end":8}},{"value":"/ Returns whether the traversal should continue on the node's children, if it should not continue","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/visitor.rs","byte_start":95293,"byte_end":95392,"line_start":15,"line_end":15,"column_start":5,"column_end":104}},{"value":"/ on those children, or if the whole traversal should be exited early.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/visitor.rs","byte_start":95397,"byte_end":95469,"line_start":16,"line_end":16,"column_start":5,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":849},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/visitor.rs","byte_start":95659,"byte_end":95678,"line_start":21,"line_end":21,"column_start":11,"column_end":30},"name":"SimultaneousVisitor","qualname":"::partitioning::visitor::SimultaneousVisitor","value":"SimultaneousVisitor<T, BV>","parent":null,"children":[{"krate":0,"index":852}],"decl_id":null,"docs":" Trait implemented by visitor called during a simultaneous spatial partitioning data structure tarversal.\n","sig":null,"attributes":[{"value":"/ Trait implemented by visitor called during a simultaneous spatial partitioning data structure tarversal.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/visitor.rs","byte_start":95540,"byte_end":95648,"line_start":20,"line_end":20,"column_start":1,"column_end":109}}]},{"kind":"Method","id":{"krate":0,"index":852},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/visitor.rs","byte_start":95966,"byte_end":95971,"line_start":26,"line_end":26,"column_start":8,"column_end":13},"name":"visit","qualname":"::partitioning::visitor::SimultaneousVisitor::visit","value":"fn (&mut self, left_bv: &BV, left_data: Option<&T>, right_bv: &BV, right_data: Option<&T>) -> VisitStatus","parent":{"krate":0,"index":849},"children":[],"decl_id":null,"docs":" Execute an operation on the content of two nodes, one from each structure.","sig":null,"attributes":[{"value":"/ Execute an operation on the content of two nodes, one from each structure.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/visitor.rs","byte_start":95692,"byte_end":95770,"line_start":22,"line_end":22,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/visitor.rs","byte_start":95775,"byte_end":95778,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ Returns whether the traversal should continue on the nodes children, if it should not continue","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/visitor.rs","byte_start":95783,"byte_end":95881,"line_start":24,"line_end":24,"column_start":5,"column_end":103}},{"value":"/ on those children, or if the whole traversal should be exited early.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/visitor.rs","byte_start":95886,"byte_end":95958,"line_start":25,"line_end":25,"column_start":5,"column_end":77}}]},{"kind":"StructVariant","id":{"krate":0,"index":856},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/visitor.rs","byte_start":96394,"byte_end":96402,"line_start":38,"line_end":38,"column_start":5,"column_end":13},"name":"Continue","qualname":"::partitioning::visitor::BestFirstVisitStatus::Continue","value":"BestFirstVisitStatus::Continue { cost, result }","parent":{"krate":0,"index":853},"children":[],"decl_id":null,"docs":" The traversal continues recursively, associating the given cost to the visited node and some associated result.\n","sig":null,"attributes":[{"value":"/ The traversal continues recursively, associating the given cost to the visited node and some associated result.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/visitor.rs","byte_start":96274,"byte_end":96389,"line_start":37,"line_end":37,"column_start":5,"column_end":120}}]},{"kind":"TupleVariant","id":{"krate":0,"index":859},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/visitor.rs","byte_start":96649,"byte_end":96653,"line_start":45,"line_end":45,"column_start":5,"column_end":9},"name":"Stop","qualname":"::partitioning::visitor::BestFirstVisitStatus::Stop","value":"BestFirstVisitStatus::Stop","parent":{"krate":0,"index":853},"children":[],"decl_id":null,"docs":" The traversal does not continue recursively on the visited node's children.\n","sig":null,"attributes":[{"value":"/ The traversal does not continue recursively on the visited node's children.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/visitor.rs","byte_start":96565,"byte_end":96644,"line_start":44,"line_end":44,"column_start":5,"column_end":84}}]},{"kind":"TupleVariant","id":{"krate":0,"index":861},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/visitor.rs","byte_start":96883,"byte_end":96892,"line_start":50,"line_end":50,"column_start":5,"column_end":14},"name":"ExitEarly","qualname":"::partitioning::visitor::BestFirstVisitStatus::ExitEarly","value":"BestFirstVisitStatus::ExitEarly(Option<Res>)","parent":{"krate":0,"index":853},"children":[],"decl_id":null,"docs":" The traversal aborts.","sig":null,"attributes":[{"value":"/ The traversal aborts.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/visitor.rs","byte_start":96659,"byte_end":96684,"line_start":46,"line_end":46,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/visitor.rs","byte_start":96689,"byte_end":96692,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ If a data is provided, then it is returned as the result of the traversal.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/visitor.rs","byte_start":96697,"byte_end":96775,"line_start":48,"line_end":48,"column_start":5,"column_end":83}},{"value":"/ If no result is provided, then the last best result found becomes the result of the traversal.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/visitor.rs","byte_start":96780,"byte_end":96878,"line_start":49,"line_end":49,"column_start":5,"column_end":103}}]},{"kind":"Enum","id":{"krate":0,"index":853},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/visitor.rs","byte_start":96239,"byte_end":96259,"line_start":36,"line_end":36,"column_start":10,"column_end":30},"name":"BestFirstVisitStatus","qualname":"::partitioning::visitor::BestFirstVisitStatus","value":"BestFirstVisitStatus::{Continue, Stop, ExitEarly}","parent":null,"children":[{"krate":0,"index":856},{"krate":0,"index":859},{"krate":0,"index":861}],"decl_id":null,"docs":" The next action to be taken by a BVH traversal algorithm after having visited a node with some data.\n","sig":null,"attributes":[{"value":"/ The next action to be taken by a BVH traversal algorithm after having visited a node with some data.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/visitor.rs","byte_start":96125,"byte_end":96229,"line_start":35,"line_end":35,"column_start":1,"column_end":105}}]},{"kind":"Trait","id":{"krate":0,"index":864},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/visitor.rs","byte_start":97002,"byte_end":97018,"line_start":54,"line_end":54,"column_start":11,"column_end":27},"name":"BestFirstVisitor","qualname":"::partitioning::visitor::BestFirstVisitor","value":"BestFirstVisitor<N, T, BV>","parent":null,"children":[{"krate":0,"index":868},{"krate":0,"index":869}],"decl_id":null,"docs":" Trait implemented by cost functions used by the best-first search on a `BVT`.\n","sig":null,"attributes":[{"value":"/ Trait implemented by cost functions used by the best-first search on a `BVT`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/visitor.rs","byte_start":96910,"byte_end":96991,"line_start":53,"line_end":53,"column_start":1,"column_end":82}}]},{"kind":"Type","id":{"krate":0,"index":868},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/visitor.rs","byte_start":97086,"byte_end":97092,"line_start":56,"line_end":56,"column_start":10,"column_end":16},"name":"Result","qualname":"::partitioning::visitor::BestFirstVisitor::Result","value":"type Result;","parent":{"krate":0,"index":864},"children":[],"decl_id":null,"docs":" The result of a best-first traversal.\n","sig":null,"attributes":[{"value":"/ The result of a best-first traversal.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/visitor.rs","byte_start":97035,"byte_end":97076,"line_start":55,"line_end":55,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":869},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/visitor.rs","byte_start":97231,"byte_end":97236,"line_start":59,"line_end":59,"column_start":8,"column_end":13},"name":"visit","qualname":"::partitioning::visitor::BestFirstVisitor::visit","value":"fn (&mut self, best_cost_so_far: N, bv: &BV, value: Option<&T>) -> BestFirstVisitStatus<N, Self::Result>","parent":{"krate":0,"index":864},"children":[],"decl_id":null,"docs":" Compute the next action to be taken by the best-first-search after visiting a node containing the given bounding volume.\n","sig":null,"attributes":[{"value":"/ Compute the next action to be taken by the best-first-search after visiting a node containing the given bounding volume.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/visitor.rs","byte_start":97099,"byte_end":97223,"line_start":58,"line_end":58,"column_start":5,"column_end":129}}]},{"kind":"Mod","id":{"krate":0,"index":870},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"pipeline","qualname":"::pipeline","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/mod.rs","parent":null,"children":[{"krate":0,"index":871},{"krate":0,"index":872},{"krate":0,"index":873},{"krate":0,"index":874},{"krate":0,"index":875},{"krate":0,"index":876},{"krate":0,"index":1017},{"krate":0,"index":1217},{"krate":0,"index":2028},{"krate":0,"index":2274}],"decl_id":null,"docs":" Persistent and time-coherent collision detection.\n","sig":null,"attributes":[{"value":"! Persistent and time-coherent collision detection.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/mod.rs","byte_start":97381,"byte_end":97434,"line_start":1,"line_end":1,"column_start":1,"column_end":54}}]},{"kind":"Mod","id":{"krate":0,"index":876},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"broad_phase","qualname":"::pipeline::broad_phase","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/mod.rs","parent":null,"children":[{"krate":0,"index":877},{"krate":0,"index":881},{"krate":0,"index":882},{"krate":0,"index":883},{"krate":0,"index":919},{"krate":0,"index":932}],"decl_id":null,"docs":" Broad phases.\n","sig":null,"attributes":[{"value":"! Broad phases.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/mod.rs","byte_start":97659,"byte_end":97676,"line_start":1,"line_end":1,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":883},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/broad_phase.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"broad_phase","qualname":"::pipeline::broad_phase::broad_phase","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/broad_phase.rs","parent":null,"children":[{"krate":0,"index":884},{"krate":0,"index":885},{"krate":0,"index":886},{"krate":0,"index":887},{"krate":0,"index":6845},{"krate":0,"index":6870},{"krate":0,"index":6868},{"krate":0,"index":6866},{"krate":0,"index":6862},{"krate":0,"index":6863},{"krate":0,"index":6859},{"krate":0,"index":6860},{"krate":0,"index":6853},{"krate":0,"index":6851},{"krate":0,"index":6848},{"krate":0,"index":890},{"krate":0,"index":894},{"krate":0,"index":899}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6845},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/broad_phase.rs","byte_start":98190,"byte_end":98211,"line_start":8,"line_end":8,"column_start":12,"column_end":33},"name":"BroadPhaseProxyHandle","qualname":"::pipeline::broad_phase::broad_phase::BroadPhaseProxyHandle","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":891},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/broad_phase.rs","byte_start":98279,"byte_end":98286,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"invalid","qualname":"<BroadPhaseProxyHandle>::invalid","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/broad_phase.rs","byte_start":98258,"byte_end":98267,"line_start":11,"line_end":11,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":892},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/broad_phase.rs","byte_start":98381,"byte_end":98391,"line_start":17,"line_end":17,"column_start":12,"column_end":22},"name":"is_invalid","qualname":"<BroadPhaseProxyHandle>::is_invalid","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/broad_phase.rs","byte_start":98360,"byte_end":98369,"line_start":16,"line_end":16,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":893},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/broad_phase.rs","byte_start":98478,"byte_end":98481,"line_start":22,"line_end":22,"column_start":12,"column_end":15},"name":"uid","qualname":"<BroadPhaseProxyHandle>::uid","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/broad_phase.rs","byte_start":98457,"byte_end":98466,"line_start":21,"line_end":21,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":894},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/broad_phase.rs","byte_start":98581,"byte_end":98610,"line_start":28,"line_end":28,"column_start":11,"column_end":40},"name":"BroadPhaseInterferenceHandler","qualname":"::pipeline::broad_phase::broad_phase::BroadPhaseInterferenceHandler","value":"BroadPhaseInterferenceHandler<T>","parent":null,"children":[{"krate":0,"index":896},{"krate":0,"index":897},{"krate":0,"index":898}],"decl_id":null,"docs":" Proximity handling for BroadPhase updates.\n","sig":null,"attributes":[{"value":"/ Proximity handling for BroadPhase updates.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/broad_phase.rs","byte_start":98524,"byte_end":98570,"line_start":27,"line_end":27,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":896},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/broad_phase.rs","byte_start":98735,"byte_end":98758,"line_start":31,"line_end":31,"column_start":8,"column_end":31},"name":"is_interference_allowed","qualname":"::pipeline::broad_phase::broad_phase::BroadPhaseInterferenceHandler::is_interference_allowed","value":"fn (&mut self, data1: &T, data2: &T) -> bool","parent":{"krate":0,"index":894},"children":[],"decl_id":null,"docs":" A pre-filter that may cheaply discard objects before checking for bounding volume\n interference.\n","sig":null,"attributes":[{"value":"/ A pre-filter that may cheaply discard objects before checking for bounding volume","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/broad_phase.rs","byte_start":98620,"byte_end":98705,"line_start":29,"line_end":29,"column_start":5,"column_end":90}},{"value":"/ interference.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/broad_phase.rs","byte_start":98710,"byte_end":98727,"line_start":30,"line_end":30,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":897},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/broad_phase.rs","byte_start":98849,"byte_end":98869,"line_start":34,"line_end":34,"column_start":8,"column_end":28},"name":"interference_started","qualname":"::pipeline::broad_phase::broad_phase::BroadPhaseInterferenceHandler::interference_started","value":"fn (&mut self, data1: &T, data2: &T) -> ()","parent":{"krate":0,"index":894},"children":[],"decl_id":null,"docs":" Handle a starting interference.\n","sig":null,"attributes":[{"value":"/ Handle a starting interference.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/broad_phase.rs","byte_start":98806,"byte_end":98841,"line_start":33,"line_end":33,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":898},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/broad_phase.rs","byte_start":98952,"byte_end":98972,"line_start":37,"line_end":37,"column_start":8,"column_end":28},"name":"interference_stopped","qualname":"::pipeline::broad_phase::broad_phase::BroadPhaseInterferenceHandler::interference_stopped","value":"fn (&mut self, data1: &T, data2: &T) -> ()","parent":{"krate":0,"index":894},"children":[],"decl_id":null,"docs":" Handle a stopping interference.\n","sig":null,"attributes":[{"value":"/ Handle a stopping interference.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/broad_phase.rs","byte_start":98909,"byte_end":98944,"line_start":36,"line_end":36,"column_start":5,"column_end":40}}]},{"kind":"Trait","id":{"krate":0,"index":899},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/broad_phase.rs","byte_start":99062,"byte_end":99072,"line_start":41,"line_end":41,"column_start":11,"column_end":21},"name":"BroadPhase","qualname":"::pipeline::broad_phase::broad_phase::BroadPhase","value":"BroadPhase<N: RealField, BV, T>: Any + Sync + Send","parent":null,"children":[{"krate":0,"index":903},{"krate":0,"index":904},{"krate":0,"index":905},{"krate":0,"index":906},{"krate":0,"index":907},{"krate":0,"index":908},{"krate":0,"index":909},{"krate":0,"index":910},{"krate":0,"index":912},{"krate":0,"index":914},{"krate":0,"index":916}],"decl_id":null,"docs":" Trait all broad phase must implement.\n","sig":null,"attributes":[{"value":"/ Trait all broad phase must implement.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/broad_phase.rs","byte_start":99010,"byte_end":99051,"line_start":40,"line_end":40,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":903},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/broad_phase.rs","byte_start":99197,"byte_end":99209,"line_start":43,"line_end":43,"column_start":8,"column_end":20},"name":"create_proxy","qualname":"::pipeline::broad_phase::broad_phase::BroadPhase::create_proxy","value":"fn (&mut self, bv: BV, data: T) -> BroadPhaseProxyHandle","parent":{"krate":0,"index":899},"children":[],"decl_id":null,"docs":" Tells the broad phase to add a bounding-volume at the next update.\n","sig":null,"attributes":[{"value":"/ Tells the broad phase to add a bounding-volume at the next update.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/broad_phase.rs","byte_start":99119,"byte_end":99189,"line_start":42,"line_end":42,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":904},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/broad_phase.rs","byte_start":99350,"byte_end":99355,"line_start":46,"line_end":46,"column_start":8,"column_end":13},"name":"proxy","qualname":"::pipeline::broad_phase::broad_phase::BroadPhase::proxy","value":"fn (&self, handle: BroadPhaseProxyHandle) -> Option<(&BV, &T)>","parent":{"krate":0,"index":899},"children":[],"decl_id":null,"docs":" Retrieves the bounding volume and data associated to the given proxy.\n","sig":null,"attributes":[{"value":"/ Retrieves the bounding volume and data associated to the given proxy.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/broad_phase.rs","byte_start":99269,"byte_end":99342,"line_start":45,"line_end":45,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":905},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/broad_phase.rs","byte_start":99490,"byte_end":99496,"line_start":49,"line_end":49,"column_start":8,"column_end":14},"name":"remove","qualname":"::pipeline::broad_phase::broad_phase::BroadPhase::remove","value":"fn (&mut self, handles: &[BroadPhaseProxyHandle], removal_handler: &mut dyn FnMut(&T, &T)) -> ()","parent":{"krate":0,"index":899},"children":[],"decl_id":null,"docs":" Tells the broad phase to remove the given set of handles.\n","sig":null,"attributes":[{"value":"/ Tells the broad phase to remove the given set of handles.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/broad_phase.rs","byte_start":99421,"byte_end":99482,"line_start":48,"line_end":48,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":906},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/broad_phase.rs","byte_start":99712,"byte_end":99740,"line_start":56,"line_end":56,"column_start":8,"column_end":36},"name":"deferred_set_bounding_volume","qualname":"::pipeline::broad_phase::broad_phase::BroadPhase::deferred_set_bounding_volume","value":"fn (&mut self, handle: BroadPhaseProxyHandle, bv: BV) -> ()","parent":{"krate":0,"index":899},"children":[],"decl_id":null,"docs":" Sets the next bounding volume to be used during the update of this broad phase.\n","sig":null,"attributes":[{"value":"/ Sets the next bounding volume to be used during the update of this broad phase.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/broad_phase.rs","byte_start":99621,"byte_end":99704,"line_start":55,"line_end":55,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":907},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/broad_phase.rs","byte_start":99901,"byte_end":99940,"line_start":59,"line_end":59,"column_start":8,"column_end":47},"name":"deferred_recompute_all_proximities_with","qualname":"::pipeline::broad_phase::broad_phase::BroadPhase::deferred_recompute_all_proximities_with","value":"fn (&mut self, handle: BroadPhaseProxyHandle) -> ()","parent":{"krate":0,"index":899},"children":[],"decl_id":null,"docs":" Forces the broad-phase to recompute and re-report all the proximities with the given object.\n","sig":null,"attributes":[{"value":"/ Forces the broad-phase to recompute and re-report all the proximities with the given object.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/broad_phase.rs","byte_start":99797,"byte_end":99893,"line_start":58,"line_end":58,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":908},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/broad_phase.rs","byte_start":100071,"byte_end":100105,"line_start":62,"line_end":62,"column_start":8,"column_end":42},"name":"deferred_recompute_all_proximities","qualname":"::pipeline::broad_phase::broad_phase::BroadPhase::deferred_recompute_all_proximities","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":899},"children":[],"decl_id":null,"docs":" Forces the broad-phase to recompute and re-report all the proximities.\n","sig":null,"attributes":[{"value":"/ Forces the broad-phase to recompute and re-report all the proximities.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/broad_phase.rs","byte_start":99989,"byte_end":100063,"line_start":61,"line_end":61,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":909},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/broad_phase.rs","byte_start":100203,"byte_end":100209,"line_start":65,"line_end":65,"column_start":8,"column_end":14},"name":"update","qualname":"::pipeline::broad_phase::broad_phase::BroadPhase::update","value":"fn (&mut self, handler: &mut dyn BroadPhaseInterferenceHandler<T>) -> ()","parent":{"krate":0,"index":899},"children":[],"decl_id":null,"docs":" Updates the object additions, removals, and interferences detection.\n","sig":null,"attributes":[{"value":"/ Updates the object additions, removals, and interferences detection.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/broad_phase.rs","byte_start":100123,"byte_end":100195,"line_start":64,"line_end":64,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":910},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/broad_phase.rs","byte_start":100484,"byte_end":100518,"line_start":72,"line_end":72,"column_start":8,"column_end":42},"name":"interferences_with_bounding_volume","qualname":"::pipeline::broad_phase::broad_phase::BroadPhase::interferences_with_bounding_volume","value":"fn <'a> (&'a self, bv: &BV, out: &mut Vec<&'a T>) -> ()","parent":{"krate":0,"index":899},"children":[],"decl_id":null,"docs":" Collects every object which might intersect a given bounding volume.\n","sig":null,"attributes":[{"value":"/ Collects every object which might intersect a given bounding volume.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/broad_phase.rs","byte_start":100404,"byte_end":100476,"line_start":71,"line_end":71,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":912},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/broad_phase.rs","byte_start":100638,"byte_end":100660,"line_start":75,"line_end":75,"column_start":8,"column_end":30},"name":"interferences_with_ray","qualname":"::pipeline::broad_phase::broad_phase::BroadPhase::interferences_with_ray","value":"fn <'a> (&'a self, ray: &Ray<N>, max_toi: N, out: &mut Vec<&'a T>) -> ()","parent":{"krate":0,"index":899},"children":[],"decl_id":null,"docs":" Collects every object which might intersect a given ray.\n","sig":null,"attributes":[{"value":"/ Collects every object which might intersect a given ray.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/broad_phase.rs","byte_start":100570,"byte_end":100630,"line_start":74,"line_end":74,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":914},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/broad_phase.rs","byte_start":100797,"byte_end":100821,"line_start":78,"line_end":78,"column_start":8,"column_end":32},"name":"interferences_with_point","qualname":"::pipeline::broad_phase::broad_phase::BroadPhase::interferences_with_point","value":"fn <'a> (&'a self, point: &Point<N>, out: &mut Vec<&'a T>) -> ()","parent":{"krate":0,"index":899},"children":[],"decl_id":null,"docs":" Collects every object which might contain a given point.\n","sig":null,"attributes":[{"value":"/ Collects every object which might contain a given point.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/broad_phase.rs","byte_start":100729,"byte_end":100789,"line_start":77,"line_end":77,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":916},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/broad_phase.rs","byte_start":100885,"byte_end":100912,"line_start":80,"line_end":80,"column_start":8,"column_end":35},"name":"first_interference_with_ray","qualname":"::pipeline::broad_phase::broad_phase::BroadPhase::first_interference_with_ray","value":"fn <'a, 'b> (&'a self, ray: &'b Ray<N>, max_toi: N, cost_fn: &'a dyn Fn(T, &'b Ray<N>, N) -> Option<(T, RayIntersection<N>)>) -> Option<(T, RayIntersection<N>)>","parent":{"krate":0,"index":899},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":919},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/broad_phase_pair_filter.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"broad_phase_pair_filter","qualname":"::pipeline::broad_phase::broad_phase_pair_filter","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/broad_phase_pair_filter.rs","parent":null,"children":[{"krate":0,"index":920},{"krate":0,"index":921},{"krate":0,"index":922},{"krate":0,"index":927}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":922},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/broad_phase_pair_filter.rs","byte_start":101205,"byte_end":101225,"line_start":5,"line_end":5,"column_start":11,"column_end":31},"name":"BroadPhasePairFilter","qualname":"::pipeline::broad_phase::broad_phase_pair_filter::BroadPhasePairFilter","value":"BroadPhasePairFilter<N: RealField, Object, Handle>: Any + Send + Sync","parent":null,"children":[{"krate":0,"index":926}],"decl_id":null,"docs":" A signal handler for contact detection.\n","sig":null,"attributes":[{"value":"/ A signal handler for contact detection.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/broad_phase_pair_filter.rs","byte_start":101151,"byte_end":101194,"line_start":4,"line_end":4,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":926},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/broad_phase_pair_filter.rs","byte_start":101373,"byte_end":101386,"line_start":7,"line_end":7,"column_start":8,"column_end":21},"name":"is_pair_valid","qualname":"::pipeline::broad_phase::broad_phase_pair_filter::BroadPhasePairFilter::is_pair_valid","value":"fn (&self, b1: &Object, b2: &Object, h1: Handle, h2: Handle) -> bool","parent":{"krate":0,"index":922},"children":[],"decl_id":null,"docs":" Activate an action for when two objects start or stop to be close to each other.\n","sig":null,"attributes":[{"value":"/ Activate an action for when two objects start or stop to be close to each other.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/broad_phase_pair_filter.rs","byte_start":101281,"byte_end":101365,"line_start":6,"line_end":6,"column_start":5,"column_end":89}}]},{"kind":"Struct","id":{"krate":0,"index":974},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/dbvt_broad_phase.rs","byte_start":103250,"byte_end":103264,"line_start":57,"line_end":57,"column_start":12,"column_end":26},"name":"DBVTBroadPhase","qualname":"::pipeline::broad_phase::dbvt_broad_phase::DBVTBroadPhase","value":"DBVTBroadPhase {  }","parent":null,"children":[{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":980},{"krate":0,"index":981},{"krate":0,"index":982},{"krate":0,"index":983},{"krate":0,"index":984},{"krate":0,"index":985},{"krate":0,"index":986}],"decl_id":null,"docs":" Broad phase based on a Dynamic Bounding Volume Tree.","sig":null,"attributes":[{"value":"/ Broad phase based on a Dynamic Bounding Volume Tree.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/dbvt_broad_phase.rs","byte_start":103063,"byte_end":103119,"line_start":53,"line_end":53,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/dbvt_broad_phase.rs","byte_start":103120,"byte_end":103123,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ It uses two separate trees: one for static objects and which is never updated, and one for","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/dbvt_broad_phase.rs","byte_start":103124,"byte_end":103218,"line_start":55,"line_end":55,"column_start":1,"column_end":95}},{"value":"/ moving objects.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/dbvt_broad_phase.rs","byte_start":103219,"byte_end":103238,"line_start":56,"line_end":56,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":991},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/dbvt_broad_phase.rs","byte_start":104092,"byte_end":104095,"line_start":81,"line_end":81,"column_start":12,"column_end":15},"name":"new","qualname":"<DBVTBroadPhase<N, BV, T>>::new","value":"fn (margin: N) -> DBVTBroadPhase<N, BV, T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new broad phase based on a Dynamic Bounding Volume Tree.\n","sig":null,"attributes":[{"value":"/ Creates a new broad phase based on a Dynamic Bounding Volume Tree.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/dbvt_broad_phase.rs","byte_start":104010,"byte_end":104080,"line_start":80,"line_end":80,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":992},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/dbvt_broad_phase.rs","byte_start":104606,"byte_end":104623,"line_start":97,"line_end":97,"column_start":12,"column_end":29},"name":"num_interferences","qualname":"<DBVTBroadPhase<N, BV, T>>::num_interferences","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Number of interferences detected by this broad phase.\n","sig":null,"attributes":[{"value":"/ Number of interferences detected by this broad phase.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/dbvt_broad_phase.rs","byte_start":104523,"byte_end":104580,"line_start":95,"line_end":95,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/dbvt_broad_phase.rs","byte_start":104585,"byte_end":104594,"line_start":96,"line_end":96,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":1017},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"glue","qualname":"::pipeline::glue","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/mod.rs","parent":null,"children":[{"krate":0,"index":1018},{"krate":0,"index":1027},{"krate":0,"index":1033},{"krate":0,"index":1037},{"krate":0,"index":1126},{"krate":0,"index":1168}],"decl_id":null,"docs":" Glue code between each part of the collision-detection pipeline.\n","sig":null,"attributes":[{"value":"! Glue code between each part of the collision-detection pipeline.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/mod.rs","byte_start":118242,"byte_end":118310,"line_start":1,"line_end":1,"column_start":1,"column_end":69}}]},{"kind":"Function","id":{"krate":0,"index":1052},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/query.rs","byte_start":119306,"byte_end":119328,"line_start":13,"line_end":13,"column_start":8,"column_end":30},"name":"interferences_with_ray","qualname":"::pipeline::glue::query::interferences_with_ray","value":"fn <'a, 'b, N, Objects> (objects: &'a Objects, broad_phase:\n    &'a (impl BroadPhase<N, AABB<N>, Objects::CollisionObjectHandle> + ?Sized), ray: &'b Ray<N>, max_toi: N, groups: &'b CollisionGroups) -> InterferencesWithRay<'a, 'b, N, Objects>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator yielding all the collision objects intersecting with the given ray.","sig":null,"attributes":[{"value":"/ Returns an iterator yielding all the collision objects intersecting with the given ray.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/query.rs","byte_start":119098,"byte_end":119189,"line_start":10,"line_end":10,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/query.rs","byte_start":119190,"byte_end":119193,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ The result will only include collision objects in a group that can interact with the given `groups`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/query.rs","byte_start":119194,"byte_end":119298,"line_start":12,"line_end":12,"column_start":1,"column_end":105}}]},{"kind":"Struct","id":{"krate":0,"index":1058},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/query.rs","byte_start":119979,"byte_end":119999,"line_start":37,"line_end":37,"column_start":12,"column_end":32},"name":"InterferencesWithRay","qualname":"::pipeline::glue::query::InterferencesWithRay","value":"InterferencesWithRay {  }","parent":null,"children":[{"krate":0,"index":1063},{"krate":0,"index":1064},{"krate":0,"index":1065},{"krate":0,"index":1066},{"krate":0,"index":1067}],"decl_id":null,"docs":" Iterator through all the objects on the world that intersect a specific ray.\n","sig":null,"attributes":[{"value":"/ Iterator through all the objects on the world that intersect a specific ray.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/query.rs","byte_start":119887,"byte_end":119967,"line_start":36,"line_end":36,"column_start":1,"column_end":81}}]},{"kind":"Function","id":{"krate":0,"index":1075},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/query.rs","byte_start":121398,"byte_end":121422,"line_start":82,"line_end":82,"column_start":8,"column_end":32},"name":"interferences_with_point","qualname":"::pipeline::glue::query::interferences_with_point","value":"fn <'a, 'b, N, Objects> (objects: &'a Objects, broad_phase:\n    &'a (impl BroadPhase<N, AABB<N>, Objects::CollisionObjectHandle> + ?Sized), point: &'b Point<N>, groups: &'b CollisionGroups) -> InterferencesWithPoint<'a, 'b, N, Objects>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator yielding all the collision objects containing the given point.","sig":null,"attributes":[{"value":"/ Returns an iterator yielding all the collision objects containing the given point.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/query.rs","byte_start":121195,"byte_end":121281,"line_start":79,"line_end":79,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/query.rs","byte_start":121282,"byte_end":121285,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ The result will only include collision objects in a group that can interact with the given `groups`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/query.rs","byte_start":121286,"byte_end":121390,"line_start":81,"line_end":81,"column_start":1,"column_end":105}}]},{"kind":"Struct","id":{"krate":0,"index":1081},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/query.rs","byte_start":122047,"byte_end":122069,"line_start":104,"line_end":104,"column_start":12,"column_end":34},"name":"InterferencesWithPoint","qualname":"::pipeline::glue::query::InterferencesWithPoint","value":"InterferencesWithPoint {  }","parent":null,"children":[{"krate":0,"index":1086},{"krate":0,"index":1087},{"krate":0,"index":1088},{"krate":0,"index":1089}],"decl_id":null,"docs":" Iterator through all the objects on the world that intersect a specific point.\n","sig":null,"attributes":[{"value":"/ Iterator through all the objects on the world that intersect a specific point.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/query.rs","byte_start":121953,"byte_end":122035,"line_start":103,"line_end":103,"column_start":1,"column_end":83}}]},{"kind":"Function","id":{"krate":0,"index":1097},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/query.rs","byte_start":123203,"byte_end":123226,"line_start":137,"line_end":137,"column_start":8,"column_end":31},"name":"interferences_with_aabb","qualname":"::pipeline::glue::query::interferences_with_aabb","value":"fn <'a, 'b, N, Objects> (objects: &'a Objects, broad_phase:\n    &'a (impl BroadPhase<N, AABB<N>, Objects::CollisionObjectHandle> + ?Sized), aabb: &AABB<N>, groups: &'b CollisionGroups) -> InterferencesWithAABB<'a, 'b, N, Objects>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator yielding all the collision objects with an AABB intersecting with the given AABB.","sig":null,"attributes":[{"value":"/ Returns an iterator yielding all the collision objects with an AABB intersecting with the given AABB.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/query.rs","byte_start":122981,"byte_end":123086,"line_start":134,"line_end":134,"column_start":1,"column_end":106}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/query.rs","byte_start":123087,"byte_end":123090,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ The result will only include collision objects in a group that can interact with the given `groups`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/query.rs","byte_start":123091,"byte_end":123195,"line_start":136,"line_end":136,"column_start":1,"column_end":105}}]},{"kind":"Struct","id":{"krate":0,"index":1103},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/query.rs","byte_start":123855,"byte_end":123876,"line_start":158,"line_end":158,"column_start":12,"column_end":33},"name":"InterferencesWithAABB","qualname":"::pipeline::glue::query::InterferencesWithAABB","value":"InterferencesWithAABB {  }","parent":null,"children":[{"krate":0,"index":1108},{"krate":0,"index":1109},{"krate":0,"index":1110}],"decl_id":null,"docs":" Iterator through all the objects on the world which bounding volume intersects a specific AABB.\n","sig":null,"attributes":[{"value":"/ Iterator through all the objects on the world which bounding volume intersects a specific AABB.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/query.rs","byte_start":123744,"byte_end":123843,"line_start":157,"line_end":157,"column_start":1,"column_end":100}}]},{"kind":"Struct","id":{"krate":0,"index":6896},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/query.rs","byte_start":124823,"byte_end":124847,"line_start":188,"line_end":188,"column_start":12,"column_end":36},"name":"FirstInterferenceWithRay","qualname":"::pipeline::glue::query::FirstInterferenceWithRay","value":"FirstInterferenceWithRay { handle, co, inter }","parent":null,"children":[{"krate":0,"index":6900},{"krate":0,"index":6901},{"krate":0,"index":6902}],"decl_id":null,"docs":" Return structure for `first_interference_with_ray`","sig":null,"attributes":[{"value":"/ Return structure for `first_interference_with_ray`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/query.rs","byte_start":124636,"byte_end":124690,"line_start":183,"line_end":183,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/query.rs","byte_start":124691,"byte_end":124694,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ Contains the handle of the closest object along the ray along with its","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/query.rs","byte_start":124695,"byte_end":124769,"line_start":185,"line_end":185,"column_start":1,"column_end":75}},{"value":"/ intersection details","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/query.rs","byte_start":124770,"byte_end":124794,"line_start":186,"line_end":186,"column_start":1,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":6900},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/query.rs","byte_start":124960,"byte_end":124966,"line_start":190,"line_end":190,"column_start":9,"column_end":15},"name":"handle","qualname":"::pipeline::glue::query::FirstInterferenceWithRay::handle","value":"<Objects as pipeline::object::collision_object_set::CollisionObjectSet<N>>::CollisionObjectHandle","parent":{"krate":0,"index":6896},"children":[],"decl_id":null,"docs":" Handle to the object the ray collided with.\n","sig":null,"attributes":[{"value":"/ Handle to the object the ray collided with.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/query.rs","byte_start":124904,"byte_end":124951,"line_start":189,"line_end":189,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":6901},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/query.rs","byte_start":125063,"byte_end":125065,"line_start":192,"line_end":192,"column_start":9,"column_end":11},"name":"co","qualname":"::pipeline::glue::query::FirstInterferenceWithRay::co","value":"&'a <Objects as pipeline::object::collision_object_set::CollisionObjectSet<N>>::CollisionObject","parent":{"krate":0,"index":6896},"children":[],"decl_id":null,"docs":" Reference to the object the ray collided with.\n","sig":null,"attributes":[{"value":"/ Reference to the object the ray collided with.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/query.rs","byte_start":125004,"byte_end":125054,"line_start":191,"line_end":191,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":6902},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/query.rs","byte_start":125134,"byte_end":125139,"line_start":194,"line_end":194,"column_start":9,"column_end":14},"name":"inter","qualname":"::pipeline::glue::query::FirstInterferenceWithRay::inter","value":"query::ray::ray::RayIntersection<N>","parent":{"krate":0,"index":6896},"children":[],"decl_id":null,"docs":" Intersection details\n","sig":null,"attributes":[{"value":"/ Intersection details","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/query.rs","byte_start":125101,"byte_end":125125,"line_start":193,"line_end":193,"column_start":5,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":1118},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/query.rs","byte_start":125357,"byte_end":125384,"line_start":200,"line_end":200,"column_start":8,"column_end":35},"name":"first_interference_with_ray","qualname":"::pipeline::glue::query::first_interference_with_ray","value":"fn <'a, 'b, N, Objects> (objects: &'a Objects, broad_phase:\n    &'a (impl BroadPhase<N, AABB<N>, Objects::CollisionObjectHandle> + ?Sized), ray: &'b Ray<N>, max_toi: N, groups: &'b CollisionGroups) -> Option<FirstInterferenceWithRay<'a, N, Objects>>","parent":null,"children":[],"decl_id":null,"docs":" Returns an the closest collision object intersecting with the given ray.","sig":null,"attributes":[{"value":"/ Returns an the closest collision object intersecting with the given ray.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/query.rs","byte_start":125164,"byte_end":125240,"line_start":197,"line_end":197,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/query.rs","byte_start":125241,"byte_end":125244,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/ The result will only include collision objects in a group that can interact with the given `groups`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/query.rs","byte_start":125245,"byte_end":125349,"line_start":199,"line_end":199,"column_start":1,"column_end":105}}]},{"kind":"Function","id":{"krate":0,"index":1146},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/setup.rs","byte_start":127431,"byte_end":127445,"line_start":19,"line_end":19,"column_start":8,"column_end":22},"name":"create_proxies","qualname":"::pipeline::glue::setup::create_proxies","value":"fn <'a, N, Handle> (handle: Handle, broad_phase: &mut (impl BroadPhase<N, AABB<N>, Handle> + ?Sized), interactions: &mut InteractionGraph<N, Handle>, position: &Isometry<N>, shape: &(impl Shape<N> + ?Sized), query_type: GeometricQueryType<N>) -> (BroadPhaseProxyHandle, CollisionObjectGraphIndex)","parent":null,"children":[],"decl_id":null,"docs":" Registers a collision object handle so it can be taken into acconut by the broad-phase and the narrow-phase.","sig":null,"attributes":[{"value":"/ Registers a collision object handle so it can be taken into acconut by the broad-phase and the narrow-phase.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/setup.rs","byte_start":126803,"byte_end":126915,"line_start":13,"line_end":13,"column_start":1,"column_end":113}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/setup.rs","byte_start":126916,"byte_end":126919,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This tells the broad-phase and the interaction graph exists and allow them to perform some setup to accomodate","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/setup.rs","byte_start":126920,"byte_end":127034,"line_start":15,"line_end":15,"column_start":1,"column_end":115}},{"value":"/ for a new collision object with the given `handle`, and known to currently have the given `position`, `shape` and `query_type`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/setup.rs","byte_start":127035,"byte_end":127166,"line_start":16,"line_end":16,"column_start":1,"column_end":132}},{"value":"/ The result of this registration is a pair of handles that must be stored by the user as the will be needed for various","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/setup.rs","byte_start":127167,"byte_end":127289,"line_start":17,"line_end":17,"column_start":1,"column_end":123}},{"value":"/ queries (on the broad-phase and interaction graph), as well as for freeing (using `remove_proxies`) the resources allocated here.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/setup.rs","byte_start":127290,"byte_end":127423,"line_start":18,"line_end":18,"column_start":1,"column_end":134}}]},{"kind":"Function","id":{"krate":0,"index":1152},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/setup.rs","byte_start":129174,"byte_end":129188,"line_start":50,"line_end":50,"column_start":8,"column_end":22},"name":"remove_proxies","qualname":"::pipeline::glue::setup::remove_proxies","value":"fn <'a, N, Handle> (broad_phase: &mut (impl BroadPhase<N, AABB<N>, Handle> + ?Sized), interactions: &mut InteractionGraph<N, Handle>, proxy_handle: BroadPhaseProxyHandle, graph_index: CollisionObjectGraphIndex) -> Option<(Handle, CollisionObjectGraphIndex)>","parent":null,"children":[],"decl_id":null,"docs":" Free all the resources allocated by the broad-phase and the interaction graph for the given proxy handles.","sig":null,"attributes":[{"value":"/ Free all the resources allocated by the broad-phase and the interaction graph for the given proxy handles.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/setup.rs","byte_start":128038,"byte_end":128148,"line_start":36,"line_end":36,"column_start":1,"column_end":111}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/setup.rs","byte_start":128149,"byte_end":128152,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ This will free the resoruces allocated by the `create_proxies` function. A special care should be","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/setup.rs","byte_start":128153,"byte_end":128254,"line_start":38,"line_end":38,"column_start":1,"column_end":102}},{"value":"/ taken with the return value of this function.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/setup.rs","byte_start":128255,"byte_end":128304,"line_start":39,"line_end":39,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/setup.rs","byte_start":128305,"byte_end":128308,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ # Return (important, please read)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/setup.rs","byte_start":128309,"byte_end":128346,"line_start":41,"line_end":41,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/setup.rs","byte_start":128347,"byte_end":128350,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ Thus function either returns `None` or a pair composed of a collision object handle and a collision object graph index.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/setup.rs","byte_start":128351,"byte_end":128474,"line_start":43,"line_end":43,"column_start":1,"column_end":124}},{"value":"/ If `None` is returned, no extra work is required from the caller. If `Some` is returned, the it is necessary that","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/setup.rs","byte_start":128475,"byte_end":128592,"line_start":44,"line_end":44,"column_start":1,"column_end":118}},{"value":"/ the collision object graph index of the collider identified by the returned handle is replaced by the returned","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/setup.rs","byte_start":128593,"byte_end":128707,"line_start":45,"line_end":45,"column_start":1,"column_end":115}},{"value":"/ collision object graph index. This is caused by the fact that the indices used by the interaction graph to identify","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/setup.rs","byte_start":128708,"byte_end":128827,"line_start":46,"line_end":46,"column_start":1,"column_end":120}},{"value":"/  collision objects are not stable wrt. the deletion of collision objects. Therefore, removing one collision object can","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/setup.rs","byte_start":128828,"byte_end":128950,"line_start":47,"line_end":47,"column_start":1,"column_end":123}},{"value":"/ result in the collision object graph index of another collision object to be changed.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/setup.rs","byte_start":128951,"byte_end":129040,"line_start":48,"line_end":48,"column_start":1,"column_end":90}},{"value":"must_use =\n  \"The graph index of the collision object returned by this method has been changed to the returned graph index.\"","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/setup.rs","byte_start":129041,"byte_end":129166,"line_start":49,"line_end":49,"column_start":1,"column_end":126}}]},{"kind":"Function","id":{"krate":0,"index":1159},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/setup.rs","byte_start":129881,"byte_end":129901,"line_start":65,"line_end":65,"column_start":8,"column_end":28},"name":"default_narrow_phase","qualname":"::pipeline::glue::setup::default_narrow_phase","value":"fn <N, Handle> () -> NarrowPhase<N, Handle>","parent":null,"children":[],"decl_id":null,"docs":" Allocate a default narrow-phase, configured with the default contact and proximity dispatchers.\n","sig":null,"attributes":[{"value":"/ Allocate a default narrow-phase, configured with the default contact and proximity dispatchers.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/setup.rs","byte_start":129774,"byte_end":129873,"line_start":64,"line_end":64,"column_start":1,"column_end":100}}]},{"kind":"Function","id":{"krate":0,"index":1162},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/setup.rs","byte_start":130276,"byte_end":130295,"line_start":73,"line_end":73,"column_start":8,"column_end":27},"name":"default_broad_phase","qualname":"::pipeline::glue::setup::default_broad_phase","value":"fn <N, Handle> () -> DBVTBroadPhase<N, AABB<N>, Handle>","parent":null,"children":[],"decl_id":null,"docs":" Allocate a default broad-phase, configured with a default coherence margin (set to 0.01).\n","sig":null,"attributes":[{"value":"/ Allocate a default broad-phase, configured with a default coherence margin (set to 0.01).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/setup.rs","byte_start":130175,"byte_end":130268,"line_start":72,"line_end":72,"column_start":1,"column_end":94}}]},{"kind":"Function","id":{"krate":0,"index":1165},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/setup.rs","byte_start":130523,"byte_end":130548,"line_start":80,"line_end":80,"column_start":8,"column_end":33},"name":"default_interaction_graph","qualname":"::pipeline::glue::setup::default_interaction_graph","value":"fn <N, Handle> () -> InteractionGraph<N, Handle>","parent":null,"children":[],"decl_id":null,"docs":" Allocate a default interaction graph.\n","sig":null,"attributes":[{"value":"/ Allocate a default interaction graph.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/setup.rs","byte_start":130474,"byte_end":130515,"line_start":79,"line_end":79,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":1202},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/update.rs","byte_start":133141,"byte_end":133160,"line_start":70,"line_end":70,"column_start":8,"column_end":27},"name":"perform_broad_phase","qualname":"::pipeline::glue::update::perform_broad_phase","value":"fn <N, Objects> (objects: &Objects, broad_phase:\n    &mut (impl BroadPhase<N, AABB<N>, Objects::CollisionObjectHandle> +\n          ?Sized), narrow_phase: &mut NarrowPhase<N, Objects::CollisionObjectHandle>, interactions: &mut InteractionGraph<N, Objects::CollisionObjectHandle>, pair_filters:\n    Option<&(impl BroadPhasePairFilter<N, Objects::CollisionObject,\n                                       Objects::CollisionObjectHandle> +\n             ?Sized)>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Performs the broad-phase.","sig":null,"attributes":[{"value":"/ Performs the broad-phase.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/update.rs","byte_start":132880,"byte_end":132909,"line_start":66,"line_end":66,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/update.rs","byte_start":132910,"byte_end":132913,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ This will update the broad-phase internal structure, and create potential interaction pairs in the interaction graph.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/update.rs","byte_start":132914,"byte_end":133035,"line_start":68,"line_end":68,"column_start":1,"column_end":122}},{"value":"/ A `pair_filters` can be provided to filter out pairs of object that should not be considered.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/update.rs","byte_start":133036,"byte_end":133133,"line_start":69,"line_end":69,"column_start":1,"column_end":98}}]},{"kind":"Function","id":{"krate":0,"index":1208},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/update.rs","byte_start":134480,"byte_end":134500,"line_start":109,"line_end":109,"column_start":8,"column_end":28},"name":"perform_narrow_phase","qualname":"::pipeline::glue::update::perform_narrow_phase","value":"fn <N, Objects> (objects: &Objects, narrow_phase: &mut NarrowPhase<N, Objects::CollisionObjectHandle>, interactions: &mut InteractionGraph<N, Objects::CollisionObjectHandle>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Performs the narrow-phase.","sig":null,"attributes":[{"value":"/ Performs the narrow-phase.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/update.rs","byte_start":134327,"byte_end":134357,"line_start":105,"line_end":105,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/update.rs","byte_start":134358,"byte_end":134361,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ This will update all interactions in the interaction graph by computing new contacts,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/update.rs","byte_start":134362,"byte_end":134451,"line_start":107,"line_end":107,"column_start":1,"column_end":90}},{"value":"/ and proximities.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/update.rs","byte_start":134452,"byte_end":134472,"line_start":108,"line_end":108,"column_start":1,"column_end":21}}]},{"kind":"Function","id":{"krate":0,"index":1211},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/update.rs","byte_start":134985,"byte_end":135005,"line_start":124,"line_end":124,"column_start":8,"column_end":28},"name":"perform_all_pipeline","qualname":"::pipeline::glue::update::perform_all_pipeline","value":"fn <'a, N, Objects> (objects: &Objects, broad_phase:\n    &mut (impl BroadPhase<N, AABB<N>, Objects::CollisionObjectHandle> +\n          ?Sized), narrow_phase: &mut NarrowPhase<N, Objects::CollisionObjectHandle>, interactions: &mut InteractionGraph<N, Objects::CollisionObjectHandle>, pair_filters:\n    Option<&'a (impl BroadPhasePairFilter<N, Objects::CollisionObject,\n                                          Objects::CollisionObjectHandle> +\n                ?Sized)>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Performs the broad-phase and the narrow-phase.","sig":null,"attributes":[{"value":"/ Performs the broad-phase and the narrow-phase.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/update.rs","byte_start":134799,"byte_end":134849,"line_start":120,"line_end":120,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/update.rs","byte_start":134850,"byte_end":134853,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ This execute a complete collision detection pipeline by performing the broad-phase first and then","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/update.rs","byte_start":134854,"byte_end":134955,"line_start":122,"line_end":122,"column_start":1,"column_end":102}},{"value":"/ the narrow-phase.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/update.rs","byte_start":134956,"byte_end":134977,"line_start":123,"line_end":123,"column_start":1,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":1217},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"narrow_phase","qualname":"::pipeline::narrow_phase","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/mod.rs","parent":null,"children":[{"krate":0,"index":1218},{"krate":0,"index":1219},{"krate":0,"index":1234},{"krate":0,"index":1240},{"krate":0,"index":1245},{"krate":0,"index":1246},{"krate":0,"index":1256},{"krate":0,"index":1691},{"krate":0,"index":1720},{"krate":0,"index":1819},{"krate":0,"index":1875}],"decl_id":null,"docs":" Persistent collision detection algorithms to compute contact points.\n","sig":null,"attributes":[{"value":"! Persistent collision detection algorithms to compute contact points.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/mod.rs","byte_start":135714,"byte_end":135786,"line_start":1,"line_end":1,"column_start":1,"column_end":73}}]},{"kind":"Mod","id":{"krate":0,"index":1256},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"contact_generator","qualname":"::pipeline::narrow_phase::contact_generator","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/mod.rs","parent":null,"children":[{"krate":0,"index":1257},{"krate":0,"index":1258},{"krate":0,"index":1259},{"krate":0,"index":1260},{"krate":0,"index":1261},{"krate":0,"index":1262},{"krate":0,"index":1263},{"krate":0,"index":1267},{"krate":0,"index":1268},{"krate":0,"index":1269},{"krate":0,"index":1270},{"krate":0,"index":1271},{"krate":0,"index":1272},{"krate":0,"index":1273},{"krate":0,"index":1299},{"krate":0,"index":1329},{"krate":0,"index":1355},{"krate":0,"index":1382},{"krate":0,"index":1420},{"krate":0,"index":1462},{"krate":0,"index":1480},{"krate":0,"index":1511},{"krate":0,"index":1540},{"krate":0,"index":1577},{"krate":0,"index":1607},{"krate":0,"index":1636}],"decl_id":null,"docs":" Persistant collision detection algorithms to compute contact points.\n","sig":null,"attributes":[{"value":"! Persistant collision detection algorithms to compute contact points.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/mod.rs","byte_start":137149,"byte_end":137221,"line_start":1,"line_end":1,"column_start":1,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":6908},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/ball_ball_manifold_generator.rs","byte_start":139513,"byte_end":139538,"line_start":13,"line_end":13,"column_start":12,"column_end":37},"name":"BallBallManifoldGenerator","qualname":"::pipeline::narrow_phase::contact_generator::ball_ball_manifold_generator::BallBallManifoldGenerator","value":"BallBallManifoldGenerator {  }","parent":null,"children":[{"krate":0,"index":6910}],"decl_id":null,"docs":" Collision detector between two balls.\n","sig":null,"attributes":[{"value":"/ Collision detector between two balls.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/ball_ball_manifold_generator.rs","byte_start":139443,"byte_end":139484,"line_start":11,"line_end":11,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1295},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/ball_ball_manifold_generator.rs","byte_start":139733,"byte_end":139736,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<BallBallManifoldGenerator<N>>::new","value":"fn () -> BallBallManifoldGenerator<N>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new persistent collision detector between two balls.\n","sig":null,"attributes":[{"value":"/ Creates a new persistent collision detector between two balls.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/ball_ball_manifold_generator.rs","byte_start":139641,"byte_end":139707,"line_start":18,"line_end":18,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/ball_ball_manifold_generator.rs","byte_start":139712,"byte_end":139721,"line_start":19,"line_end":19,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":6914},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/ball_convex_polyhedron_manifold_generator.rs","byte_start":141857,"byte_end":141894,"line_start":14,"line_end":14,"column_start":12,"column_end":49},"name":"BallConvexPolyhedronManifoldGenerator","qualname":"::pipeline::narrow_phase::contact_generator::ball_convex_polyhedron_manifold_generator::BallConvexPolyhedronManifoldGenerator","value":"BallConvexPolyhedronManifoldGenerator {  }","parent":null,"children":[{"krate":0,"index":6916},{"krate":0,"index":6917}],"decl_id":null,"docs":" Collision detector between two balls.\n","sig":null,"attributes":[{"value":"/ Collision detector between two balls.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/ball_convex_polyhedron_manifold_generator.rs","byte_start":141787,"byte_end":141828,"line_start":12,"line_end":12,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1324},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/ball_convex_polyhedron_manifold_generator.rs","byte_start":142117,"byte_end":142120,"line_start":22,"line_end":22,"column_start":12,"column_end":15},"name":"new","qualname":"<BallConvexPolyhedronManifoldGenerator<N>>::new","value":"fn (flip: bool) -> BallConvexPolyhedronManifoldGenerator<N>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new persistent collision detector between two balls.\n","sig":null,"attributes":[{"value":"/ Creates a new persistent collision detector between two balls.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/ball_convex_polyhedron_manifold_generator.rs","byte_start":142025,"byte_end":142091,"line_start":20,"line_end":20,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/ball_convex_polyhedron_manifold_generator.rs","byte_start":142096,"byte_end":142105,"line_start":21,"line_end":21,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1345},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/capsule_capsule_manifold_generator.rs","byte_start":147049,"byte_end":147080,"line_start":10,"line_end":10,"column_start":12,"column_end":43},"name":"CapsuleCapsuleManifoldGenerator","qualname":"::pipeline::narrow_phase::contact_generator::capsule_capsule_manifold_generator::CapsuleCapsuleManifoldGenerator","value":"CapsuleCapsuleManifoldGenerator {  }","parent":null,"children":[{"krate":0,"index":1347}],"decl_id":null,"docs":" Collision detector between a concave shape and another shape.\n","sig":null,"attributes":[{"value":"/ Collision detector between a concave shape and another shape.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/capsule_capsule_manifold_generator.rs","byte_start":146972,"byte_end":147037,"line_start":9,"line_end":9,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1350},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/capsule_capsule_manifold_generator.rs","byte_start":147388,"byte_end":147391,"line_start":17,"line_end":17,"column_start":12,"column_end":15},"name":"new","qualname":"<CapsuleCapsuleManifoldGenerator<N>>::new","value":"fn () -> CapsuleCapsuleManifoldGenerator<N>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new collision detector between a concave shape and another shape.\n","sig":null,"attributes":[{"value":"/ Creates a new collision detector between a concave shape and another shape.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/capsule_capsule_manifold_generator.rs","byte_start":147297,"byte_end":147376,"line_start":16,"line_end":16,"column_start":5,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":1371},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/capsule_shape_manifold_generator.rs","byte_start":149636,"byte_end":149665,"line_start":8,"line_end":8,"column_start":12,"column_end":41},"name":"CapsuleShapeManifoldGenerator","qualname":"::pipeline::narrow_phase::contact_generator::capsule_shape_manifold_generator::CapsuleShapeManifoldGenerator","value":"CapsuleShapeManifoldGenerator {  }","parent":null,"children":[{"krate":0,"index":1373},{"krate":0,"index":1374}],"decl_id":null,"docs":" Collision detector between a concave shape and another shape.\n","sig":null,"attributes":[{"value":"/ Collision detector between a concave shape and another shape.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/capsule_shape_manifold_generator.rs","byte_start":149559,"byte_end":149624,"line_start":7,"line_end":7,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1377},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/capsule_shape_manifold_generator.rs","byte_start":149897,"byte_end":149900,"line_start":15,"line_end":15,"column_start":12,"column_end":15},"name":"new","qualname":"<CapsuleShapeManifoldGenerator<N>>::new","value":"fn (flip: bool) -> CapsuleShapeManifoldGenerator<N>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new collision detector between a concave shape and another shape.\n","sig":null,"attributes":[{"value":"/ Creates a new collision detector between a concave shape and another shape.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/capsule_shape_manifold_generator.rs","byte_start":149806,"byte_end":149885,"line_start":14,"line_end":14,"column_start":5,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":1401},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/composite_shape_composite_shape_manifold_generator.rs","byte_start":153088,"byte_end":153133,"line_start":15,"line_end":15,"column_start":12,"column_end":57},"name":"CompositeShapeCompositeShapeManifoldGenerator","qualname":"::pipeline::narrow_phase::contact_generator::composite_shape_composite_shape_manifold_generator::CompositeShapeCompositeShapeManifoldGenerator","value":"CompositeShapeCompositeShapeManifoldGenerator {  }","parent":null,"children":[{"krate":0,"index":1403},{"krate":0,"index":1404},{"krate":0,"index":1405}],"decl_id":null,"docs":" Collision detector between a concave shape and another shape.\n","sig":null,"attributes":[{"value":"/ Collision detector between a concave shape and another shape.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/composite_shape_composite_shape_manifold_generator.rs","byte_start":153011,"byte_end":153076,"line_start":14,"line_end":14,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1408},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/composite_shape_composite_shape_manifold_generator.rs","byte_start":153452,"byte_end":153455,"line_start":23,"line_end":23,"column_start":12,"column_end":15},"name":"new","qualname":"<CompositeShapeCompositeShapeManifoldGenerator<N>>::new","value":"fn () -> CompositeShapeCompositeShapeManifoldGenerator<N>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new collision detector between a concave shape and another shape.\n","sig":null,"attributes":[{"value":"/ Creates a new collision detector between a concave shape and another shape.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/composite_shape_composite_shape_manifold_generator.rs","byte_start":153361,"byte_end":153440,"line_start":22,"line_end":22,"column_start":5,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":1445},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/composite_shape_shape_manifold_generator.rs","byte_start":158291,"byte_end":158327,"line_start":16,"line_end":16,"column_start":12,"column_end":48},"name":"CompositeShapeShapeManifoldGenerator","qualname":"::pipeline::narrow_phase::contact_generator::composite_shape_shape_manifold_generator::CompositeShapeShapeManifoldGenerator","value":"CompositeShapeShapeManifoldGenerator {  }","parent":null,"children":[{"krate":0,"index":1447},{"krate":0,"index":1448},{"krate":0,"index":1449},{"krate":0,"index":1450}],"decl_id":null,"docs":" Collision detector between a concave shape and another shape.\n","sig":null,"attributes":[{"value":"/ Collision detector between a concave shape and another shape.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/composite_shape_shape_manifold_generator.rs","byte_start":158214,"byte_end":158279,"line_start":15,"line_end":15,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1453},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/composite_shape_shape_manifold_generator.rs","byte_start":158657,"byte_end":158660,"line_start":25,"line_end":25,"column_start":12,"column_end":15},"name":"new","qualname":"<CompositeShapeShapeManifoldGenerator<N>>::new","value":"fn (flip: bool) -> CompositeShapeShapeManifoldGenerator<N>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new collision detector between a concave shape and another shape.\n","sig":null,"attributes":[{"value":"/ Creates a new collision detector between a concave shape and another shape.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/composite_shape_shape_manifold_generator.rs","byte_start":158566,"byte_end":158645,"line_start":24,"line_end":24,"column_start":5,"column_end":84}}]},{"kind":"Mod","id":{"krate":0,"index":1462},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/contact_manifold_generator.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"contact_manifold_generator","qualname":"::pipeline::narrow_phase::contact_generator::contact_manifold_generator","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/contact_manifold_generator.rs","parent":null,"children":[{"krate":0,"index":1463},{"krate":0,"index":1464},{"krate":0,"index":1465},{"krate":0,"index":1468},{"krate":0,"index":1469},{"krate":0,"index":1470},{"krate":0,"index":1471},{"krate":0,"index":1475},{"krate":0,"index":1477}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1471},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/contact_manifold_generator.rs","byte_start":163433,"byte_end":163457,"line_start":10,"line_end":10,"column_start":11,"column_end":35},"name":"ContactManifoldGenerator","qualname":"::pipeline::narrow_phase::contact_generator::contact_manifold_generator::ContactManifoldGenerator","value":"ContactManifoldGenerator<N: RealField>: Any + Send + Sync","parent":null,"children":[{"krate":0,"index":1473},{"krate":0,"index":1474}],"decl_id":null,"docs":" An algorithm to compute contact points, normals and penetration depths between two specific\n objects.\n","sig":null,"attributes":[{"value":"/ An algorithm to compute contact points, normals and penetration depths between two specific","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/contact_manifold_generator.rs","byte_start":163314,"byte_end":163409,"line_start":8,"line_end":8,"column_start":1,"column_end":96}},{"value":"/ objects.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/contact_manifold_generator.rs","byte_start":163410,"byte_end":163422,"line_start":9,"line_end":9,"column_start":1,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":1473},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/contact_manifold_generator.rs","byte_start":164002,"byte_end":164019,"line_start":19,"line_end":19,"column_start":8,"column_end":25},"name":"generate_contacts","qualname":"::pipeline::narrow_phase::contact_generator::contact_manifold_generator::ContactManifoldGenerator::generate_contacts","value":"fn (&mut self, dispatcher: &dyn ContactDispatcher<N>, ma: &Isometry<N>, a: &dyn Shape<N>, proc1: Option<&dyn ContactPreprocessor<N>>, mb: &Isometry<N>, b: &dyn Shape<N>, proc2: Option<&dyn ContactPreprocessor<N>>, prediction: &ContactPrediction<N>, manifold: &mut ContactManifold<N>) -> bool","parent":{"krate":0,"index":1471},"children":[],"decl_id":null,"docs":" Runs the collision detection on two objects. It is assumed that the same\n collision detector (the same structure) is always used with the same\n pair of objects.","sig":null,"attributes":[{"value":"/ Runs the collision detection on two objects. It is assumed that the same","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/contact_manifold_generator.rs","byte_start":163497,"byte_end":163573,"line_start":11,"line_end":11,"column_start":5,"column_end":81}},{"value":"/ collision detector (the same structure) is always used with the same","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/contact_manifold_generator.rs","byte_start":163578,"byte_end":163650,"line_start":12,"line_end":12,"column_start":5,"column_end":77}},{"value":"/ pair of objects.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/contact_manifold_generator.rs","byte_start":163655,"byte_end":163675,"line_start":13,"line_end":13,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/contact_manifold_generator.rs","byte_start":163680,"byte_end":163683,"line_start":14,"line_end":14,"column_start":5,"column_end":8}},{"value":"/ Returns `false` if persisting this algorithm for re-use is unlikely to improve performance,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/contact_manifold_generator.rs","byte_start":163688,"byte_end":163783,"line_start":15,"line_end":15,"column_start":5,"column_end":100}},{"value":"/ e.g. due to the objects being distant. Note that if the `ContactManifoldGenerator` would","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/contact_manifold_generator.rs","byte_start":163788,"byte_end":163880,"line_start":16,"line_end":16,"column_start":5,"column_end":97}},{"value":"/ likely be immediately reconstructed in the next time-step, dropping it is sub-optimal","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/contact_manifold_generator.rs","byte_start":163885,"byte_end":163974,"line_start":17,"line_end":17,"column_start":5,"column_end":94}},{"value":"/ regardless.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/contact_manifold_generator.rs","byte_start":163979,"byte_end":163994,"line_start":18,"line_end":18,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1474},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/contact_manifold_generator.rs","byte_start":164506,"byte_end":164519,"line_start":33,"line_end":33,"column_start":8,"column_end":21},"name":"init_manifold","qualname":"::pipeline::narrow_phase::contact_generator::contact_manifold_generator::ContactManifoldGenerator::init_manifold","value":"fn (&self) -> ContactManifold<N>","parent":{"krate":0,"index":1471},"children":[],"decl_id":null,"docs":" Generate an empty contact manifold configured as required by this contact manifold generator.\n","sig":null,"attributes":[{"value":"/ Generate an empty contact manifold configured as required by this contact manifold generator.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/contact_manifold_generator.rs","byte_start":164401,"byte_end":164498,"line_start":32,"line_end":32,"column_start":5,"column_end":102}}]},{"kind":"Type","id":{"krate":0,"index":1475},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/contact_manifold_generator.rs","byte_start":164600,"byte_end":164616,"line_start":38,"line_end":38,"column_start":10,"column_end":26},"name":"ContactAlgorithm","qualname":"::pipeline::narrow_phase::contact_generator::contact_manifold_generator::ContactAlgorithm","value":"Box<dyn ContactManifoldGenerator<N>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1477},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/contact_manifold_generator.rs","byte_start":164671,"byte_end":164688,"line_start":40,"line_end":40,"column_start":11,"column_end":28},"name":"ContactDispatcher","qualname":"::pipeline::narrow_phase::contact_generator::contact_manifold_generator::ContactDispatcher","value":"ContactDispatcher<N>: Any + Send + Sync","parent":null,"children":[{"krate":0,"index":1479}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1479},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/contact_manifold_generator.rs","byte_start":164817,"byte_end":164838,"line_start":42,"line_end":42,"column_start":8,"column_end":29},"name":"get_contact_algorithm","qualname":"::pipeline::narrow_phase::contact_generator::contact_manifold_generator::ContactDispatcher::get_contact_algorithm","value":"fn (&self, a: &dyn Shape<N>, b: &dyn Shape<N>) -> Option<ContactAlgorithm<N>>","parent":{"krate":0,"index":1477},"children":[],"decl_id":null,"docs":" Allocate a collision algorithm corresponding to a pair of objects with the given shapes.\n","sig":null,"attributes":[{"value":"/ Allocate a collision algorithm corresponding to a pair of objects with the given shapes.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/contact_manifold_generator.rs","byte_start":164717,"byte_end":164809,"line_start":41,"line_end":41,"column_start":5,"column_end":97}}]},{"kind":"Struct","id":{"krate":0,"index":6921},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/convex_polyhedron_convex_polyhedron_manifold_generator.rs","byte_start":165863,"byte_end":165912,"line_start":25,"line_end":25,"column_start":12,"column_end":61},"name":"ConvexPolyhedronConvexPolyhedronManifoldGenerator","qualname":"::pipeline::narrow_phase::contact_generator::convex_polyhedron_convex_polyhedron_manifold_generator::ConvexPolyhedronConvexPolyhedronManifoldGenerator","value":"ConvexPolyhedronConvexPolyhedronManifoldGenerator {  }","parent":null,"children":[{"krate":0,"index":6923},{"krate":0,"index":6924},{"krate":0,"index":6925},{"krate":0,"index":6926},{"krate":0,"index":6927},{"krate":0,"index":6928},{"krate":0,"index":6929}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"dim3\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/convex_polyhedron_convex_polyhedron_manifold_generator.rs","byte_start":165810,"byte_end":165834,"line_start":23,"line_end":23,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1506},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/convex_polyhedron_convex_polyhedron_manifold_generator.rs","byte_start":166345,"byte_end":166348,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"new","qualname":"<ConvexPolyhedronConvexPolyhedronManifoldGenerator<N>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"dim3\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/convex_polyhedron_convex_polyhedron_manifold_generator.rs","byte_start":166309,"byte_end":166333,"line_start":36,"line_end":36,"column_start":5,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":1534},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/default_contact_dispatcher.rs","byte_start":171544,"byte_end":171568,"line_start":17,"line_end":17,"column_start":12,"column_end":36},"name":"DefaultContactDispatcher","qualname":"::pipeline::narrow_phase::contact_generator::default_contact_dispatcher::DefaultContactDispatcher","value":"DefaultContactDispatcher {  }","parent":null,"children":[],"decl_id":null,"docs":" Collision dispatcher for shapes defined by `ncollide_entities`.\n","sig":null,"attributes":[{"value":"/ Collision dispatcher for shapes defined by `ncollide_entities`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/default_contact_dispatcher.rs","byte_start":171465,"byte_end":171532,"line_start":16,"line_end":16,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1536},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/default_contact_dispatcher.rs","byte_start":171666,"byte_end":171669,"line_start":21,"line_end":21,"column_start":12,"column_end":15},"name":"new","qualname":"<DefaultContactDispatcher>::new","value":"fn () -> DefaultContactDispatcher","parent":null,"children":[],"decl_id":null,"docs":" Creates a new basic collision dispatcher.\n","sig":null,"attributes":[{"value":"/ Creates a new basic collision dispatcher.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/default_contact_dispatcher.rs","byte_start":171609,"byte_end":171654,"line_start":20,"line_end":20,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":1563},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/heightfield_shape_manifold_generator.rs","byte_start":175381,"byte_end":175414,"line_start":11,"line_end":11,"column_start":12,"column_end":45},"name":"HeightFieldShapeManifoldGenerator","qualname":"::pipeline::narrow_phase::contact_generator::heightfield_shape_manifold_generator::HeightFieldShapeManifoldGenerator","value":"HeightFieldShapeManifoldGenerator {  }","parent":null,"children":[{"krate":0,"index":1565},{"krate":0,"index":1566},{"krate":0,"index":1567}],"decl_id":null,"docs":" Collision detector between an heightfield and another shape.\n","sig":null,"attributes":[{"value":"/ Collision detector between an heightfield and another shape.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/heightfield_shape_manifold_generator.rs","byte_start":175305,"byte_end":175369,"line_start":10,"line_end":10,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1570},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/heightfield_shape_manifold_generator.rs","byte_start":175709,"byte_end":175712,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"new","qualname":"<HeightFieldShapeManifoldGenerator<N>>::new","value":"fn (flip: bool) -> HeightFieldShapeManifoldGenerator<N>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new collision detector between an heightfield and another shape.\n","sig":null,"attributes":[{"value":"/ Creates a new collision detector between an heightfield and another shape.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/heightfield_shape_manifold_generator.rs","byte_start":175619,"byte_end":175697,"line_start":18,"line_end":18,"column_start":5,"column_end":83}}]},{"kind":"Struct","id":{"krate":0,"index":6933},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/plane_ball_manifold_generator.rs","byte_start":180901,"byte_end":180927,"line_start":13,"line_end":13,"column_start":12,"column_end":38},"name":"PlaneBallManifoldGenerator","qualname":"::pipeline::narrow_phase::contact_generator::plane_ball_manifold_generator::PlaneBallManifoldGenerator","value":"PlaneBallManifoldGenerator {  }","parent":null,"children":[{"krate":0,"index":6935},{"krate":0,"index":6936}],"decl_id":null,"docs":" Collision detector between g1 plane and g1 shape implementing the `SupportMap` trait.\n","sig":null,"attributes":[{"value":"/ Collision detector between g1 plane and g1 shape implementing the `SupportMap` trait.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/plane_ball_manifold_generator.rs","byte_start":180783,"byte_end":180872,"line_start":11,"line_end":11,"column_start":1,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":1602},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/plane_ball_manifold_generator.rs","byte_start":181193,"byte_end":181196,"line_start":22,"line_end":22,"column_start":12,"column_end":15},"name":"new","qualname":"<PlaneBallManifoldGenerator<N>>::new","value":"fn (flip: bool) -> PlaneBallManifoldGenerator<N>","parent":null,"children":[],"decl_id":null,"docs":" Creates g1 new persistent collision detector between g1 plane and g1 shape with g1 support\n mapping function.\n","sig":null,"attributes":[{"value":"/ Creates g1 new persistent collision detector between g1 plane and g1 shape with g1 support","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/plane_ball_manifold_generator.rs","byte_start":181047,"byte_end":181141,"line_start":19,"line_end":19,"column_start":5,"column_end":99}},{"value":"/ mapping function.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/plane_ball_manifold_generator.rs","byte_start":181146,"byte_end":181167,"line_start":20,"line_end":20,"column_start":5,"column_end":26}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/plane_ball_manifold_generator.rs","byte_start":181172,"byte_end":181181,"line_start":21,"line_end":21,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":6940},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/plane_convex_polyhedron_manifold_generator.rs","byte_start":184850,"byte_end":184888,"line_start":12,"line_end":12,"column_start":12,"column_end":50},"name":"PlaneConvexPolyhedronManifoldGenerator","qualname":"::pipeline::narrow_phase::contact_generator::plane_convex_polyhedron_manifold_generator::PlaneConvexPolyhedronManifoldGenerator","value":"PlaneConvexPolyhedronManifoldGenerator {  }","parent":null,"children":[{"krate":0,"index":6942},{"krate":0,"index":6943}],"decl_id":null,"docs":" Collision detector between g1 plane and g1 shape implementing the `SupportMap` trait.\n","sig":null,"attributes":[{"value":"/ Collision detector between g1 plane and g1 shape implementing the `SupportMap` trait.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/plane_convex_polyhedron_manifold_generator.rs","byte_start":184732,"byte_end":184821,"line_start":10,"line_end":10,"column_start":1,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":1631},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/plane_convex_polyhedron_manifold_generator.rs","byte_start":185177,"byte_end":185180,"line_start":21,"line_end":21,"column_start":12,"column_end":15},"name":"new","qualname":"<PlaneConvexPolyhedronManifoldGenerator<N>>::new","value":"fn (flip: bool) -> PlaneConvexPolyhedronManifoldGenerator<N>","parent":null,"children":[],"decl_id":null,"docs":" Creates g1 new persistent collision detector between g1 plane and g1 shape with g1 support\n mapping function.\n","sig":null,"attributes":[{"value":"/ Creates g1 new persistent collision detector between g1 plane and g1 shape with g1 support","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/plane_convex_polyhedron_manifold_generator.rs","byte_start":185031,"byte_end":185125,"line_start":18,"line_end":18,"column_start":5,"column_end":99}},{"value":"/ mapping function.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/plane_convex_polyhedron_manifold_generator.rs","byte_start":185130,"byte_end":185151,"line_start":19,"line_end":19,"column_start":5,"column_end":26}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/plane_convex_polyhedron_manifold_generator.rs","byte_start":185156,"byte_end":185165,"line_start":20,"line_end":20,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1668},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/trimesh_trimesh_manifold_generator.rs","byte_start":189417,"byte_end":189448,"line_start":15,"line_end":15,"column_start":12,"column_end":43},"name":"TriMeshTriMeshManifoldGenerator","qualname":"::pipeline::narrow_phase::contact_generator::trimesh_trimesh_manifold_generator::TriMeshTriMeshManifoldGenerator","value":"TriMeshTriMeshManifoldGenerator {  }","parent":null,"children":[{"krate":0,"index":1670},{"krate":0,"index":1671},{"krate":0,"index":1672},{"krate":0,"index":1673},{"krate":0,"index":1674}],"decl_id":null,"docs":" Collision detector between a concave shape and another shape.\n","sig":null,"attributes":[{"value":"/ Collision detector between a concave shape and another shape.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/trimesh_trimesh_manifold_generator.rs","byte_start":189340,"byte_end":189405,"line_start":14,"line_end":14,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1677},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/trimesh_trimesh_manifold_generator.rs","byte_start":189848,"byte_end":189851,"line_start":25,"line_end":25,"column_start":12,"column_end":15},"name":"new","qualname":"<TriMeshTriMeshManifoldGenerator<N>>::new","value":"fn () -> TriMeshTriMeshManifoldGenerator<N>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new collision detector between a concave shape and another shape.\n","sig":null,"attributes":[{"value":"/ Creates a new collision detector between a concave shape and another shape.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/trimesh_trimesh_manifold_generator.rs","byte_start":189757,"byte_end":189836,"line_start":24,"line_end":24,"column_start":5,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":1695},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/events.rs","byte_start":214315,"byte_end":214324,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"EventPool","qualname":"::pipeline::narrow_phase::events::EventPool","value":"EventPool {  }","parent":null,"children":[{"krate":0,"index":1697}],"decl_id":null,"docs":" A set of events.\n","sig":null,"attributes":[{"value":"/ A set of events.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/events.rs","byte_start":214283,"byte_end":214303,"line_start":9,"line_end":9,"column_start":1,"column_end":21}}]},{"kind":"Type","id":{"krate":0,"index":1698},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/events.rs","byte_start":214391,"byte_end":214404,"line_start":15,"line_end":15,"column_start":10,"column_end":23},"name":"ContactEvents","qualname":"::pipeline::narrow_phase::events::ContactEvents","value":"EventPool<ContactEvent<Handle>>","parent":null,"children":[],"decl_id":null,"docs":" A set of contact events.\n","sig":null,"attributes":[{"value":"/ A set of contact events.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/events.rs","byte_start":214353,"byte_end":214381,"line_start":14,"line_end":14,"column_start":1,"column_end":29}}]},{"kind":"Type","id":{"krate":0,"index":1700},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/events.rs","byte_start":214488,"byte_end":214503,"line_start":17,"line_end":17,"column_start":10,"column_end":25},"name":"ProximityEvents","qualname":"::pipeline::narrow_phase::events::ProximityEvents","value":"EventPool<ProximityEvent<Handle>>","parent":null,"children":[],"decl_id":null,"docs":" A set of proximity events.\n","sig":null,"attributes":[{"value":"/ A set of proximity events.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/events.rs","byte_start":214448,"byte_end":214478,"line_start":16,"line_end":16,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1704},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/events.rs","byte_start":214627,"byte_end":214630,"line_start":21,"line_end":21,"column_start":12,"column_end":15},"name":"new","qualname":"<EventPool<E>>::new","value":"fn () -> EventPool<E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty set of events.\n","sig":null,"attributes":[{"value":"/ Creates a new empty set of events.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/events.rs","byte_start":214577,"byte_end":214615,"line_start":20,"line_end":20,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1705},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/events.rs","byte_start":214746,"byte_end":214751,"line_start":26,"line_end":26,"column_start":12,"column_end":17},"name":"clear","qualname":"<EventPool<E>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Empties this set of events.\n","sig":null,"attributes":[{"value":"/ Empties this set of events.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/events.rs","byte_start":214703,"byte_end":214734,"line_start":25,"line_end":25,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1706},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/events.rs","byte_start":214865,"byte_end":214869,"line_start":31,"line_end":31,"column_start":12,"column_end":16},"name":"push","qualname":"<EventPool<E>>::push","value":"fn (&mut self, event: E) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds the given event at the end of this set.\n","sig":null,"attributes":[{"value":"/ Adds the given event at the end of this set.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/events.rs","byte_start":214805,"byte_end":214853,"line_start":30,"line_end":30,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1707},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/events.rs","byte_start":215020,"byte_end":215024,"line_start":36,"line_end":36,"column_start":12,"column_end":16},"name":"iter","qualname":"<EventPool<E>>::iter","value":"fn (&self) -> Iter<E>","parent":null,"children":[],"decl_id":null,"docs":" Iterates through all events contained on this set in a FIFO manner.\n","sig":null,"attributes":[{"value":"/ Iterates through all events contained on this set in a FIFO manner.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/events.rs","byte_start":214937,"byte_end":215008,"line_start":35,"line_end":35,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1708},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/events.rs","byte_start":215167,"byte_end":215173,"line_start":41,"line_end":41,"column_start":12,"column_end":18},"name":"retain","qualname":"<EventPool<E>>::retain","value":"fn <F> (&mut self, filter: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Removes from this set all events for which `filter` returns `false`.\n","sig":null,"attributes":[{"value":"/ Removes from this set all events for which `filter` returns `false`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/events.rs","byte_start":215083,"byte_end":215155,"line_start":40,"line_end":40,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1710},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/events.rs","byte_start":215355,"byte_end":215358,"line_start":50,"line_end":50,"column_start":12,"column_end":15},"name":"len","qualname":"<EventPool<E>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The number of events on this pool.\n","sig":null,"attributes":[{"value":"/ The number of events on this pool.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/events.rs","byte_start":215291,"byte_end":215329,"line_start":48,"line_end":48,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/events.rs","byte_start":215334,"byte_end":215343,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6949},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/events.rs","byte_start":216005,"byte_end":216012,"line_start":70,"line_end":70,"column_start":5,"column_end":12},"name":"Started","qualname":"::pipeline::narrow_phase::events::ContactEvent::Started","value":"ContactEvent::Started(Handle, Handle)","parent":{"krate":0,"index":6947},"children":[],"decl_id":null,"docs":" Event occuring when two collision objects start being in contact.","sig":null,"attributes":[{"value":"/ Event occuring when two collision objects start being in contact.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/events.rs","byte_start":215769,"byte_end":215838,"line_start":67,"line_end":67,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/events.rs","byte_start":215843,"byte_end":215846,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ This event is generated whenever the narrow-phase finds a contact between two collision objects that did not have any contact at the last update.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/events.rs","byte_start":215851,"byte_end":216000,"line_start":69,"line_end":69,"column_start":5,"column_end":154}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6953},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/events.rs","byte_start":216284,"byte_end":216291,"line_start":74,"line_end":74,"column_start":5,"column_end":12},"name":"Stopped","qualname":"::pipeline::narrow_phase::events::ContactEvent::Stopped","value":"ContactEvent::Stopped(Handle, Handle)","parent":{"krate":0,"index":6947},"children":[],"decl_id":null,"docs":" Event occuring when two collision objects stop being in contact.","sig":null,"attributes":[{"value":"/ Event occuring when two collision objects stop being in contact.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/events.rs","byte_start":216034,"byte_end":216102,"line_start":71,"line_end":71,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/events.rs","byte_start":216107,"byte_end":216110,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ This event is generated whenever the narrow-phase fails to find any contact between two collision objects that did have at least one contact at the last update.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/events.rs","byte_start":216115,"byte_end":216279,"line_start":73,"line_end":73,"column_start":5,"column_end":169}}]},{"kind":"Enum","id":{"krate":0,"index":6947},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/events.rs","byte_start":215742,"byte_end":215754,"line_start":66,"line_end":66,"column_start":10,"column_end":22},"name":"ContactEvent","qualname":"::pipeline::narrow_phase::events::ContactEvent","value":"ContactEvent::{Started, Stopped}","parent":null,"children":[{"krate":0,"index":6949},{"krate":0,"index":6953}],"decl_id":null,"docs":" Events occuring when two collision objects start or stop being in contact (or penetration).\n","sig":null,"attributes":[{"value":"/ Events occuring when two collision objects start or stop being in contact (or penetration).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/events.rs","byte_start":215637,"byte_end":215732,"line_start":65,"line_end":65,"column_start":1,"column_end":96}}]},{"kind":"Struct","id":{"krate":0,"index":6969},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/events.rs","byte_start":216462,"byte_end":216476,"line_start":79,"line_end":79,"column_start":12,"column_end":26},"name":"ProximityEvent","qualname":"::pipeline::narrow_phase::events::ProximityEvent","value":"ProximityEvent { collider1, collider2, prev_status, new_status }","parent":null,"children":[{"krate":0,"index":6971},{"krate":0,"index":6972},{"krate":0,"index":6973},{"krate":0,"index":6974}],"decl_id":null,"docs":" Events occuring when two collision objects start or stop being in close proximity, contact, or disjoint.\n","sig":null,"attributes":[{"value":"/ Events occuring when two collision objects start or stop being in close proximity, contact, or disjoint.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/events.rs","byte_start":216342,"byte_end":216450,"line_start":78,"line_end":78,"column_start":1,"column_end":109}}]},{"kind":"Field","id":{"krate":0,"index":6971},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/events.rs","byte_start":216560,"byte_end":216569,"line_start":81,"line_end":81,"column_start":9,"column_end":18},"name":"collider1","qualname":"::pipeline::narrow_phase::events::ProximityEvent::collider1","value":"Handle","parent":{"krate":0,"index":6969},"children":[],"decl_id":null,"docs":" The first collider to which the proximity event applies.\n","sig":null,"attributes":[{"value":"/ The first collider to which the proximity event applies.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/events.rs","byte_start":216491,"byte_end":216551,"line_start":80,"line_end":80,"column_start":5,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":6972},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/events.rs","byte_start":216653,"byte_end":216662,"line_start":83,"line_end":83,"column_start":9,"column_end":18},"name":"collider2","qualname":"::pipeline::narrow_phase::events::ProximityEvent::collider2","value":"Handle","parent":{"krate":0,"index":6969},"children":[],"decl_id":null,"docs":" The second collider to which the proximity event applies.\n","sig":null,"attributes":[{"value":"/ The second collider to which the proximity event applies.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/events.rs","byte_start":216583,"byte_end":216644,"line_start":82,"line_end":82,"column_start":5,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":6973},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/events.rs","byte_start":216755,"byte_end":216766,"line_start":85,"line_end":85,"column_start":9,"column_end":20},"name":"prev_status","qualname":"::pipeline::narrow_phase::events::ProximityEvent::prev_status","value":"query::proximity::proximity::Proximity","parent":{"krate":0,"index":6969},"children":[],"decl_id":null,"docs":" The previous state of proximity between the two collision objects.\n","sig":null,"attributes":[{"value":"/ The previous state of proximity between the two collision objects.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/events.rs","byte_start":216676,"byte_end":216746,"line_start":84,"line_end":84,"column_start":5,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":6974},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/events.rs","byte_start":216857,"byte_end":216867,"line_start":87,"line_end":87,"column_start":9,"column_end":19},"name":"new_status","qualname":"::pipeline::narrow_phase::events::ProximityEvent::new_status","value":"query::proximity::proximity::Proximity","parent":{"krate":0,"index":6969},"children":[],"decl_id":null,"docs":" The new state of proximity between the two collision objects.\n","sig":null,"attributes":[{"value":"/ The new state of proximity between the two collision objects.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/events.rs","byte_start":216783,"byte_end":216848,"line_start":86,"line_end":86,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1719},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/events.rs","byte_start":217042,"byte_end":217045,"line_start":94,"line_end":94,"column_start":12,"column_end":15},"name":"new","qualname":"<ProximityEvent<Handle>>::new","value":"fn (collider1: Handle, collider2: Handle, prev_status: Proximity, new_status: Proximity) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Instantiates a new proximity event.","sig":null,"attributes":[{"value":"/ Instantiates a new proximity event.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/events.rs","byte_start":216925,"byte_end":216964,"line_start":91,"line_end":91,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/events.rs","byte_start":216969,"byte_end":216972,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ Panics if `prev_status` is equal to `new_status`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/events.rs","byte_start":216977,"byte_end":217030,"line_start":93,"line_end":93,"column_start":5,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":1736},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":217864,"byte_end":217889,"line_start":12,"line_end":12,"column_start":10,"column_end":35},"name":"CollisionObjectGraphIndex","qualname":"::pipeline::narrow_phase::interaction_graph::CollisionObjectGraphIndex","value":"NodeIndex<usize>","parent":null,"children":[],"decl_id":null,"docs":" Index of a node of the interaction graph.\n","sig":null,"attributes":[{"value":"/ Index of a node of the interaction graph.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":217809,"byte_end":217854,"line_start":11,"line_end":11,"column_start":1,"column_end":46}}]},{"kind":"Type","id":{"krate":0,"index":1737},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":217977,"byte_end":218002,"line_start":14,"line_end":14,"column_start":10,"column_end":35},"name":"TemporaryInteractionIndex","qualname":"::pipeline::narrow_phase::interaction_graph::TemporaryInteractionIndex","value":"EdgeIndex<usize>","parent":null,"children":[],"decl_id":null,"docs":" Temporary index to and edge of the interaction graph.\n","sig":null,"attributes":[{"value":"/ Temporary index to and edge of the interaction graph.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":217910,"byte_end":217967,"line_start":13,"line_end":13,"column_start":1,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1740},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":218302,"byte_end":218309,"line_start":22,"line_end":22,"column_start":5,"column_end":12},"name":"Contact","qualname":"::pipeline::narrow_phase::interaction_graph::Interaction::Contact","value":"Interaction::Contact(ContactAlgorithm<N>, ContactManifold<N>)","parent":{"krate":0,"index":1738},"children":[],"decl_id":null,"docs":" A potential contact between two collision objects.","sig":null,"attributes":[{"value":"/ A potential contact between two collision objects.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":218115,"byte_end":218169,"line_start":18,"line_end":18,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":218174,"byte_end":218177,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ Generated only for pairs of collision objects both configured","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":218182,"byte_end":218247,"line_start":20,"line_end":20,"column_start":5,"column_end":70}},{"value":"/ with a `GeometricQueryType::Contact(..)`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":218252,"byte_end":218297,"line_start":21,"line_end":21,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1744},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":218548,"byte_end":218557,"line_start":27,"line_end":27,"column_start":5,"column_end":14},"name":"Proximity","qualname":"::pipeline::narrow_phase::interaction_graph::Interaction::Proximity","value":"Interaction::Proximity(ProximityAlgorithm<N>, Proximity)","parent":{"krate":0,"index":1738},"children":[],"decl_id":null,"docs":" A proximity between two collision objects.","sig":null,"attributes":[{"value":"/ A proximity between two collision objects.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":218356,"byte_end":218402,"line_start":23,"line_end":23,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":218407,"byte_end":218410,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ Generated only for pairs of collision objects with at least one configured","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":218415,"byte_end":218493,"line_start":25,"line_end":25,"column_start":5,"column_end":83}},{"value":"/ with a `GeometricQueryType::Contact(..)`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":218498,"byte_end":218543,"line_start":26,"line_end":26,"column_start":5,"column_end":50}}]},{"kind":"Enum","id":{"krate":0,"index":1738},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":218083,"byte_end":218094,"line_start":17,"line_end":17,"column_start":10,"column_end":21},"name":"Interaction","qualname":"::pipeline::narrow_phase::interaction_graph::Interaction","value":"Interaction::{Contact, Proximity}","parent":null,"children":[{"krate":0,"index":1740},{"krate":0,"index":1744}],"decl_id":null,"docs":" An interaction between two collision objects.\n","sig":null,"attributes":[{"value":"/ An interaction between two collision objects.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":218024,"byte_end":218073,"line_start":16,"line_end":16,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1750},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":218714,"byte_end":218724,"line_start":32,"line_end":32,"column_start":12,"column_end":22},"name":"is_contact","qualname":"<Interaction<N>>::is_contact","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if this interaction is a potential contact interaction.\n","sig":null,"attributes":[{"value":"/ Checks if this interaction is a potential contact interaction.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":218636,"byte_end":218702,"line_start":31,"line_end":31,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1751},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":218934,"byte_end":218946,"line_start":40,"line_end":40,"column_start":12,"column_end":24},"name":"is_proximity","qualname":"<Interaction<N>>::is_proximity","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if this interaction is a potential proximity interaction.\n","sig":null,"attributes":[{"value":"/ Checks if this interaction is a potential proximity interaction.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":218854,"byte_end":218922,"line_start":39,"line_end":39,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":1752},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":219180,"byte_end":219196,"line_start":49,"line_end":49,"column_start":12,"column_end":28},"name":"InteractionGraph","qualname":"::pipeline::narrow_phase::interaction_graph::InteractionGraph","value":"","parent":null,"children":[],"decl_id":null,"docs":" A graph where nodes are collision objects and edges are contact or proximity algorithms.\n","sig":null,"attributes":[{"value":"/ A graph where nodes are collision objects and edges are contact or proximity algorithms.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":219076,"byte_end":219168,"line_start":48,"line_end":48,"column_start":1,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":1760},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":219454,"byte_end":219457,"line_start":55,"line_end":55,"column_start":12,"column_end":15},"name":"new","qualname":"<InteractionGraph<N, Handle>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty collection of collision objects.\n","sig":null,"attributes":[{"value":"/ Creates a new empty collection of collision objects.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":219386,"byte_end":219442,"line_start":54,"line_end":54,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1761},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":219582,"byte_end":219590,"line_start":60,"line_end":60,"column_start":12,"column_end":20},"name":"add_node","qualname":"<InteractionGraph<N, Handle>>::add_node","value":"fn (&mut self, handle: Handle) -> CollisionObjectGraphIndex","parent":null,"children":[],"decl_id":null,"docs":" Adds a handle to this graph.\n","sig":null,"attributes":[{"value":"/ Adds a handle to this graph.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":219538,"byte_end":219570,"line_start":59,"line_end":59,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1762},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":220659,"byte_end":220670,"line_start":79,"line_end":79,"column_start":12,"column_end":23},"name":"remove_node","qualname":"<InteractionGraph<N, Handle>>::remove_node","value":"fn (&mut self, id: CollisionObjectGraphIndex) -> Option<Handle>","parent":null,"children":[],"decl_id":null,"docs":" Removes a handle from this graph and returns a handle that must have its graph index changed to `id`.","sig":null,"attributes":[{"value":"/ Removes a handle from this graph and returns a handle that must have its graph index changed to `id`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":219692,"byte_end":219797,"line_start":64,"line_end":64,"column_start":5,"column_end":110}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":219802,"byte_end":219805,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ When a node is removed, another node of the graph takes it place. This means that the `CollisionObjectGraphIndex`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":219810,"byte_end":219927,"line_start":66,"line_end":66,"column_start":5,"column_end":122}},{"value":"/ of the collision object returned by this method will be equal to `id`. Thus if you maintain","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":219932,"byte_end":220027,"line_start":67,"line_end":67,"column_start":5,"column_end":100}},{"value":"/ a map between `CollisionObjectSlabHandle` and `CollisionObjectGraphIndex`, then you should update this","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":220032,"byte_end":220138,"line_start":68,"line_end":68,"column_start":5,"column_end":111}},{"value":"/ map to associate `id` to the handle returned by this method. For example:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":220143,"byte_end":220220,"line_start":69,"line_end":69,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":220225,"byte_end":220228,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ ```.ignore","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":220233,"byte_end":220247,"line_start":71,"line_end":71,"column_start":5,"column_end":19}},{"value":"/ // Let `id` be the graph index of the collision object we want to remove.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":220252,"byte_end":220329,"line_start":72,"line_end":72,"column_start":5,"column_end":82}},{"value":"/ if let Some(other_handle) = graph.remove_node(id) {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":220334,"byte_end":220389,"line_start":73,"line_end":73,"column_start":5,"column_end":60}},{"value":"/    // The graph index of `other_handle` changed to `id` due to the removal.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":220394,"byte_end":220473,"line_start":74,"line_end":74,"column_start":5,"column_end":84}},{"value":"/    map.insert(other_handle, id) ;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":220478,"byte_end":220515,"line_start":75,"line_end":75,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":220520,"byte_end":220525,"line_start":76,"line_end":76,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":220530,"byte_end":220537,"line_start":77,"line_end":77,"column_start":5,"column_end":12}},{"value":"must_use =\n  \"The graph index of the collision object returned by this method has been changed to `id`.\"","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":220542,"byte_end":220647,"line_start":78,"line_end":78,"column_start":5,"column_end":110}}]},{"kind":"Method","id":{"krate":0,"index":1763},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":221031,"byte_end":221048,"line_start":88,"line_end":88,"column_start":12,"column_end":29},"name":"interaction_pairs","qualname":"<InteractionGraph<N, Handle>>::interaction_pairs","value":"fn (&self, effective_only: bool) -> impl Iterator<Item = (Handle, Handle, &Interaction<N>)>","parent":null,"children":[],"decl_id":null,"docs":" All the interactions pairs on this graph.","sig":null,"attributes":[{"value":"/ All the interactions pairs on this graph.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":220824,"byte_end":220869,"line_start":84,"line_end":84,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":220874,"byte_end":220877,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ Refer to the official [user guide](https://ncollide.org/interaction_handling_and_sensors/#interaction-iterators)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":220882,"byte_end":220998,"line_start":86,"line_end":86,"column_start":5,"column_end":121}},{"value":"/ for details.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":221003,"byte_end":221019,"line_start":87,"line_end":87,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1766},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":221695,"byte_end":221708,"line_start":107,"line_end":107,"column_start":12,"column_end":25},"name":"contact_pairs","qualname":"<InteractionGraph<N, Handle>>::contact_pairs","value":"fn (&self, effective_only: bool) -> impl Iterator<Item =\n              (Handle, Handle, &ContactAlgorithm<N>, &ContactManifold<N>)>","parent":null,"children":[],"decl_id":null,"docs":" All the contact pairs on this graph.","sig":null,"attributes":[{"value":"/ All the contact pairs on this graph.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":221493,"byte_end":221533,"line_start":103,"line_end":103,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":221538,"byte_end":221541,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ Refer to the official [user guide](https://ncollide.org/interaction_handling_and_sensors/#interaction-iterators)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":221546,"byte_end":221662,"line_start":105,"line_end":105,"column_start":5,"column_end":121}},{"value":"/ for details.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":221667,"byte_end":221683,"line_start":106,"line_end":106,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1769},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":222296,"byte_end":222311,"line_start":122,"line_end":122,"column_start":12,"column_end":27},"name":"proximity_pairs","qualname":"<InteractionGraph<N, Handle>>::proximity_pairs","value":"fn (&self, effective_only: bool) -> impl Iterator<Item = (Handle, Handle, &dyn ProximityDetector<N>, Proximity)>","parent":null,"children":[],"decl_id":null,"docs":" All the proximity pairs on this graph.","sig":null,"attributes":[{"value":"/ All the proximity pairs on this graph.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":222092,"byte_end":222134,"line_start":118,"line_end":118,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":222139,"byte_end":222142,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ Refer to the official [user guide](https://ncollide.org/interaction_handling_and_sensors/#interaction-iterators)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":222147,"byte_end":222263,"line_start":120,"line_end":120,"column_start":5,"column_end":121}},{"value":"/ for details.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":222268,"byte_end":222284,"line_start":121,"line_end":121,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1772},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":222936,"byte_end":222952,"line_start":137,"line_end":137,"column_start":12,"column_end":28},"name":"interaction_pair","qualname":"<InteractionGraph<N, Handle>>::interaction_pair","value":"fn (&self, id1: CollisionObjectGraphIndex, id2: CollisionObjectGraphIndex, effective_only: bool) -> Option<(Handle, Handle, &Interaction<N>)>","parent":null,"children":[],"decl_id":null,"docs":" The interaction between the two collision objects identified by their graph index.","sig":null,"attributes":[{"value":"/ The interaction between the two collision objects identified by their graph index.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":222688,"byte_end":222774,"line_start":133,"line_end":133,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":222779,"byte_end":222782,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Refer to the official [user guide](https://ncollide.org/interaction_handling_and_sensors/#interaction-iterators)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":222787,"byte_end":222903,"line_start":135,"line_end":135,"column_start":5,"column_end":121}},{"value":"/ for details.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":222908,"byte_end":222924,"line_start":136,"line_end":136,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1775},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":223840,"byte_end":223860,"line_start":161,"line_end":161,"column_start":12,"column_end":32},"name":"interaction_pair_mut","qualname":"<InteractionGraph<N, Handle>>::interaction_pair_mut","value":"fn (&mut self, id1: CollisionObjectGraphIndex, id2: CollisionObjectGraphIndex) -> Option<(Handle, Handle, &mut Interaction<N>)>","parent":null,"children":[],"decl_id":null,"docs":" The interaction between the two collision objects identified by their graph index.","sig":null,"attributes":[{"value":"/ The interaction between the two collision objects identified by their graph index.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":223592,"byte_end":223678,"line_start":157,"line_end":157,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":223683,"byte_end":223686,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ Refer to the official [user guide](https://ncollide.org/interaction_handling_and_sensors/#interaction-iterators)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":223691,"byte_end":223807,"line_start":159,"line_end":159,"column_start":5,"column_end":121}},{"value":"/ for details.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":223812,"byte_end":223828,"line_start":160,"line_end":160,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1776},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":224538,"byte_end":224550,"line_start":177,"line_end":177,"column_start":12,"column_end":24},"name":"contact_pair","qualname":"<InteractionGraph<N, Handle>>::contact_pair","value":"fn (&self, id1: CollisionObjectGraphIndex, id2: CollisionObjectGraphIndex, effective_only: bool) -> Option<(Handle, Handle, &ContactAlgorithm<N>, &ContactManifold<N>)>","parent":null,"children":[],"decl_id":null,"docs":" The contact pair between the two collision objects identified by their graph index.","sig":null,"attributes":[{"value":"/ The contact pair between the two collision objects identified by their graph index.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":224289,"byte_end":224376,"line_start":173,"line_end":173,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":224381,"byte_end":224384,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ Refer to the official [user guide](https://ncollide.org/interaction_handling_and_sensors/#interaction-iterators)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":224389,"byte_end":224505,"line_start":175,"line_end":175,"column_start":5,"column_end":121}},{"value":"/ for details.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":224510,"byte_end":224526,"line_start":176,"line_end":176,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1778},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":225260,"byte_end":225274,"line_start":194,"line_end":194,"column_start":12,"column_end":26},"name":"proximity_pair","qualname":"<InteractionGraph<N, Handle>>::proximity_pair","value":"fn (&self, id1: CollisionObjectGraphIndex, id2: CollisionObjectGraphIndex, effective_only: bool) -> Option<(Handle, Handle, &dyn ProximityDetector<N>, Proximity)>","parent":null,"children":[],"decl_id":null,"docs":" The proximity pair between the two collision objects identified by their graph index.","sig":null,"attributes":[{"value":"/ The proximity pair between the two collision objects identified by their graph index.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":225009,"byte_end":225098,"line_start":190,"line_end":190,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":225103,"byte_end":225106,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ Refer to the official [user guide](https://ncollide.org/interaction_handling_and_sensors/#interaction-iterators)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":225111,"byte_end":225227,"line_start":192,"line_end":192,"column_start":5,"column_end":121}},{"value":"/ for details.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":225232,"byte_end":225248,"line_start":193,"line_end":193,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1780},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":225977,"byte_end":225995,"line_start":211,"line_end":211,"column_start":12,"column_end":30},"name":"proximity_pair_mut","qualname":"<InteractionGraph<N, Handle>>::proximity_pair_mut","value":"fn (&mut self, id1: CollisionObjectGraphIndex, id2: CollisionObjectGraphIndex) -> Option<(Handle, Handle, &mut dyn ProximityDetector<N>, &mut Proximity)>","parent":null,"children":[],"decl_id":null,"docs":" The proximity pair between the two collision objects identified by their graph index.","sig":null,"attributes":[{"value":"/ The proximity pair between the two collision objects identified by their graph index.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":225726,"byte_end":225815,"line_start":207,"line_end":207,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":225820,"byte_end":225823,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ Refer to the official [user guide](https://ncollide.org/interaction_handling_and_sensors/#interaction-iterators)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":225828,"byte_end":225944,"line_start":209,"line_end":209,"column_start":5,"column_end":121}},{"value":"/ for details.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":225949,"byte_end":225965,"line_start":210,"line_end":210,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1781},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":226678,"byte_end":226695,"line_start":232,"line_end":232,"column_start":12,"column_end":29},"name":"interactions_with","qualname":"<InteractionGraph<N, Handle>>::interactions_with","value":"fn (&self, id: CollisionObjectGraphIndex, effective_only: bool) -> impl Iterator<Item = (Handle, Handle, &Interaction<N>)>","parent":null,"children":[],"decl_id":null,"docs":" All the interaction involving the collision object with graph index `id`.","sig":null,"attributes":[{"value":"/ All the interaction involving the collision object with graph index `id`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":226439,"byte_end":226516,"line_start":228,"line_end":228,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":226521,"byte_end":226524,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ Refer to the official [user guide](https://ncollide.org/interaction_handling_and_sensors/#interaction-iterators)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":226529,"byte_end":226645,"line_start":230,"line_end":230,"column_start":5,"column_end":121}},{"value":"/ for details.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":226650,"byte_end":226666,"line_start":231,"line_end":231,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1784},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":227291,"byte_end":227308,"line_start":250,"line_end":250,"column_start":12,"column_end":29},"name":"index_interaction","qualname":"<InteractionGraph<N, Handle>>::index_interaction","value":"fn (&self, id: TemporaryInteractionIndex) -> Option<(Handle, Handle, &Interaction<N>)>","parent":null,"children":[],"decl_id":null,"docs":" Gets the interaction with the given index.\n","sig":null,"attributes":[{"value":"/ Gets the interaction with the given index.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":227233,"byte_end":227279,"line_start":249,"line_end":249,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1785},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":227896,"byte_end":227917,"line_start":265,"line_end":265,"column_start":12,"column_end":33},"name":"interactions_with_mut","qualname":"<InteractionGraph<N, Handle>>::interactions_with_mut","value":"fn (&mut self, id: CollisionObjectGraphIndex) -> impl Iterator<Item =\n              (Handle, Handle, TemporaryInteractionIndex,\n               &mut Interaction<N>)>","parent":null,"children":[],"decl_id":null,"docs":" All the mutable references to interactions involving the collision object with graph index `id`.","sig":null,"attributes":[{"value":"/ All the mutable references to interactions involving the collision object with graph index `id`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":227634,"byte_end":227734,"line_start":261,"line_end":261,"column_start":5,"column_end":105}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":227739,"byte_end":227742,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ Refer to the official [user guide](https://ncollide.org/interaction_handling_and_sensors/#interaction-iterators)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":227747,"byte_end":227863,"line_start":263,"line_end":263,"column_start":5,"column_end":121}},{"value":"/ for details.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":227868,"byte_end":227884,"line_start":264,"line_end":264,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1787},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":228667,"byte_end":228683,"line_start":290,"line_end":290,"column_start":12,"column_end":28},"name":"proximities_with","qualname":"<InteractionGraph<N, Handle>>::proximities_with","value":"fn (&self, handle: CollisionObjectGraphIndex, effective_only: bool) -> impl Iterator<Item = (Handle, Handle, &dyn ProximityDetector<N>, Proximity)>","parent":null,"children":[],"decl_id":null,"docs":" All the proximity pairs involving the collision object with graph index `id`.","sig":null,"attributes":[{"value":"/ All the proximity pairs involving the collision object with graph index `id`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":228424,"byte_end":228505,"line_start":286,"line_end":286,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":228510,"byte_end":228513,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ Refer to the official [user guide](https://ncollide.org/interaction_handling_and_sensors/#interaction-iterators)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":228518,"byte_end":228634,"line_start":288,"line_end":288,"column_start":5,"column_end":121}},{"value":"/ for details.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":228639,"byte_end":228655,"line_start":289,"line_end":289,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1790},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":229352,"byte_end":229365,"line_start":306,"line_end":306,"column_start":12,"column_end":25},"name":"contacts_with","qualname":"<InteractionGraph<N, Handle>>::contacts_with","value":"fn (&self, handle: CollisionObjectGraphIndex, effective_only: bool) -> impl Iterator<Item =\n              (Handle, Handle, &ContactAlgorithm<N>, &ContactManifold<N>)>","parent":null,"children":[],"decl_id":null,"docs":" All the contact pairs involving the collision object with graph index `id`.","sig":null,"attributes":[{"value":"/ All the contact pairs involving the collision object with graph index `id`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":229111,"byte_end":229190,"line_start":302,"line_end":302,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":229195,"byte_end":229198,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ Refer to the official [user guide](https://ncollide.org/interaction_handling_and_sensors/#interaction-iterators)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":229203,"byte_end":229319,"line_start":304,"line_end":304,"column_start":5,"column_end":121}},{"value":"/ for details.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":229324,"byte_end":229340,"line_start":305,"line_end":305,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1793},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":230080,"byte_end":230114,"line_start":322,"line_end":322,"column_start":12,"column_end":46},"name":"collision_objects_interacting_with","qualname":"<InteractionGraph<N, Handle>>::collision_objects_interacting_with","value":"fn <'a> (&'a self, id: CollisionObjectGraphIndex) -> impl Iterator<Item = Handle> + 'a","parent":null,"children":[],"decl_id":null,"docs":" All the collision object handles of collision objects interacting with the collision object with graph index `id`.","sig":null,"attributes":[{"value":"/ All the collision object handles of collision objects interacting with the collision object with graph index `id`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":229800,"byte_end":229918,"line_start":318,"line_end":318,"column_start":5,"column_end":123}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":229923,"byte_end":229926,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ Refer to the official [user guide](https://ncollide.org/interaction_handling_and_sensors/#interaction-iterators)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":229931,"byte_end":230047,"line_start":320,"line_end":320,"column_start":5,"column_end":121}},{"value":"/ for details.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":230052,"byte_end":230068,"line_start":321,"line_end":321,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1797},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":230889,"byte_end":230922,"line_start":345,"line_end":345,"column_start":12,"column_end":45},"name":"collision_objects_in_contact_with","qualname":"<InteractionGraph<N, Handle>>::collision_objects_in_contact_with","value":"fn <'a> (&'a self, id: CollisionObjectGraphIndex) -> impl Iterator<Item = Handle> + 'a","parent":null,"children":[],"decl_id":null,"docs":" All the collision object handles of collision objects in contact with the collision object with graph index `id`.","sig":null,"attributes":[{"value":"/ All the collision object handles of collision objects in contact with the collision object with graph index `id`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":230610,"byte_end":230727,"line_start":341,"line_end":341,"column_start":5,"column_end":122}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":230732,"byte_end":230735,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ Refer to the official [user guide](https://ncollide.org/interaction_handling_and_sensors/#interaction-iterators)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":230740,"byte_end":230856,"line_start":343,"line_end":343,"column_start":5,"column_end":121}},{"value":"/ for details.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":230861,"byte_end":230877,"line_start":344,"line_end":344,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1801},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":231724,"byte_end":231757,"line_start":368,"line_end":368,"column_start":12,"column_end":45},"name":"collision_objects_in_proximity_of","qualname":"<InteractionGraph<N, Handle>>::collision_objects_in_proximity_of","value":"fn <'a> (&'a self, id: CollisionObjectGraphIndex) -> impl Iterator<Item = Handle> + 'a","parent":null,"children":[],"decl_id":null,"docs":" All the collision object handles of collision objects in proximity of with the collision object with graph index `id`.","sig":null,"attributes":[{"value":"/ All the collision object handles of collision objects in proximity of with the collision object with graph index `id`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":231440,"byte_end":231562,"line_start":364,"line_end":364,"column_start":5,"column_end":127}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":231567,"byte_end":231570,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ Refer to the official [user guide](https://ncollide.org/interaction_handling_and_sensors/#interaction-iterators)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":231575,"byte_end":231691,"line_start":366,"line_end":366,"column_start":5,"column_end":121}},{"value":"/ for details.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":231696,"byte_end":231712,"line_start":367,"line_end":367,"column_start":5,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":1844},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/narrow_phase.rs","byte_start":234980,"byte_end":234991,"line_start":14,"line_end":14,"column_start":12,"column_end":23},"name":"NarrowPhase","qualname":"::pipeline::narrow_phase::narrow_phase::NarrowPhase","value":"NarrowPhase {  }","parent":null,"children":[{"krate":0,"index":1847},{"krate":0,"index":1848},{"krate":0,"index":1849},{"krate":0,"index":1850},{"krate":0,"index":1851}],"decl_id":null,"docs":" Collision detector dispatcher for collision objects.\n","sig":null,"attributes":[{"value":"/ Collision detector dispatcher for collision objects.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/narrow_phase.rs","byte_start":234912,"byte_end":234968,"line_start":13,"line_end":13,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1855},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/narrow_phase.rs","byte_start":235413,"byte_end":235416,"line_start":24,"line_end":24,"column_start":12,"column_end":15},"name":"new","qualname":"<NarrowPhase<N, Handle>>::new","value":"fn (contact_dispatcher: Box<dyn ContactDispatcher<N>>, proximity_dispatcher: Box<dyn ProximityDispatcher<N>>) -> NarrowPhase<N, Handle>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `NarrowPhase`.\n","sig":null,"attributes":[{"value":"/ Creates a new `NarrowPhase`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/narrow_phase.rs","byte_start":235369,"byte_end":235401,"line_start":23,"line_end":23,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1858},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/narrow_phase.rs","byte_start":236573,"byte_end":236587,"line_start":56,"line_end":56,"column_start":12,"column_end":26},"name":"update_contact","qualname":"<NarrowPhase<N, Handle>>::update_contact","value":"fn (&mut self, co1: &impl CollisionObjectRef<N>, co2: &impl CollisionObjectRef<N>, handle1: Handle, handle2: Handle, detector: &mut dyn ContactManifoldGenerator<N>, manifold: &mut ContactManifold<N>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Update the specified contact manifold between two collision objects.\n","sig":null,"attributes":[{"value":"/ Update the specified contact manifold between two collision objects.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/narrow_phase.rs","byte_start":236489,"byte_end":236561,"line_start":55,"line_end":55,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1861},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/narrow_phase.rs","byte_start":238309,"byte_end":238329,"line_start":109,"line_end":109,"column_start":12,"column_end":32},"name":"emit_proximity_event","qualname":"<NarrowPhase<N, Handle>>::emit_proximity_event","value":"fn (&mut self, handle1: Handle, handle2: Handle, prev_prox: Proximity, new_prox: Proximity) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1862},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/narrow_phase.rs","byte_start":238717,"byte_end":238733,"line_start":123,"line_end":123,"column_start":12,"column_end":28},"name":"update_proximity","qualname":"<NarrowPhase<N, Handle>>::update_proximity","value":"fn (&mut self, co1: &impl CollisionObjectRef<N>, co2: &impl CollisionObjectRef<N>, handle1: Handle, handle2: Handle, detector: &mut dyn ProximityDetector<N>, curr_proximity: &mut Proximity) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Update the specified proximity between two collision objects.\n","sig":null,"attributes":[{"value":"/ Update the specified proximity between two collision objects.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/narrow_phase.rs","byte_start":238640,"byte_end":238705,"line_start":122,"line_end":122,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1865},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/narrow_phase.rs","byte_start":239511,"byte_end":239529,"line_start":146,"line_end":146,"column_start":12,"column_end":30},"name":"update_interaction","qualname":"<NarrowPhase<N, Handle>>::update_interaction","value":"fn (&mut self, co1: &impl CollisionObjectRef<N>, co2: &impl CollisionObjectRef<N>, handle1: Handle, handle2: Handle, interaction: &mut Interaction<N>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Update the specified interaction between two collision objects.\n","sig":null,"attributes":[{"value":"/ Update the specified interaction between two collision objects.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/narrow_phase.rs","byte_start":239432,"byte_end":239499,"line_start":145,"line_end":145,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1868},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/narrow_phase.rs","byte_start":240357,"byte_end":240363,"line_start":168,"line_end":168,"column_start":12,"column_end":18},"name":"update","qualname":"<NarrowPhase<N, Handle>>::update","value":"fn <Objects> (&mut self, interactions: &mut InteractionGraph<N, Objects::CollisionObjectHandle>, objects: &Objects) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Updates the narrow-phase by actually computing contact points and proximities between the\n interactions pairs reported by the broad-phase.","sig":null,"attributes":[{"value":"/ Updates the narrow-phase by actually computing contact points and proximities between the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/narrow_phase.rs","byte_start":240105,"byte_end":240198,"line_start":164,"line_end":164,"column_start":5,"column_end":98}},{"value":"/ interactions pairs reported by the broad-phase.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/narrow_phase.rs","byte_start":240203,"byte_end":240254,"line_start":165,"line_end":165,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/narrow_phase.rs","byte_start":240259,"byte_end":240262,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ This will push relevant events to `contact_events` and `proximity_events`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/narrow_phase.rs","byte_start":240267,"byte_end":240345,"line_start":167,"line_end":167,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1870},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/narrow_phase.rs","byte_start":241588,"byte_end":241606,"line_start":200,"line_end":200,"column_start":12,"column_end":30},"name":"handle_interaction","qualname":"<NarrowPhase<N, Handle>>::handle_interaction","value":"fn <Objects> (&mut self, interactions: &mut InteractionGraph<N, Objects::CollisionObjectHandle>, objects: &Objects, handle1: Objects::CollisionObjectHandle, handle2: Objects::CollisionObjectHandle, started: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Handles a pair of collision objects detected as either started or stopped interacting.\n","sig":null,"attributes":[{"value":"/ Handles a pair of collision objects detected as either started or stopped interacting.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/narrow_phase.rs","byte_start":241486,"byte_end":241576,"line_start":199,"line_end":199,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":1872},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/narrow_phase.rs","byte_start":245210,"byte_end":245224,"line_start":281,"line_end":281,"column_start":12,"column_end":26},"name":"contact_events","qualname":"<NarrowPhase<N, Handle>>::contact_events","value":"fn (&self) -> &ContactEvents<Handle>","parent":null,"children":[],"decl_id":null,"docs":" The set of contact events generated by this narrow-phase.\n","sig":null,"attributes":[{"value":"/ The set of contact events generated by this narrow-phase.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/narrow_phase.rs","byte_start":245137,"byte_end":245198,"line_start":280,"line_end":280,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1873},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/narrow_phase.rs","byte_start":245375,"byte_end":245391,"line_start":286,"line_end":286,"column_start":12,"column_end":28},"name":"proximity_events","qualname":"<NarrowPhase<N, Handle>>::proximity_events","value":"fn (&self) -> &ProximityEvents<Handle>","parent":null,"children":[],"decl_id":null,"docs":" The set of proximity events generated by this narrow-phase.\n","sig":null,"attributes":[{"value":"/ The set of proximity events generated by this narrow-phase.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/narrow_phase.rs","byte_start":245300,"byte_end":245363,"line_start":285,"line_end":285,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1874},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/narrow_phase.rs","byte_start":245535,"byte_end":245547,"line_start":291,"line_end":291,"column_start":12,"column_end":24},"name":"clear_events","qualname":"<NarrowPhase<N, Handle>>::clear_events","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clear the events generated by this narrow-phase.\n","sig":null,"attributes":[{"value":"/ Clear the events generated by this narrow-phase.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/narrow_phase.rs","byte_start":245471,"byte_end":245523,"line_start":290,"line_end":290,"column_start":5,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":1875},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"proximity_detector","qualname":"::pipeline::narrow_phase::proximity_detector","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/mod.rs","parent":null,"children":[{"krate":0,"index":1876},{"krate":0,"index":1877},{"krate":0,"index":1878},{"krate":0,"index":1879},{"krate":0,"index":1882},{"krate":0,"index":1886},{"krate":0,"index":1887},{"krate":0,"index":1909},{"krate":0,"index":1951},{"krate":0,"index":1971},{"krate":0,"index":1993},{"krate":0,"index":2007}],"decl_id":null,"docs":" Persistant proximity detection algorithms.\n","sig":null,"attributes":[{"value":"! Persistant proximity detection algorithms.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/mod.rs","byte_start":245646,"byte_end":245692,"line_start":1,"line_end":1,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":1901},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/ball_ball_proximity_detector.rs","byte_start":246758,"byte_end":246783,"line_start":8,"line_end":8,"column_start":12,"column_end":37},"name":"BallBallProximityDetector","qualname":"::pipeline::narrow_phase::proximity_detector::ball_ball_proximity_detector::BallBallProximityDetector","value":"BallBallProximityDetector {  }","parent":null,"children":[],"decl_id":null,"docs":" Proximity detector between two balls.\n","sig":null,"attributes":[{"value":"/ Proximity detector between two balls.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/ball_ball_proximity_detector.rs","byte_start":246705,"byte_end":246746,"line_start":7,"line_end":7,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1905},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/ball_ball_proximity_detector.rs","byte_start":247057,"byte_end":247060,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"new","qualname":"<BallBallProximityDetector>::new","value":"fn () -> BallBallProximityDetector","parent":null,"children":[],"decl_id":null,"docs":" Creates a new persistent collision detector between two balls.\n","sig":null,"attributes":[{"value":"/ Creates a new persistent collision detector between two balls.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/ball_ball_proximity_detector.rs","byte_start":246965,"byte_end":247031,"line_start":17,"line_end":17,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/ball_ball_proximity_detector.rs","byte_start":247036,"byte_end":247045,"line_start":18,"line_end":18,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1931},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/composite_shape_shape_proximity_detector.rs","byte_start":248222,"byte_end":248258,"line_start":11,"line_end":11,"column_start":12,"column_end":48},"name":"CompositeShapeShapeProximityDetector","qualname":"::pipeline::narrow_phase::proximity_detector::composite_shape_shape_proximity_detector::CompositeShapeShapeProximityDetector","value":"CompositeShapeShapeProximityDetector {  }","parent":null,"children":[{"krate":0,"index":1933},{"krate":0,"index":1934},{"krate":0,"index":1935},{"krate":0,"index":1936},{"krate":0,"index":1937}],"decl_id":null,"docs":" Proximity detector between a concave shape and another shape.\n","sig":null,"attributes":[{"value":"/ Proximity detector between a concave shape and another shape.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/composite_shape_shape_proximity_detector.rs","byte_start":248145,"byte_end":248210,"line_start":10,"line_end":10,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1940},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/composite_shape_shape_proximity_detector.rs","byte_start":248593,"byte_end":248596,"line_start":21,"line_end":21,"column_start":12,"column_end":15},"name":"new","qualname":"<CompositeShapeShapeProximityDetector<N>>::new","value":"fn (flip: bool) -> CompositeShapeShapeProximityDetector<N>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new proximity detector between a concave shape and another shape.\n","sig":null,"attributes":[{"value":"/ Creates a new proximity detector between a concave shape and another shape.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/composite_shape_shape_proximity_detector.rs","byte_start":248502,"byte_end":248581,"line_start":20,"line_end":20,"column_start":5,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":1965},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/default_proximity_dispatcher.rs","byte_start":254534,"byte_end":254560,"line_start":10,"line_end":10,"column_start":12,"column_end":38},"name":"DefaultProximityDispatcher","qualname":"::pipeline::narrow_phase::proximity_detector::default_proximity_dispatcher::DefaultProximityDispatcher","value":"DefaultProximityDispatcher {  }","parent":null,"children":[],"decl_id":null,"docs":" Proximity dispatcher for shapes defined by `ncollide_entities`.\n","sig":null,"attributes":[{"value":"/ Proximity dispatcher for shapes defined by `ncollide_entities`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/default_proximity_dispatcher.rs","byte_start":254455,"byte_end":254522,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1967},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/default_proximity_dispatcher.rs","byte_start":254660,"byte_end":254663,"line_start":14,"line_end":14,"column_start":12,"column_end":15},"name":"new","qualname":"<DefaultProximityDispatcher>::new","value":"fn () -> DefaultProximityDispatcher","parent":null,"children":[],"decl_id":null,"docs":" Creates a new basic proximity dispatcher.\n","sig":null,"attributes":[{"value":"/ Creates a new basic proximity dispatcher.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/default_proximity_dispatcher.rs","byte_start":254603,"byte_end":254648,"line_start":13,"line_end":13,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":6983},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/plane_support_map_proximity_detector.rs","byte_start":256235,"byte_end":256267,"line_start":9,"line_end":9,"column_start":12,"column_end":44},"name":"PlaneSupportMapProximityDetector","qualname":"::pipeline::narrow_phase::proximity_detector::plane_support_map_proximity_detector::PlaneSupportMapProximityDetector","value":"PlaneSupportMapProximityDetector {  }","parent":null,"children":[],"decl_id":null,"docs":" Proximity detector between a plane and a shape implementing the `SupportMap` trait.\n","sig":null,"attributes":[{"value":"/ Proximity detector between a plane and a shape implementing the `SupportMap` trait.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/plane_support_map_proximity_detector.rs","byte_start":256119,"byte_end":256206,"line_start":7,"line_end":7,"column_start":1,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1984},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/plane_support_map_proximity_detector.rs","byte_start":256458,"byte_end":256461,"line_start":15,"line_end":15,"column_start":12,"column_end":15},"name":"new","qualname":"<PlaneSupportMapProximityDetector>::new","value":"fn () -> PlaneSupportMapProximityDetector","parent":null,"children":[],"decl_id":null,"docs":" Creates a new persistent proximity detector between a plane and a shape with a support\n mapping function.\n","sig":null,"attributes":[{"value":"/ Creates a new persistent proximity detector between a plane and a shape with a support","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/plane_support_map_proximity_detector.rs","byte_start":256316,"byte_end":256406,"line_start":12,"line_end":12,"column_start":5,"column_end":95}},{"value":"/ mapping function.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/plane_support_map_proximity_detector.rs","byte_start":256411,"byte_end":256432,"line_start":13,"line_end":13,"column_start":5,"column_end":26}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/plane_support_map_proximity_detector.rs","byte_start":256437,"byte_end":256446,"line_start":14,"line_end":14,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":6986},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/plane_support_map_proximity_detector.rs","byte_start":256671,"byte_end":256703,"line_start":22,"line_end":22,"column_start":12,"column_end":44},"name":"SupportMapPlaneProximityDetector","qualname":"::pipeline::narrow_phase::proximity_detector::plane_support_map_proximity_detector::SupportMapPlaneProximityDetector","value":"SupportMapPlaneProximityDetector {  }","parent":null,"children":[{"krate":0,"index":6987}],"decl_id":null,"docs":" Proximity detector between a plane and a shape implementing the `SupportMap` trait.\n","sig":null,"attributes":[{"value":"/ Proximity detector between a plane and a shape implementing the `SupportMap` trait.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/plane_support_map_proximity_detector.rs","byte_start":256555,"byte_end":256642,"line_start":20,"line_end":20,"column_start":1,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1986},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/plane_support_map_proximity_detector.rs","byte_start":256946,"byte_end":256949,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<SupportMapPlaneProximityDetector>::new","value":"fn () -> SupportMapPlaneProximityDetector","parent":null,"children":[],"decl_id":null,"docs":" Creates a new persistent proximity detector between a plane and a shape with a support\n mapping function.\n","sig":null,"attributes":[{"value":"/ Creates a new persistent proximity detector between a plane and a shape with a support","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/plane_support_map_proximity_detector.rs","byte_start":256804,"byte_end":256894,"line_start":27,"line_end":27,"column_start":5,"column_end":95}},{"value":"/ mapping function.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/plane_support_map_proximity_detector.rs","byte_start":256899,"byte_end":256920,"line_start":28,"line_end":28,"column_start":5,"column_end":26}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/plane_support_map_proximity_detector.rs","byte_start":256925,"byte_end":256934,"line_start":29,"line_end":29,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":1993},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/proximity_detector.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"proximity_detector","qualname":"::pipeline::narrow_phase::proximity_detector::proximity_detector","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/proximity_detector.rs","parent":null,"children":[{"krate":0,"index":1994},{"krate":0,"index":1995},{"krate":0,"index":1996},{"krate":0,"index":1997},{"krate":0,"index":1998},{"krate":0,"index":1999},{"krate":0,"index":2002},{"krate":0,"index":2004}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1999},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/proximity_detector.rs","byte_start":258218,"byte_end":258235,"line_start":8,"line_end":8,"column_start":11,"column_end":28},"name":"ProximityDetector","qualname":"::pipeline::narrow_phase::proximity_detector::proximity_detector::ProximityDetector","value":"ProximityDetector<N: RealField>: Any + Send + Sync","parent":null,"children":[{"krate":0,"index":2001}],"decl_id":null,"docs":" Trait implemented by algorithms that determine if two objects are in close proximity.\n","sig":null,"attributes":[{"value":"/ Trait implemented by algorithms that determine if two objects are in close proximity.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/proximity_detector.rs","byte_start":258118,"byte_end":258207,"line_start":7,"line_end":7,"column_start":1,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":2001},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/proximity_detector.rs","byte_start":258451,"byte_end":258457,"line_start":11,"line_end":11,"column_start":8,"column_end":14},"name":"update","qualname":"::pipeline::narrow_phase::proximity_detector::proximity_detector::ProximityDetector::update","value":"fn (&mut self, dispatcher: &dyn ProximityDispatcher<N>, ma: &Isometry<N>, a: &dyn Shape<N>, mb: &Isometry<N>, b: &dyn Shape<N>, margin: N) -> Option<Proximity>","parent":{"krate":0,"index":1999},"children":[],"decl_id":null,"docs":" Runs the proximity detection on two objects. It is assumed that the same proximity detector\n (the same instance) is always used with the same pair of object.\n","sig":null,"attributes":[{"value":"/ Runs the proximity detection on two objects. It is assumed that the same proximity detector","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/proximity_detector.rs","byte_start":258275,"byte_end":258370,"line_start":9,"line_end":9,"column_start":5,"column_end":100}},{"value":"/ (the same instance) is always used with the same pair of object.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/proximity_detector.rs","byte_start":258375,"byte_end":258443,"line_start":10,"line_end":10,"column_start":5,"column_end":73}}]},{"kind":"Type","id":{"krate":0,"index":2002},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/proximity_detector.rs","byte_start":258690,"byte_end":258708,"line_start":22,"line_end":22,"column_start":10,"column_end":28},"name":"ProximityAlgorithm","qualname":"::pipeline::narrow_phase::proximity_detector::proximity_detector::ProximityAlgorithm","value":"Box<dyn ProximityDetector<N>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2004},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/proximity_detector.rs","byte_start":258756,"byte_end":258775,"line_start":24,"line_end":24,"column_start":11,"column_end":30},"name":"ProximityDispatcher","qualname":"::pipeline::narrow_phase::proximity_detector::proximity_detector::ProximityDispatcher","value":"ProximityDispatcher<N>: Any + Send + Sync","parent":null,"children":[{"krate":0,"index":2006}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2006},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/proximity_detector.rs","byte_start":258889,"byte_end":258912,"line_start":26,"line_end":26,"column_start":8,"column_end":31},"name":"get_proximity_algorithm","qualname":"::pipeline::narrow_phase::proximity_detector::proximity_detector::ProximityDispatcher::get_proximity_algorithm","value":"fn (&self, a: &dyn Shape<N>, b: &dyn Shape<N>) -> Option<ProximityAlgorithm<N>>","parent":{"krate":0,"index":2004},"children":[],"decl_id":null,"docs":" Allocate a collision algorithm corresponding to the given pair of shapes.\n","sig":null,"attributes":[{"value":"/ Allocate a collision algorithm corresponding to the given pair of shapes.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/proximity_detector.rs","byte_start":258804,"byte_end":258881,"line_start":25,"line_end":25,"column_start":5,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":6990},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/support_map_support_map_proximity_detector.rs","byte_start":259432,"byte_end":259469,"line_start":12,"line_end":12,"column_start":12,"column_end":49},"name":"SupportMapSupportMapProximityDetector","qualname":"::pipeline::narrow_phase::proximity_detector::support_map_support_map_proximity_detector::SupportMapSupportMapProximityDetector","value":"SupportMapSupportMapProximityDetector {  }","parent":null,"children":[{"krate":0,"index":6992},{"krate":0,"index":6993}],"decl_id":null,"docs":" Persistent proximity detector between two shapes having a support mapping function.","sig":null,"attributes":[{"value":"/ Persistent proximity detector between two shapes having a support mapping function.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/support_map_support_map_proximity_detector.rs","byte_start":259274,"byte_end":259361,"line_start":8,"line_end":8,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/support_map_support_map_proximity_detector.rs","byte_start":259362,"byte_end":259365,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ It is based on the GJK algorithm.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/support_map_support_map_proximity_detector.rs","byte_start":259366,"byte_end":259403,"line_start":10,"line_end":10,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2024},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/support_map_support_map_proximity_detector.rs","byte_start":259806,"byte_end":259809,"line_start":22,"line_end":22,"column_start":12,"column_end":15},"name":"new","qualname":"<SupportMapSupportMapProximityDetector<N>>::new","value":"fn () -> SupportMapSupportMapProximityDetector<N>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new persistant proximity detector between two shapes with support mapping\n functions.","sig":null,"attributes":[{"value":"/ Creates a new persistant proximity detector between two shapes with support mapping","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/support_map_support_map_proximity_detector.rs","byte_start":259626,"byte_end":259713,"line_start":18,"line_end":18,"column_start":5,"column_end":92}},{"value":"/ functions.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/support_map_support_map_proximity_detector.rs","byte_start":259718,"byte_end":259732,"line_start":19,"line_end":19,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/support_map_support_map_proximity_detector.rs","byte_start":259737,"byte_end":259740,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ It is initialized with a pre-created simplex.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/support_map_support_map_proximity_detector.rs","byte_start":259745,"byte_end":259794,"line_start":21,"line_end":21,"column_start":5,"column_end":54}}]},{"kind":"Mod","id":{"krate":0,"index":2028},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"object","qualname":"::pipeline::object","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/mod.rs","parent":null,"children":[{"krate":0,"index":2029},{"krate":0,"index":2032},{"krate":0,"index":2037},{"krate":0,"index":2042},{"krate":0,"index":2043},{"krate":0,"index":2101},{"krate":0,"index":2181},{"krate":0,"index":2265}],"decl_id":null,"docs":" Definition of collision objects and some of their properties.\n","sig":null,"attributes":[{"value":"! Definition of collision objects and some of their properties.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/mod.rs","byte_start":260809,"byte_end":260874,"line_start":1,"line_end":1,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":6997},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":263210,"byte_end":263225,"line_start":44,"line_end":44,"column_start":12,"column_end":27},"name":"CollisionGroups","qualname":"::pipeline::object::collision_groups::CollisionGroups","value":"CollisionGroups {  }","parent":null,"children":[{"krate":0,"index":6998},{"krate":0,"index":6999},{"krate":0,"index":7000}],"decl_id":null,"docs":" Groups of collision used to filter which object interact with which other one.","sig":null,"attributes":[{"value":"/ Groups of collision used to filter which object interact with which other one.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":261600,"byte_end":261682,"line_start":9,"line_end":9,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":261683,"byte_end":261686,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ There are at most 30 groups indexed from 0 to 29 (included). This identifies collidable","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":261687,"byte_end":261778,"line_start":11,"line_end":11,"column_start":1,"column_end":92}},{"value":"/ entities by combining three attributes:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":261779,"byte_end":261822,"line_start":12,"line_end":12,"column_start":1,"column_end":44}},{"value":"/    * A set of group this structure is member of.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":261823,"byte_end":261875,"line_start":13,"line_end":13,"column_start":1,"column_end":53}},{"value":"/    * A collision group whitelist.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":261876,"byte_end":261913,"line_start":14,"line_end":14,"column_start":1,"column_end":38}},{"value":"/    * A collision group blacklist.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":261914,"byte_end":261951,"line_start":15,"line_end":15,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":261952,"byte_end":261955,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ For two entities to interact, they must be member of at least one group part of each-other's","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":261956,"byte_end":262052,"line_start":17,"line_end":17,"column_start":1,"column_end":97}},{"value":"/ whitelists, and must not be part of any blacklisted group. The blacklist always has priority on","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":262053,"byte_end":262152,"line_start":18,"line_end":18,"column_start":1,"column_end":100}},{"value":"/ the whitelist.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":262153,"byte_end":262171,"line_start":19,"line_end":19,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":262172,"byte_end":262175,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ### Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":262176,"byte_end":262191,"line_start":21,"line_end":21,"column_start":1,"column_end":16}},{"value":"/ For example if the object A is such that:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":262192,"byte_end":262237,"line_start":22,"line_end":22,"column_start":1,"column_end":46}},{"value":"/    * It is part of the groups 1, 3, and 6.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":262238,"byte_end":262284,"line_start":23,"line_end":23,"column_start":1,"column_end":47}},{"value":"/    * It whitelists the groups 6 and 7.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":262285,"byte_end":262327,"line_start":24,"line_end":24,"column_start":1,"column_end":43}},{"value":"/    * It blacklists the group 1.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":262328,"byte_end":262363,"line_start":25,"line_end":25,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":262364,"byte_end":262367,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Let there be an object B such that:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":262368,"byte_end":262407,"line_start":27,"line_end":27,"column_start":1,"column_end":40}},{"value":"/    * It is part of the groups 1, 3, and 7.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":262408,"byte_end":262454,"line_start":28,"line_end":28,"column_start":1,"column_end":47}},{"value":"/    * It whitelists the groups 3 and 7.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":262455,"byte_end":262497,"line_start":29,"line_end":29,"column_start":1,"column_end":43}},{"value":"/    * It does not blacklist anything.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":262498,"byte_end":262538,"line_start":30,"line_end":30,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":262539,"byte_end":262542,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ and an object C such that:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":262543,"byte_end":262573,"line_start":32,"line_end":32,"column_start":1,"column_end":31}},{"value":"/    * It is part of the groups 6 and 9.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":262574,"byte_end":262616,"line_start":33,"line_end":33,"column_start":1,"column_end":43}},{"value":"/    * It whitelists the groups 3 and 7.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":262617,"byte_end":262659,"line_start":34,"line_end":34,"column_start":1,"column_end":43}},{"value":"/    * It does not blacklist anything.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":262660,"byte_end":262700,"line_start":35,"line_end":35,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":262701,"byte_end":262704,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Then we have:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":262705,"byte_end":262722,"line_start":37,"line_end":37,"column_start":1,"column_end":18}},{"value":"/    * A and C can interact because A whitelists the group 6 (which C is part of), and,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":262723,"byte_end":262812,"line_start":38,"line_end":38,"column_start":1,"column_end":90}},{"value":"/    reciprocally, C whitelists the group 3 (which A is part of).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":262813,"byte_end":262880,"line_start":39,"line_end":39,"column_start":1,"column_end":68}},{"value":"/    * A and B will **not** interact because B is part of the group 1 which is blacklisted by A.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":262881,"byte_end":262979,"line_start":40,"line_end":40,"column_start":1,"column_end":99}},{"value":"/    * Finally, B and C will **not** interact either because, even if C whitelists the group 3","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":262980,"byte_end":263076,"line_start":41,"line_end":41,"column_start":1,"column_end":97}},{"value":"/    (which B is part of), B does not whitelists the groups 6 nor 9 (which B is part of).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":263077,"byte_end":263168,"line_start":42,"line_end":42,"column_start":1,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":2053},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":263455,"byte_end":263458,"line_start":54,"line_end":54,"column_start":12,"column_end":15},"name":"new","qualname":"<CollisionGroups>::new","value":"fn () -> CollisionGroups","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `CollisionGroups` that enables interactions with everything except\n self-interaction.\n","sig":null,"attributes":[{"value":"/ Creates a new `CollisionGroups` that enables interactions with everything except","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":263319,"byte_end":263403,"line_start":51,"line_end":51,"column_start":5,"column_end":89}},{"value":"/ self-interaction.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":263408,"byte_end":263429,"line_start":52,"line_end":52,"column_start":5,"column_end":26}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":263434,"byte_end":263443,"line_start":53,"line_end":53,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2054},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":263738,"byte_end":263743,"line_start":64,"line_end":64,"column_start":12,"column_end":17},"name":"empty","qualname":"<CollisionGroups>::empty","value":"fn () -> CollisionGroups","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `CollisionGroups` that disables interactions with everything.\n","sig":null,"attributes":[{"value":"/ Creates a new `CollisionGroups` that disables interactions with everything.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":263633,"byte_end":263712,"line_start":62,"line_end":62,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":263717,"byte_end":263726,"line_start":63,"line_end":63,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2055},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":264330,"byte_end":264345,"line_start":84,"line_end":84,"column_start":12,"column_end":27},"name":"with_membership","qualname":"<CollisionGroups>::with_membership","value":"fn (mut self, groups: &[usize]) -> CollisionGroups","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this object, updated with a new set of membership groups.","sig":null,"attributes":[{"value":"/ Returns a copy of this object, updated with a new set of membership groups.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":263914,"byte_end":263993,"line_start":72,"line_end":72,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":263998,"byte_end":264001,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":264006,"byte_end":264020,"line_start":74,"line_end":74,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":264025,"byte_end":264028,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ ```.ignore","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":264033,"byte_end":264047,"line_start":76,"line_end":76,"column_start":5,"column_end":19}},{"value":"/ const GROUP_A: usize = 0;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":264052,"byte_end":264081,"line_start":77,"line_end":77,"column_start":5,"column_end":34}},{"value":"/ const GROUP_B: usize = 29;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":264086,"byte_end":264116,"line_start":78,"line_end":78,"column_start":5,"column_end":35}},{"value":"/ let groups = CollisionGroups::new().with_membership(&[GROUP_A, GROUP_B]);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":264121,"byte_end":264198,"line_start":79,"line_end":79,"column_start":5,"column_end":82}},{"value":"/ assert!(groups.is_member_of(GROUP_A));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":264203,"byte_end":264245,"line_start":80,"line_end":80,"column_start":5,"column_end":47}},{"value":"/ assert!(groups.is_member_of(GROUP_B));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":264250,"byte_end":264292,"line_start":81,"line_end":81,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":264297,"byte_end":264304,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":264309,"byte_end":264318,"line_start":83,"line_end":83,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2056},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":264911,"byte_end":264925,"line_start":101,"line_end":101,"column_start":12,"column_end":26},"name":"with_whitelist","qualname":"<CollisionGroups>::with_whitelist","value":"fn (mut self, groups: &[usize]) -> CollisionGroups","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this object, updated with a new set of whitelisted groups.","sig":null,"attributes":[{"value":"/ Returns a copy of this object, updated with a new set of whitelisted groups.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":264484,"byte_end":264564,"line_start":89,"line_end":89,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":264569,"byte_end":264572,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":264577,"byte_end":264591,"line_start":91,"line_end":91,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":264596,"byte_end":264599,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ ```.ignore","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":264604,"byte_end":264618,"line_start":93,"line_end":93,"column_start":5,"column_end":19}},{"value":"/ const GROUP_A: usize = 0;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":264623,"byte_end":264652,"line_start":94,"line_end":94,"column_start":5,"column_end":34}},{"value":"/ const GROUP_B: usize = 29;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":264657,"byte_end":264687,"line_start":95,"line_end":95,"column_start":5,"column_end":35}},{"value":"/ let group_a = CollisionGroups::new().with_whitelist(&[GROUP_B]);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":264692,"byte_end":264760,"line_start":96,"line_end":96,"column_start":5,"column_end":73}},{"value":"/ assert!(!group_a.is_group_whitelisted(GROUP_A));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":264765,"byte_end":264817,"line_start":97,"line_end":97,"column_start":5,"column_end":57}},{"value":"/ assert!(group_a.is_group_whitelisted(GROUP_B));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":264822,"byte_end":264873,"line_start":98,"line_end":98,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":264878,"byte_end":264885,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":264890,"byte_end":264899,"line_start":100,"line_end":100,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2057},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":265490,"byte_end":265504,"line_start":118,"line_end":118,"column_start":12,"column_end":26},"name":"with_blacklist","qualname":"<CollisionGroups>::with_blacklist","value":"fn (mut self, groups: &[usize]) -> CollisionGroups","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this object, updated with a new set of blacklisted groups.","sig":null,"attributes":[{"value":"/ Returns a copy of this object, updated with a new set of blacklisted groups.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":265063,"byte_end":265143,"line_start":106,"line_end":106,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":265148,"byte_end":265151,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":265156,"byte_end":265170,"line_start":108,"line_end":108,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":265175,"byte_end":265178,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ ```.ignore","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":265183,"byte_end":265197,"line_start":110,"line_end":110,"column_start":5,"column_end":19}},{"value":"/ const GROUP_A: usize = 0;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":265202,"byte_end":265231,"line_start":111,"line_end":111,"column_start":5,"column_end":34}},{"value":"/ const GROUP_B: usize = 29;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":265236,"byte_end":265266,"line_start":112,"line_end":112,"column_start":5,"column_end":35}},{"value":"/ let group_a = CollisionGroups::new().with_blacklist(&[GROUP_B]);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":265271,"byte_end":265339,"line_start":113,"line_end":113,"column_start":5,"column_end":73}},{"value":"/ assert!(!group_a.is_group_blacklisted(GROUP_A));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":265344,"byte_end":265396,"line_start":114,"line_end":114,"column_start":5,"column_end":57}},{"value":"/ assert!(group_a.is_group_blacklisted(GROUP_B));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":265401,"byte_end":265452,"line_start":115,"line_end":115,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":265457,"byte_end":265464,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":265469,"byte_end":265478,"line_start":117,"line_end":117,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2058},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":265709,"byte_end":265721,"line_start":125,"line_end":125,"column_start":12,"column_end":24},"name":"max_group_id","qualname":"<CollisionGroups>::max_group_id","value":"fn () -> usize","parent":null,"children":[],"decl_id":null,"docs":" The maximum allowed group identifier.\n","sig":null,"attributes":[{"value":"/ The maximum allowed group identifier.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":265642,"byte_end":265683,"line_start":123,"line_end":123,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":265688,"byte_end":265697,"line_start":124,"line_end":124,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2063},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":266914,"byte_end":266936,"line_start":173,"line_end":173,"column_start":12,"column_end":34},"name":"add_membership_by_mask","qualname":"<CollisionGroups>::add_membership_by_mask","value":"fn (mut self, group_mask: u32) -> CollisionGroups","parent":null,"children":[],"decl_id":null,"docs":" adds this entity to the given group by a mask of bits where each bit index represent a group\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":266792,"byte_end":266801,"line_start":171,"line_end":171,"column_start":5,"column_end":14}},{"value":"/ adds this entity to the given group by a mask of bits where each bit index represent a group","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":266806,"byte_end":266902,"line_start":172,"line_end":172,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":2064},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":267207,"byte_end":267232,"line_start":180,"line_end":180,"column_start":12,"column_end":37},"name":"remove_membership_by_mask","qualname":"<CollisionGroups>::remove_membership_by_mask","value":"fn (mut self, group_mask: u32) -> CollisionGroups","parent":null,"children":[],"decl_id":null,"docs":" removes this entity from the given group by a mask of bits where each bit index represent a group\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":267080,"byte_end":267089,"line_start":178,"line_end":178,"column_start":5,"column_end":14}},{"value":"/ removes this entity from the given group by a mask of bits where each bit index represent a group","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":267094,"byte_end":267195,"line_start":179,"line_end":179,"column_start":5,"column_end":106}}]},{"kind":"Method","id":{"krate":0,"index":2065},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":267491,"byte_end":267514,"line_start":187,"line_end":187,"column_start":12,"column_end":35},"name":"with_membership_by_mask","qualname":"<CollisionGroups>::with_membership_by_mask","value":"fn (mut self, group_mask: u32) -> CollisionGroups","parent":null,"children":[],"decl_id":null,"docs":" Replaces the membership with a mask of bits where each bit index represent a group\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":267379,"byte_end":267388,"line_start":185,"line_end":185,"column_start":5,"column_end":14}},{"value":"/ Replaces the membership with a mask of bits where each bit index represent a group","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":267393,"byte_end":267479,"line_start":186,"line_end":186,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":2066},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":267895,"byte_end":267916,"line_start":199,"line_end":199,"column_start":12,"column_end":33},"name":"add_whitelist_by_mask","qualname":"<CollisionGroups>::add_whitelist_by_mask","value":"fn (mut self, group_mask: u32) -> CollisionGroups","parent":null,"children":[],"decl_id":null,"docs":" adds this entity to this entity whitelist by a mask of bits where each bit index represent a group\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":267767,"byte_end":267776,"line_start":197,"line_end":197,"column_start":5,"column_end":14}},{"value":"/ adds this entity to this entity whitelist by a mask of bits where each bit index represent a group","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":267781,"byte_end":267883,"line_start":198,"line_end":198,"column_start":5,"column_end":107}}]},{"kind":"Method","id":{"krate":0,"index":2067},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":268190,"byte_end":268214,"line_start":206,"line_end":206,"column_start":12,"column_end":36},"name":"remove_whitelist_by_mask","qualname":"<CollisionGroups>::remove_whitelist_by_mask","value":"fn (mut self, group_mask: u32) -> CollisionGroups","parent":null,"children":[],"decl_id":null,"docs":" remove this entity from this entity whitelist by a mask of bits where each bit index represent a group\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":268058,"byte_end":268067,"line_start":204,"line_end":204,"column_start":5,"column_end":14}},{"value":"/ remove this entity from this entity whitelist by a mask of bits where each bit index represent a group","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":268072,"byte_end":268178,"line_start":205,"line_end":205,"column_start":5,"column_end":111}}]},{"kind":"Method","id":{"krate":0,"index":2068},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":268470,"byte_end":268492,"line_start":213,"line_end":213,"column_start":12,"column_end":34},"name":"with_whitelist_by_mask","qualname":"<CollisionGroups>::with_whitelist_by_mask","value":"fn (mut self, group_mask: u32) -> CollisionGroups","parent":null,"children":[],"decl_id":null,"docs":" Replaces the whitelist with a mask of bits where each bit index represent a group\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":268359,"byte_end":268368,"line_start":211,"line_end":211,"column_start":5,"column_end":14}},{"value":"/ Replaces the whitelist with a mask of bits where each bit index represent a group","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":268373,"byte_end":268458,"line_start":212,"line_end":212,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":2069},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":268872,"byte_end":268893,"line_start":225,"line_end":225,"column_start":12,"column_end":33},"name":"add_blacklist_by_mask","qualname":"<CollisionGroups>::add_blacklist_by_mask","value":"fn (mut self, group_mask: u32) -> CollisionGroups","parent":null,"children":[],"decl_id":null,"docs":" adds this entity to this entity blacklist by a mask of bits where each bit index represent a group\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":268744,"byte_end":268753,"line_start":223,"line_end":223,"column_start":5,"column_end":14}},{"value":"/ adds this entity to this entity blacklist by a mask of bits where each bit index represent a group","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":268758,"byte_end":268860,"line_start":224,"line_end":224,"column_start":5,"column_end":107}}]},{"kind":"Method","id":{"krate":0,"index":2070},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":269167,"byte_end":269191,"line_start":232,"line_end":232,"column_start":12,"column_end":36},"name":"remove_blacklist_by_mask","qualname":"<CollisionGroups>::remove_blacklist_by_mask","value":"fn (mut self, group_mask: u32) -> CollisionGroups","parent":null,"children":[],"decl_id":null,"docs":" remove this entity from this entity blacklist by a mask of bits where each bit index represent a group\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":269035,"byte_end":269044,"line_start":230,"line_end":230,"column_start":5,"column_end":14}},{"value":"/ remove this entity from this entity blacklist by a mask of bits where each bit index represent a group","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":269049,"byte_end":269155,"line_start":231,"line_end":231,"column_start":5,"column_end":111}}]},{"kind":"Method","id":{"krate":0,"index":2071},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":269447,"byte_end":269469,"line_start":239,"line_end":239,"column_start":12,"column_end":34},"name":"with_blacklist_by_mask","qualname":"<CollisionGroups>::with_blacklist_by_mask","value":"fn (mut self, group_mask: u32) -> CollisionGroups","parent":null,"children":[],"decl_id":null,"docs":" Replaces the blacklist with a mask of bits where each bit index represent a group\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":269336,"byte_end":269345,"line_start":237,"line_end":237,"column_start":5,"column_end":14}},{"value":"/ Replaces the blacklist with a mask of bits where each bit index represent a group","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":269350,"byte_end":269435,"line_start":238,"line_end":238,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":2072},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":269800,"byte_end":269817,"line_start":251,"line_end":251,"column_start":12,"column_end":29},"name":"modify_membership","qualname":"<CollisionGroups>::modify_membership","value":"fn (&mut self, group_id: usize, add: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds or removes this entity from the given group.\n","sig":null,"attributes":[{"value":"/ Adds or removes this entity from the given group.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":269721,"byte_end":269774,"line_start":249,"line_end":249,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":269779,"byte_end":269788,"line_start":250,"line_end":250,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2073},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":270034,"byte_end":270050,"line_start":257,"line_end":257,"column_start":12,"column_end":28},"name":"modify_whitelist","qualname":"<CollisionGroups>::modify_whitelist","value":"fn (&mut self, group_id: usize, add: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds or removes the given group from this entity whitelist.\n","sig":null,"attributes":[{"value":"/ Adds or removes the given group from this entity whitelist.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":269945,"byte_end":270008,"line_start":255,"line_end":255,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":270013,"byte_end":270022,"line_start":256,"line_end":256,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2074},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":270256,"byte_end":270272,"line_start":263,"line_end":263,"column_start":12,"column_end":28},"name":"modify_blacklist","qualname":"<CollisionGroups>::modify_blacklist","value":"fn (&mut self, group_id: usize, add: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds or removes this entity from the given group.\n","sig":null,"attributes":[{"value":"/ Adds or removes this entity from the given group.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":270177,"byte_end":270230,"line_start":261,"line_end":261,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":270235,"byte_end":270244,"line_start":262,"line_end":262,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2075},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":270478,"byte_end":270492,"line_start":269,"line_end":269,"column_start":12,"column_end":26},"name":"set_membership","qualname":"<CollisionGroups>::set_membership","value":"fn (&mut self, groups: &[usize]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Make this object member of the given groups only.\n","sig":null,"attributes":[{"value":"/ Make this object member of the given groups only.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":270399,"byte_end":270452,"line_start":267,"line_end":267,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":270457,"byte_end":270466,"line_start":268,"line_end":268,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2076},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":270695,"byte_end":270708,"line_start":275,"line_end":275,"column_start":12,"column_end":25},"name":"set_whitelist","qualname":"<CollisionGroups>::set_whitelist","value":"fn (&mut self, groups: &[usize]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Whitelists the given groups only (others will be un-whitelisted).\n","sig":null,"attributes":[{"value":"/ Whitelists the given groups only (others will be un-whitelisted).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":270600,"byte_end":270669,"line_start":273,"line_end":273,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":270674,"byte_end":270683,"line_start":274,"line_end":274,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2077},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":270910,"byte_end":270923,"line_start":281,"line_end":281,"column_start":12,"column_end":25},"name":"set_blacklist","qualname":"<CollisionGroups>::set_blacklist","value":"fn (&mut self, groups: &[usize]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Blacklists the given groups only (others will be un-blacklisted).\n","sig":null,"attributes":[{"value":"/ Blacklists the given groups only (others will be un-blacklisted).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":270815,"byte_end":270884,"line_start":279,"line_end":279,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":270889,"byte_end":270898,"line_start":280,"line_end":280,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2078},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":271110,"byte_end":271125,"line_start":287,"line_end":287,"column_start":12,"column_end":27},"name":"copy_membership","qualname":"<CollisionGroups>::copy_membership","value":"fn (&mut self, other: &CollisionGroups) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Copies the membership of another collision groups.\n","sig":null,"attributes":[{"value":"/ Copies the membership of another collision groups.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":271030,"byte_end":271084,"line_start":285,"line_end":285,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":271089,"byte_end":271098,"line_start":286,"line_end":286,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2079},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":271297,"byte_end":271311,"line_start":293,"line_end":293,"column_start":12,"column_end":26},"name":"copy_whitelist","qualname":"<CollisionGroups>::copy_whitelist","value":"fn (&mut self, other: &CollisionGroups) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Copies the whitelist of another collision groups.\n","sig":null,"attributes":[{"value":"/ Copies the whitelist of another collision groups.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":271218,"byte_end":271271,"line_start":291,"line_end":291,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":271276,"byte_end":271285,"line_start":292,"line_end":292,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2080},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":271481,"byte_end":271495,"line_start":299,"line_end":299,"column_start":12,"column_end":26},"name":"copy_blacklist","qualname":"<CollisionGroups>::copy_blacklist","value":"fn (&mut self, other: &CollisionGroups) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Copies the blacklist of another collision groups.\n","sig":null,"attributes":[{"value":"/ Copies the blacklist of another collision groups.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":271402,"byte_end":271455,"line_start":297,"line_end":297,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":271460,"byte_end":271469,"line_start":298,"line_end":298,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2081},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":271658,"byte_end":271681,"line_start":305,"line_end":305,"column_start":12,"column_end":35},"name":"enable_self_interaction","qualname":"<CollisionGroups>::enable_self_interaction","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Allows the object to interact with itself.\n","sig":null,"attributes":[{"value":"/ Allows the object to interact with itself.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":271586,"byte_end":271632,"line_start":303,"line_end":303,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":271637,"byte_end":271646,"line_start":304,"line_end":304,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2082},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":271843,"byte_end":271867,"line_start":311,"line_end":311,"column_start":12,"column_end":36},"name":"disable_self_interaction","qualname":"<CollisionGroups>::disable_self_interaction","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Prevents the object from interacting with itself.\n","sig":null,"attributes":[{"value":"/ Prevents the object from interacting with itself.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":271764,"byte_end":271817,"line_start":309,"line_end":309,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":271822,"byte_end":271831,"line_start":310,"line_end":310,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2084},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":272276,"byte_end":272288,"line_start":326,"line_end":326,"column_start":12,"column_end":24},"name":"is_member_of","qualname":"<CollisionGroups>::is_member_of","value":"fn (&self, group_id: usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if this entity is part of the given group.\n","sig":null,"attributes":[{"value":"/ Tests if this entity is part of the given group.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":272198,"byte_end":272250,"line_start":324,"line_end":324,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":272255,"byte_end":272264,"line_start":325,"line_end":325,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2085},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":272471,"byte_end":272491,"line_start":332,"line_end":332,"column_start":12,"column_end":32},"name":"is_group_whitelisted","qualname":"<CollisionGroups>::is_group_whitelisted","value":"fn (&self, group_id: usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if the given group is whitelisted.\n","sig":null,"attributes":[{"value":"/ Tests if the given group is whitelisted.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":272401,"byte_end":272445,"line_start":330,"line_end":330,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":272450,"byte_end":272459,"line_start":331,"line_end":331,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2086},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":272673,"byte_end":272693,"line_start":338,"line_end":338,"column_start":12,"column_end":32},"name":"is_group_blacklisted","qualname":"<CollisionGroups>::is_group_blacklisted","value":"fn (&self, group_id: usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if the given group is blacklisted.\n","sig":null,"attributes":[{"value":"/ Tests if the given group is blacklisted.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":272603,"byte_end":272647,"line_start":336,"line_end":336,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":272652,"byte_end":272661,"line_start":337,"line_end":337,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2087},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":272981,"byte_end":272998,"line_start":346,"line_end":346,"column_start":12,"column_end":29},"name":"can_interact_with","qualname":"<CollisionGroups>::can_interact_with","value":"fn (&self, group_id: usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether interactions with a given group is possible.","sig":null,"attributes":[{"value":"/ Tests whether interactions with a given group is possible.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":272805,"byte_end":272867,"line_start":342,"line_end":342,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":272872,"byte_end":272875,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ Collision is possible if `group_id` is whitelisted but not blacklisted.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":272880,"byte_end":272955,"line_start":344,"line_end":344,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":272960,"byte_end":272969,"line_start":345,"line_end":345,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2088},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":273283,"byte_end":273307,"line_start":353,"line_end":353,"column_start":12,"column_end":36},"name":"can_interact_with_groups","qualname":"<CollisionGroups>::can_interact_with_groups","value":"fn (&self, other: &CollisionGroups) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether two collision groups have at least one group in common.\n","sig":null,"attributes":[{"value":"/ Tests whether two collision groups have at least one group in common.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":273184,"byte_end":273257,"line_start":351,"line_end":351,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":273262,"byte_end":273271,"line_start":352,"line_end":352,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2089},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":273705,"byte_end":273727,"line_start":363,"line_end":363,"column_start":12,"column_end":34},"name":"can_interact_with_self","qualname":"<CollisionGroups>::can_interact_with_self","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether self-interaction is enabled.\n","sig":null,"attributes":[{"value":"/ Tests whether self-interaction is enabled.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":273633,"byte_end":273679,"line_start":361,"line_end":361,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":273684,"byte_end":273693,"line_start":362,"line_end":362,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":2092},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":273973,"byte_end":273998,"line_start":376,"line_end":376,"column_start":12,"column_end":37},"name":"CollisionGroupsPairFilter","qualname":"::pipeline::object::collision_groups::CollisionGroupsPairFilter","value":"","parent":null,"children":[],"decl_id":null,"docs":" A collision filter based collision groups.\n","sig":null,"attributes":[{"value":"/ A collision filter based collision groups.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":273915,"byte_end":273961,"line_start":375,"line_end":375,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2095},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":274122,"byte_end":274125,"line_start":381,"line_end":381,"column_start":12,"column_end":15},"name":"new","qualname":"<CollisionGroupsPairFilter>::new","value":"fn () -> CollisionGroupsPairFilter","parent":null,"children":[],"decl_id":null,"docs":" Creates a new collision filter based collision groups.\n","sig":null,"attributes":[{"value":"/ Creates a new collision filter based collision groups.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":274038,"byte_end":274096,"line_start":379,"line_end":379,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":274101,"byte_end":274110,"line_start":380,"line_end":380,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":7006},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":275187,"byte_end":275213,"line_start":13,"line_end":13,"column_start":16,"column_end":42},"name":"CollisionObjectUpdateFlags","qualname":"::pipeline::object::collision_object::CollisionObjectUpdateFlags","value":"CollisionObjectUpdateFlags {  }","parent":null,"children":[{"krate":0,"index":7007}],"decl_id":null,"docs":" Flags indicating what changed in a collision object since the last collision world update.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7049},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":275301,"byte_end":275317,"line_start":15,"line_end":15,"column_start":15,"column_end":31},"name":"POSITION_CHANGED","qualname":"::pipeline::object::collision_object::CollisionObjectUpdateFlags::POSITION_CHANGED","value":"CollisionObjectUpdateFlags","parent":{"krate":0,"index":7048},"children":[],"decl_id":null,"docs":" Indicate that the collision object's position changed.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7050},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":275423,"byte_end":275449,"line_start":17,"line_end":17,"column_start":15,"column_end":41},"name":"PREDICTED_POSITION_CHANGED","qualname":"::pipeline::object::collision_object::CollisionObjectUpdateFlags::PREDICTED_POSITION_CHANGED","value":"CollisionObjectUpdateFlags","parent":{"krate":0,"index":7048},"children":[],"decl_id":null,"docs":" Indicate that the collision object's predicted position changed.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7051},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":275542,"byte_end":275555,"line_start":19,"line_end":19,"column_start":15,"column_end":28},"name":"SHAPE_CHANGED","qualname":"::pipeline::object::collision_object::CollisionObjectUpdateFlags::SHAPE_CHANGED","value":"CollisionObjectUpdateFlags","parent":{"krate":0,"index":7048},"children":[],"decl_id":null,"docs":" Indicate that the collision object's shape changed.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7052},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":275656,"byte_end":275680,"line_start":21,"line_end":21,"column_start":15,"column_end":39},"name":"COLLISION_GROUPS_CHANGED","qualname":"::pipeline::object::collision_object::CollisionObjectUpdateFlags::COLLISION_GROUPS_CHANGED","value":"CollisionObjectUpdateFlags","parent":{"krate":0,"index":7048},"children":[],"decl_id":null,"docs":" Indicate that the collision object's collision group changed.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7053},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":275786,"byte_end":275804,"line_start":23,"line_end":23,"column_start":15,"column_end":33},"name":"QUERY_TYPE_CHANGED","qualname":"::pipeline::object::collision_object::CollisionObjectUpdateFlags::QUERY_TYPE_CHANGED","value":"CollisionObjectUpdateFlags","parent":{"krate":0,"index":7048},"children":[],"decl_id":null,"docs":" Indicate that the collision object's geometric query type changed.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2116},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":275972,"byte_end":275996,"line_start":29,"line_end":29,"column_start":12,"column_end":36},"name":"needs_broad_phase_update","qualname":"<CollisionObjectUpdateFlags>::needs_broad_phase_update","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the collision object has been changed in a way that justify a broad-phase update.\n","sig":null,"attributes":[{"value":"/ Checks if the collision object has been changed in a way that justify a broad-phase update.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":275865,"byte_end":275960,"line_start":28,"line_end":28,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":2117},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":276158,"byte_end":276183,"line_start":34,"line_end":34,"column_start":12,"column_end":37},"name":"needs_narrow_phase_update","qualname":"<CollisionObjectUpdateFlags>::needs_narrow_phase_update","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the collision object has been changed in a way that justify a narrow-phase update.\n","sig":null,"attributes":[{"value":"/ Checks if the collision object has been changed in a way that justify a narrow-phase update.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":276050,"byte_end":276146,"line_start":33,"line_end":33,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":2118},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":276637,"byte_end":276665,"line_start":46,"line_end":46,"column_start":12,"column_end":40},"name":"needs_bounding_volume_update","qualname":"<CollisionObjectUpdateFlags>::needs_bounding_volume_update","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the collision object has been changed in a way that justify an update of its bounding volume.\n","sig":null,"attributes":[{"value":"/ Checks if the collision object has been changed in a way that justify an update of its bounding volume.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":276518,"byte_end":276625,"line_start":45,"line_end":45,"column_start":5,"column_end":112}}]},{"kind":"Method","id":{"krate":0,"index":2119},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":277089,"byte_end":277117,"line_start":54,"line_end":54,"column_start":12,"column_end":40},"name":"needs_broad_phase_redispatch","qualname":"<CollisionObjectUpdateFlags>::needs_broad_phase_redispatch","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the collision object has been changed in a way that justify that the broad-phase\n recompute all potential proximity pairs for this collision objects.\n","sig":null,"attributes":[{"value":"/ Checks if the collision object has been changed in a way that justify that the broad-phase","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":276907,"byte_end":277001,"line_start":52,"line_end":52,"column_start":5,"column_end":99}},{"value":"/ recompute all potential proximity pairs for this collision objects.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":277006,"byte_end":277077,"line_start":53,"line_end":53,"column_start":5,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":2120},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":277326,"byte_end":277344,"line_start":62,"line_end":62,"column_start":11,"column_end":29},"name":"CollisionObjectRef","qualname":"::pipeline::object::collision_object::CollisionObjectRef","value":"CollisionObjectRef<N: RealField>","parent":null,"children":[{"krate":0,"index":2122},{"krate":0,"index":2123},{"krate":0,"index":2124},{"krate":0,"index":2125},{"krate":0,"index":2126},{"krate":0,"index":2127},{"krate":0,"index":2128},{"krate":0,"index":2129},{"krate":0,"index":2130},{"krate":0,"index":2131}],"decl_id":null,"docs":" Trait implemented by collision objects.\n","sig":null,"attributes":[{"value":"/ Trait implemented by collision objects.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":277272,"byte_end":277315,"line_start":61,"line_end":61,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2122},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":277547,"byte_end":277558,"line_start":66,"line_end":66,"column_start":8,"column_end":19},"name":"graph_index","qualname":"::pipeline::object::collision_object::CollisionObjectRef::graph_index","value":"fn (&self) -> Option<CollisionObjectGraphIndex>","parent":{"krate":0,"index":2120},"children":[],"decl_id":null,"docs":" The interaction graph index of this collision object, if it has been registered into an interaction graph.","sig":null,"attributes":[{"value":"/ The interaction graph index of this collision object, if it has been registered into an interaction graph.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":277365,"byte_end":277475,"line_start":63,"line_end":63,"column_start":5,"column_end":115}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":277480,"byte_end":277483,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Se the `glue::create_proxies` for more details.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":277488,"byte_end":277539,"line_start":65,"line_end":65,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2123},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":277784,"byte_end":277796,"line_start":70,"line_end":70,"column_start":8,"column_end":20},"name":"proxy_handle","qualname":"::pipeline::object::collision_object::CollisionObjectRef::proxy_handle","value":"fn (&self) -> Option<BroadPhaseProxyHandle>","parent":{"krate":0,"index":2120},"children":[],"decl_id":null,"docs":" The broad-phase proxy handle of this collision object, if it has been registered into a broad-phase.","sig":null,"attributes":[{"value":"/ The broad-phase proxy handle of this collision object, if it has been registered into a broad-phase.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":277608,"byte_end":277712,"line_start":67,"line_end":67,"column_start":5,"column_end":109}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":277717,"byte_end":277720,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ Se the `glue::create_proxies` for more details.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":277725,"byte_end":277776,"line_start":69,"line_end":69,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2124},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":277892,"byte_end":277900,"line_start":72,"line_end":72,"column_start":8,"column_end":16},"name":"position","qualname":"::pipeline::object::collision_object::CollisionObjectRef::position","value":"fn (&self) -> &Isometry<N>","parent":{"krate":0,"index":2120},"children":[],"decl_id":null,"docs":" The position of this collision object.\n","sig":null,"attributes":[{"value":"/ The position of this collision object.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":277842,"byte_end":277884,"line_start":71,"line_end":71,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2125},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":278347,"byte_end":278365,"line_start":78,"line_end":78,"column_start":8,"column_end":26},"name":"predicted_position","qualname":"::pipeline::object::collision_object::CollisionObjectRef::predicted_position","value":"fn (&self) -> Option<&Isometry<N>>","parent":{"krate":0,"index":2120},"children":[],"decl_id":null,"docs":" The expected position of this collision object in the next updates.","sig":null,"attributes":[{"value":"/ The expected position of this collision object in the next updates.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":277929,"byte_end":278000,"line_start":73,"line_end":73,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":278005,"byte_end":278008,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ This is used to enlarge the collision object bounding volume such that at yields more potential interaction pairs.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":278013,"byte_end":278131,"line_start":75,"line_end":75,"column_start":5,"column_end":123}},{"value":"/ This is typically needed for CCD (continuous collision detection) to be sure the broad-phase does not miss pential","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":278136,"byte_end":278254,"line_start":76,"line_end":76,"column_start":5,"column_end":123}},{"value":"/ interactions in-between two discontinuous positions of the collision object.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":278259,"byte_end":278339,"line_start":77,"line_end":77,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2126},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":278449,"byte_end":278454,"line_start":80,"line_end":80,"column_start":8,"column_end":13},"name":"shape","qualname":"::pipeline::object::collision_object::CollisionObjectRef::shape","value":"fn (&self) -> &dyn Shape<N>","parent":{"krate":0,"index":2120},"children":[],"decl_id":null,"docs":" The shape of this collision object.\n","sig":null,"attributes":[{"value":"/ The shape of this collision object.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":278402,"byte_end":278441,"line_start":79,"line_end":79,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2127},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":278542,"byte_end":278558,"line_start":82,"line_end":82,"column_start":8,"column_end":24},"name":"collision_groups","qualname":"::pipeline::object::collision_object::CollisionObjectRef::collision_groups","value":"fn (&self) -> &CollisionGroups","parent":{"krate":0,"index":2120},"children":[],"decl_id":null,"docs":" The collision groups of this collision object.\n","sig":null,"attributes":[{"value":"/ The collision groups of this collision object.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":278484,"byte_end":278534,"line_start":81,"line_end":81,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2128},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":278671,"byte_end":278681,"line_start":84,"line_end":84,"column_start":8,"column_end":18},"name":"query_type","qualname":"::pipeline::object::collision_object::CollisionObjectRef::query_type","value":"fn (&self) -> GeometricQueryType<N>","parent":{"krate":0,"index":2120},"children":[],"decl_id":null,"docs":" The type of geometric queries this collision object is subjected to.\n","sig":null,"attributes":[{"value":"/ The type of geometric queries this collision object is subjected to.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":278591,"byte_end":278663,"line_start":83,"line_end":83,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2129},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":278786,"byte_end":278798,"line_start":86,"line_end":86,"column_start":8,"column_end":20},"name":"update_flags","qualname":"::pipeline::object::collision_object::CollisionObjectRef::update_flags","value":"fn (&self) -> CollisionObjectUpdateFlags","parent":{"krate":0,"index":2120},"children":[],"decl_id":null,"docs":" Flags indicating what changed in this collision object.\n","sig":null,"attributes":[{"value":"/ Flags indicating what changed in this collision object.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":278719,"byte_end":278778,"line_start":85,"line_end":85,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2130},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":278935,"byte_end":278947,"line_start":89,"line_end":89,"column_start":8,"column_end":20},"name":"compute_aabb","qualname":"::pipeline::object::collision_object::CollisionObjectRef::compute_aabb","value":"fn (&self) -> AABB<N>","parent":{"krate":0,"index":2120},"children":[],"decl_id":null,"docs":" Computes the AABB of this collision object, ignoring `self.predicted_position()`.\n","sig":null,"attributes":[{"value":"/ Computes the AABB of this collision object, ignoring `self.predicted_position()`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":278842,"byte_end":278927,"line_start":88,"line_end":88,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":2131},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":279462,"byte_end":279480,"line_start":100,"line_end":100,"column_start":8,"column_end":26},"name":"compute_swept_aabb","qualname":"::pipeline::object::collision_object::CollisionObjectRef::compute_swept_aabb","value":"fn (&self) -> AABB<N>","parent":{"krate":0,"index":2120},"children":[],"decl_id":null,"docs":" Computes the swept AABB of this collision object, taking `self.predict_position()` into account.","sig":null,"attributes":[{"value":"/ Computes the swept AABB of this collision object, taking `self.predict_position()` into account.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":279123,"byte_end":279223,"line_start":95,"line_end":95,"column_start":5,"column_end":105}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":279228,"byte_end":279231,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ Given the AABB of this collision object at the position `self.position()’, and the AABB of","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":279236,"byte_end":279332,"line_start":97,"line_end":97,"column_start":5,"column_end":99}},{"value":"/ this collision object at the position `self.predicted_position()`, this returns an AABB that","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":279337,"byte_end":279433,"line_start":98,"line_end":98,"column_start":5,"column_end":101}},{"value":"/ bounds both.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":279438,"byte_end":279454,"line_start":99,"line_end":99,"column_start":5,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":7114},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":280253,"byte_end":280278,"line_start":120,"line_end":120,"column_start":12,"column_end":37},"name":"CollisionObjectSlabHandle","qualname":"::pipeline::object::collision_object::CollisionObjectSlabHandle","value":"","parent":null,"children":[],"decl_id":null,"docs":" The unique identifier of a collision object stored in a `CollisionObjectSlab` structure.\n","sig":null,"attributes":[{"value":"/ The unique identifier of a collision object stored in a `CollisionObjectSlab` structure.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":279997,"byte_end":280089,"line_start":116,"line_end":116,"column_start":1,"column_end":93}},{"value":"repr(transparent)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":280158,"byte_end":280178,"line_start":118,"line_end":118,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":2133},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":280410,"byte_end":280413,"line_start":125,"line_end":125,"column_start":12,"column_end":15},"name":"uid","qualname":"<CollisionObjectSlabHandle>::uid","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The unique identifier corresponding to this handle.\n","sig":null,"attributes":[{"value":"/ The unique identifier corresponding to this handle.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":280329,"byte_end":280384,"line_start":123,"line_end":123,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":280389,"byte_end":280398,"line_start":124,"line_end":124,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":2134},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":280525,"byte_end":280540,"line_start":131,"line_end":131,"column_start":12,"column_end":27},"name":"CollisionObject","qualname":"::pipeline::object::collision_object::CollisionObject","value":"CollisionObject {  }","parent":null,"children":[{"krate":0,"index":2137},{"krate":0,"index":2138},{"krate":0,"index":2139},{"krate":0,"index":2140},{"krate":0,"index":2141},{"krate":0,"index":2142},{"krate":0,"index":2143},{"krate":0,"index":2144},{"krate":0,"index":2145}],"decl_id":null,"docs":" A stand-alone object that has a position and a shape.\n","sig":null,"attributes":[{"value":"/ A stand-alone object that has a position and a shape.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":280456,"byte_end":280513,"line_start":130,"line_end":130,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2149},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":280997,"byte_end":281000,"line_start":145,"line_end":145,"column_start":12,"column_end":15},"name":"new","qualname":"<CollisionObject<N, T>>::new","value":"fn (proxy_handle: Option<BroadPhaseProxyHandle>, graph_index: Option<CollisionObjectGraphIndex>, position: Isometry<N>, shape: ShapeHandle<N>, groups: CollisionGroups, query_type: GeometricQueryType<N>, data: T) -> CollisionObject<N, T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new collision object.\n","sig":null,"attributes":[{"value":"/ Creates a new collision object.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":280950,"byte_end":280985,"line_start":144,"line_end":144,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2150},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":281784,"byte_end":281795,"line_start":171,"line_end":171,"column_start":12,"column_end":23},"name":"graph_index","qualname":"<CollisionObject<N, T>>::graph_index","value":"fn (&self) -> Option<CollisionObjectGraphIndex>","parent":null,"children":[],"decl_id":null,"docs":" The collision object non-stable graph index.","sig":null,"attributes":[{"value":"/ The collision object non-stable graph index.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":281617,"byte_end":281665,"line_start":167,"line_end":167,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":281670,"byte_end":281673,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ This index may change whenever a collision object is removed from the world.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":281678,"byte_end":281758,"line_start":169,"line_end":169,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":281763,"byte_end":281772,"line_start":170,"line_end":170,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2151},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":281968,"byte_end":281983,"line_start":177,"line_end":177,"column_start":12,"column_end":27},"name":"set_graph_index","qualname":"<CollisionObject<N, T>>::set_graph_index","value":"fn (&mut self, index: Option<CollisionObjectGraphIndex>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the collision object unique but non-stable graph index.\n","sig":null,"attributes":[{"value":"/ Sets the collision object unique but non-stable graph index.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":281878,"byte_end":281942,"line_start":175,"line_end":175,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":281947,"byte_end":281956,"line_start":176,"line_end":176,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2152},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":282157,"byte_end":282173,"line_start":182,"line_end":182,"column_start":12,"column_end":28},"name":"update_flags_mut","qualname":"<CollisionObject<N, T>>::update_flags_mut","value":"fn (&mut self) -> &mut CollisionObjectUpdateFlags","parent":null,"children":[],"decl_id":null,"docs":" Mutable reference to this collision object's update flags.\n","sig":null,"attributes":[{"value":"/ Mutable reference to this collision object's update flags.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":282083,"byte_end":282145,"line_start":181,"line_end":181,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2153},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":282329,"byte_end":282347,"line_start":187,"line_end":187,"column_start":12,"column_end":30},"name":"clear_update_flags","qualname":"<CollisionObject<N, T>>::clear_update_flags","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears the update flags of this collision object.\n","sig":null,"attributes":[{"value":"/ Clears the update flags of this collision object.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":282264,"byte_end":282317,"line_start":186,"line_end":186,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2154},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":282525,"byte_end":282537,"line_start":193,"line_end":193,"column_start":12,"column_end":24},"name":"proxy_handle","qualname":"<CollisionObject<N, T>>::proxy_handle","value":"fn (&self) -> Option<BroadPhaseProxyHandle>","parent":null,"children":[],"decl_id":null,"docs":" The collision object's broad phase proxy unique identifier.\n","sig":null,"attributes":[{"value":"/ The collision object's broad phase proxy unique identifier.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":282436,"byte_end":282499,"line_start":191,"line_end":191,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":282504,"byte_end":282513,"line_start":192,"line_end":192,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2155},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":282706,"byte_end":282722,"line_start":199,"line_end":199,"column_start":12,"column_end":28},"name":"set_proxy_handle","qualname":"<CollisionObject<N, T>>::set_proxy_handle","value":"fn (&mut self, handle: Option<BroadPhaseProxyHandle>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set collision object's broad phase proxy unique identifier.\n","sig":null,"attributes":[{"value":"/ Set collision object's broad phase proxy unique identifier.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":282617,"byte_end":282680,"line_start":197,"line_end":197,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":282685,"byte_end":282694,"line_start":198,"line_end":198,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2156},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":282881,"byte_end":282889,"line_start":205,"line_end":205,"column_start":12,"column_end":20},"name":"position","qualname":"<CollisionObject<N, T>>::position","value":"fn (&self) -> &Isometry<N>","parent":null,"children":[],"decl_id":null,"docs":" The collision object position.\n","sig":null,"attributes":[{"value":"/ The collision object position.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":282821,"byte_end":282855,"line_start":203,"line_end":203,"column_start":5,"column_end":39}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":282860,"byte_end":282869,"line_start":204,"line_end":204,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2157},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":283019,"byte_end":283037,"line_start":211,"line_end":211,"column_start":12,"column_end":30},"name":"predicted_position","qualname":"<CollisionObject<N, T>>::predicted_position","value":"fn (&self) -> Option<&Isometry<N>>","parent":null,"children":[],"decl_id":null,"docs":" The predicted collision object position.\n","sig":null,"attributes":[{"value":"/ The predicted collision object position.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":282949,"byte_end":282993,"line_start":209,"line_end":209,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":282998,"byte_end":283007,"line_start":210,"line_end":210,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2158},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":283237,"byte_end":283249,"line_start":217,"line_end":217,"column_start":12,"column_end":24},"name":"set_position","qualname":"<CollisionObject<N, T>>::set_position","value":"fn (&mut self, pos: Isometry<N>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the position of the collision object and resets the predicted position to None.\n","sig":null,"attributes":[{"value":"/ Sets the position of the collision object and resets the predicted position to None.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":283123,"byte_end":283211,"line_start":215,"line_end":215,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":283216,"byte_end":283225,"line_start":216,"line_end":216,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2159},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":283627,"byte_end":283655,"line_start":226,"line_end":226,"column_start":12,"column_end":40},"name":"set_position_with_prediction","qualname":"<CollisionObject<N, T>>::set_position_with_prediction","value":"fn (&mut self, pos: Isometry<N>, prediction: Isometry<N>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the position of the collision object and resets the predicted position.\n","sig":null,"attributes":[{"value":"/ Sets the position of the collision object and resets the predicted position.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":283521,"byte_end":283601,"line_start":224,"line_end":224,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":283606,"byte_end":283615,"line_start":225,"line_end":225,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2160},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":284046,"byte_end":284068,"line_start":235,"line_end":235,"column_start":12,"column_end":34},"name":"set_predicted_position","qualname":"<CollisionObject<N, T>>::set_predicted_position","value":"fn (&mut self, pos: Option<Isometry<N>>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the predicted position of the collision object.\n","sig":null,"attributes":[{"value":"/ Sets the predicted position of the collision object.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":283964,"byte_end":284020,"line_start":233,"line_end":233,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":284025,"byte_end":284034,"line_start":234,"line_end":234,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2161},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":284369,"byte_end":284385,"line_start":244,"line_end":244,"column_start":12,"column_end":28},"name":"set_deformations","qualname":"<CollisionObject<N, T>>::set_deformations","value":"fn (&mut self, coords: &[N]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Deforms the underlying shape if possible.","sig":null,"attributes":[{"value":"/ Deforms the underlying shape if possible.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":284243,"byte_end":284288,"line_start":240,"line_end":240,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":284293,"byte_end":284296,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ Panics if the shape is not deformable.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":284301,"byte_end":284343,"line_start":242,"line_end":242,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":284348,"byte_end":284357,"line_start":243,"line_end":243,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2162},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":284744,"byte_end":284749,"line_start":255,"line_end":255,"column_start":12,"column_end":17},"name":"shape","qualname":"<CollisionObject<N, T>>::shape","value":"fn (&self) -> &ShapeHandle<N>","parent":null,"children":[],"decl_id":null,"docs":" The collision object shape.\n","sig":null,"attributes":[{"value":"/ The collision object shape.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":284687,"byte_end":284718,"line_start":253,"line_end":253,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":284723,"byte_end":284732,"line_start":254,"line_end":254,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2163},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":284870,"byte_end":284879,"line_start":261,"line_end":261,"column_start":12,"column_end":21},"name":"set_shape","qualname":"<CollisionObject<N, T>>::set_shape","value":"fn (&mut self, shape: ShapeHandle<N>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the collision object shape.\n","sig":null,"attributes":[{"value":"/ Set the collision object shape.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":284809,"byte_end":284844,"line_start":259,"line_end":259,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":284849,"byte_end":284858,"line_start":260,"line_end":260,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2164},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":285101,"byte_end":285117,"line_start":268,"line_end":268,"column_start":12,"column_end":28},"name":"collision_groups","qualname":"<CollisionObject<N, T>>::collision_groups","value":"fn (&self) -> &CollisionGroups","parent":null,"children":[],"decl_id":null,"docs":" The collision groups of the collision object.\n","sig":null,"attributes":[{"value":"/ The collision groups of the collision object.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":285026,"byte_end":285075,"line_start":266,"line_end":266,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":285080,"byte_end":285089,"line_start":267,"line_end":267,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2165},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":285270,"byte_end":285290,"line_start":274,"line_end":274,"column_start":12,"column_end":32},"name":"set_collision_groups","qualname":"<CollisionObject<N, T>>::set_collision_groups","value":"fn (&mut self, groups: CollisionGroups) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the collision groups of this collision object.\n","sig":null,"attributes":[{"value":"/ Sets the collision groups of this collision object.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":285189,"byte_end":285244,"line_start":272,"line_end":272,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":285249,"byte_end":285258,"line_start":273,"line_end":273,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2166},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":285550,"byte_end":285560,"line_start":281,"line_end":281,"column_start":12,"column_end":22},"name":"query_type","qualname":"<CollisionObject<N, T>>::query_type","value":"fn (&self) -> GeometricQueryType<N>","parent":null,"children":[],"decl_id":null,"docs":" The kind of queries this collision object is expected to .\n","sig":null,"attributes":[{"value":"/ The kind of queries this collision object is expected to .","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":285462,"byte_end":285524,"line_start":279,"line_end":279,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":285529,"byte_end":285538,"line_start":280,"line_end":280,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2167},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":285779,"byte_end":285793,"line_start":288,"line_end":288,"column_start":12,"column_end":26},"name":"set_query_type","qualname":"<CollisionObject<N, T>>::set_query_type","value":"fn (&mut self, query_type: GeometricQueryType<N>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the `GeometricQueryType` of the collision object.\n Use `CollisionWorld::set_query_type` to use this method.\n","sig":null,"attributes":[{"value":"/ Sets the `GeometricQueryType` of the collision object.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":285630,"byte_end":285688,"line_start":285,"line_end":285,"column_start":5,"column_end":63}},{"value":"/ Use `CollisionWorld::set_query_type` to use this method.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":285693,"byte_end":285753,"line_start":286,"line_end":286,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":285758,"byte_end":285767,"line_start":287,"line_end":287,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2168},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":286059,"byte_end":286063,"line_start":295,"line_end":295,"column_start":12,"column_end":16},"name":"data","qualname":"<CollisionObject<N, T>>::data","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Reference to the user-defined data associated to this object.\n","sig":null,"attributes":[{"value":"/ Reference to the user-defined data associated to this object.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":285968,"byte_end":286033,"line_start":293,"line_end":293,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":286038,"byte_end":286047,"line_start":294,"line_end":294,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2169},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":286208,"byte_end":286216,"line_start":301,"line_end":301,"column_start":12,"column_end":20},"name":"data_mut","qualname":"<CollisionObject<N, T>>::data_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Mutable reference to the user-defined data associated to this object.\n","sig":null,"attributes":[{"value":"/ Mutable reference to the user-defined data associated to this object.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":286109,"byte_end":286182,"line_start":299,"line_end":299,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":286187,"byte_end":286196,"line_start":300,"line_end":300,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":2195},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object_set.rs","byte_start":287350,"byte_end":287371,"line_start":9,"line_end":9,"column_start":11,"column_end":32},"name":"CollisionObjectHandle","qualname":"::pipeline::object::collision_object_set::CollisionObjectHandle","value":"CollisionObjectHandle: Copy + Hash + PartialEq + Eq + 'static + Send + Sync","parent":null,"children":[],"decl_id":null,"docs":" Trait implemented by a handle indentifying a collision object.\n","sig":null,"attributes":[{"value":"/ Trait implemented by a handle indentifying a collision object.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object_set.rs","byte_start":287273,"byte_end":287339,"line_start":8,"line_end":8,"column_start":1,"column_end":67}}]},{"kind":"Trait","id":{"krate":0,"index":2198},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object_set.rs","byte_start":287732,"byte_end":287750,"line_start":17,"line_end":17,"column_start":11,"column_end":29},"name":"CollisionObjectSet","qualname":"::pipeline::object::collision_object_set::CollisionObjectSet","value":"CollisionObjectSet<N: RealField>","parent":null,"children":[{"krate":0,"index":2200},{"krate":0,"index":2201},{"krate":0,"index":2202},{"krate":0,"index":2203}],"decl_id":null,"docs":" Trait implemented by sets of collision objects.","sig":null,"attributes":[{"value":"/ Trait implemented by sets of collision objects.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object_set.rs","byte_start":287524,"byte_end":287575,"line_start":13,"line_end":13,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object_set.rs","byte_start":287576,"byte_end":287579,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ A set of collision object map a handle of type `Self::CollisionObjectHandle` with a collision","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object_set.rs","byte_start":287580,"byte_end":287677,"line_start":15,"line_end":15,"column_start":1,"column_end":98}},{"value":"/ object of type `Self::CollisionObject`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object_set.rs","byte_start":287678,"byte_end":287721,"line_start":16,"line_end":16,"column_start":1,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":2200},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object_set.rs","byte_start":287835,"byte_end":287850,"line_start":19,"line_end":19,"column_start":10,"column_end":25},"name":"CollisionObject","qualname":"::pipeline::object::collision_object_set::CollisionObjectSet::CollisionObject","value":"type CollisionObject: CollisionObjectRef<N>;","parent":{"krate":0,"index":2198},"children":[],"decl_id":null,"docs":" Type of the collision object stored into this set.\n","sig":null,"attributes":[{"value":"/ Type of the collision object stored into this set.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object_set.rs","byte_start":287771,"byte_end":287825,"line_start":18,"line_end":18,"column_start":5,"column_end":59}}]},{"kind":"Type","id":{"krate":0,"index":2201},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object_set.rs","byte_start":287943,"byte_end":287964,"line_start":21,"line_end":21,"column_start":10,"column_end":31},"name":"CollisionObjectHandle","qualname":"::pipeline::object::collision_object_set::CollisionObjectSet::CollisionObjectHandle","value":"type CollisionObjectHandle: CollisionObjectHandle;","parent":{"krate":0,"index":2198},"children":[],"decl_id":null,"docs":" Type of the handles identifying collision objects.\n","sig":null,"attributes":[{"value":"/ Type of the handles identifying collision objects.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object_set.rs","byte_start":287879,"byte_end":287933,"line_start":20,"line_end":20,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2202},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object_set.rs","byte_start":288065,"byte_end":288081,"line_start":24,"line_end":24,"column_start":8,"column_end":24},"name":"collision_object","qualname":"::pipeline::object::collision_object_set::CollisionObjectSet::collision_object","value":"fn (&self, handle: Self::CollisionObjectHandle) -> Option<&Self::CollisionObject>","parent":{"krate":0,"index":2198},"children":[],"decl_id":null,"docs":" Gets the collision object identified by the given `handle`.\n","sig":null,"attributes":[{"value":"/ Gets the collision object identified by the given `handle`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object_set.rs","byte_start":287994,"byte_end":288057,"line_start":23,"line_end":23,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2203},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object_set.rs","byte_start":288284,"byte_end":288291,"line_start":29,"line_end":29,"column_start":8,"column_end":15},"name":"foreach","qualname":"::pipeline::object::collision_object_set::CollisionObjectSet::foreach","value":"fn (&self, f: impl FnMut(Self::CollisionObjectHandle, &Self::CollisionObject)) -> ()","parent":{"krate":0,"index":2198},"children":[],"decl_id":null,"docs":" Applies a closure to every collision object (and their handle) stored into this set.\n","sig":null,"attributes":[{"value":"/ Applies a closure to every collision object (and their handle) stored into this set.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object_set.rs","byte_start":288188,"byte_end":288276,"line_start":28,"line_end":28,"column_start":5,"column_end":93}}]},{"kind":"Struct","id":{"krate":0,"index":2213},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object_set.rs","byte_start":289016,"byte_end":289035,"line_start":51,"line_end":51,"column_start":12,"column_end":31},"name":"CollisionObjectSlab","qualname":"::pipeline::object::collision_object_set::CollisionObjectSlab","value":"CollisionObjectSlab {  }","parent":null,"children":[{"krate":0,"index":2216}],"decl_id":null,"docs":" A set of collision objects that can be indexed by collision object handles.\n","sig":null,"attributes":[{"value":"/ A set of collision objects that can be indexed by collision object handles.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object_set.rs","byte_start":288925,"byte_end":289004,"line_start":50,"line_end":50,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":2220},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object_set.rs","byte_start":289233,"byte_end":289236,"line_start":57,"line_end":57,"column_start":12,"column_end":15},"name":"new","qualname":"<CollisionObjectSlab<N, T>>::new","value":"fn () -> CollisionObjectSlab<N, T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty collection of collision objects.\n","sig":null,"attributes":[{"value":"/ Creates a new empty collection of collision objects.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object_set.rs","byte_start":289165,"byte_end":289221,"line_start":56,"line_end":56,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2221},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object_set.rs","byte_start":289474,"byte_end":289480,"line_start":65,"line_end":65,"column_start":12,"column_end":18},"name":"insert","qualname":"<CollisionObjectSlab<N, T>>::insert","value":"fn (&mut self, co: CollisionObject<N, T>) -> CollisionObjectSlabHandle","parent":null,"children":[],"decl_id":null,"docs":" Inserts a new collision object into this collection and returns the corresponding handle.\n","sig":null,"attributes":[{"value":"/ Inserts a new collision object into this collection and returns the corresponding handle.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object_set.rs","byte_start":289355,"byte_end":289448,"line_start":63,"line_end":63,"column_start":5,"column_end":98}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object_set.rs","byte_start":289453,"byte_end":289462,"line_start":64,"line_end":64,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2222},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object_set.rs","byte_start":289799,"byte_end":289805,"line_start":73,"line_end":73,"column_start":12,"column_end":18},"name":"remove","qualname":"<CollisionObjectSlab<N, T>>::remove","value":"fn (&mut self, handle: CollisionObjectSlabHandle) -> CollisionObject<N, T>","parent":null,"children":[],"decl_id":null,"docs":" Removes from this collection the collision object identified by the given handle.","sig":null,"attributes":[{"value":"/ Removes from this collection the collision object identified by the given handle.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object_set.rs","byte_start":289620,"byte_end":289705,"line_start":69,"line_end":69,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object_set.rs","byte_start":289710,"byte_end":289713,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ The removed collision object structure is returned.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object_set.rs","byte_start":289718,"byte_end":289773,"line_start":71,"line_end":71,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object_set.rs","byte_start":289778,"byte_end":289787,"line_start":72,"line_end":72,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2223},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object_set.rs","byte_start":290049,"byte_end":290052,"line_start":79,"line_end":79,"column_start":12,"column_end":15},"name":"get","qualname":"<CollisionObjectSlab<N, T>>::get","value":"fn (&self, handle: CollisionObjectSlabHandle) -> Option<&CollisionObject<N, T>>","parent":null,"children":[],"decl_id":null,"docs":" If it exists, retrieves a reference to the collision object identified by the given handle.\n","sig":null,"attributes":[{"value":"/ If it exists, retrieves a reference to the collision object identified by the given handle.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object_set.rs","byte_start":289928,"byte_end":290023,"line_start":77,"line_end":77,"column_start":5,"column_end":100}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object_set.rs","byte_start":290028,"byte_end":290037,"line_start":78,"line_end":78,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2224},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object_set.rs","byte_start":290306,"byte_end":290313,"line_start":85,"line_end":85,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<CollisionObjectSlab<N, T>>::get_mut","value":"fn (&mut self, handle: CollisionObjectSlabHandle) -> Option<&mut CollisionObject<N, T>>","parent":null,"children":[],"decl_id":null,"docs":" If it exists, retrieves a mutable reference to the collision object identified by the given handle.\n","sig":null,"attributes":[{"value":"/ If it exists, retrieves a mutable reference to the collision object identified by the given handle.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object_set.rs","byte_start":290177,"byte_end":290280,"line_start":83,"line_end":83,"column_start":5,"column_end":108}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object_set.rs","byte_start":290285,"byte_end":290294,"line_start":84,"line_end":84,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2225},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object_set.rs","byte_start":290659,"byte_end":290671,"line_start":96,"line_end":96,"column_start":12,"column_end":24},"name":"get_pair_mut","qualname":"<CollisionObjectSlab<N, T>>::get_pair_mut","value":"fn (&mut self, handle1: CollisionObjectSlabHandle, handle2: CollisionObjectSlabHandle) -> (Option<&mut CollisionObject<N, T>>, Option<&mut CollisionObject<N, T>>)","parent":null,"children":[],"decl_id":null,"docs":" If they exists, retrieves a mutable reference to the two collision object identified by the given handles.","sig":null,"attributes":[{"value":"/ If they exists, retrieves a mutable reference to the two collision object identified by the given handles.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object_set.rs","byte_start":290473,"byte_end":290583,"line_start":92,"line_end":92,"column_start":5,"column_end":115}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object_set.rs","byte_start":290588,"byte_end":290591,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Panics if both handles are equal.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object_set.rs","byte_start":290596,"byte_end":290633,"line_start":94,"line_end":94,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object_set.rs","byte_start":290638,"byte_end":290647,"line_start":95,"line_end":95,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2228},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object_set.rs","byte_start":291295,"byte_end":291303,"line_start":114,"line_end":114,"column_start":12,"column_end":20},"name":"contains","qualname":"<CollisionObjectSlab<N, T>>::contains","value":"fn (&self, handle: CollisionObjectSlabHandle) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the specified handle identifies a collision object stored in this collection.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the specified handle identifies a collision object stored in this collection.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object_set.rs","byte_start":291170,"byte_end":291269,"line_start":112,"line_end":112,"column_start":5,"column_end":104}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object_set.rs","byte_start":291274,"byte_end":291283,"line_start":113,"line_end":113,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2229},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object_set.rs","byte_start":291504,"byte_end":291508,"line_start":120,"line_end":120,"column_start":12,"column_end":16},"name":"iter","qualname":"<CollisionObjectSlab<N, T>>::iter","value":"fn (&self) -> CollisionObjects<N, T>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves an iterator yielding references to each collision object.\n","sig":null,"attributes":[{"value":"/ Retrieves an iterator yielding references to each collision object.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object_set.rs","byte_start":291407,"byte_end":291478,"line_start":118,"line_end":118,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object_set.rs","byte_start":291483,"byte_end":291492,"line_start":119,"line_end":119,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2230},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object_set.rs","byte_start":291728,"byte_end":291736,"line_start":128,"line_end":128,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<CollisionObjectSlab<N, T>>::iter_mut","value":"fn (&mut self) -> CollisionObjectsMut<N, T>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves an iterator yielding references to each collision object.\n","sig":null,"attributes":[{"value":"/ Retrieves an iterator yielding references to each collision object.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object_set.rs","byte_start":291631,"byte_end":291702,"line_start":126,"line_end":126,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object_set.rs","byte_start":291707,"byte_end":291716,"line_start":127,"line_end":127,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2231},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object_set.rs","byte_start":291952,"byte_end":291955,"line_start":136,"line_end":136,"column_start":12,"column_end":15},"name":"len","qualname":"<CollisionObjectSlab<N, T>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The number of collision objects on this slab.\n","sig":null,"attributes":[{"value":"/ The number of collision objects on this slab.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object_set.rs","byte_start":291877,"byte_end":291926,"line_start":134,"line_end":134,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object_set.rs","byte_start":291931,"byte_end":291940,"line_start":135,"line_end":135,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":2241},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object_set.rs","byte_start":292572,"byte_end":292588,"line_start":158,"line_end":158,"column_start":12,"column_end":28},"name":"CollisionObjects","qualname":"::pipeline::object::collision_object_set::CollisionObjects","value":"CollisionObjects {  }","parent":null,"children":[{"krate":0,"index":2245}],"decl_id":null,"docs":" An iterator yielding references to collision objects.\n","sig":null,"attributes":[{"value":"/ An iterator yielding references to collision objects.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object_set.rs","byte_start":292503,"byte_end":292560,"line_start":157,"line_end":157,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":2253},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object_set.rs","byte_start":293070,"byte_end":293089,"line_start":174,"line_end":174,"column_start":12,"column_end":31},"name":"CollisionObjectsMut","qualname":"::pipeline::object::collision_object_set::CollisionObjectsMut","value":"CollisionObjectsMut {  }","parent":null,"children":[{"krate":0,"index":2257}],"decl_id":null,"docs":" An iterator yielding mutable references to collision objects.\n","sig":null,"attributes":[{"value":"/ An iterator yielding mutable references to collision objects.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object_set.rs","byte_start":292993,"byte_end":293058,"line_start":173,"line_end":173,"column_start":1,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7142},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/query_type.rs","byte_start":294100,"byte_end":294108,"line_start":15,"line_end":15,"column_start":5,"column_end":13},"name":"Contacts","qualname":"::pipeline::object::query_type::GeometricQueryType::Contacts","value":"GeometricQueryType::Contacts(N, N)","parent":{"krate":0,"index":7140},"children":[],"decl_id":null,"docs":" This objects can respond to both contact point computation and proximity queries.\n","sig":null,"attributes":[{"value":"/ This objects can respond to both contact point computation and proximity queries.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/query_type.rs","byte_start":294010,"byte_end":294095,"line_start":14,"line_end":14,"column_start":5,"column_end":90}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7146},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/query_type.rs","byte_start":294177,"byte_end":294186,"line_start":17,"line_end":17,"column_start":5,"column_end":14},"name":"Proximity","qualname":"::pipeline::object::query_type::GeometricQueryType::Proximity","value":"GeometricQueryType::Proximity(N)","parent":{"krate":0,"index":7140},"children":[],"decl_id":null,"docs":" This object can respond to proximity tests only.\n","sig":null,"attributes":[{"value":"/ This object can respond to proximity tests only.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/query_type.rs","byte_start":294120,"byte_end":294172,"line_start":16,"line_end":16,"column_start":5,"column_end":57}}]},{"kind":"Enum","id":{"krate":0,"index":7140},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/query_type.rs","byte_start":293971,"byte_end":293989,"line_start":13,"line_end":13,"column_start":10,"column_end":28},"name":"GeometricQueryType","qualname":"::pipeline::object::query_type::GeometricQueryType","value":"GeometricQueryType::{Contacts, Proximity}","parent":null,"children":[{"krate":0,"index":7142},{"krate":0,"index":7146}],"decl_id":null,"docs":" The kind of query a CollisionObject may be involved on.","sig":null,"attributes":[{"value":"/ The kind of query a CollisionObject may be involved on.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/query_type.rs","byte_start":293569,"byte_end":293628,"line_start":4,"line_end":4,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/query_type.rs","byte_start":293629,"byte_end":293632,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ The following queries are executed for a given pair of `GeometricQueryType` associated with two","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/query_type.rs","byte_start":293633,"byte_end":293732,"line_start":6,"line_end":6,"column_start":1,"column_end":100}},{"value":"/ collision objects:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/query_type.rs","byte_start":293733,"byte_end":293755,"line_start":7,"line_end":7,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/query_type.rs","byte_start":293756,"byte_end":293759,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ * Contacts + Contacts = exact contact point coputation.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/query_type.rs","byte_start":293760,"byte_end":293819,"line_start":9,"line_end":9,"column_start":1,"column_end":60}},{"value":"/ * Contacts + Proximity = proximity test only.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/query_type.rs","byte_start":293820,"byte_end":293869,"line_start":10,"line_end":10,"column_start":1,"column_end":50}},{"value":"/ * Proximity + Proximity = proximity test only.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/query_type.rs","byte_start":293870,"byte_end":293920,"line_start":11,"line_end":11,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2270},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/query_type.rs","byte_start":294715,"byte_end":294726,"line_start":29,"line_end":29,"column_start":12,"column_end":23},"name":"query_limit","qualname":"<GeometricQueryType<N>>::query_limit","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The numerical distance limit of relevance for this query.","sig":null,"attributes":[{"value":"/ The numerical distance limit of relevance for this query.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/query_type.rs","byte_start":294285,"byte_end":294346,"line_start":22,"line_end":22,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/query_type.rs","byte_start":294351,"byte_end":294354,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ If two objects are separated by a distance greater than the sum of their respective","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/query_type.rs","byte_start":294359,"byte_end":294446,"line_start":24,"line_end":24,"column_start":5,"column_end":92}},{"value":"/ `query_limit`, the corresponding query will not by performed. For proximity queries,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/query_type.rs","byte_start":294451,"byte_end":294539,"line_start":25,"line_end":25,"column_start":5,"column_end":93}},{"value":"/ non-intersecting object closer than a distance equal to the sum of their `query_limit` will","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/query_type.rs","byte_start":294544,"byte_end":294639,"line_start":26,"line_end":26,"column_start":5,"column_end":100}},{"value":"/ be reported as `Proximity::WithinMargin`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/query_type.rs","byte_start":294644,"byte_end":294689,"line_start":27,"line_end":27,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/query_type.rs","byte_start":294694,"byte_end":294703,"line_start":28,"line_end":28,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2271},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/query_type.rs","byte_start":295109,"byte_end":295138,"line_start":39,"line_end":39,"column_start":12,"column_end":41},"name":"contact_queries_to_prediction","qualname":"<GeometricQueryType<N>>::contact_queries_to_prediction","value":"fn (self, other: Self) -> Option<ContactPrediction<N>>","parent":null,"children":[],"decl_id":null,"docs":" Given two contact query types, returns the corresponding contact prediction parameters.","sig":null,"attributes":[{"value":"/ Given two contact query types, returns the corresponding contact prediction parameters.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/query_type.rs","byte_start":294906,"byte_end":294997,"line_start":36,"line_end":36,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/query_type.rs","byte_start":295002,"byte_end":295005,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if any of `self` or `other` is not a `GeometricQueryType::Contacts`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/query_type.rs","byte_start":295010,"byte_end":295097,"line_start":38,"line_end":38,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":2272},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/query_type.rs","byte_start":295637,"byte_end":295654,"line_start":55,"line_end":55,"column_start":12,"column_end":29},"name":"is_contacts_query","qualname":"<GeometricQueryType<N>>::is_contacts_query","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this is a contacts query type.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this is a contacts query type.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/query_type.rs","byte_start":295559,"byte_end":295611,"line_start":53,"line_end":53,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/query_type.rs","byte_start":295616,"byte_end":295625,"line_start":54,"line_end":54,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2273},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/query_type.rs","byte_start":295882,"byte_end":295900,"line_start":65,"line_end":65,"column_start":12,"column_end":30},"name":"is_proximity_query","qualname":"<GeometricQueryType<N>>::is_proximity_query","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this is a proximity query type.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this is a proximity query type.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/query_type.rs","byte_start":295803,"byte_end":295856,"line_start":63,"line_end":63,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/query_type.rs","byte_start":295861,"byte_end":295870,"line_start":64,"line_end":64,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":2274},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"world","qualname":"::pipeline::world","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","parent":null,"children":[{"krate":0,"index":2275},{"krate":0,"index":2278},{"krate":0,"index":2281},{"krate":0,"index":2287},{"krate":0,"index":2291},{"krate":0,"index":2297},{"krate":0,"index":2308},{"krate":0,"index":2316},{"krate":0,"index":2323},{"krate":0,"index":2326},{"krate":0,"index":2328},{"krate":0,"index":2337}],"decl_id":null,"docs":" High level API to detect collisions in large, complex scenes.\n","sig":null,"attributes":[{"value":"! High level API to detect collisions in large, complex scenes.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":296047,"byte_end":296112,"line_start":1,"line_end":1,"column_start":1,"column_end":66}}]},{"kind":"Type","id":{"krate":0,"index":2326},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":297131,"byte_end":297147,"line_start":25,"line_end":25,"column_start":10,"column_end":26},"name":"BroadPhaseObject","qualname":"::pipeline::world::BroadPhaseObject","value":"Box<dyn BroadPhase<N, AABB<N>, CollisionObjectSlabHandle>>","parent":null,"children":[],"decl_id":null,"docs":" Type of the broad phase trait-object used by the collision world.\n","sig":null,"attributes":[{"value":"/ Type of the broad phase trait-object used by the collision world.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":297052,"byte_end":297121,"line_start":24,"line_end":24,"column_start":1,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":2328},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":297269,"byte_end":297283,"line_start":28,"line_end":28,"column_start":12,"column_end":26},"name":"CollisionWorld","qualname":"::pipeline::world::CollisionWorld","value":"CollisionWorld { objects, broad_phase, narrow_phase, toi_dispatcher, interactions, pair_filters }","parent":null,"children":[{"krate":0,"index":2331},{"krate":0,"index":2332},{"krate":0,"index":2333},{"krate":0,"index":2334},{"krate":0,"index":2335},{"krate":0,"index":2336}],"decl_id":null,"docs":" A world that handles collision objects.\n","sig":null,"attributes":[{"value":"/ A world that handles collision objects.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":297214,"byte_end":297257,"line_start":27,"line_end":27,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":2331},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":297363,"byte_end":297370,"line_start":30,"line_end":30,"column_start":9,"column_end":16},"name":"objects","qualname":"::pipeline::world::CollisionWorld::objects","value":"pipeline::object::collision_object_set::CollisionObjectSlab<N, T>","parent":{"krate":0,"index":2328},"children":[],"decl_id":null,"docs":" The set of objects on this collision world.\n","sig":null,"attributes":[{"value":"/ The set of objects on this collision world.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":297307,"byte_end":297354,"line_start":29,"line_end":29,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2332},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":297461,"byte_end":297472,"line_start":32,"line_end":32,"column_start":9,"column_end":20},"name":"broad_phase","qualname":"::pipeline::world::CollisionWorld::broad_phase","value":"std::boxed::Box<(dyn pipeline::broad_phase::broad_phase::BroadPhase<N, bounding_volume::aabb::AABB<N>, pipeline::object::collision_object::CollisionObjectSlabHandle> + 'static)>","parent":{"krate":0,"index":2328},"children":[],"decl_id":null,"docs":" The broad phase used by this collision world.\n","sig":null,"attributes":[{"value":"/ The broad phase used by this collision world.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":297403,"byte_end":297452,"line_start":31,"line_end":31,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":2333},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":297558,"byte_end":297570,"line_start":34,"line_end":34,"column_start":9,"column_end":21},"name":"narrow_phase","qualname":"::pipeline::world::CollisionWorld::narrow_phase","value":"pipeline::narrow_phase::narrow_phase::NarrowPhase<N, pipeline::object::collision_object::CollisionObjectSlabHandle>","parent":{"krate":0,"index":2328},"children":[],"decl_id":null,"docs":" The narrow-phase used by this collision world.\n","sig":null,"attributes":[{"value":"/ The narrow-phase used by this collision world.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":297499,"byte_end":297549,"line_start":33,"line_end":33,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":2334},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":297667,"byte_end":297681,"line_start":36,"line_end":36,"column_start":9,"column_end":23},"name":"toi_dispatcher","qualname":"::pipeline::world::CollisionWorld::toi_dispatcher","value":"std::boxed::Box<(dyn query::toi_dispatcher::TOIDispatcher<N> + 'static)>","parent":{"krate":0,"index":2328},"children":[],"decl_id":null,"docs":" The Time of Impact dispatcher used.\n","sig":null,"attributes":[{"value":"/ The Time of Impact dispatcher used.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":297619,"byte_end":297658,"line_start":35,"line_end":35,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":2335},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":297769,"byte_end":297781,"line_start":38,"line_end":38,"column_start":9,"column_end":21},"name":"interactions","qualname":"::pipeline::world::CollisionWorld::interactions","value":"pipeline::narrow_phase::interaction_graph::InteractionGraph<N, pipeline::object::collision_object::CollisionObjectSlabHandle>","parent":{"krate":0,"index":2328},"children":[],"decl_id":null,"docs":" The graph of interactions detected so far.\n","sig":null,"attributes":[{"value":"/ The graph of interactions detected so far.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":297714,"byte_end":297760,"line_start":37,"line_end":37,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":2336},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":297887,"byte_end":297899,"line_start":40,"line_end":40,"column_start":9,"column_end":21},"name":"pair_filters","qualname":"::pipeline::world::CollisionWorld::pair_filters","value":"std::option::Option<std::boxed::Box<(dyn pipeline::broad_phase::broad_phase_pair_filter::BroadPhasePairFilter<N, pipeline::object::collision_object::CollisionObject<N, T>, pipeline::object::collision_object::CollisionObjectSlabHandle> + 'static)>>","parent":{"krate":0,"index":2328},"children":[],"decl_id":null,"docs":" A user-defined broad-phase pair filter.\n","sig":null,"attributes":[{"value":"/ A user-defined broad-phase pair filter.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":297835,"byte_end":297878,"line_start":39,"line_end":39,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2340},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":298186,"byte_end":298189,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"new","qualname":"<CollisionWorld<N, T>>::new","value":"fn (margin: N) -> CollisionWorld<N, T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new collision world.\n","sig":null,"attributes":[{"value":"/ Creates a new collision world.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":298053,"byte_end":298087,"line_start":45,"line_end":45,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2341},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":298966,"byte_end":298969,"line_start":67,"line_end":67,"column_start":12,"column_end":15},"name":"add","qualname":"<CollisionWorld<N, T>>::add","value":"fn (&mut self, position: Isometry<N>, shape: ShapeHandle<N>, collision_groups: CollisionGroups, query_type: GeometricQueryType<N>, data: T) -> (CollisionObjectSlabHandle, &mut CollisionObject<N, T>)","parent":null,"children":[],"decl_id":null,"docs":" Adds a collision object to the world.\n","sig":null,"attributes":[{"value":"/ Adds a collision object to the world.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":298913,"byte_end":298954,"line_start":66,"line_end":66,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2342},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":300086,"byte_end":300092,"line_start":105,"line_end":105,"column_start":12,"column_end":18},"name":"update","qualname":"<CollisionWorld<N, T>>::update","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Updates the collision world.","sig":null,"attributes":[{"value":"/ Updates the collision world.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":299856,"byte_end":299888,"line_start":99,"line_end":99,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":299893,"byte_end":299896,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ This executes the whole collision detection pipeline:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":299901,"byte_end":299958,"line_start":101,"line_end":101,"column_start":5,"column_end":62}},{"value":"/ 1. Clears the event pools.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":299963,"byte_end":299993,"line_start":102,"line_end":102,"column_start":5,"column_end":35}},{"value":"/ 2. Executes the broad phase first.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":299998,"byte_end":300036,"line_start":103,"line_end":103,"column_start":5,"column_end":43}},{"value":"/ 3. Executes the narrow phase.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":300041,"byte_end":300074,"line_start":104,"line_end":104,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2344},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":300584,"byte_end":300596,"line_start":123,"line_end":123,"column_start":12,"column_end":24},"name":"clear_events","qualname":"<CollisionWorld<N, T>>::clear_events","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Empty the contact and proximity event pools.\n","sig":null,"attributes":[{"value":"/ Empty the contact and proximity event pools.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":300524,"byte_end":300572,"line_start":122,"line_end":122,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2345},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":300826,"byte_end":300832,"line_start":130,"line_end":130,"column_start":12,"column_end":18},"name":"remove","qualname":"<CollisionWorld<N, T>>::remove","value":"fn (&mut self, handles: &[CollisionObjectSlabHandle]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Removed the specified set of collision objects from the world.","sig":null,"attributes":[{"value":"/ Removed the specified set of collision objects from the world.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":300663,"byte_end":300729,"line_start":127,"line_end":127,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":300734,"byte_end":300737,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ Panics of any handle is invalid, or if the list contains duplicates.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":300742,"byte_end":300814,"line_start":129,"line_end":129,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2346},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":301655,"byte_end":301667,"line_start":149,"line_end":149,"column_start":12,"column_end":24},"name":"set_position","qualname":"<CollisionWorld<N, T>>::set_position","value":"fn (&mut self, handle: CollisionObjectSlabHandle, pos: Isometry<N>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the position of the collision object attached to the specified object.\n","sig":null,"attributes":[{"value":"/ Sets the position of the collision object attached to the specified object.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":301476,"byte_end":301555,"line_start":147,"line_end":147,"column_start":5,"column_end":84}},{"value":"deprecated =\n  \"Call directly the method `.set_position` on the collision object.\"","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":301560,"byte_end":301643,"line_start":148,"line_end":148,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":2347},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":302947,"byte_end":302961,"line_start":178,"line_end":178,"column_start":12,"column_end":26},"name":"set_query_type","qualname":"<CollisionWorld<N, T>>::set_query_type","value":"fn (&mut self, handle: CollisionObjectSlabHandle, query_type: GeometricQueryType<N>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the `GeometricQueryType` of the collision object.\n","sig":null,"attributes":[{"value":"/ Sets the `GeometricQueryType` of the collision object.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":302773,"byte_end":302831,"line_start":175,"line_end":175,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":302836,"byte_end":302845,"line_start":176,"line_end":176,"column_start":5,"column_end":14}},{"value":"deprecated =\n  \"Call directly the method `.set_query_type` on the collision object.\"","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":302850,"byte_end":302935,"line_start":177,"line_end":177,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":2348},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":303357,"byte_end":303366,"line_start":191,"line_end":191,"column_start":12,"column_end":21},"name":"set_shape","qualname":"<CollisionWorld<N, T>>::set_shape","value":"fn (&mut self, handle: CollisionObjectSlabHandle, shape: ShapeHandle<N>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the shape of the given collision object.\n","sig":null,"attributes":[{"value":"/ Sets the shape of the given collision object.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":303197,"byte_end":303246,"line_start":188,"line_end":188,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":303251,"byte_end":303260,"line_start":189,"line_end":189,"column_start":5,"column_end":14}},{"value":"deprecated =\n  \"Call directly the method `.set_shape` on the collision object.\"","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":303265,"byte_end":303345,"line_start":190,"line_end":190,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2349},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":303710,"byte_end":303726,"line_start":199,"line_end":199,"column_start":12,"column_end":28},"name":"set_deformations","qualname":"<CollisionWorld<N, T>>::set_deformations","value":"fn (&mut self, handle: CollisionObjectSlabHandle, coords: &[N]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Apply the given deformations to the specified object.\n","sig":null,"attributes":[{"value":"/ Apply the given deformations to the specified object.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":303549,"byte_end":303606,"line_start":197,"line_end":197,"column_start":5,"column_end":62}},{"value":"deprecated =\n  \"Call directly the method `.set_deformations` on the collision object.\"","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":303611,"byte_end":303698,"line_start":198,"line_end":198,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":2350},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":304340,"byte_end":304367,"line_start":211,"line_end":211,"column_start":12,"column_end":39},"name":"set_broad_phase_pair_filter","qualname":"<CollisionWorld<N, T>>::set_broad_phase_pair_filter","value":"fn <F> (&mut self, filter: Option<F>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the user-defined filter that tells if a potential collision pair should be ignored or not.","sig":null,"attributes":[{"value":"/ Sets the user-defined filter that tells if a potential collision pair should be ignored or not.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":303908,"byte_end":304007,"line_start":205,"line_end":205,"column_start":5,"column_end":104}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":304012,"byte_end":304015,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ The proximity filter returns `false` for a given pair of collision objects if they should","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":304020,"byte_end":304113,"line_start":207,"line_end":207,"column_start":5,"column_end":98}},{"value":"/ be ignored by the narrow phase. Keep in mind that modifying the proximity filter will have","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":304118,"byte_end":304212,"line_start":208,"line_end":208,"column_start":5,"column_end":99}},{"value":"/ a non-trivial overhead during the next update as it will force re-detection of all","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":304217,"byte_end":304303,"line_start":209,"line_end":209,"column_start":5,"column_end":91}},{"value":"/ collision pairs.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":304308,"byte_end":304328,"line_start":210,"line_end":210,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":2353},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":304876,"byte_end":304895,"line_start":225,"line_end":225,"column_start":12,"column_end":31},"name":"perform_broad_phase","qualname":"<CollisionWorld<N, T>>::perform_broad_phase","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Executes the broad phase of the collision detection pipeline.\n","sig":null,"attributes":[{"value":"/ Executes the broad phase of the collision detection pipeline.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":304799,"byte_end":304864,"line_start":224,"line_end":224,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2355},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":305232,"byte_end":305252,"line_start":236,"line_end":236,"column_start":12,"column_end":32},"name":"perform_narrow_phase","qualname":"<CollisionWorld<N, T>>::perform_narrow_phase","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Executes the narrow phase of the collision detection pipeline.\n","sig":null,"attributes":[{"value":"/ Executes the narrow phase of the collision detection pipeline.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":305154,"byte_end":305220,"line_start":235,"line_end":235,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2356},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":305490,"byte_end":305506,"line_start":245,"line_end":245,"column_start":12,"column_end":28},"name":"broad_phase_aabb","qualname":"<CollisionWorld<N, T>>::broad_phase_aabb","value":"fn (&self, handle: CollisionObjectSlabHandle) -> Option<&AABB<N>>","parent":null,"children":[],"decl_id":null,"docs":" The broad-phase aabb for the given collision object.\n","sig":null,"attributes":[{"value":"/ The broad-phase aabb for the given collision object.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":305422,"byte_end":305478,"line_start":244,"line_end":244,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2358},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":305848,"byte_end":305865,"line_start":253,"line_end":253,"column_start":12,"column_end":29},"name":"collision_objects","qualname":"<CollisionWorld<N, T>>::collision_objects","value":"fn (&self) -> CollisionObjects<N, T>","parent":null,"children":[],"decl_id":null,"docs":" Iterates through all collision objects.\n","sig":null,"attributes":[{"value":"/ Iterates through all collision objects.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":305779,"byte_end":305822,"line_start":251,"line_end":251,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":305827,"byte_end":305836,"line_start":252,"line_end":252,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2359},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":306039,"byte_end":306055,"line_start":259,"line_end":259,"column_start":12,"column_end":28},"name":"collision_object","qualname":"<CollisionWorld<N, T>>::collision_object","value":"fn (&self, handle: CollisionObjectSlabHandle) -> Option<&CollisionObject<N, T>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the collision object identified by its handle.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the collision object identified by its handle.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":305940,"byte_end":306013,"line_start":257,"line_end":257,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":306018,"byte_end":306027,"line_start":258,"line_end":258,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2360},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":306321,"byte_end":306328,"line_start":268,"line_end":268,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<CollisionWorld<N, T>>::get_mut","value":"fn (&mut self, handle: CollisionObjectSlabHandle) -> Option<&mut CollisionObject<N, T>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the collision object identified by its handle.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the collision object identified by its handle.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":306214,"byte_end":306295,"line_start":266,"line_end":266,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":306300,"byte_end":306309,"line_start":267,"line_end":267,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2361},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":306649,"byte_end":306674,"line_start":279,"line_end":279,"column_start":12,"column_end":37},"name":"collision_object_pair_mut","qualname":"<CollisionWorld<N, T>>::collision_object_pair_mut","value":"fn (&mut self, handle1: CollisionObjectSlabHandle, handle2: CollisionObjectSlabHandle) -> (Option<&mut CollisionObject<N, T>>, Option<&mut CollisionObject<N, T>>)","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to a pair collision object identified by their handles.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to a pair collision object identified by their handles.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":306486,"byte_end":306573,"line_start":275,"line_end":275,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":306578,"byte_end":306581,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ Panics if both handles are equal.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":306586,"byte_end":306623,"line_start":277,"line_end":277,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":306628,"byte_end":306637,"line_start":278,"line_end":278,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2362},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":307135,"byte_end":307155,"line_start":293,"line_end":293,"column_start":12,"column_end":32},"name":"set_collision_groups","qualname":"<CollisionWorld<N, T>>::set_collision_groups","value":"fn (&mut self, handle: CollisionObjectSlabHandle, groups: CollisionGroups) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the collision groups of the given collision object.\n","sig":null,"attributes":[{"value":"/ Sets the collision groups of the given collision object.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":306953,"byte_end":307013,"line_start":290,"line_end":290,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":307018,"byte_end":307027,"line_start":291,"line_end":291,"column_start":5,"column_end":14}},{"value":"deprecated =\n  \"Call directly the method `.set_collision_groups` on the collision object.\"","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":307032,"byte_end":307123,"line_start":292,"line_end":292,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":2363},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":307724,"byte_end":307734,"line_start":308,"line_end":308,"column_start":12,"column_end":22},"name":"sweep_test","qualname":"<CollisionWorld<N, T>>::sweep_test","value":"fn <'a> (&'a self, shape: &'a dyn Shape<N>, isometry: &'a Isometry<N>, direction: &'a Unit<Vector<N>>, maximum_distance: N, groups: &'a CollisionGroups) -> impl Iterator<Item = (CollisionObjectSlabHandle, TOI<N>)> + 'a","parent":null,"children":[],"decl_id":null,"docs":" Returns all objects in the collision world that intersect with the shape\n transformed by `isometry` along `direction` until `maximum_distance` is\n reached. The objects are not returned in any particular order. You may\n use the `toi` returned for each object to determine the closest object.\n","sig":null,"attributes":[{"value":"/ Returns all objects in the collision world that intersect with the shape","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":307383,"byte_end":307459,"line_start":303,"line_end":303,"column_start":5,"column_end":81}},{"value":"/ transformed by `isometry` along `direction` until `maximum_distance` is","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":307464,"byte_end":307539,"line_start":304,"line_end":304,"column_start":5,"column_end":80}},{"value":"/ reached. The objects are not returned in any particular order. You may","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":307544,"byte_end":307618,"line_start":305,"line_end":305,"column_start":5,"column_end":79}},{"value":"/ use the `toi` returned for each object to determine the closest object.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":307623,"byte_end":307698,"line_start":306,"line_end":306,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":307703,"byte_end":307712,"line_start":307,"line_end":307,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2368},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":309097,"byte_end":309119,"line_start":347,"line_end":347,"column_start":12,"column_end":34},"name":"interferences_with_ray","qualname":"<CollisionWorld<N, T>>::interferences_with_ray","value":"fn <'a, 'b> (&'a self, ray: &'b Ray<N>, max_toi: N, groups: &'b CollisionGroups) -> InterferencesWithRay<'a, 'b, N, CollisionObjectSlab<N, T>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the interferences between every rigid bodies on this world and a ray.\n","sig":null,"attributes":[{"value":"/ Computes the interferences between every rigid bodies on this world and a ray.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":308989,"byte_end":309071,"line_start":345,"line_end":345,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":309076,"byte_end":309085,"line_start":346,"line_end":346,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2371},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":309480,"byte_end":309507,"line_start":358,"line_end":358,"column_start":12,"column_end":39},"name":"first_interference_with_ray","qualname":"<CollisionWorld<N, T>>::first_interference_with_ray","value":"fn <'a, 'b> (&'a self, ray: &'b Ray<N>, max_toi: N, groups: &'b CollisionGroups) -> Option<FirstInterferenceWithRay<'a, N, CollisionObjectSlab<N, T>>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the first interference with `ray` and\n","sig":null,"attributes":[{"value":"/ Computes the first interference with `ray` and","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":309404,"byte_end":309454,"line_start":356,"line_end":356,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":309459,"byte_end":309468,"line_start":357,"line_end":357,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2374},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":309925,"byte_end":309949,"line_start":369,"line_end":369,"column_start":12,"column_end":36},"name":"interferences_with_point","qualname":"<CollisionWorld<N, T>>::interferences_with_point","value":"fn <'a, 'b> (&'a self, point: &'b Point<N>, groups: &'b CollisionGroups) -> InterferencesWithPoint<'a, 'b, N, CollisionObjectSlab<N, T>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the interferences between every rigid bodies of a given broad phase, and a point.\n","sig":null,"attributes":[{"value":"/ Computes the interferences between every rigid bodies of a given broad phase, and a point.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":309805,"byte_end":309899,"line_start":367,"line_end":367,"column_start":5,"column_end":99}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":309904,"byte_end":309913,"line_start":368,"line_end":368,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2377},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":310334,"byte_end":310357,"line_start":379,"line_end":379,"column_start":12,"column_end":35},"name":"interferences_with_aabb","qualname":"<CollisionWorld<N, T>>::interferences_with_aabb","value":"fn <'a, 'b> (&'a self, aabb: &'b AABB<N>, groups: &'b CollisionGroups) -> InterferencesWithAABB<'a, 'b, N, CollisionObjectSlab<N, T>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the interferences between every rigid bodies of a given broad phase, and a aabb.\n","sig":null,"attributes":[{"value":"/ Computes the interferences between every rigid bodies of a given broad phase, and a aabb.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":310215,"byte_end":310308,"line_start":377,"line_end":377,"column_start":5,"column_end":98}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":310313,"byte_end":310322,"line_start":378,"line_end":378,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2380},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":310703,"byte_end":310719,"line_start":388,"line_end":388,"column_start":12,"column_end":28},"name":"set_narrow_phase","qualname":"<CollisionWorld<N, T>>::set_narrow_phase","value":"fn (&mut self, narrow_phase: NarrowPhase<N, CollisionObjectSlabHandle>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Customize the selection of narrowphase collision detection algorithms\n","sig":null,"attributes":[{"value":"/ Customize the selection of narrowphase collision detection algorithms","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":310618,"byte_end":310691,"line_start":387,"line_end":387,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":2381},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":311183,"byte_end":311200,"line_start":403,"line_end":403,"column_start":12,"column_end":29},"name":"interaction_pairs","qualname":"<CollisionWorld<N, T>>::interaction_pairs","value":"fn (&self, effective_only: bool) -> impl Iterator<Item =\n              (CollisionObjectSlabHandle, CollisionObjectSlabHandle,\n               &Interaction<N>)>","parent":null,"children":[],"decl_id":null,"docs":" All the potential interactions pairs.","sig":null,"attributes":[{"value":"/ All the potential interactions pairs.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":310980,"byte_end":311021,"line_start":399,"line_end":399,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":311026,"byte_end":311029,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ Refer to the official [user guide](https://nphysics.org/interaction_handling_and_sensors/#interaction-iterators)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":311034,"byte_end":311150,"line_start":401,"line_end":401,"column_start":5,"column_end":121}},{"value":"/ for details.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":311155,"byte_end":311171,"line_start":402,"line_end":402,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":2383},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":311683,"byte_end":311696,"line_start":420,"line_end":420,"column_start":12,"column_end":25},"name":"contact_pairs","qualname":"<CollisionWorld<N, T>>::contact_pairs","value":"fn (&self, effective_only: bool) -> impl Iterator<Item =\n              (CollisionObjectSlabHandle, CollisionObjectSlabHandle,\n               &ContactAlgorithm<N>, &ContactManifold<N>)>","parent":null,"children":[],"decl_id":null,"docs":" All the potential contact pairs.","sig":null,"attributes":[{"value":"/ All the potential contact pairs.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":311485,"byte_end":311521,"line_start":416,"line_end":416,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":311526,"byte_end":311529,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ Refer to the official [user guide](https://nphysics.org/interaction_handling_and_sensors/#interaction-iterators)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":311534,"byte_end":311650,"line_start":418,"line_end":418,"column_start":5,"column_end":121}},{"value":"/ for details.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":311655,"byte_end":311671,"line_start":419,"line_end":419,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":2385},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":312215,"byte_end":312230,"line_start":438,"line_end":438,"column_start":12,"column_end":27},"name":"proximity_pairs","qualname":"<CollisionWorld<N, T>>::proximity_pairs","value":"fn (&self, effective_only: bool) -> impl Iterator<Item =\n              (CollisionObjectSlabHandle, CollisionObjectSlabHandle,\n               &dyn ProximityDetector<N>, Proximity)>","parent":null,"children":[],"decl_id":null,"docs":" All the potential proximity pairs.","sig":null,"attributes":[{"value":"/ All the potential proximity pairs.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":312015,"byte_end":312053,"line_start":434,"line_end":434,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":312058,"byte_end":312061,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ Refer to the official [user guide](https://nphysics.org/interaction_handling_and_sensors/#interaction-iterators)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":312066,"byte_end":312182,"line_start":436,"line_end":436,"column_start":5,"column_end":121}},{"value":"/ for details.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":312187,"byte_end":312203,"line_start":437,"line_end":437,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":2387},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":312787,"byte_end":312803,"line_start":456,"line_end":456,"column_start":12,"column_end":28},"name":"interaction_pair","qualname":"<CollisionWorld<N, T>>::interaction_pair","value":"fn (&self, handle1: CollisionObjectSlabHandle, handle2: CollisionObjectSlabHandle, effective_only: bool) -> Option<(CollisionObjectSlabHandle, CollisionObjectSlabHandle,\n        &Interaction<N>)>","parent":null,"children":[],"decl_id":null,"docs":" The potential interaction pair between the two specified collision objects.","sig":null,"attributes":[{"value":"/ The potential interaction pair between the two specified collision objects.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":312546,"byte_end":312625,"line_start":452,"line_end":452,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":312630,"byte_end":312633,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ Refer to the official [user guide](https://nphysics.org/interaction_handling_and_sensors/#interaction-iterators)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":312638,"byte_end":312754,"line_start":454,"line_end":454,"column_start":5,"column_end":121}},{"value":"/ for details.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":312759,"byte_end":312775,"line_start":455,"line_end":455,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":2388},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":313641,"byte_end":313653,"line_start":477,"line_end":477,"column_start":12,"column_end":24},"name":"contact_pair","qualname":"<CollisionWorld<N, T>>::contact_pair","value":"fn (&self, handle1: CollisionObjectSlabHandle, handle2: CollisionObjectSlabHandle, effective_only: bool) -> Option<(CollisionObjectSlabHandle, CollisionObjectSlabHandle,\n        &ContactAlgorithm<N>, &ContactManifold<N>)>","parent":null,"children":[],"decl_id":null,"docs":" The potential contact pair between the two specified collision objects.","sig":null,"attributes":[{"value":"/ The potential contact pair between the two specified collision objects.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":313404,"byte_end":313479,"line_start":473,"line_end":473,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":313484,"byte_end":313487,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ Refer to the official [user guide](https://nphysics.org/interaction_handling_and_sensors/#interaction-iterators)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":313492,"byte_end":313608,"line_start":475,"line_end":475,"column_start":5,"column_end":121}},{"value":"/ for details.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":313613,"byte_end":313629,"line_start":476,"line_end":476,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":2389},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":314523,"byte_end":314537,"line_start":499,"line_end":499,"column_start":12,"column_end":26},"name":"proximity_pair","qualname":"<CollisionWorld<N, T>>::proximity_pair","value":"fn (&self, handle1: CollisionObjectSlabHandle, handle2: CollisionObjectSlabHandle, effective_only: bool) -> Option<(CollisionObjectSlabHandle, CollisionObjectSlabHandle,\n        &dyn ProximityDetector<N>, Proximity)>","parent":null,"children":[],"decl_id":null,"docs":" The potential proximity pair between the two specified collision objects.","sig":null,"attributes":[{"value":"/ The potential proximity pair between the two specified collision objects.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":314284,"byte_end":314361,"line_start":495,"line_end":495,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":314366,"byte_end":314369,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ Refer to the official [user guide](https://nphysics.org/interaction_handling_and_sensors/#interaction-iterators)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":314374,"byte_end":314490,"line_start":497,"line_end":497,"column_start":5,"column_end":121}},{"value":"/ for details.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":314495,"byte_end":314511,"line_start":498,"line_end":498,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":2390},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":315398,"byte_end":315415,"line_start":521,"line_end":521,"column_start":12,"column_end":29},"name":"interactions_with","qualname":"<CollisionWorld<N, T>>::interactions_with","value":"fn (&self, handle: CollisionObjectSlabHandle, effective_only: bool) -> Option<impl Iterator<Item =\n                     (CollisionObjectSlabHandle, CollisionObjectSlabHandle,\n                      &Interaction<N>)>>","parent":null,"children":[],"decl_id":null,"docs":" All the interaction pairs involving the specified collision object.","sig":null,"attributes":[{"value":"/ All the interaction pairs involving the specified collision object.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":315165,"byte_end":315236,"line_start":517,"line_end":517,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":315241,"byte_end":315244,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ Refer to the official [user guide](https://nphysics.org/interaction_handling_and_sensors/#interaction-iterators)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":315249,"byte_end":315365,"line_start":519,"line_end":519,"column_start":5,"column_end":121}},{"value":"/ for details.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":315370,"byte_end":315386,"line_start":520,"line_end":520,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":2392},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":316281,"byte_end":316302,"line_start":543,"line_end":543,"column_start":12,"column_end":33},"name":"interactions_with_mut","qualname":"<CollisionWorld<N, T>>::interactions_with_mut","value":"fn (&mut self, handle: CollisionObjectSlabHandle) -> Option<(&mut NarrowPhase<N, CollisionObjectSlabHandle>,\n        impl Iterator<Item =\n                      (CollisionObjectSlabHandle, CollisionObjectSlabHandle,\n                       TemporaryInteractionIndex, &mut Interaction<N>)>)>","parent":null,"children":[],"decl_id":null,"docs":" All the mutable interactions pairs involving the specified collision object.","sig":null,"attributes":[{"value":"/ All the mutable interactions pairs involving the specified collision object.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":315928,"byte_end":316008,"line_start":539,"line_end":539,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":316013,"byte_end":316016,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ This also returns a mutable reference to the narrow-phase which is necessary for updating the interaction if needed.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":316021,"byte_end":316141,"line_start":541,"line_end":541,"column_start":5,"column_end":125}},{"value":"/ For interactions between a collision object and itself, only one mutable reference to the collision object is returned.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":316146,"byte_end":316269,"line_start":542,"line_end":542,"column_start":5,"column_end":128}}]},{"kind":"Method","id":{"krate":0,"index":2394},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":317174,"byte_end":317190,"line_start":569,"line_end":569,"column_start":12,"column_end":28},"name":"proximities_with","qualname":"<CollisionWorld<N, T>>::proximities_with","value":"fn (&self, handle: CollisionObjectSlabHandle, effective_only: bool) -> Option<impl Iterator<Item =\n                     (CollisionObjectSlabHandle, CollisionObjectSlabHandle,\n                      &dyn ProximityDetector<N>, Proximity)>>","parent":null,"children":[],"decl_id":null,"docs":" All the proximity pairs involving the specified collision object.","sig":null,"attributes":[{"value":"/ All the proximity pairs involving the specified collision object.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":316943,"byte_end":317012,"line_start":565,"line_end":565,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":317017,"byte_end":317020,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ Refer to the official [user guide](https://nphysics.org/interaction_handling_and_sensors/#interaction-iterators)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":317025,"byte_end":317141,"line_start":567,"line_end":567,"column_start":5,"column_end":121}},{"value":"/ for details.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":317146,"byte_end":317162,"line_start":568,"line_end":568,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":2396},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":317968,"byte_end":317981,"line_start":592,"line_end":592,"column_start":12,"column_end":25},"name":"contacts_with","qualname":"<CollisionWorld<N, T>>::contacts_with","value":"fn (&self, handle: CollisionObjectSlabHandle, effective_only: bool) -> Option<impl Iterator<Item =\n                     (CollisionObjectSlabHandle, CollisionObjectSlabHandle,\n                      &ContactAlgorithm<N>, &ContactManifold<N>)>>","parent":null,"children":[],"decl_id":null,"docs":" All the contact pairs involving the specified collision object.","sig":null,"attributes":[{"value":"/ All the contact pairs involving the specified collision object.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":317739,"byte_end":317806,"line_start":588,"line_end":588,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":317811,"byte_end":317814,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ Refer to the official [user guide](https://nphysics.org/interaction_handling_and_sensors/#interaction-iterators)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":317819,"byte_end":317935,"line_start":590,"line_end":590,"column_start":5,"column_end":121}},{"value":"/ for details.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":317940,"byte_end":317956,"line_start":591,"line_end":591,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":2398},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":318800,"byte_end":318834,"line_start":615,"line_end":615,"column_start":12,"column_end":46},"name":"collision_objects_interacting_with","qualname":"<CollisionWorld<N, T>>::collision_objects_interacting_with","value":"fn <'a> (&'a self, handle: CollisionObjectSlabHandle) -> Option<impl Iterator<Item = CollisionObjectSlabHandle> + 'a>","parent":null,"children":[],"decl_id":null,"docs":" All the collision object handles of collision objects interacting with the specified collision object.","sig":null,"attributes":[{"value":"/ All the collision object handles of collision objects interacting with the specified collision object.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":318532,"byte_end":318638,"line_start":611,"line_end":611,"column_start":5,"column_end":111}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":318643,"byte_end":318646,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ Refer to the official [user guide](https://nphysics.org/interaction_handling_and_sensors/#interaction-iterators)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":318651,"byte_end":318767,"line_start":613,"line_end":613,"column_start":5,"column_end":121}},{"value":"/ for details.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":318772,"byte_end":318788,"line_start":614,"line_end":614,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":2401},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":319468,"byte_end":319501,"line_start":629,"line_end":629,"column_start":12,"column_end":45},"name":"collision_objects_in_contact_with","qualname":"<CollisionWorld<N, T>>::collision_objects_in_contact_with","value":"fn <'a> (&'a self, handle: CollisionObjectSlabHandle) -> Option<impl Iterator<Item = CollisionObjectSlabHandle> + 'a>","parent":null,"children":[],"decl_id":null,"docs":" All the collision object handles of collision objects in potential contact with the specified collision\n object.","sig":null,"attributes":[{"value":"/ All the collision object handles of collision objects in potential contact with the specified collision","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":319183,"byte_end":319290,"line_start":624,"line_end":624,"column_start":5,"column_end":112}},{"value":"/ object.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":319295,"byte_end":319306,"line_start":625,"line_end":625,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":319311,"byte_end":319314,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ Refer to the official [user guide](https://nphysics.org/interaction_handling_and_sensors/#interaction-iterators)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":319319,"byte_end":319435,"line_start":627,"line_end":627,"column_start":5,"column_end":121}},{"value":"/ for details.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":319440,"byte_end":319456,"line_start":628,"line_end":628,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":2404},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":320139,"byte_end":320172,"line_start":643,"line_end":643,"column_start":12,"column_end":45},"name":"collision_objects_in_proximity_of","qualname":"<CollisionWorld<N, T>>::collision_objects_in_proximity_of","value":"fn <'a> (&'a self, handle: CollisionObjectSlabHandle) -> Option<impl Iterator<Item = CollisionObjectSlabHandle> + 'a>","parent":null,"children":[],"decl_id":null,"docs":" All the collision object handles of collision objects in potential proximity of with the specified\n collision object.","sig":null,"attributes":[{"value":"/ All the collision object handles of collision objects in potential proximity of with the specified","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":319849,"byte_end":319951,"line_start":638,"line_end":638,"column_start":5,"column_end":107}},{"value":"/ collision object.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":319956,"byte_end":319977,"line_start":639,"line_end":639,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":319982,"byte_end":319985,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ Refer to the official [user guide](https://nphysics.org/interaction_handling_and_sensors/#interaction-iterators)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":319990,"byte_end":320106,"line_start":641,"line_end":641,"column_start":5,"column_end":121}},{"value":"/ for details.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":320111,"byte_end":320127,"line_start":642,"line_end":642,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":2407},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":320603,"byte_end":320617,"line_start":658,"line_end":658,"column_start":12,"column_end":26},"name":"contact_events","qualname":"<CollisionWorld<N, T>>::contact_events","value":"fn (&self) -> &ContactEvents<CollisionObjectSlabHandle>","parent":null,"children":[],"decl_id":null,"docs":" The contact events pool.\n","sig":null,"attributes":[{"value":"/ The contact events pool.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":320563,"byte_end":320591,"line_start":657,"line_end":657,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2408},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":320768,"byte_end":320784,"line_start":663,"line_end":663,"column_start":12,"column_end":28},"name":"proximity_events","qualname":"<CollisionWorld<N, T>>::proximity_events","value":"fn (&self) -> &ProximityEvents<CollisionObjectSlabHandle>","parent":null,"children":[],"decl_id":null,"docs":" The proximity events pool.\n","sig":null,"attributes":[{"value":"/ The proximity events pool.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":320726,"byte_end":320756,"line_start":662,"line_end":662,"column_start":5,"column_end":35}}]},{"kind":"Mod","id":{"krate":0,"index":2409},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"procedural","qualname":"::procedural","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/mod.rs","parent":null,"children":[{"krate":0,"index":2410},{"krate":0,"index":2413},{"krate":0,"index":2416},{"krate":0,"index":2417},{"krate":0,"index":2420},{"krate":0,"index":2423},{"krate":0,"index":2426},{"krate":0,"index":2430},{"krate":0,"index":2434},{"krate":0,"index":2437},{"krate":0,"index":2578},{"krate":0,"index":2637},{"krate":0,"index":2668},{"krate":0,"index":2684},{"krate":0,"index":2695},{"krate":0,"index":2710},{"krate":0,"index":2724},{"krate":0,"index":2739},{"krate":0,"index":2759}],"decl_id":null,"docs":" Procedural mesh generation.\n","sig":null,"attributes":[{"value":"! Procedural mesh generation.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/mod.rs","byte_start":320895,"byte_end":320926,"line_start":1,"line_end":1,"column_start":1,"column_end":32}}]},{"kind":"Mod","id":{"krate":0,"index":2437},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"path","qualname":"::procedural::path","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/mod.rs","parent":null,"children":[{"krate":0,"index":2438},{"krate":0,"index":2439},{"krate":0,"index":2440},{"krate":0,"index":2444},{"krate":0,"index":2445},{"krate":0,"index":2448},{"krate":0,"index":2471},{"krate":0,"index":2485},{"krate":0,"index":2514},{"krate":0,"index":2538}],"decl_id":null,"docs":" Path generation.\n","sig":null,"attributes":[{"value":"cfg(feature = \"dim3\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/mod.rs","byte_start":321783,"byte_end":321807,"line_start":27,"line_end":27,"column_start":1,"column_end":25}},{"value":"! Path generation.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/mod.rs","byte_start":322099,"byte_end":322119,"line_start":1,"line_end":1,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":2457},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/arrowhead_cap.rs","byte_start":322696,"byte_end":322708,"line_start":7,"line_end":7,"column_start":12,"column_end":24},"name":"ArrowheadCap","qualname":"::procedural::path::arrowhead_cap::ArrowheadCap","value":"ArrowheadCap {  }","parent":null,"children":[{"krate":0,"index":2459},{"krate":0,"index":2460},{"krate":0,"index":2461}],"decl_id":null,"docs":" A cap that looks like an arrow.\n","sig":null,"attributes":[{"value":"/ A cap that looks like an arrow.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/arrowhead_cap.rs","byte_start":322649,"byte_end":322684,"line_start":6,"line_end":6,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2464},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/arrowhead_cap.rs","byte_start":323139,"byte_end":323142,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<ArrowheadCap<N>>::new","value":"fn (radius_scale: N, front_dist_to_head: N, back_dist_to_head: N) -> ArrowheadCap<N>","parent":null,"children":[],"decl_id":null,"docs":" Creates a cap that looks like an arrow.","sig":null,"attributes":[{"value":"/ Creates a cap that looks like an arrow.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/arrowhead_cap.rs","byte_start":322832,"byte_end":322875,"line_start":14,"line_end":14,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/arrowhead_cap.rs","byte_start":322880,"byte_end":322883,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ # Arguments:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/arrowhead_cap.rs","byte_start":322888,"byte_end":322904,"line_start":16,"line_end":16,"column_start":5,"column_end":21}},{"value":"/ * `radius_scale` - scale factor of the cap base.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/arrowhead_cap.rs","byte_start":322909,"byte_end":322961,"line_start":17,"line_end":17,"column_start":5,"column_end":57}},{"value":"/ * `front_dist_to_head` - distance from the path endpoint and the arrow tip.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/arrowhead_cap.rs","byte_start":322966,"byte_end":323045,"line_start":18,"line_end":18,"column_start":5,"column_end":84}},{"value":"/ * `back_dist_to_head` - distance from the path endpoint and the cap base.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/arrowhead_cap.rs","byte_start":323050,"byte_end":323127,"line_start":19,"line_end":19,"column_start":5,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":2477},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/no_cap.rs","byte_start":326798,"byte_end":326803,"line_start":6,"line_end":6,"column_start":12,"column_end":17},"name":"NoCap","qualname":"::procedural::path::no_cap::NoCap","value":"","parent":null,"children":[],"decl_id":null,"docs":" A cap that renders nothing.\n","sig":null,"attributes":[{"value":"/ A cap that renders nothing.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/no_cap.rs","byte_start":326755,"byte_end":326786,"line_start":5,"line_end":5,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2480},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/no_cap.rs","byte_start":326875,"byte_end":326878,"line_start":11,"line_end":11,"column_start":12,"column_end":15},"name":"new","qualname":"<NoCap>::new","value":"fn () -> NoCap","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `NoCap`.\n","sig":null,"attributes":[{"value":"/ Creates a new `NoCap`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/no_cap.rs","byte_start":326823,"byte_end":326849,"line_start":9,"line_end":9,"column_start":5,"column_end":31}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/no_cap.rs","byte_start":326854,"byte_end":326863,"line_start":10,"line_end":10,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2493},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/path.rs","byte_start":327631,"byte_end":327641,"line_start":9,"line_end":9,"column_start":5,"column_end":15},"name":"StartPoint","qualname":"::procedural::path::path::PathSample::StartPoint","value":"PathSample::StartPoint(Point<N>, Vector<N>)","parent":{"krate":0,"index":2491},"children":[],"decl_id":null,"docs":" A point that starts a new path.\n","sig":null,"attributes":[{"value":"/ A point that starts a new path.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/path.rs","byte_start":327591,"byte_end":327626,"line_start":8,"line_end":8,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2497},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/path.rs","byte_start":327732,"byte_end":327742,"line_start":11,"line_end":11,"column_start":5,"column_end":15},"name":"InnerPoint","qualname":"::procedural::path::path::PathSample::InnerPoint","value":"PathSample::InnerPoint(Point<N>, Vector<N>)","parent":{"krate":0,"index":2491},"children":[],"decl_id":null,"docs":" A point that is inside of the path currently generated.\n","sig":null,"attributes":[{"value":"/ A point that is inside of the path currently generated.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/path.rs","byte_start":327668,"byte_end":327727,"line_start":10,"line_end":10,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2501},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/path.rs","byte_start":327825,"byte_end":327833,"line_start":13,"line_end":13,"column_start":5,"column_end":13},"name":"EndPoint","qualname":"::procedural::path::path::PathSample::EndPoint","value":"PathSample::EndPoint(Point<N>, Vector<N>)","parent":{"krate":0,"index":2491},"children":[],"decl_id":null,"docs":" A point that ends the path currently generated.\n","sig":null,"attributes":[{"value":"/ A point that ends the path currently generated.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/path.rs","byte_start":327769,"byte_end":327820,"line_start":12,"line_end":12,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2505},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/path.rs","byte_start":327934,"byte_end":327945,"line_start":15,"line_end":15,"column_start":5,"column_end":16},"name":"EndOfSample","qualname":"::procedural::path::path::PathSample::EndOfSample","value":"PathSample::EndOfSample","parent":{"krate":0,"index":2491},"children":[],"decl_id":null,"docs":" Used when the sampler does not have any other points to generate.\n","sig":null,"attributes":[{"value":"/ Used when the sampler does not have any other points to generate.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/path.rs","byte_start":327860,"byte_end":327929,"line_start":14,"line_end":14,"column_start":5,"column_end":74}}]},{"kind":"Enum","id":{"krate":0,"index":2491},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/path.rs","byte_start":327560,"byte_end":327570,"line_start":7,"line_end":7,"column_start":10,"column_end":20},"name":"PathSample","qualname":"::procedural::path::path::PathSample","value":"PathSample::{StartPoint, InnerPoint, EndPoint, EndOfSample}","parent":null,"children":[{"krate":0,"index":2493},{"krate":0,"index":2497},{"krate":0,"index":2501},{"krate":0,"index":2505}],"decl_id":null,"docs":" A sample point and its associated tangent.\n","sig":null,"attributes":[{"value":"/ A sample point and its associated tangent.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/path.rs","byte_start":327504,"byte_end":327550,"line_start":6,"line_end":6,"column_start":1,"column_end":47}}]},{"kind":"Trait","id":{"krate":0,"index":2507},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/path.rs","byte_start":327981,"byte_end":327993,"line_start":19,"line_end":19,"column_start":11,"column_end":23},"name":"CurveSampler","qualname":"::procedural::path::path::CurveSampler","value":"CurveSampler<N: RealField>","parent":null,"children":[{"krate":0,"index":2509}],"decl_id":null,"docs":" A curve sampler.\n","sig":null,"attributes":[{"value":"/ A curve sampler.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/path.rs","byte_start":327950,"byte_end":327970,"line_start":18,"line_end":18,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":2509},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/path.rs","byte_start":328056,"byte_end":328060,"line_start":21,"line_end":21,"column_start":8,"column_end":12},"name":"next","qualname":"::procedural::path::path::CurveSampler::next","value":"fn (&mut self) -> PathSample<N>","parent":{"krate":0,"index":2507},"children":[],"decl_id":null,"docs":" Returns the next sample point.\n","sig":null,"attributes":[{"value":"/ Returns the next sample point.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/path.rs","byte_start":328014,"byte_end":328048,"line_start":20,"line_end":20,"column_start":5,"column_end":39}}]},{"kind":"Trait","id":{"krate":0,"index":2510},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/path.rs","byte_start":328213,"byte_end":328226,"line_start":27,"line_end":27,"column_start":11,"column_end":24},"name":"StrokePattern","qualname":"::procedural::path::path::StrokePattern","value":"StrokePattern<N: RealField>","parent":null,"children":[{"krate":0,"index":2512}],"decl_id":null,"docs":" A pattern that is replicated along a path.","sig":null,"attributes":[{"value":"/ A pattern that is replicated along a path.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/path.rs","byte_start":328093,"byte_end":328139,"line_start":24,"line_end":24,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/path.rs","byte_start":328140,"byte_end":328143,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ It is responsible of the generation of the whole mesh.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/path.rs","byte_start":328144,"byte_end":328202,"line_start":26,"line_end":26,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2512},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/path.rs","byte_start":328332,"byte_end":328338,"line_start":29,"line_end":29,"column_start":8,"column_end":14},"name":"stroke","qualname":"::procedural::path::path::StrokePattern::stroke","value":"fn <C> (&mut self, sampler: &mut C) -> TriMesh<N>","parent":{"krate":0,"index":2510},"children":[],"decl_id":null,"docs":" Generates the mesh using this pattern and the curve sampled by `sampler`.\n","sig":null,"attributes":[{"value":"/ Generates the mesh using this pattern and the curve sampled by `sampler`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/path.rs","byte_start":328247,"byte_end":328324,"line_start":28,"line_end":28,"column_start":5,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":2522},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/polyline_path.rs","byte_start":328649,"byte_end":328661,"line_start":8,"line_end":8,"column_start":12,"column_end":24},"name":"PolylinePath","qualname":"::procedural::path::polyline_path::PolylinePath","value":"PolylinePath {  }","parent":null,"children":[{"krate":0,"index":2525},{"krate":0,"index":2526},{"krate":0,"index":2527},{"krate":0,"index":2528},{"krate":0,"index":2529}],"decl_id":null,"docs":" A path with its sample points given by a polyline.","sig":null,"attributes":[{"value":"/ A path with its sample points given by a polyline.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/polyline_path.rs","byte_start":328516,"byte_end":328570,"line_start":5,"line_end":5,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/polyline_path.rs","byte_start":328571,"byte_end":328574,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This will return sequencially each vertex of the polyline.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/polyline_path.rs","byte_start":328575,"byte_end":328637,"line_start":7,"line_end":7,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2533},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/polyline_path.rs","byte_start":328910,"byte_end":328913,"line_start":18,"line_end":18,"column_start":12,"column_end":15},"name":"new","qualname":"<PolylinePath>::new","value":"fn (polyline: &'a Vec<Point<N>>) -> PolylinePath<'a, N>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new polyline-based path.\n","sig":null,"attributes":[{"value":"/ Creates a new polyline-based path.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/polyline_path.rs","byte_start":328860,"byte_end":328898,"line_start":17,"line_end":17,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":2554},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/polyline_pattern.rs","byte_start":330761,"byte_end":330776,"line_start":7,"line_end":7,"column_start":12,"column_end":27},"name":"PolylinePattern","qualname":"::procedural::path::polyline_pattern::PolylinePattern","value":"PolylinePattern {  }","parent":null,"children":[{"krate":0,"index":2558},{"krate":0,"index":2559},{"krate":0,"index":2560},{"krate":0,"index":2561},{"krate":0,"index":2562}],"decl_id":null,"docs":" A pattern composed of polyline and two caps.\n","sig":null,"attributes":[{"value":"/ A pattern composed of polyline and two caps.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/polyline_pattern.rs","byte_start":330701,"byte_end":330749,"line_start":6,"line_end":6,"column_start":1,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":2563},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/polyline_pattern.rs","byte_start":330994,"byte_end":331015,"line_start":16,"line_end":16,"column_start":11,"column_end":32},"name":"PolylineCompatibleCap","qualname":"::procedural::path::polyline_pattern::PolylineCompatibleCap","value":"PolylineCompatibleCap<N: RealField>","parent":null,"children":[{"krate":0,"index":2565},{"krate":0,"index":2566}],"decl_id":null,"docs":" Trait to be implemented by caps compatible with a `PolylinePattern`.\n","sig":null,"attributes":[{"value":"/ Trait to be implemented by caps compatible with a `PolylinePattern`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/polyline_pattern.rs","byte_start":330911,"byte_end":330983,"line_start":15,"line_end":15,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":2565},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/polyline_pattern.rs","byte_start":331106,"byte_end":331119,"line_start":18,"line_end":18,"column_start":8,"column_end":21},"name":"gen_start_cap","qualname":"::procedural::path::polyline_pattern::PolylineCompatibleCap::gen_start_cap","value":"fn (&self, attach_id: u32, pattern: &[Point3<N>], pt: &Point3<N>, dir: &Vector3<N>, closed: bool, coords: &mut Vec<Point3<N>>, indices: &mut Vec<Point3<u32>>) -> ()","parent":{"krate":0,"index":2563},"children":[],"decl_id":null,"docs":" Generates the mesh for the cap at the beginning of a path.\n","sig":null,"attributes":[{"value":"/ Generates the mesh for the cap at the beginning of a path.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/polyline_pattern.rs","byte_start":331036,"byte_end":331098,"line_start":17,"line_end":17,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2566},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/polyline_pattern.rs","byte_start":331416,"byte_end":331427,"line_start":30,"line_end":30,"column_start":8,"column_end":19},"name":"gen_end_cap","qualname":"::procedural::path::polyline_pattern::PolylineCompatibleCap::gen_end_cap","value":"fn (&self, attach_id: u32, pattern: &[Point3<N>], pt: &Point3<N>, dir: &Vector3<N>, closed: bool, coords: &mut Vec<Point3<N>>, indices: &mut Vec<Point3<u32>>) -> ()","parent":{"krate":0,"index":2563},"children":[],"decl_id":null,"docs":" Generates the mesh for the cap at the end of a path.\n","sig":null,"attributes":[{"value":"/ Generates the mesh for the cap at the end of a path.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/polyline_pattern.rs","byte_start":331352,"byte_end":331408,"line_start":29,"line_end":29,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2571},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/polyline_pattern.rs","byte_start":331846,"byte_end":331849,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<PolylinePattern<N, C1, C2>>::new","value":"fn (pattern: &[Point2<N>], closed: bool, start_cap: C1, end_cap: C2) -> PolylinePattern<N, C1, C2>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new polyline pattern.\n","sig":null,"attributes":[{"value":"/ Creates a new polyline pattern.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/polyline_pattern.rs","byte_start":331799,"byte_end":331834,"line_start":48,"line_end":48,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7164},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":336253,"byte_end":336260,"line_start":12,"line_end":12,"column_start":5,"column_end":12},"name":"Unified","qualname":"::procedural::trimesh::IndexBuffer::Unified","value":"IndexBuffer::Unified(Vec<Point3<u32>>)","parent":{"krate":0,"index":7163},"children":[],"decl_id":null,"docs":" The vertex, normal, and uvs share the same indices.\n","sig":null,"attributes":[{"value":"/ The vertex, normal, and uvs share the same indices.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":336193,"byte_end":336248,"line_start":11,"line_end":11,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7167},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":336344,"byte_end":336349,"line_start":14,"line_end":14,"column_start":5,"column_end":10},"name":"Split","qualname":"::procedural::trimesh::IndexBuffer::Split","value":"IndexBuffer::Split(Vec<Point3<Point3<u32>>>)","parent":{"krate":0,"index":7163},"children":[],"decl_id":null,"docs":" The vertex, normal, and uvs have different indices.\n","sig":null,"attributes":[{"value":"/ The vertex, normal, and uvs have different indices.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":336284,"byte_end":336339,"line_start":13,"line_end":13,"column_start":5,"column_end":60}}]},{"kind":"Enum","id":{"krate":0,"index":7163},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":336175,"byte_end":336186,"line_start":10,"line_end":10,"column_start":10,"column_end":21},"name":"IndexBuffer","qualname":"::procedural::trimesh::IndexBuffer","value":"IndexBuffer::{Unified, Split}","parent":null,"children":[{"krate":0,"index":7164},{"krate":0,"index":7167}],"decl_id":null,"docs":" Different representations of the index buffer.\n","sig":null,"attributes":[{"value":"/ Different representations of the index buffer.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":336028,"byte_end":336078,"line_start":7,"line_end":7,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2594},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":336480,"byte_end":336494,"line_start":20,"line_end":20,"column_start":12,"column_end":26},"name":"unwrap_unified","qualname":"<IndexBuffer>::unwrap_unified","value":"fn (self) -> Vec<Point3<u32>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the unified index buffer data or fails.\n","sig":null,"attributes":[{"value":"/ Returns the unified index buffer data or fails.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":336403,"byte_end":336454,"line_start":18,"line_end":18,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":336459,"byte_end":336468,"line_start":19,"line_end":19,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2595},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":336749,"byte_end":336761,"line_start":29,"line_end":29,"column_start":12,"column_end":24},"name":"unwrap_split","qualname":"<IndexBuffer>::unwrap_split","value":"fn (self) -> Vec<Point3<Point3<u32>>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the split index buffer data or fails.\n","sig":null,"attributes":[{"value":"/ Returns the split index buffer data or fails.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":336674,"byte_end":336723,"line_start":27,"line_end":27,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":336728,"byte_end":336737,"line_start":28,"line_end":28,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":7174},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":337077,"byte_end":337084,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"TriMesh","qualname":"::procedural::trimesh::TriMesh","value":"TriMesh { coords, normals, uvs, indices }","parent":null,"children":[{"krate":0,"index":7176},{"krate":0,"index":7177},{"krate":0,"index":7178},{"krate":0,"index":7179}],"decl_id":null,"docs":" Geometric description of a mesh.\n","sig":null,"attributes":[{"value":"/ Geometric description of a mesh.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":337029,"byte_end":337065,"line_start":39,"line_end":39,"column_start":1,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":7176},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":337195,"byte_end":337201,"line_start":43,"line_end":43,"column_start":9,"column_end":15},"name":"coords","qualname":"::procedural::trimesh::TriMesh::coords","value":"std::vec::Vec<na::Point<N, na::U3>>","parent":{"krate":0,"index":7174},"children":[],"decl_id":null,"docs":" Coordinates of the mesh vertices.\n","sig":null,"attributes":[{"value":"/ Coordinates of the mesh vertices.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":337149,"byte_end":337186,"line_start":42,"line_end":42,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":7177},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":337267,"byte_end":337274,"line_start":45,"line_end":45,"column_start":9,"column_end":16},"name":"normals","qualname":"::procedural::trimesh::TriMesh::normals","value":"std::option::Option<std::vec::Vec<na::Matrix<N, na::U3, na::U1, <na::DefaultAllocator as na::allocator::Allocator<N, na::U3>>::Buffer>>>","parent":{"krate":0,"index":7174},"children":[],"decl_id":null,"docs":" Coordinates of the mesh normals.\n","sig":null,"attributes":[{"value":"/ Coordinates of the mesh normals.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":337222,"byte_end":337258,"line_start":44,"line_end":44,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":7178},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":337350,"byte_end":337353,"line_start":47,"line_end":47,"column_start":9,"column_end":12},"name":"uvs","qualname":"::procedural::trimesh::TriMesh::uvs","value":"std::option::Option<std::vec::Vec<na::Point<N, na::U2>>>","parent":{"krate":0,"index":7174},"children":[],"decl_id":null,"docs":" Textures coordinates of the mesh.\n","sig":null,"attributes":[{"value":"/ Textures coordinates of the mesh.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":337304,"byte_end":337341,"line_start":46,"line_end":46,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":7179},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":337421,"byte_end":337428,"line_start":49,"line_end":49,"column_start":9,"column_end":16},"name":"indices","qualname":"::procedural::trimesh::TriMesh::indices","value":"procedural::trimesh::IndexBuffer","parent":{"krate":0,"index":7174},"children":[],"decl_id":null,"docs":" Index buffer of the mesh.\n","sig":null,"attributes":[{"value":"/ Index buffer of the mesh.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":337383,"byte_end":337412,"line_start":48,"line_end":48,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2598},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":337610,"byte_end":337613,"line_start":56,"line_end":56,"column_start":12,"column_end":15},"name":"new","qualname":"<TriMesh<N>>::new","value":"fn (coords: Vec<Point<N>>, normals: Option<Vec<Vector<N>>>, uvs: Option<Vec<Point2<N>>>, indices: Option<IndexBuffer>) -> TriMesh<N>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `TriMesh`.","sig":null,"attributes":[{"value":"/ Creates a new `TriMesh`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":337482,"byte_end":337510,"line_start":53,"line_end":53,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":337515,"byte_end":337518,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ If no `indices` is provided, trivial, sequential indices are generated.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":337523,"byte_end":337598,"line_start":55,"line_end":55,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":2601},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":338310,"byte_end":338321,"line_start":81,"line_end":81,"column_start":12,"column_end":23},"name":"has_normals","qualname":"<TriMesh<N>>::has_normals","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether or not this triangle mesh has normals.\n","sig":null,"attributes":[{"value":"/ Whether or not this triangle mesh has normals.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":338234,"byte_end":338284,"line_start":79,"line_end":79,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":338289,"byte_end":338298,"line_start":80,"line_end":80,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2602},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":338469,"byte_end":338476,"line_start":87,"line_end":87,"column_start":12,"column_end":19},"name":"has_uvs","qualname":"<TriMesh<N>>::has_uvs","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether or not this triangle mesh has texture coordinates.\n","sig":null,"attributes":[{"value":"/ Whether or not this triangle mesh has texture coordinates.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":338381,"byte_end":338443,"line_start":85,"line_end":85,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":338448,"byte_end":338457,"line_start":86,"line_end":86,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2603},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":338598,"byte_end":338610,"line_start":93,"line_end":93,"column_start":12,"column_end":24},"name":"translate_by","qualname":"<TriMesh<N>>::translate_by","value":"fn (&mut self, t: &Translation<N>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Translates each vertex of this mesh.\n","sig":null,"attributes":[{"value":"/ Translates each vertex of this mesh.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":338532,"byte_end":338572,"line_start":91,"line_end":91,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":338577,"byte_end":338586,"line_start":92,"line_end":92,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2604},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":338823,"byte_end":338835,"line_start":101,"line_end":101,"column_start":12,"column_end":24},"name":"transform_by","qualname":"<TriMesh<N>>::transform_by","value":"fn (&mut self, t: &Isometry<N>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Transforms each vertex and rotates each normal of this mesh.\n","sig":null,"attributes":[{"value":"/ Transforms each vertex and rotates each normal of this mesh.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":338733,"byte_end":338797,"line_start":99,"line_end":99,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":338802,"byte_end":338811,"line_start":100,"line_end":100,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2605},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":339156,"byte_end":339169,"line_start":115,"line_end":115,"column_start":12,"column_end":25},"name":"num_triangles","qualname":"<TriMesh<N>>::num_triangles","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The number of triangles on this mesh.\n","sig":null,"attributes":[{"value":"/ The number of triangles on this mesh.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":339089,"byte_end":339130,"line_start":113,"line_end":113,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":339135,"byte_end":339144,"line_start":114,"line_end":114,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2606},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":339428,"byte_end":339440,"line_start":124,"line_end":124,"column_start":12,"column_end":24},"name":"flat_indices","qualname":"<TriMesh<N>>::flat_indices","value":"fn (&self) -> Vec<u32>","parent":null,"children":[],"decl_id":null,"docs":" Returns only the vertex ids from the index buffer.\n","sig":null,"attributes":[{"value":"/ Returns only the vertex ids from the index buffer.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":339348,"byte_end":339402,"line_start":122,"line_end":122,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":339407,"byte_end":339416,"line_start":123,"line_end":123,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2609},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":340224,"byte_end":340241,"line_start":152,"line_end":152,"column_start":12,"column_end":29},"name":"recompute_normals","qualname":"<TriMesh<N>>::recompute_normals","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Recomputes the mesh normals using its vertex coordinates and adjascency informations\n infered from the index buffer.\n","sig":null,"attributes":[{"value":"/ Recomputes the mesh normals using its vertex coordinates and adjascency informations","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":340071,"byte_end":340159,"line_start":149,"line_end":149,"column_start":5,"column_end":93}},{"value":"/ infered from the index buffer.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":340164,"byte_end":340198,"line_start":150,"line_end":150,"column_start":5,"column_end":39}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":340203,"byte_end":340212,"line_start":151,"line_end":151,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2611},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":341167,"byte_end":341179,"line_start":177,"line_end":177,"column_start":12,"column_end":24},"name":"flip_normals","qualname":"<TriMesh<N>>::flip_normals","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Flips all the normals of this mesh.\n","sig":null,"attributes":[{"value":"/ Flips all the normals of this mesh.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":341102,"byte_end":341141,"line_start":175,"line_end":175,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":341146,"byte_end":341155,"line_start":176,"line_end":176,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2612},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":341420,"byte_end":341434,"line_start":187,"line_end":187,"column_start":12,"column_end":26},"name":"flip_triangles","qualname":"<TriMesh<N>>::flip_triangles","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Flips the orientation of every triangle of this mesh.\n","sig":null,"attributes":[{"value":"/ Flips the orientation of every triangle of this mesh.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":341337,"byte_end":341394,"line_start":185,"line_end":185,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":341399,"byte_end":341408,"line_start":186,"line_end":186,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2613},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":341886,"byte_end":341894,"line_start":204,"line_end":204,"column_start":12,"column_end":20},"name":"scale_by","qualname":"<TriMesh<N>>::scale_by","value":"fn (&mut self, s: &Vector<N>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Scales each vertex of this mesh.\n","sig":null,"attributes":[{"value":"/ Scales each vertex of this mesh.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":341824,"byte_end":341860,"line_start":202,"line_end":202,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":341865,"byte_end":341874,"line_start":203,"line_end":203,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2616},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":342213,"byte_end":342228,"line_start":217,"line_end":217,"column_start":12,"column_end":27},"name":"scale_by_scalar","qualname":"<TriMesh<N>>::scale_by_scalar","value":"fn (&mut self, s: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Scales each vertex of this mesh.\n","sig":null,"attributes":[{"value":"/ Scales each vertex of this mesh.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":342151,"byte_end":342187,"line_start":215,"line_end":215,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":342192,"byte_end":342201,"line_start":216,"line_end":216,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2619},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":342678,"byte_end":342696,"line_start":230,"line_end":230,"column_start":12,"column_end":30},"name":"unify_index_buffer","qualname":"<TriMesh<N>>::unify_index_buffer","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Force the mesh to use the same index for vertices, normals and uvs.","sig":null,"attributes":[{"value":"/ Force the mesh to use the same index for vertices, normals and uvs.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":342430,"byte_end":342501,"line_start":226,"line_end":226,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":342506,"byte_end":342509,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ This might cause the duplication of some vertices, normals and uvs.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":342514,"byte_end":342585,"line_start":228,"line_end":228,"column_start":5,"column_end":76}},{"value":"/ Use this method to transform the mesh data to a OpenGL-compliant format.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":342590,"byte_end":342666,"line_start":229,"line_end":229,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":2626},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":345088,"byte_end":345106,"line_start":291,"line_end":291,"column_start":12,"column_end":30},"name":"replicate_vertices","qualname":"<TriMesh<N>>::replicate_vertices","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Unifies the index buffer and ensure duplicate each vertex\n are duplicated such that no two vertex entry of the index buffer\n are equal.\n","sig":null,"attributes":[{"value":"/ Unifies the index buffer and ensure duplicate each vertex","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":344923,"byte_end":344984,"line_start":288,"line_end":288,"column_start":5,"column_end":66}},{"value":"/ are duplicated such that no two vertex entry of the index buffer","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":344989,"byte_end":345057,"line_start":289,"line_end":289,"column_start":5,"column_end":73}},{"value":"/ are equal.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":345062,"byte_end":345076,"line_start":290,"line_end":290,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":2635},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":347443,"byte_end":347461,"line_start":353,"line_end":353,"column_start":12,"column_end":30},"name":"split_index_buffer","qualname":"<TriMesh<N>>::split_index_buffer","value":"fn (&mut self, recover_topology: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Forces the mesh to use a different index for the vertices, normals and uvs.","sig":null,"attributes":[{"value":"/ Forces the mesh to use a different index for the vertices, normals and uvs.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":347252,"byte_end":347331,"line_start":350,"line_end":350,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":347336,"byte_end":347339,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ If `recover_topology` is true, this will merge exactly identical vertices together.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":347344,"byte_end":347431,"line_start":352,"line_end":352,"column_start":5,"column_end":92}}]},{"kind":"Mod","id":{"krate":0,"index":2637},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/utils.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"utils","qualname":"::procedural::utils","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/utils.rs","parent":null,"children":[{"krate":0,"index":2638},{"krate":0,"index":2641},{"krate":0,"index":2644},{"krate":0,"index":2645},{"krate":0,"index":2646},{"krate":0,"index":2647},{"krate":0,"index":2648},{"krate":0,"index":2649},{"krate":0,"index":2650},{"krate":0,"index":2652},{"krate":0,"index":2654},{"krate":0,"index":2655},{"krate":0,"index":2656},{"krate":0,"index":2657},{"krate":0,"index":2658},{"krate":0,"index":2659},{"krate":0,"index":2660},{"krate":0,"index":2661},{"krate":0,"index":2662},{"krate":0,"index":2666}],"decl_id":null,"docs":" Utilities useful for various generations tasks.\n","sig":null,"attributes":[{"value":"! Utilities useful for various generations tasks.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/utils.rs","byte_start":348146,"byte_end":348197,"line_start":1,"line_end":1,"column_start":1,"column_end":52}}]},{"kind":"Function","id":{"krate":0,"index":2650},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/utils.rs","byte_start":348727,"byte_end":348738,"line_start":22,"line_end":22,"column_start":8,"column_end":19},"name":"push_circle","qualname":"::procedural::utils::push_circle","value":"fn <N> (radius: N, nsubdiv: u32, dtheta: N, y: N, out: &mut Vec<Point<N>>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Pushes a discretized counterclockwise circle to a buffer.\n","sig":null,"attributes":[{"value":"/ Pushes a discretized counterclockwise circle to a buffer.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/utils.rs","byte_start":348623,"byte_end":348684,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"cfg(feature = \"dim3\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/utils.rs","byte_start":348685,"byte_end":348709,"line_start":20,"line_end":20,"column_start":1,"column_end":25}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/utils.rs","byte_start":348710,"byte_end":348719,"line_start":21,"line_end":21,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2652},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/utils.rs","byte_start":349254,"byte_end":349265,"line_start":44,"line_end":44,"column_start":8,"column_end":19},"name":"push_xy_arc","qualname":"::procedural::utils::push_xy_arc","value":"fn <N> (radius: N, nsubdiv: u32, dtheta: N, out: &mut Vec<Point<N>>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Pushes a discretized counterclockwise circle to a buffer.\n The circle is contained on the plane spanned by the `x` and `y` axis.\n","sig":null,"attributes":[{"value":"/ Pushes a discretized counterclockwise circle to a buffer.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/utils.rs","byte_start":349101,"byte_end":349162,"line_start":41,"line_end":41,"column_start":1,"column_end":62}},{"value":"/ The circle is contained on the plane spanned by the `x` and `y` axis.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/utils.rs","byte_start":349163,"byte_end":349236,"line_start":42,"line_end":42,"column_start":1,"column_end":74}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/utils.rs","byte_start":349237,"byte_end":349246,"line_start":43,"line_end":43,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2654},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/utils.rs","byte_start":349757,"byte_end":349774,"line_start":61,"line_end":61,"column_start":8,"column_end":25},"name":"push_ring_indices","qualname":"::procedural::utils::push_ring_indices","value":"fn (base_lower_circle: u32, base_upper_circle: u32, nsubdiv: u32, out: &mut Vec<Point<u32>>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Creates the faces from two circles with the same discretization.\n","sig":null,"attributes":[{"value":"/ Creates the faces from two circles with the same discretization.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/utils.rs","byte_start":349646,"byte_end":349714,"line_start":58,"line_end":58,"column_start":1,"column_end":69}},{"value":"cfg(feature = \"dim3\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/utils.rs","byte_start":349715,"byte_end":349739,"line_start":59,"line_end":59,"column_start":1,"column_end":25}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/utils.rs","byte_start":349740,"byte_end":349749,"line_start":60,"line_end":60,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2655},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/utils.rs","byte_start":350301,"byte_end":350323,"line_start":82,"line_end":82,"column_start":8,"column_end":30},"name":"push_open_ring_indices","qualname":"::procedural::utils::push_open_ring_indices","value":"fn (base_lower_circle: u32, base_upper_circle: u32, nsubdiv: u32, out: &mut Vec<Point<u32>>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Creates the faces from two circles with the same discretization.\n","sig":null,"attributes":[{"value":"/ Creates the faces from two circles with the same discretization.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/utils.rs","byte_start":350190,"byte_end":350258,"line_start":79,"line_end":79,"column_start":1,"column_end":69}},{"value":"cfg(feature = \"dim3\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/utils.rs","byte_start":350259,"byte_end":350283,"line_start":80,"line_end":80,"column_start":1,"column_end":25}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/utils.rs","byte_start":350284,"byte_end":350293,"line_start":81,"line_end":81,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2656},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/utils.rs","byte_start":350769,"byte_end":350801,"line_start":100,"line_end":100,"column_start":8,"column_end":40},"name":"push_degenerate_top_ring_indices","qualname":"::procedural::utils::push_degenerate_top_ring_indices","value":"fn (base_circle: u32, point: u32, nsubdiv: u32, out: &mut Vec<Point<u32>>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Creates the faces from a circle and a point that is shared by all triangle.\n","sig":null,"attributes":[{"value":"/ Creates the faces from a circle and a point that is shared by all triangle.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/utils.rs","byte_start":350647,"byte_end":350726,"line_start":97,"line_end":97,"column_start":1,"column_end":80}},{"value":"cfg(feature = \"dim3\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/utils.rs","byte_start":350727,"byte_end":350751,"line_start":98,"line_end":98,"column_start":1,"column_end":25}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/utils.rs","byte_start":350752,"byte_end":350761,"line_start":99,"line_end":99,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2657},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/utils.rs","byte_start":351170,"byte_end":351207,"line_start":114,"line_end":114,"column_start":8,"column_end":45},"name":"push_degenerate_open_top_ring_indices","qualname":"::procedural::utils::push_degenerate_open_top_ring_indices","value":"fn (base_circle: u32, point: u32, nsubdiv: u32, out: &mut Vec<Point<u32>>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Creates the faces from a circle and a point that is shared by all triangle.\n","sig":null,"attributes":[{"value":"/ Creates the faces from a circle and a point that is shared by all triangle.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/utils.rs","byte_start":351048,"byte_end":351127,"line_start":111,"line_end":111,"column_start":1,"column_end":80}},{"value":"cfg(feature = \"dim3\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/utils.rs","byte_start":351128,"byte_end":351152,"line_start":112,"line_end":112,"column_start":1,"column_end":25}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/utils.rs","byte_start":351153,"byte_end":351162,"line_start":113,"line_end":113,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2658},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/utils.rs","byte_start":351652,"byte_end":351678,"line_start":132,"line_end":132,"column_start":8,"column_end":34},"name":"push_filled_circle_indices","qualname":"::procedural::utils::push_filled_circle_indices","value":"fn (base_circle: u32, nsubdiv: u32, out: &mut Vec<Point<u32>>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Pushes indices so that a circle is filled with triangles. Each triangle will have the\n `base_circle` point in common.\n Pushes `nsubdiv - 2` elements to `out`.\n","sig":null,"attributes":[{"value":"/ Pushes indices so that a circle is filled with triangles. Each triangle will have the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/utils.rs","byte_start":351441,"byte_end":351530,"line_start":127,"line_end":127,"column_start":1,"column_end":90}},{"value":"/ `base_circle` point in common.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/utils.rs","byte_start":351531,"byte_end":351565,"line_start":128,"line_end":128,"column_start":1,"column_end":35}},{"value":"/ Pushes `nsubdiv - 2` elements to `out`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/utils.rs","byte_start":351566,"byte_end":351609,"line_start":129,"line_end":129,"column_start":1,"column_end":44}},{"value":"cfg(feature = \"dim3\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/utils.rs","byte_start":351610,"byte_end":351634,"line_start":130,"line_end":130,"column_start":1,"column_end":25}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/utils.rs","byte_start":351635,"byte_end":351644,"line_start":131,"line_end":131,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2659},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/utils.rs","byte_start":352136,"byte_end":352158,"line_start":147,"line_end":147,"column_start":8,"column_end":30},"name":"push_rectangle_indices","qualname":"::procedural::utils::push_rectangle_indices","value":"fn (ul: u32, ur: u32, dl: u32, dr: u32, out: &mut Vec<Point<u32>>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Given four corner points, pushes to two counterclockwise triangles to `out`.","sig":null,"attributes":[{"value":"/ Given four corner points, pushes to two counterclockwise triangles to `out`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/utils.rs","byte_start":351860,"byte_end":351940,"line_start":138,"line_end":138,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/utils.rs","byte_start":351941,"byte_end":351944,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ # Arguments:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/utils.rs","byte_start":351945,"byte_end":351961,"line_start":140,"line_end":140,"column_start":1,"column_end":17}},{"value":"/ * `ul` - the up-left point.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/utils.rs","byte_start":351962,"byte_end":351993,"line_start":141,"line_end":141,"column_start":1,"column_end":32}},{"value":"/ * `dl` - the down-left point.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/utils.rs","byte_start":351994,"byte_end":352027,"line_start":142,"line_end":142,"column_start":1,"column_end":34}},{"value":"/ * `dr` - the down-left point.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/utils.rs","byte_start":352028,"byte_end":352061,"line_start":143,"line_end":143,"column_start":1,"column_end":34}},{"value":"/ * `ur` - the up-left point.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/utils.rs","byte_start":352062,"byte_end":352093,"line_start":144,"line_end":144,"column_start":1,"column_end":32}},{"value":"cfg(feature = \"dim3\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/utils.rs","byte_start":352094,"byte_end":352118,"line_start":145,"line_end":145,"column_start":1,"column_end":25}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/utils.rs","byte_start":352119,"byte_end":352128,"line_start":146,"line_end":146,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2660},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/utils.rs","byte_start":352409,"byte_end":352428,"line_start":155,"line_end":155,"column_start":8,"column_end":27},"name":"reverse_clockwising","qualname":"::procedural::utils::reverse_clockwising","value":"fn (indices: &mut [Point<u32>]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reverses the clockwising of a set of faces.\n","sig":null,"attributes":[{"value":"/ Reverses the clockwising of a set of faces.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/utils.rs","byte_start":352319,"byte_end":352366,"line_start":152,"line_end":152,"column_start":1,"column_end":48}},{"value":"cfg(feature = \"dim3\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/utils.rs","byte_start":352367,"byte_end":352391,"line_start":153,"line_end":153,"column_start":1,"column_end":25}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/utils.rs","byte_start":352392,"byte_end":352401,"line_start":154,"line_end":154,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2661},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/utils.rs","byte_start":352758,"byte_end":352776,"line_start":166,"line_end":166,"column_start":8,"column_end":26},"name":"split_index_buffer","qualname":"::procedural::utils::split_index_buffer","value":"fn (indices: &[Point<u32>]) -> Vec<Point<Point<u32>>>","parent":null,"children":[],"decl_id":null,"docs":" Duplicates the indices of each triangle on the given index buffer.","sig":null,"attributes":[{"value":"/ Duplicates the indices of each triangle on the given index buffer.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/utils.rs","byte_start":352541,"byte_end":352611,"line_start":161,"line_end":161,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/utils.rs","byte_start":352612,"byte_end":352615,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ For example: [ (0.0, 1.0, 2.0) ] becomes: [ (0.0, 0.0, 0.0), (1.0, 1.0, 1.0), (2.0, 2.0, 2.0)].","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/utils.rs","byte_start":352616,"byte_end":352715,"line_start":163,"line_end":163,"column_start":1,"column_end":100}},{"value":"cfg(feature = \"dim3\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/utils.rs","byte_start":352716,"byte_end":352740,"line_start":164,"line_end":164,"column_start":1,"column_end":25}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/utils.rs","byte_start":352741,"byte_end":352750,"line_start":165,"line_end":165,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2662},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/utils.rs","byte_start":353281,"byte_end":353320,"line_start":184,"line_end":184,"column_start":8,"column_end":47},"name":"split_index_buffer_and_recover_topology","qualname":"::procedural::utils::split_index_buffer_and_recover_topology","value":"fn <N> (indices: &[Point<u32>], coords: &[Point<N>]) -> (Vec<Point<Point<u32>>>, Vec<Point<N>>)","parent":null,"children":[],"decl_id":null,"docs":" Duplicates the indices of each triangle on the given index buffer, giving the same id to each\n identical vertex.\n","sig":null,"attributes":[{"value":"/ Duplicates the indices of each triangle on the given index buffer, giving the same id to each","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/utils.rs","byte_start":353119,"byte_end":353216,"line_start":180,"line_end":180,"column_start":1,"column_end":98}},{"value":"/ identical vertex.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/utils.rs","byte_start":353217,"byte_end":353238,"line_start":181,"line_end":181,"column_start":1,"column_end":22}},{"value":"cfg(feature = \"dim3\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/utils.rs","byte_start":353239,"byte_end":353263,"line_start":182,"line_end":182,"column_start":1,"column_end":25}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/utils.rs","byte_start":353264,"byte_end":353273,"line_start":183,"line_end":183,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2666},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/utils.rs","byte_start":354930,"byte_end":354945,"line_start":236,"line_end":236,"column_start":8,"column_end":23},"name":"compute_normals","qualname":"::procedural::utils::compute_normals","value":"fn <N> (coordinates: &[Point<N>], faces: &[Point<u32>], normals: &mut Vec<Vector<N>>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the normals of a set of vertices.\n","sig":null,"attributes":[{"value":"/ Computes the normals of a set of vertices.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/utils.rs","byte_start":354841,"byte_end":354887,"line_start":233,"line_end":233,"column_start":1,"column_end":47}},{"value":"cfg(feature = \"dim3\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/utils.rs","byte_start":354888,"byte_end":354912,"line_start":234,"line_end":234,"column_start":1,"column_end":25}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/utils.rs","byte_start":354913,"byte_end":354922,"line_start":235,"line_end":235,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2676},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/bezier.rs","byte_start":356601,"byte_end":356616,"line_start":11,"line_end":11,"column_start":8,"column_end":23},"name":"bezier_curve_at","qualname":"::procedural::bezier::bezier_curve_at","value":"fn <N> (control_points: &[Point<N>], t: N, cache: &mut Vec<Point<N>>) -> Point<N>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2678},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/bezier.rs","byte_start":357515,"byte_end":357532,"line_start":47,"line_end":47,"column_start":8,"column_end":25},"name":"bezier_surface_at","qualname":"::procedural::bezier::bezier_surface_at","value":"fn <N> (control_points: &[Point<N>], nupoints: usize, nvpoints: usize, u: N, v: N, ucache: &mut Vec<Point<N>>, vcache: &mut Vec<Point<N>>) -> Point<N>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"dim3\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/bezier.rs","byte_start":357468,"byte_end":357492,"line_start":45,"line_end":45,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2680},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/bezier.rs","byte_start":358339,"byte_end":358351,"line_start":78,"line_end":78,"column_start":8,"column_end":20},"name":"bezier_curve","qualname":"::procedural::bezier::bezier_curve","value":"fn <N> (control_points: &[Point<N>], nsubdivs: usize) -> Vec<Point<N>>","parent":null,"children":[],"decl_id":null,"docs":" Given a set of control points, generates a (non-rational) Bezier curve.\n","sig":null,"attributes":[{"value":"/ Given a set of control points, generates a (non-rational) Bezier curve.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/bezier.rs","byte_start":358256,"byte_end":358331,"line_start":77,"line_end":77,"column_start":1,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":2682},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/bezier.rs","byte_start":358852,"byte_end":358866,"line_start":94,"line_end":94,"column_start":8,"column_end":22},"name":"bezier_surface","qualname":"::procedural::bezier::bezier_surface","value":"fn <N> (control_points: &[Point<N>], nupoints: usize, nvpoints: usize, usubdivs: usize, vsubdivs: usize) -> TriMesh<N>","parent":null,"children":[],"decl_id":null,"docs":" Given a set of control points, generates a (non-rational) Bezier surface.\n","sig":null,"attributes":[{"value":"/ Given a set of control points, generates a (non-rational) Bezier surface.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/bezier.rs","byte_start":358742,"byte_end":358819,"line_start":92,"line_end":92,"column_start":1,"column_end":78}},{"value":"cfg(feature = \"dim3\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/bezier.rs","byte_start":358820,"byte_end":358844,"line_start":93,"line_end":93,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2693},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/capsule.rs","byte_start":360015,"byte_end":360022,"line_start":7,"line_end":7,"column_start":8,"column_end":15},"name":"capsule","qualname":"::procedural::capsule::capsule","value":"fn <N> (caps_diameter: &N, cylinder_height: &N, ntheta_subdiv: u32, nphi_subdiv: u32) -> TriMesh<N>","parent":null,"children":[],"decl_id":null,"docs":" Generates a capsule.\n","sig":null,"attributes":[{"value":"/ Generates a capsule.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/capsule.rs","byte_start":359983,"byte_end":360007,"line_start":6,"line_end":6,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2705},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/cone.rs","byte_start":362267,"byte_end":362271,"line_start":8,"line_end":8,"column_start":8,"column_end":12},"name":"cone","qualname":"::procedural::cone::cone","value":"fn <N> (diameter: N, height: N, nsubdiv: u32) -> TriMesh<N>","parent":null,"children":[],"decl_id":null,"docs":" Generates a cone with a given height and diameter.\n","sig":null,"attributes":[{"value":"/ Generates a cone with a given height and diameter.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/cone.rs","byte_start":362205,"byte_end":362259,"line_start":7,"line_end":7,"column_start":1,"column_end":55}}]},{"kind":"Function","id":{"krate":0,"index":2707},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/cone.rs","byte_start":362514,"byte_end":362523,"line_start":17,"line_end":17,"column_start":8,"column_end":17},"name":"unit_cone","qualname":"::procedural::cone::unit_cone","value":"fn <N> (nsubdiv: u32) -> TriMesh<N>","parent":null,"children":[],"decl_id":null,"docs":" Generates a cone with unit height and diameter.\n","sig":null,"attributes":[{"value":"/ Generates a cone with unit height and diameter.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/cone.rs","byte_start":362455,"byte_end":362506,"line_start":16,"line_end":16,"column_start":1,"column_end":52}}]},{"kind":"Function","id":{"krate":0,"index":2720},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/cuboid.rs","byte_start":364611,"byte_end":364617,"line_start":18,"line_end":18,"column_start":8,"column_end":14},"name":"cuboid","qualname":"::procedural::cuboid::cuboid","value":"fn <N> (extents: &Vector<N>) -> TriMesh<N>","parent":null,"children":[],"decl_id":null,"docs":" Generates a cuboid shape with a split index buffer.","sig":null,"attributes":[{"value":"*\n * Generates a cuboid shape with a split index buffer.\n *\n * # Arguments:\n * * `extents` - the extents of the cuboid.\n */","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/cuboid.rs","byte_start":364453,"byte_end":364578,"line_start":11,"line_end":16,"column_start":1,"column_end":4}},{"value":"cfg(feature = \"dim3\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/cuboid.rs","byte_start":364579,"byte_end":364603,"line_start":17,"line_end":17,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2722},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/cuboid.rs","byte_start":364926,"byte_end":364937,"line_start":31,"line_end":31,"column_start":8,"column_end":19},"name":"unit_cuboid","qualname":"::procedural::cuboid::unit_cuboid","value":"fn <N> () -> TriMesh<N>","parent":null,"children":[],"decl_id":null,"docs":" Generates a cuboid shape with a split index buffer.","sig":null,"attributes":[{"value":"*\n * Generates a cuboid shape with a split index buffer.\n *\n * The cuboid is centered at the origin, and has its half extents set to 0.5.\n */","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/cuboid.rs","byte_start":364750,"byte_end":364893,"line_start":25,"line_end":29,"column_start":1,"column_end":4}},{"value":"cfg(feature = \"dim3\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/cuboid.rs","byte_start":364894,"byte_end":364918,"line_start":30,"line_end":30,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2734},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/cylinder.rs","byte_start":368629,"byte_end":368637,"line_start":8,"line_end":8,"column_start":8,"column_end":16},"name":"cylinder","qualname":"::procedural::cylinder::cylinder","value":"fn <N> (diameter: N, height: N, nsubdiv: u32) -> TriMesh<N>","parent":null,"children":[],"decl_id":null,"docs":" Generates a cylinder with a given height and diameter.\n","sig":null,"attributes":[{"value":"/ Generates a cylinder with a given height and diameter.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/cylinder.rs","byte_start":368563,"byte_end":368621,"line_start":7,"line_end":7,"column_start":1,"column_end":59}}]},{"kind":"Function","id":{"krate":0,"index":2736},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/cylinder.rs","byte_start":368900,"byte_end":368913,"line_start":17,"line_end":17,"column_start":8,"column_end":21},"name":"unit_cylinder","qualname":"::procedural::cylinder::unit_cylinder","value":"fn <N> (nsubdiv: u32) -> TriMesh<N>","parent":null,"children":[],"decl_id":null,"docs":" Generates a cylinder with unit height and diameter.\n","sig":null,"attributes":[{"value":"/ Generates a cylinder with unit height and diameter.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/cylinder.rs","byte_start":368837,"byte_end":368892,"line_start":16,"line_end":16,"column_start":1,"column_end":56}}]},{"kind":"Function","id":{"krate":0,"index":2751},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/quad.rs","byte_start":372237,"byte_end":372241,"line_start":18,"line_end":18,"column_start":8,"column_end":12},"name":"quad","qualname":"::procedural::quad::quad","value":"fn <N> (width: N, height: N, usubdivs: usize, vsubdivs: usize) -> TriMesh<N>","parent":null,"children":[],"decl_id":null,"docs":" Adds a double-sided quad to the scene.","sig":null,"attributes":[{"value":"/ Adds a double-sided quad to the scene.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/quad.rs","byte_start":371561,"byte_end":371603,"line_start":5,"line_end":5,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/quad.rs","byte_start":371604,"byte_end":371607,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ The quad is initially centered at (0, 0, 0). Its normal is the `z` axis. The quad itself is","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/quad.rs","byte_start":371608,"byte_end":371703,"line_start":7,"line_end":7,"column_start":1,"column_end":96}},{"value":"/ composed of a user-defined number of triangles regularly spaced on a grid. This is the main way","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/quad.rs","byte_start":371704,"byte_end":371803,"line_start":8,"line_end":8,"column_start":1,"column_end":100}},{"value":"/ to draw height maps.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/quad.rs","byte_start":371804,"byte_end":371828,"line_start":9,"line_end":9,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/quad.rs","byte_start":371829,"byte_end":371832,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Arguments","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/quad.rs","byte_start":371833,"byte_end":371848,"line_start":11,"line_end":11,"column_start":1,"column_end":16}},{"value":"/ * `w` - the quad width.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/quad.rs","byte_start":371849,"byte_end":371876,"line_start":12,"line_end":12,"column_start":1,"column_end":28}},{"value":"/ * `h` - the quad height.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/quad.rs","byte_start":371877,"byte_end":371905,"line_start":13,"line_end":13,"column_start":1,"column_end":29}},{"value":"/ * `usubdivs` - number of horizontal subdivisions. This correspond to the number of squares","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/quad.rs","byte_start":371906,"byte_end":372000,"line_start":14,"line_end":14,"column_start":1,"column_end":95}},{"value":"/ which will be placed horizontally on each line. Must not be `0`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/quad.rs","byte_start":372001,"byte_end":372069,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ * `vsubdivs` - number of vertical subdivisions. This correspond to the number of squares","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/quad.rs","byte_start":372070,"byte_end":372162,"line_start":16,"line_end":16,"column_start":1,"column_end":93}},{"value":"/ which will be placed vertically on each line. Must not be `0`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/quad.rs","byte_start":372163,"byte_end":372229,"line_start":17,"line_end":17,"column_start":1,"column_end":67}}]},{"kind":"Function","id":{"krate":0,"index":2753},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/quad.rs","byte_start":372773,"byte_end":372791,"line_start":41,"line_end":41,"column_start":8,"column_end":26},"name":"quad_with_vertices","qualname":"::procedural::quad::quad_with_vertices","value":"fn <N> (vertices: &[Point<N>], nhpoints: usize, nvpoints: usize) -> TriMesh<N>","parent":null,"children":[],"decl_id":null,"docs":" Adds a double-sided quad with the specified grid of vertices.","sig":null,"attributes":[{"value":"/ Adds a double-sided quad with the specified grid of vertices.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/quad.rs","byte_start":372538,"byte_end":372603,"line_start":34,"line_end":34,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/quad.rs","byte_start":372604,"byte_end":372607,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Normals are automatically computed.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/quad.rs","byte_start":372608,"byte_end":372647,"line_start":36,"line_end":36,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/quad.rs","byte_start":372648,"byte_end":372651,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # Arguments","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/quad.rs","byte_start":372652,"byte_end":372667,"line_start":38,"line_end":38,"column_start":1,"column_end":16}},{"value":"/ * `nhpoints` - number of columns on the grid.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/quad.rs","byte_start":372668,"byte_end":372717,"line_start":39,"line_end":39,"column_start":1,"column_end":50}},{"value":"/ * `nvpoints` - number of lines on the grid.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/quad.rs","byte_start":372718,"byte_end":372765,"line_start":40,"line_end":40,"column_start":1,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":2755},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/quad.rs","byte_start":373829,"byte_end":373838,"line_start":71,"line_end":71,"column_start":8,"column_end":17},"name":"unit_quad","qualname":"::procedural::quad::unit_quad","value":"fn <N> (usubdivs: usize, vsubdivs: usize) -> TriMesh<N>","parent":null,"children":[],"decl_id":null,"docs":" Adds a double-sided quad with unit size to the scene.","sig":null,"attributes":[{"value":"/ Adds a double-sided quad with unit size to the scene.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/quad.rs","byte_start":373195,"byte_end":373252,"line_start":60,"line_end":60,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/quad.rs","byte_start":373253,"byte_end":373256,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ The quad is initially centered at (0, 0, 0). Its normal is the `z` axis. The quad itself is","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/quad.rs","byte_start":373257,"byte_end":373352,"line_start":62,"line_end":62,"column_start":1,"column_end":96}},{"value":"/ composed of a user-defined number of triangles regularly spaced on a grid. This is the main way","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/quad.rs","byte_start":373353,"byte_end":373452,"line_start":63,"line_end":63,"column_start":1,"column_end":100}},{"value":"/ to draw height maps.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/quad.rs","byte_start":373453,"byte_end":373477,"line_start":64,"line_end":64,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/quad.rs","byte_start":373478,"byte_end":373481,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ # Arguments","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/quad.rs","byte_start":373482,"byte_end":373497,"line_start":66,"line_end":66,"column_start":1,"column_end":16}},{"value":"/ * `usubdivs` - number of horizontal subdivisions. This correspond to the number of squares","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/quad.rs","byte_start":373498,"byte_end":373592,"line_start":67,"line_end":67,"column_start":1,"column_end":95}},{"value":"/ which will be placed horizontally on each line. Must not be `0`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/quad.rs","byte_start":373593,"byte_end":373661,"line_start":68,"line_end":68,"column_start":1,"column_end":69}},{"value":"/ * `vsubdivs` - number of vertical subdivisions. This correspond to the number of squares","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/quad.rs","byte_start":373662,"byte_end":373754,"line_start":69,"line_end":69,"column_start":1,"column_end":93}},{"value":"/ which will be placed vertically on each line. Must not be `0`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/quad.rs","byte_start":373755,"byte_end":373821,"line_start":70,"line_end":70,"column_start":1,"column_end":67}}]},{"kind":"Function","id":{"krate":0,"index":2770},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/sphere.rs","byte_start":376025,"byte_end":376031,"line_start":13,"line_end":13,"column_start":8,"column_end":14},"name":"sphere","qualname":"::procedural::sphere::sphere","value":"fn <N> (diameter: N, ntheta_subdiv: u32, nphi_subdiv: u32, generate_uvs: bool) -> TriMesh<N>","parent":null,"children":[],"decl_id":null,"docs":" Generates a UV sphere.\n","sig":null,"attributes":[{"value":"/ Generates a UV sphere.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/sphere.rs","byte_start":375966,"byte_end":375992,"line_start":11,"line_end":11,"column_start":1,"column_end":27}},{"value":"cfg(feature = \"dim3\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/sphere.rs","byte_start":375993,"byte_end":376017,"line_start":12,"line_end":12,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2772},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/sphere.rs","byte_start":376402,"byte_end":376413,"line_start":31,"line_end":31,"column_start":8,"column_end":19},"name":"unit_sphere","qualname":"::procedural::sphere::unit_sphere","value":"fn <N> (ntheta_subdiv: u32, nphi_subdiv: u32, generate_uvs: bool) -> TriMesh<N>","parent":null,"children":[],"decl_id":null,"docs":" Generates a UV sphere centered at the origin and with a unit diameter.\n","sig":null,"attributes":[{"value":"/ Generates a UV sphere centered at the origin and with a unit diameter.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/sphere.rs","byte_start":376295,"byte_end":376369,"line_start":29,"line_end":29,"column_start":1,"column_end":75}},{"value":"cfg(feature = \"dim3\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/sphere.rs","byte_start":376370,"byte_end":376394,"line_start":30,"line_end":30,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2780},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/sphere.rs","byte_start":380199,"byte_end":380214,"line_start":170,"line_end":170,"column_start":8,"column_end":23},"name":"unit_hemisphere","qualname":"::procedural::sphere::unit_hemisphere","value":"fn <N> (ntheta_subdiv: u32, nphi_subdiv: u32) -> TriMesh<N>","parent":null,"children":[],"decl_id":null,"docs":" Creates an hemisphere with a diameter of 1.\n","sig":null,"attributes":[{"value":"/ Creates an hemisphere with a diameter of 1.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/sphere.rs","byte_start":380119,"byte_end":380166,"line_start":168,"line_end":168,"column_start":1,"column_end":48}},{"value":"cfg(feature = \"dim3\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/sphere.rs","byte_start":380167,"byte_end":380191,"line_start":169,"line_end":169,"column_start":1,"column_end":25}}]},{"kind":"Mod","id":{"krate":0,"index":2783},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"query","qualname":"::query","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/mod.rs","parent":null,"children":[{"krate":0,"index":2784},{"krate":0,"index":2785},{"krate":0,"index":2786},{"krate":0,"index":2787},{"krate":0,"index":2788},{"krate":0,"index":2789},{"krate":0,"index":2790},{"krate":0,"index":2791},{"krate":0,"index":2792},{"krate":0,"index":2793},{"krate":0,"index":2794},{"krate":0,"index":3011},{"krate":0,"index":3182},{"krate":0,"index":3438},{"krate":0,"index":3549},{"krate":0,"index":3554},{"krate":0,"index":3673},{"krate":0,"index":4103},{"krate":0,"index":4226},{"krate":0,"index":4632},{"krate":0,"index":4785},{"krate":0,"index":4817}],"decl_id":null,"docs":" Non-persistent geometric queries.","sig":null,"attributes":[{"value":"! Non-persistent geometric queries.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/mod.rs","byte_start":382222,"byte_end":382259,"line_start":1,"line_end":1,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/mod.rs","byte_start":382260,"byte_end":382263,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! # General cases","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/mod.rs","byte_start":382264,"byte_end":382283,"line_start":3,"line_end":3,"column_start":1,"column_end":20}},{"value":"! The most general methods provided by this module are:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/mod.rs","byte_start":382284,"byte_end":382341,"line_start":4,"line_end":4,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/mod.rs","byte_start":382342,"byte_end":382345,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! * [`query::closest_points()`] to compute the closest points between two shapes.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/mod.rs","byte_start":382346,"byte_end":382429,"line_start":6,"line_end":6,"column_start":1,"column_end":84}},{"value":"! * [`query::distance()`] to compute the distance between two shapes.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/mod.rs","byte_start":382430,"byte_end":382501,"line_start":7,"line_end":7,"column_start":1,"column_end":72}},{"value":"! * [`query::contact()`] to compute one pair of contact points between two shapes, including penetrating contact.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/mod.rs","byte_start":382502,"byte_end":382617,"line_start":8,"line_end":8,"column_start":1,"column_end":116}},{"value":"! * [`query::proximity()`] to determine if two shapes are intersecting or not.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/mod.rs","byte_start":382618,"byte_end":382698,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"! * [`query::time_of_impact()`] to determine when two shapes undergoing translational motions hit for the first time.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/mod.rs","byte_start":382699,"byte_end":382818,"line_start":10,"line_end":10,"column_start":1,"column_end":120}},{"value":"! * [`query::nonlinear_time_of_impact()`] to determine when two shapes undergoing continuous rigid motions hit for the first time.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/mod.rs","byte_start":382819,"byte_end":382951,"line_start":11,"line_end":11,"column_start":1,"column_end":133}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/mod.rs","byte_start":382952,"byte_end":382955,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! Ray-casting and point-projection can be achieved by importing traits:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/mod.rs","byte_start":382956,"byte_end":383029,"line_start":13,"line_end":13,"column_start":1,"column_end":74}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/mod.rs","byte_start":383030,"byte_end":383033,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"! * [`query::RayCast`] for ray-casting.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/mod.rs","byte_start":383034,"byte_end":383075,"line_start":15,"line_end":15,"column_start":1,"column_end":42}},{"value":"! * [`query::PointQuery`] for point projection.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/mod.rs","byte_start":383076,"byte_end":383125,"line_start":16,"line_end":16,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/mod.rs","byte_start":383126,"byte_end":383129,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! # Specific cases","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/mod.rs","byte_start":383130,"byte_end":383150,"line_start":18,"line_end":18,"column_start":1,"column_end":21}},{"value":"! All the other functions exported by this module are more specific versions of the ones described above.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/mod.rs","byte_start":383151,"byte_end":383258,"line_start":19,"line_end":19,"column_start":1,"column_end":108}},{"value":"! For example `distance_ball_ball` computes the distance between two shapes known at compile-time to be balls.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/mod.rs","byte_start":383259,"byte_end":383371,"line_start":20,"line_end":20,"column_start":1,"column_end":113}},{"value":"! They are less convenient to use than the most generic version but will be slightly faster due to the lack of dynamic dispatch.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/mod.rs","byte_start":383372,"byte_end":383502,"line_start":21,"line_end":21,"column_start":1,"column_end":131}},{"value":"! Generally, the specific functions have the form `[operation]_[shape1]_[shape2]()` where:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/mod.rs","byte_start":383503,"byte_end":383595,"line_start":22,"line_end":22,"column_start":1,"column_end":93}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/mod.rs","byte_start":383596,"byte_end":383599,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"! * `[operation]` can be `closest_points`, `distance`, `contact`, `proximity` or `time_of_impact`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/mod.rs","byte_start":383600,"byte_end":383700,"line_start":24,"line_end":24,"column_start":1,"column_end":101}},{"value":"! * `[shape1]` is the type of the first shape passed to the function, e.g., `ball`, or `plane`. Can also identify a trait implemented by supported shapes, e.g., `support_map`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/mod.rs","byte_start":383701,"byte_end":383878,"line_start":25,"line_end":25,"column_start":1,"column_end":178}},{"value":"! * `[shape2]` is the type of the second shape passed to the function, e.g., `ball`, or `plane`. Can also identify a trait implemented by supported shapes, e.g., `support_map`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/mod.rs","byte_start":383879,"byte_end":384057,"line_start":26,"line_end":26,"column_start":1,"column_end":179}}]},{"kind":"Mod","id":{"krate":0,"index":2794},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"algorithms","qualname":"::query::algorithms","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/mod.rs","parent":null,"children":[{"krate":0,"index":2795},{"krate":0,"index":2796},{"krate":0,"index":2797},{"krate":0,"index":2798},{"krate":0,"index":2826},{"krate":0,"index":2898},{"krate":0,"index":2940},{"krate":0,"index":2971}],"decl_id":null,"docs":" Algorithms needed for distance and penetration depth computation.\n","sig":null,"attributes":[{"value":"! Algorithms needed for distance and penetration depth computation.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/mod.rs","byte_start":384555,"byte_end":384624,"line_start":1,"line_end":1,"column_start":1,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":7186},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/cso_point.rs","byte_start":385687,"byte_end":385695,"line_start":13,"line_end":13,"column_start":12,"column_end":20},"name":"CSOPoint","qualname":"::query::algorithms::cso_point::CSOPoint","value":"CSOPoint { point, orig1, orig2 }","parent":null,"children":[{"krate":0,"index":7188},{"krate":0,"index":7189},{"krate":0,"index":7190}],"decl_id":null,"docs":" A point of a Configuration-Space Obstacle.","sig":null,"attributes":[{"value":"/ A point of a Configuration-Space Obstacle.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/cso_point.rs","byte_start":385359,"byte_end":385405,"line_start":6,"line_end":6,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/cso_point.rs","byte_start":385406,"byte_end":385409,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ A Configuration-Space Obstacle (CSO) is the result of the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/cso_point.rs","byte_start":385410,"byte_end":385471,"line_start":8,"line_end":8,"column_start":1,"column_end":62}},{"value":"/ Minkowski Difference of two solids. In other words, each of its","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/cso_point.rs","byte_start":385472,"byte_end":385539,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"/ points correspond to the difference of two point, each belonging","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/cso_point.rs","byte_start":385540,"byte_end":385608,"line_start":10,"line_end":10,"column_start":1,"column_end":69}},{"value":"/ to a different solid.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/cso_point.rs","byte_start":385609,"byte_end":385634,"line_start":11,"line_end":11,"column_start":1,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":7188},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/cso_point.rs","byte_start":385864,"byte_end":385869,"line_start":16,"line_end":16,"column_start":9,"column_end":14},"name":"point","qualname":"::query::algorithms::cso_point::CSOPoint::point","value":"na::Point<N, na::U3>","parent":{"krate":0,"index":7186},"children":[],"decl_id":null,"docs":" The point on the CSO. This is equal to `self.orig1 - self.orig2`, unless this CSOPoint\n has been translated with self.translate.\n","sig":null,"attributes":[{"value":"/ The point on the CSO. This is equal to `self.orig1 - self.orig2`, unless this CSOPoint","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/cso_point.rs","byte_start":385716,"byte_end":385806,"line_start":14,"line_end":14,"column_start":5,"column_end":95}},{"value":"/ has been translated with self.translate.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/cso_point.rs","byte_start":385811,"byte_end":385855,"line_start":15,"line_end":15,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":7189},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/cso_point.rs","byte_start":385965,"byte_end":385970,"line_start":18,"line_end":18,"column_start":9,"column_end":14},"name":"orig1","qualname":"::query::algorithms::cso_point::CSOPoint::orig1","value":"na::Point<N, na::U3>","parent":{"krate":0,"index":7186},"children":[],"decl_id":null,"docs":" The original point on the first shape used to compute `self.point`.\n","sig":null,"attributes":[{"value":"/ The original point on the first shape used to compute `self.point`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/cso_point.rs","byte_start":385885,"byte_end":385956,"line_start":17,"line_end":17,"column_start":5,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":7190},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/cso_point.rs","byte_start":386067,"byte_end":386072,"line_start":20,"line_end":20,"column_start":9,"column_end":14},"name":"orig2","qualname":"::query::algorithms::cso_point::CSOPoint::orig2","value":"na::Point<N, na::U3>","parent":{"krate":0,"index":7186},"children":[],"decl_id":null,"docs":" The original point on the second shape used to compute `self.point`.\n","sig":null,"attributes":[{"value":"/ The original point on the second shape used to compute `self.point`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/cso_point.rs","byte_start":385986,"byte_end":386058,"line_start":19,"line_end":19,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2810},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/cso_point.rs","byte_start":386185,"byte_end":386188,"line_start":25,"line_end":25,"column_start":12,"column_end":15},"name":"new","qualname":"<CSOPoint<N>>::new","value":"fn (orig1: Point<N>, orig2: Point<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Initializes a CSO point with `orig1 - orig2`.\n","sig":null,"attributes":[{"value":"/ Initializes a CSO point with `orig1 - orig2`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/cso_point.rs","byte_start":386124,"byte_end":386173,"line_start":24,"line_end":24,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2811},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/cso_point.rs","byte_start":386491,"byte_end":386505,"line_start":33,"line_end":33,"column_start":12,"column_end":26},"name":"new_with_point","qualname":"<CSOPoint<N>>::new_with_point","value":"fn (point: Point<N>, orig1: Point<N>, orig2: Point<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Initializes a CSO point with all information provided.","sig":null,"attributes":[{"value":"/ Initializes a CSO point with all information provided.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/cso_point.rs","byte_start":386342,"byte_end":386400,"line_start":30,"line_end":30,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/cso_point.rs","byte_start":386405,"byte_end":386408,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ It is assumed, but not checked, that `point == orig1 - orig2`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/cso_point.rs","byte_start":386413,"byte_end":386479,"line_start":32,"line_end":32,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2812},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/cso_point.rs","byte_start":386741,"byte_end":386753,"line_start":42,"line_end":42,"column_start":12,"column_end":24},"name":"single_point","qualname":"<CSOPoint<N>>::single_point","value":"fn (point: Point<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Initializes a CSO point where both original points are equal.\n","sig":null,"attributes":[{"value":"/ Initializes a CSO point where both original points are equal.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/cso_point.rs","byte_start":386664,"byte_end":386729,"line_start":41,"line_end":41,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2813},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/cso_point.rs","byte_start":386915,"byte_end":386921,"line_start":47,"line_end":47,"column_start":12,"column_end":18},"name":"origin","qualname":"<CSOPoint<N>>::origin","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" CSO point where all components are set to zero.\n","sig":null,"attributes":[{"value":"/ CSO point where all components are set to zero.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/cso_point.rs","byte_start":386852,"byte_end":386903,"line_start":46,"line_end":46,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2814},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/cso_point.rs","byte_start":387104,"byte_end":387122,"line_start":52,"line_end":52,"column_start":12,"column_end":30},"name":"from_shapes_toward","qualname":"<CSOPoint<N>>::from_shapes_toward","value":"fn <G1, G2> (m1: &Isometry<N>, g1: &G1, m2: &Isometry<N>, g2: &G2, dir: &Unit<Vector<N>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the support point of the CSO of `g1` and `g2` toward the unit direction `dir`.\n","sig":null,"attributes":[{"value":"/ Computes the support point of the CSO of `g1` and `g2` toward the unit direction `dir`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/cso_point.rs","byte_start":387001,"byte_end":387092,"line_start":51,"line_end":51,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":2817},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/cso_point.rs","byte_start":387598,"byte_end":387609,"line_start":70,"line_end":70,"column_start":12,"column_end":23},"name":"from_shapes","qualname":"<CSOPoint<N>>::from_shapes","value":"fn <G1, G2> (m1: &Isometry<N>, g1: &G1, m2: &Isometry<N>, g2: &G2, dir: &Vector<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the support point of the CSO of `g1` and `g2` toward the direction `dir`.\n","sig":null,"attributes":[{"value":"/ Computes the support point of the CSO of `g1` and `g2` toward the direction `dir`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/cso_point.rs","byte_start":387500,"byte_end":387586,"line_start":69,"line_end":69,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":2820},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/cso_point.rs","byte_start":388007,"byte_end":388016,"line_start":88,"line_end":88,"column_start":12,"column_end":21},"name":"translate","qualname":"<CSOPoint<N>>::translate","value":"fn (&self, dir: &Vector<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Translate the CSO point.\n","sig":null,"attributes":[{"value":"/ Translate the CSO point.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/cso_point.rs","byte_start":387967,"byte_end":387995,"line_start":87,"line_end":87,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2821},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/cso_point.rs","byte_start":388186,"byte_end":388199,"line_start":93,"line_end":93,"column_start":12,"column_end":25},"name":"translate_mut","qualname":"<CSOPoint<N>>::translate_mut","value":"fn (&mut self, dir: &Vector<N>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Translate in-place the CSO point.\n","sig":null,"attributes":[{"value":"/ Translate in-place the CSO point.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/cso_point.rs","byte_start":388137,"byte_end":388174,"line_start":92,"line_end":92,"column_start":5,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":2826},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/epa3.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"epa3","qualname":"::query::algorithms::epa3","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/epa3.rs","parent":null,"children":[{"krate":0,"index":2827},{"krate":0,"index":2831},{"krate":0,"index":2832},{"krate":0,"index":2836},{"krate":0,"index":2837},{"krate":0,"index":2841},{"krate":0,"index":2842},{"krate":0,"index":2846},{"krate":0,"index":2847},{"krate":0,"index":7205},{"krate":0,"index":7218},{"krate":0,"index":7215},{"krate":0,"index":7209},{"krate":0,"index":7211},{"krate":0,"index":2848},{"krate":0,"index":2851},{"krate":0,"index":2853},{"krate":0,"index":2856},{"krate":0,"index":7220},{"krate":0,"index":7234},{"krate":0,"index":7231},{"krate":0,"index":2859},{"krate":0,"index":2873},{"krate":0,"index":2876},{"krate":0,"index":2878},{"krate":0,"index":2884}],"decl_id":null,"docs":" Three-dimensional penetration depth queries using the Expanding Polytope Algorithm.\n","sig":null,"attributes":[{"value":"cfg(feature = \"dim3\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/mod.rs","byte_start":384962,"byte_end":384986,"line_start":16,"line_end":16,"column_start":1,"column_end":25}},{"value":"! Three-dimensional penetration depth queries using the Expanding Polytope Algorithm.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/epa3.rs","byte_start":388454,"byte_end":388541,"line_start":1,"line_end":1,"column_start":1,"column_end":88}}]},{"kind":"Struct","id":{"krate":0,"index":2878},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/epa3.rs","byte_start":393027,"byte_end":393030,"line_start":163,"line_end":163,"column_start":12,"column_end":15},"name":"EPA","qualname":"::query::algorithms::epa3::EPA","value":"EPA {  }","parent":null,"children":[{"krate":0,"index":2880},{"krate":0,"index":2881},{"krate":0,"index":2882},{"krate":0,"index":2883}],"decl_id":null,"docs":" The Expanding Polytope Algorithm in 3D.\n","sig":null,"attributes":[{"value":"/ The Expanding Polytope Algorithm in 3D.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/epa3.rs","byte_start":392972,"byte_end":393015,"line_start":162,"line_end":162,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2886},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/epa3.rs","byte_start":393287,"byte_end":393290,"line_start":172,"line_end":172,"column_start":12,"column_end":15},"name":"new","qualname":"<EPA<N>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of the 3D Expanding Polytope Algorithm.\n","sig":null,"attributes":[{"value":"/ Creates a new instance of the 3D Expanding Polytope Algorithm.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/epa3.rs","byte_start":393209,"byte_end":393275,"line_start":171,"line_end":171,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2888},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/epa3.rs","byte_start":393945,"byte_end":393959,"line_start":194,"line_end":194,"column_start":12,"column_end":26},"name":"project_origin","qualname":"<EPA<N>>::project_origin","value":"fn <G> (&mut self, m: &Isometry<N>, g: &G, simplex: &VoronoiSimplex<N>) -> Option<Point<N>>","parent":null,"children":[],"decl_id":null,"docs":" Projects the origin on boundary of the given shape.","sig":null,"attributes":[{"value":"/ Projects the origin on boundary of the given shape.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/epa3.rs","byte_start":393628,"byte_end":393683,"line_start":188,"line_end":188,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/epa3.rs","byte_start":393688,"byte_end":393691,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ The origin is assumed to be inside of the shape. If it is outside","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/epa3.rs","byte_start":393696,"byte_end":393765,"line_start":190,"line_end":190,"column_start":5,"column_end":74}},{"value":"/ use the GJK algorithm instead.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/epa3.rs","byte_start":393770,"byte_end":393804,"line_start":191,"line_end":191,"column_start":5,"column_end":39}},{"value":"/ Return `None` if the origin is not inside of the shape or if","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/epa3.rs","byte_start":393809,"byte_end":393873,"line_start":192,"line_end":192,"column_start":5,"column_end":69}},{"value":"/ the EPA algorithm failed to compute the projection.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/epa3.rs","byte_start":393878,"byte_end":393933,"line_start":193,"line_end":193,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2891},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/epa3.rs","byte_start":394500,"byte_end":394514,"line_start":211,"line_end":211,"column_start":12,"column_end":26},"name":"closest_points","qualname":"<EPA<N>>::closest_points","value":"fn <G1, G2> (&mut self, m1: &Isometry<N>, g1: &G1, m2: &Isometry<N>, g2: &G2, simplex: &VoronoiSimplex<N>) -> Option<(Point<N>, Point<N>, Unit<Vector<N>>)>","parent":null,"children":[],"decl_id":null,"docs":" Projects the origin on a shape unsing the EPA algorithm.","sig":null,"attributes":[{"value":"/ Projects the origin on a shape unsing the EPA algorithm.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/epa3.rs","byte_start":394262,"byte_end":394322,"line_start":207,"line_end":207,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/epa3.rs","byte_start":394327,"byte_end":394330,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ The origin is assumed to be located inside of the shape.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/epa3.rs","byte_start":394335,"byte_end":394395,"line_start":209,"line_end":209,"column_start":5,"column_end":65}},{"value":"/ Returns `None` if the EPA fails to converge or if `g1` and `g2` are not penetrating.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/epa3.rs","byte_start":394400,"byte_end":394488,"line_start":210,"line_end":210,"column_start":5,"column_end":93}}]},{"kind":"Mod","id":{"krate":0,"index":2898},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/gjk.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"gjk","qualname":"::query::algorithms::gjk","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/gjk.rs","parent":null,"children":[{"krate":0,"index":2899},{"krate":0,"index":2902},{"krate":0,"index":2903},{"krate":0,"index":2907},{"krate":0,"index":2908},{"krate":0,"index":2913},{"krate":0,"index":7237},{"krate":0,"index":7261},{"krate":0,"index":7258},{"krate":0,"index":7252},{"krate":0,"index":7254},{"krate":0,"index":2916},{"krate":0,"index":2918},{"krate":0,"index":2921},{"krate":0,"index":2925},{"krate":0,"index":2928},{"krate":0,"index":2933},{"krate":0,"index":2938}],"decl_id":null,"docs":" The Gilbert–Johnson–Keerthi distance algorithm.\n","sig":null,"attributes":[{"value":"! The Gilbert–Johnson–Keerthi distance algorithm.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/gjk.rs","byte_start":405361,"byte_end":405416,"line_start":1,"line_end":1,"column_start":1,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7239},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/gjk.rs","byte_start":405890,"byte_end":405902,"line_start":16,"line_end":16,"column_start":5,"column_end":17},"name":"Intersection","qualname":"::query::algorithms::gjk::GJKResult::Intersection","value":"GJKResult::Intersection","parent":{"krate":0,"index":7237},"children":[],"decl_id":null,"docs":" Result of the GJK algorithm when the origin is inside of the polytope.\n","sig":null,"attributes":[{"value":"/ Result of the GJK algorithm when the origin is inside of the polytope.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/gjk.rs","byte_start":405811,"byte_end":405885,"line_start":15,"line_end":15,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7241},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/gjk.rs","byte_start":406002,"byte_end":406015,"line_start":18,"line_end":18,"column_start":5,"column_end":18},"name":"ClosestPoints","qualname":"::query::algorithms::gjk::GJKResult::ClosestPoints","value":"GJKResult::ClosestPoints(Point<N>, Point<N>, Unit<Vector<N>>)","parent":{"krate":0,"index":7237},"children":[],"decl_id":null,"docs":" Result of the GJK algorithm when a projection of the origin on the polytope is found.\n","sig":null,"attributes":[{"value":"/ Result of the GJK algorithm when a projection of the origin on the polytope is found.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/gjk.rs","byte_start":405908,"byte_end":405997,"line_start":17,"line_end":17,"column_start":5,"column_end":94}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7246},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/gjk.rs","byte_start":406161,"byte_end":406170,"line_start":20,"line_end":20,"column_start":5,"column_end":14},"name":"Proximity","qualname":"::query::algorithms::gjk::GJKResult::Proximity","value":"GJKResult::Proximity(Unit<Vector<N>>)","parent":{"krate":0,"index":7237},"children":[],"decl_id":null,"docs":" Result of the GJK algorithm when the origin is too close to the polytope but not inside of it.\n","sig":null,"attributes":[{"value":"/ Result of the GJK algorithm when the origin is too close to the polytope but not inside of it.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/gjk.rs","byte_start":406058,"byte_end":406156,"line_start":19,"line_end":19,"column_start":5,"column_end":103}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7249},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/gjk.rs","byte_start":406280,"byte_end":406294,"line_start":22,"line_end":22,"column_start":5,"column_end":19},"name":"NoIntersection","qualname":"::query::algorithms::gjk::GJKResult::NoIntersection","value":"GJKResult::NoIntersection(Unit<Vector<N>>)","parent":{"krate":0,"index":7237},"children":[],"decl_id":null,"docs":" Result of the GJK algorithm when the origin is too far away from the polytope.\n","sig":null,"attributes":[{"value":"/ Result of the GJK algorithm when the origin is too far away from the polytope.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/gjk.rs","byte_start":406193,"byte_end":406275,"line_start":21,"line_end":21,"column_start":5,"column_end":87}}]},{"kind":"Enum","id":{"krate":0,"index":7237},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/gjk.rs","byte_start":405781,"byte_end":405790,"line_start":14,"line_end":14,"column_start":10,"column_end":19},"name":"GJKResult","qualname":"::query::algorithms::gjk::GJKResult","value":"GJKResult::{Intersection, ClosestPoints, Proximity, NoIntersection}","parent":null,"children":[{"krate":0,"index":7239},{"krate":0,"index":7241},{"krate":0,"index":7246},{"krate":0,"index":7249}],"decl_id":null,"docs":" Results of the GJK algorithm.\n","sig":null,"attributes":[{"value":"/ Results of the GJK algorithm.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/gjk.rs","byte_start":405703,"byte_end":405736,"line_start":12,"line_end":12,"column_start":1,"column_end":34}}]},{"kind":"Function","id":{"krate":0,"index":2916},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/gjk.rs","byte_start":406377,"byte_end":406384,"line_start":26,"line_end":26,"column_start":8,"column_end":15},"name":"eps_tol","qualname":"::query::algorithms::gjk::eps_tol","value":"fn <N> () -> N","parent":null,"children":[],"decl_id":null,"docs":" The absolute tolerence used by the GJK algorithm.\n","sig":null,"attributes":[{"value":"/ The absolute tolerence used by the GJK algorithm.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/gjk.rs","byte_start":406316,"byte_end":406369,"line_start":25,"line_end":25,"column_start":1,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":2918},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/gjk.rs","byte_start":406778,"byte_end":406792,"line_start":37,"line_end":37,"column_start":8,"column_end":22},"name":"project_origin","qualname":"::query::algorithms::gjk::project_origin","value":"fn <N, G> (m: &Isometry<N>, g: &G, simplex: &mut VoronoiSimplex<N>) -> Option<Point<N>>","parent":null,"children":[],"decl_id":null,"docs":" Projects the origin on the boundary of the given shape.","sig":null,"attributes":[{"value":"/ Projects the origin on the boundary of the given shape.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/gjk.rs","byte_start":406480,"byte_end":406539,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/gjk.rs","byte_start":406540,"byte_end":406543,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ The origin is assumed to be outside of the shape. If it is inside,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/gjk.rs","byte_start":406544,"byte_end":406614,"line_start":33,"line_end":33,"column_start":1,"column_end":71}},{"value":"/ use the EPA algorithm instead.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/gjk.rs","byte_start":406615,"byte_end":406649,"line_start":34,"line_end":34,"column_start":1,"column_end":35}},{"value":"/ Return `None` if the origin is not inside of the shape or if","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/gjk.rs","byte_start":406650,"byte_end":406714,"line_start":35,"line_end":35,"column_start":1,"column_end":65}},{"value":"/ the EPA algorithm failed to compute the projection.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/gjk.rs","byte_start":406715,"byte_end":406770,"line_start":36,"line_end":36,"column_start":1,"column_end":56}}]},{"kind":"Function","id":{"krate":0,"index":2921},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/gjk.rs","byte_start":408083,"byte_end":408097,"line_start":76,"line_end":76,"column_start":8,"column_end":22},"name":"closest_points","qualname":"::query::algorithms::gjk::closest_points","value":"fn <N, G1, G2> (m1: &Isometry<N>, g1: &G1, m2: &Isometry<N>, g2: &G2, max_dist: N, exact_dist: bool, simplex: &mut VoronoiSimplex<N>) -> GJKResult<N>","parent":null,"children":[],"decl_id":null,"docs":" Projects the origin on a shape using the Separating Axis GJK algorithm.\n The algorithm will stop as soon as the polytope can be proven to be at least `max_dist` away\n from the origin.","sig":null,"attributes":[{"value":"/ Projects the origin on a shape using the Separating Axis GJK algorithm.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/gjk.rs","byte_start":407277,"byte_end":407352,"line_start":64,"line_end":64,"column_start":1,"column_end":76}},{"value":"/ The algorithm will stop as soon as the polytope can be proven to be at least `max_dist` away","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/gjk.rs","byte_start":407353,"byte_end":407449,"line_start":65,"line_end":65,"column_start":1,"column_end":97}},{"value":"/ from the origin.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/gjk.rs","byte_start":407450,"byte_end":407470,"line_start":66,"line_end":66,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/gjk.rs","byte_start":407471,"byte_end":407474,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # Arguments:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/gjk.rs","byte_start":407475,"byte_end":407491,"line_start":68,"line_end":68,"column_start":1,"column_end":17}},{"value":"/ * simplex - the simplex to be used by the GJK algorithm. It must be already initialized","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/gjk.rs","byte_start":407492,"byte_end":407583,"line_start":69,"line_end":69,"column_start":1,"column_end":92}},{"value":"/             with at least one point on the shape boundary.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/gjk.rs","byte_start":407584,"byte_end":407646,"line_start":70,"line_end":70,"column_start":1,"column_end":63}},{"value":"/ * exact_dist - if `false`, the gjk will stop as soon as it can prove that the origin is at","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/gjk.rs","byte_start":407647,"byte_end":407741,"line_start":71,"line_end":71,"column_start":1,"column_end":95}},{"value":"/ a distance smaller than `max_dist` but not inside of `shape`. In that case, it returns a","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/gjk.rs","byte_start":407742,"byte_end":407834,"line_start":72,"line_end":72,"column_start":1,"column_end":93}},{"value":"/ `GJKResult::Proximity(sep_axis)` where `sep_axis` is a separating axis. If `false` the gjk will","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/gjk.rs","byte_start":407835,"byte_end":407934,"line_start":73,"line_end":73,"column_start":1,"column_end":100}},{"value":"/ compute the exact distance and return `GJKResult::Projection(point)` if the origin is closer","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/gjk.rs","byte_start":407935,"byte_end":408031,"line_start":74,"line_end":74,"column_start":1,"column_end":97}},{"value":"/ than `max_dist` but not inside `shape`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/gjk.rs","byte_start":408032,"byte_end":408075,"line_start":75,"line_end":75,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":2925},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/gjk.rs","byte_start":411305,"byte_end":411313,"line_start":180,"line_end":180,"column_start":8,"column_end":16},"name":"cast_ray","qualname":"::query::algorithms::gjk::cast_ray","value":"fn <N, G> (m: &Isometry<N>, shape: &G, simplex: &mut VoronoiSimplex<N>, ray: &Ray<N>, max_toi: N) -> Option<(N, Vector<N>)>","parent":null,"children":[],"decl_id":null,"docs":" Casts a ray on a support map using the GJK algorithm.\n","sig":null,"attributes":[{"value":"/ Casts a ray on a support map using the GJK algorithm.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/gjk.rs","byte_start":411240,"byte_end":411297,"line_start":179,"line_end":179,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":2928},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/gjk.rs","byte_start":411777,"byte_end":411797,"line_start":198,"line_end":198,"column_start":8,"column_end":28},"name":"directional_distance","qualname":"::query::algorithms::gjk::directional_distance","value":"fn <N, G1, G2> (m1: &Isometry<N>, g1: &G1, m2: &Isometry<N>, g2: &G2, dir: &Vector<N>, simplex: &mut VoronoiSimplex<N>) -> Option<(N, Vector<N>, Point<N>, Point<N>)>","parent":null,"children":[],"decl_id":null,"docs":" Compute the normal and the distance that can travel `g1` along the direction\n `dir` so that `g1` and `g2` just touch.\n","sig":null,"attributes":[{"value":"/ Compute the normal and the distance that can travel `g1` along the direction","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/gjk.rs","byte_start":411645,"byte_end":411725,"line_start":196,"line_end":196,"column_start":1,"column_end":81}},{"value":"/ `dir` so that `g1` and `g2` just touch.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/gjk.rs","byte_start":411726,"byte_end":411769,"line_start":197,"line_end":197,"column_start":1,"column_end":44}}]},{"kind":"Mod","id":{"krate":0,"index":2940},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/special_support_maps.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"special_support_maps","qualname":"::query::algorithms::special_support_maps","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/special_support_maps.rs","parent":null,"children":[{"krate":0,"index":2941},{"krate":0,"index":2944},{"krate":0,"index":2948},{"krate":0,"index":2949},{"krate":0,"index":2951},{"krate":0,"index":2957},{"krate":0,"index":2963}],"decl_id":null,"docs":" Special support map function like constants and Minkowski sums.\n","sig":null,"attributes":[{"value":"/ Special support map function like constants and Minkowski sums.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/mod.rs","byte_start":385014,"byte_end":385081,"line_start":19,"line_end":19,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":2949},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/special_support_maps.rs","byte_start":418406,"byte_end":418420,"line_start":7,"line_end":7,"column_start":12,"column_end":26},"name":"ConstantOrigin","qualname":"::query::algorithms::special_support_maps::ConstantOrigin","value":"","parent":null,"children":[],"decl_id":null,"docs":" A support mapping that is always equal to the origin, independently from its transform.\n","sig":null,"attributes":[{"value":"/ A support mapping that is always equal to the origin, independently from its transform.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/special_support_maps.rs","byte_start":418303,"byte_end":418394,"line_start":6,"line_end":6,"column_start":1,"column_end":92}}]},{"kind":"Struct","id":{"krate":0,"index":2957},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/special_support_maps.rs","byte_start":419015,"byte_end":419027,"line_start":32,"line_end":32,"column_start":12,"column_end":24},"name":"DilatedShape","qualname":"::query::algorithms::special_support_maps::DilatedShape","value":"DilatedShape { shape, radius }","parent":null,"children":[{"krate":0,"index":2961},{"krate":0,"index":2962}],"decl_id":null,"docs":" The Minkowski sum of a shape and a ball.\n","sig":null,"attributes":[{"value":"/ The Minkowski sum of a shape and a ball.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/special_support_maps.rs","byte_start":418959,"byte_end":419003,"line_start":31,"line_end":31,"column_start":1,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":2961},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/special_support_maps.rs","byte_start":419132,"byte_end":419137,"line_start":34,"line_end":34,"column_start":9,"column_end":14},"name":"shape","qualname":"::query::algorithms::special_support_maps::DilatedShape::shape","value":"&'a S","parent":{"krate":0,"index":2957},"children":[],"decl_id":null,"docs":" The shape involved in the Minkowski sum.\n","sig":null,"attributes":[{"value":"/ The shape involved in the Minkowski sum.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/special_support_maps.rs","byte_start":419079,"byte_end":419123,"line_start":33,"line_end":33,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":2962},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/special_support_maps.rs","byte_start":419215,"byte_end":419221,"line_start":36,"line_end":36,"column_start":9,"column_end":15},"name":"radius","qualname":"::query::algorithms::special_support_maps::DilatedShape::radius","value":"N","parent":{"krate":0,"index":2957},"children":[],"decl_id":null,"docs":" The radius of the ball involved in the Minkoski sum.\n","sig":null,"attributes":[{"value":"/ The radius of the ball involved in the Minkoski sum.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/special_support_maps.rs","byte_start":419150,"byte_end":419206,"line_start":35,"line_end":35,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":7264},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/voronoi_simplex3.rs","byte_start":420423,"byte_end":420437,"line_start":12,"line_end":12,"column_start":12,"column_end":26},"name":"VoronoiSimplex","qualname":"::query::algorithms::voronoi_simplex3::VoronoiSimplex","value":"VoronoiSimplex {  }","parent":null,"children":[{"krate":0,"index":7266},{"krate":0,"index":7268},{"krate":0,"index":7270},{"krate":0,"index":7271},{"krate":0,"index":7273},{"krate":0,"index":7275}],"decl_id":null,"docs":" A simplex of dimension up to 3 that uses Voronoï regions for computing point projections.\n","sig":null,"attributes":[{"value":"/ A simplex of dimension up to 3 that uses Voronoï regions for computing point projections.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/voronoi_simplex3.rs","byte_start":420293,"byte_end":420387,"line_start":10,"line_end":10,"column_start":1,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":2993},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/voronoi_simplex3.rs","byte_start":420686,"byte_end":420689,"line_start":24,"line_end":24,"column_start":12,"column_end":15},"name":"new","qualname":"<VoronoiSimplex<N>>::new","value":"fn () -> VoronoiSimplex<N>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty simplex.\n","sig":null,"attributes":[{"value":"/ Creates a new empty simplex.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/voronoi_simplex3.rs","byte_start":420642,"byte_end":420674,"line_start":23,"line_end":23,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2997},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/voronoi_simplex3.rs","byte_start":421017,"byte_end":421021,"line_start":36,"line_end":36,"column_start":12,"column_end":16},"name":"swap","qualname":"<VoronoiSimplex<N>>::swap","value":"fn (&mut self, i1: usize, i2: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Swap two vertices of this simplex.\n","sig":null,"attributes":[{"value":"/ Swap two vertices of this simplex.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/voronoi_simplex3.rs","byte_start":420967,"byte_end":421005,"line_start":35,"line_end":35,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2998},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/voronoi_simplex3.rs","byte_start":421199,"byte_end":421204,"line_start":42,"line_end":42,"column_start":12,"column_end":17},"name":"reset","qualname":"<VoronoiSimplex<N>>::reset","value":"fn (&mut self, pt: CSOPoint<N>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Resets this simplex to a single point.\n","sig":null,"attributes":[{"value":"/ Resets this simplex to a single point.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/voronoi_simplex3.rs","byte_start":421145,"byte_end":421187,"line_start":41,"line_end":41,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2999},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/voronoi_simplex3.rs","byte_start":421370,"byte_end":421379,"line_start":49,"line_end":49,"column_start":12,"column_end":21},"name":"add_point","qualname":"<VoronoiSimplex<N>>::add_point","value":"fn (&mut self, pt: CSOPoint<N>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Add a point to this simplex.\n","sig":null,"attributes":[{"value":"/ Add a point to this simplex.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/voronoi_simplex3.rs","byte_start":421326,"byte_end":421358,"line_start":48,"line_end":48,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3000},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/voronoi_simplex3.rs","byte_start":422609,"byte_end":422619,"line_start":87,"line_end":87,"column_start":12,"column_end":22},"name":"proj_coord","qualname":"<VoronoiSimplex<N>>::proj_coord","value":"fn (&self, i: usize) -> N","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the barycentric coordinate associated to the `i`-th by the last call to `project_origin_and_reduce`.\n","sig":null,"attributes":[{"value":"/ Retrieves the barycentric coordinate associated to the `i`-th by the last call to `project_origin_and_reduce`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/voronoi_simplex3.rs","byte_start":422483,"byte_end":422597,"line_start":86,"line_end":86,"column_start":5,"column_end":119}}]},{"kind":"Method","id":{"krate":0,"index":3001},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/voronoi_simplex3.rs","byte_start":422779,"byte_end":422784,"line_start":93,"line_end":93,"column_start":12,"column_end":17},"name":"point","qualname":"<VoronoiSimplex<N>>::point","value":"fn (&self, i: usize) -> &CSOPoint<N>","parent":null,"children":[],"decl_id":null,"docs":" The i-th point of this simplex.\n","sig":null,"attributes":[{"value":"/ The i-th point of this simplex.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/voronoi_simplex3.rs","byte_start":422732,"byte_end":422767,"line_start":92,"line_end":92,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3002},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/voronoi_simplex3.rs","byte_start":423043,"byte_end":423058,"line_start":99,"line_end":99,"column_start":12,"column_end":27},"name":"prev_proj_coord","qualname":"<VoronoiSimplex<N>>::prev_proj_coord","value":"fn (&self, i: usize) -> N","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the barycentric coordinate associated to the `i`-th before the last call to `project_origin_and_reduce`.\n","sig":null,"attributes":[{"value":"/ Retrieves the barycentric coordinate associated to the `i`-th before the last call to `project_origin_and_reduce`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/voronoi_simplex3.rs","byte_start":422913,"byte_end":423031,"line_start":98,"line_end":98,"column_start":5,"column_end":123}}]},{"kind":"Method","id":{"krate":0,"index":3003},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/voronoi_simplex3.rs","byte_start":423278,"byte_end":423288,"line_start":105,"line_end":105,"column_start":12,"column_end":22},"name":"prev_point","qualname":"<VoronoiSimplex<N>>::prev_point","value":"fn (&self, i: usize) -> &CSOPoint<N>","parent":null,"children":[],"decl_id":null,"docs":" The i-th point of the simplex before the last call to `projet_origin_and_reduce`.\n","sig":null,"attributes":[{"value":"/ The i-th point of the simplex before the last call to `projet_origin_and_reduce`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/voronoi_simplex3.rs","byte_start":423181,"byte_end":423266,"line_start":104,"line_end":104,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":3004},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/voronoi_simplex3.rs","byte_start":423817,"byte_end":423842,"line_start":115,"line_end":115,"column_start":12,"column_end":37},"name":"project_origin_and_reduce","qualname":"<VoronoiSimplex<N>>::project_origin_and_reduce","value":"fn (&mut self) -> Point<N>","parent":null,"children":[],"decl_id":null,"docs":" Projets the origin on the boundary of this simplex and reduces `self` the smallest subsimplex containing the origin.","sig":null,"attributes":[{"value":"/ Projets the origin on the boundary of this simplex and reduces `self` the smallest subsimplex containing the origin.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/voronoi_simplex3.rs","byte_start":423442,"byte_end":423562,"line_start":110,"line_end":110,"column_start":5,"column_end":125}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/voronoi_simplex3.rs","byte_start":423567,"byte_end":423570,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ Retruns the result of the projection or Point::origin() if the origin lies inside of the simplex.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/voronoi_simplex3.rs","byte_start":423575,"byte_end":423676,"line_start":112,"line_end":112,"column_start":5,"column_end":106}},{"value":"/ The state of the samplex before projection is saved, and can be retrieved using the methods prefixed","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/voronoi_simplex3.rs","byte_start":423681,"byte_end":423785,"line_start":113,"line_end":113,"column_start":5,"column_end":109}},{"value":"/ by `prev_`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/voronoi_simplex3.rs","byte_start":423790,"byte_end":423805,"line_start":114,"line_end":114,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3005},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/voronoi_simplex3.rs","byte_start":429894,"byte_end":429908,"line_start":283,"line_end":283,"column_start":12,"column_end":26},"name":"project_origin","qualname":"<VoronoiSimplex<N>>::project_origin","value":"fn (&mut self) -> Point<N>","parent":null,"children":[],"decl_id":null,"docs":" Compute the projection of the origin on the boundary of this simplex.\n","sig":null,"attributes":[{"value":"/ Compute the projection of the origin on the boundary of this simplex.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/voronoi_simplex3.rs","byte_start":429809,"byte_end":429882,"line_start":282,"line_end":282,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":3006},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/voronoi_simplex3.rs","byte_start":430952,"byte_end":430966,"line_start":311,"line_end":311,"column_start":12,"column_end":26},"name":"contains_point","qualname":"<VoronoiSimplex<N>>::contains_point","value":"fn (&self, pt: &Point<N>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if the given point is already a vertex of this simplex.\n","sig":null,"attributes":[{"value":"/ Tests if the given point is already a vertex of this simplex.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/voronoi_simplex3.rs","byte_start":430875,"byte_end":430940,"line_start":310,"line_end":310,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3007},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/voronoi_simplex3.rs","byte_start":431245,"byte_end":431254,"line_start":322,"line_end":322,"column_start":12,"column_end":21},"name":"dimension","qualname":"<VoronoiSimplex<N>>::dimension","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The dimension of the smallest subspace that can contain this simplex.\n","sig":null,"attributes":[{"value":"/ The dimension of the smallest subspace that can contain this simplex.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/voronoi_simplex3.rs","byte_start":431160,"byte_end":431233,"line_start":321,"line_end":321,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":3008},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/voronoi_simplex3.rs","byte_start":431398,"byte_end":431412,"line_start":327,"line_end":327,"column_start":12,"column_end":26},"name":"prev_dimension","qualname":"<VoronoiSimplex<N>>::prev_dimension","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The dimension of the simplex before the last call to `project_origin_and_reduce`.\n","sig":null,"attributes":[{"value":"/ The dimension of the simplex before the last call to `project_origin_and_reduce`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/voronoi_simplex3.rs","byte_start":431301,"byte_end":431386,"line_start":326,"line_end":326,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":3009},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/voronoi_simplex3.rs","byte_start":431539,"byte_end":431549,"line_start":332,"line_end":332,"column_start":12,"column_end":22},"name":"max_sq_len","qualname":"<VoronoiSimplex<N>>::max_sq_len","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The maximum squared length of the vertices of this simplex.\n","sig":null,"attributes":[{"value":"/ The maximum squared length of the vertices of this simplex.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/voronoi_simplex3.rs","byte_start":431464,"byte_end":431527,"line_start":331,"line_end":331,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3010},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/voronoi_simplex3.rs","byte_start":431904,"byte_end":431915,"line_start":347,"line_end":347,"column_start":12,"column_end":23},"name":"modify_pnts","qualname":"<VoronoiSimplex<N>>::modify_pnts","value":"fn (&mut self, f: &dyn Fn(&mut CSOPoint<N>)) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Apply a function to all the vertices of this simplex.\n","sig":null,"attributes":[{"value":"/ Apply a function to all the vertices of this simplex.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/voronoi_simplex3.rs","byte_start":431835,"byte_end":431892,"line_start":346,"line_end":346,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7284},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/closest_points/closest_points.rs","byte_start":433641,"byte_end":433653,"line_start":10,"line_end":10,"column_start":5,"column_end":17},"name":"Intersecting","qualname":"::query::closest_points::closest_points::ClosestPoints::Intersecting","value":"ClosestPoints::Intersecting","parent":{"krate":0,"index":7282},"children":[],"decl_id":null,"docs":" The two objects are intersecting.\n","sig":null,"attributes":[{"value":"/ The two objects are intersecting.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/closest_points/closest_points.rs","byte_start":433599,"byte_end":433636,"line_start":9,"line_end":9,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7286},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/closest_points/closest_points.rs","byte_start":433751,"byte_end":433763,"line_start":12,"line_end":12,"column_start":5,"column_end":17},"name":"WithinMargin","qualname":"::query::closest_points::closest_points::ClosestPoints::WithinMargin","value":"ClosestPoints::WithinMargin(Point<N>, Point<N>)","parent":{"krate":0,"index":7282},"children":[],"decl_id":null,"docs":" The two objects are non-intersecting but closer than a given user-defined distance.\n","sig":null,"attributes":[{"value":"/ The two objects are non-intersecting but closer than a given user-defined distance.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/closest_points/closest_points.rs","byte_start":433659,"byte_end":433746,"line_start":11,"line_end":11,"column_start":5,"column_end":92}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7290},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/closest_points/closest_points.rs","byte_start":433882,"byte_end":433890,"line_start":14,"line_end":14,"column_start":5,"column_end":13},"name":"Disjoint","qualname":"::query::closest_points::closest_points::ClosestPoints::Disjoint","value":"ClosestPoints::Disjoint","parent":{"krate":0,"index":7282},"children":[],"decl_id":null,"docs":" The two objects are non-intersecting and further than a given user-defined distance.\n","sig":null,"attributes":[{"value":"/ The two objects are non-intersecting and further than a given user-defined distance.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/closest_points/closest_points.rs","byte_start":433789,"byte_end":433877,"line_start":13,"line_end":13,"column_start":5,"column_end":93}}]},{"kind":"Enum","id":{"krate":0,"index":7282},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/closest_points/closest_points.rs","byte_start":433565,"byte_end":433578,"line_start":8,"line_end":8,"column_start":10,"column_end":23},"name":"ClosestPoints","qualname":"::query::closest_points::closest_points::ClosestPoints","value":"ClosestPoints::{Intersecting, WithinMargin, Disjoint}","parent":null,"children":[{"krate":0,"index":7284},{"krate":0,"index":7286},{"krate":0,"index":7290}],"decl_id":null,"docs":" Closest points information.\n","sig":null,"attributes":[{"value":"/ Closest points information.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/closest_points/closest_points.rs","byte_start":433420,"byte_end":433451,"line_start":5,"line_end":5,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":3037},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/closest_points/closest_points.rs","byte_start":433974,"byte_end":433978,"line_start":19,"line_end":19,"column_start":12,"column_end":16},"name":"flip","qualname":"<ClosestPoints<N>>::flip","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Swaps the two points.\n","sig":null,"attributes":[{"value":"/ Swaps the two points.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/closest_points/closest_points.rs","byte_start":433937,"byte_end":433962,"line_start":18,"line_end":18,"column_start":5,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":3045},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/closest_points/closest_points_ball_ball.rs","byte_start":434273,"byte_end":434297,"line_start":8,"line_end":8,"column_start":8,"column_end":32},"name":"closest_points_ball_ball","qualname":"::query::closest_points::closest_points_ball_ball::closest_points_ball_ball","value":"fn <N> (center1: &Point<N>, b1: &Ball<N>, center2: &Point<N>, b2: &Ball<N>, margin: N) -> ClosestPoints<N>","parent":null,"children":[],"decl_id":null,"docs":" Proximity between balls.\n","sig":null,"attributes":[{"value":"/ Proximity between balls.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/closest_points/closest_points_ball_ball.rs","byte_start":434227,"byte_end":434255,"line_start":6,"line_end":6,"column_start":1,"column_end":29}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/closest_points/closest_points_ball_ball.rs","byte_start":434256,"byte_end":434265,"line_start":7,"line_end":7,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":3066},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/closest_points/closest_points_composite_shape_shape.rs","byte_start":435380,"byte_end":435416,"line_start":9,"line_end":9,"column_start":8,"column_end":44},"name":"closest_points_composite_shape_shape","qualname":"::query::closest_points::closest_points_composite_shape_shape::closest_points_composite_shape_shape","value":"fn <N, G1> (m1: &Isometry<N>, g1: &G1, m2: &Isometry<N>, g2: &dyn Shape<N>, margin: N) -> ClosestPoints<N>","parent":null,"children":[],"decl_id":null,"docs":" Closest points between a composite shape and any other shape.\n","sig":null,"attributes":[{"value":"/ Closest points between a composite shape and any other shape.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/closest_points/closest_points_composite_shape_shape.rs","byte_start":435307,"byte_end":435372,"line_start":8,"line_end":8,"column_start":1,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":3069},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/closest_points/closest_points_composite_shape_shape.rs","byte_start":435894,"byte_end":435930,"line_start":29,"line_end":29,"column_start":8,"column_end":44},"name":"closest_points_shape_composite_shape","qualname":"::query::closest_points::closest_points_composite_shape_shape::closest_points_shape_composite_shape","value":"fn <N, G2> (m1: &Isometry<N>, g1: &dyn Shape<N>, m2: &Isometry<N>, g2: &G2, margin: N) -> ClosestPoints<N>","parent":null,"children":[],"decl_id":null,"docs":" Closest points between a shape and a composite shape.\n","sig":null,"attributes":[{"value":"/ Closest points between a shape and a composite shape.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/closest_points/closest_points_composite_shape_shape.rs","byte_start":435829,"byte_end":435886,"line_start":28,"line_end":28,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":3102},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/closest_points/closest_points_line_line.rs","byte_start":439115,"byte_end":439150,"line_start":9,"line_end":9,"column_start":8,"column_end":43},"name":"closest_points_line_line_parameters","qualname":"::query::closest_points::closest_points_line_line::closest_points_line_line_parameters","value":"fn <N> (orig1: &Point<N>, dir1: &Vector<N>, orig2: &Point<N>, dir2: &Vector<N>) -> (N, N)","parent":null,"children":[],"decl_id":null,"docs":" Closest points between two lines.","sig":null,"attributes":[{"value":"/ Closest points between two lines.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/closest_points/closest_points_line_line.rs","byte_start":438919,"byte_end":438956,"line_start":4,"line_end":4,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/closest_points/closest_points_line_line.rs","byte_start":438957,"byte_end":438960,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ The result, say `res`, is such that the closest points between both lines are","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/closest_points/closest_points_line_line.rs","byte_start":438961,"byte_end":439042,"line_start":6,"line_end":6,"column_start":1,"column_end":82}},{"value":"/ `orig1 + dir1 * res.0` and `orig2 + dir2 * res.1`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/closest_points/closest_points_line_line.rs","byte_start":439043,"byte_end":439097,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/closest_points/closest_points_line_line.rs","byte_start":439098,"byte_end":439107,"line_start":8,"line_end":8,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":3104},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/closest_points/closest_points_line_line.rs","byte_start":439776,"byte_end":439815,"line_start":27,"line_end":27,"column_start":8,"column_end":47},"name":"closest_points_line_line_parameters_eps","qualname":"::query::closest_points::closest_points_line_line::closest_points_line_line_parameters_eps","value":"fn <N> (orig1: &Point<N>, dir1: &Vector<N>, orig2: &Point<N>, dir2: &Vector<N>, eps: N) -> (N, N, bool)","parent":null,"children":[],"decl_id":null,"docs":" Closest points between two lines with a custom tolerance epsilon.","sig":null,"attributes":[{"value":"/ Closest points between two lines with a custom tolerance epsilon.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/closest_points/closest_points_line_line.rs","byte_start":439401,"byte_end":439470,"line_start":20,"line_end":20,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/closest_points/closest_points_line_line.rs","byte_start":439471,"byte_end":439474,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The result, say `res`, is such that the closest points between both lines are","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/closest_points/closest_points_line_line.rs","byte_start":439475,"byte_end":439556,"line_start":22,"line_end":22,"column_start":1,"column_end":82}},{"value":"/ `orig1 + dir1 * res.0` and `orig2 + dir2 * res.1`. If the lines are parallel","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/closest_points/closest_points_line_line.rs","byte_start":439557,"byte_end":439637,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/ then `res.2` is set to `true` and the returned closest points are `orig1` and","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/closest_points/closest_points_line_line.rs","byte_start":439638,"byte_end":439719,"line_start":24,"line_end":24,"column_start":1,"column_end":82}},{"value":"/ its projection on the second line.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/closest_points/closest_points_line_line.rs","byte_start":439720,"byte_end":439758,"line_start":25,"line_end":25,"column_start":1,"column_end":39}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/closest_points/closest_points_line_line.rs","byte_start":439759,"byte_end":439768,"line_start":26,"line_end":26,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":3106},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/closest_points/closest_points_line_line.rs","byte_start":440989,"byte_end":441013,"line_start":75,"line_end":75,"column_start":8,"column_end":32},"name":"closest_points_line_line","qualname":"::query::closest_points::closest_points_line_line::closest_points_line_line","value":"fn <N> (orig1: &Point<N>, dir1: &Vector<N>, orig2: &Point<N>, dir2: &Vector<N>) -> (Point<N>, Point<N>)","parent":null,"children":[],"decl_id":null,"docs":" Closest points between two segments.\n","sig":null,"attributes":[{"value":"/ Closest points between two segments.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/closest_points/closest_points_line_line.rs","byte_start":440931,"byte_end":440971,"line_start":73,"line_end":73,"column_start":1,"column_end":41}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/closest_points/closest_points_line_line.rs","byte_start":440972,"byte_end":440981,"line_start":74,"line_end":74,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":3118},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/closest_points/closest_points_plane_support_map.rs","byte_start":441522,"byte_end":441554,"line_start":9,"line_end":9,"column_start":8,"column_end":40},"name":"closest_points_plane_support_map","qualname":"::query::closest_points::closest_points_plane_support_map::closest_points_plane_support_map","value":"fn <N, G> (mplane: &Isometry<N>, plane: &Plane<N>, mother: &Isometry<N>, other: &G, margin: N) -> ClosestPoints<N>","parent":null,"children":[],"decl_id":null,"docs":" Closest points between a plane and a support-mapped shape (Cuboid, ConvexHull, etc.)\n","sig":null,"attributes":[{"value":"/ Closest points between a plane and a support-mapped shape (Cuboid, ConvexHull, etc.)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/closest_points/closest_points_plane_support_map.rs","byte_start":441426,"byte_end":441514,"line_start":8,"line_end":8,"column_start":1,"column_end":89}}]},{"kind":"Function","id":{"krate":0,"index":3121},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/closest_points/closest_points_plane_support_map.rs","byte_start":442464,"byte_end":442496,"line_start":40,"line_end":40,"column_start":8,"column_end":40},"name":"closest_points_support_map_plane","qualname":"::query::closest_points::closest_points_plane_support_map::closest_points_support_map_plane","value":"fn <N, G> (mother: &Isometry<N>, other: &G, mplane: &Isometry<N>, plane: &Plane<N>, margin: N) -> ClosestPoints<N>","parent":null,"children":[],"decl_id":null,"docs":" Closest points between a support-mapped shape (Cuboid, ConvexHull, etc.) and a plane.\n","sig":null,"attributes":[{"value":"/ Closest points between a support-mapped shape (Cuboid, ConvexHull, etc.) and a plane.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/closest_points/closest_points_plane_support_map.rs","byte_start":442367,"byte_end":442456,"line_start":39,"line_end":39,"column_start":1,"column_end":90}}]},{"kind":"Function","id":{"krate":0,"index":3138},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/closest_points/closest_points_segment_segment.rs","byte_start":443057,"byte_end":443087,"line_start":10,"line_end":10,"column_start":8,"column_end":38},"name":"closest_points_segment_segment","qualname":"::query::closest_points::closest_points_segment_segment::closest_points_segment_segment","value":"fn <N> (m1: &Isometry<N>, seg1: &Segment<N>, m2: &Isometry<N>, seg2: &Segment<N>, margin: N) -> ClosestPoints<N>","parent":null,"children":[],"decl_id":null,"docs":" Closest points between segments.\n","sig":null,"attributes":[{"value":"/ Closest points between segments.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/closest_points/closest_points_segment_segment.rs","byte_start":443003,"byte_end":443039,"line_start":8,"line_end":8,"column_start":1,"column_end":37}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/closest_points/closest_points_segment_segment.rs","byte_start":443040,"byte_end":443049,"line_start":9,"line_end":9,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":3140},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/closest_points/closest_points_segment_segment.rs","byte_start":443706,"byte_end":443751,"line_start":31,"line_end":31,"column_start":8,"column_end":53},"name":"closest_points_segment_segment_with_locations","qualname":"::query::closest_points::closest_points_segment_segment::closest_points_segment_segment_with_locations","value":"fn <N> (m1: &Isometry<N>, seg1: &Segment<N>, m2: &Isometry<N>, seg2: &Segment<N>) -> (SegmentPointLocation<N>, SegmentPointLocation<N>)","parent":null,"children":[],"decl_id":null,"docs":" Closest points between two segments.\n","sig":null,"attributes":[{"value":"/ Closest points between two segments.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/closest_points/closest_points_segment_segment.rs","byte_start":443648,"byte_end":443688,"line_start":29,"line_end":29,"column_start":1,"column_end":41}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/closest_points/closest_points_segment_segment.rs","byte_start":443689,"byte_end":443698,"line_start":30,"line_end":30,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":3142},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/closest_points/closest_points_segment_segment.rs","byte_start":444202,"byte_end":444250,"line_start":46,"line_end":46,"column_start":8,"column_end":56},"name":"closest_points_segment_segment_with_locations_nD","qualname":"::query::closest_points::closest_points_segment_segment::closest_points_segment_segment_with_locations_nD","value":"fn <N, D> (seg1: (&Point<N, D>, &Point<N, D>), seg2: (&Point<N, D>, &Point<N, D>)) -> (SegmentPointLocation<N>, SegmentPointLocation<N>)","parent":null,"children":[],"decl_id":null,"docs":" Segment-segment closest points computation in an arbitrary dimension.\n","sig":null,"attributes":[{"value":"/ Segment-segment closest points computation in an arbitrary dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/closest_points/closest_points_segment_segment.rs","byte_start":444086,"byte_end":444159,"line_start":43,"line_end":43,"column_start":1,"column_end":74}},{"value":"allow(non_snake_case)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/closest_points/closest_points_segment_segment.rs","byte_start":444160,"byte_end":444184,"line_start":44,"line_end":44,"column_start":1,"column_end":25}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/closest_points/closest_points_segment_segment.rs","byte_start":444185,"byte_end":444194,"line_start":45,"line_end":45,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":3158},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/closest_points/closest_points_shape_shape.rs","byte_start":446508,"byte_end":446522,"line_start":10,"line_end":10,"column_start":8,"column_end":22},"name":"closest_points","qualname":"::query::closest_points::closest_points_shape_shape::closest_points","value":"fn <N> (m1: &Isometry<N>, g1: &dyn Shape<N>, m2: &Isometry<N>, g2: &dyn Shape<N>, max_dist: N) -> ClosestPoints<N>","parent":null,"children":[],"decl_id":null,"docs":" Computes the pair of closest points between two shapes.","sig":null,"attributes":[{"value":"/ Computes the pair of closest points between two shapes.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/closest_points/closest_points_shape_shape.rs","byte_start":446350,"byte_end":446409,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/closest_points/closest_points_shape_shape.rs","byte_start":446410,"byte_end":446413,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Returns `None` if the objects are separated by a distance greater than `max_dist`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/closest_points/closest_points_shape_shape.rs","byte_start":446414,"byte_end":446500,"line_start":9,"line_end":9,"column_start":1,"column_end":87}}]},{"kind":"Function","id":{"krate":0,"index":3174},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/closest_points/closest_points_support_map_support_map.rs","byte_start":448319,"byte_end":448357,"line_start":9,"line_end":9,"column_start":8,"column_end":46},"name":"closest_points_support_map_support_map","qualname":"::query::closest_points::closest_points_support_map_support_map::closest_points_support_map_support_map","value":"fn <N, G1, G2> (m1: &Isometry<N>, g1: &G1, m2: &Isometry<N>, g2: &G2, prediction: N) -> ClosestPoints<N>","parent":null,"children":[],"decl_id":null,"docs":" Closest points between support-mapped shapes (`Cuboid`, `ConvexHull`, etc.)\n","sig":null,"attributes":[{"value":"/ Closest points between support-mapped shapes (`Cuboid`, `ConvexHull`, etc.)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/closest_points/closest_points_support_map_support_map.rs","byte_start":448232,"byte_end":448311,"line_start":8,"line_end":8,"column_start":1,"column_end":80}}]},{"kind":"Function","id":{"krate":0,"index":3178},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/closest_points/closest_points_support_map_support_map.rs","byte_start":449205,"byte_end":449255,"line_start":40,"line_end":40,"column_start":8,"column_end":58},"name":"closest_points_support_map_support_map_with_params","qualname":"::query::closest_points::closest_points_support_map_support_map::closest_points_support_map_support_map_with_params","value":"fn <N, G1, G2> (m1: &Isometry<N>, g1: &G1, m2: &Isometry<N>, g2: &G2, prediction: N, simplex: &mut VoronoiSimplex<N>, init_dir: Option<Vector<N>>) -> GJKResult<N>","parent":null,"children":[],"decl_id":null,"docs":" Closest points between support-mapped shapes (`Cuboid`, `ConvexHull`, etc.)","sig":null,"attributes":[{"value":"/ Closest points between support-mapped shapes (`Cuboid`, `ConvexHull`, etc.)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/closest_points/closest_points_support_map_support_map.rs","byte_start":449034,"byte_end":449113,"line_start":37,"line_end":37,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/closest_points/closest_points_support_map_support_map.rs","byte_start":449114,"byte_end":449117,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ This allows a more fine grained control other the underlying GJK algorigtm.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/closest_points/closest_points_support_map_support_map.rs","byte_start":449118,"byte_end":449197,"line_start":39,"line_end":39,"column_start":1,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":7311},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact.rs","byte_start":451530,"byte_end":451539,"line_start":9,"line_end":9,"column_start":16,"column_end":25},"name":"ContactId","qualname":"::query::contact::contact::ContactId","value":"","parent":null,"children":[],"decl_id":null,"docs":" A contact identifier which is unique within a contact manifold.\n","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/slotmap-0.4.0/src/lib.rs","byte_start":10902433,"byte_end":10902453,"line_start":415,"line_end":415,"column_start":9,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":7339},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact.rs","byte_start":451699,"byte_end":451706,"line_start":15,"line_end":15,"column_start":12,"column_end":19},"name":"Contact","qualname":"::query::contact::contact::Contact","value":"Contact { world1, world2, normal, depth }","parent":null,"children":[{"krate":0,"index":7341},{"krate":0,"index":7342},{"krate":0,"index":7343},{"krate":0,"index":7344}],"decl_id":null,"docs":" Geometric description of a contact.\n","sig":null,"attributes":[{"value":"/ Geometric description of a contact.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact.rs","byte_start":451544,"byte_end":451583,"line_start":12,"line_end":12,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":7341},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact.rs","byte_start":451826,"byte_end":451832,"line_start":17,"line_end":17,"column_start":9,"column_end":15},"name":"world1","qualname":"::query::contact::contact::Contact::world1","value":"na::Point<N, na::U3>","parent":{"krate":0,"index":7339},"children":[],"decl_id":null,"docs":" Position of the contact on the first object. The position is expressed in world space.\n","sig":null,"attributes":[{"value":"/ Position of the contact on the first object. The position is expressed in world space.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact.rs","byte_start":451727,"byte_end":451817,"line_start":16,"line_end":16,"column_start":5,"column_end":95}}]},{"kind":"Field","id":{"krate":0,"index":7342},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact.rs","byte_start":451949,"byte_end":451955,"line_start":20,"line_end":20,"column_start":9,"column_end":15},"name":"world2","qualname":"::query::contact::contact::Contact::world2","value":"na::Point<N, na::U3>","parent":{"krate":0,"index":7339},"children":[],"decl_id":null,"docs":" Position of the contact on the second object. The position is expressed in world space.\n","sig":null,"attributes":[{"value":"/ Position of the contact on the second object. The position is expressed in world space.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact.rs","byte_start":451849,"byte_end":451940,"line_start":19,"line_end":19,"column_start":5,"column_end":96}}]},{"kind":"Field","id":{"krate":0,"index":7343},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact.rs","byte_start":451999,"byte_end":452005,"line_start":23,"line_end":23,"column_start":9,"column_end":15},"name":"normal","qualname":"::query::contact::contact::Contact::normal","value":"na::Unit<na::Matrix<N, na::U3, na::U1, <na::DefaultAllocator as na::allocator::Allocator<N, na::U3>>::Buffer>>","parent":{"krate":0,"index":7339},"children":[],"decl_id":null,"docs":" Contact normal\n","sig":null,"attributes":[{"value":"/ Contact normal","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact.rs","byte_start":451972,"byte_end":451990,"line_start":22,"line_end":22,"column_start":5,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":7344},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact.rs","byte_start":452059,"byte_end":452064,"line_start":26,"line_end":26,"column_start":9,"column_end":14},"name":"depth","qualname":"::query::contact::contact::Contact::depth","value":"N","parent":{"krate":0,"index":7339},"children":[],"decl_id":null,"docs":" Penetration depth\n","sig":null,"attributes":[{"value":"/ Penetration depth","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact.rs","byte_start":452029,"byte_end":452050,"line_start":25,"line_end":25,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":3222},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact.rs","byte_start":452160,"byte_end":452163,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"new","qualname":"<Contact<N>>::new","value":"fn (world1: Point<N>, world2: Point<N>, normal: Unit<Vector<N>>, depth: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new contact.\n","sig":null,"attributes":[{"value":"/ Creates a new contact.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact.rs","byte_start":452108,"byte_end":452134,"line_start":30,"line_end":30,"column_start":5,"column_end":31}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact.rs","byte_start":452139,"byte_end":452148,"line_start":31,"line_end":31,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3223},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact.rs","byte_start":452462,"byte_end":452474,"line_start":43,"line_end":43,"column_start":12,"column_end":24},"name":"new_wo_depth","qualname":"<Contact<N>>::new_wo_depth","value":"fn (world1: Point<N>, world2: Point<N>, normal: Unit<Vector<N>>) -> Contact<N>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new contact, computing automatically the penetration depth.\n","sig":null,"attributes":[{"value":"/ Creates a new contact, computing automatically the penetration depth.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact.rs","byte_start":452363,"byte_end":452436,"line_start":41,"line_end":41,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact.rs","byte_start":452441,"byte_end":452450,"line_start":42,"line_end":42,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3226},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact.rs","byte_start":452788,"byte_end":452792,"line_start":52,"line_end":52,"column_start":12,"column_end":16},"name":"flip","qualname":"<Contact<N>>::flip","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reverts the contact normal and swaps `world1` and `world2`.\n","sig":null,"attributes":[{"value":"/ Reverts the contact normal and swaps `world1` and `world2`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact.rs","byte_start":452699,"byte_end":452762,"line_start":50,"line_end":50,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact.rs","byte_start":452767,"byte_end":452776,"line_start":51,"line_end":51,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":7359},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact.rs","byte_start":453373,"byte_end":453387,"line_start":65,"line_end":65,"column_start":12,"column_end":26},"name":"TrackedContact","qualname":"::query::contact::contact::TrackedContact","value":"TrackedContact { contact, kinematic, id }","parent":null,"children":[{"krate":0,"index":7361},{"krate":0,"index":7362},{"krate":0,"index":7363}],"decl_id":null,"docs":" A contact combined with contact kinematic information as well as a persistent identifier.","sig":null,"attributes":[{"value":"/ A contact combined with contact kinematic information as well as a persistent identifier.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact.rs","byte_start":452906,"byte_end":452999,"line_start":58,"line_end":58,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact.rs","byte_start":453000,"byte_end":453003,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ When ncollide is used to compute contact points between moving solids, it will attempt to","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact.rs","byte_start":453004,"byte_end":453097,"line_start":60,"line_end":60,"column_start":1,"column_end":94}},{"value":"/ match contact points found at successive frames. Two contact points are said to \"match\" if","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact.rs","byte_start":453098,"byte_end":453192,"line_start":61,"line_end":61,"column_start":1,"column_end":95}},{"value":"/ they can be seen as the same contact point that moved in-between frames. Two matching","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact.rs","byte_start":453193,"byte_end":453282,"line_start":62,"line_end":62,"column_start":1,"column_end":90}},{"value":"/ contact points are given the same `id` here.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact.rs","byte_start":453283,"byte_end":453331,"line_start":63,"line_end":63,"column_start":1,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":7361},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact.rs","byte_start":453455,"byte_end":453462,"line_start":67,"line_end":67,"column_start":9,"column_end":16},"name":"contact","qualname":"::query::contact::contact::TrackedContact::contact","value":"query::contact::contact::Contact<N>","parent":{"krate":0,"index":7359},"children":[],"decl_id":null,"docs":" The geometric contact information.\n","sig":null,"attributes":[{"value":"/ The geometric contact information.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact.rs","byte_start":453408,"byte_end":453446,"line_start":66,"line_end":66,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":7362},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact.rs","byte_start":453521,"byte_end":453530,"line_start":69,"line_end":69,"column_start":9,"column_end":18},"name":"kinematic","qualname":"::query::contact::contact::TrackedContact::kinematic","value":"query::contact::contact_kinematic::ContactKinematic<N>","parent":{"krate":0,"index":7359},"children":[],"decl_id":null,"docs":" The local contact kinematic.\n","sig":null,"attributes":[{"value":"/ The local contact kinematic.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact.rs","byte_start":453480,"byte_end":453512,"line_start":68,"line_end":68,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":7363},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact.rs","byte_start":453601,"byte_end":453603,"line_start":71,"line_end":71,"column_start":9,"column_end":11},"name":"id","qualname":"::query::contact::contact::TrackedContact::id","value":"query::contact::contact::ContactId","parent":{"krate":0,"index":7359},"children":[],"decl_id":null,"docs":" The identifier of this contact.\n","sig":null,"attributes":[{"value":"/ The identifier of this contact.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact.rs","byte_start":453557,"byte_end":453592,"line_start":70,"line_end":70,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3229},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact.rs","byte_start":453708,"byte_end":453711,"line_start":76,"line_end":76,"column_start":12,"column_end":15},"name":"new","qualname":"<TrackedContact<N>>::new","value":"fn (contact: Contact<N>, kinematic: ContactKinematic<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new tracked contact.\n","sig":null,"attributes":[{"value":"/ Creates a new tracked contact.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact.rs","byte_start":453662,"byte_end":453696,"line_start":75,"line_end":75,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":7372},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact.rs","byte_start":454001,"byte_end":454018,"line_start":87,"line_end":87,"column_start":12,"column_end":29},"name":"ContactPrediction","qualname":"::query::contact::contact::ContactPrediction","value":"ContactPrediction {  }","parent":null,"children":[{"krate":0,"index":7374},{"krate":0,"index":7375},{"krate":0,"index":7376},{"krate":0,"index":7377},{"krate":0,"index":7378},{"krate":0,"index":7379},{"krate":0,"index":7380}],"decl_id":null,"docs":" The prediction parameters for contact determination.\n","sig":null,"attributes":[{"value":"/ The prediction parameters for contact determination.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact.rs","byte_start":453898,"byte_end":453954,"line_start":85,"line_end":85,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3232},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact.rs","byte_start":454266,"byte_end":454269,"line_start":99,"line_end":99,"column_start":12,"column_end":15},"name":"new","qualname":"<ContactPrediction<N>>::new","value":"fn (linear: N, angular1: N, angular2: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Initialize prediction parameters.\n","sig":null,"attributes":[{"value":"/ Initialize prediction parameters.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact.rs","byte_start":454217,"byte_end":454254,"line_start":98,"line_end":98,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3233},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact.rs","byte_start":454650,"byte_end":454656,"line_start":113,"line_end":113,"column_start":12,"column_end":18},"name":"linear","qualname":"<ContactPrediction<N>>::linear","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The linear prediction.\n","sig":null,"attributes":[{"value":"/ The linear prediction.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact.rs","byte_start":454598,"byte_end":454624,"line_start":111,"line_end":111,"column_start":5,"column_end":31}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact.rs","byte_start":454629,"byte_end":454638,"line_start":112,"line_end":112,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3234},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact.rs","byte_start":454755,"byte_end":454765,"line_start":119,"line_end":119,"column_start":12,"column_end":22},"name":"set_linear","qualname":"<ContactPrediction<N>>::set_linear","value":"fn (&mut self, val: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets linear prediction.\n","sig":null,"attributes":[{"value":"/ Sets linear prediction.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact.rs","byte_start":454702,"byte_end":454729,"line_start":117,"line_end":117,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact.rs","byte_start":454734,"byte_end":454743,"line_start":118,"line_end":118,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3235},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact.rs","byte_start":454901,"byte_end":454909,"line_start":125,"line_end":125,"column_start":12,"column_end":20},"name":"angular1","qualname":"<ContactPrediction<N>>::angular1","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The angular regularization for the first solid.\n","sig":null,"attributes":[{"value":"/ The angular regularization for the first solid.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact.rs","byte_start":454824,"byte_end":454875,"line_start":123,"line_end":123,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact.rs","byte_start":454880,"byte_end":454889,"line_start":124,"line_end":124,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3236},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact.rs","byte_start":455035,"byte_end":455043,"line_start":131,"line_end":131,"column_start":12,"column_end":20},"name":"angular2","qualname":"<ContactPrediction<N>>::angular2","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The angular regularization for the second solid.\n","sig":null,"attributes":[{"value":"/ The angular regularization for the second solid.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact.rs","byte_start":454957,"byte_end":455009,"line_start":129,"line_end":129,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact.rs","byte_start":455014,"byte_end":455023,"line_start":130,"line_end":130,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3237},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact.rs","byte_start":455178,"byte_end":455190,"line_start":137,"line_end":137,"column_start":12,"column_end":24},"name":"cos_angular1","qualname":"<ContactPrediction<N>>::cos_angular1","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The cosine of angular regularization for the first solid.\n","sig":null,"attributes":[{"value":"/ The cosine of angular regularization for the first solid.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact.rs","byte_start":455091,"byte_end":455152,"line_start":135,"line_end":135,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact.rs","byte_start":455157,"byte_end":455166,"line_start":136,"line_end":136,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3238},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact.rs","byte_start":455327,"byte_end":455339,"line_start":143,"line_end":143,"column_start":12,"column_end":24},"name":"cos_angular2","qualname":"<ContactPrediction<N>>::cos_angular2","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The cosine angular regularization for the second solid.\n","sig":null,"attributes":[{"value":"/ The cosine angular regularization for the second solid.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact.rs","byte_start":455242,"byte_end":455301,"line_start":141,"line_end":141,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact.rs","byte_start":455306,"byte_end":455315,"line_start":142,"line_end":142,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3239},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact.rs","byte_start":455476,"byte_end":455488,"line_start":149,"line_end":149,"column_start":12,"column_end":24},"name":"sin_angular1","qualname":"<ContactPrediction<N>>::sin_angular1","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The sine of angular regularization for the first solid.\n","sig":null,"attributes":[{"value":"/ The sine of angular regularization for the first solid.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact.rs","byte_start":455391,"byte_end":455450,"line_start":147,"line_end":147,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact.rs","byte_start":455455,"byte_end":455464,"line_start":148,"line_end":148,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3240},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact.rs","byte_start":455623,"byte_end":455635,"line_start":155,"line_end":155,"column_start":12,"column_end":24},"name":"sin_angular2","qualname":"<ContactPrediction<N>>::sin_angular2","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The sine angular regularization for the second solid.\n","sig":null,"attributes":[{"value":"/ The sine angular regularization for the second solid.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact.rs","byte_start":455540,"byte_end":455597,"line_start":153,"line_end":153,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact.rs","byte_start":455602,"byte_end":455611,"line_start":154,"line_end":154,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":3251},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_ball_ball.rs","byte_start":455848,"byte_end":455865,"line_start":8,"line_end":8,"column_start":8,"column_end":25},"name":"contact_ball_ball","qualname":"::query::contact::contact_ball_ball::contact_ball_ball","value":"fn <N> (center1: &Point<N>, b1: &Ball<N>, center2: &Point<N>, b2: &Ball<N>, prediction: N) -> Option<Contact<N>>","parent":null,"children":[],"decl_id":null,"docs":" Contact between balls.\n","sig":null,"attributes":[{"value":"/ Contact between balls.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_ball_ball.rs","byte_start":455804,"byte_end":455830,"line_start":6,"line_end":6,"column_start":1,"column_end":27}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_ball_ball.rs","byte_start":455831,"byte_end":455840,"line_start":7,"line_end":7,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":3266},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_ball_convex_polyhedron.rs","byte_start":457019,"byte_end":457049,"line_start":11,"line_end":11,"column_start":8,"column_end":38},"name":"contact_ball_convex_polyhedron","qualname":"::query::contact::contact_ball_convex_polyhedron::contact_ball_convex_polyhedron","value":"fn <N> (ball_center1: &Point<N>, ball1: &Ball<N>, m2: &Isometry<N>, shape2: &(impl Shape<N> + ?Sized), prediction: N) -> Option<Contact<N>>","parent":null,"children":[],"decl_id":null,"docs":" Contact between a ball and a convex polyhedron.","sig":null,"attributes":[{"value":"/ Contact between a ball and a convex polyhedron.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_ball_convex_polyhedron.rs","byte_start":456830,"byte_end":456881,"line_start":6,"line_end":6,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_ball_convex_polyhedron.rs","byte_start":456882,"byte_end":456885,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This function panics if the input shape does not implement","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_ball_convex_polyhedron.rs","byte_start":456886,"byte_end":456948,"line_start":8,"line_end":8,"column_start":1,"column_end":63}},{"value":"/ both the ConvexPolyhedron and PointQuery traits.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_ball_convex_polyhedron.rs","byte_start":456949,"byte_end":457001,"line_start":9,"line_end":9,"column_start":1,"column_end":53}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_ball_convex_polyhedron.rs","byte_start":457002,"byte_end":457011,"line_start":10,"line_end":10,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":3269},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_ball_convex_polyhedron.rs","byte_start":458801,"byte_end":458831,"line_start":65,"line_end":65,"column_start":8,"column_end":38},"name":"contact_convex_polyhedron_ball","qualname":"::query::contact::contact_ball_convex_polyhedron::contact_convex_polyhedron_ball","value":"fn <N> (m1: &Isometry<N>, poly1: &(impl Shape<N> + ?Sized), ball_center2: &Point<N>, ball2: &Ball<N>, prediction: N) -> Option<Contact<N>>","parent":null,"children":[],"decl_id":null,"docs":" Contact between a convex polyhedron and a ball.","sig":null,"attributes":[{"value":"/ Contact between a convex polyhedron and a ball.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_ball_convex_polyhedron.rs","byte_start":458612,"byte_end":458663,"line_start":60,"line_end":60,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_ball_convex_polyhedron.rs","byte_start":458664,"byte_end":458667,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ This function panics if the input shape does not implement","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_ball_convex_polyhedron.rs","byte_start":458668,"byte_end":458730,"line_start":62,"line_end":62,"column_start":1,"column_end":63}},{"value":"/ both the ConvexPolyhedron and PointQuery traits.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_ball_convex_polyhedron.rs","byte_start":458731,"byte_end":458783,"line_start":63,"line_end":63,"column_start":1,"column_end":53}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_ball_convex_polyhedron.rs","byte_start":458784,"byte_end":458793,"line_start":64,"line_end":64,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":3285},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_composite_shape_shape.rs","byte_start":459497,"byte_end":459526,"line_start":9,"line_end":9,"column_start":8,"column_end":37},"name":"contact_composite_shape_shape","qualname":"::query::contact::contact_composite_shape_shape::contact_composite_shape_shape","value":"fn <N, G1> (m1: &Isometry<N>, g1: &G1, m2: &Isometry<N>, g2: &dyn Shape<N>, prediction: N) -> Option<Contact<N>>","parent":null,"children":[],"decl_id":null,"docs":" Best contact between a composite shape (`Mesh`, `Compound`) and any other shape.\n","sig":null,"attributes":[{"value":"/ Best contact between a composite shape (`Mesh`, `Compound`) and any other shape.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_composite_shape_shape.rs","byte_start":459405,"byte_end":459489,"line_start":8,"line_end":8,"column_start":1,"column_end":85}}]},{"kind":"Function","id":{"krate":0,"index":3290},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_composite_shape_shape.rs","byte_start":460523,"byte_end":460552,"line_start":48,"line_end":48,"column_start":8,"column_end":37},"name":"contact_shape_composite_shape","qualname":"::query::contact::contact_composite_shape_shape::contact_shape_composite_shape","value":"fn <N, G2> (m1: &Isometry<N>, g1: &dyn Shape<N>, m2: &Isometry<N>, g2: &G2, prediction: N) -> Option<Contact<N>>","parent":null,"children":[],"decl_id":null,"docs":" Best contact between a shape and a composite (`Mesh`, `Compound`) shape.\n","sig":null,"attributes":[{"value":"/ Best contact between a shape and a composite (`Mesh`, `Compound`) shape.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_composite_shape_shape.rs","byte_start":460439,"byte_end":460515,"line_start":47,"line_end":47,"column_start":1,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7395},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":461219,"byte_end":461224,"line_start":10,"line_end":10,"column_start":5,"column_end":10},"name":"Point","qualname":"::query::contact::contact_kinematic::NeighborhoodGeometry::Point","value":"NeighborhoodGeometry::Point","parent":{"krate":0,"index":7393},"children":[],"decl_id":null,"docs":" A punctual approximation.\n","sig":null,"attributes":[{"value":"/ A punctual approximation.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":461185,"byte_end":461214,"line_start":9,"line_end":9,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7397},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":461260,"byte_end":461264,"line_start":12,"line_end":12,"column_start":5,"column_end":9},"name":"Line","qualname":"::query::contact::contact_kinematic::NeighborhoodGeometry::Line","value":"NeighborhoodGeometry::Line(Unit<Vector<N>>)","parent":{"krate":0,"index":7393},"children":[],"decl_id":null,"docs":" A line approximation.\n","sig":null,"attributes":[{"value":"/ A line approximation.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":461230,"byte_end":461255,"line_start":11,"line_end":11,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7400},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":461319,"byte_end":461324,"line_start":14,"line_end":14,"column_start":5,"column_end":10},"name":"Plane","qualname":"::query::contact::contact_kinematic::NeighborhoodGeometry::Plane","value":"NeighborhoodGeometry::Plane(Unit<Vector<N>>)","parent":{"krate":0,"index":7393},"children":[],"decl_id":null,"docs":" A planar approximation.\n","sig":null,"attributes":[{"value":"/ A planar approximation.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":461287,"byte_end":461314,"line_start":13,"line_end":13,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":7393},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":461144,"byte_end":461164,"line_start":8,"line_end":8,"column_start":10,"column_end":30},"name":"NeighborhoodGeometry","qualname":"::query::contact::contact_kinematic::NeighborhoodGeometry","value":"NeighborhoodGeometry::{Point, Line, Plane}","parent":null,"children":[{"krate":0,"index":7395},{"krate":0,"index":7397},{"krate":0,"index":7400}],"decl_id":null,"docs":" A shape geometry type at the neighborhood of a point.\n","sig":null,"attributes":[{"value":"/ A shape geometry type at the neighborhood of a point.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":461032,"byte_end":461089,"line_start":6,"line_end":6,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":7422},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":461452,"byte_end":461475,"line_start":19,"line_end":19,"column_start":12,"column_end":35},"name":"LocalShapeApproximation","qualname":"::query::contact::contact_kinematic::LocalShapeApproximation","value":"LocalShapeApproximation { feature, point, geometry }","parent":null,"children":[{"krate":0,"index":7424},{"krate":0,"index":7425},{"krate":0,"index":7426}],"decl_id":null,"docs":" The approximation of a shape on the neighborhood of a point.\n","sig":null,"attributes":[{"value":"/ The approximation of a shape on the neighborhood of a point.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":461346,"byte_end":461410,"line_start":17,"line_end":17,"column_start":1,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":7424},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":462160,"byte_end":462167,"line_start":32,"line_end":32,"column_start":9,"column_end":16},"name":"feature","qualname":"::query::contact::contact_kinematic::LocalShapeApproximation::feature","value":"shape::convex_polyhedron::FeatureId","parent":{"krate":0,"index":7422},"children":[],"decl_id":null,"docs":" The shape feature the point lies on.\n","sig":null,"attributes":[{"value":"/ The shape feature the point lies on.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":462111,"byte_end":462151,"line_start":31,"line_end":31,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":7425},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":462239,"byte_end":462244,"line_start":34,"line_end":34,"column_start":9,"column_end":14},"name":"point","qualname":"::query::contact::contact_kinematic::LocalShapeApproximation::point","value":"na::Point<N, na::U3>","parent":{"krate":0,"index":7422},"children":[],"decl_id":null,"docs":" The point where approximation is computed.\n","sig":null,"attributes":[{"value":"/ The point where approximation is computed.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":462184,"byte_end":462230,"line_start":33,"line_end":33,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":7426},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":462300,"byte_end":462308,"line_start":36,"line_end":36,"column_start":9,"column_end":17},"name":"geometry","qualname":"::query::contact::contact_kinematic::LocalShapeApproximation::geometry","value":"query::contact::contact_kinematic::NeighborhoodGeometry<N>","parent":{"krate":0,"index":7422},"children":[],"decl_id":null,"docs":" The approximation geometry.\n","sig":null,"attributes":[{"value":"/ The approximation geometry.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":462260,"byte_end":462291,"line_start":35,"line_end":35,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3310},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":462461,"byte_end":462464,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<LocalShapeApproximation<N>>::new","value":"fn (feature: FeatureId, point: Point<N>, geometry: NeighborhoodGeometry<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Initializes a new local shape approximation at `point`.\n","sig":null,"attributes":[{"value":"/ Initializes a new local shape approximation at `point`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":462390,"byte_end":462449,"line_start":40,"line_end":40,"column_start":5,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":7435},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":463069,"byte_end":463085,"line_start":57,"line_end":57,"column_start":12,"column_end":28},"name":"ContactKinematic","qualname":"::query::contact::contact_kinematic::ContactKinematic","value":"ContactKinematic {  }","parent":null,"children":[{"krate":0,"index":7437},{"krate":0,"index":7438},{"krate":0,"index":7439},{"krate":0,"index":7440}],"decl_id":null,"docs":" Local contact kinematic of a pair of solids around two given points.","sig":null,"attributes":[{"value":"/ Local contact kinematic of a pair of solids around two given points.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":462662,"byte_end":462734,"line_start":50,"line_end":50,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":462735,"byte_end":462738,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ This is used to update the localization of contact points between two solids","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":462739,"byte_end":462819,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ from one frame to another. To achieve this, the local shape of the solids","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":462820,"byte_end":462897,"line_start":53,"line_end":53,"column_start":1,"column_end":78}},{"value":"/ around the given points are approximated by either dilated lines (unbounded","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":462898,"byte_end":462977,"line_start":54,"line_end":54,"column_start":1,"column_end":80}},{"value":"/ cylinders), planes, dilated points (spheres).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":462978,"byte_end":463027,"line_start":55,"line_end":55,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3313},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":463431,"byte_end":463434,"line_start":70,"line_end":70,"column_start":12,"column_end":15},"name":"new","qualname":"<ContactKinematic<N>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Initializes an empty contact kinematic.","sig":null,"attributes":[{"value":"/ Initializes an empty contact kinematic.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":463265,"byte_end":463308,"line_start":66,"line_end":66,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":463313,"byte_end":463316,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ All the contact kinematic information must be filled using methods","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":463321,"byte_end":463391,"line_start":68,"line_end":68,"column_start":5,"column_end":75}},{"value":"/ prefixed by `set_`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":463396,"byte_end":463419,"line_start":69,"line_end":69,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3314},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":463881,"byte_end":463891,"line_start":86,"line_end":86,"column_start":12,"column_end":22},"name":"transform1","qualname":"<ContactKinematic<N>>::transform1","value":"fn (&mut self, m: &Isometry<N>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Applies the given transformation to the first set of contact information.\n","sig":null,"attributes":[{"value":"/ Applies the given transformation to the first set of contact information.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":463792,"byte_end":463869,"line_start":85,"line_end":85,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":3315},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":464300,"byte_end":464310,"line_start":98,"line_end":98,"column_start":12,"column_end":22},"name":"transform2","qualname":"<ContactKinematic<N>>::transform2","value":"fn (&mut self, m: &Isometry<N>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Applies the given transformation to the second set of contact information.\n","sig":null,"attributes":[{"value":"/ Applies the given transformation to the second set of contact information.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":464210,"byte_end":464288,"line_start":97,"line_end":97,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":3316},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":464677,"byte_end":464686,"line_start":110,"line_end":110,"column_start":12,"column_end":21},"name":"dilation1","qualname":"<ContactKinematic<N>>::dilation1","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The dilation of the first solid.\n","sig":null,"attributes":[{"value":"/ The dilation of the first solid.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":464629,"byte_end":464665,"line_start":109,"line_end":109,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":3317},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":464782,"byte_end":464791,"line_start":115,"line_end":115,"column_start":12,"column_end":21},"name":"dilation2","qualname":"<ContactKinematic<N>>::dilation2","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The dilation of the second solid.\n","sig":null,"attributes":[{"value":"/ The dilation of the second solid.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":464733,"byte_end":464770,"line_start":114,"line_end":114,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3318},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":465163,"byte_end":465169,"line_start":125,"line_end":125,"column_start":12,"column_end":18},"name":"local1","qualname":"<ContactKinematic<N>>::local1","value":"fn (&self) -> Point<N>","parent":null,"children":[],"decl_id":null,"docs":" The tracked point in local space of the first solid.","sig":null,"attributes":[{"value":"/ The tracked point in local space of the first solid.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":464838,"byte_end":464894,"line_start":119,"line_end":119,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":464899,"byte_end":464902,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ This may not correspond to the contact point in the local","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":464907,"byte_end":464968,"line_start":121,"line_end":121,"column_start":5,"column_end":66}},{"value":"/ space of the first since it does not takes the dilation","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":464973,"byte_end":465032,"line_start":122,"line_end":122,"column_start":5,"column_end":64}},{"value":"/ into account.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":465037,"byte_end":465054,"line_start":123,"line_end":123,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3319},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":465562,"byte_end":465568,"line_start":135,"line_end":135,"column_start":12,"column_end":18},"name":"local2","qualname":"<ContactKinematic<N>>::local2","value":"fn (&self) -> Point<N>","parent":null,"children":[],"decl_id":null,"docs":" The tracked point in local space of the second solid.","sig":null,"attributes":[{"value":"/ The tracked point in local space of the second solid.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":465229,"byte_end":465286,"line_start":129,"line_end":129,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":465291,"byte_end":465294,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ This may not correspond to the contact point in the local","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":465299,"byte_end":465360,"line_start":131,"line_end":131,"column_start":5,"column_end":66}},{"value":"/ space of the second solid since it does not takes the dilation","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":465365,"byte_end":465431,"line_start":132,"line_end":132,"column_start":5,"column_end":71}},{"value":"/ into account.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":465436,"byte_end":465453,"line_start":133,"line_end":133,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3320},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":465749,"byte_end":465757,"line_start":141,"line_end":141,"column_start":12,"column_end":20},"name":"feature1","qualname":"<ContactKinematic<N>>::feature1","value":"fn (&self) -> FeatureId","parent":null,"children":[],"decl_id":null,"docs":" The shape-dependent identifier of the feature of the first solid\n on which lies the contact point.\n","sig":null,"attributes":[{"value":"/ The shape-dependent identifier of the feature of the first solid","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":465628,"byte_end":465696,"line_start":139,"line_end":139,"column_start":5,"column_end":73}},{"value":"/ on which lies the contact point.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":465701,"byte_end":465737,"line_start":140,"line_end":140,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":3321},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":465942,"byte_end":465950,"line_start":147,"line_end":147,"column_start":12,"column_end":20},"name":"feature2","qualname":"<ContactKinematic<N>>::feature2","value":"fn (&self) -> FeatureId","parent":null,"children":[],"decl_id":null,"docs":" The shape-dependent identifier of the feature of the second solid\n on which lies the contact point.\n","sig":null,"attributes":[{"value":"/ The shape-dependent identifier of the feature of the second solid","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":465820,"byte_end":465889,"line_start":145,"line_end":145,"column_start":5,"column_end":74}},{"value":"/ on which lies the contact point.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":465894,"byte_end":465930,"line_start":146,"line_end":146,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":3322},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":466139,"byte_end":466151,"line_start":153,"line_end":153,"column_start":12,"column_end":24},"name":"set_feature1","qualname":"<ContactKinematic<N>>::set_feature1","value":"fn (&mut self, f: FeatureId) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the shape-dependent identifier of the feature of the first solid\n on which lies the contact point.\n","sig":null,"attributes":[{"value":"/ Sets the shape-dependent identifier of the feature of the first solid","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":466013,"byte_end":466086,"line_start":151,"line_end":151,"column_start":5,"column_end":78}},{"value":"/ on which lies the contact point.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":466091,"byte_end":466127,"line_start":152,"line_end":152,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":3323},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":466350,"byte_end":466362,"line_start":159,"line_end":159,"column_start":12,"column_end":24},"name":"set_feature2","qualname":"<ContactKinematic<N>>::set_feature2","value":"fn (&mut self, f: FeatureId) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the shape-dependent identifier of the feature of the second solid\n on which lies the contact point.\n","sig":null,"attributes":[{"value":"/ Sets the shape-dependent identifier of the feature of the second solid","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":466223,"byte_end":466297,"line_start":157,"line_end":157,"column_start":5,"column_end":79}},{"value":"/ on which lies the contact point.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":466302,"byte_end":466338,"line_start":158,"line_end":158,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":3324},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":466487,"byte_end":466500,"line_start":164,"line_end":164,"column_start":12,"column_end":25},"name":"set_dilation1","qualname":"<ContactKinematic<N>>::set_dilation1","value":"fn (&mut self, margin: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the dilation of the first solid.\n","sig":null,"attributes":[{"value":"/ Sets the dilation of the first solid.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":466434,"byte_end":466475,"line_start":163,"line_end":163,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":3325},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":466621,"byte_end":466634,"line_start":169,"line_end":169,"column_start":12,"column_end":25},"name":"set_dilation2","qualname":"<ContactKinematic<N>>::set_dilation2","value":"fn (&mut self, margin: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the dilation of the second solid.\n","sig":null,"attributes":[{"value":"/ Sets the dilation of the second solid.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":466567,"byte_end":466609,"line_start":168,"line_end":168,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3326},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":466760,"byte_end":466767,"line_start":174,"line_end":174,"column_start":12,"column_end":19},"name":"approx1","qualname":"<ContactKinematic<N>>::approx1","value":"fn (&self) -> &LocalShapeApproximation<N>","parent":null,"children":[],"decl_id":null,"docs":" The local approximation of the first shape.\n","sig":null,"attributes":[{"value":"/ The local approximation of the first shape.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":466701,"byte_end":466748,"line_start":173,"line_end":173,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3327},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":466900,"byte_end":466907,"line_start":179,"line_end":179,"column_start":12,"column_end":19},"name":"approx2","qualname":"<ContactKinematic<N>>::approx2","value":"fn (&self) -> &LocalShapeApproximation<N>","parent":null,"children":[],"decl_id":null,"docs":" The local approximation of the first shape.\n","sig":null,"attributes":[{"value":"/ The local approximation of the first shape.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":466841,"byte_end":466888,"line_start":178,"line_end":178,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3328},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":467040,"byte_end":467051,"line_start":184,"line_end":184,"column_start":12,"column_end":23},"name":"approx1_mut","qualname":"<ContactKinematic<N>>::approx1_mut","value":"fn (&mut self) -> &mut LocalShapeApproximation<N>","parent":null,"children":[],"decl_id":null,"docs":" The local approximation of the first shape.\n","sig":null,"attributes":[{"value":"/ The local approximation of the first shape.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":466981,"byte_end":467028,"line_start":183,"line_end":183,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3329},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":467197,"byte_end":467208,"line_start":189,"line_end":189,"column_start":12,"column_end":23},"name":"approx2_mut","qualname":"<ContactKinematic<N>>::approx2_mut","value":"fn (&mut self) -> &mut LocalShapeApproximation<N>","parent":null,"children":[],"decl_id":null,"docs":" The local approximation of the second shape.\n","sig":null,"attributes":[{"value":"/ The local approximation of the second shape.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":467137,"byte_end":467185,"line_start":188,"line_end":188,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":3330},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":467358,"byte_end":467369,"line_start":194,"line_end":194,"column_start":12,"column_end":23},"name":"set_approx1","qualname":"<ContactKinematic<N>>::set_approx1","value":"fn (&mut self, feature: FeatureId, point: Point<N>, geom: NeighborhoodGeometry<N>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the local approximation of the first shape.\n","sig":null,"attributes":[{"value":"/ Sets the local approximation of the first shape.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":467294,"byte_end":467346,"line_start":193,"line_end":193,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3331},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":467641,"byte_end":467652,"line_start":204,"line_end":204,"column_start":12,"column_end":23},"name":"set_approx2","qualname":"<ContactKinematic<N>>::set_approx2","value":"fn (&mut self, feature: FeatureId, point: Point<N>, geom: NeighborhoodGeometry<N>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the local approximation of the second shape.\n","sig":null,"attributes":[{"value":"/ Sets the local approximation of the second shape.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":467576,"byte_end":467629,"line_start":203,"line_end":203,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3332},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":468192,"byte_end":468199,"line_start":218,"line_end":218,"column_start":12,"column_end":19},"name":"contact","qualname":"<ContactKinematic<N>>::contact","value":"fn (&self, m1: &Isometry<N>, s1: &dyn Shape<N>, deformations1: Option<&[N]>, m2: &Isometry<N>, s2: &dyn Shape<N>, deformations2: Option<&[N]>, default_normal1: &Unit<Vector<N>>) -> Option<Contact<N>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the updated contact points with the new positions of the solids.","sig":null,"attributes":[{"value":"/ Computes the updated contact points with the new positions of the solids.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":467859,"byte_end":467936,"line_start":213,"line_end":213,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":467941,"byte_end":467944,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ The vector `default_normal1` is the normal of the resulting contact","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":467949,"byte_end":468020,"line_start":215,"line_end":215,"column_start":5,"column_end":76}},{"value":"/ in the rare case where the contact normal cannot be determined by the update.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":468025,"byte_end":468106,"line_start":216,"line_end":216,"column_start":5,"column_end":86}},{"value":"/ Typically, this should be set to the latest contact normal known.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":468111,"byte_end":468180,"line_start":217,"line_end":217,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7451},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_manifold.rs","byte_start":474412,"byte_end":474424,"line_start":14,"line_end":14,"column_start":5,"column_end":17},"name":"FeatureBased","qualname":"::query::contact::contact_manifold::ContactTrackingMode::FeatureBased","value":"ContactTrackingMode::FeatureBased","parent":{"krate":0,"index":7449},"children":[],"decl_id":null,"docs":" Contact tracking using features.\n Two contacts are considered the same if they are on the same features.\n","sig":null,"attributes":[{"value":"/ Contact tracking using features.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_manifold.rs","byte_start":474292,"byte_end":474328,"line_start":12,"line_end":12,"column_start":5,"column_end":41}},{"value":"/ Two contacts are considered the same if they are on the same features.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_manifold.rs","byte_start":474333,"byte_end":474407,"line_start":13,"line_end":13,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7453},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_manifold.rs","byte_start":474562,"byte_end":474575,"line_start":17,"line_end":17,"column_start":5,"column_end":18},"name":"DistanceBased","qualname":"::query::contact::contact_manifold::ContactTrackingMode::DistanceBased","value":"ContactTrackingMode::DistanceBased(N)","parent":{"krate":0,"index":7449},"children":[],"decl_id":null,"docs":" Contact tracking using distances.\n Two contacts are considered the same if they are closer than the given threshold.\n","sig":null,"attributes":[{"value":"/ Contact tracking using distances.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_manifold.rs","byte_start":474430,"byte_end":474467,"line_start":15,"line_end":15,"column_start":5,"column_end":42}},{"value":"/ Two contacts are considered the same if they are closer than the given threshold.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_manifold.rs","byte_start":474472,"byte_end":474557,"line_start":16,"line_end":16,"column_start":5,"column_end":90}}]},{"kind":"Enum","id":{"krate":0,"index":7449},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_manifold.rs","byte_start":474252,"byte_end":474271,"line_start":11,"line_end":11,"column_start":10,"column_end":29},"name":"ContactTrackingMode","qualname":"::query::contact::contact_manifold::ContactTrackingMode","value":"ContactTrackingMode::{FeatureBased, DistanceBased}","parent":null,"children":[{"krate":0,"index":7451},{"krate":0,"index":7453}],"decl_id":null,"docs":" The technique used for contact tracking.\n","sig":null,"attributes":[{"value":"/ The technique used for contact tracking.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_manifold.rs","byte_start":474153,"byte_end":474197,"line_start":9,"line_end":9,"column_start":1,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":7490},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_manifold.rs","byte_start":475123,"byte_end":475138,"line_start":33,"line_end":33,"column_start":12,"column_end":27},"name":"ContactManifold","qualname":"::query::contact::contact_manifold::ContactManifold","value":"ContactManifold {  }","parent":null,"children":[{"krate":0,"index":7492},{"krate":0,"index":7493},{"krate":0,"index":7494},{"krate":0,"index":7495},{"krate":0,"index":7496}],"decl_id":null,"docs":" A contact manifold.","sig":null,"attributes":[{"value":"/ A contact manifold.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_manifold.rs","byte_start":474748,"byte_end":474771,"line_start":26,"line_end":26,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_manifold.rs","byte_start":474772,"byte_end":474775,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ A contact manifold is a set of contacts between two shapes.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_manifold.rs","byte_start":474776,"byte_end":474839,"line_start":28,"line_end":28,"column_start":1,"column_end":64}},{"value":"/ If the shapes are convex, then the convex hull of those contacts are often interpreted as surface.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_manifold.rs","byte_start":474840,"byte_end":474942,"line_start":29,"line_end":29,"column_start":1,"column_end":103}},{"value":"/ This structure is responsible for matching new contacts with old ones in order to perform an","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_manifold.rs","byte_start":474943,"byte_end":475039,"line_start":30,"line_end":30,"column_start":1,"column_end":97}},{"value":"/ approximate tracking of the contact points.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_manifold.rs","byte_start":475040,"byte_end":475087,"line_start":31,"line_end":31,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3350},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_manifold.rs","byte_start":475515,"byte_end":475518,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<ContactManifold<N>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Initializes a contact manifold without any contact.","sig":null,"attributes":[{"value":"/ Initializes a contact manifold without any contact.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_manifold.rs","byte_start":475344,"byte_end":475399,"line_start":42,"line_end":42,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_manifold.rs","byte_start":475404,"byte_end":475407,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ The default contact tracking mode is set to `ContactTrackingMode::DistanceBased(0.02)`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_manifold.rs","byte_start":475412,"byte_end":475503,"line_start":44,"line_end":44,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":3351},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_manifold.rs","byte_start":475836,"byte_end":475839,"line_start":56,"line_end":56,"column_start":12,"column_end":15},"name":"len","qualname":"<ContactManifold<N>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The number of contacts contained by this manifold.\n","sig":null,"attributes":[{"value":"/ The number of contacts contained by this manifold.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_manifold.rs","byte_start":475770,"byte_end":475824,"line_start":55,"line_end":55,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3352},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_manifold.rs","byte_start":475949,"byte_end":475957,"line_start":61,"line_end":61,"column_start":12,"column_end":20},"name":"contacts","qualname":"<ContactManifold<N>>::contacts","value":"fn (&self) -> impl Iterator<Item = &TrackedContact<N>>","parent":null,"children":[],"decl_id":null,"docs":" All the contact tracked by this manifold.\n","sig":null,"attributes":[{"value":"/ All the contact tracked by this manifold.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_manifold.rs","byte_start":475892,"byte_end":475937,"line_start":60,"line_end":60,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3355},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_manifold.rs","byte_start":476276,"byte_end":476288,"line_start":69,"line_end":69,"column_start":12,"column_end":24},"name":"contacts_mut","qualname":"<ContactManifold<N>>::contacts_mut","value":"fn (&mut self) -> impl Iterator<Item = &mut TrackedContact<N>>","parent":null,"children":[],"decl_id":null,"docs":" Mutable reference to all the contact tracked by this manifold.\n","sig":null,"attributes":[{"value":"/ Mutable reference to all the contact tracked by this manifold.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_manifold.rs","byte_start":476198,"byte_end":476264,"line_start":68,"line_end":68,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":3358},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_manifold.rs","byte_start":476679,"byte_end":476694,"line_start":81,"line_end":81,"column_start":12,"column_end":27},"name":"deepest_contact","qualname":"<ContactManifold<N>>::deepest_contact","value":"fn (&self) -> Option<&TrackedContact<N>>","parent":null,"children":[],"decl_id":null,"docs":" The contact of this manifold with the deepest penetration depth.\n","sig":null,"attributes":[{"value":"/ The contact of this manifold with the deepest penetration depth.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_manifold.rs","byte_start":476599,"byte_end":476667,"line_start":80,"line_end":80,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3359},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_manifold.rs","byte_start":476923,"byte_end":476928,"line_start":90,"line_end":90,"column_start":12,"column_end":17},"name":"clear","qualname":"<ContactManifold<N>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Empty the manifold as well as its cache.\n","sig":null,"attributes":[{"value":"/ Empty the manifold as well as its cache.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_manifold.rs","byte_start":476867,"byte_end":476911,"line_start":89,"line_end":89,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3360},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_manifold.rs","byte_start":477242,"byte_end":477255,"line_start":100,"line_end":100,"column_start":12,"column_end":25},"name":"tracking_mode","qualname":"<ContactManifold<N>>::tracking_mode","value":"fn (&self) -> ContactTrackingMode<N>","parent":null,"children":[],"decl_id":null,"docs":" Gets the technique currently used for tracking contacts.\n","sig":null,"attributes":[{"value":"/ Gets the technique currently used for tracking contacts.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_manifold.rs","byte_start":477170,"byte_end":477230,"line_start":99,"line_end":99,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":3361},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_manifold.rs","byte_start":477736,"byte_end":477753,"line_start":113,"line_end":113,"column_start":12,"column_end":29},"name":"set_tracking_mode","qualname":"<ContactManifold<N>>::set_tracking_mode","value":"fn (&mut self, mode: ContactTrackingMode<N>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the technique used for tracking contacts.","sig":null,"attributes":[{"value":"/ Sets the technique used for tracking contacts.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_manifold.rs","byte_start":477554,"byte_end":477604,"line_start":109,"line_end":109,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_manifold.rs","byte_start":477609,"byte_end":477612,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ If the selected method is different from the current one,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_manifold.rs","byte_start":477617,"byte_end":477678,"line_start":111,"line_end":111,"column_start":5,"column_end":66}},{"value":"/ the current contact cache is cleared.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_manifold.rs","byte_start":477683,"byte_end":477724,"line_start":112,"line_end":112,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":3362},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_manifold.rs","byte_start":478542,"byte_end":478562,"line_start":134,"line_end":134,"column_start":12,"column_end":32},"name":"save_cache_and_clear","qualname":"<ContactManifold<N>>::save_cache_and_clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Save the contacts to a cache and empty the manifold.\n","sig":null,"attributes":[{"value":"/ Save the contacts to a cache and empty the manifold.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_manifold.rs","byte_start":478474,"byte_end":478530,"line_start":133,"line_end":133,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3366},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_manifold.rs","byte_start":479629,"byte_end":479633,"line_start":165,"line_end":165,"column_start":12,"column_end":16},"name":"push","qualname":"<ContactManifold<N>>::push","value":"fn (&mut self, mut contact: Contact<N>, mut kinematic: ContactKinematic<N>, tracking_pt: Point<N>, preprocessor1: Option<&dyn ContactPreprocessor<N>>, preprocessor2: Option<&dyn ContactPreprocessor<N>>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Add a new contact to the manifold.","sig":null,"attributes":[{"value":"/ Add a new contact to the manifold.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_manifold.rs","byte_start":479265,"byte_end":479303,"line_start":159,"line_end":159,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_manifold.rs","byte_start":479308,"byte_end":479311,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ The manifold will attempt to match this contact with another one","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_manifold.rs","byte_start":479316,"byte_end":479384,"line_start":161,"line_end":161,"column_start":5,"column_end":73}},{"value":"/ previously added and added to the cache by the last call to","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_manifold.rs","byte_start":479389,"byte_end":479452,"line_start":162,"line_end":162,"column_start":5,"column_end":68}},{"value":"/ `save_cache_and_clear`. The matching is done by spacial proximity, i.e.,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_manifold.rs","byte_start":479457,"byte_end":479533,"line_start":163,"line_end":163,"column_start":5,"column_end":81}},{"value":"/ two contacts that are sufficiently close will be given the same identifier.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_manifold.rs","byte_start":479538,"byte_end":479617,"line_start":164,"line_end":164,"column_start":5,"column_end":84}}]},{"kind":"Function","id":{"krate":0,"index":3378},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_plane_support_map.rs","byte_start":483844,"byte_end":483869,"line_start":7,"line_end":7,"column_start":8,"column_end":33},"name":"contact_plane_support_map","qualname":"::query::contact::contact_plane_support_map::contact_plane_support_map","value":"fn <N, G> (mplane: &Isometry<N>, plane: &Plane<N>, mother: &Isometry<N>, other: &G, prediction: N) -> Option<Contact<N>>","parent":null,"children":[],"decl_id":null,"docs":" Contact between a plane and a support-mapped shape (Cuboid, ConvexHull, etc.)\n","sig":null,"attributes":[{"value":"/ Contact between a plane and a support-mapped shape (Cuboid, ConvexHull, etc.)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_plane_support_map.rs","byte_start":483755,"byte_end":483836,"line_start":6,"line_end":6,"column_start":1,"column_end":82}}]},{"kind":"Function","id":{"krate":0,"index":3381},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_plane_support_map.rs","byte_start":484566,"byte_end":484591,"line_start":30,"line_end":30,"column_start":8,"column_end":33},"name":"contact_support_map_plane","qualname":"::query::contact::contact_plane_support_map::contact_support_map_plane","value":"fn <N, G> (mother: &Isometry<N>, other: &G, mplane: &Isometry<N>, plane: &Plane<N>, prediction: N) -> Option<Contact<N>>","parent":null,"children":[],"decl_id":null,"docs":" Contact between a support-mapped shape (Cuboid, ConvexHull, etc.) and a plane.\n","sig":null,"attributes":[{"value":"/ Contact between a support-mapped shape (Cuboid, ConvexHull, etc.) and a plane.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_plane_support_map.rs","byte_start":484476,"byte_end":484558,"line_start":29,"line_end":29,"column_start":1,"column_end":83}}]},{"kind":"Trait","id":{"krate":0,"index":3390},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_preprocessor.rs","byte_start":485037,"byte_end":485056,"line_start":5,"line_end":5,"column_start":11,"column_end":30},"name":"ContactPreprocessor","qualname":"::query::contact::contact_preprocessor::ContactPreprocessor","value":"ContactPreprocessor<N: RealField>","parent":null,"children":[{"krate":0,"index":3392}],"decl_id":null,"docs":" Pre-process a contact before it is added to a contact manifold.\n","sig":null,"attributes":[{"value":"/ Pre-process a contact before it is added to a contact manifold.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_preprocessor.rs","byte_start":484959,"byte_end":485026,"line_start":4,"line_end":4,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3392},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_preprocessor.rs","byte_start":485217,"byte_end":485232,"line_start":9,"line_end":9,"column_start":8,"column_end":23},"name":"process_contact","qualname":"::query::contact::contact_preprocessor::ContactPreprocessor::process_contact","value":"fn (&self, c: &mut Contact<N>, kinematic: &mut ContactKinematic<N>, is_first: bool) -> bool","parent":{"krate":0,"index":3390},"children":[],"decl_id":null,"docs":" Process a contact before it is stored into a contact manifold.","sig":null,"attributes":[{"value":"/ Process a contact before it is stored into a contact manifold.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_preprocessor.rs","byte_start":485077,"byte_end":485143,"line_start":6,"line_end":6,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_preprocessor.rs","byte_start":485148,"byte_end":485151,"line_start":7,"line_end":7,"column_start":5,"column_end":8}},{"value":"/ Returns `false` if the contact should be ignored.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_preprocessor.rs","byte_start":485156,"byte_end":485209,"line_start":8,"line_end":8,"column_start":5,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":3412},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_shape_shape.rs","byte_start":486434,"byte_end":486441,"line_start":10,"line_end":10,"column_start":8,"column_end":15},"name":"contact","qualname":"::query::contact::contact_shape_shape::contact","value":"fn <N> (m1: &Isometry<N>, g1: &dyn Shape<N>, m2: &Isometry<N>, g2: &dyn Shape<N>, prediction: N) -> Option<Contact<N>>","parent":null,"children":[],"decl_id":null,"docs":" Computes one contact point between two shapes.","sig":null,"attributes":[{"value":"/ Computes one contact point between two shapes.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_shape_shape.rs","byte_start":486283,"byte_end":486333,"line_start":7,"line_end":7,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_shape_shape.rs","byte_start":486334,"byte_end":486337,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Returns `None` if the objects are separated by a distance greater than `prediction`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_shape_shape.rs","byte_start":486338,"byte_end":486426,"line_start":9,"line_end":9,"column_start":1,"column_end":89}}]},{"kind":"Function","id":{"krate":0,"index":3430},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_support_map_support_map.rs","byte_start":488577,"byte_end":488608,"line_start":9,"line_end":9,"column_start":8,"column_end":39},"name":"contact_support_map_support_map","qualname":"::query::contact::contact_support_map_support_map::contact_support_map_support_map","value":"fn <N, G1, G2> (m1: &Isometry<N>, g1: &G1, m2: &Isometry<N>, g2: &G2, prediction: N) -> Option<Contact<N>>","parent":null,"children":[],"decl_id":null,"docs":" Contact between support-mapped shapes (`Cuboid`, `ConvexHull`, etc.)\n","sig":null,"attributes":[{"value":"/ Contact between support-mapped shapes (`Cuboid`, `ConvexHull`, etc.)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_support_map_support_map.rs","byte_start":488497,"byte_end":488569,"line_start":8,"line_end":8,"column_start":1,"column_end":73}}]},{"kind":"Function","id":{"krate":0,"index":3434},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_support_map_support_map.rs","byte_start":489633,"byte_end":489676,"line_start":38,"line_end":38,"column_start":8,"column_end":51},"name":"contact_support_map_support_map_with_params","qualname":"::query::contact::contact_support_map_support_map::contact_support_map_support_map_with_params","value":"fn <N, G1, G2> (m1: &Isometry<N>, g1: &G1, m2: &Isometry<N>, g2: &G2, prediction: N, simplex: &mut VoronoiSimplex<N>, init_dir: Option<Unit<Vector<N>>>) -> GJKResult<N>","parent":null,"children":[],"decl_id":null,"docs":" Contact between support-mapped shapes (`Cuboid`, `ConvexHull`, etc.)","sig":null,"attributes":[{"value":"/ Contact between support-mapped shapes (`Cuboid`, `ConvexHull`, etc.)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_support_map_support_map.rs","byte_start":489260,"byte_end":489332,"line_start":32,"line_end":32,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_support_map_support_map.rs","byte_start":489333,"byte_end":489336,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ This allows a more fine grained control other the underlying GJK algorigtm.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_support_map_support_map.rs","byte_start":489337,"byte_end":489416,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ The vector-typed result is the vector that should be passed as `init` for","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_support_map_support_map.rs","byte_start":489417,"byte_end":489494,"line_start":35,"line_end":35,"column_start":1,"column_end":78}},{"value":"/ subsequent executions of the algorithm. It is also the contact","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_support_map_support_map.rs","byte_start":489495,"byte_end":489561,"line_start":36,"line_end":36,"column_start":1,"column_end":67}},{"value":"/ normal (that points toward the outside of the first solid).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_support_map_support_map.rs","byte_start":489562,"byte_end":489625,"line_start":37,"line_end":37,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":3460},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/distance/distance.rs","byte_start":492160,"byte_end":492168,"line_start":9,"line_end":9,"column_start":8,"column_end":16},"name":"distance","qualname":"::query::distance::distance::distance","value":"fn <N> (m1: &Isometry<N>, g1: &dyn Shape<N>, m2: &Isometry<N>, g2: &dyn Shape<N>) -> N","parent":null,"children":[],"decl_id":null,"docs":" Computes the minimum distance separating two shapes.","sig":null,"attributes":[{"value":"/ Computes the minimum distance separating two shapes.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/distance/distance.rs","byte_start":492030,"byte_end":492086,"line_start":6,"line_end":6,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/distance/distance.rs","byte_start":492087,"byte_end":492090,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Returns `0.0` if the objects are touching or penetrating.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/distance/distance.rs","byte_start":492091,"byte_end":492152,"line_start":8,"line_end":8,"column_start":1,"column_end":62}}]},{"kind":"Function","id":{"krate":0,"index":3468},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/distance/distance_ball_ball.rs","byte_start":493456,"byte_end":493474,"line_start":7,"line_end":7,"column_start":8,"column_end":26},"name":"distance_ball_ball","qualname":"::query::distance::distance_ball_ball::distance_ball_ball","value":"fn <N> (center1: &Point<N>, b1: &Ball<N>, center2: &Point<N>, b2: &Ball<N>) -> N","parent":null,"children":[],"decl_id":null,"docs":" Distance between balls.\n","sig":null,"attributes":[{"value":"/ Distance between balls.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/distance/distance_ball_ball.rs","byte_start":493411,"byte_end":493438,"line_start":5,"line_end":5,"column_start":1,"column_end":28}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/distance/distance_ball_ball.rs","byte_start":493439,"byte_end":493448,"line_start":6,"line_end":6,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":3488},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/distance/distance_composite_shape_shape.rs","byte_start":494225,"byte_end":494255,"line_start":9,"line_end":9,"column_start":8,"column_end":38},"name":"distance_composite_shape_shape","qualname":"::query::distance::distance_composite_shape_shape::distance_composite_shape_shape","value":"fn <N, G1> (m1: &Isometry<N>, g1: &G1, m2: &Isometry<N>, g2: &dyn Shape<N>) -> N","parent":null,"children":[],"decl_id":null,"docs":" Smallest distance between a composite shape and any other shape.\n","sig":null,"attributes":[{"value":"/ Smallest distance between a composite shape and any other shape.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/distance/distance_composite_shape_shape.rs","byte_start":494149,"byte_end":494217,"line_start":8,"line_end":8,"column_start":1,"column_end":69}}]},{"kind":"Function","id":{"krate":0,"index":3491},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/distance/distance_composite_shape_shape.rs","byte_start":494915,"byte_end":494945,"line_start":38,"line_end":38,"column_start":8,"column_end":38},"name":"distance_shape_composite_shape","qualname":"::query::distance::distance_composite_shape_shape::distance_shape_composite_shape","value":"fn <N, G2> (m1: &Isometry<N>, g1: &dyn Shape<N>, m2: &Isometry<N>, g2: &G2) -> N","parent":null,"children":[],"decl_id":null,"docs":" Smallest distance between a shape and a composite shape.\n","sig":null,"attributes":[{"value":"/ Smallest distance between a shape and a composite shape.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/distance/distance_composite_shape_shape.rs","byte_start":494847,"byte_end":494907,"line_start":37,"line_end":37,"column_start":1,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":3520},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/distance/distance_plane_support_map.rs","byte_start":496787,"byte_end":496813,"line_start":7,"line_end":7,"column_start":8,"column_end":34},"name":"distance_plane_support_map","qualname":"::query::distance::distance_plane_support_map::distance_plane_support_map","value":"fn <N, G> (mplane: &Isometry<N>, plane: &Plane<N>, mother: &Isometry<N>, other: &G) -> N","parent":null,"children":[],"decl_id":null,"docs":" Distance between a plane and a support-mapped shape.\n","sig":null,"attributes":[{"value":"/ Distance between a plane and a support-mapped shape.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/distance/distance_plane_support_map.rs","byte_start":496723,"byte_end":496779,"line_start":6,"line_end":6,"column_start":1,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":3523},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/distance/distance_plane_support_map.rs","byte_start":497353,"byte_end":497379,"line_start":27,"line_end":27,"column_start":8,"column_end":34},"name":"distance_support_map_plane","qualname":"::query::distance::distance_plane_support_map::distance_support_map_plane","value":"fn <N, G> (mother: &Isometry<N>, other: &G, mplane: &Isometry<N>, plane: &Plane<N>) -> N","parent":null,"children":[],"decl_id":null,"docs":" Distance between a support-mapped shape and a plane.\n","sig":null,"attributes":[{"value":"/ Distance between a support-mapped shape and a plane.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/distance/distance_plane_support_map.rs","byte_start":497289,"byte_end":497345,"line_start":26,"line_end":26,"column_start":1,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":3540},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/distance/distance_support_map_support_map.rs","byte_start":497845,"byte_end":497877,"line_start":8,"line_end":8,"column_start":8,"column_end":40},"name":"distance_support_map_support_map","qualname":"::query::distance::distance_support_map_support_map::distance_support_map_support_map","value":"fn <N, G1, G2> (m1: &Isometry<N>, g1: &G1, m2: &Isometry<N>, g2: &G2) -> N","parent":null,"children":[],"decl_id":null,"docs":" Distance between support-mapped shapes.\n","sig":null,"attributes":[{"value":"/ Distance between support-mapped shapes.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/distance/distance_support_map_support_map.rs","byte_start":497794,"byte_end":497837,"line_start":7,"line_end":7,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":3544},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/distance/distance_support_map_support_map.rs","byte_start":498292,"byte_end":498336,"line_start":25,"line_end":25,"column_start":8,"column_end":52},"name":"distance_support_map_support_map_with_params","qualname":"::query::distance::distance_support_map_support_map::distance_support_map_support_map_with_params","value":"fn <N, G1, G2> (m1: &Isometry<N>, g1: &G1, m2: &Isometry<N>, g2: &G2, simplex: &mut VoronoiSimplex<N>, init_dir: Option<Vector<N>>) -> N","parent":null,"children":[],"decl_id":null,"docs":" Distance between support-mapped shapes.","sig":null,"attributes":[{"value":"/ Distance between support-mapped shapes.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/distance/distance_support_map_support_map.rs","byte_start":498157,"byte_end":498200,"line_start":22,"line_end":22,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/distance/distance_support_map_support_map.rs","byte_start":498201,"byte_end":498204,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This allows a more fine grained control other the underlying GJK algorigtm.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/distance/distance_support_map_support_map.rs","byte_start":498205,"byte_end":498284,"line_start":24,"line_end":24,"column_start":1,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":7503},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/error.rs","byte_start":499445,"byte_end":499456,"line_start":5,"line_end":5,"column_start":12,"column_end":23},"name":"Unsupported","qualname":"::query::error::Unsupported","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating that a query is not supported between certain shapes\n","sig":null,"attributes":[{"value":"/ Error indicating that a query is not supported between certain shapes","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/error.rs","byte_start":499315,"byte_end":499388,"line_start":3,"line_end":3,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":3572},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/nonlinear_time_of_impact/nonlinear_time_of_impact_ball_ball.rs","byte_start":500907,"byte_end":500941,"line_start":10,"line_end":10,"column_start":8,"column_end":42},"name":"nonlinear_time_of_impact_ball_ball","qualname":"::query::nonlinear_time_of_impact::nonlinear_time_of_impact_ball_ball::nonlinear_time_of_impact_ball_ball","value":"fn <N> (motion1: &(impl RigidMotion<N> + ?Sized), b1: &Ball<N>, motion2: &(impl RigidMotion<N> + ?Sized), b2: &Ball<N>, max_toi: N, target_distance: N) -> Option<TOI<N>>","parent":null,"children":[],"decl_id":null,"docs":" Non-linear Time Of Impact of two balls under a rigid motion (translation + rotation).\n","sig":null,"attributes":[{"value":"/ Non-linear Time Of Impact of two balls under a rigid motion (translation + rotation).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/nonlinear_time_of_impact/nonlinear_time_of_impact_ball_ball.rs","byte_start":500800,"byte_end":500889,"line_start":8,"line_end":8,"column_start":1,"column_end":90}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/nonlinear_time_of_impact/nonlinear_time_of_impact_ball_ball.rs","byte_start":500890,"byte_end":500899,"line_start":9,"line_end":9,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":3600},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/nonlinear_time_of_impact/nonlinear_time_of_impact_composite_shape_shape.rs","byte_start":502204,"byte_end":502250,"line_start":10,"line_end":10,"column_start":8,"column_end":54},"name":"nonlinear_time_of_impact_composite_shape_shape","qualname":"::query::nonlinear_time_of_impact::nonlinear_time_of_impact_composite_shape_shape::nonlinear_time_of_impact_composite_shape_shape","value":"fn <N, G1> (dispatcher: &dyn TOIDispatcher<N>, motion1: &dyn RigidMotion<N>, g1: &G1, motion2: &dyn RigidMotion<N>, g2: &dyn Shape<N>, max_toi: N, target_distance: N) -> Option<TOI<N>>","parent":null,"children":[],"decl_id":null,"docs":" Time Of Impact of a composite shape with any other shape, under a rigid motion (translation + rotation).\n","sig":null,"attributes":[{"value":"/ Time Of Impact of a composite shape with any other shape, under a rigid motion (translation + rotation).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/nonlinear_time_of_impact/nonlinear_time_of_impact_composite_shape_shape.rs","byte_start":502088,"byte_end":502196,"line_start":9,"line_end":9,"column_start":1,"column_end":109}}]},{"kind":"Function","id":{"krate":0,"index":3604},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/nonlinear_time_of_impact/nonlinear_time_of_impact_composite_shape_shape.rs","byte_start":502899,"byte_end":502945,"line_start":37,"line_end":37,"column_start":8,"column_end":54},"name":"nonlinear_time_of_impact_shape_composite_shape","qualname":"::query::nonlinear_time_of_impact::nonlinear_time_of_impact_composite_shape_shape::nonlinear_time_of_impact_shape_composite_shape","value":"fn <N, G2> (dispatcher: &dyn TOIDispatcher<N>, motion1: &dyn RigidMotion<N>, g1: &dyn Shape<N>, motion2: &dyn RigidMotion<N>, g2: &G2, max_toi: N, target_distance: N) -> Option<TOI<N>>","parent":null,"children":[],"decl_id":null,"docs":" Time Of Impact of any shape with a composite shape, under a rigid motion (translation + rotation).\n","sig":null,"attributes":[{"value":"/ Time Of Impact of any shape with a composite shape, under a rigid motion (translation + rotation).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/nonlinear_time_of_impact/nonlinear_time_of_impact_composite_shape_shape.rs","byte_start":502789,"byte_end":502891,"line_start":36,"line_end":36,"column_start":1,"column_end":103}}]},{"kind":"Function","id":{"krate":0,"index":3642},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/nonlinear_time_of_impact/nonlinear_time_of_impact.rs","byte_start":507037,"byte_end":507061,"line_start":8,"line_end":8,"column_start":8,"column_end":32},"name":"nonlinear_time_of_impact","qualname":"::query::nonlinear_time_of_impact::nonlinear_time_of_impact::nonlinear_time_of_impact","value":"fn <N> (dispatcher: &dyn TOIDispatcher<N>, motion1: &dyn RigidMotion<N>, g1: &dyn Shape<N>, motion2: &dyn RigidMotion<N>, g2: &dyn Shape<N>, max_toi: N, target_distance: N) -> Result<Option<TOI<N>>, Unsupported>","parent":null,"children":[],"decl_id":null,"docs":" Computes the smallest time of impact of two shapes under translational movement.\n","sig":null,"attributes":[{"value":"/ Computes the smallest time of impact of two shapes under translational movement.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/nonlinear_time_of_impact/nonlinear_time_of_impact.rs","byte_start":506945,"byte_end":507029,"line_start":7,"line_end":7,"column_start":1,"column_end":85}}]},{"kind":"Function","id":{"krate":0,"index":3660},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/nonlinear_time_of_impact/nonlinear_time_of_impact_support_map_support_map.rs","byte_start":509236,"byte_end":509284,"line_start":10,"line_end":10,"column_start":8,"column_end":56},"name":"nonlinear_time_of_impact_support_map_support_map","qualname":"::query::nonlinear_time_of_impact::nonlinear_time_of_impact_support_map_support_map::nonlinear_time_of_impact_support_map_support_map","value":"fn <N, G1, G2> (motion1: &(impl RigidMotion<N> + ?Sized), g1: &G1, motion2: &(impl RigidMotion<N> + ?Sized), g2: &G2, max_toi: N, target_distance: N) -> Option<TOI<N>>","parent":null,"children":[],"decl_id":null,"docs":" Time of impacts between two support-mapped shapes under a rigid motion.\n","sig":null,"attributes":[{"value":"/ Time of impacts between two support-mapped shapes under a rigid motion.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/nonlinear_time_of_impact/nonlinear_time_of_impact_support_map_support_map.rs","byte_start":509153,"byte_end":509228,"line_start":9,"line_end":9,"column_start":1,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":3666},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/nonlinear_time_of_impact/nonlinear_time_of_impact_support_map_support_map.rs","byte_start":510069,"byte_end":510146,"line_start":38,"line_end":38,"column_start":8,"column_end":85},"name":"nonlinear_time_of_impact_support_map_support_map_with_closest_points_function","qualname":"::query::nonlinear_time_of_impact::nonlinear_time_of_impact_support_map_support_map::nonlinear_time_of_impact_support_map_support_map_with_closest_points_function","value":"fn <N, G1, G2> (motion1: &(impl RigidMotion<N> + ?Sized), g1: &G1, motion2: &(impl RigidMotion<N> + ?Sized), g2: &G2, max_toi: N, target_distance: N, closest_points:\n    impl Fn(&Isometry<N>, &G1, &Isometry<N>, &G2, N) -> ClosestPoints<N>) -> Option<TOI<N>>","parent":null,"children":[],"decl_id":null,"docs":" Time of impacts between two support-mapped shapes under a rigid motion.","sig":null,"attributes":[{"value":"/ Time of impacts between two support-mapped shapes under a rigid motion.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/nonlinear_time_of_impact/nonlinear_time_of_impact_support_map_support_map.rs","byte_start":509810,"byte_end":509885,"line_start":34,"line_end":34,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/nonlinear_time_of_impact/nonlinear_time_of_impact_support_map_support_map.rs","byte_start":509886,"byte_end":509889,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ You probably want to use `query::nonlinear_time_of_impact_support_map_support_map` instead of this one.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/nonlinear_time_of_impact/nonlinear_time_of_impact_support_map_support_map.rs","byte_start":509890,"byte_end":509997,"line_start":36,"line_end":36,"column_start":1,"column_end":108}},{"value":"/ The distance function between the two shapes must be given.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/nonlinear_time_of_impact/nonlinear_time_of_impact_support_map_support_map.rs","byte_start":509998,"byte_end":510061,"line_start":37,"line_end":37,"column_start":1,"column_end":64}}]},{"kind":"Mod","id":{"krate":0,"index":3890},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_query.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"point_query","qualname":"::query::point::point_query","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_query.rs","parent":null,"children":[{"krate":0,"index":3891},{"krate":0,"index":3894},{"krate":0,"index":3895},{"krate":0,"index":7536},{"krate":0,"index":7546},{"krate":0,"index":7543},{"krate":0,"index":7540},{"krate":0,"index":3898},{"krate":0,"index":3901},{"krate":0,"index":3907}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7536},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_query.rs","byte_start":536748,"byte_end":536763,"line_start":8,"line_end":8,"column_start":12,"column_end":27},"name":"PointProjection","qualname":"::query::point::point_query::PointProjection","value":"PointProjection { is_inside, point }","parent":null,"children":[{"krate":0,"index":7538},{"krate":0,"index":7539}],"decl_id":null,"docs":" Description of the projection of a point on a shape.\n","sig":null,"attributes":[{"value":"/ Description of the projection of a point on a shape.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_query.rs","byte_start":536587,"byte_end":536643,"line_start":5,"line_end":5,"column_start":1,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":7538},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_query.rs","byte_start":536857,"byte_end":536866,"line_start":10,"line_end":10,"column_start":9,"column_end":18},"name":"is_inside","qualname":"::query::point::point_query::PointProjection::is_inside","value":"bool","parent":{"krate":0,"index":7536},"children":[],"decl_id":null,"docs":" Whether or not the point to project was inside of the shape.\n","sig":null,"attributes":[{"value":"/ Whether or not the point to project was inside of the shape.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_query.rs","byte_start":536784,"byte_end":536848,"line_start":9,"line_end":9,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":7539},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_query.rs","byte_start":536913,"byte_end":536918,"line_start":12,"line_end":12,"column_start":9,"column_end":14},"name":"point","qualname":"::query::point::point_query::PointProjection::point","value":"na::Point<N, na::U3>","parent":{"krate":0,"index":7536},"children":[],"decl_id":null,"docs":" The projection result.\n","sig":null,"attributes":[{"value":"/ The projection result.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_query.rs","byte_start":536878,"byte_end":536904,"line_start":11,"line_end":11,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3900},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_query.rs","byte_start":537029,"byte_end":537032,"line_start":17,"line_end":17,"column_start":12,"column_end":15},"name":"new","qualname":"<PointProjection<N>>::new","value":"fn (is_inside: bool, point: Point<N>) -> PointProjection<N>","parent":null,"children":[],"decl_id":null,"docs":" Initializes a new `PointProjection`.\n","sig":null,"attributes":[{"value":"/ Initializes a new `PointProjection`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_query.rs","byte_start":536977,"byte_end":537017,"line_start":16,"line_end":16,"column_start":5,"column_end":45}}]},{"kind":"Trait","id":{"krate":0,"index":3901},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_query.rs","byte_start":537282,"byte_end":537292,"line_start":26,"line_end":26,"column_start":11,"column_end":21},"name":"PointQuery","qualname":"::query::point::point_query::PointQuery","value":"PointQuery<N: RealField>","parent":null,"children":[{"krate":0,"index":3903},{"krate":0,"index":3904},{"krate":0,"index":3905},{"krate":0,"index":3906}],"decl_id":null,"docs":" Trait of objects that can be tested for point inclusion and projection.\n","sig":null,"attributes":[{"value":"/ Trait of objects that can be tested for point inclusion and projection.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_query.rs","byte_start":537196,"byte_end":537271,"line_start":25,"line_end":25,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":3903},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_query.rs","byte_start":537371,"byte_end":537384,"line_start":28,"line_end":28,"column_start":8,"column_end":21},"name":"project_point","qualname":"::query::point::point_query::PointQuery::project_point","value":"fn (&self, m: &Isometry<N>, pt: &Point<N>, solid: bool) -> PointProjection<N>","parent":{"krate":0,"index":3901},"children":[],"decl_id":null,"docs":" Projects a point on `self` transformed by `m`.\n","sig":null,"attributes":[{"value":"/ Projects a point on `self` transformed by `m`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_query.rs","byte_start":537313,"byte_end":537363,"line_start":27,"line_end":27,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3904},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_query.rs","byte_start":537567,"byte_end":537584,"line_start":32,"line_end":32,"column_start":8,"column_end":25},"name":"distance_to_point","qualname":"::query::point::point_query::PointQuery::distance_to_point","value":"fn (&self, m: &Isometry<N>, pt: &Point<N>, solid: bool) -> N","parent":{"krate":0,"index":3901},"children":[],"decl_id":null,"docs":" Computes the minimal distance between a point and `self` transformed by `m`.\n","sig":null,"attributes":[{"value":"/ Computes the minimal distance between a point and `self` transformed by `m`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_query.rs","byte_start":537465,"byte_end":537545,"line_start":30,"line_end":30,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_query.rs","byte_start":537550,"byte_end":537559,"line_start":31,"line_end":31,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3905},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_query.rs","byte_start":538001,"byte_end":538027,"line_start":45,"line_end":45,"column_start":8,"column_end":34},"name":"project_point_with_feature","qualname":"::query::point::point_query::PointQuery::project_point_with_feature","value":"fn (&self, m: &Isometry<N>, pt: &Point<N>) -> (PointProjection<N>, FeatureId)","parent":{"krate":0,"index":3901},"children":[],"decl_id":null,"docs":" Projects a point on the boundary of `self` transformed by `m` and retuns the id of the\n feature the point was projected on.\n","sig":null,"attributes":[{"value":"/ Projects a point on the boundary of `self` transformed by `m` and retuns the id of the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_query.rs","byte_start":537859,"byte_end":537949,"line_start":43,"line_end":43,"column_start":5,"column_end":95}},{"value":"/ feature the point was projected on.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_query.rs","byte_start":537954,"byte_end":537993,"line_start":44,"line_end":44,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":3906},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_query.rs","byte_start":538229,"byte_end":538243,"line_start":53,"line_end":53,"column_start":8,"column_end":22},"name":"contains_point","qualname":"::query::point::point_query::PointQuery::contains_point","value":"fn (&self, m: &Isometry<N>, pt: &Point<N>) -> bool","parent":{"krate":0,"index":3901},"children":[],"decl_id":null,"docs":" Tests if the given point is inside of `self` transformed by `m`.\n","sig":null,"attributes":[{"value":"/ Tests if the given point is inside of `self` transformed by `m`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_query.rs","byte_start":538139,"byte_end":538207,"line_start":51,"line_end":51,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_query.rs","byte_start":538212,"byte_end":538221,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":3907},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_query.rs","byte_start":539208,"byte_end":539230,"line_start":72,"line_end":72,"column_start":11,"column_end":33},"name":"PointQueryWithLocation","qualname":"::query::point::point_query::PointQueryWithLocation","value":"PointQueryWithLocation<N: RealField>","parent":null,"children":[{"krate":0,"index":3909},{"krate":0,"index":3910}],"decl_id":null,"docs":" Returns shape-specific info in addition to generic projection information","sig":null,"attributes":[{"value":"/ Returns shape-specific info in addition to generic projection information","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_query.rs","byte_start":538353,"byte_end":538430,"line_start":58,"line_end":58,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_query.rs","byte_start":538431,"byte_end":538434,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ One requirement for the `PointQuery` trait is to be usable as a trait","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_query.rs","byte_start":538435,"byte_end":538508,"line_start":60,"line_end":60,"column_start":1,"column_end":74}},{"value":"/ object. Unfortunately this precludes us from adding an associated type to it","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_query.rs","byte_start":538509,"byte_end":538589,"line_start":61,"line_end":61,"column_start":1,"column_end":81}},{"value":"/ that might allow us to return shape-specific information in addition to the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_query.rs","byte_start":538590,"byte_end":538669,"line_start":62,"line_end":62,"column_start":1,"column_end":80}},{"value":"/ general information provided in `PointProjection`. This is where","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_query.rs","byte_start":538670,"byte_end":538738,"line_start":63,"line_end":63,"column_start":1,"column_end":69}},{"value":"/ `PointQueryWithLocation` comes in. It forgoes the ability to be used as a trait","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_query.rs","byte_start":538739,"byte_end":538822,"line_start":64,"line_end":64,"column_start":1,"column_end":84}},{"value":"/ object in exchange for being able to provide shape-specific projection","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_query.rs","byte_start":538823,"byte_end":538897,"line_start":65,"line_end":65,"column_start":1,"column_end":75}},{"value":"/ information.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_query.rs","byte_start":538898,"byte_end":538914,"line_start":66,"line_end":66,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_query.rs","byte_start":538915,"byte_end":538918,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ Any shapes that implement `PointQuery` but are able to provide extra","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_query.rs","byte_start":538919,"byte_end":538991,"line_start":68,"line_end":68,"column_start":1,"column_end":73}},{"value":"/ information, can implement `PointQueryWithLocation` in addition and have their","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_query.rs","byte_start":538992,"byte_end":539074,"line_start":69,"line_end":69,"column_start":1,"column_end":83}},{"value":"/ `PointQuery::project_point` implementation just call out to","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_query.rs","byte_start":539075,"byte_end":539138,"line_start":70,"line_end":70,"column_start":1,"column_end":64}},{"value":"/ `PointQueryWithLocation::project_point_with_location`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_query.rs","byte_start":539139,"byte_end":539197,"line_start":71,"line_end":71,"column_start":1,"column_end":59}}]},{"kind":"Type","id":{"krate":0,"index":3909},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_query.rs","byte_start":539576,"byte_end":539584,"line_start":79,"line_end":79,"column_start":10,"column_end":18},"name":"Location","qualname":"::query::point::point_query::PointQueryWithLocation::Location","value":"type Location;","parent":{"krate":0,"index":3907},"children":[],"decl_id":null,"docs":" Additional shape-specific projection information","sig":null,"attributes":[{"value":"/ Additional shape-specific projection information","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_query.rs","byte_start":539251,"byte_end":539303,"line_start":73,"line_end":73,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_query.rs","byte_start":539308,"byte_end":539311,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ In addition to the generic projection information returned in","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_query.rs","byte_start":539316,"byte_end":539381,"line_start":75,"line_end":75,"column_start":5,"column_end":70}},{"value":"/ `PointProjection`, implementations might provide shape-specific","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_query.rs","byte_start":539386,"byte_end":539453,"line_start":76,"line_end":76,"column_start":5,"column_end":72}},{"value":"/ projection info. The type of this shape-specific information is defined","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_query.rs","byte_start":539458,"byte_end":539533,"line_start":77,"line_end":77,"column_start":5,"column_end":80}},{"value":"/ by this associated type.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_query.rs","byte_start":539538,"byte_end":539566,"line_start":78,"line_end":78,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":3910},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_query.rs","byte_start":539649,"byte_end":539676,"line_start":82,"line_end":82,"column_start":8,"column_end":35},"name":"project_point_with_location","qualname":"::query::point::point_query::PointQueryWithLocation::project_point_with_location","value":"fn (&self, m: &Isometry<N>, pt: &Point<N>, solid: bool) -> (PointProjection<N>, Self::Location)","parent":{"krate":0,"index":3907},"children":[],"decl_id":null,"docs":" Projects a point on `self` transformed by `m`.\n","sig":null,"attributes":[{"value":"/ Projects a point on `self` transformed by `m`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_query.rs","byte_start":539591,"byte_end":539641,"line_start":81,"line_end":81,"column_start":5,"column_end":55}}]},{"kind":"Function","id":{"krate":0,"index":3977},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_support_map.rs","byte_start":544520,"byte_end":544551,"line_start":15,"line_end":15,"column_start":8,"column_end":39},"name":"point_projection_on_support_map","qualname":"::query::point::point_support_map::point_projection_on_support_map","value":"fn <N, G> (m: &Isometry<N>, shape: &G, simplex: &mut VoronoiSimplex<N>, point: &Point<N>, solid: bool) -> PointProjection<N>","parent":null,"children":[],"decl_id":null,"docs":" Projects a point on a shape using the GJK algorithm.\n","sig":null,"attributes":[{"value":"/ Projects a point on a shape using the GJK algorithm.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_support_map.rs","byte_start":544456,"byte_end":544512,"line_start":14,"line_end":14,"column_start":1,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7549},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/proximity/proximity.rs","byte_start":574980,"byte_end":574992,"line_start":6,"line_end":6,"column_start":5,"column_end":17},"name":"Intersecting","qualname":"::query::proximity::proximity::Proximity::Intersecting","value":"Proximity::Intersecting","parent":{"krate":0,"index":7548},"children":[],"decl_id":null,"docs":" The two objects are intersecting.\n","sig":null,"attributes":[{"value":"/ The two objects are intersecting.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/proximity/proximity.rs","byte_start":574938,"byte_end":574975,"line_start":5,"line_end":5,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7552},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/proximity/proximity.rs","byte_start":575081,"byte_end":575093,"line_start":8,"line_end":8,"column_start":5,"column_end":17},"name":"WithinMargin","qualname":"::query::proximity::proximity::Proximity::WithinMargin","value":"Proximity::WithinMargin","parent":{"krate":0,"index":7548},"children":[],"decl_id":null,"docs":" The two objects are non-intersecting but closer than a given distance.\n","sig":null,"attributes":[{"value":"/ The two objects are non-intersecting but closer than a given distance.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/proximity/proximity.rs","byte_start":575002,"byte_end":575076,"line_start":7,"line_end":7,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7554},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/proximity/proximity.rs","byte_start":575179,"byte_end":575187,"line_start":10,"line_end":10,"column_start":5,"column_end":13},"name":"Disjoint","qualname":"::query::proximity::proximity::Proximity::Disjoint","value":"Proximity::Disjoint","parent":{"krate":0,"index":7548},"children":[],"decl_id":null,"docs":" The two objects are non-intersecting and further than a given distance.\n","sig":null,"attributes":[{"value":"/ The two objects are non-intersecting and further than a given distance.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/proximity/proximity.rs","byte_start":575099,"byte_end":575174,"line_start":9,"line_end":9,"column_start":5,"column_end":80}}]},{"kind":"Enum","id":{"krate":0,"index":7548},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/proximity/proximity.rs","byte_start":574922,"byte_end":574931,"line_start":4,"line_end":4,"column_start":10,"column_end":19},"name":"Proximity","qualname":"::query::proximity::proximity::Proximity","value":"Proximity::{Intersecting, WithinMargin, Disjoint}","parent":null,"children":[{"krate":0,"index":7549},{"krate":0,"index":7552},{"krate":0,"index":7554}],"decl_id":null,"docs":" Proximity information.\n","sig":null,"attributes":[{"value":"/ Proximity information.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/proximity/proximity.rs","byte_start":574782,"byte_end":574808,"line_start":1,"line_end":1,"column_start":1,"column_end":27}}]},{"kind":"Function","id":{"krate":0,"index":4123},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/proximity/proximity_ball_ball.rs","byte_start":575343,"byte_end":575362,"line_start":8,"line_end":8,"column_start":8,"column_end":27},"name":"proximity_ball_ball","qualname":"::query::proximity::proximity_ball_ball::proximity_ball_ball","value":"fn <N> (center1: &Point<N>, b1: &Ball<N>, center2: &Point<N>, b2: &Ball<N>, margin: N) -> Proximity","parent":null,"children":[],"decl_id":null,"docs":" Proximity between balls.\n","sig":null,"attributes":[{"value":"/ Proximity between balls.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/proximity/proximity_ball_ball.rs","byte_start":575297,"byte_end":575325,"line_start":6,"line_end":6,"column_start":1,"column_end":29}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/proximity/proximity_ball_ball.rs","byte_start":575326,"byte_end":575335,"line_start":7,"line_end":7,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":4144},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/proximity/proximity_composite_shape_shape.rs","byte_start":576463,"byte_end":576494,"line_start":9,"line_end":9,"column_start":8,"column_end":39},"name":"proximity_composite_shape_shape","qualname":"::query::proximity::proximity_composite_shape_shape::proximity_composite_shape_shape","value":"fn <N, G1> (m1: &Isometry<N>, g1: &G1, m2: &Isometry<N>, g2: &dyn Shape<N>, margin: N) -> Proximity","parent":null,"children":[],"decl_id":null,"docs":" Proximity between a composite shape (`Mesh`, `Compound`) and any other shape.\n","sig":null,"attributes":[{"value":"/ Proximity between a composite shape (`Mesh`, `Compound`) and any other shape.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/proximity/proximity_composite_shape_shape.rs","byte_start":576374,"byte_end":576455,"line_start":8,"line_end":8,"column_start":1,"column_end":82}}]},{"kind":"Function","id":{"krate":0,"index":4147},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/proximity/proximity_composite_shape_shape.rs","byte_start":577076,"byte_end":577107,"line_start":33,"line_end":33,"column_start":8,"column_end":39},"name":"proximity_shape_composite_shape","qualname":"::query::proximity::proximity_composite_shape_shape::proximity_shape_composite_shape","value":"fn <N, G2> (m1: &Isometry<N>, g1: &dyn Shape<N>, m2: &Isometry<N>, g2: &G2, margin: N) -> Proximity","parent":null,"children":[],"decl_id":null,"docs":" Proximity between a shape and a composite (`Mesh`, `Compound`) shape.\n","sig":null,"attributes":[{"value":"/ Proximity between a shape and a composite (`Mesh`, `Compound`) shape.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/proximity/proximity_composite_shape_shape.rs","byte_start":576995,"byte_end":577068,"line_start":32,"line_end":32,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":4183},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/proximity/proximity_plane_support_map.rs","byte_start":580258,"byte_end":580285,"line_start":9,"line_end":9,"column_start":8,"column_end":35},"name":"proximity_plane_support_map","qualname":"::query::proximity::proximity_plane_support_map::proximity_plane_support_map","value":"fn <N, G> (mplane: &Isometry<N>, plane: &Plane<N>, mother: &Isometry<N>, other: &G, margin: N) -> Proximity","parent":null,"children":[],"decl_id":null,"docs":" Proximity between a plane and a support-mapped shape (Cuboid, ConvexHull, etc.)\n","sig":null,"attributes":[{"value":"/ Proximity between a plane and a support-mapped shape (Cuboid, ConvexHull, etc.)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/proximity/proximity_plane_support_map.rs","byte_start":580167,"byte_end":580250,"line_start":8,"line_end":8,"column_start":1,"column_end":84}}]},{"kind":"Function","id":{"krate":0,"index":4186},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/proximity/proximity_plane_support_map.rs","byte_start":581108,"byte_end":581135,"line_start":39,"line_end":39,"column_start":8,"column_end":35},"name":"proximity_support_map_plane","qualname":"::query::proximity::proximity_plane_support_map::proximity_support_map_plane","value":"fn <N, G> (mother: &Isometry<N>, other: &G, mplane: &Isometry<N>, plane: &Plane<N>, margin: N) -> Proximity","parent":null,"children":[],"decl_id":null,"docs":" Proximity between a support-mapped shape (Cuboid, ConvexHull, etc.) and a plane.\n","sig":null,"attributes":[{"value":"/ Proximity between a support-mapped shape (Cuboid, ConvexHull, etc.) and a plane.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/proximity/proximity_plane_support_map.rs","byte_start":581016,"byte_end":581100,"line_start":38,"line_end":38,"column_start":1,"column_end":85}}]},{"kind":"Function","id":{"krate":0,"index":4201},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/proximity/proximity_shape_shape.rs","byte_start":581612,"byte_end":581621,"line_start":8,"line_end":8,"column_start":8,"column_end":17},"name":"proximity","qualname":"::query::proximity::proximity_shape_shape::proximity","value":"fn <N> (m1: &Isometry<N>, g1: &dyn Shape<N>, m2: &Isometry<N>, g2: &dyn Shape<N>, margin: N) -> Proximity","parent":null,"children":[],"decl_id":null,"docs":" Tests whether two shapes are in intersecting or separated by a distance smaller than `margin`.\n","sig":null,"attributes":[{"value":"/ Tests whether two shapes are in intersecting or separated by a distance smaller than `margin`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/proximity/proximity_shape_shape.rs","byte_start":581506,"byte_end":581604,"line_start":7,"line_end":7,"column_start":1,"column_end":99}}]},{"kind":"Function","id":{"krate":0,"index":4218},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/proximity/proximity_support_map_support_map.rs","byte_start":583181,"byte_end":583214,"line_start":10,"line_end":10,"column_start":8,"column_end":41},"name":"proximity_support_map_support_map","qualname":"::query::proximity::proximity_support_map_support_map::proximity_support_map_support_map","value":"fn <N, G1, G2> (m1: &Isometry<N>, g1: &G1, m2: &Isometry<N>, g2: &G2, margin: N) -> Proximity","parent":null,"children":[],"decl_id":null,"docs":" Proximity between support-mapped shapes (`Cuboid`, `ConvexHull`, etc.)\n","sig":null,"attributes":[{"value":"/ Proximity between support-mapped shapes (`Cuboid`, `ConvexHull`, etc.)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/proximity/proximity_support_map_support_map.rs","byte_start":583099,"byte_end":583173,"line_start":9,"line_end":9,"column_start":1,"column_end":75}}]},{"kind":"Function","id":{"krate":0,"index":4222},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/proximity/proximity_support_map_support_map.rs","byte_start":583762,"byte_end":583807,"line_start":37,"line_end":37,"column_start":8,"column_end":53},"name":"proximity_support_map_support_map_with_params","qualname":"::query::proximity::proximity_support_map_support_map::proximity_support_map_support_map_with_params","value":"fn <N, G1, G2> (m1: &Isometry<N>, g1: &G1, m2: &Isometry<N>, g2: &G2, margin: N, simplex: &mut VoronoiSimplex<N>, init_dir: Option<Unit<Vector<N>>>) -> (Proximity, Unit<Vector<N>>)","parent":null,"children":[],"decl_id":null,"docs":" Proximity between support-mapped shapes (`Cuboid`, `ConvexHull`, etc.)","sig":null,"attributes":[{"value":"/ Proximity between support-mapped shapes (`Cuboid`, `ConvexHull`, etc.)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/proximity/proximity_support_map_support_map.rs","byte_start":583596,"byte_end":583670,"line_start":34,"line_end":34,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/proximity/proximity_support_map_support_map.rs","byte_start":583671,"byte_end":583674,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ This allows a more fine grained control other the underlying GJK algorigtm.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/proximity/proximity_support_map_support_map.rs","byte_start":583675,"byte_end":583754,"line_start":36,"line_end":36,"column_start":1,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":7564},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray.rs","byte_start":585815,"byte_end":585818,"line_start":11,"line_end":11,"column_start":12,"column_end":15},"name":"Ray","qualname":"::query::ray::ray::Ray","value":"Ray { origin, dir }","parent":null,"children":[{"krate":0,"index":7566},{"krate":0,"index":7567}],"decl_id":null,"docs":" A Ray.\n","sig":null,"attributes":[{"value":"/ A Ray.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray.rs","byte_start":585763,"byte_end":585773,"line_start":9,"line_end":9,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":7566},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray.rs","byte_start":585878,"byte_end":585884,"line_start":13,"line_end":13,"column_start":9,"column_end":15},"name":"origin","qualname":"::query::ray::ray::Ray::origin","value":"na::Point<N, na::U3>","parent":{"krate":0,"index":7564},"children":[],"decl_id":null,"docs":" Starting point of the ray.\n","sig":null,"attributes":[{"value":"/ Starting point of the ray.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray.rs","byte_start":585839,"byte_end":585869,"line_start":12,"line_end":12,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":7567},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray.rs","byte_start":585934,"byte_end":585937,"line_start":15,"line_end":15,"column_start":9,"column_end":12},"name":"dir","qualname":"::query::ray::ray::Ray::dir","value":"na::Matrix<N, na::U3, na::U1, <na::DefaultAllocator as na::allocator::Allocator<N, na::U3>>::Buffer>","parent":{"krate":0,"index":7564},"children":[],"decl_id":null,"docs":" Direction of the ray.\n","sig":null,"attributes":[{"value":"/ Direction of the ray.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray.rs","byte_start":585900,"byte_end":585925,"line_start":14,"line_end":14,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4247},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray.rs","byte_start":586105,"byte_end":586108,"line_start":21,"line_end":21,"column_start":12,"column_end":15},"name":"new","qualname":"<Ray<N>>::new","value":"fn (origin: Point<N>, dir: Vector<N>) -> Ray<N>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new ray starting from `origin` and with the direction `dir`. `dir` must be\n normalized.\n","sig":null,"attributes":[{"value":"/ Creates a new ray starting from `origin` and with the direction `dir`. `dir` must be","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray.rs","byte_start":585985,"byte_end":586073,"line_start":19,"line_end":19,"column_start":5,"column_end":93}},{"value":"/ normalized.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray.rs","byte_start":586078,"byte_end":586093,"line_start":20,"line_end":20,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4248},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray.rs","byte_start":586312,"byte_end":586324,"line_start":30,"line_end":30,"column_start":12,"column_end":24},"name":"transform_by","qualname":"<Ray<N>>::transform_by","value":"fn (&self, m: &Isometry<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Transforms this ray by the given isometry.\n","sig":null,"attributes":[{"value":"/ Transforms this ray by the given isometry.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray.rs","byte_start":586240,"byte_end":586286,"line_start":28,"line_end":28,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray.rs","byte_start":586291,"byte_end":586300,"line_start":29,"line_end":29,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4249},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray.rs","byte_start":586506,"byte_end":586526,"line_start":36,"line_end":36,"column_start":12,"column_end":32},"name":"inverse_transform_by","qualname":"<Ray<N>>::inverse_transform_by","value":"fn (&self, m: &Isometry<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Transforms this ray by the inverse of the given isometry.\n","sig":null,"attributes":[{"value":"/ Transforms this ray by the inverse of the given isometry.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray.rs","byte_start":586419,"byte_end":586480,"line_start":34,"line_end":34,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray.rs","byte_start":586485,"byte_end":586494,"line_start":35,"line_end":35,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4250},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray.rs","byte_start":586808,"byte_end":586820,"line_start":45,"line_end":45,"column_start":12,"column_end":24},"name":"translate_by","qualname":"<Ray<N>>::translate_by","value":"fn (&self, v: Vector<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Translates this ray by the given vector. Its direction is left unchanged.\n","sig":null,"attributes":[{"value":"/ Translates this ray by the given vector. Its direction is left unchanged.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray.rs","byte_start":586705,"byte_end":586782,"line_start":43,"line_end":43,"column_start":5,"column_end":82}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray.rs","byte_start":586787,"byte_end":586796,"line_start":44,"line_end":44,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4251},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray.rs","byte_start":587053,"byte_end":587061,"line_start":53,"line_end":53,"column_start":12,"column_end":20},"name":"point_at","qualname":"<Ray<N>>::point_at","value":"fn (&self, t: N) -> Point<N>","parent":null,"children":[],"decl_id":null,"docs":" Computes the point at the given parameter on this line.","sig":null,"attributes":[{"value":"/ Computes the point at the given parameter on this line.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray.rs","byte_start":586908,"byte_end":586967,"line_start":49,"line_end":49,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray.rs","byte_start":586972,"byte_end":586975,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ This computes `self.origin + self.dir * t`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray.rs","byte_start":586980,"byte_end":587027,"line_start":51,"line_end":51,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray.rs","byte_start":587032,"byte_end":587041,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":7576},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray.rs","byte_start":587299,"byte_end":587314,"line_start":61,"line_end":61,"column_start":12,"column_end":27},"name":"RayIntersection","qualname":"::query::ray::ray::RayIntersection","value":"RayIntersection { toi, normal, feature, uvs }","parent":null,"children":[{"krate":0,"index":7578},{"krate":0,"index":7579},{"krate":0,"index":7580},{"krate":0,"index":7581}],"decl_id":null,"docs":" Structure containing the result of a successful ray cast.\n","sig":null,"attributes":[{"value":"/ Structure containing the result of a successful ray cast.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray.rs","byte_start":587133,"byte_end":587194,"line_start":58,"line_end":58,"column_start":1,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":7578},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray.rs","byte_start":587616,"byte_end":587619,"line_start":65,"line_end":65,"column_start":9,"column_end":12},"name":"toi","qualname":"::query::ray::ray::RayIntersection::toi","value":"N","parent":{"krate":0,"index":7576},"children":[],"decl_id":null,"docs":" The time of impact of the ray with the object.  The exact contact point can be computed\n with: `ray.point_at(toi)` or equivalently `origin + dir * toi` where `origin` is the origin of the ray;\n `dir` is its direction and `toi` is the value of this field.\n","sig":null,"attributes":[{"value":"/ The time of impact of the ray with the object.  The exact contact point can be computed","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray.rs","byte_start":587335,"byte_end":587426,"line_start":62,"line_end":62,"column_start":5,"column_end":96}},{"value":"/ with: `ray.point_at(toi)` or equivalently `origin + dir * toi` where `origin` is the origin of the ray;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray.rs","byte_start":587431,"byte_end":587538,"line_start":63,"line_end":63,"column_start":5,"column_end":112}},{"value":"/ `dir` is its direction and `toi` is the value of this field.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray.rs","byte_start":587543,"byte_end":587607,"line_start":64,"line_end":64,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":7579},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray.rs","byte_start":587801,"byte_end":587807,"line_start":71,"line_end":71,"column_start":9,"column_end":15},"name":"normal","qualname":"::query::ray::ray::RayIntersection::normal","value":"na::Matrix<N, na::U3, na::U1, <na::DefaultAllocator as na::allocator::Allocator<N, na::U3>>::Buffer>","parent":{"krate":0,"index":7576},"children":[],"decl_id":null,"docs":" The normal at the intersection point.","sig":null,"attributes":[{"value":"/ The normal at the intersection point.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray.rs","byte_start":587629,"byte_end":587670,"line_start":67,"line_end":67,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray.rs","byte_start":587675,"byte_end":587678,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ If the `toi` is exactly zero, the normal might not be reliable.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray.rs","byte_start":587683,"byte_end":587750,"line_start":69,"line_end":69,"column_start":5,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":7580},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray.rs","byte_start":587872,"byte_end":587879,"line_start":74,"line_end":74,"column_start":9,"column_end":16},"name":"feature","qualname":"::query::ray::ray::RayIntersection::feature","value":"shape::convex_polyhedron::FeatureId","parent":{"krate":0,"index":7576},"children":[],"decl_id":null,"docs":" Feature at the intersection point.\n","sig":null,"attributes":[{"value":"/ Feature at the intersection point.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray.rs","byte_start":587825,"byte_end":587863,"line_start":73,"line_end":73,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":7581},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray.rs","byte_start":588074,"byte_end":588077,"line_start":79,"line_end":79,"column_start":9,"column_end":12},"name":"uvs","qualname":"::query::ray::ray::RayIntersection::uvs","value":"std::option::Option<na::Point<N, na::U2>>","parent":{"krate":0,"index":7576},"children":[],"decl_id":null,"docs":" The textures coordinates at the intersection point.  This is an `Option` because some shape\n do not support texture coordinates.\n","sig":null,"attributes":[{"value":"/ The textures coordinates at the intersection point.  This is an `Option` because some shape","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray.rs","byte_start":587897,"byte_end":587992,"line_start":76,"line_end":76,"column_start":5,"column_end":100}},{"value":"/ do not support texture coordinates.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray.rs","byte_start":587997,"byte_end":588036,"line_start":77,"line_end":77,"column_start":5,"column_end":44}},{"value":"cfg(feature = \"dim3\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray.rs","byte_start":588041,"byte_end":588065,"line_start":78,"line_end":78,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":4254},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray.rs","byte_start":588236,"byte_end":588248,"line_start":86,"line_end":86,"column_start":12,"column_end":24},"name":"new_with_uvs","qualname":"<RayIntersection<N>>::new_with_uvs","value":"fn (toi: N, normal: Vector<N>, feature: FeatureId, uvs: Option<Point2<N>>) -> RayIntersection<N>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `RayIntersection`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray.rs","byte_start":588145,"byte_end":588154,"line_start":83,"line_end":83,"column_start":5,"column_end":14}},{"value":"/ Creates a new `RayIntersection`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray.rs","byte_start":588159,"byte_end":588195,"line_start":84,"line_end":84,"column_start":5,"column_end":41}},{"value":"cfg(feature = \"dim3\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray.rs","byte_start":588200,"byte_end":588224,"line_start":85,"line_end":85,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":4255},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray.rs","byte_start":588596,"byte_end":588599,"line_start":103,"line_end":103,"column_start":12,"column_end":15},"name":"new","qualname":"<RayIntersection<N>>::new","value":"fn (toi: N, normal: Vector<N>, feature: FeatureId) -> RayIntersection<N>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `RayIntersection`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray.rs","byte_start":588505,"byte_end":588514,"line_start":100,"line_end":100,"column_start":5,"column_end":14}},{"value":"/ Creates a new `RayIntersection`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray.rs","byte_start":588519,"byte_end":588555,"line_start":101,"line_end":101,"column_start":5,"column_end":41}},{"value":"cfg(feature = \"dim3\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray.rs","byte_start":588560,"byte_end":588584,"line_start":102,"line_end":102,"column_start":5,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":4256},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray.rs","byte_start":589165,"byte_end":589172,"line_start":125,"line_end":125,"column_start":11,"column_end":18},"name":"RayCast","qualname":"::query::ray::ray::RayCast","value":"RayCast<N: RealField>","parent":null,"children":[{"krate":0,"index":4258},{"krate":0,"index":4260},{"krate":0,"index":4261},{"krate":0,"index":4262}],"decl_id":null,"docs":" Traits of objects which can be transformed and tested for intersection with a ray.\n","sig":null,"attributes":[{"value":"/ Traits of objects which can be transformed and tested for intersection with a ray.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray.rs","byte_start":589068,"byte_end":589154,"line_start":124,"line_end":124,"column_start":1,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":4258},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray.rs","byte_start":589272,"byte_end":589284,"line_start":127,"line_end":127,"column_start":8,"column_end":20},"name":"toi_with_ray","qualname":"::query::ray::ray::RayCast::toi_with_ray","value":"fn (&self, m: &Isometry<N>, ray: &Ray<N>, max_toi: N, solid: bool) -> Option<N>","parent":{"krate":0,"index":4256},"children":[],"decl_id":null,"docs":" Computes the time of impact between this transform shape and a ray.\n","sig":null,"attributes":[{"value":"/ Computes the time of impact between this transform shape and a ray.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray.rs","byte_start":589193,"byte_end":589264,"line_start":126,"line_end":126,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":4260},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray.rs","byte_start":589564,"byte_end":589587,"line_start":133,"line_end":133,"column_start":8,"column_end":31},"name":"toi_and_normal_with_ray","qualname":"::query::ray::ray::RayCast::toi_and_normal_with_ray","value":"fn (&self, m: &Isometry<N>, ray: &Ray<N>, max_toi: N, solid: bool) -> Option<RayIntersection<N>>","parent":{"krate":0,"index":4256},"children":[],"decl_id":null,"docs":" Computes the time of impact, and normal between this transformed shape and a ray.\n","sig":null,"attributes":[{"value":"/ Computes the time of impact, and normal between this transformed shape and a ray.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray.rs","byte_start":589471,"byte_end":589556,"line_start":132,"line_end":132,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":4261},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray.rs","byte_start":589900,"byte_end":589930,"line_start":145,"line_end":145,"column_start":8,"column_end":38},"name":"toi_and_normal_and_uv_with_ray","qualname":"::query::ray::ray::RayCast::toi_and_normal_and_uv_with_ray","value":"fn (&self, m: &Isometry<N>, ray: &Ray<N>, max_toi: N, solid: bool) -> Option<RayIntersection<N>>","parent":{"krate":0,"index":4256},"children":[],"decl_id":null,"docs":" Computes time of impact, normal, and texture coordinates (uv) between this transformed\n shape and a ray.\n","sig":null,"attributes":[{"value":"/ Computes time of impact, normal, and texture coordinates (uv) between this transformed","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray.rs","byte_start":589734,"byte_end":589824,"line_start":141,"line_end":141,"column_start":5,"column_end":95}},{"value":"/ shape and a ray.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray.rs","byte_start":589829,"byte_end":589849,"line_start":142,"line_end":142,"column_start":5,"column_end":25}},{"value":"cfg(feature = \"dim3\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray.rs","byte_start":589854,"byte_end":589878,"line_start":143,"line_end":143,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray.rs","byte_start":589883,"byte_end":589892,"line_start":144,"line_end":144,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4262},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray.rs","byte_start":590225,"byte_end":590239,"line_start":157,"line_end":157,"column_start":8,"column_end":22},"name":"intersects_ray","qualname":"::query::ray::ray::RayCast::intersects_ray","value":"fn (&self, m: &Isometry<N>, ray: &Ray<N>, max_toi: N) -> bool","parent":{"krate":0,"index":4256},"children":[],"decl_id":null,"docs":" Tests whether a ray intersects this transformed shape.\n","sig":null,"attributes":[{"value":"/ Tests whether a ray intersects this transformed shape.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray.rs","byte_start":590145,"byte_end":590203,"line_start":155,"line_end":155,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray.rs","byte_start":590208,"byte_end":590217,"line_start":156,"line_end":156,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4291},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_aabb.rs","byte_start":593188,"byte_end":593208,"line_start":92,"line_end":92,"column_start":12,"column_end":32},"name":"clip_line_parameters","qualname":"<AABB<N>>::clip_line_parameters","value":"fn (&self, orig: &Point<N>, dir: &Vector<N>) -> Option<(N, N)>","parent":null,"children":[],"decl_id":null,"docs":" Computes the parameters of the two intersection points between a line and this AABB.","sig":null,"attributes":[{"value":"/ Computes the parameters of the two intersection points between a line and this AABB.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_aabb.rs","byte_start":592928,"byte_end":593016,"line_start":87,"line_end":87,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_aabb.rs","byte_start":593021,"byte_end":593024,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ The parameters are such that the point are given by `orig + dir * parameter`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_aabb.rs","byte_start":593029,"byte_end":593110,"line_start":89,"line_end":89,"column_start":5,"column_end":86}},{"value":"/ Returns `None` if there is no intersection.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_aabb.rs","byte_start":593115,"byte_end":593162,"line_start":90,"line_end":90,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_aabb.rs","byte_start":593167,"byte_end":593176,"line_start":91,"line_end":91,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4293},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_aabb.rs","byte_start":593506,"byte_end":593515,"line_start":100,"line_end":100,"column_start":12,"column_end":21},"name":"clip_line","qualname":"<AABB<N>>::clip_line","value":"fn (&self, orig: &Point<N>, dir: &Vector<N>) -> Option<Segment<N>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the intersection segment between a line and this AABB.","sig":null,"attributes":[{"value":"/ Computes the intersection segment between a line and this AABB.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_aabb.rs","byte_start":593353,"byte_end":593420,"line_start":96,"line_end":96,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_aabb.rs","byte_start":593425,"byte_end":593428,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if there is no intersection.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_aabb.rs","byte_start":593433,"byte_end":593480,"line_start":98,"line_end":98,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_aabb.rs","byte_start":593485,"byte_end":593494,"line_start":99,"line_end":99,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4295},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_aabb.rs","byte_start":593982,"byte_end":594001,"line_start":110,"line_end":110,"column_start":12,"column_end":31},"name":"clip_ray_parameters","qualname":"<AABB<N>>::clip_ray_parameters","value":"fn (&self, ray: &Ray<N>) -> Option<(N, N)>","parent":null,"children":[],"decl_id":null,"docs":" Computes the parameters of the two intersection points between a ray and this AABB.","sig":null,"attributes":[{"value":"/ Computes the parameters of the two intersection points between a ray and this AABB.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_aabb.rs","byte_start":593715,"byte_end":593802,"line_start":105,"line_end":105,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_aabb.rs","byte_start":593807,"byte_end":593810,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ The parameters are such that the point are given by `ray.orig + ray.dir * parameter`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_aabb.rs","byte_start":593815,"byte_end":593904,"line_start":107,"line_end":107,"column_start":5,"column_end":94}},{"value":"/ Returns `None` if there is no intersection.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_aabb.rs","byte_start":593909,"byte_end":593956,"line_start":108,"line_end":108,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_aabb.rs","byte_start":593961,"byte_end":593970,"line_start":109,"line_end":109,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4297},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_aabb.rs","byte_start":594530,"byte_end":594538,"line_start":128,"line_end":128,"column_start":12,"column_end":20},"name":"clip_ray","qualname":"<AABB<N>>::clip_ray","value":"fn (&self, ray: &Ray<N>) -> Option<Segment<N>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the intersection segment between a ray and this AABB.","sig":null,"attributes":[{"value":"/ Computes the intersection segment between a ray and this AABB.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_aabb.rs","byte_start":594378,"byte_end":594444,"line_start":124,"line_end":124,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_aabb.rs","byte_start":594449,"byte_end":594452,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if there is no intersection.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_aabb.rs","byte_start":594457,"byte_end":594504,"line_start":126,"line_end":126,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_aabb.rs","byte_start":594509,"byte_end":594518,"line_start":127,"line_end":127,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":4333},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_ball.rs","byte_start":601790,"byte_end":601807,"line_start":77,"line_end":77,"column_start":8,"column_end":25},"name":"ray_toi_with_ball","qualname":"::query::ray::ray_ball::ray_toi_with_ball","value":"fn <N> (center: &Point<N>, radius: N, ray: &Ray<N>, solid: bool) -> (bool, Option<N>)","parent":null,"children":[],"decl_id":null,"docs":" Computes the time of impact of a ray on a ball.","sig":null,"attributes":[{"value":"/ Computes the time of impact of a ray on a ball.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_ball.rs","byte_start":601639,"byte_end":601690,"line_start":73,"line_end":73,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_ball.rs","byte_start":601691,"byte_end":601694,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ The first result element is `true` if the ray started inside of the ball.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_ball.rs","byte_start":601695,"byte_end":601772,"line_start":75,"line_end":75,"column_start":1,"column_end":78}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_ball.rs","byte_start":601773,"byte_end":601782,"line_start":76,"line_end":76,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":4440},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_plane.rs","byte_start":618867,"byte_end":618886,"line_start":9,"line_end":9,"column_start":8,"column_end":27},"name":"line_toi_with_plane","qualname":"::query::ray::ray_plane::line_toi_with_plane","value":"fn <N> (plane_center: &Point<N>, plane_normal: &Vector<N>, line_origin: &Point<N>, line_dir: &Vector<N>) -> Option<N>","parent":null,"children":[],"decl_id":null,"docs":" Computes the toi of an unbounded line with a plane described by its center and normal.\n","sig":null,"attributes":[{"value":"/ Computes the toi of an unbounded line with a plane described by its center and normal.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_plane.rs","byte_start":618759,"byte_end":618849,"line_start":7,"line_end":7,"column_start":1,"column_end":91}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_plane.rs","byte_start":618850,"byte_end":618859,"line_start":8,"line_end":8,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":4442},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_plane.rs","byte_start":619339,"byte_end":619357,"line_start":27,"line_end":27,"column_start":8,"column_end":26},"name":"ray_toi_with_plane","qualname":"::query::ray::ray_plane::ray_toi_with_plane","value":"fn <N> (center: &Point<N>, normal: &Vector<N>, ray: &Ray<N>) -> Option<N>","parent":null,"children":[],"decl_id":null,"docs":" Computes the toi of a ray with a plane described by its center and normal.\n","sig":null,"attributes":[{"value":"/ Computes the toi of a ray with a plane described by its center and normal.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_plane.rs","byte_start":619243,"byte_end":619321,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_plane.rs","byte_start":619322,"byte_end":619331,"line_start":26,"line_end":26,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":4526},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_support_map.rs","byte_start":626880,"byte_end":626925,"line_start":15,"line_end":15,"column_start":8,"column_end":53},"name":"ray_intersection_with_support_map_with_params","qualname":"::query::ray::ray_support_map::ray_intersection_with_support_map_with_params","value":"fn <N, G> (m: &Isometry<N>, shape: &G, simplex: &mut VoronoiSimplex<N>, ray: &Ray<N>, max_toi: N, solid: bool) -> Option<RayIntersection<N>>","parent":null,"children":[],"decl_id":null,"docs":" Cast a ray on a shape using the GJK algorithm.\n","sig":null,"attributes":[{"value":"/ Cast a ray on a shape using the GJK algorithm.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_support_map.rs","byte_start":626822,"byte_end":626872,"line_start":14,"line_end":14,"column_start":1,"column_end":51}}]},{"kind":"Function","id":{"krate":0,"index":4570},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_triangle.rs","byte_start":636128,"byte_end":636158,"line_start":32,"line_end":32,"column_start":8,"column_end":38},"name":"ray_intersection_with_triangle","qualname":"::query::ray::ray_triangle::ray_intersection_with_triangle","value":"fn <N> (a: &Point<N>, b: &Point<N>, c: &Point<N>, ray: &Ray<N>) -> Option<(RayIntersection<N>, Vector3<N>)>","parent":null,"children":[],"decl_id":null,"docs":" Computes the intersection between a triangle and a ray.","sig":null,"attributes":[{"value":"/ Computes the intersection between a triangle and a ray.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_triangle.rs","byte_start":635917,"byte_end":635976,"line_start":28,"line_end":28,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_triangle.rs","byte_start":635977,"byte_end":635980,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ If an intersection is found, the time of impact, the normal and the barycentric coordinates of","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_triangle.rs","byte_start":635981,"byte_end":636079,"line_start":30,"line_end":30,"column_start":1,"column_end":99}},{"value":"/ the intersection point are returned.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_triangle.rs","byte_start":636080,"byte_end":636120,"line_start":31,"line_end":31,"column_start":1,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7591},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/time_of_impact/time_of_impact.rs","byte_start":646353,"byte_end":646368,"line_start":15,"line_end":15,"column_start":5,"column_end":20},"name":"OutOfIterations","qualname":"::query::time_of_impact::time_of_impact::TOIStatus::OutOfIterations","value":"TOIStatus::OutOfIterations","parent":{"krate":0,"index":7590},"children":[],"decl_id":null,"docs":" The TOI algorithm ran out of iterations before achieving convergence.","sig":null,"attributes":[{"value":"/ The TOI algorithm ran out of iterations before achieving convergence.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/time_of_impact/time_of_impact.rs","byte_start":646079,"byte_end":646152,"line_start":11,"line_end":11,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/time_of_impact/time_of_impact.rs","byte_start":646157,"byte_end":646160,"line_start":12,"line_end":12,"column_start":5,"column_end":8}},{"value":"/ If this happens, the content of the `NonlinearTOI` will still be a conservative approximation","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/time_of_impact/time_of_impact.rs","byte_start":646165,"byte_end":646262,"line_start":13,"line_end":13,"column_start":5,"column_end":102}},{"value":"/ of the actual result so it is often fine to interpret this case as a success.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/time_of_impact/time_of_impact.rs","byte_start":646267,"byte_end":646348,"line_start":14,"line_end":14,"column_start":5,"column_end":86}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7593},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/time_of_impact/time_of_impact.rs","byte_start":646424,"byte_end":646433,"line_start":17,"line_end":17,"column_start":5,"column_end":14},"name":"Converged","qualname":"::query::time_of_impact::time_of_impact::TOIStatus::Converged","value":"TOIStatus::Converged","parent":{"krate":0,"index":7590},"children":[],"decl_id":null,"docs":" The TOI algorithm converged successfully.\n","sig":null,"attributes":[{"value":"/ The TOI algorithm converged successfully.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/time_of_impact/time_of_impact.rs","byte_start":646374,"byte_end":646419,"line_start":16,"line_end":16,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7595},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/time_of_impact/time_of_impact.rs","byte_start":646731,"byte_end":646737,"line_start":22,"line_end":22,"column_start":5,"column_end":11},"name":"Failed","qualname":"::query::time_of_impact::time_of_impact::TOIStatus::Failed","value":"TOIStatus::Failed","parent":{"krate":0,"index":7590},"children":[],"decl_id":null,"docs":" Something went wrong during the TOI computation, likely due to numerical instabilities.","sig":null,"attributes":[{"value":"/ Something went wrong during the TOI computation, likely due to numerical instabilities.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/time_of_impact/time_of_impact.rs","byte_start":646439,"byte_end":646530,"line_start":18,"line_end":18,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/time_of_impact/time_of_impact.rs","byte_start":646535,"byte_end":646538,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ If this happens, the content of the `NonlinearTOI` will still be a conservative approximation","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/time_of_impact/time_of_impact.rs","byte_start":646543,"byte_end":646640,"line_start":20,"line_end":20,"column_start":5,"column_end":102}},{"value":"/ of the actual result so it is often fine to interpret this case as a success.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/time_of_impact/time_of_impact.rs","byte_start":646645,"byte_end":646726,"line_start":21,"line_end":21,"column_start":5,"column_end":86}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7597},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/time_of_impact/time_of_impact.rs","byte_start":646896,"byte_end":646907,"line_start":26,"line_end":26,"column_start":5,"column_end":16},"name":"Penetrating","qualname":"::query::time_of_impact::time_of_impact::TOIStatus::Penetrating","value":"TOIStatus::Penetrating","parent":{"krate":0,"index":7590},"children":[],"decl_id":null,"docs":" The two shape already overlap at the time 0.","sig":null,"attributes":[{"value":"/ The two shape already overlap at the time 0.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/time_of_impact/time_of_impact.rs","byte_start":646743,"byte_end":646791,"line_start":23,"line_end":23,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/time_of_impact/time_of_impact.rs","byte_start":646796,"byte_end":646799,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ If this happens, the witness points provided by the `NonlinearTOI` will be invalid.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/time_of_impact/time_of_impact.rs","byte_start":646804,"byte_end":646891,"line_start":25,"line_end":25,"column_start":5,"column_end":92}}]},{"kind":"Enum","id":{"krate":0,"index":7590},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/time_of_impact/time_of_impact.rs","byte_start":646063,"byte_end":646072,"line_start":10,"line_end":10,"column_start":10,"column_end":19},"name":"TOIStatus","qualname":"::query::time_of_impact::time_of_impact::TOIStatus","value":"TOIStatus::{OutOfIterations, Converged, Failed, Penetrating}","parent":null,"children":[{"krate":0,"index":7591},{"krate":0,"index":7593},{"krate":0,"index":7595},{"krate":0,"index":7597}],"decl_id":null,"docs":" The status of the time-of-impact computation algorithm.\n","sig":null,"attributes":[{"value":"/ The status of the time-of-impact computation algorithm.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/time_of_impact/time_of_impact.rs","byte_start":645949,"byte_end":646008,"line_start":8,"line_end":8,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":7610},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/time_of_impact/time_of_impact.rs","byte_start":647001,"byte_end":647004,"line_start":31,"line_end":31,"column_start":12,"column_end":15},"name":"TOI","qualname":"::query::time_of_impact::time_of_impact::TOI","value":"TOI { toi, witness1, witness2, normal1, normal2, status }","parent":null,"children":[{"krate":0,"index":7612},{"krate":0,"index":7613},{"krate":0,"index":7614},{"krate":0,"index":7615},{"krate":0,"index":7616},{"krate":0,"index":7617}],"decl_id":null,"docs":" The result of a time-of-impact (TOI) computation.\n","sig":null,"attributes":[{"value":"/ The result of a time-of-impact (TOI) computation.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/time_of_impact/time_of_impact.rs","byte_start":646912,"byte_end":646965,"line_start":29,"line_end":29,"column_start":1,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":7612},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/time_of_impact/time_of_impact.rs","byte_start":647074,"byte_end":647077,"line_start":33,"line_end":33,"column_start":9,"column_end":12},"name":"toi","qualname":"::query::time_of_impact::time_of_impact::TOI::toi","value":"N","parent":{"krate":0,"index":7610},"children":[],"decl_id":null,"docs":" The time at which the objects touch.\n","sig":null,"attributes":[{"value":"/ The time at which the objects touch.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/time_of_impact/time_of_impact.rs","byte_start":647025,"byte_end":647065,"line_start":32,"line_end":32,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":7613},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/time_of_impact/time_of_impact.rs","byte_start":647170,"byte_end":647178,"line_start":35,"line_end":35,"column_start":9,"column_end":17},"name":"witness1","qualname":"::query::time_of_impact::time_of_impact::TOI::witness1","value":"na::Point<N, na::U3>","parent":{"krate":0,"index":7610},"children":[],"decl_id":null,"docs":" The local-space closest point on the first shape at the time of impact.\n","sig":null,"attributes":[{"value":"/ The local-space closest point on the first shape at the time of impact.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/time_of_impact/time_of_impact.rs","byte_start":647086,"byte_end":647161,"line_start":34,"line_end":34,"column_start":5,"column_end":80}}]},{"kind":"Field","id":{"krate":0,"index":7614},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/time_of_impact/time_of_impact.rs","byte_start":647279,"byte_end":647287,"line_start":37,"line_end":37,"column_start":9,"column_end":17},"name":"witness2","qualname":"::query::time_of_impact::time_of_impact::TOI::witness2","value":"na::Point<N, na::U3>","parent":{"krate":0,"index":7610},"children":[],"decl_id":null,"docs":" The local-space closest point on the second shape at the time of impact.\n","sig":null,"attributes":[{"value":"/ The local-space closest point on the second shape at the time of impact.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/time_of_impact/time_of_impact.rs","byte_start":647194,"byte_end":647270,"line_start":36,"line_end":36,"column_start":5,"column_end":81}}]},{"kind":"Field","id":{"krate":0,"index":7615},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/time_of_impact/time_of_impact.rs","byte_start":647388,"byte_end":647395,"line_start":39,"line_end":39,"column_start":9,"column_end":16},"name":"normal1","qualname":"::query::time_of_impact::time_of_impact::TOI::normal1","value":"na::Unit<na::Matrix<N, na::U3, na::U1, <na::DefaultAllocator as na::allocator::Allocator<N, na::U3>>::Buffer>>","parent":{"krate":0,"index":7610},"children":[],"decl_id":null,"docs":" The local-space outward normal on the first shape at the time of impact.\n","sig":null,"attributes":[{"value":"/ The local-space outward normal on the first shape at the time of impact.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/time_of_impact/time_of_impact.rs","byte_start":647303,"byte_end":647379,"line_start":38,"line_end":38,"column_start":5,"column_end":81}}]},{"kind":"Field","id":{"krate":0,"index":7616},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/time_of_impact/time_of_impact.rs","byte_start":647504,"byte_end":647511,"line_start":41,"line_end":41,"column_start":9,"column_end":16},"name":"normal2","qualname":"::query::time_of_impact::time_of_impact::TOI::normal2","value":"na::Unit<na::Matrix<N, na::U3, na::U1, <na::DefaultAllocator as na::allocator::Allocator<N, na::U3>>::Buffer>>","parent":{"krate":0,"index":7610},"children":[],"decl_id":null,"docs":" The local-space outward normal on the second shape at the time of impact.\n","sig":null,"attributes":[{"value":"/ The local-space outward normal on the second shape at the time of impact.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/time_of_impact/time_of_impact.rs","byte_start":647418,"byte_end":647495,"line_start":40,"line_end":40,"column_start":5,"column_end":82}}]},{"kind":"Field","id":{"krate":0,"index":7617},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/time_of_impact/time_of_impact.rs","byte_start":647607,"byte_end":647613,"line_start":43,"line_end":43,"column_start":9,"column_end":15},"name":"status","qualname":"::query::time_of_impact::time_of_impact::TOI::status","value":"query::time_of_impact::time_of_impact::TOIStatus","parent":{"krate":0,"index":7610},"children":[],"decl_id":null,"docs":" The way the time-of-impact computation algorithm terminated.\n","sig":null,"attributes":[{"value":"/ The way the time-of-impact computation algorithm terminated.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/time_of_impact/time_of_impact.rs","byte_start":647534,"byte_end":647598,"line_start":42,"line_end":42,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":4664},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/time_of_impact/time_of_impact.rs","byte_start":647904,"byte_end":647911,"line_start":50,"line_end":50,"column_start":12,"column_end":19},"name":"swapped","qualname":"<TOI<N>>::swapped","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Swaps every data of this TOI result such that the role of both shapes are inverted.","sig":null,"attributes":[{"value":"/ Swaps every data of this TOI result such that the role of both shapes are inverted.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/time_of_impact/time_of_impact.rs","byte_start":647661,"byte_end":647748,"line_start":47,"line_end":47,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/time_of_impact/time_of_impact.rs","byte_start":647753,"byte_end":647756,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ In practice, this makes it so that `self.witness1` and `self.normal1` become `self.witness2` and `self.normal2` and vice-versa.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/time_of_impact/time_of_impact.rs","byte_start":647761,"byte_end":647892,"line_start":49,"line_end":49,"column_start":5,"column_end":136}}]},{"kind":"Function","id":{"krate":0,"index":4665},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/time_of_impact/time_of_impact.rs","byte_start":648382,"byte_end":648396,"line_start":66,"line_end":66,"column_start":8,"column_end":22},"name":"time_of_impact","qualname":"::query::time_of_impact::time_of_impact::time_of_impact","value":"fn <N> (dispatcher: &dyn TOIDispatcher<N>, m1: &Isometry<N>, vel1: &Vector<N>, g1: &dyn Shape<N>, m2: &Isometry<N>, vel2: &Vector<N>, g2: &dyn Shape<N>, max_toi: N, target_distance: N) -> Result<Option<TOI<N>>, Unsupported>","parent":null,"children":[],"decl_id":null,"docs":" Computes the smallest time at with two shapes under translational movement are separated by a\n distance smaller or equal to `distance`.","sig":null,"attributes":[{"value":"/ Computes the smallest time at with two shapes under translational movement are separated by a","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/time_of_impact/time_of_impact.rs","byte_start":648166,"byte_end":648263,"line_start":62,"line_end":62,"column_start":1,"column_end":98}},{"value":"/ distance smaller or equal to `distance`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/time_of_impact/time_of_impact.rs","byte_start":648264,"byte_end":648308,"line_start":63,"line_end":63,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/time_of_impact/time_of_impact.rs","byte_start":648309,"byte_end":648312,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ Returns `0.0` if the objects are touching or penetrating.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/time_of_impact/time_of_impact.rs","byte_start":648313,"byte_end":648374,"line_start":65,"line_end":65,"column_start":1,"column_end":62}}]},{"kind":"Function","id":{"krate":0,"index":4681},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/time_of_impact/time_of_impact_ball_ball.rs","byte_start":651460,"byte_end":651484,"line_start":9,"line_end":9,"column_start":8,"column_end":32},"name":"time_of_impact_ball_ball","qualname":"::query::time_of_impact::time_of_impact_ball_ball::time_of_impact_ball_ball","value":"fn <N> (center1: &Point<N>, vel1: &Vector<N>, b1: &Ball<N>, center2: &Point<N>, vel2: &Vector<N>, b2: &Ball<N>, max_toi: N, target_distance: N) -> Option<TOI<N>>","parent":null,"children":[],"decl_id":null,"docs":" Time Of Impact of two balls under translational movement.\n","sig":null,"attributes":[{"value":"/ Time Of Impact of two balls under translational movement.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/time_of_impact/time_of_impact_ball_ball.rs","byte_start":651381,"byte_end":651442,"line_start":7,"line_end":7,"column_start":1,"column_end":62}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/time_of_impact/time_of_impact_ball_ball.rs","byte_start":651443,"byte_end":651452,"line_start":8,"line_end":8,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":4704},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/time_of_impact/time_of_impact_composite_shape_shape.rs","byte_start":653395,"byte_end":653431,"line_start":10,"line_end":10,"column_start":8,"column_end":44},"name":"time_of_impact_composite_shape_shape","qualname":"::query::time_of_impact::time_of_impact_composite_shape_shape::time_of_impact_composite_shape_shape","value":"fn <N, G1> (dispatcher: &dyn TOIDispatcher<N>, m1: &Isometry<N>, vel1: &Vector<N>, g1: &G1, m2: &Isometry<N>, vel2: &Vector<N>, g2: &dyn Shape<N>, max_toi: N, target_distance: N) -> Option<TOI<N>>","parent":null,"children":[],"decl_id":null,"docs":" Time Of Impact of a composite shape with any other shape, under translational movement.\n","sig":null,"attributes":[{"value":"/ Time Of Impact of a composite shape with any other shape, under translational movement.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/time_of_impact/time_of_impact_composite_shape_shape.rs","byte_start":653296,"byte_end":653387,"line_start":9,"line_end":9,"column_start":1,"column_end":92}}]},{"kind":"Function","id":{"krate":0,"index":4708},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/time_of_impact/time_of_impact_composite_shape_shape.rs","byte_start":654090,"byte_end":654126,"line_start":40,"line_end":40,"column_start":8,"column_end":44},"name":"time_of_impact_shape_composite_shape","qualname":"::query::time_of_impact::time_of_impact_composite_shape_shape::time_of_impact_shape_composite_shape","value":"fn <N, G2> (dispatcher: &dyn TOIDispatcher<N>, m1: &Isometry<N>, vel1: &Vector<N>, g1: &dyn Shape<N>, m2: &Isometry<N>, vel2: &Vector<N>, g2: &G2, max_toi: N, target_distance: N) -> Option<TOI<N>>","parent":null,"children":[],"decl_id":null,"docs":" Time Of Impact of any shape with a composite shape, under translational movement.\n","sig":null,"attributes":[{"value":"/ Time Of Impact of any shape with a composite shape, under translational movement.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/time_of_impact/time_of_impact_composite_shape_shape.rs","byte_start":653997,"byte_end":654082,"line_start":39,"line_end":39,"column_start":1,"column_end":86}}]},{"kind":"Function","id":{"krate":0,"index":4754},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/time_of_impact/time_of_impact_plane_support_map.rs","byte_start":658614,"byte_end":658646,"line_start":9,"line_end":9,"column_start":8,"column_end":40},"name":"time_of_impact_plane_support_map","qualname":"::query::time_of_impact::time_of_impact_plane_support_map::time_of_impact_plane_support_map","value":"fn <N, G> (mplane: &Isometry<N>, vel_plane: &Vector<N>, plane: &Plane<N>, mother: &Isometry<N>, vel_other: &Vector<N>, other: &G, max_toi: N, target_distance: N) -> Option<TOI<N>>","parent":null,"children":[],"decl_id":null,"docs":" Time Of Impact of a plane with a support-mapped shape under translational movement.\n","sig":null,"attributes":[{"value":"/ Time Of Impact of a plane with a support-mapped shape under translational movement.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/time_of_impact/time_of_impact_plane_support_map.rs","byte_start":658519,"byte_end":658606,"line_start":8,"line_end":8,"column_start":1,"column_end":88}}]},{"kind":"Function","id":{"krate":0,"index":4757},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/time_of_impact/time_of_impact_plane_support_map.rs","byte_start":660389,"byte_end":660421,"line_start":63,"line_end":63,"column_start":8,"column_end":40},"name":"time_of_impact_support_map_plane","qualname":"::query::time_of_impact::time_of_impact_plane_support_map::time_of_impact_support_map_plane","value":"fn <N, G> (mother: &Isometry<N>, vel_other: &Vector<N>, other: &G, mplane: &Isometry<N>, vel_plane: &Vector<N>, plane: &Plane<N>, max_toi: N, target_distance: N) -> Option<TOI<N>>","parent":null,"children":[],"decl_id":null,"docs":" Time Of Impact of a plane with a support-mapped shape under translational movement.\n","sig":null,"attributes":[{"value":"/ Time Of Impact of a plane with a support-mapped shape under translational movement.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/time_of_impact/time_of_impact_plane_support_map.rs","byte_start":660294,"byte_end":660381,"line_start":62,"line_end":62,"column_start":1,"column_end":88}}]},{"kind":"Function","id":{"krate":0,"index":4779},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/time_of_impact/time_of_impact_support_map_support_map.rs","byte_start":661274,"byte_end":661312,"line_start":10,"line_end":10,"column_start":8,"column_end":46},"name":"time_of_impact_support_map_support_map","qualname":"::query::time_of_impact::time_of_impact_support_map_support_map::time_of_impact_support_map_support_map","value":"fn <N, G1, G2> (m1: &Isometry<N>, vel1: &Vector<N>, g1: &G1, m2: &Isometry<N>, vel2: &Vector<N>, g2: &G2, max_toi: N, target_distance: N) -> Option<TOI<N>>","parent":null,"children":[],"decl_id":null,"docs":" Time of impacts between two support-mapped shapes under translational movement.\n","sig":null,"attributes":[{"value":"/ Time of impacts between two support-mapped shapes under translational movement.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/time_of_impact/time_of_impact_support_map_support_map.rs","byte_start":661183,"byte_end":661266,"line_start":9,"line_end":9,"column_start":1,"column_end":84}}]},{"kind":"Trait","id":{"krate":0,"index":4796},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/toi_dispatcher.rs","byte_start":666569,"byte_end":666582,"line_start":13,"line_end":13,"column_start":11,"column_end":24},"name":"TOIDispatcher","qualname":"::query::toi_dispatcher::TOIDispatcher","value":"TOIDispatcher<N: RealField>: Send + Sync","parent":null,"children":[{"krate":0,"index":4798},{"krate":0,"index":4799},{"krate":0,"index":4800}],"decl_id":null,"docs":" Dispatcher for time-of-impact queries","sig":null,"attributes":[{"value":"/ Dispatcher for time-of-impact queries","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/toi_dispatcher.rs","byte_start":666229,"byte_end":666270,"line_start":8,"line_end":8,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/toi_dispatcher.rs","byte_start":666271,"byte_end":666274,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Custom implementations allow crates that support an abstract `TOIDispatcher` to handle custom","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/toi_dispatcher.rs","byte_start":666275,"byte_end":666372,"line_start":10,"line_end":10,"column_start":1,"column_end":98}},{"value":"/ shapes. Methods take `root_dispatcher` to allow dispatchers to delegate to eachother. Callers","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/toi_dispatcher.rs","byte_start":666373,"byte_end":666470,"line_start":11,"line_end":11,"column_start":1,"column_end":98}},{"value":"/ that will not themselves be used to implement a `TOIDispatcher` should pass `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/toi_dispatcher.rs","byte_start":666471,"byte_end":666558,"line_start":12,"line_end":12,"column_start":1,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":4798},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/toi_dispatcher.rs","byte_start":666708,"byte_end":666732,"line_start":15,"line_end":15,"column_start":8,"column_end":32},"name":"nonlinear_time_of_impact","qualname":"::query::toi_dispatcher::TOIDispatcher::nonlinear_time_of_impact","value":"fn (&self, root_dispatcher: &dyn TOIDispatcher<N>, motion1: &dyn RigidMotion<N>, g1: &dyn Shape<N>, motion2: &dyn RigidMotion<N>, g2: &dyn Shape<N>, max_toi: N, target_distance: N) -> Result<Option<TOI<N>>, Unsupported>","parent":{"krate":0,"index":4796},"children":[],"decl_id":null,"docs":" Computes the smallest time of impact of two shapes under translational movement.\n","sig":null,"attributes":[{"value":"/ Computes the smallest time of impact of two shapes under translational movement.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/toi_dispatcher.rs","byte_start":666616,"byte_end":666700,"line_start":14,"line_end":14,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":4799},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/toi_dispatcher.rs","byte_start":667254,"byte_end":667268,"line_start":30,"line_end":30,"column_start":8,"column_end":22},"name":"time_of_impact","qualname":"::query::toi_dispatcher::TOIDispatcher::time_of_impact","value":"fn (&self, root_dispatcher: &dyn TOIDispatcher<N>, m1: &Isometry<N>, vel1: &Vector<N>, g1: &dyn Shape<N>, m2: &Isometry<N>, vel2: &Vector<N>, g2: &dyn Shape<N>, max_toi: N, target_distance: N) -> Result<Option<TOI<N>>, Unsupported>","parent":{"krate":0,"index":4796},"children":[],"decl_id":null,"docs":" Computes the smallest time at with two shapes under translational movement are separated by a\n distance smaller or equal to `distance`.","sig":null,"attributes":[{"value":"/ Computes the smallest time at with two shapes under translational movement are separated by a","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/toi_dispatcher.rs","byte_start":667026,"byte_end":667123,"line_start":26,"line_end":26,"column_start":5,"column_end":102}},{"value":"/ distance smaller or equal to `distance`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/toi_dispatcher.rs","byte_start":667128,"byte_end":667172,"line_start":27,"line_end":27,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/toi_dispatcher.rs","byte_start":667177,"byte_end":667180,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ Returns `0.0` if the objects are touching or penetrating.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/toi_dispatcher.rs","byte_start":667185,"byte_end":667246,"line_start":29,"line_end":29,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":4800},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/toi_dispatcher.rs","byte_start":667688,"byte_end":667693,"line_start":44,"line_end":44,"column_start":8,"column_end":13},"name":"chain","qualname":"::query::toi_dispatcher::TOIDispatcher::chain","value":"fn <U> (self, other: U) -> Chain<Self, U>","parent":{"krate":0,"index":4796},"children":[],"decl_id":null,"docs":" Construct a `TOIDispatcher` that falls back on `other` for cases not handled by `self`\n","sig":null,"attributes":[{"value":"/ Construct a `TOIDispatcher` that falls back on `other` for cases not handled by `self`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/toi_dispatcher.rs","byte_start":667590,"byte_end":667680,"line_start":43,"line_end":43,"column_start":5,"column_end":95}}]},{"kind":"Struct","id":{"krate":0,"index":7624},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/toi_dispatcher.rs","byte_start":667904,"byte_end":667924,"line_start":54,"line_end":54,"column_start":12,"column_end":32},"name":"DefaultTOIDispatcher","qualname":"::query::toi_dispatcher::DefaultTOIDispatcher","value":"","parent":null,"children":[],"decl_id":null,"docs":" A dispatcher that exposes built-in queries\n","sig":null,"attributes":[{"value":"/ A dispatcher that exposes built-in queries","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/toi_dispatcher.rs","byte_start":667822,"byte_end":667868,"line_start":52,"line_end":52,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":4806},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/toi_dispatcher.rs","byte_start":669140,"byte_end":669145,"line_start":105,"line_end":105,"column_start":12,"column_end":17},"name":"Chain","qualname":"::query::toi_dispatcher::Chain","value":"","parent":null,"children":[],"decl_id":null,"docs":" The composition of two dispatchers\n","sig":null,"attributes":[{"value":"/ The composition of two dispatchers","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/toi_dispatcher.rs","byte_start":669090,"byte_end":669128,"line_start":104,"line_end":104,"column_start":1,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":4817},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"visitors","qualname":"::query::visitors","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/mod.rs","parent":null,"children":[{"krate":0,"index":4818},{"krate":0,"index":4819},{"krate":0,"index":4820},{"krate":0,"index":4821},{"krate":0,"index":4822},{"krate":0,"index":4823},{"krate":0,"index":4824},{"krate":0,"index":4825},{"krate":0,"index":4855},{"krate":0,"index":4882},{"krate":0,"index":4916},{"krate":0,"index":4941},{"krate":0,"index":4967},{"krate":0,"index":4994}],"decl_id":null,"docs":" Visitors for performing geometric queries exploiting spatial partitioning data structures.\n","sig":null,"attributes":[{"value":"! Visitors for performing geometric queries exploiting spatial partitioning data structures.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/mod.rs","byte_start":670193,"byte_end":670287,"line_start":1,"line_end":1,"column_start":1,"column_end":95}}]},{"kind":"Struct","id":{"krate":0,"index":4837},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/aabb_sets_interferences_collector.rs","byte_start":671400,"byte_end":671430,"line_start":7,"line_end":7,"column_start":12,"column_end":42},"name":"AABBSetsInterferencesCollector","qualname":"::query::visitors::aabb_sets_interferences_collector::AABBSetsInterferencesCollector","value":"AABBSetsInterferencesCollector { ls_m2, ls_m2_abs_rot, tolerence, collector }","parent":null,"children":[{"krate":0,"index":4841},{"krate":0,"index":4842},{"krate":0,"index":4843},{"krate":0,"index":4844}],"decl_id":null,"docs":" Spatial partitioning data structure visitor collecting interferences with a given bounding volume.\n","sig":null,"attributes":[{"value":"/ Spatial partitioning data structure visitor collecting interferences with a given bounding volume.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/aabb_sets_interferences_collector.rs","byte_start":671286,"byte_end":671388,"line_start":6,"line_end":6,"column_start":1,"column_end":103}}]},{"kind":"Field","id":{"krate":0,"index":4841},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/aabb_sets_interferences_collector.rs","byte_start":671578,"byte_end":671583,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"name":"ls_m2","qualname":"::query::visitors::aabb_sets_interferences_collector::AABBSetsInterferencesCollector::ls_m2","value":"&'a na::Isometry<N, na::U3, na::Unit<na::Quaternion<N>>>","parent":{"krate":0,"index":4837},"children":[],"decl_id":null,"docs":" The transform from the local-space of the second bounding volumes to the local space of the first.\n","sig":null,"attributes":[{"value":"/ The transform from the local-space of the second bounding volumes to the local space of the first.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/aabb_sets_interferences_collector.rs","byte_start":671467,"byte_end":671569,"line_start":8,"line_end":8,"column_start":5,"column_end":107}}]},{"kind":"Field","id":{"krate":0,"index":4842},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/aabb_sets_interferences_collector.rs","byte_start":671771,"byte_end":671784,"line_start":13,"line_end":13,"column_start":9,"column_end":22},"name":"ls_m2_abs_rot","qualname":"::query::visitors::aabb_sets_interferences_collector::AABBSetsInterferencesCollector::ls_m2_abs_rot","value":"&'a na::Matrix<N, na::U3, na::U3, <na::DefaultAllocator as na::allocator::Allocator<N, na::U3, na::U3>>::Buffer>","parent":{"krate":0,"index":4837},"children":[],"decl_id":null,"docs":" The absolute value of the rotation matrix representing `ls_m2.rotation`.","sig":null,"attributes":[{"value":"/ The absolute value of the rotation matrix representing `ls_m2.rotation`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/aabb_sets_interferences_collector.rs","byte_start":671606,"byte_end":671682,"line_start":10,"line_end":10,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/aabb_sets_interferences_collector.rs","byte_start":671687,"byte_end":671690,"line_start":11,"line_end":11,"column_start":5,"column_end":8}},{"value":"/ Equals to `ls_m2.rotation.to_rotation.matrix().matrix().abs()`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/aabb_sets_interferences_collector.rs","byte_start":671695,"byte_end":671762,"line_start":12,"line_end":12,"column_start":5,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":4843},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/aabb_sets_interferences_collector.rs","byte_start":671949,"byte_end":671958,"line_start":17,"line_end":17,"column_start":9,"column_end":18},"name":"tolerence","qualname":"::query::visitors::aabb_sets_interferences_collector::AABBSetsInterferencesCollector::tolerence","value":"N","parent":{"krate":0,"index":4837},"children":[],"decl_id":null,"docs":" A tolerance applied to the interference tests.","sig":null,"attributes":[{"value":"/ A tolerance applied to the interference tests.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/aabb_sets_interferences_collector.rs","byte_start":671805,"byte_end":671855,"line_start":14,"line_end":14,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/aabb_sets_interferences_collector.rs","byte_start":671860,"byte_end":671863,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ AABB pairs closer than `tolerance` will be reported as intersecting.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/aabb_sets_interferences_collector.rs","byte_start":671868,"byte_end":671940,"line_start":16,"line_end":16,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":4844},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/aabb_sets_interferences_collector.rs","byte_start":672057,"byte_end":672066,"line_start":19,"line_end":19,"column_start":9,"column_end":18},"name":"collector","qualname":"::query::visitors::aabb_sets_interferences_collector::AABBSetsInterferencesCollector::collector","value":"&'a mut std::vec::Vec<(T, T)>","parent":{"krate":0,"index":4837},"children":[],"decl_id":null,"docs":" The data contained by the nodes with bounding volumes intersecting `self.bv`.\n","sig":null,"attributes":[{"value":"/ The data contained by the nodes with bounding volumes intersecting `self.bv`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/aabb_sets_interferences_collector.rs","byte_start":671967,"byte_end":672048,"line_start":18,"line_end":18,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":4849},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/aabb_sets_interferences_collector.rs","byte_start":672242,"byte_end":672245,"line_start":25,"line_end":25,"column_start":12,"column_end":15},"name":"new","qualname":"<AABBSetsInterferencesCollector>::new","value":"fn (tolerence: N, ls_m2: &'a Isometry<N>, ls_m2_abs_rot: &'a Matrix<N>, collector: &'a mut Vec<(T, T)>) -> AABBSetsInterferencesCollector<'a, N, T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `AABBSetsInterferencesCollector`.\n","sig":null,"attributes":[{"value":"/ Creates a new `AABBSetsInterferencesCollector`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/aabb_sets_interferences_collector.rs","byte_start":672165,"byte_end":672216,"line_start":23,"line_end":23,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/aabb_sets_interferences_collector.rs","byte_start":672221,"byte_end":672230,"line_start":24,"line_end":24,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":4862},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/bounding_volume_interferences_collector.rs","byte_start":673629,"byte_end":673665,"line_start":7,"line_end":7,"column_start":12,"column_end":48},"name":"BoundingVolumeInterferencesCollector","qualname":"::query::visitors::bounding_volume_interferences_collector::BoundingVolumeInterferencesCollector","value":"BoundingVolumeInterferencesCollector { bv, collector }","parent":null,"children":[{"krate":0,"index":4867},{"krate":0,"index":4868},{"krate":0,"index":4869}],"decl_id":null,"docs":" Spatial partitioning data structure visitor collecting interferences with a given bounding volume.\n","sig":null,"attributes":[{"value":"/ Spatial partitioning data structure visitor collecting interferences with a given bounding volume.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/bounding_volume_interferences_collector.rs","byte_start":673515,"byte_end":673617,"line_start":6,"line_end":6,"column_start":1,"column_end":103}}]},{"kind":"Field","id":{"krate":0,"index":4867},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/bounding_volume_interferences_collector.rs","byte_start":673759,"byte_end":673761,"line_start":9,"line_end":9,"column_start":9,"column_end":11},"name":"bv","qualname":"::query::visitors::bounding_volume_interferences_collector::BoundingVolumeInterferencesCollector::bv","value":"&'a BV","parent":{"krate":0,"index":4862},"children":[],"decl_id":null,"docs":" The bounding volume used for interference tests.\n","sig":null,"attributes":[{"value":"/ The bounding volume used for interference tests.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/bounding_volume_interferences_collector.rs","byte_start":673698,"byte_end":673750,"line_start":8,"line_end":8,"column_start":5,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":4868},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/bounding_volume_interferences_collector.rs","byte_start":673865,"byte_end":673874,"line_start":11,"line_end":11,"column_start":9,"column_end":18},"name":"collector","qualname":"::query::visitors::bounding_volume_interferences_collector::BoundingVolumeInterferencesCollector::collector","value":"&'a mut std::vec::Vec<T>","parent":{"krate":0,"index":4862},"children":[],"decl_id":null,"docs":" The data contained by the nodes with bounding volumes intersecting `self.bv`.\n","sig":null,"attributes":[{"value":"/ The data contained by the nodes with bounding volumes intersecting `self.bv`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/bounding_volume_interferences_collector.rs","byte_start":673775,"byte_end":673856,"line_start":10,"line_end":10,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":4875},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/bounding_volume_interferences_collector.rs","byte_start":674133,"byte_end":674136,"line_start":22,"line_end":22,"column_start":12,"column_end":15},"name":"new","qualname":"<BoundingVolumeInterferencesCollector>::new","value":"fn (bv: &'a BV, buffer: &'a mut Vec<T>) -> BoundingVolumeInterferencesCollector<'a, N, T, BV>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BoundingVolumeInterferencesCollector`.\n","sig":null,"attributes":[{"value":"/ Creates a new `BoundingVolumeInterferencesCollector`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/bounding_volume_interferences_collector.rs","byte_start":674050,"byte_end":674107,"line_start":20,"line_end":20,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/bounding_volume_interferences_collector.rs","byte_start":674112,"byte_end":674121,"line_start":21,"line_end":21,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":4897},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/composite_closest_point_visitor.rs","byte_start":675214,"byte_end":675242,"line_start":9,"line_end":9,"column_start":12,"column_end":40},"name":"CompositeClosestPointVisitor","qualname":"::query::visitors::composite_closest_point_visitor::CompositeClosestPointVisitor","value":"CompositeClosestPointVisitor {  }","parent":null,"children":[{"krate":0,"index":4901},{"krate":0,"index":4902},{"krate":0,"index":4903}],"decl_id":null,"docs":" Best-first traversal visitor for computing the point closest to a composite shape.\n","sig":null,"attributes":[{"value":"/ Best-first traversal visitor for computing the point closest to a composite shape.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/composite_closest_point_visitor.rs","byte_start":675116,"byte_end":675202,"line_start":8,"line_end":8,"column_start":1,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":4908},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/composite_closest_point_visitor.rs","byte_start":675557,"byte_end":675560,"line_start":17,"line_end":17,"column_start":12,"column_end":15},"name":"new","qualname":"<CompositeClosestPointVisitor>::new","value":"fn (shape: &'a S, point: &'a Point<N>, solid: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Initializes a visitor that allows the computation of the point closest to `point` on `shape`.\n","sig":null,"attributes":[{"value":"/ Initializes a visitor that allows the computation of the point closest to `point` on `shape`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/composite_closest_point_visitor.rs","byte_start":675448,"byte_end":675545,"line_start":16,"line_end":16,"column_start":5,"column_end":102}}]},{"kind":"Struct","id":{"krate":0,"index":4927},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/composite_point_containment_test.rs","byte_start":677118,"byte_end":677147,"line_start":9,"line_end":9,"column_start":12,"column_end":41},"name":"CompositePointContainmentTest","qualname":"::query::visitors::composite_point_containment_test::CompositePointContainmentTest","value":"CompositePointContainmentTest { shape, point, found }","parent":null,"children":[{"krate":0,"index":4931},{"krate":0,"index":4932},{"krate":0,"index":4933}],"decl_id":null,"docs":" Visitor for checking if a composite shape contains a specific point.\n","sig":null,"attributes":[{"value":"/ Visitor for checking if a composite shape contains a specific point.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/composite_point_containment_test.rs","byte_start":677034,"byte_end":677106,"line_start":8,"line_end":8,"column_start":1,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":4931},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/composite_point_containment_test.rs","byte_start":677293,"byte_end":677298,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"name":"shape","qualname":"::query::visitors::composite_point_containment_test::CompositePointContainmentTest::shape","value":"&'a S","parent":{"krate":0,"index":4927},"children":[],"decl_id":null,"docs":" The composite shape on which the point containment test should be performed.\n","sig":null,"attributes":[{"value":"/ The composite shape on which the point containment test should be performed.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/composite_point_containment_test.rs","byte_start":677204,"byte_end":677284,"line_start":10,"line_end":10,"column_start":5,"column_end":85}}]},{"kind":"Field","id":{"krate":0,"index":4932},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/composite_point_containment_test.rs","byte_start":677347,"byte_end":677352,"line_start":13,"line_end":13,"column_start":9,"column_end":14},"name":"point","qualname":"::query::visitors::composite_point_containment_test::CompositePointContainmentTest::point","value":"&'a na::Point<N, na::U3>","parent":{"krate":0,"index":4927},"children":[],"decl_id":null,"docs":" The point to be tested.\n","sig":null,"attributes":[{"value":"/ The point to be tested.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/composite_point_containment_test.rs","byte_start":677311,"byte_end":677338,"line_start":12,"line_end":12,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":4933},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/composite_point_containment_test.rs","byte_start":677460,"byte_end":677465,"line_start":15,"line_end":15,"column_start":9,"column_end":14},"name":"found","qualname":"::query::visitors::composite_point_containment_test::CompositePointContainmentTest::found","value":"bool","parent":{"krate":0,"index":4927},"children":[],"decl_id":null,"docs":" A traversal will set this to `true` if the point is inside of `self.shape`.\n","sig":null,"attributes":[{"value":"/ A traversal will set this to `true` if the point is inside of `self.shape`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/composite_point_containment_test.rs","byte_start":677372,"byte_end":677451,"line_start":14,"line_end":14,"column_start":5,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":4950},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/point_interferences_collector.rs","byte_start":678570,"byte_end":678597,"line_start":9,"line_end":9,"column_start":12,"column_end":39},"name":"PointInterferencesCollector","qualname":"::query::visitors::point_interferences_collector::PointInterferencesCollector","value":"PointInterferencesCollector { point, collector }","parent":null,"children":[{"krate":0,"index":4954},{"krate":0,"index":4955}],"decl_id":null,"docs":" Spatial partitioning structure visitor collecting nodes that may contain a given point.\n","sig":null,"attributes":[{"value":"/ Spatial partitioning structure visitor collecting nodes that may contain a given point.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/point_interferences_collector.rs","byte_start":678467,"byte_end":678558,"line_start":8,"line_end":8,"column_start":1,"column_end":92}}]},{"kind":"Field","id":{"krate":0,"index":4954},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/point_interferences_collector.rs","byte_start":678666,"byte_end":678671,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"name":"point","qualname":"::query::visitors::point_interferences_collector::PointInterferencesCollector::point","value":"&'a na::Point<N, na::U3>","parent":{"krate":0,"index":4950},"children":[],"decl_id":null,"docs":" Point to be tested.\n","sig":null,"attributes":[{"value":"/ Point to be tested.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/point_interferences_collector.rs","byte_start":678634,"byte_end":678657,"line_start":10,"line_end":10,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":4955},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/point_interferences_collector.rs","byte_start":678779,"byte_end":678788,"line_start":13,"line_end":13,"column_start":9,"column_end":18},"name":"collector","qualname":"::query::visitors::point_interferences_collector::PointInterferencesCollector::collector","value":"&'a mut std::vec::Vec<T>","parent":{"krate":0,"index":4950},"children":[],"decl_id":null,"docs":" The data contained by the nodes which bounding volume contain `self.point`.\n","sig":null,"attributes":[{"value":"/ The data contained by the nodes which bounding volume contain `self.point`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/point_interferences_collector.rs","byte_start":678691,"byte_end":678770,"line_start":12,"line_end":12,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":4960},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/point_interferences_collector.rs","byte_start":678953,"byte_end":678956,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"new","qualname":"<PointInterferencesCollector>::new","value":"fn (point: &'a Point<N>, buffer: &'a mut Vec<T>) -> PointInterferencesCollector<'a, N, T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `PointInterferencesCollector`.\n","sig":null,"attributes":[{"value":"/ Creates a new `PointInterferencesCollector`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/point_interferences_collector.rs","byte_start":678879,"byte_end":678927,"line_start":17,"line_end":17,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/point_interferences_collector.rs","byte_start":678932,"byte_end":678941,"line_start":18,"line_end":18,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":4976},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/ray_interferences_collector.rs","byte_start":679878,"byte_end":679903,"line_start":7,"line_end":7,"column_start":12,"column_end":37},"name":"RayInterferencesCollector","qualname":"::query::visitors::ray_interferences_collector::RayInterferencesCollector","value":"RayInterferencesCollector { ray, max_toi, collector }","parent":null,"children":[{"krate":0,"index":4980},{"krate":0,"index":4981},{"krate":0,"index":4982}],"decl_id":null,"docs":" Bounding Volume Tree visitor collecting interferences with a given ray.\n","sig":null,"attributes":[{"value":"/ Bounding Volume Tree visitor collecting interferences with a given ray.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/ray_interferences_collector.rs","byte_start":679791,"byte_end":679866,"line_start":6,"line_end":6,"column_start":1,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":4980},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/ray_interferences_collector.rs","byte_start":679970,"byte_end":679973,"line_start":9,"line_end":9,"column_start":9,"column_end":12},"name":"ray","qualname":"::query::visitors::ray_interferences_collector::RayInterferencesCollector::ray","value":"&'a query::ray::ray::Ray<N>","parent":{"krate":0,"index":4976},"children":[],"decl_id":null,"docs":" Ray to be tested.\n","sig":null,"attributes":[{"value":"/ Ray to be tested.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/ray_interferences_collector.rs","byte_start":679940,"byte_end":679961,"line_start":8,"line_end":8,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":4981},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/ray_interferences_collector.rs","byte_start":680039,"byte_end":680046,"line_start":11,"line_end":11,"column_start":9,"column_end":16},"name":"max_toi","qualname":"::query::visitors::ray_interferences_collector::RayInterferencesCollector::max_toi","value":"N","parent":{"krate":0,"index":4976},"children":[],"decl_id":null,"docs":" The maximum allowed time of impact.\n","sig":null,"attributes":[{"value":"/ The maximum allowed time of impact.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/ray_interferences_collector.rs","byte_start":679991,"byte_end":680030,"line_start":10,"line_end":10,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":4982},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/ray_interferences_collector.rs","byte_start":680144,"byte_end":680153,"line_start":13,"line_end":13,"column_start":9,"column_end":18},"name":"collector","qualname":"::query::visitors::ray_interferences_collector::RayInterferencesCollector::collector","value":"&'a mut std::vec::Vec<T>","parent":{"krate":0,"index":4976},"children":[],"decl_id":null,"docs":" The data contained by the nodes which bounding volume intersects `self.ray`.\n","sig":null,"attributes":[{"value":"/ The data contained by the nodes which bounding volume intersects `self.ray`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/ray_interferences_collector.rs","byte_start":680055,"byte_end":680135,"line_start":12,"line_end":12,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4987},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/ray_interferences_collector.rs","byte_start":680314,"byte_end":680317,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"new","qualname":"<RayInterferencesCollector>::new","value":"fn (ray: &'a Ray<N>, max_toi: N, buffer: &'a mut Vec<T>) -> RayInterferencesCollector<'a, N, T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `RayInterferencesCollector`.\n","sig":null,"attributes":[{"value":"/ Creates a new `RayInterferencesCollector`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/ray_interferences_collector.rs","byte_start":680242,"byte_end":680288,"line_start":17,"line_end":17,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/ray_interferences_collector.rs","byte_start":680293,"byte_end":680302,"line_start":18,"line_end":18,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":5010},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/ray_intersection_cost_fn_visitor.rs","byte_start":681439,"byte_end":681467,"line_start":11,"line_end":11,"column_start":12,"column_end":40},"name":"RayIntersectionCostFnVisitor","qualname":"::query::visitors::ray_intersection_cost_fn_visitor::RayIntersectionCostFnVisitor","value":"RayIntersectionCostFnVisitor {  }","parent":null,"children":[{"krate":0,"index":5016},{"krate":0,"index":5017},{"krate":0,"index":5018},{"krate":0,"index":5019}],"decl_id":null,"docs":" Bounding Volume Tree visitor collecting interferences with a given ray.\n","sig":null,"attributes":[{"value":"/ Bounding Volume Tree visitor collecting interferences with a given ray.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/ray_intersection_cost_fn_visitor.rs","byte_start":681352,"byte_end":681427,"line_start":10,"line_end":10,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":5026},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/ray_intersection_cost_fn_visitor.rs","byte_start":682444,"byte_end":682447,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<RayIntersectionCostFnVisitor>::new","value":"fn (ray: &'b Ray<N>, max_toi: N, broad_phase: &'a dyn BroadPhase<N, BV, T>, cost_fn: &'a dyn Fn(T, &'b Ray<N>, N) -> Option<(T, RayIntersection<N>)>) -> RayIntersectionCostFnVisitor<'a, 'b, N, T, BV>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `RayIntersectionCostFnVisitor`.\n","sig":null,"attributes":[{"value":"/ Creates a new `RayIntersectionCostFnVisitor`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/ray_intersection_cost_fn_visitor.rs","byte_start":682369,"byte_end":682418,"line_start":37,"line_end":37,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/ray_intersection_cost_fn_visitor.rs","byte_start":682423,"byte_end":682432,"line_start":38,"line_end":38,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":5035},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"shape","qualname":"::shape","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/mod.rs","parent":null,"children":[{"krate":0,"index":5036},{"krate":0,"index":5037},{"krate":0,"index":5038},{"krate":0,"index":5039},{"krate":0,"index":5040},{"krate":0,"index":5041},{"krate":0,"index":5042},{"krate":0,"index":5045},{"krate":0,"index":5048},{"krate":0,"index":5049},{"krate":0,"index":5050},{"krate":0,"index":5053},{"krate":0,"index":5056},{"krate":0,"index":5057},{"krate":0,"index":5058},{"krate":0,"index":5061},{"krate":0,"index":5064},{"krate":0,"index":5065},{"krate":0,"index":5068},{"krate":0,"index":5071},{"krate":0,"index":5074},{"krate":0,"index":5093},{"krate":0,"index":5130},{"krate":0,"index":5146},{"krate":0,"index":5200},{"krate":0,"index":5216},{"krate":0,"index":5267},{"krate":0,"index":5318},{"krate":0,"index":5342},{"krate":0,"index":5377},{"krate":0,"index":5393},{"krate":0,"index":5401},{"krate":0,"index":5469},{"krate":0,"index":5478},{"krate":0,"index":5573},{"krate":0,"index":5626},{"krate":0,"index":5695},{"krate":0,"index":5767},{"krate":0,"index":5781},{"krate":0,"index":5812},{"krate":0,"index":5868}],"decl_id":null,"docs":" Collision shapes supported by ncollide.\n","sig":null,"attributes":[{"value":"! Collision shapes supported by ncollide.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/mod.rs","byte_start":685024,"byte_end":685067,"line_start":1,"line_end":1,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":7634},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/ball.rs","byte_start":687455,"byte_end":687459,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Ball","qualname":"::shape::ball::Ball","value":"Ball { radius }","parent":null,"children":[{"krate":0,"index":7636}],"decl_id":null,"docs":" A Ball shape.\n","sig":null,"attributes":[{"value":"/ A Ball shape.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/ball.rs","byte_start":687322,"byte_end":687339,"line_start":6,"line_end":6,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":7636},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/ball.rs","byte_start":687516,"byte_end":687522,"line_start":11,"line_end":11,"column_start":9,"column_end":15},"name":"radius","qualname":"::shape::ball::Ball::radius","value":"N","parent":{"krate":0,"index":7634},"children":[],"decl_id":null,"docs":" The radius of the ball.\n","sig":null,"attributes":[{"value":"/ The radius of the ball.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/ball.rs","byte_start":687480,"byte_end":687507,"line_start":10,"line_end":10,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":5085},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/ball.rs","byte_start":687639,"byte_end":687642,"line_start":17,"line_end":17,"column_start":12,"column_end":15},"name":"new","qualname":"<Ball<N>>::new","value":"fn (radius: N) -> Ball<N>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new ball from its radius and center.\n","sig":null,"attributes":[{"value":"/ Creates a new ball from its radius and center.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/ball.rs","byte_start":687563,"byte_end":687613,"line_start":15,"line_end":15,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/ball.rs","byte_start":687618,"byte_end":687627,"line_start":16,"line_end":16,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5086},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/ball.rs","byte_start":687821,"byte_end":687827,"line_start":24,"line_end":24,"column_start":12,"column_end":18},"name":"radius","qualname":"<Ball<N>>::radius","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The ball radius.\n","sig":null,"attributes":[{"value":"/ The ball radius.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/ball.rs","byte_start":687702,"byte_end":687722,"line_start":21,"line_end":21,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/ball.rs","byte_start":687727,"byte_end":687736,"line_start":22,"line_end":22,"column_start":5,"column_end":14}},{"value":"deprecated(note = \"use the `self.radius` public field directly.\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/ball.rs","byte_start":687741,"byte_end":687809,"line_start":23,"line_end":23,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":7651},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/capsule.rs","byte_start":688993,"byte_end":689000,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"Capsule","qualname":"::shape::capsule::Capsule","value":"Capsule { half_height, radius }","parent":null,"children":[{"krate":0,"index":7653},{"krate":0,"index":7654}],"decl_id":null,"docs":" SupportMap description of a capsule shape with its principal axis aligned with the `y` axis.\n","sig":null,"attributes":[{"value":"/ SupportMap description of a capsule shape with its principal axis aligned with the `y` axis.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/capsule.rs","byte_start":688781,"byte_end":688877,"line_start":9,"line_end":9,"column_start":1,"column_end":97}}]},{"kind":"Field","id":{"krate":0,"index":7653},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/capsule.rs","byte_start":689073,"byte_end":689084,"line_start":14,"line_end":14,"column_start":9,"column_end":20},"name":"half_height","qualname":"::shape::capsule::Capsule::half_height","value":"N","parent":{"krate":0,"index":7651},"children":[],"decl_id":null,"docs":" The half-height of the capsule's cylindrical part.\n","sig":null,"attributes":[{"value":"/ The half-height of the capsule's cylindrical part.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/capsule.rs","byte_start":689010,"byte_end":689064,"line_start":13,"line_end":13,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":7654},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/capsule.rs","byte_start":689132,"byte_end":689138,"line_start":16,"line_end":16,"column_start":9,"column_end":15},"name":"radius","qualname":"::shape::capsule::Capsule::radius","value":"N","parent":{"krate":0,"index":7651},"children":[],"decl_id":null,"docs":" The radius of the capsule.\n","sig":null,"attributes":[{"value":"/ The radius of the capsule.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/capsule.rs","byte_start":689093,"byte_end":689123,"line_start":15,"line_end":15,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":5111},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/capsule.rs","byte_start":689390,"byte_end":689393,"line_start":25,"line_end":25,"column_start":12,"column_end":15},"name":"new","qualname":"<Capsule<N>>::new","value":"fn (half_height: N, radius: N) -> Capsule<N>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new capsule.","sig":null,"attributes":[{"value":"/ Creates a new capsule.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/capsule.rs","byte_start":689182,"byte_end":689208,"line_start":20,"line_end":20,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/capsule.rs","byte_start":689213,"byte_end":689216,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ # Arguments:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/capsule.rs","byte_start":689221,"byte_end":689237,"line_start":22,"line_end":22,"column_start":5,"column_end":21}},{"value":"/ * `half_height` - the half length of the capsule along the `y` axis.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/capsule.rs","byte_start":689242,"byte_end":689314,"line_start":23,"line_end":23,"column_start":5,"column_end":77}},{"value":"/ * `radius` - radius of the rounded part of the capsule.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/capsule.rs","byte_start":689319,"byte_end":689378,"line_start":24,"line_end":24,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":5112},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/capsule.rs","byte_start":689678,"byte_end":689689,"line_start":35,"line_end":35,"column_start":12,"column_end":23},"name":"half_height","qualname":"<Capsule<N>>::half_height","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The capsule half length along its local `y` axis.\n","sig":null,"attributes":[{"value":"/ The capsule half length along its local `y` axis.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/capsule.rs","byte_start":689521,"byte_end":689574,"line_start":32,"line_end":32,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/capsule.rs","byte_start":689579,"byte_end":689588,"line_start":33,"line_end":33,"column_start":5,"column_end":14}},{"value":"deprecated(note = \"use the `self.half_height` public field directly.\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/capsule.rs","byte_start":689593,"byte_end":689666,"line_start":34,"line_end":34,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":5113},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/capsule.rs","byte_start":689814,"byte_end":689820,"line_start":41,"line_end":41,"column_start":12,"column_end":18},"name":"height","qualname":"<Capsule<N>>::height","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The capsule height along its local `y` axis.\n","sig":null,"attributes":[{"value":"/ The capsule height along its local `y` axis.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/capsule.rs","byte_start":689740,"byte_end":689788,"line_start":39,"line_end":39,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/capsule.rs","byte_start":689793,"byte_end":689802,"line_start":40,"line_end":40,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5114},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/capsule.rs","byte_start":690034,"byte_end":690040,"line_start":48,"line_end":48,"column_start":12,"column_end":18},"name":"radius","qualname":"<Capsule<N>>::radius","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The radius of the capsule's rounded part.\n","sig":null,"attributes":[{"value":"/ The radius of the capsule's rounded part.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/capsule.rs","byte_start":689890,"byte_end":689935,"line_start":45,"line_end":45,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/capsule.rs","byte_start":689940,"byte_end":689949,"line_start":46,"line_end":46,"column_start":5,"column_end":14}},{"value":"deprecated(note = \"use the `self.radius` public field directly.\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/capsule.rs","byte_start":689954,"byte_end":690022,"line_start":47,"line_end":47,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":5115},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/capsule.rs","byte_start":690184,"byte_end":690191,"line_start":54,"line_end":54,"column_start":12,"column_end":19},"name":"segment","qualname":"<Capsule<N>>::segment","value":"fn (&self) -> Segment<N>","parent":null,"children":[],"decl_id":null,"docs":" The segment that, once dilated by `self.radius` yields this capsule.\n","sig":null,"attributes":[{"value":"/ The segment that, once dilated by `self.radius` yields this capsule.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/capsule.rs","byte_start":690086,"byte_end":690158,"line_start":52,"line_end":52,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/capsule.rs","byte_start":690163,"byte_end":690172,"line_start":53,"line_end":53,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5116},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/capsule.rs","byte_start":690503,"byte_end":690523,"line_start":65,"line_end":65,"column_start":12,"column_end":32},"name":"contact_preprocessor","qualname":"<Capsule<N>>::contact_preprocessor","value":"fn (&self) -> impl ContactPreprocessor<N>","parent":null,"children":[],"decl_id":null,"docs":" The contact preprocessor to be used for contact determination with this capsule.\n","sig":null,"attributes":[{"value":"/ The contact preprocessor to be used for contact determination with this capsule.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/capsule.rs","byte_start":690393,"byte_end":690477,"line_start":63,"line_end":63,"column_start":5,"column_end":89}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/capsule.rs","byte_start":690482,"byte_end":690491,"line_start":64,"line_end":64,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":5130},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/composite_shape.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"composite_shape","qualname":"::shape::composite_shape","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/composite_shape.rs","parent":null,"children":[{"krate":0,"index":5131},{"krate":0,"index":5132},{"krate":0,"index":5133},{"krate":0,"index":5134},{"krate":0,"index":5137},{"krate":0,"index":5138},{"krate":0,"index":5139}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":5139},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/composite_shape.rs","byte_start":692910,"byte_end":692924,"line_start":12,"line_end":12,"column_start":11,"column_end":25},"name":"CompositeShape","qualname":"::shape::composite_shape::CompositeShape","value":"CompositeShape<N: RealField>","parent":null,"children":[{"krate":0,"index":5141},{"krate":0,"index":5142},{"krate":0,"index":5143},{"krate":0,"index":5144},{"krate":0,"index":5145}],"decl_id":null,"docs":" Trait implemented by shapes composed of multiple simpler shapes.","sig":null,"attributes":[{"value":"/ Trait implemented by shapes composed of multiple simpler shapes.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/composite_shape.rs","byte_start":692710,"byte_end":692778,"line_start":8,"line_end":8,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/composite_shape.rs","byte_start":692779,"byte_end":692782,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ A composite shape is composed of several shapes. Typically, it is a convex decomposition of","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/composite_shape.rs","byte_start":692783,"byte_end":692878,"line_start":10,"line_end":10,"column_start":1,"column_end":96}},{"value":"/ a concave shape.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/composite_shape.rs","byte_start":692879,"byte_end":692899,"line_start":11,"line_end":11,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":5141},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/composite_shape.rs","byte_start":693005,"byte_end":693011,"line_start":14,"line_end":14,"column_start":8,"column_end":14},"name":"nparts","qualname":"::shape::composite_shape::CompositeShape::nparts","value":"fn (&self) -> usize","parent":{"krate":0,"index":5139},"children":[],"decl_id":null,"docs":" The number of sub-shape in this composide shape.\n","sig":null,"attributes":[{"value":"/ The number of sub-shape in this composide shape.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/composite_shape.rs","byte_start":692945,"byte_end":692997,"line_start":13,"line_end":13,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":5142},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/composite_shape.rs","byte_start":693141,"byte_end":693152,"line_start":18,"line_end":18,"column_start":8,"column_end":19},"name":"map_part_at","qualname":"::shape::composite_shape::CompositeShape::map_part_at","value":"fn (&self, _: usize, m: &Isometry<N>, _: &mut dyn FnMut(&Isometry<N>, &dyn Shape<N>)) -> ()","parent":{"krate":0,"index":5139},"children":[],"decl_id":null,"docs":" Applies a transformation matrix and a function to each sub-shape of this concave\n shape.\n","sig":null,"attributes":[{"value":"/ Applies a transformation matrix and a function to each sub-shape of this concave","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/composite_shape.rs","byte_start":693034,"byte_end":693118,"line_start":16,"line_end":16,"column_start":5,"column_end":89}},{"value":"/ shape.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/composite_shape.rs","byte_start":693123,"byte_end":693133,"line_start":17,"line_end":17,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":5143},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/composite_shape.rs","byte_start":693387,"byte_end":693415,"line_start":27,"line_end":27,"column_start":8,"column_end":36},"name":"map_part_and_preprocessor_at","qualname":"::shape::composite_shape::CompositeShape::map_part_and_preprocessor_at","value":"fn (&self, _: usize, m: &Isometry<N>, prediction: &ContactPrediction<N>, _: &mut dyn FnMut(&Isometry<N>, &dyn Shape<N>, &dyn ContactPreprocessor<N>)) -> ()","parent":{"krate":0,"index":5139},"children":[],"decl_id":null,"docs":" Applies a transformation matrix and a function to each sub-shape of this concave\n shape.\n","sig":null,"attributes":[{"value":"/ Applies a transformation matrix and a function to each sub-shape of this concave","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/composite_shape.rs","byte_start":693280,"byte_end":693364,"line_start":25,"line_end":25,"column_start":5,"column_end":89}},{"value":"/ shape.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/composite_shape.rs","byte_start":693369,"byte_end":693379,"line_start":26,"line_end":26,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":5144},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/composite_shape.rs","byte_start":693746,"byte_end":693753,"line_start":37,"line_end":37,"column_start":8,"column_end":15},"name":"aabb_at","qualname":"::shape::composite_shape::CompositeShape::aabb_at","value":"fn (&self, i: usize) -> AABB<N>","parent":{"krate":0,"index":5139},"children":[],"decl_id":null,"docs":" Gets the AABB of the shape identified by the index `i`.\n","sig":null,"attributes":[{"value":"/ Gets the AABB of the shape identified by the index `i`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/composite_shape.rs","byte_start":693679,"byte_end":693738,"line_start":36,"line_end":36,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":5145},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/composite_shape.rs","byte_start":693853,"byte_end":693856,"line_start":40,"line_end":40,"column_start":8,"column_end":11},"name":"bvh","qualname":"::shape::composite_shape::CompositeShape::bvh","value":"fn (&self) -> BVHImpl<N, usize, AABB<N>>","parent":{"krate":0,"index":5139},"children":[],"decl_id":null,"docs":" Gets the acceleration structure of the concave shape.\n","sig":null,"attributes":[{"value":"/ Gets the acceleration structure of the concave shape.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/composite_shape.rs","byte_start":693788,"byte_end":693845,"line_start":39,"line_end":39,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":7669},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/compound.rs","byte_start":694615,"byte_end":694623,"line_start":19,"line_end":19,"column_start":12,"column_end":20},"name":"Compound","qualname":"::shape::compound::Compound","value":"Compound {  }","parent":null,"children":[{"krate":0,"index":7671},{"krate":0,"index":7672},{"krate":0,"index":7673},{"krate":0,"index":7674}],"decl_id":null,"docs":" A compound shape with an aabb bounding volume.","sig":null,"attributes":[{"value":"/ A compound shape with an aabb bounding volume.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/compound.rs","byte_start":694272,"byte_end":694322,"line_start":13,"line_end":13,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/compound.rs","byte_start":694323,"byte_end":694326,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ A compound shape is a shape composed of the union of several simpler shape. This is","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/compound.rs","byte_start":694327,"byte_end":694414,"line_start":15,"line_end":15,"column_start":1,"column_end":88}},{"value":"/ the main way of creating a concave shape from convex parts. Each parts can have its own","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/compound.rs","byte_start":694415,"byte_end":694506,"line_start":16,"line_end":16,"column_start":1,"column_end":92}},{"value":"/ delta transformation to shift or rotate it with regard to the other shapes.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/compound.rs","byte_start":694507,"byte_end":694586,"line_start":17,"line_end":17,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":5170},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/compound.rs","byte_start":694843,"byte_end":694846,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"new","qualname":"<Compound<N>>::new","value":"fn (shapes: Vec<(Isometry<N>, ShapeHandle<N>)>) -> Compound<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new compound shape.\n","sig":null,"attributes":[{"value":"/ Builds a new compound shape.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/compound.rs","byte_start":694799,"byte_end":694831,"line_start":27,"line_end":27,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":5173},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/compound.rs","byte_start":695767,"byte_end":695773,"line_start":59,"line_end":59,"column_start":12,"column_end":18},"name":"shapes","qualname":"<Compound<N>>::shapes","value":"fn (&self) -> &[(Isometry<N>, ShapeHandle<N>)]","parent":null,"children":[],"decl_id":null,"docs":" The shapes of this compound shape.\n","sig":null,"attributes":[{"value":"/ The shapes of this compound shape.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/compound.rs","byte_start":695703,"byte_end":695741,"line_start":57,"line_end":57,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/compound.rs","byte_start":695746,"byte_end":695755,"line_start":58,"line_end":58,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5174},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/compound.rs","byte_start":695940,"byte_end":695943,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"bvt","qualname":"<Compound<N>>::bvt","value":"fn (&self) -> &BVT<usize, AABB<N>>","parent":null,"children":[],"decl_id":null,"docs":" The optimization structure used by this compound shape.\n","sig":null,"attributes":[{"value":"/ The optimization structure used by this compound shape.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/compound.rs","byte_start":695855,"byte_end":695914,"line_start":63,"line_end":63,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/compound.rs","byte_start":695919,"byte_end":695928,"line_start":64,"line_end":64,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5175},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/compound.rs","byte_start":696081,"byte_end":696085,"line_start":71,"line_end":71,"column_start":12,"column_end":16},"name":"aabb","qualname":"<Compound<N>>::aabb","value":"fn (&self) -> &AABB<N>","parent":null,"children":[],"decl_id":null,"docs":" The AABB of this compound in its local-space.\n","sig":null,"attributes":[{"value":"/ The AABB of this compound in its local-space.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/compound.rs","byte_start":696006,"byte_end":696055,"line_start":69,"line_end":69,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/compound.rs","byte_start":696060,"byte_end":696069,"line_start":70,"line_end":70,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5176},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/compound.rs","byte_start":696285,"byte_end":696301,"line_start":79,"line_end":79,"column_start":12,"column_end":28},"name":"bounding_volumes","qualname":"<Compound<N>>::bounding_volumes","value":"fn (&self) -> &[AABB<N>]","parent":null,"children":[],"decl_id":null,"docs":" The shapes bounding volumes.\n","sig":null,"attributes":[{"value":"/ The shapes bounding volumes.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/compound.rs","byte_start":696227,"byte_end":696259,"line_start":77,"line_end":77,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/compound.rs","byte_start":696264,"byte_end":696273,"line_start":78,"line_end":78,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5177},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/compound.rs","byte_start":696441,"byte_end":696448,"line_start":85,"line_end":85,"column_start":12,"column_end":19},"name":"aabb_at","qualname":"<Compound<N>>::aabb_at","value":"fn (&self, i: usize) -> &AABB<N>","parent":null,"children":[],"decl_id":null,"docs":" The AABB of the i-th shape compositing this compound.\n","sig":null,"attributes":[{"value":"/ The AABB of the i-th shape compositing this compound.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/compound.rs","byte_start":696358,"byte_end":696415,"line_start":83,"line_end":83,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/compound.rs","byte_start":696420,"byte_end":696429,"line_start":84,"line_end":84,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5178},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/compound.rs","byte_start":696699,"byte_end":696718,"line_start":91,"line_end":91,"column_start":12,"column_end":31},"name":"subshape_feature_id","qualname":"<Compound<N>>::subshape_feature_id","value":"fn (&self, fid: FeatureId) -> (usize, FeatureId)","parent":null,"children":[],"decl_id":null,"docs":" Transforms a FeatureId of this compound into a pair containing the index of the subshape\n containing this feature, and the corresponding FeatureId on this subshape.\n","sig":null,"attributes":[{"value":"/ Transforms a FeatureId of this compound into a pair containing the index of the subshape","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/compound.rs","byte_start":696512,"byte_end":696604,"line_start":89,"line_end":89,"column_start":5,"column_end":97}},{"value":"/ containing this feature, and the corresponding FeatureId on this subshape.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/compound.rs","byte_start":696609,"byte_end":696687,"line_start":90,"line_end":90,"column_start":5,"column_end":83}}]},{"kind":"Struct","id":{"krate":0,"index":7678},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/cone.rs","byte_start":700482,"byte_end":700486,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Cone","qualname":"::shape::cone::Cone","value":"Cone { half_height, radius }","parent":null,"children":[{"krate":0,"index":7680},{"krate":0,"index":7681}],"decl_id":null,"docs":" SupportMap description of a cylinder shape with its principal axis aligned with the `y` axis.\n","sig":null,"attributes":[{"value":"/ SupportMap description of a cylinder shape with its principal axis aligned with the `y` axis.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/cone.rs","byte_start":700269,"byte_end":700366,"line_start":7,"line_end":7,"column_start":1,"column_end":98}}]},{"kind":"Field","id":{"krate":0,"index":7680},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/cone.rs","byte_start":700537,"byte_end":700548,"line_start":12,"line_end":12,"column_start":9,"column_end":20},"name":"half_height","qualname":"::shape::cone::Cone::half_height","value":"N","parent":{"krate":0,"index":7678},"children":[],"decl_id":null,"docs":" The half-height of the cone.\n","sig":null,"attributes":[{"value":"/ The half-height of the cone.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/cone.rs","byte_start":700496,"byte_end":700528,"line_start":11,"line_end":11,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":7681},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/cone.rs","byte_start":700598,"byte_end":700604,"line_start":14,"line_end":14,"column_start":9,"column_end":15},"name":"radius","qualname":"::shape::cone::Cone::radius","value":"N","parent":{"krate":0,"index":7678},"children":[],"decl_id":null,"docs":" The base radius of the cone.\n","sig":null,"attributes":[{"value":"/ The base radius of the cone.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/cone.rs","byte_start":700557,"byte_end":700589,"line_start":13,"line_end":13,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":5210},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/cone.rs","byte_start":700849,"byte_end":700852,"line_start":23,"line_end":23,"column_start":12,"column_end":15},"name":"new","qualname":"<Cone<N>>::new","value":"fn (half_height: N, radius: N) -> Cone<N>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new cone.","sig":null,"attributes":[{"value":"/ Creates a new cone.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/cone.rs","byte_start":700645,"byte_end":700668,"line_start":18,"line_end":18,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/cone.rs","byte_start":700673,"byte_end":700676,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ # Arguments:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/cone.rs","byte_start":700681,"byte_end":700697,"line_start":20,"line_end":20,"column_start":5,"column_end":21}},{"value":"/ * `half_height` - the half length of the cone along the `y` axis.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/cone.rs","byte_start":700702,"byte_end":700771,"line_start":21,"line_end":21,"column_start":5,"column_end":74}},{"value":"/ * `radius` - the length of the cone along all other axis.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/cone.rs","byte_start":700776,"byte_end":700837,"line_start":22,"line_end":22,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":5211},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/cone.rs","byte_start":701122,"byte_end":701133,"line_start":33,"line_end":33,"column_start":12,"column_end":23},"name":"half_height","qualname":"<Cone<N>>::half_height","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The cone half length along the `y` axis.\n","sig":null,"attributes":[{"value":"/ The cone half length along the `y` axis.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/cone.rs","byte_start":700974,"byte_end":701018,"line_start":30,"line_end":30,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/cone.rs","byte_start":701023,"byte_end":701032,"line_start":31,"line_end":31,"column_start":5,"column_end":14}},{"value":"deprecated(note = \"use the `self.half_height` public field directly.\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/cone.rs","byte_start":701037,"byte_end":701110,"line_start":32,"line_end":32,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":5212},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/cone.rs","byte_start":701337,"byte_end":701343,"line_start":40,"line_end":40,"column_start":12,"column_end":18},"name":"radius","qualname":"<Cone<N>>::radius","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The radius of the cone along all but the `y` axis.\n","sig":null,"attributes":[{"value":"/ The radius of the cone along all but the `y` axis.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/cone.rs","byte_start":701184,"byte_end":701238,"line_start":37,"line_end":37,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/cone.rs","byte_start":701243,"byte_end":701252,"line_start":38,"line_end":38,"column_start":5,"column_end":14}},{"value":"deprecated(note = \"use the `self.radius` public field directly.\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/cone.rs","byte_start":701257,"byte_end":701325,"line_start":39,"line_end":39,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":7767},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex.rs","byte_start":703852,"byte_end":703862,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"ConvexHull","qualname":"::shape::convex::ConvexHull","value":"ConvexHull {  }","parent":null,"children":[{"krate":0,"index":7769},{"krate":0,"index":7770},{"krate":0,"index":7771},{"krate":0,"index":7772},{"krate":0,"index":7773},{"krate":0,"index":7774},{"krate":0,"index":7775},{"krate":0,"index":7776}],"decl_id":null,"docs":" A convex polyhedron without degenerate faces.\n","sig":null,"attributes":[{"value":"/ A convex polyhedron without degenerate faces.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex.rs","byte_start":703791,"byte_end":703840,"line_start":67,"line_end":67,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":5248},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex.rs","byte_start":704549,"byte_end":704564,"line_start":88,"line_end":88,"column_start":12,"column_end":27},"name":"try_from_points","qualname":"<ConvexHull<N>>::try_from_points","value":"fn (points: &[Point<N>]) -> Option<ConvexHull<N>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new 2D convex polyhedron from an arbitrary set of points.","sig":null,"attributes":[{"value":"/ Creates a new 2D convex polyhedron from an arbitrary set of points.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex.rs","byte_start":704315,"byte_end":704386,"line_start":84,"line_end":84,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex.rs","byte_start":704391,"byte_end":704394,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ This explicitly computes the convex hull of the given set of points. Use","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex.rs","byte_start":704399,"byte_end":704475,"line_start":86,"line_end":86,"column_start":5,"column_end":81}},{"value":"/ Returns `None` if the convex hull computation failed.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex.rs","byte_start":704480,"byte_end":704537,"line_start":87,"line_end":87,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":5250},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex.rs","byte_start":705336,"byte_end":705343,"line_start":109,"line_end":109,"column_start":12,"column_end":19},"name":"try_new","qualname":"<ConvexHull<N>>::try_new","value":"fn (points: Vec<Point<N>>, indices: &[usize]) -> Option<ConvexHull<N>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to create a new solid assumed to be convex from the set of points and indices.","sig":null,"attributes":[{"value":"/ Attempts to create a new solid assumed to be convex from the set of points and indices.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex.rs","byte_start":704874,"byte_end":704965,"line_start":98,"line_end":98,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex.rs","byte_start":704970,"byte_end":704973,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ The given points and index information are assumed to describe a convex polyhedron.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex.rs","byte_start":704978,"byte_end":705065,"line_start":100,"line_end":100,"column_start":5,"column_end":92}},{"value":"/ It it is not, weird results may be produced.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex.rs","byte_start":705070,"byte_end":705118,"line_start":101,"line_end":101,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex.rs","byte_start":705123,"byte_end":705126,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex.rs","byte_start":705131,"byte_end":705143,"line_start":103,"line_end":103,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex.rs","byte_start":705148,"byte_end":705151,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ Retruns `None` if:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex.rs","byte_start":705156,"byte_end":705178,"line_start":105,"line_end":105,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex.rs","byte_start":705183,"byte_end":705186,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/   1. The given solid does not satisfy the euler characteristic.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex.rs","byte_start":705191,"byte_end":705258,"line_start":107,"line_end":107,"column_start":5,"column_end":72}},{"value":"/   2. The given solid contains degenerate edges/triangles.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex.rs","byte_start":705263,"byte_end":705324,"line_start":108,"line_end":108,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":5251},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex.rs","byte_start":713841,"byte_end":713855,"line_start":337,"line_end":337,"column_start":12,"column_end":26},"name":"check_geometry","qualname":"<ConvexHull<N>>::check_geometry","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Verify if this convex polyhedron is actually convex.\n","sig":null,"attributes":[{"value":"/ Verify if this convex polyhedron is actually convex.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex.rs","byte_start":713759,"byte_end":713815,"line_start":335,"line_end":335,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex.rs","byte_start":713820,"byte_end":713829,"line_start":336,"line_end":336,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5252},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex.rs","byte_start":714220,"byte_end":714226,"line_start":349,"line_end":349,"column_start":12,"column_end":18},"name":"points","qualname":"<ConvexHull<N>>::points","value":"fn (&self) -> &[Point<N>]","parent":null,"children":[],"decl_id":null,"docs":" The set of vertices of this convex polyhedron.\n","sig":null,"attributes":[{"value":"/ The set of vertices of this convex polyhedron.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex.rs","byte_start":714144,"byte_end":714194,"line_start":347,"line_end":347,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex.rs","byte_start":714199,"byte_end":714208,"line_start":348,"line_end":348,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5253},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex.rs","byte_start":714396,"byte_end":714421,"line_start":354,"line_end":354,"column_start":12,"column_end":37},"name":"tangent_cone_contains_dir","qualname":"<ConvexHull<N>>::tangent_cone_contains_dir","value":"fn (&self, feature: FeatureId, m: &Isometry<N>, dir: &Unit<Vector<N>>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks that the given direction in world-space is on the tangent cone of the given `feature`.\n","sig":null,"attributes":[{"value":"/ Checks that the given direction in world-space is on the tangent cone of the given `feature`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex.rs","byte_start":714287,"byte_end":714384,"line_start":353,"line_end":353,"column_start":5,"column_end":102}}]},{"kind":"Struct","id":{"krate":0,"index":7789},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polygonal_feature3.rs","byte_start":721189,"byte_end":721202,"line_start":14,"line_end":14,"column_start":12,"column_end":25},"name":"ClippingCache","qualname":"::shape::convex_polygonal_feature3::ClippingCache","value":"ClippingCache {  }","parent":null,"children":[{"krate":0,"index":7791},{"krate":0,"index":7792}],"decl_id":null,"docs":" A cache used for polygonal clipping.\n","sig":null,"attributes":[{"value":"/ A cache used for polygonal clipping.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polygonal_feature3.rs","byte_start":721120,"byte_end":721160,"line_start":12,"line_end":12,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":5295},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polygonal_feature3.rs","byte_start":721370,"byte_end":721373,"line_start":21,"line_end":21,"column_start":12,"column_end":15},"name":"new","qualname":"<ClippingCache<N>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Initializes an empty clipping cache.\n","sig":null,"attributes":[{"value":"/ Initializes an empty clipping cache.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polygonal_feature3.rs","byte_start":721318,"byte_end":721358,"line_start":20,"line_end":20,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":5296},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polygonal_feature3.rs","byte_start":721557,"byte_end":721562,"line_start":29,"line_end":29,"column_start":12,"column_end":17},"name":"clear","qualname":"<ClippingCache<N>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears the clipping cache.\n","sig":null,"attributes":[{"value":"/ Clears the clipping cache.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polygonal_feature3.rs","byte_start":721515,"byte_end":721545,"line_start":28,"line_end":28,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":7796},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polygonal_feature3.rs","byte_start":721899,"byte_end":721921,"line_start":40,"line_end":40,"column_start":12,"column_end":34},"name":"ConvexPolygonalFeature","qualname":"::shape::convex_polygonal_feature3::ConvexPolygonalFeature","value":"ConvexPolygonalFeature { vertices, edge_normals, normal, feature_id, vertices_id, edges_id }","parent":null,"children":[{"krate":0,"index":7798},{"krate":0,"index":7799},{"krate":0,"index":7800},{"krate":0,"index":7801},{"krate":0,"index":7802},{"krate":0,"index":7803}],"decl_id":null,"docs":" Represents a convex polygonal approximation of a face of a solid.","sig":null,"attributes":[{"value":"/ Represents a convex polygonal approximation of a face of a solid.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polygonal_feature3.rs","byte_start":721641,"byte_end":721710,"line_start":35,"line_end":35,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polygonal_feature3.rs","byte_start":721711,"byte_end":721714,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ It is never checked if the vertices actually form a convex polygon.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polygonal_feature3.rs","byte_start":721715,"byte_end":721786,"line_start":37,"line_end":37,"column_start":1,"column_end":72}},{"value":"/ If they do not, results of any geometric query may end up being invalid.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polygonal_feature3.rs","byte_start":721787,"byte_end":721863,"line_start":38,"line_end":38,"column_start":1,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":7798},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polygonal_feature3.rs","byte_start":722024,"byte_end":722032,"line_start":43,"line_end":43,"column_start":9,"column_end":17},"name":"vertices","qualname":"::shape::convex_polygonal_feature3::ConvexPolygonalFeature::vertices","value":"std::vec::Vec<na::Point<N, na::U3>>","parent":{"krate":0,"index":7796},"children":[],"decl_id":null,"docs":" The vertices of this face.\n","sig":null,"attributes":[{"value":"/ The vertices of this face.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polygonal_feature3.rs","byte_start":721985,"byte_end":722015,"line_start":42,"line_end":42,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":7799},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polygonal_feature3.rs","byte_start":722114,"byte_end":722126,"line_start":45,"line_end":45,"column_start":9,"column_end":21},"name":"edge_normals","qualname":"::shape::convex_polygonal_feature3::ConvexPolygonalFeature::edge_normals","value":"std::vec::Vec<na::Matrix<N, na::U3, na::U1, <na::DefaultAllocator as na::allocator::Allocator<N, na::U3>>::Buffer>>","parent":{"krate":0,"index":7796},"children":[],"decl_id":null,"docs":" The outward normal of the edges if it is a face.\n","sig":null,"attributes":[{"value":"/ The outward normal of the edges if it is a face.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polygonal_feature3.rs","byte_start":722053,"byte_end":722105,"line_start":44,"line_end":44,"column_start":5,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":7800},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polygonal_feature3.rs","byte_start":722204,"byte_end":722210,"line_start":47,"line_end":47,"column_start":9,"column_end":15},"name":"normal","qualname":"::shape::convex_polygonal_feature3::ConvexPolygonalFeature::normal","value":"std::option::Option<na::Unit<na::Matrix<N, na::U3, na::U1, <na::DefaultAllocator as na::allocator::Allocator<N, na::U3>>::Buffer>>>","parent":{"krate":0,"index":7796},"children":[],"decl_id":null,"docs":" The normal of this feature if it is a face.\n","sig":null,"attributes":[{"value":"/ The normal of this feature if it is a face.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polygonal_feature3.rs","byte_start":722148,"byte_end":722195,"line_start":46,"line_end":46,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":7801},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polygonal_feature3.rs","byte_start":722301,"byte_end":722311,"line_start":49,"line_end":49,"column_start":9,"column_end":19},"name":"feature_id","qualname":"::shape::convex_polygonal_feature3::ConvexPolygonalFeature::feature_id","value":"shape::convex_polyhedron::FeatureId","parent":{"krate":0,"index":7796},"children":[],"decl_id":null,"docs":" The shape-dependent identifier of this feature.\n","sig":null,"attributes":[{"value":"/ The shape-dependent identifier of this feature.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polygonal_feature3.rs","byte_start":722241,"byte_end":722292,"line_start":48,"line_end":48,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":7802},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polygonal_feature3.rs","byte_start":722404,"byte_end":722415,"line_start":51,"line_end":51,"column_start":9,"column_end":20},"name":"vertices_id","qualname":"::shape::convex_polygonal_feature3::ConvexPolygonalFeature::vertices_id","value":"std::vec::Vec<shape::convex_polyhedron::FeatureId>","parent":{"krate":0,"index":7796},"children":[],"decl_id":null,"docs":" The shape-dependent indentifier of each vertex of this feature.\n","sig":null,"attributes":[{"value":"/ The shape-dependent indentifier of each vertex of this feature.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polygonal_feature3.rs","byte_start":722328,"byte_end":722395,"line_start":50,"line_end":50,"column_start":5,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":7803},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polygonal_feature3.rs","byte_start":722511,"byte_end":722519,"line_start":53,"line_end":53,"column_start":9,"column_end":17},"name":"edges_id","qualname":"::shape::convex_polygonal_feature3::ConvexPolygonalFeature::edges_id","value":"std::vec::Vec<shape::convex_polyhedron::FeatureId>","parent":{"krate":0,"index":7796},"children":[],"decl_id":null,"docs":" The shape-dependent indentifier of each edge of this feature.\n","sig":null,"attributes":[{"value":"/ The shape-dependent indentifier of each edge of this feature.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polygonal_feature3.rs","byte_start":722437,"byte_end":722502,"line_start":52,"line_end":52,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":5299},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polygonal_feature3.rs","byte_start":722650,"byte_end":722653,"line_start":58,"line_end":58,"column_start":12,"column_end":15},"name":"new","qualname":"<ConvexPolygonalFeature<N>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty convex polygonal faces.\n","sig":null,"attributes":[{"value":"/ Creates a new empty convex polygonal faces.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polygonal_feature3.rs","byte_start":722591,"byte_end":722638,"line_start":57,"line_end":57,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":5300},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polygonal_feature3.rs","byte_start":723038,"byte_end":723047,"line_start":70,"line_end":70,"column_start":12,"column_end":21},"name":"with_size","qualname":"<ConvexPolygonalFeature<N>>::with_size","value":"fn (n: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new convex polygonal feature with all field initialized with `n` zero elements.\n","sig":null,"attributes":[{"value":"/ Creates a new convex polygonal feature with all field initialized with `n` zero elements.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polygonal_feature3.rs","byte_start":722933,"byte_end":723026,"line_start":69,"line_end":69,"column_start":5,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":5301},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polygonal_feature3.rs","byte_start":723572,"byte_end":723577,"line_start":82,"line_end":82,"column_start":12,"column_end":17},"name":"clear","qualname":"<ConvexPolygonalFeature<N>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Removes all the vertices, normals, and feature IDs of this feature.\n","sig":null,"attributes":[{"value":"/ Removes all the vertices, normals, and feature IDs of this feature.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polygonal_feature3.rs","byte_start":723489,"byte_end":723560,"line_start":81,"line_end":81,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":5302},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polygonal_feature3.rs","byte_start":723901,"byte_end":723913,"line_start":92,"line_end":92,"column_start":12,"column_end":24},"name":"transform_by","qualname":"<ConvexPolygonalFeature<N>>::transform_by","value":"fn (&mut self, m: &Isometry<N>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Transforms all the vertices and normals of this feature by the given isometry.\n","sig":null,"attributes":[{"value":"/ Transforms all the vertices and normals of this feature by the given isometry.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polygonal_feature3.rs","byte_start":723807,"byte_end":723889,"line_start":91,"line_end":91,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":5303},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polygonal_feature3.rs","byte_start":724324,"byte_end":724328,"line_start":109,"line_end":109,"column_start":12,"column_end":16},"name":"push","qualname":"<ConvexPolygonalFeature<N>>::push","value":"fn (&mut self, pt: Point<N>, id: FeatureId) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds a vertex to this face.","sig":null,"attributes":[{"value":"/ Adds a vertex to this face.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polygonal_feature3.rs","byte_start":724189,"byte_end":724220,"line_start":106,"line_end":106,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polygonal_feature3.rs","byte_start":724225,"byte_end":724228,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ It is not checked whether `pt` breaks the convexity of the polyhedral face.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polygonal_feature3.rs","byte_start":724233,"byte_end":724312,"line_start":108,"line_end":108,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":5304},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polygonal_feature3.rs","byte_start":724501,"byte_end":724510,"line_start":115,"line_end":115,"column_start":12,"column_end":21},"name":"nvertices","qualname":"<ConvexPolygonalFeature<N>>::nvertices","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The number of vertices of this face.\n","sig":null,"attributes":[{"value":"/ The number of vertices of this face.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polygonal_feature3.rs","byte_start":724449,"byte_end":724489,"line_start":114,"line_end":114,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":5305},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polygonal_feature3.rs","byte_start":724627,"byte_end":724635,"line_start":120,"line_end":120,"column_start":12,"column_end":20},"name":"vertices","qualname":"<ConvexPolygonalFeature<N>>::vertices","value":"fn (&self) -> &[Point<N>]","parent":null,"children":[],"decl_id":null,"docs":" The vertices of this convex polygonal face.\n","sig":null,"attributes":[{"value":"/ The vertices of this convex polygonal face.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polygonal_feature3.rs","byte_start":724568,"byte_end":724615,"line_start":119,"line_end":119,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":5306},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polygonal_feature3.rs","byte_start":724764,"byte_end":724770,"line_start":125,"line_end":125,"column_start":12,"column_end":18},"name":"nedges","qualname":"<ConvexPolygonalFeature<N>>::nedges","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The number of edges of this convex polygonal face.\n","sig":null,"attributes":[{"value":"/ The number of edges of this convex polygonal face.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polygonal_feature3.rs","byte_start":724698,"byte_end":724752,"line_start":124,"line_end":124,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":5307},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polygonal_feature3.rs","byte_start":724967,"byte_end":724971,"line_start":134,"line_end":134,"column_start":12,"column_end":16},"name":"edge","qualname":"<ConvexPolygonalFeature<N>>::edge","value":"fn (&self, edge_id: FeatureId) -> Option<Segment<N>>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the edge with the given feature id.\n","sig":null,"attributes":[{"value":"/ Retrieves the edge with the given feature id.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polygonal_feature3.rs","byte_start":724906,"byte_end":724955,"line_start":133,"line_end":133,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":5308},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polygonal_feature3.rs","byte_start":725354,"byte_end":725377,"line_start":146,"line_end":146,"column_start":12,"column_end":35},"name":"push_scaled_edge_normal","qualname":"<ConvexPolygonalFeature<N>>::push_scaled_edge_normal","value":"fn (&mut self, normal: Vector<N>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds a scaled edge normal to this face.\n","sig":null,"attributes":[{"value":"/ Adds a scaled edge normal to this face.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polygonal_feature3.rs","byte_start":725299,"byte_end":725342,"line_start":145,"line_end":145,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":5309},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polygonal_feature3.rs","byte_start":725662,"byte_end":725678,"line_start":155,"line_end":155,"column_start":12,"column_end":28},"name":"push_edge_normal","qualname":"<ConvexPolygonalFeature<N>>::push_edge_normal","value":"fn (&mut self, normal: Unit<Vector<N>>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds an edge normal to this face.\n","sig":null,"attributes":[{"value":"/ Adds an edge normal to this face.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polygonal_feature3.rs","byte_start":725613,"byte_end":725650,"line_start":154,"line_end":154,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":5310},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polygonal_feature3.rs","byte_start":725910,"byte_end":725932,"line_start":162,"line_end":162,"column_start":12,"column_end":34},"name":"recompute_edge_normals","qualname":"<ConvexPolygonalFeature<N>>::recompute_edge_normals","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Automatically recomputes the scaled edge normals (3D only).","sig":null,"attributes":[{"value":"/ Automatically recomputes the scaled edge normals (3D only).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polygonal_feature3.rs","byte_start":725780,"byte_end":725843,"line_start":159,"line_end":159,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polygonal_feature3.rs","byte_start":725848,"byte_end":725851,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ Panics if the ambient space is not 3D.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polygonal_feature3.rs","byte_start":725856,"byte_end":725898,"line_start":161,"line_end":161,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":5311},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polygonal_feature3.rs","byte_start":726505,"byte_end":726518,"line_start":178,"line_end":178,"column_start":12,"column_end":25},"name":"project_point","qualname":"<ConvexPolygonalFeature<N>>::project_point","value":"fn (&self, pt: &Point<N>) -> Option<Contact<N>>","parent":null,"children":[],"decl_id":null,"docs":" Transforms all the vertices of this feature by the given isometry.\n","sig":null,"attributes":[{"value":"/ Transforms all the vertices of this feature by the given isometry.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polygonal_feature3.rs","byte_start":726423,"byte_end":726493,"line_start":177,"line_end":177,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":5312},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polygonal_feature3.rs","byte_start":727152,"byte_end":727162,"line_start":199,"line_end":199,"column_start":12,"column_end":22},"name":"set_normal","qualname":"<ConvexPolygonalFeature<N>>::set_normal","value":"fn (&mut self, normal: Unit<Vector<N>>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the outward normal of this convex polygonal face.\n","sig":null,"attributes":[{"value":"/ Sets the outward normal of this convex polygonal face.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polygonal_feature3.rs","byte_start":727082,"byte_end":727140,"line_start":198,"line_end":198,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":5313},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polygonal_feature3.rs","byte_start":727342,"byte_end":727362,"line_start":204,"line_end":204,"column_start":12,"column_end":32},"name":"push_edge_feature_id","qualname":"<ConvexPolygonalFeature<N>>::push_edge_feature_id","value":"fn (&mut self, id: FeatureId) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Add the shape-dependent identifier of a edge of this feature (if it is a face).\n","sig":null,"attributes":[{"value":"/ Add the shape-dependent identifier of a edge of this feature (if it is a face).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polygonal_feature3.rs","byte_start":727247,"byte_end":727330,"line_start":203,"line_end":203,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":5314},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polygonal_feature3.rs","byte_start":727500,"byte_end":727514,"line_start":209,"line_end":209,"column_start":12,"column_end":26},"name":"set_feature_id","qualname":"<ConvexPolygonalFeature<N>>::set_feature_id","value":"fn (&mut self, id: FeatureId) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Add the shape-dependent identifier of this feature.\n","sig":null,"attributes":[{"value":"/ Add the shape-dependent identifier of this feature.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polygonal_feature3.rs","byte_start":727433,"byte_end":727488,"line_start":208,"line_end":208,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":5315},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polygonal_feature3.rs","byte_start":727815,"byte_end":727819,"line_start":217,"line_end":217,"column_start":12,"column_end":16},"name":"clip","qualname":"<ConvexPolygonalFeature<N>>::clip","value":"fn (&self, other: &Self, normal: &Unit<Vector<N>>, prediction: &ContactPrediction<N>, cache: &mut ClippingCache<N>, out: &mut Vec<(Contact<N>, FeatureId, FeatureId)>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Generate contacts between `self` and `other` using polygonal clipping, iif. they both have at least\n three vertices.","sig":null,"attributes":[{"value":"/ Generate contacts between `self` and `other` using polygonal clipping, iif. they both have at least","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polygonal_feature3.rs","byte_start":727583,"byte_end":727686,"line_start":213,"line_end":213,"column_start":5,"column_end":108}},{"value":"/ three vertices.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polygonal_feature3.rs","byte_start":727691,"byte_end":727710,"line_start":214,"line_end":214,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polygonal_feature3.rs","byte_start":727715,"byte_end":727718,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ If either `self` or `other` has less than three vertices, this does nothing.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polygonal_feature3.rs","byte_start":727723,"byte_end":727803,"line_start":216,"line_end":216,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":5317},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polygonal_feature3.rs","byte_start":732557,"byte_end":732580,"line_start":341,"line_end":341,"column_start":12,"column_end":35},"name":"add_contact_to_manifold","qualname":"<ConvexPolygonalFeature<N>>::add_contact_to_manifold","value":"fn (&self, other: &Self, c: Contact<N>, m1: &Isometry<N>, f1: FeatureId, proc1: Option<&dyn ContactPreprocessor<N>>, m2: &Isometry<N>, f2: FeatureId, proc2: Option<&dyn ContactPreprocessor<N>>, manifold: &mut ContactManifold<N>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Given a contact between two polygonal features, adds it to a contact manifold.\n","sig":null,"attributes":[{"value":"/ Given a contact between two polygonal features, adds it to a contact manifold.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polygonal_feature3.rs","byte_start":732463,"byte_end":732545,"line_start":340,"line_end":340,"column_start":5,"column_end":87}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7811},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polyhedron.rs","byte_start":735464,"byte_end":735470,"line_start":14,"line_end":14,"column_start":5,"column_end":11},"name":"Vertex","qualname":"::shape::convex_polyhedron::FeatureId::Vertex","value":"FeatureId::Vertex(usize)","parent":{"krate":0,"index":7810},"children":[],"decl_id":null,"docs":" Shape-dependent identifier of a vertex.\n","sig":null,"attributes":[{"value":"/ Shape-dependent identifier of a vertex.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polyhedron.rs","byte_start":735416,"byte_end":735459,"line_start":13,"line_end":13,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7814},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polyhedron.rs","byte_start":735559,"byte_end":735563,"line_start":17,"line_end":17,"column_start":5,"column_end":9},"name":"Edge","qualname":"::shape::convex_polyhedron::FeatureId::Edge","value":"FeatureId::Edge(usize)","parent":{"krate":0,"index":7810},"children":[],"decl_id":null,"docs":" Shape-dependent identifier of an edge.\n","sig":null,"attributes":[{"value":"cfg(feature = \"dim3\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polyhedron.rs","byte_start":735483,"byte_end":735507,"line_start":15,"line_end":15,"column_start":5,"column_end":29}},{"value":"/ Shape-dependent identifier of an edge.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polyhedron.rs","byte_start":735512,"byte_end":735554,"line_start":16,"line_end":16,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7817},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polyhedron.rs","byte_start":735622,"byte_end":735626,"line_start":19,"line_end":19,"column_start":5,"column_end":9},"name":"Face","qualname":"::shape::convex_polyhedron::FeatureId::Face","value":"FeatureId::Face(usize)","parent":{"krate":0,"index":7810},"children":[],"decl_id":null,"docs":" Shape-dependent identifier of a face.\n","sig":null,"attributes":[{"value":"/ Shape-dependent identifier of a face.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polyhedron.rs","byte_start":735576,"byte_end":735617,"line_start":18,"line_end":18,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7820},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polyhedron.rs","byte_start":735700,"byte_end":735707,"line_start":22,"line_end":22,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::shape::convex_polyhedron::FeatureId::Unknown","value":"FeatureId::Unknown","parent":{"krate":0,"index":7810},"children":[],"decl_id":null,"docs":" Unknown identifier.\n","sig":null,"attributes":[{"value":"/ Unknown identifier.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polyhedron.rs","byte_start":735672,"byte_end":735695,"line_start":21,"line_end":21,"column_start":5,"column_end":28}}]},{"kind":"Enum","id":{"krate":0,"index":7810},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polyhedron.rs","byte_start":735400,"byte_end":735409,"line_start":12,"line_end":12,"column_start":10,"column_end":19},"name":"FeatureId","qualname":"::shape::convex_polyhedron::FeatureId","value":"FeatureId::{Vertex, Edge, Face, Unknown}","parent":null,"children":[{"krate":0,"index":7811},{"krate":0,"index":7814},{"krate":0,"index":7817},{"krate":0,"index":7820}],"decl_id":null,"docs":" An identifier of a feature of a convex polyhedron.","sig":null,"attributes":[{"value":"/ An identifier of a feature of a convex polyhedron.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polyhedron.rs","byte_start":735075,"byte_end":735129,"line_start":5,"line_end":5,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polyhedron.rs","byte_start":735130,"byte_end":735133,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This identifier is shape-dependent and is seach that it","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polyhedron.rs","byte_start":735134,"byte_end":735193,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"/ allows an efficient retrieval of the geometric information of the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polyhedron.rs","byte_start":735194,"byte_end":735263,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"/ feature.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polyhedron.rs","byte_start":735264,"byte_end":735276,"line_start":9,"line_end":9,"column_start":1,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":5330},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polyhedron.rs","byte_start":735807,"byte_end":735820,"line_start":27,"line_end":27,"column_start":12,"column_end":25},"name":"unwrap_vertex","qualname":"<FeatureId>::unwrap_vertex","value":"fn (self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Revries the value of the identifier if `self` is a vertex.\n","sig":null,"attributes":[{"value":"/ Revries the value of the identifier if `self` is a vertex.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polyhedron.rs","byte_start":735733,"byte_end":735795,"line_start":26,"line_end":26,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":5331},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polyhedron.rs","byte_start":736094,"byte_end":736105,"line_start":36,"line_end":36,"column_start":12,"column_end":23},"name":"unwrap_edge","qualname":"<FeatureId>::unwrap_edge","value":"fn (self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Revries the value of the identifier if `self` is an edge.\n","sig":null,"attributes":[{"value":"/ Revries the value of the identifier if `self` is an edge.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polyhedron.rs","byte_start":735992,"byte_end":736053,"line_start":34,"line_end":34,"column_start":5,"column_end":66}},{"value":"cfg(feature = \"dim3\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polyhedron.rs","byte_start":736058,"byte_end":736082,"line_start":35,"line_end":35,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5332},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polyhedron.rs","byte_start":736348,"byte_end":736359,"line_start":44,"line_end":44,"column_start":12,"column_end":23},"name":"unwrap_face","qualname":"<FeatureId>::unwrap_face","value":"fn (self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the value of the identifier if `self` is a face.\n","sig":null,"attributes":[{"value":"/ Retrieves the value of the identifier if `self` is a face.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polyhedron.rs","byte_start":736274,"byte_end":736336,"line_start":43,"line_end":43,"column_start":5,"column_end":67}}]},{"kind":"Trait","id":{"krate":0,"index":5333},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polyhedron.rs","byte_start":736583,"byte_end":736599,"line_start":53,"line_end":53,"column_start":11,"column_end":27},"name":"ConvexPolyhedron","qualname":"::shape::convex_polyhedron::ConvexPolyhedron","value":"ConvexPolyhedron<N: RealField>: SupportMap<N>","parent":null,"children":[{"krate":0,"index":5335},{"krate":0,"index":5336},{"krate":0,"index":5337},{"krate":0,"index":5338},{"krate":0,"index":5339},{"krate":0,"index":5340},{"krate":0,"index":5341}],"decl_id":null,"docs":" Trait implemented by all convex polyhedron.\n","sig":null,"attributes":[{"value":"/ Trait implemented by all convex polyhedron.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polyhedron.rs","byte_start":736525,"byte_end":736572,"line_start":52,"line_end":52,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":5335},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polyhedron.rs","byte_start":736698,"byte_end":736704,"line_start":55,"line_end":55,"column_start":8,"column_end":14},"name":"vertex","qualname":"::shape::convex_polyhedron::ConvexPolyhedron::vertex","value":"fn (&self, id: FeatureId) -> Point<N>","parent":{"krate":0,"index":5333},"children":[],"decl_id":null,"docs":" Gets the specified vertex in the shape local-space.\n","sig":null,"attributes":[{"value":"/ Gets the specified vertex in the shape local-space.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polyhedron.rs","byte_start":736635,"byte_end":736690,"line_start":54,"line_end":54,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":5336},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polyhedron.rs","byte_start":736849,"byte_end":736853,"line_start":57,"line_end":57,"column_start":8,"column_end":12},"name":"face","qualname":"::shape::convex_polyhedron::ConvexPolyhedron::face","value":"fn (&self, id: FeatureId, face: &mut ConvexPolygonalFeature<N>) -> ()","parent":{"krate":0,"index":5333},"children":[],"decl_id":null,"docs":" Fill `face` with the geometric description of the specified face, in the shape's local-space.\n","sig":null,"attributes":[{"value":"/ Fill `face` with the geometric description of the specified face, in the shape's local-space.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polyhedron.rs","byte_start":736744,"byte_end":736841,"line_start":56,"line_end":56,"column_start":5,"column_end":102}}]},{"kind":"Method","id":{"krate":0,"index":5337},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polyhedron.rs","byte_start":737051,"byte_end":737055,"line_start":60,"line_end":60,"column_start":8,"column_end":12},"name":"edge","qualname":"::shape::convex_polyhedron::ConvexPolyhedron::edge","value":"fn (&self, id: FeatureId) -> (Point<N>, Point<N>, FeatureId, FeatureId)","parent":{"krate":0,"index":5333},"children":[],"decl_id":null,"docs":" Get the specified edge's vertices (in the shape local-space) and the vertices' identifiers.\n","sig":null,"attributes":[{"value":"cfg(feature = \"dim3\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polyhedron.rs","byte_start":736919,"byte_end":736943,"line_start":58,"line_end":58,"column_start":5,"column_end":29}},{"value":"/ Get the specified edge's vertices (in the shape local-space) and the vertices' identifiers.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polyhedron.rs","byte_start":736948,"byte_end":737043,"line_start":59,"line_end":59,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":5338},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polyhedron.rs","byte_start":737203,"byte_end":737217,"line_start":63,"line_end":63,"column_start":8,"column_end":22},"name":"feature_normal","qualname":"::shape::convex_polyhedron::ConvexPolyhedron::feature_normal","value":"fn (&self, feature: FeatureId) -> Unit<Vector<N>>","parent":{"krate":0,"index":5333},"children":[],"decl_id":null,"docs":" Returns any normal from the normal cone of the given feature.\n","sig":null,"attributes":[{"value":"/ Returns any normal from the normal cone of the given feature.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polyhedron.rs","byte_start":737130,"byte_end":737195,"line_start":62,"line_end":62,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":5339},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polyhedron.rs","byte_start":737376,"byte_end":737395,"line_start":66,"line_end":66,"column_start":8,"column_end":27},"name":"support_face_toward","qualname":"::shape::convex_polyhedron::ConvexPolyhedron::support_face_toward","value":"fn (&self, transform: &Isometry<N>, dir: &Unit<Vector<N>>, out: &mut ConvexPolygonalFeature<N>) -> ()","parent":{"krate":0,"index":5333},"children":[],"decl_id":null,"docs":" Retrieve the face (in world-space) with a normal that maximizes the scalar product with `dir`.\n","sig":null,"attributes":[{"value":"/ Retrieve the face (in world-space) with a normal that maximizes the scalar product with `dir`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polyhedron.rs","byte_start":737270,"byte_end":737368,"line_start":65,"line_end":65,"column_start":5,"column_end":103}}]},{"kind":"Method","id":{"krate":0,"index":5340},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polyhedron.rs","byte_start":737616,"byte_end":737638,"line_start":74,"line_end":74,"column_start":8,"column_end":30},"name":"support_feature_toward","qualname":"::shape::convex_polyhedron::ConvexPolyhedron::support_feature_toward","value":"fn (&self, transform: &Isometry<N>, dir: &Unit<Vector<N>>, _angle: N, out: &mut ConvexPolygonalFeature<N>) -> ()","parent":{"krate":0,"index":5333},"children":[],"decl_id":null,"docs":" Retrieve the feature (in world-space) which normal cone contains `dir`.\n","sig":null,"attributes":[{"value":"/ Retrieve the feature (in world-space) which normal cone contains `dir`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polyhedron.rs","byte_start":737533,"byte_end":737608,"line_start":73,"line_end":73,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":5341},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polyhedron.rs","byte_start":737879,"byte_end":737904,"line_start":83,"line_end":83,"column_start":8,"column_end":33},"name":"support_feature_id_toward","qualname":"::shape::convex_polyhedron::ConvexPolyhedron::support_feature_id_toward","value":"fn (&self, local_dir: &Unit<Vector<N>>) -> FeatureId","parent":{"krate":0,"index":5333},"children":[],"decl_id":null,"docs":" Retrieve the identifier of the feature which normal cone contains `dir`.\n","sig":null,"attributes":[{"value":"/ Retrieve the identifier of the feature which normal cone contains `dir`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polyhedron.rs","byte_start":737795,"byte_end":737871,"line_start":82,"line_end":82,"column_start":5,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":7837},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/cuboid.rs","byte_start":738316,"byte_end":738322,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"Cuboid","qualname":"::shape::cuboid::Cuboid","value":"Cuboid { half_extents }","parent":null,"children":[{"krate":0,"index":7839}],"decl_id":null,"docs":" Shape of a box.\n","sig":null,"attributes":[{"value":"/ Shape of a box.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/cuboid.rs","byte_start":738181,"byte_end":738200,"line_start":8,"line_end":8,"column_start":1,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":7839},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/cuboid.rs","byte_start":738387,"byte_end":738399,"line_start":13,"line_end":13,"column_start":9,"column_end":21},"name":"half_extents","qualname":"::shape::cuboid::Cuboid::half_extents","value":"na::Matrix<N, na::U3, na::U1, <na::DefaultAllocator as na::allocator::Allocator<N, na::U3>>::Buffer>","parent":{"krate":0,"index":7837},"children":[],"decl_id":null,"docs":" The half-extents of the cuboid.\n","sig":null,"attributes":[{"value":"/ The half-extents of the cuboid.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/cuboid.rs","byte_start":738343,"byte_end":738378,"line_start":12,"line_end":12,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":5360},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/cuboid.rs","byte_start":739242,"byte_end":739245,"line_start":27,"line_end":27,"column_start":12,"column_end":15},"name":"new","qualname":"<Cuboid<N>>::new","value":"fn (half_extents: Vector<N>) -> Cuboid<N>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new box from its half-extents. Half-extents are the box half-width along each\n axis. Each half-extent must be positive.\n","sig":null,"attributes":[{"value":"/ Creates a new box from its half-extents. Half-extents are the box half-width along each","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/cuboid.rs","byte_start":739076,"byte_end":739167,"line_start":24,"line_end":24,"column_start":5,"column_end":96}},{"value":"/ axis. Each half-extent must be positive.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/cuboid.rs","byte_start":739172,"byte_end":739216,"line_start":25,"line_end":25,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/cuboid.rs","byte_start":739221,"byte_end":739230,"line_start":26,"line_end":26,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5363},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/cuboid.rs","byte_start":739553,"byte_end":739565,"line_start":36,"line_end":36,"column_start":12,"column_end":24},"name":"half_extents","qualname":"<Cuboid<N>>::half_extents","value":"fn (&self) -> &Vector<N>","parent":null,"children":[],"decl_id":null,"docs":" The half-extents of this box. Half-extents are the box half-width along each axis.\n","sig":null,"attributes":[{"value":"/ The half-extents of this box. Half-extents are the box half-width along each axis.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/cuboid.rs","byte_start":739362,"byte_end":739448,"line_start":33,"line_end":33,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/cuboid.rs","byte_start":739453,"byte_end":739462,"line_start":34,"line_end":34,"column_start":5,"column_end":14}},{"value":"deprecated(note = \"use the `self.half_extents` public field directly.\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/cuboid.rs","byte_start":739467,"byte_end":739541,"line_start":35,"line_end":35,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":5364},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/cuboid.rs","byte_start":740809,"byte_end":740834,"line_start":71,"line_end":71,"column_start":12,"column_end":37},"name":"tangent_cone_contains_dir","qualname":"<Cuboid<N>>::tangent_cone_contains_dir","value":"fn (&self, feature: FeatureId, m: &Isometry<N>, dir: &Unit<Vector<N>>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks that the given direction in world-space is on the tangent cone of the given `feature`.\n","sig":null,"attributes":[{"value":"/ Checks that the given direction in world-space is on the tangent cone of the given `feature`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/cuboid.rs","byte_start":740671,"byte_end":740768,"line_start":69,"line_end":69,"column_start":5,"column_end":102}},{"value":"cfg(feature = \"dim3\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/cuboid.rs","byte_start":740773,"byte_end":740797,"line_start":70,"line_end":70,"column_start":5,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":7854},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/cylinder.rs","byte_start":756870,"byte_end":756878,"line_start":10,"line_end":10,"column_start":12,"column_end":20},"name":"Cylinder","qualname":"::shape::cylinder::Cylinder","value":"Cylinder { half_height, radius }","parent":null,"children":[{"krate":0,"index":7856},{"krate":0,"index":7857}],"decl_id":null,"docs":" SupportMap description of a cylinder shape with its principal axis aligned with the `y` axis.\n","sig":null,"attributes":[{"value":"/ SupportMap description of a cylinder shape with its principal axis aligned with the `y` axis.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/cylinder.rs","byte_start":756657,"byte_end":756754,"line_start":7,"line_end":7,"column_start":1,"column_end":98}}]},{"kind":"Field","id":{"krate":0,"index":7856},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/cylinder.rs","byte_start":756933,"byte_end":756944,"line_start":12,"line_end":12,"column_start":9,"column_end":20},"name":"half_height","qualname":"::shape::cylinder::Cylinder::half_height","value":"N","parent":{"krate":0,"index":7854},"children":[],"decl_id":null,"docs":" The half-height of the cylinder.\n","sig":null,"attributes":[{"value":"/ The half-height of the cylinder.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/cylinder.rs","byte_start":756888,"byte_end":756924,"line_start":11,"line_end":11,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":7857},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/cylinder.rs","byte_start":756993,"byte_end":756999,"line_start":14,"line_end":14,"column_start":9,"column_end":15},"name":"radius","qualname":"::shape::cylinder::Cylinder::radius","value":"N","parent":{"krate":0,"index":7854},"children":[],"decl_id":null,"docs":" The radius fo the cylinder.\n","sig":null,"attributes":[{"value":"/ The radius fo the cylinder.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/cylinder.rs","byte_start":756953,"byte_end":756984,"line_start":13,"line_end":13,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":5387},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/cylinder.rs","byte_start":757260,"byte_end":757263,"line_start":23,"line_end":23,"column_start":12,"column_end":15},"name":"new","qualname":"<Cylinder<N>>::new","value":"fn (half_height: N, radius: N) -> Cylinder<N>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new cylinder.","sig":null,"attributes":[{"value":"/ Creates a new cylinder.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/cylinder.rs","byte_start":757044,"byte_end":757071,"line_start":18,"line_end":18,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/cylinder.rs","byte_start":757076,"byte_end":757079,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ # Arguments:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/cylinder.rs","byte_start":757084,"byte_end":757100,"line_start":20,"line_end":20,"column_start":5,"column_end":21}},{"value":"/ * `half_height` - the half length of the cylinder along the `y` axis.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/cylinder.rs","byte_start":757105,"byte_end":757178,"line_start":21,"line_end":21,"column_start":5,"column_end":78}},{"value":"/ * `radius` - the length of the cylinder along all other axis.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/cylinder.rs","byte_start":757183,"byte_end":757248,"line_start":22,"line_end":22,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":5388},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/cylinder.rs","byte_start":757607,"byte_end":757618,"line_start":35,"line_end":35,"column_start":12,"column_end":23},"name":"half_height","qualname":"<Cylinder<N>>::half_height","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The cylinder half length along the `y` axis.\n","sig":null,"attributes":[{"value":"/ The cylinder half length along the `y` axis.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/cylinder.rs","byte_start":757462,"byte_end":757510,"line_start":32,"line_end":32,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/cylinder.rs","byte_start":757515,"byte_end":757524,"line_start":33,"line_end":33,"column_start":5,"column_end":14}},{"value":"deprecated(note = \"use the `self.half_height` field directly.\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/cylinder.rs","byte_start":757529,"byte_end":757595,"line_start":34,"line_end":34,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":5389},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/cylinder.rs","byte_start":757819,"byte_end":757825,"line_start":42,"line_end":42,"column_start":12,"column_end":18},"name":"radius","qualname":"<Cylinder<N>>::radius","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The radius of the cylinder along all but the `y` axis.\n","sig":null,"attributes":[{"value":"/ The radius of the cylinder along all but the `y` axis.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/cylinder.rs","byte_start":757669,"byte_end":757727,"line_start":39,"line_end":39,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/cylinder.rs","byte_start":757732,"byte_end":757741,"line_start":40,"line_end":40,"column_start":5,"column_end":14}},{"value":"deprecated(note = \"use the `self.radius` field directly.\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/cylinder.rs","byte_start":757746,"byte_end":757807,"line_start":41,"line_end":41,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7873},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/deformable_shape.rs","byte_start":758544,"byte_end":758551,"line_start":8,"line_end":8,"column_start":5,"column_end":12},"name":"Scalars","qualname":"::shape::deformable_shape::DeformationsType::Scalars","value":"DeformationsType::Scalars","parent":{"krate":0,"index":7872},"children":[],"decl_id":null,"docs":" Deformations described as scalars.\n","sig":null,"attributes":[{"value":"/ Deformations described as scalars.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/deformable_shape.rs","byte_start":758501,"byte_end":758539,"line_start":7,"line_end":7,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7875},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/deformable_shape.rs","byte_start":758600,"byte_end":758607,"line_start":10,"line_end":10,"column_start":5,"column_end":12},"name":"Vectors","qualname":"::shape::deformable_shape::DeformationsType::Vectors","value":"DeformationsType::Vectors","parent":{"krate":0,"index":7872},"children":[],"decl_id":null,"docs":" Deformations described as vectors.\n","sig":null,"attributes":[{"value":"/ Deformations described as vectors.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/deformable_shape.rs","byte_start":758557,"byte_end":758595,"line_start":9,"line_end":9,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7877},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/deformable_shape.rs","byte_start":758659,"byte_end":758669,"line_start":12,"line_end":12,"column_start":5,"column_end":15},"name":"Isometries","qualname":"::shape::deformable_shape::DeformationsType::Isometries","value":"DeformationsType::Isometries","parent":{"krate":0,"index":7872},"children":[],"decl_id":null,"docs":" Deformations described as isometries.\n","sig":null,"attributes":[{"value":"/ Deformations described as isometries.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/deformable_shape.rs","byte_start":758613,"byte_end":758654,"line_start":11,"line_end":11,"column_start":5,"column_end":46}}]},{"kind":"Enum","id":{"krate":0,"index":7872},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/deformable_shape.rs","byte_start":758478,"byte_end":758494,"line_start":6,"line_end":6,"column_start":10,"column_end":26},"name":"DeformationsType","qualname":"::shape::deformable_shape::DeformationsType","value":"DeformationsType::{Scalars, Vectors, Isometries}","parent":null,"children":[{"krate":0,"index":7873},{"krate":0,"index":7875},{"krate":0,"index":7877}],"decl_id":null,"docs":" The type of elements used to describe a deformation on a collision object.\n","sig":null,"attributes":[{"value":"/ The type of elements used to describe a deformation on a collision object.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/deformable_shape.rs","byte_start":758339,"byte_end":758417,"line_start":4,"line_end":4,"column_start":1,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":5396},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/deformable_shape.rs","byte_start":758728,"byte_end":758743,"line_start":16,"line_end":16,"column_start":11,"column_end":26},"name":"DeformableShape","qualname":"::shape::deformable_shape::DeformableShape","value":"DeformableShape<N: RealField>","parent":null,"children":[{"krate":0,"index":5398},{"krate":0,"index":5399},{"krate":0,"index":5400}],"decl_id":null,"docs":" Trait implemented by deformable shapes.\n","sig":null,"attributes":[{"value":"/ Trait implemented by deformable shapes.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/deformable_shape.rs","byte_start":758674,"byte_end":758717,"line_start":15,"line_end":15,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":5398},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/deformable_shape.rs","byte_start":758822,"byte_end":758839,"line_start":18,"line_end":18,"column_start":8,"column_end":25},"name":"deformations_type","qualname":"::shape::deformable_shape::DeformableShape::deformations_type","value":"fn (&self) -> DeformationsType","parent":{"krate":0,"index":5396},"children":[],"decl_id":null,"docs":" The type of degrees of freedom this shape has.\n","sig":null,"attributes":[{"value":"/ The type of degrees of freedom this shape has.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/deformable_shape.rs","byte_start":758764,"byte_end":758814,"line_start":17,"line_end":17,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":5399},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/deformable_shape.rs","byte_start":759239,"byte_end":759255,"line_start":27,"line_end":27,"column_start":8,"column_end":24},"name":"set_deformations","qualname":"::shape::deformable_shape::DeformableShape::set_deformations","value":"fn (&mut self, coords: &[N]) -> ()","parent":{"krate":0,"index":5396},"children":[],"decl_id":null,"docs":" Updates some the degrees of freedom of this shape.\n Updates all the degrees of freedom of this shape.\n","sig":null,"attributes":[{"value":"/ Updates some the degrees of freedom of this shape.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/deformable_shape.rs","byte_start":759024,"byte_end":759078,"line_start":23,"line_end":23,"column_start":5,"column_end":59}},{"value":"/ Updates all the degrees of freedom of this shape.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/deformable_shape.rs","byte_start":759178,"byte_end":759231,"line_start":26,"line_end":26,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":5400},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/deformable_shape.rs","byte_start":759351,"byte_end":759377,"line_start":30,"line_end":30,"column_start":8,"column_end":34},"name":"update_local_approximation","qualname":"::shape::deformable_shape::DeformableShape::update_local_approximation","value":"fn (&self, coords: &[N], approx: &mut LocalShapeApproximation<N>) -> ()","parent":{"krate":0,"index":5396},"children":[],"decl_id":null,"docs":" Updates the given local approximation of this shape.\n","sig":null,"attributes":[{"value":"/ Updates the given local approximation of this shape.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/deformable_shape.rs","byte_start":759287,"byte_end":759343,"line_start":29,"line_end":29,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":7893},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/heightfield3.rs","byte_start":759819,"byte_end":759840,"line_start":12,"line_end":12,"column_start":16,"column_end":37},"name":"HeightFieldCellStatus","qualname":"::shape::heightfield3::HeightFieldCellStatus","value":"HeightFieldCellStatus {  }","parent":null,"children":[{"krate":0,"index":7894}],"decl_id":null,"docs":" The status of the cell of an heightfield.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7935},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/heightfield3.rs","byte_start":759957,"byte_end":759975,"line_start":14,"line_end":14,"column_start":15,"column_end":33},"name":"ZIGZAG_SUBDIVISION","qualname":"::shape::heightfield3::HeightFieldCellStatus::ZIGZAG_SUBDIVISION","value":"HeightFieldCellStatus","parent":{"krate":0,"index":7934},"children":[],"decl_id":null,"docs":" If this bit is set, the concerned heightfield cell is subdivided using a Z pattern.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7936},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/heightfield3.rs","byte_start":760104,"byte_end":760125,"line_start":16,"line_end":16,"column_start":15,"column_end":36},"name":"LEFT_TRIANGLE_REMOVED","qualname":"::shape::heightfield3::HeightFieldCellStatus::LEFT_TRIANGLE_REMOVED","value":"HeightFieldCellStatus","parent":{"krate":0,"index":7934},"children":[],"decl_id":null,"docs":" If this bit is set, the leftmost triangle of the concerned heightfield cell is removed.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7937},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/heightfield3.rs","byte_start":760255,"byte_end":760277,"line_start":18,"line_end":18,"column_start":15,"column_end":37},"name":"RIGHT_TRIANGLE_REMOVED","qualname":"::shape::heightfield3::HeightFieldCellStatus::RIGHT_TRIANGLE_REMOVED","value":"HeightFieldCellStatus","parent":{"krate":0,"index":7934},"children":[],"decl_id":null,"docs":" If this bit is set, the rightmost triangle of the concerned heightfield cell is removed.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7938},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/heightfield3.rs","byte_start":760400,"byte_end":760412,"line_start":20,"line_end":20,"column_start":15,"column_end":27},"name":"CELL_REMOVED","qualname":"::shape::heightfield3::HeightFieldCellStatus::CELL_REMOVED","value":"HeightFieldCellStatus","parent":{"krate":0,"index":7934},"children":[],"decl_id":null,"docs":" If this bit is set, both triangles of the concerned heightfield cell are removed.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7996},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/heightfield3.rs","byte_start":760650,"byte_end":760661,"line_start":27,"line_end":27,"column_start":12,"column_end":23},"name":"HeightField","qualname":"::shape::heightfield3::HeightField","value":"HeightField {  }","parent":null,"children":[{"krate":0,"index":7998},{"krate":0,"index":7999},{"krate":0,"index":8000},{"krate":0,"index":8001},{"krate":0,"index":8002}],"decl_id":null,"docs":" An heightfield implicitly discretized with triangles.\n","sig":null,"attributes":[{"value":"/ An heightfield implicitly discretized with triangles.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/heightfield3.rs","byte_start":760581,"byte_end":760638,"line_start":26,"line_end":26,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":5417},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/heightfield3.rs","byte_start":760947,"byte_end":760950,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"new","qualname":"<HeightField<N>>::new","value":"fn (heights: DMatrix<N>, scale: Vector<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Initializes a new heightfield with the given heights and a scaling factor.\n","sig":null,"attributes":[{"value":"/ Initializes a new heightfield with the given heights and a scaling factor.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/heightfield3.rs","byte_start":760857,"byte_end":760935,"line_start":36,"line_end":36,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":5418},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/heightfield3.rs","byte_start":761887,"byte_end":761892,"line_start":66,"line_end":66,"column_start":12,"column_end":17},"name":"nrows","qualname":"<HeightField<N>>::nrows","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The number of rows of this heightfield.\n","sig":null,"attributes":[{"value":"/ The number of rows of this heightfield.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/heightfield3.rs","byte_start":761832,"byte_end":761875,"line_start":65,"line_end":65,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":5419},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/heightfield3.rs","byte_start":762013,"byte_end":762018,"line_start":71,"line_end":71,"column_start":12,"column_end":17},"name":"ncols","qualname":"<HeightField<N>>::ncols","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The number of columns of this heightfield.\n","sig":null,"attributes":[{"value":"/ The number of columns of this heightfield.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/heightfield3.rs","byte_start":761955,"byte_end":762001,"line_start":70,"line_end":70,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":5424},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/heightfield3.rs","byte_start":763311,"byte_end":763324,"line_start":114,"line_end":114,"column_start":12,"column_end":25},"name":"cell_at_point","qualname":"<HeightField<N>>::cell_at_point","value":"fn (&self, pt: &Point3<N>) -> Option<(usize, usize)>","parent":null,"children":[],"decl_id":null,"docs":" The pair of index of the cell containing the vertical projection of the given point.\n","sig":null,"attributes":[{"value":"/ The pair of index of the cell containing the vertical projection of the given point.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/heightfield3.rs","byte_start":763211,"byte_end":763299,"line_start":113,"line_end":113,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":5425},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/heightfield3.rs","byte_start":764119,"byte_end":764123,"line_start":133,"line_end":133,"column_start":12,"column_end":16},"name":"x_at","qualname":"<HeightField<N>>::x_at","value":"fn (&self, j: usize) -> N","parent":null,"children":[],"decl_id":null,"docs":" The smallest x coordinate of the `j`-th column of this heightfield.\n","sig":null,"attributes":[{"value":"/ The smallest x coordinate of the `j`-th column of this heightfield.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/heightfield3.rs","byte_start":764036,"byte_end":764107,"line_start":132,"line_end":132,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":5426},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/heightfield3.rs","byte_start":764372,"byte_end":764376,"line_start":139,"line_end":139,"column_start":12,"column_end":16},"name":"z_at","qualname":"<HeightField<N>>::z_at","value":"fn (&self, i: usize) -> N","parent":null,"children":[],"decl_id":null,"docs":" The smallest z coordinate of the start of the `i`-th row of this heightfield.\n","sig":null,"attributes":[{"value":"/ The smallest z coordinate of the start of the `i`-th row of this heightfield.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/heightfield3.rs","byte_start":764279,"byte_end":764360,"line_start":138,"line_end":138,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":5427},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/heightfield3.rs","byte_start":764607,"byte_end":764616,"line_start":145,"line_end":145,"column_start":12,"column_end":21},"name":"triangles","qualname":"<HeightField<N>>::triangles","value":"fn <'a> (&'a self) -> impl Iterator<Item = Triangle<N>> + 'a","parent":null,"children":[],"decl_id":null,"docs":" An iterator through all the triangles of this heightfield.\n","sig":null,"attributes":[{"value":"/ An iterator through all the triangles of this heightfield.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/heightfield3.rs","byte_start":764533,"byte_end":764595,"line_start":144,"line_end":144,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":5430},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/heightfield3.rs","byte_start":765073,"byte_end":765085,"line_start":157,"line_end":157,"column_start":12,"column_end":24},"name":"triangles_at","qualname":"<HeightField<N>>::triangles_at","value":"fn (&self, i: usize, j: usize) -> (Option<Triangle<N>>, Option<Triangle<N>>)","parent":null,"children":[],"decl_id":null,"docs":" The two triangles at the cell (i, j) of this heightfield.","sig":null,"attributes":[{"value":"/ The two triangles at the cell (i, j) of this heightfield.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/heightfield3.rs","byte_start":764827,"byte_end":764888,"line_start":153,"line_end":153,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/heightfield3.rs","byte_start":764893,"byte_end":764896,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ Returns `None` fore triangles that have been removed because of their user-defined status","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/heightfield3.rs","byte_start":764901,"byte_end":764994,"line_start":155,"line_end":155,"column_start":5,"column_end":98}},{"value":"/ flags (described by the `HeightFieldCellStatus` bitfield).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/heightfield3.rs","byte_start":764999,"byte_end":765061,"line_start":156,"line_end":156,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":5431},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/heightfield3.rs","byte_start":767382,"byte_end":767393,"line_start":225,"line_end":225,"column_start":12,"column_end":23},"name":"cell_status","qualname":"<HeightField<N>>::cell_status","value":"fn (&self, i: usize, j: usize) -> HeightFieldCellStatus","parent":null,"children":[],"decl_id":null,"docs":" The status of the `(i, j)`-th cell.\n","sig":null,"attributes":[{"value":"/ The status of the `(i, j)`-th cell.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/heightfield3.rs","byte_start":767331,"byte_end":767370,"line_start":224,"line_end":224,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":5432},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/heightfield3.rs","byte_start":767542,"byte_end":767557,"line_start":230,"line_end":230,"column_start":12,"column_end":27},"name":"set_cell_status","qualname":"<HeightField<N>>::set_cell_status","value":"fn (&mut self, i: usize, j: usize, status: HeightFieldCellStatus) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the status of the `(i, j)`-th cell.\n","sig":null,"attributes":[{"value":"/ Set the status of the `(i, j)`-th cell.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/heightfield3.rs","byte_start":767487,"byte_end":767530,"line_start":229,"line_end":229,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":5433},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/heightfield3.rs","byte_start":767736,"byte_end":767750,"line_start":235,"line_end":235,"column_start":12,"column_end":26},"name":"cells_statuses","qualname":"<HeightField<N>>::cells_statuses","value":"fn (&self) -> &DMatrix<HeightFieldCellStatus>","parent":null,"children":[],"decl_id":null,"docs":" The statuses of all the cells of this heightfield.\n","sig":null,"attributes":[{"value":"/ The statuses of all the cells of this heightfield.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/heightfield3.rs","byte_start":767670,"byte_end":767724,"line_start":234,"line_end":234,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":5434},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/heightfield3.rs","byte_start":767901,"byte_end":767919,"line_start":240,"line_end":240,"column_start":12,"column_end":30},"name":"cells_statuses_mut","qualname":"<HeightField<N>>::cells_statuses_mut","value":"fn (&mut self) -> &mut DMatrix<HeightFieldCellStatus>","parent":null,"children":[],"decl_id":null,"docs":" The mutable statuses of all the cells of this heightfield.\n","sig":null,"attributes":[{"value":"/ The mutable statuses of all the cells of this heightfield.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/heightfield3.rs","byte_start":767827,"byte_end":767889,"line_start":239,"line_end":239,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":5435},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/heightfield3.rs","byte_start":768056,"byte_end":768063,"line_start":245,"line_end":245,"column_start":12,"column_end":19},"name":"heights","qualname":"<HeightField<N>>::heights","value":"fn (&self) -> &DMatrix<N>","parent":null,"children":[],"decl_id":null,"docs":" The heights of this heightfield.\n","sig":null,"attributes":[{"value":"/ The heights of this heightfield.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/heightfield3.rs","byte_start":768008,"byte_end":768044,"line_start":244,"line_end":244,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":5436},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/heightfield3.rs","byte_start":768182,"byte_end":768187,"line_start":250,"line_end":250,"column_start":12,"column_end":17},"name":"scale","qualname":"<HeightField<N>>::scale","value":"fn (&self) -> &Vector<N>","parent":null,"children":[],"decl_id":null,"docs":" The scale factor applied to this heightfield.\n","sig":null,"attributes":[{"value":"/ The scale factor applied to this heightfield.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/heightfield3.rs","byte_start":768121,"byte_end":768170,"line_start":249,"line_end":249,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":5437},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/heightfield3.rs","byte_start":768361,"byte_end":768371,"line_start":255,"line_end":255,"column_start":12,"column_end":22},"name":"cell_width","qualname":"<HeightField<N>>::cell_width","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The width (extent along its local `x` axis) of each cell of this heightmap, including the scale factor.\n","sig":null,"attributes":[{"value":"/ The width (extent along its local `x` axis) of each cell of this heightmap, including the scale factor.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/heightfield3.rs","byte_start":768242,"byte_end":768349,"line_start":254,"line_end":254,"column_start":5,"column_end":112}}]},{"kind":"Method","id":{"krate":0,"index":5438},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/heightfield3.rs","byte_start":768563,"byte_end":768574,"line_start":260,"line_end":260,"column_start":12,"column_end":23},"name":"cell_height","qualname":"<HeightField<N>>::cell_height","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The height (extent along its local `z` axis) of each cell of this heightmap, including the scale factor.\n","sig":null,"attributes":[{"value":"/ The height (extent along its local `z` axis) of each cell of this heightmap, including the scale factor.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/heightfield3.rs","byte_start":768443,"byte_end":768551,"line_start":259,"line_end":259,"column_start":5,"column_end":113}}]},{"kind":"Method","id":{"krate":0,"index":5439},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/heightfield3.rs","byte_start":768766,"byte_end":768781,"line_start":265,"line_end":265,"column_start":12,"column_end":27},"name":"unit_cell_width","qualname":"<HeightField<N>>::unit_cell_width","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The width (extent along its local `x` axis) of each cell of this heightmap, excluding the scale factor.\n","sig":null,"attributes":[{"value":"/ The width (extent along its local `x` axis) of each cell of this heightmap, excluding the scale factor.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/heightfield3.rs","byte_start":768647,"byte_end":768754,"line_start":264,"line_end":264,"column_start":5,"column_end":112}}]},{"kind":"Method","id":{"krate":0,"index":5440},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/heightfield3.rs","byte_start":768993,"byte_end":769009,"line_start":270,"line_end":270,"column_start":12,"column_end":28},"name":"unit_cell_height","qualname":"<HeightField<N>>::unit_cell_height","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The height (extent along its local `z` axis) of each cell of this heightmap, excluding the scale factor.\n","sig":null,"attributes":[{"value":"/ The height (extent along its local `z` axis) of each cell of this heightmap, excluding the scale factor.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/heightfield3.rs","byte_start":768873,"byte_end":768981,"line_start":269,"line_end":269,"column_start":5,"column_end":113}}]},{"kind":"Method","id":{"krate":0,"index":5441},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/heightfield3.rs","byte_start":769144,"byte_end":769148,"line_start":275,"line_end":275,"column_start":12,"column_end":16},"name":"aabb","qualname":"<HeightField<N>>::aabb","value":"fn (&self) -> &AABB<N>","parent":null,"children":[],"decl_id":null,"docs":" The AABB of this heightmap.\n","sig":null,"attributes":[{"value":"/ The AABB of this heightmap.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/heightfield3.rs","byte_start":769101,"byte_end":769132,"line_start":274,"line_end":274,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":5442},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/heightfield3.rs","byte_start":769340,"byte_end":769367,"line_start":281,"line_end":281,"column_start":12,"column_end":39},"name":"convert_triangle_feature_id","qualname":"<HeightField<N>>::convert_triangle_feature_id","value":"fn (&self, i: usize, j: usize, left: bool, fid: FeatureId) -> FeatureId","parent":null,"children":[],"decl_id":null,"docs":" Converts the FeatureID of the left or right triangle at the cell `(i, j)` into a FeatureId\n of the whole heightfield.\n","sig":null,"attributes":[{"value":"/ Converts the FeatureID of the left or right triangle at the cell `(i, j)` into a FeatureId","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/heightfield3.rs","byte_start":769200,"byte_end":769294,"line_start":279,"line_end":279,"column_start":5,"column_end":99}},{"value":"/ of the whole heightfield.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/heightfield3.rs","byte_start":769299,"byte_end":769328,"line_start":280,"line_end":280,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":5443},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/heightfield3.rs","byte_start":772537,"byte_end":772563,"line_start":364,"line_end":364,"column_start":12,"column_end":38},"name":"map_elements_in_local_aabb","qualname":"<HeightField<N>>::map_elements_in_local_aabb","value":"fn (&self, aabb: &AABB<N>, f: &mut impl FnMut(usize, &Triangle<N>, &dyn ContactPreprocessor<N>)) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Applies the function `f` to all the triangles of this heightfield intersecting the given AABB.\n","sig":null,"attributes":[{"value":"/ Applies the function `f` to all the triangles of this heightfield intersecting the given AABB.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/heightfield3.rs","byte_start":772427,"byte_end":772525,"line_start":363,"line_end":363,"column_start":5,"column_end":103}}]},{"kind":"Struct","id":{"krate":0,"index":8009},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/plane.rs","byte_start":779327,"byte_end":779332,"line_start":8,"line_end":8,"column_start":12,"column_end":17},"name":"Plane","qualname":"::shape::plane::Plane","value":"Plane { normal }","parent":null,"children":[{"krate":0,"index":8011}],"decl_id":null,"docs":" SupportMap description of a plane.\n","sig":null,"attributes":[{"value":"/ SupportMap description of a plane.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/plane.rs","byte_start":779179,"byte_end":779217,"line_start":5,"line_end":5,"column_start":1,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":8011},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/plane.rs","byte_start":779383,"byte_end":779389,"line_start":10,"line_end":10,"column_start":9,"column_end":15},"name":"normal","qualname":"::shape::plane::Plane::normal","value":"na::Unit<na::Matrix<N, na::U3, na::U1, <na::DefaultAllocator as na::allocator::Allocator<N, na::U3>>::Buffer>>","parent":{"krate":0,"index":8009},"children":[],"decl_id":null,"docs":" The plane normal.\n","sig":null,"attributes":[{"value":"/ The plane normal.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/plane.rs","byte_start":779353,"byte_end":779374,"line_start":9,"line_end":9,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":5476},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/plane.rs","byte_start":779525,"byte_end":779528,"line_start":16,"line_end":16,"column_start":12,"column_end":15},"name":"new","qualname":"<Plane<N>>::new","value":"fn (normal: Unit<Vector<N>>) -> Plane<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new plane from its center and its normal.\n","sig":null,"attributes":[{"value":"/ Builds a new plane from its center and its normal.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/plane.rs","byte_start":779445,"byte_end":779499,"line_start":14,"line_end":14,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/plane.rs","byte_start":779504,"byte_end":779513,"line_start":15,"line_end":15,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5477},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/plane.rs","byte_start":779724,"byte_end":779730,"line_start":23,"line_end":23,"column_start":12,"column_end":18},"name":"normal","qualname":"<Plane<N>>::normal","value":"fn (&self) -> &Unit<Vector<N>>","parent":null,"children":[],"decl_id":null,"docs":" The plane normal.\n","sig":null,"attributes":[{"value":"/ The plane normal.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/plane.rs","byte_start":779604,"byte_end":779625,"line_start":20,"line_end":20,"column_start":5,"column_end":26}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/plane.rs","byte_start":779630,"byte_end":779639,"line_start":21,"line_end":21,"column_start":5,"column_end":14}},{"value":"deprecated(note = \"use the `self.normal` public field directly.\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/plane.rs","byte_start":779644,"byte_end":779712,"line_start":22,"line_end":22,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":8034},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":780656,"byte_end":780668,"line_start":28,"line_end":28,"column_start":12,"column_end":24},"name":"PolylineEdge","qualname":"::shape::polyline::PolylineEdge","value":"PolylineEdge { indices, normal }","parent":null,"children":[{"krate":0,"index":8036},{"krate":0,"index":8037},{"krate":0,"index":8038}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8036},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":780693,"byte_end":780700,"line_start":29,"line_end":29,"column_start":9,"column_end":16},"name":"indices","qualname":"::shape::polyline::PolylineEdge::indices","value":"na::Point<usize, na::U2>","parent":{"krate":0,"index":8034},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8038},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":780746,"byte_end":780752,"line_start":31,"line_end":31,"column_start":9,"column_end":15},"name":"normal","qualname":"::shape::polyline::PolylineEdge::normal","value":"std::option::Option<na::Unit<na::Matrix<N, na::U3, na::U1, <na::DefaultAllocator as na::allocator::Allocator<N, na::U3>>::Buffer>>>","parent":{"krate":0,"index":8034},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8047},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":781099,"byte_end":781107,"line_start":44,"line_end":44,"column_start":12,"column_end":20},"name":"Polyline","qualname":"::shape::polyline::Polyline","value":"Polyline {  }","parent":null,"children":[{"krate":0,"index":8049},{"krate":0,"index":8050},{"krate":0,"index":8051},{"krate":0,"index":8052},{"krate":0,"index":8053},{"krate":0,"index":8054},{"krate":0,"index":8055},{"krate":0,"index":8056}],"decl_id":null,"docs":" A polygonal line.\n","sig":null,"attributes":[{"value":"/ A polygonal line.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":780986,"byte_end":781007,"line_start":41,"line_end":41,"column_start":1,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":5515},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":781548,"byte_end":781551,"line_start":58,"line_end":58,"column_start":12,"column_end":15},"name":"new","qualname":"<Polyline<N>>::new","value":"fn (points: Vec<Point<N>>, indices: Option<Vec<Point2<usize>>>) -> Polyline<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new polyline.\n","sig":null,"attributes":[{"value":"/ Builds a new polyline.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":781510,"byte_end":781536,"line_start":57,"line_end":57,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":5519},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":785710,"byte_end":785714,"line_start":188,"line_end":188,"column_start":12,"column_end":16},"name":"quad","qualname":"<Polyline<N>>::quad","value":"fn (nx: usize, ny: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A polyline shaped like a quad, in the x-y plane.\n","sig":null,"attributes":[{"value":"/ A polyline shaped like a quad, in the x-y plane.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":785646,"byte_end":785698,"line_start":187,"line_end":187,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":5521},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":786726,"byte_end":786730,"line_start":218,"line_end":218,"column_start":12,"column_end":16},"name":"aabb","qualname":"<Polyline<N>>::aabb","value":"fn (&self) -> &AABB<N>","parent":null,"children":[],"decl_id":null,"docs":" The polyline's AABB.\n","sig":null,"attributes":[{"value":"/ The polyline's AABB.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":786676,"byte_end":786700,"line_start":216,"line_end":216,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":786705,"byte_end":786714,"line_start":217,"line_end":217,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5522},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":786928,"byte_end":786934,"line_start":226,"line_end":226,"column_start":12,"column_end":18},"name":"points","qualname":"<Polyline<N>>::points","value":"fn (&self) -> &[Point<N>]","parent":null,"children":[],"decl_id":null,"docs":" The points of this polyline.\n","sig":null,"attributes":[{"value":"/ The points of this polyline.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":786870,"byte_end":786902,"line_start":224,"line_end":224,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":786907,"byte_end":786916,"line_start":225,"line_end":225,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5523},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":787048,"byte_end":787053,"line_start":232,"line_end":232,"column_start":12,"column_end":17},"name":"edges","qualname":"<Polyline<N>>::edges","value":"fn (&self) -> &[PolylineEdge<N>]","parent":null,"children":[],"decl_id":null,"docs":" The edges of this polyline.\n","sig":null,"attributes":[{"value":"/ The edges of this polyline.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":786991,"byte_end":787022,"line_start":230,"line_end":230,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":787027,"byte_end":787036,"line_start":231,"line_end":231,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5524},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":787256,"byte_end":787264,"line_start":240,"line_end":240,"column_start":12,"column_end":20},"name":"oriented","qualname":"<Polyline<N>>::oriented","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether this polyline is considered is oriented or not.","sig":null,"attributes":[{"value":"/ Whether this polyline is considered is oriented or not.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":787116,"byte_end":787175,"line_start":236,"line_end":236,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":787180,"byte_end":787183,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ By default a polyline is not oriented.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":787188,"byte_end":787230,"line_start":238,"line_end":238,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":787235,"byte_end":787244,"line_start":239,"line_end":239,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5525},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":787474,"byte_end":787486,"line_start":248,"line_end":248,"column_start":12,"column_end":24},"name":"set_oriented","qualname":"<Polyline<N>>::set_oriented","value":"fn (&mut self, oriented: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Whether this polyline is considered as oriented or not.","sig":null,"attributes":[{"value":"/ Whether this polyline is considered as oriented or not.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":787315,"byte_end":787374,"line_start":244,"line_end":244,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":787379,"byte_end":787382,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ This is determined at the initialization of the polyline.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":787387,"byte_end":787448,"line_start":246,"line_end":246,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":787453,"byte_end":787462,"line_start":247,"line_end":247,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5526},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":787614,"byte_end":787637,"line_start":254,"line_end":254,"column_start":12,"column_end":35},"name":"edge_containing_feature","qualname":"<Polyline<N>>::edge_containing_feature","value":"fn (&self, id: FeatureId) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Face containing feature.\n","sig":null,"attributes":[{"value":"/ Face containing feature.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":787560,"byte_end":787588,"line_start":252,"line_end":252,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":787593,"byte_end":787602,"line_start":253,"line_end":253,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5527},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":788072,"byte_end":788107,"line_start":266,"line_end":266,"column_start":12,"column_end":47},"name":"segment_feature_to_polyline_feature","qualname":"<Polyline<N>>::segment_feature_to_polyline_feature","value":"fn (&self, edge_id: usize, feature: FeatureId) -> FeatureId","parent":null,"children":[],"decl_id":null,"docs":" Converts a segment FeatureId to a polyline FeatureId.\n","sig":null,"attributes":[{"value":"/ Converts a segment FeatureId to a polyline FeatureId.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":787989,"byte_end":788046,"line_start":264,"line_end":264,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":788051,"byte_end":788060,"line_start":265,"line_end":265,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5528},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":788814,"byte_end":788826,"line_start":289,"line_end":289,"column_start":12,"column_end":24},"name":"edge_segment","qualname":"<Polyline<N>>::edge_segment","value":"fn (&self, i: usize) -> Segment<N>","parent":null,"children":[],"decl_id":null,"docs":" The segment of the `i`-th edge on this polyline.\n","sig":null,"attributes":[{"value":"/ The segment of the `i`-th edge on this polyline.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":788736,"byte_end":788788,"line_start":287,"line_end":287,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":788793,"byte_end":788802,"line_start":288,"line_end":288,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5529},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":789046,"byte_end":789056,"line_start":296,"line_end":296,"column_start":12,"column_end":22},"name":"segment_at","qualname":"<Polyline<N>>::segment_at","value":"fn (&self, i: usize) -> Segment<N>","parent":null,"children":[],"decl_id":null,"docs":" Gets the i-th polyline element.\n","sig":null,"attributes":[{"value":"/ Gets the i-th polyline element.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":788985,"byte_end":789020,"line_start":294,"line_end":294,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":789025,"byte_end":789034,"line_start":295,"line_end":295,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5530},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":789282,"byte_end":789285,"line_start":303,"line_end":303,"column_start":12,"column_end":15},"name":"bvt","qualname":"<Polyline<N>>::bvt","value":"fn (&self) -> &BVT<usize, AABB<N>>","parent":null,"children":[],"decl_id":null,"docs":" The optimization structure used by this polyline.\n","sig":null,"attributes":[{"value":"/ The optimization structure used by this polyline.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":789203,"byte_end":789256,"line_start":301,"line_end":301,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":789261,"byte_end":789270,"line_start":302,"line_end":302,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5531},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":789488,"byte_end":789520,"line_start":310,"line_end":310,"column_start":12,"column_end":44},"name":"vertex_tangent_cone_contains_dir","qualname":"<Polyline<N>>::vertex_tangent_cone_contains_dir","value":"fn (&self, _i: usize, _deformations: Option<&[N]>, _dir: &Unit<Vector<N>>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests that the given `dir` is on the tangent cone of the `i`th vertex\n of this polyline.\n","sig":null,"attributes":[{"value":"/ Tests that the given `dir` is on the tangent cone of the `i`th vertex","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":789348,"byte_end":789421,"line_start":307,"line_end":307,"column_start":5,"column_end":78}},{"value":"/ of this polyline.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":789426,"byte_end":789447,"line_start":308,"line_end":308,"column_start":5,"column_end":26}},{"value":"cfg(feature = \"dim3\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":789452,"byte_end":789476,"line_start":309,"line_end":309,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5532},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":791021,"byte_end":791033,"line_start":362,"line_end":362,"column_start":12,"column_end":24},"name":"transform_by","qualname":"<Polyline<N>>::transform_by","value":"fn (&mut self, transform: &Isometry<N>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Applies in-place a transformation to this polyline.\n","sig":null,"attributes":[{"value":"/ Applies in-place a transformation to this polyline.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":790954,"byte_end":791009,"line_start":361,"line_end":361,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":5533},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":791236,"byte_end":791247,"line_start":370,"line_end":370,"column_start":12,"column_end":23},"name":"transformed","qualname":"<Polyline<N>>::transformed","value":"fn (mut self, t: &Isometry<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Applies a transformation to this polyline.\n","sig":null,"attributes":[{"value":"/ Applies a transformation to this polyline.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":791164,"byte_end":791210,"line_start":368,"line_end":368,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":791215,"byte_end":791224,"line_start":369,"line_end":369,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5534},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":791409,"byte_end":791417,"line_start":376,"line_end":376,"column_start":12,"column_end":20},"name":"scale_by","qualname":"<Polyline<N>>::scale_by","value":"fn (&mut self, scale: &Vector<N>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Applies in-place a non-uniform scale to this polyline.\n","sig":null,"attributes":[{"value":"/ Applies in-place a non-uniform scale to this polyline.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":791339,"byte_end":791397,"line_start":375,"line_end":375,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":5535},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":791633,"byte_end":791639,"line_start":384,"line_end":384,"column_start":12,"column_end":18},"name":"scaled","qualname":"<Polyline<N>>::scaled","value":"fn (mut self, s: &Vector<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Applies a non-uniform scale to this polyline.\n","sig":null,"attributes":[{"value":"/ Applies a non-uniform scale to this polyline.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":791558,"byte_end":791607,"line_start":382,"line_end":382,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":791612,"byte_end":791621,"line_start":383,"line_end":383,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5536},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":791863,"byte_end":791874,"line_start":392,"line_end":392,"column_start":12,"column_end":23},"name":"is_backface","qualname":"<Polyline<N>>::is_backface","value":"fn (&self, feature: FeatureId) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the given feature is a FeatureId::Face and\n identifies a backface of this polyline.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the given feature is a FeatureId::Face and","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":791725,"byte_end":791789,"line_start":389,"line_end":389,"column_start":5,"column_end":69}},{"value":"/ identifies a backface of this polyline.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":791794,"byte_end":791837,"line_start":390,"line_end":390,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":791842,"byte_end":791851,"line_start":391,"line_end":391,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5537},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":792172,"byte_end":792210,"line_start":402,"line_end":402,"column_start":12,"column_end":50},"name":"vertex_tangent_cone_polar_contains_dir","qualname":"<Polyline<N>>::vertex_tangent_cone_polar_contains_dir","value":"fn (&self, i: usize, dir: &Unit<Vector<N>>, sin_ang_tol: N) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests that the given `dir` is on the polar of the tangent cone of the `i`th vertex\n of this polyline.\n","sig":null,"attributes":[{"value":"/ Tests that the given `dir` is on the polar of the tangent cone of the `i`th vertex","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":792048,"byte_end":792134,"line_start":400,"line_end":400,"column_start":5,"column_end":91}},{"value":"/ of this polyline.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":792139,"byte_end":792160,"line_start":401,"line_end":401,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":5538},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":792833,"byte_end":792863,"line_start":425,"line_end":425,"column_start":12,"column_end":42},"name":"edge_tangent_cone_contains_dir","qualname":"<Polyline<N>>::edge_tangent_cone_contains_dir","value":"fn (&self, _i: usize, _deformations: Option<&[N]>, _dir: &Unit<Vector<N>>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests that the given `dir` is on the tangent cone of the `i`th edge\n of this polyline.\n","sig":null,"attributes":[{"value":"/ Tests that the given `dir` is on the tangent cone of the `i`th edge","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":792695,"byte_end":792766,"line_start":422,"line_end":422,"column_start":5,"column_end":76}},{"value":"/ of this polyline.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":792771,"byte_end":792792,"line_start":423,"line_end":423,"column_start":5,"column_end":26}},{"value":"cfg(feature = \"dim3\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":792797,"byte_end":792821,"line_start":424,"line_end":424,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5539},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":794556,"byte_end":794592,"line_start":480,"line_end":480,"column_start":12,"column_end":48},"name":"edge_tangent_cone_polar_contains_dir","qualname":"<Polyline<N>>::edge_tangent_cone_polar_contains_dir","value":"fn (&self, i: usize, dir: &Unit<Vector<N>>, cos_ang_tol: N) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether the polar of the tangent cone of the i-th edge of this polyline\n contains the direction `dir` considering the cosinus of an angular tolerance `cos_ang_tol`.\n","sig":null,"attributes":[{"value":"/ Tests whether the polar of the tangent cone of the i-th edge of this polyline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":794363,"byte_end":794444,"line_start":478,"line_end":478,"column_start":5,"column_end":86}},{"value":"/ contains the direction `dir` considering the cosinus of an angular tolerance `cos_ang_tol`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":794449,"byte_end":794544,"line_start":479,"line_end":479,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":5542},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":795361,"byte_end":795392,"line_start":505,"line_end":505,"column_start":12,"column_end":43},"name":"tangent_cone_polar_contains_dir","qualname":"<Polyline<N>>::tangent_cone_polar_contains_dir","value":"fn (&self, _feature: FeatureId, _dir: &Unit<Vector<N>>, _sin_ang_tol: N, _cos_ang_tol: N) -> bool","parent":null,"children":[],"decl_id":null,"docs":" (Not yet implemented) Tests whether the polar of the tangent cone of the specified feature of\n this polyline contains the direction `dir` considering the sinus and cosinus of an angular tolerance.\n","sig":null,"attributes":[{"value":"/ (Not yet implemented) Tests whether the polar of the tangent cone of the specified feature of","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":795142,"byte_end":795239,"line_start":503,"line_end":503,"column_start":5,"column_end":102}},{"value":"/ this polyline contains the direction `dir` considering the sinus and cosinus of an angular tolerance.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":795244,"byte_end":795349,"line_start":504,"line_end":504,"column_start":5,"column_end":110}}]},{"kind":"Struct","id":{"krate":0,"index":8060},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/segment.rs","byte_start":805287,"byte_end":805294,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"name":"Segment","qualname":"::shape::segment::Segment","value":"Segment { a, b }","parent":null,"children":[{"krate":0,"index":8062},{"krate":0,"index":8063}],"decl_id":null,"docs":" A segment shape.\n","sig":null,"attributes":[{"value":"/ A segment shape.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/segment.rs","byte_start":805140,"byte_end":805160,"line_start":12,"line_end":12,"column_start":1,"column_end":21}},{"value":"repr(C)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/segment.rs","byte_start":805224,"byte_end":805234,"line_start":14,"line_end":14,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":8062},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/segment.rs","byte_start":805352,"byte_end":805353,"line_start":18,"line_end":18,"column_start":9,"column_end":10},"name":"a","qualname":"::shape::segment::Segment::a","value":"na::Point<N, na::U3>","parent":{"krate":0,"index":8060},"children":[],"decl_id":null,"docs":" The segment first point.\n","sig":null,"attributes":[{"value":"/ The segment first point.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/segment.rs","byte_start":805315,"byte_end":805343,"line_start":17,"line_end":17,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":8063},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/segment.rs","byte_start":805407,"byte_end":805408,"line_start":20,"line_end":20,"column_start":9,"column_end":10},"name":"b","qualname":"::shape::segment::Segment::b","value":"na::Point<N, na::U3>","parent":{"krate":0,"index":8060},"children":[],"decl_id":null,"docs":" The segment second point.\n","sig":null,"attributes":[{"value":"/ The segment second point.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/segment.rs","byte_start":805369,"byte_end":805398,"line_start":19,"line_end":19,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8080},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/segment.rs","byte_start":805616,"byte_end":805624,"line_start":27,"line_end":27,"column_start":5,"column_end":13},"name":"OnVertex","qualname":"::shape::segment::SegmentPointLocation::OnVertex","value":"SegmentPointLocation::OnVertex(usize)","parent":{"krate":0,"index":8078},"children":[],"decl_id":null,"docs":" The point lies on a vertex.\n","sig":null,"attributes":[{"value":"/ The point lies on a vertex.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/segment.rs","byte_start":805580,"byte_end":805611,"line_start":26,"line_end":26,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8083},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/segment.rs","byte_start":805685,"byte_end":805691,"line_start":29,"line_end":29,"column_start":5,"column_end":11},"name":"OnEdge","qualname":"::shape::segment::SegmentPointLocation::OnEdge","value":"SegmentPointLocation::OnEdge([N; 2])","parent":{"krate":0,"index":8078},"children":[],"decl_id":null,"docs":" The point lies on the segment interior.\n","sig":null,"attributes":[{"value":"/ The point lies on the segment interior.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/segment.rs","byte_start":805637,"byte_end":805680,"line_start":28,"line_end":28,"column_start":5,"column_end":48}}]},{"kind":"Enum","id":{"krate":0,"index":8078},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/segment.rs","byte_start":805539,"byte_end":805559,"line_start":25,"line_end":25,"column_start":10,"column_end":30},"name":"SegmentPointLocation","qualname":"::shape::segment::SegmentPointLocation","value":"SegmentPointLocation::{OnVertex, OnEdge}","parent":null,"children":[{"krate":0,"index":8080},{"krate":0,"index":8083}],"decl_id":null,"docs":" Logical description of the location of a point on a triangle.\n","sig":null,"attributes":[{"value":"/ Logical description of the location of a point on a triangle.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/segment.rs","byte_start":805423,"byte_end":805488,"line_start":23,"line_end":23,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":5592},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/segment.rs","byte_start":805834,"byte_end":805857,"line_start":34,"line_end":34,"column_start":12,"column_end":35},"name":"barycentric_coordinates","qualname":"<SegmentPointLocation<N>>::barycentric_coordinates","value":"fn (&self) -> [N; 2]","parent":null,"children":[],"decl_id":null,"docs":" The barycentric coordinates corresponding to this point location.\n","sig":null,"attributes":[{"value":"/ The barycentric coordinates corresponding to this point location.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/segment.rs","byte_start":805753,"byte_end":805822,"line_start":33,"line_end":33,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":5597},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/segment.rs","byte_start":806290,"byte_end":806293,"line_start":52,"line_end":52,"column_start":12,"column_end":15},"name":"new","qualname":"<Segment<N>>::new","value":"fn (a: Point<N>, b: Point<N>) -> Segment<N>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new segment from two points.\n","sig":null,"attributes":[{"value":"/ Creates a new segment from two points.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/segment.rs","byte_start":806222,"byte_end":806264,"line_start":50,"line_end":50,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/segment.rs","byte_start":806269,"byte_end":806278,"line_start":51,"line_end":51,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5598},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/segment.rs","byte_start":806468,"byte_end":806478,"line_start":57,"line_end":57,"column_start":12,"column_end":22},"name":"from_array","qualname":"<Segment<N>>::from_array","value":"fn (arr: &[Point<N>; 2]) -> &Segment<N>","parent":null,"children":[],"decl_id":null,"docs":" Creates the reference to a segment from the reference to an array of two points.\n","sig":null,"attributes":[{"value":"/ Creates the reference to a segment from the reference to an array of two points.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/segment.rs","byte_start":806372,"byte_end":806456,"line_start":56,"line_end":56,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":5602},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/segment.rs","byte_start":806731,"byte_end":806732,"line_start":66,"line_end":66,"column_start":12,"column_end":13},"name":"a","qualname":"<Segment<N>>::a","value":"fn (&self) -> &Point<N>","parent":null,"children":[],"decl_id":null,"docs":" The first point of this segment.\n","sig":null,"attributes":[{"value":"/ The first point of this segment.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/segment.rs","byte_start":806601,"byte_end":806637,"line_start":63,"line_end":63,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/segment.rs","byte_start":806642,"byte_end":806651,"line_start":64,"line_end":64,"column_start":5,"column_end":14}},{"value":"deprecated(note = \"use the `self.a` public field directly.\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/segment.rs","byte_start":806656,"byte_end":806719,"line_start":65,"line_end":65,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":5603},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/segment.rs","byte_start":806913,"byte_end":806914,"line_start":73,"line_end":73,"column_start":12,"column_end":13},"name":"b","qualname":"<Segment<N>>::b","value":"fn (&self) -> &Point<N>","parent":null,"children":[],"decl_id":null,"docs":" The second point of this segment.\n","sig":null,"attributes":[{"value":"/ The second point of this segment.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/segment.rs","byte_start":806782,"byte_end":806819,"line_start":70,"line_end":70,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/segment.rs","byte_start":806824,"byte_end":806833,"line_start":71,"line_end":71,"column_start":5,"column_end":14}},{"value":"deprecated(note = \"use the `self.b` public field directly.\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/segment.rs","byte_start":806838,"byte_end":806901,"line_start":72,"line_end":72,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":5606},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/segment.rs","byte_start":807119,"byte_end":807135,"line_start":82,"line_end":82,"column_start":12,"column_end":28},"name":"scaled_direction","qualname":"<Segment<N>>::scaled_direction","value":"fn (&self) -> Vector<N>","parent":null,"children":[],"decl_id":null,"docs":" The direction of this segment scaled by its length.","sig":null,"attributes":[{"value":"/ The direction of this segment scaled by its length.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/segment.rs","byte_start":806998,"byte_end":807053,"line_start":79,"line_end":79,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/segment.rs","byte_start":807058,"byte_end":807061,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ Points from `self.a` toward `self.b`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/segment.rs","byte_start":807066,"byte_end":807107,"line_start":81,"line_end":81,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":5607},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/segment.rs","byte_start":807236,"byte_end":807242,"line_start":87,"line_end":87,"column_start":12,"column_end":18},"name":"length","qualname":"<Segment<N>>::length","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The length of this segment.\n","sig":null,"attributes":[{"value":"/ The length of this segment.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/segment.rs","byte_start":807193,"byte_end":807224,"line_start":86,"line_end":86,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":5608},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/segment.rs","byte_start":807362,"byte_end":807366,"line_start":92,"line_end":92,"column_start":12,"column_end":16},"name":"swap","qualname":"<Segment<N>>::swap","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Swaps the two vertices of this segment.\n","sig":null,"attributes":[{"value":"/ Swaps the two vertices of this segment.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/segment.rs","byte_start":807307,"byte_end":807350,"line_start":91,"line_end":91,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":5609},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/segment.rs","byte_start":807593,"byte_end":807602,"line_start":100,"line_end":100,"column_start":12,"column_end":21},"name":"direction","qualname":"<Segment<N>>::direction","value":"fn (&self) -> Option<Unit<Vector<N>>>","parent":null,"children":[],"decl_id":null,"docs":" The unit direction of this segment.","sig":null,"attributes":[{"value":"/ The unit direction of this segment.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/segment.rs","byte_start":807435,"byte_end":807474,"line_start":96,"line_end":96,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/segment.rs","byte_start":807479,"byte_end":807482,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ Points from `self.a()` toward `self.b()`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/segment.rs","byte_start":807487,"byte_end":807532,"line_start":98,"line_end":98,"column_start":5,"column_end":50}},{"value":"/ Returns `None` is both points are equal.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/segment.rs","byte_start":807537,"byte_end":807581,"line_start":99,"line_end":99,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":5610},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/segment.rs","byte_start":808295,"byte_end":808301,"line_start":119,"line_end":119,"column_start":12,"column_end":18},"name":"normal","qualname":"<Segment<N>>::normal","value":"fn (&self) -> Option<Unit<Vector<N>>>","parent":null,"children":[],"decl_id":null,"docs":" Returns `None`. Exists only for API similarity with the 2D ncollide.\n","sig":null,"attributes":[{"value":"/ Returns `None`. Exists only for API similarity with the 2D ncollide.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/segment.rs","byte_start":808182,"byte_end":808254,"line_start":117,"line_end":117,"column_start":5,"column_end":77}},{"value":"cfg(feature = \"dim3\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/segment.rs","byte_start":808259,"byte_end":808283,"line_start":118,"line_end":118,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5611},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/segment.rs","byte_start":808469,"byte_end":808480,"line_start":124,"line_end":124,"column_start":12,"column_end":23},"name":"transformed","qualname":"<Segment<N>>::transformed","value":"fn (&self, m: &Isometry<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Applies the isometry `m` to the vertices of this segment and returns the resulting segment.\n","sig":null,"attributes":[{"value":"/ Applies the isometry `m` to the vertices of this segment and returns the resulting segment.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/segment.rs","byte_start":808362,"byte_end":808457,"line_start":123,"line_end":123,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":5612},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/segment.rs","byte_start":808628,"byte_end":808636,"line_start":129,"line_end":129,"column_start":12,"column_end":20},"name":"point_at","qualname":"<Segment<N>>::point_at","value":"fn (&self, location: &SegmentPointLocation<N>) -> Point<N>","parent":null,"children":[],"decl_id":null,"docs":" Computes the point at the given location.\n","sig":null,"attributes":[{"value":"/ Computes the point at the given location.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/segment.rs","byte_start":808571,"byte_end":808616,"line_start":128,"line_end":128,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":5613},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/segment.rs","byte_start":809125,"byte_end":809150,"line_start":141,"line_end":141,"column_start":12,"column_end":37},"name":"tangent_cone_contains_dir","qualname":"<Segment<N>>::tangent_cone_contains_dir","value":"fn (&self, feature: FeatureId, m: &Isometry<N>, dir: &Unit<Vector<N>>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks that the given direction in world-space is on the tangent cone of the given `feature`.\n","sig":null,"attributes":[{"value":"/ Checks that the given direction in world-space is on the tangent cone of the given `feature`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/segment.rs","byte_start":809016,"byte_end":809113,"line_start":140,"line_end":140,"column_start":5,"column_end":102}}]},{"kind":"Mod","id":{"krate":0,"index":5626},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"shape","qualname":"::shape::shape","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","parent":null,"children":[{"krate":0,"index":5627},{"krate":0,"index":5630},{"krate":0,"index":5633},{"krate":0,"index":5636},{"krate":0,"index":5642},{"krate":0,"index":5643},{"krate":0,"index":5647},{"krate":0,"index":5648},{"krate":0,"index":5649},{"krate":0,"index":5652},{"krate":0,"index":5656},{"krate":0,"index":8101},{"krate":0,"index":5675},{"krate":0,"index":8113},{"krate":0,"index":8117},{"krate":0,"index":5681},{"krate":0,"index":5688},{"krate":0,"index":5691}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":5649},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":816992,"byte_end":817002,"line_start":11,"line_end":11,"column_start":11,"column_end":21},"name":"ShapeClone","qualname":"::shape::shape::ShapeClone","value":"ShapeClone<N: RealField>","parent":null,"children":[{"krate":0,"index":5651}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5651},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":817100,"byte_end":817109,"line_start":13,"line_end":13,"column_start":8,"column_end":17},"name":"clone_arc","qualname":"::shape::shape::ShapeClone::clone_arc","value":"fn (&self) -> Arc<dyn Shape<N>>","parent":{"krate":0,"index":5649},"children":[],"decl_id":null,"docs":" Construct an `Arc` that refers to a uniquely-owned copy of `self`\n","sig":null,"attributes":[{"value":"/ Construct an `Arc` that refers to a uniquely-owned copy of `self`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":817023,"byte_end":817092,"line_start":12,"line_end":12,"column_start":5,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":5656},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":817436,"byte_end":817441,"line_start":25,"line_end":25,"column_start":11,"column_end":16},"name":"Shape","qualname":"::shape::shape::Shape","value":"Shape<N: RealField>: Send + Sync + Downcast + ShapeClone<N>","parent":null,"children":[{"krate":0,"index":5658},{"krate":0,"index":5659},{"krate":0,"index":5660},{"krate":0,"index":5661},{"krate":0,"index":5662},{"krate":0,"index":5663},{"krate":0,"index":5664},{"krate":0,"index":5665},{"krate":0,"index":5666},{"krate":0,"index":5667},{"krate":0,"index":5668},{"krate":0,"index":5669},{"krate":0,"index":5670},{"krate":0,"index":5671},{"krate":0,"index":5672},{"krate":0,"index":5673},{"krate":0,"index":5674}],"decl_id":null,"docs":" Trait implemented by all shapes supported by ncollide.","sig":null,"attributes":[{"value":"/ Trait implemented by all shapes supported by ncollide.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":817301,"byte_end":817359,"line_start":22,"line_end":22,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":817360,"byte_end":817363,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This allows dynamic inspection of the shape capabilities.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":817364,"byte_end":817425,"line_start":24,"line_end":24,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":5658},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":817552,"byte_end":817556,"line_start":27,"line_end":27,"column_start":8,"column_end":12},"name":"aabb","qualname":"::shape::shape::Shape::aabb","value":"fn (&self, m: &Isometry<N>) -> AABB<N>","parent":{"krate":0,"index":5656},"children":[],"decl_id":null,"docs":" The AABB of `self` transformed by `m`.\n","sig":null,"attributes":[{"value":"/ The AABB of `self` transformed by `m`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":817502,"byte_end":817544,"line_start":26,"line_end":26,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":5659},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":817643,"byte_end":817653,"line_start":31,"line_end":31,"column_start":8,"column_end":18},"name":"local_aabb","qualname":"::shape::shape::Shape::local_aabb","value":"fn (&self) -> AABB<N>","parent":{"krate":0,"index":5656},"children":[],"decl_id":null,"docs":" The AABB of `self`.\n","sig":null,"attributes":[{"value":"/ The AABB of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":817598,"byte_end":817621,"line_start":29,"line_end":29,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":817626,"byte_end":817635,"line_start":30,"line_end":30,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5660},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":817801,"byte_end":817816,"line_start":37,"line_end":37,"column_start":8,"column_end":23},"name":"bounding_sphere","qualname":"::shape::shape::Shape::bounding_sphere","value":"fn (&self, m: &Isometry<N>) -> BoundingSphere<N>","parent":{"krate":0,"index":5656},"children":[],"decl_id":null,"docs":" The bounding sphere of `self` transformed by `m`.\n","sig":null,"attributes":[{"value":"/ The bounding sphere of `self` transformed by `m`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":817726,"byte_end":817779,"line_start":35,"line_end":35,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":817784,"byte_end":817793,"line_start":36,"line_end":36,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5661},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":818035,"byte_end":818056,"line_start":44,"line_end":44,"column_start":8,"column_end":29},"name":"local_bounding_sphere","qualname":"::shape::shape::Shape::local_bounding_sphere","value":"fn (&self) -> BoundingSphere<N>","parent":{"krate":0,"index":5656},"children":[],"decl_id":null,"docs":" The bounding sphere of `self`.\n","sig":null,"attributes":[{"value":"/ The bounding sphere of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":817979,"byte_end":818013,"line_start":42,"line_end":42,"column_start":5,"column_end":39}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":818018,"byte_end":818027,"line_start":43,"line_end":43,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5662},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":818463,"byte_end":818488,"line_start":52,"line_end":52,"column_start":8,"column_end":33},"name":"tangent_cone_contains_dir","qualname":"::shape::shape::Shape::tangent_cone_contains_dir","value":"fn (&self, _feature: FeatureId, _m: &Isometry<N>, _deformations: Option<&[N]>, _dir: &Unit<Vector<N>>) -> bool","parent":{"krate":0,"index":5656},"children":[],"decl_id":null,"docs":" Check if if the feature `_feature` of the `i-th` subshape of `self` transformed by `m` has a tangent\n cone that contains `dir` at the point `pt`.\n","sig":null,"attributes":[{"value":"/ Check if if the feature `_feature` of the `i-th` subshape of `self` transformed by `m` has a tangent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":818207,"byte_end":818311,"line_start":49,"line_end":49,"column_start":5,"column_end":109}},{"value":"/ cone that contains `dir` at the point `pt`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":818316,"byte_end":818363,"line_start":50,"line_end":50,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":5663},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":818809,"byte_end":818836,"line_start":63,"line_end":63,"column_start":8,"column_end":35},"name":"subshape_containing_feature","qualname":"::shape::shape::Shape::subshape_containing_feature","value":"fn (&self, _i: FeatureId) -> usize","parent":{"krate":0,"index":5656},"children":[],"decl_id":null,"docs":" Returns the id of the subshape containing the specified feature.","sig":null,"attributes":[{"value":"/ Returns the id of the subshape containing the specified feature.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":818649,"byte_end":818717,"line_start":60,"line_end":60,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":818722,"byte_end":818725,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ If several subshape contains the same feature, any one is returned.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":818730,"byte_end":818801,"line_start":62,"line_end":62,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":5664},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":818956,"byte_end":818967,"line_start":69,"line_end":69,"column_start":8,"column_end":19},"name":"as_ray_cast","qualname":"::shape::shape::Shape::as_ray_cast","value":"fn (&self) -> Option<&dyn RayCast<N>>","parent":{"krate":0,"index":5656},"children":[],"decl_id":null,"docs":" The `RayCast` implementation of `self`.\n","sig":null,"attributes":[{"value":"/ The `RayCast` implementation of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":818891,"byte_end":818934,"line_start":67,"line_end":67,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":818939,"byte_end":818948,"line_start":68,"line_end":68,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5665},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":819096,"byte_end":819110,"line_start":75,"line_end":75,"column_start":8,"column_end":22},"name":"as_point_query","qualname":"::shape::shape::Shape::as_point_query","value":"fn (&self) -> Option<&dyn PointQuery<N>>","parent":{"krate":0,"index":5656},"children":[],"decl_id":null,"docs":" The `PointQuery` implementation of `self`.\n","sig":null,"attributes":[{"value":"/ The `PointQuery` implementation of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":819028,"byte_end":819074,"line_start":73,"line_end":73,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":819079,"byte_end":819088,"line_start":74,"line_end":74,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5666},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":819261,"byte_end":819281,"line_start":81,"line_end":81,"column_start":8,"column_end":28},"name":"as_convex_polyhedron","qualname":"::shape::shape::Shape::as_convex_polyhedron","value":"fn (&self) -> Option<&dyn ConvexPolyhedron<N>>","parent":{"krate":0,"index":5656},"children":[],"decl_id":null,"docs":" The convex polyhedron representation of `self` if applicable.\n","sig":null,"attributes":[{"value":"/ The convex polyhedron representation of `self` if applicable.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":819174,"byte_end":819239,"line_start":79,"line_end":79,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":819244,"byte_end":819253,"line_start":80,"line_end":80,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5667},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":819421,"byte_end":819435,"line_start":87,"line_end":87,"column_start":8,"column_end":22},"name":"as_support_map","qualname":"::shape::shape::Shape::as_support_map","value":"fn (&self) -> Option<&dyn SupportMap<N>>","parent":{"krate":0,"index":5656},"children":[],"decl_id":null,"docs":" The support mapping of `self` if applicable.\n","sig":null,"attributes":[{"value":"/ The support mapping of `self` if applicable.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":819351,"byte_end":819399,"line_start":85,"line_end":85,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":819404,"byte_end":819413,"line_start":86,"line_end":86,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5668},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":819584,"byte_end":819602,"line_start":93,"line_end":93,"column_start":8,"column_end":26},"name":"as_composite_shape","qualname":"::shape::shape::Shape::as_composite_shape","value":"fn (&self) -> Option<&dyn CompositeShape<N>>","parent":{"krate":0,"index":5656},"children":[],"decl_id":null,"docs":" The composite shape representation of `self` if applicable.\n","sig":null,"attributes":[{"value":"/ The composite shape representation of `self` if applicable.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":819499,"byte_end":819562,"line_start":91,"line_end":91,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":819567,"byte_end":819576,"line_start":92,"line_end":92,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5669},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":819756,"byte_end":819775,"line_start":99,"line_end":99,"column_start":8,"column_end":27},"name":"as_deformable_shape","qualname":"::shape::shape::Shape::as_deformable_shape","value":"fn (&self) -> Option<&dyn DeformableShape<N>>","parent":{"krate":0,"index":5656},"children":[],"decl_id":null,"docs":" The deformable shape representation of `self` if applicable.\n","sig":null,"attributes":[{"value":"/ The deformable shape representation of `self` if applicable.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":819670,"byte_end":819734,"line_start":97,"line_end":97,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":819739,"byte_end":819748,"line_start":98,"line_end":98,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5670},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":819938,"byte_end":819961,"line_start":105,"line_end":105,"column_start":8,"column_end":31},"name":"as_deformable_shape_mut","qualname":"::shape::shape::Shape::as_deformable_shape_mut","value":"fn (&mut self) -> Option<&mut dyn DeformableShape<N>>","parent":{"krate":0,"index":5656},"children":[],"decl_id":null,"docs":" The mutable deformable shape representation of `self` if applicable.\n","sig":null,"attributes":[{"value":"/ The mutable deformable shape representation of `self` if applicable.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":819844,"byte_end":819916,"line_start":103,"line_end":103,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":819921,"byte_end":819930,"line_start":104,"line_end":104,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5671},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":820119,"byte_end":820139,"line_start":111,"line_end":111,"column_start":8,"column_end":28},"name":"is_convex_polyhedron","qualname":"::shape::shape::Shape::is_convex_polyhedron","value":"fn (&self) -> bool","parent":{"krate":0,"index":5656},"children":[],"decl_id":null,"docs":" Whether `self` uses a convex polyhedron representation.\n","sig":null,"attributes":[{"value":"/ Whether `self` uses a convex polyhedron representation.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":820038,"byte_end":820097,"line_start":109,"line_end":109,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":820102,"byte_end":820111,"line_start":110,"line_end":110,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5672},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":820299,"byte_end":820313,"line_start":117,"line_end":117,"column_start":8,"column_end":22},"name":"is_support_map","qualname":"::shape::shape::Shape::is_support_map","value":"fn (&self) -> bool","parent":{"krate":0,"index":5656},"children":[],"decl_id":null,"docs":" Whether `self` uses a support-mapping based representation.\n","sig":null,"attributes":[{"value":"/ Whether `self` uses a support-mapping based representation.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":820214,"byte_end":820277,"line_start":115,"line_end":115,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":820282,"byte_end":820291,"line_start":116,"line_end":116,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5673},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":820467,"byte_end":820485,"line_start":123,"line_end":123,"column_start":8,"column_end":26},"name":"is_composite_shape","qualname":"::shape::shape::Shape::is_composite_shape","value":"fn (&self) -> bool","parent":{"krate":0,"index":5656},"children":[],"decl_id":null,"docs":" Whether `self` uses a composite shape-based representation.\n","sig":null,"attributes":[{"value":"/ Whether `self` uses a composite shape-based representation.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":820382,"byte_end":820445,"line_start":121,"line_end":121,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":820450,"byte_end":820459,"line_start":122,"line_end":122,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5674},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":820643,"byte_end":820662,"line_start":129,"line_end":129,"column_start":8,"column_end":27},"name":"is_deformable_shape","qualname":"::shape::shape::Shape::is_deformable_shape","value":"fn (&self) -> bool","parent":{"krate":0,"index":5656},"children":[],"decl_id":null,"docs":" Whether `self` uses a composite shape-based representation.\n","sig":null,"attributes":[{"value":"/ Whether `self` uses a composite shape-based representation.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":820558,"byte_end":820621,"line_start":127,"line_end":127,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":820626,"byte_end":820635,"line_start":128,"line_end":128,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5677},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":820949,"byte_end":820957,"line_start":140,"line_end":140,"column_start":12,"column_end":20},"name":"is_shape","qualname":"<Shape<N>>::is_shape","value":"fn <T> (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if this shape has a specific type `T`.\n","sig":null,"attributes":[{"value":"/ Tests if this shape has a specific type `T`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":820875,"byte_end":820923,"line_start":138,"line_end":138,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":820928,"byte_end":820937,"line_start":139,"line_end":139,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5679},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":821070,"byte_end":821078,"line_start":146,"line_end":146,"column_start":12,"column_end":20},"name":"as_shape","qualname":"<Shape<N>>::as_shape","value":"fn <T> (&self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Performs the cast.\n","sig":null,"attributes":[{"value":"/ Performs the cast.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":821022,"byte_end":821044,"line_start":144,"line_end":144,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":821049,"byte_end":821058,"line_start":145,"line_end":145,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":8113},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":821261,"byte_end":821272,"line_start":155,"line_end":155,"column_start":12,"column_end":23},"name":"ShapeHandle","qualname":"::shape::shape::ShapeHandle","value":"","parent":null,"children":[],"decl_id":null,"docs":" A shared handle to an abstract shape.","sig":null,"attributes":[{"value":"/ A shared handle to an abstract shape.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":821152,"byte_end":821193,"line_start":151,"line_end":151,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":821194,"byte_end":821197,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ This can be mutated using COW.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":821198,"byte_end":821232,"line_start":153,"line_end":153,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":5683},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":821423,"byte_end":821426,"line_start":160,"line_end":160,"column_start":12,"column_end":15},"name":"new","qualname":"<ShapeHandle<N>>::new","value":"fn <S> (shape: S) -> ShapeHandle<N>","parent":null,"children":[],"decl_id":null,"docs":" Creates a sharable shape handle from a shape.\n","sig":null,"attributes":[{"value":"/ Creates a sharable shape handle from a shape.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":821348,"byte_end":821397,"line_start":158,"line_end":158,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":821402,"byte_end":821411,"line_start":159,"line_end":159,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5685},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":821592,"byte_end":821600,"line_start":165,"line_end":165,"column_start":12,"column_end":20},"name":"from_arc","qualname":"<ShapeHandle<N>>::from_arc","value":"fn (shape: Arc<dyn Shape<N>>) -> ShapeHandle<N>","parent":null,"children":[],"decl_id":null,"docs":" Creates a sharable shape handle from a shape trait object.\n","sig":null,"attributes":[{"value":"/ Creates a sharable shape handle from a shape trait object.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":821518,"byte_end":821580,"line_start":164,"line_end":164,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":5686},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":821752,"byte_end":821758,"line_start":170,"line_end":170,"column_start":12,"column_end":18},"name":"as_arc","qualname":"<ShapeHandle<N>>::as_arc","value":"fn (&self) -> &Arc<dyn Shape<N>>","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference the `Arc` refcounted shape object.\n","sig":null,"attributes":[{"value":"/ Gets a reference the `Arc` refcounted shape object.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":821685,"byte_end":821740,"line_start":169,"line_end":169,"column_start":5,"column_end":60}}]},{"kind":"Mod","id":{"krate":0,"index":5767},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/support_map.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"support_map","qualname":"::shape::support_map","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/support_map.rs","parent":null,"children":[{"krate":0,"index":5768},{"krate":0,"index":5772},{"krate":0,"index":5775}],"decl_id":null,"docs":" Traits for support mapping based shapes.\n","sig":null,"attributes":[{"value":"! Traits for support mapping based shapes.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/support_map.rs","byte_start":829425,"byte_end":829469,"line_start":1,"line_end":1,"column_start":1,"column_end":45}}]},{"kind":"Trait","id":{"krate":0,"index":5775},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/support_map.rs","byte_start":829734,"byte_end":829744,"line_start":10,"line_end":10,"column_start":11,"column_end":21},"name":"SupportMap","qualname":"::shape::support_map::SupportMap","value":"SupportMap<N: RealField>","parent":null,"children":[{"krate":0,"index":5777},{"krate":0,"index":5778},{"krate":0,"index":5779},{"krate":0,"index":5780}],"decl_id":null,"docs":" Traits of convex shapes representable by a support mapping function.","sig":null,"attributes":[{"value":"/ Traits of convex shapes representable by a support mapping function.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/support_map.rs","byte_start":829543,"byte_end":829615,"line_start":6,"line_end":6,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/support_map.rs","byte_start":829616,"byte_end":829619,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Parameters:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/support_map.rs","byte_start":829620,"byte_end":829637,"line_start":8,"line_end":8,"column_start":1,"column_end":18}},{"value":"/   * V - type of the support mapping direction argument and of the returned point.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/support_map.rs","byte_start":829638,"byte_end":829723,"line_start":9,"line_end":9,"column_start":1,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":5777},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/support_map.rs","byte_start":829950,"byte_end":829969,"line_start":15,"line_end":15,"column_start":8,"column_end":27},"name":"local_support_point","qualname":"::shape::support_map::SupportMap::local_support_point","value":"fn (&self, dir: &Vector<N>) -> Point<N>","parent":{"krate":0,"index":5775},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5778},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/support_map.rs","byte_start":830091,"byte_end":830117,"line_start":18,"line_end":18,"column_start":8,"column_end":34},"name":"local_support_point_toward","qualname":"::shape::support_map::SupportMap::local_support_point_toward","value":"fn (&self, dir: &Unit<Vector<N>>) -> Point<N>","parent":{"krate":0,"index":5775},"children":[],"decl_id":null,"docs":" Same as `self.local_support_point` except that `dir` is normalized.\n","sig":null,"attributes":[{"value":"/ Same as `self.local_support_point` except that `dir` is normalized.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/support_map.rs","byte_start":830012,"byte_end":830083,"line_start":17,"line_end":17,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":5779},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/support_map.rs","byte_start":830432,"byte_end":830445,"line_start":26,"line_end":26,"column_start":8,"column_end":21},"name":"support_point","qualname":"::shape::support_map::SupportMap::support_point","value":"fn (&self, transform: &Isometry<N>, dir: &Vector<N>) -> Point<N>","parent":{"krate":0,"index":5775},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5780},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/support_map.rs","byte_start":830715,"byte_end":830735,"line_start":32,"line_end":32,"column_start":8,"column_end":28},"name":"support_point_toward","qualname":"::shape::support_map::SupportMap::support_point_toward","value":"fn (&self, transform: &Isometry<N>, dir: &Unit<Vector<N>>) -> Point<N>","parent":{"krate":0,"index":5775},"children":[],"decl_id":null,"docs":" Same as `self.support_point` except that `dir` is normalized.\n","sig":null,"attributes":[{"value":"/ Same as `self.support_point` except that `dir` is normalized.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/support_map.rs","byte_start":830642,"byte_end":830707,"line_start":31,"line_end":31,"column_start":5,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":8211},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":831263,"byte_end":831274,"line_start":12,"line_end":12,"column_start":12,"column_end":23},"name":"Tetrahedron","qualname":"::shape::tetrahedron::Tetrahedron","value":"Tetrahedron { a, b, c, d }","parent":null,"children":[{"krate":0,"index":8213},{"krate":0,"index":8214},{"krate":0,"index":8215},{"krate":0,"index":8216}],"decl_id":null,"docs":" A tetrahedron with 4 vertices.\n","sig":null,"attributes":[{"value":"/ A tetrahedron with 4 vertices.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":831113,"byte_end":831147,"line_start":8,"line_end":8,"column_start":1,"column_end":35}},{"value":"repr(C)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":831211,"byte_end":831221,"line_start":10,"line_end":10,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":8213},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":831336,"byte_end":831337,"line_start":14,"line_end":14,"column_start":9,"column_end":10},"name":"a","qualname":"::shape::tetrahedron::Tetrahedron::a","value":"na::Point<N, na::U3>","parent":{"krate":0,"index":8211},"children":[],"decl_id":null,"docs":" The tetrahedron first point.\n","sig":null,"attributes":[{"value":"/ The tetrahedron first point.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":831295,"byte_end":831327,"line_start":13,"line_end":13,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":8214},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":831394,"byte_end":831395,"line_start":16,"line_end":16,"column_start":9,"column_end":10},"name":"b","qualname":"::shape::tetrahedron::Tetrahedron::b","value":"na::Point<N, na::U3>","parent":{"krate":0,"index":8211},"children":[],"decl_id":null,"docs":" The tetrahedron first point.\n","sig":null,"attributes":[{"value":"/ The tetrahedron first point.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":831353,"byte_end":831385,"line_start":15,"line_end":15,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":8215},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":831452,"byte_end":831453,"line_start":18,"line_end":18,"column_start":9,"column_end":10},"name":"c","qualname":"::shape::tetrahedron::Tetrahedron::c","value":"na::Point<N, na::U3>","parent":{"krate":0,"index":8211},"children":[],"decl_id":null,"docs":" The tetrahedron first point.\n","sig":null,"attributes":[{"value":"/ The tetrahedron first point.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":831411,"byte_end":831443,"line_start":17,"line_end":17,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":8216},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":831510,"byte_end":831511,"line_start":20,"line_end":20,"column_start":9,"column_end":10},"name":"d","qualname":"::shape::tetrahedron::Tetrahedron::d","value":"na::Point<N, na::U3>","parent":{"krate":0,"index":8211},"children":[],"decl_id":null,"docs":" The tetrahedron first point.\n","sig":null,"attributes":[{"value":"/ The tetrahedron first point.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":831469,"byte_end":831501,"line_start":19,"line_end":19,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8227},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":831712,"byte_end":831720,"line_start":27,"line_end":27,"column_start":5,"column_end":13},"name":"OnVertex","qualname":"::shape::tetrahedron::TetrahedronPointLocation::OnVertex","value":"TetrahedronPointLocation::OnVertex(usize)","parent":{"krate":0,"index":8225},"children":[],"decl_id":null,"docs":" The point lies on a vertex.\n","sig":null,"attributes":[{"value":"/ The point lies on a vertex.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":831676,"byte_end":831707,"line_start":26,"line_end":26,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8230},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":832022,"byte_end":832028,"line_start":36,"line_end":36,"column_start":5,"column_end":11},"name":"OnEdge","qualname":"::shape::tetrahedron::TetrahedronPointLocation::OnEdge","value":"TetrahedronPointLocation::OnEdge(usize, [N; 2])","parent":{"krate":0,"index":8225},"children":[],"decl_id":null,"docs":" The point lies on an edge.","sig":null,"attributes":[{"value":"/ The point lies on an edge.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":831733,"byte_end":831763,"line_start":28,"line_end":28,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":831768,"byte_end":831771,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ The 0-st edge is the segment AB.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":831776,"byte_end":831812,"line_start":30,"line_end":30,"column_start":5,"column_end":41}},{"value":"/ The 1-st edge is the segment AC.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":831817,"byte_end":831853,"line_start":31,"line_end":31,"column_start":5,"column_end":41}},{"value":"/ The 2-nd edge is the segment AD.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":831858,"byte_end":831894,"line_start":32,"line_end":32,"column_start":5,"column_end":41}},{"value":"/ The 3-rd edge is the segment BC.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":831899,"byte_end":831935,"line_start":33,"line_end":33,"column_start":5,"column_end":41}},{"value":"/ The 4-th edge is the segment BD.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":831940,"byte_end":831976,"line_start":34,"line_end":34,"column_start":5,"column_end":41}},{"value":"/ The 5-th edge is the segment CD.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":831981,"byte_end":832017,"line_start":35,"line_end":35,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8235},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":832289,"byte_end":832295,"line_start":43,"line_end":43,"column_start":5,"column_end":11},"name":"OnFace","qualname":"::shape::tetrahedron::TetrahedronPointLocation::OnFace","value":"TetrahedronPointLocation::OnFace(usize, [N; 3])","parent":{"krate":0,"index":8225},"children":[],"decl_id":null,"docs":" The point lies on a triangular face interior.","sig":null,"attributes":[{"value":"/ The point lies on a triangular face interior.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":832049,"byte_end":832098,"line_start":37,"line_end":37,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":832103,"byte_end":832106,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ The first face is the triangle ABC.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":832111,"byte_end":832150,"line_start":39,"line_end":39,"column_start":5,"column_end":44}},{"value":"/ The second face is the triangle ABD.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":832155,"byte_end":832195,"line_start":40,"line_end":40,"column_start":5,"column_end":45}},{"value":"/ The third face is the triangle ACD.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":832200,"byte_end":832239,"line_start":41,"line_end":41,"column_start":5,"column_end":44}},{"value":"/ The fourth face is the triangle BDC.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":832244,"byte_end":832284,"line_start":42,"line_end":42,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8240},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":832366,"byte_end":832373,"line_start":45,"line_end":45,"column_start":5,"column_end":12},"name":"OnSolid","qualname":"::shape::tetrahedron::TetrahedronPointLocation::OnSolid","value":"TetrahedronPointLocation::OnSolid","parent":{"krate":0,"index":8225},"children":[],"decl_id":null,"docs":" The point lies inside of the tetrahedron.\n","sig":null,"attributes":[{"value":"/ The point lies inside of the tetrahedron.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":832316,"byte_end":832361,"line_start":44,"line_end":44,"column_start":5,"column_end":50}}]},{"kind":"Enum","id":{"krate":0,"index":8225},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":831631,"byte_end":831655,"line_start":25,"line_end":25,"column_start":10,"column_end":34},"name":"TetrahedronPointLocation","qualname":"::shape::tetrahedron::TetrahedronPointLocation","value":"TetrahedronPointLocation::{OnVertex, OnEdge, OnFace, OnSolid}","parent":null,"children":[{"krate":0,"index":8227},{"krate":0,"index":8230},{"krate":0,"index":8235},{"krate":0,"index":8240}],"decl_id":null,"docs":" Logical description of the location of a point on a triangle.\n","sig":null,"attributes":[{"value":"/ Logical description of the location of a point on a triangle.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":831526,"byte_end":831591,"line_start":23,"line_end":23,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":5792},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":832599,"byte_end":832622,"line_start":52,"line_end":52,"column_start":12,"column_end":35},"name":"barycentric_coordinates","qualname":"<TetrahedronPointLocation<N>>::barycentric_coordinates","value":"fn (&self) -> Option<[N; 4]>","parent":null,"children":[],"decl_id":null,"docs":" The barycentric coordinates corresponding to this point location.","sig":null,"attributes":[{"value":"/ The barycentric coordinates corresponding to this point location.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":832431,"byte_end":832500,"line_start":49,"line_end":49,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":832505,"byte_end":832508,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the location is `TetrahedronPointLocation::OnSolid`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":832513,"byte_end":832587,"line_start":51,"line_end":51,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":5795},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":833507,"byte_end":833522,"line_start":77,"line_end":77,"column_start":12,"column_end":27},"name":"same_feature_as","qualname":"<TetrahedronPointLocation<N>>::same_feature_as","value":"fn (&self, other: &TetrahedronPointLocation<N>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if both `self` and `other` correspond to points on the same feature of a tetrahedron.\n","sig":null,"attributes":[{"value":"/ Returns `true` if both `self` and `other` correspond to points on the same feature of a tetrahedron.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":833391,"byte_end":833495,"line_start":76,"line_end":76,"column_start":5,"column_end":109}}]},{"kind":"Method","id":{"krate":0,"index":5798},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":834257,"byte_end":834260,"line_start":97,"line_end":97,"column_start":12,"column_end":15},"name":"new","qualname":"<Tetrahedron<N>>::new","value":"fn (a: Point<N>, b: Point<N>, c: Point<N>, d: Point<N>) -> Tetrahedron<N>","parent":null,"children":[],"decl_id":null,"docs":" Creates a tetrahedron from three points.\n","sig":null,"attributes":[{"value":"/ Creates a tetrahedron from three points.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":834187,"byte_end":834231,"line_start":95,"line_end":95,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":834236,"byte_end":834245,"line_start":96,"line_end":96,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5799},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":834480,"byte_end":834490,"line_start":102,"line_end":102,"column_start":12,"column_end":22},"name":"from_array","qualname":"<Tetrahedron<N>>::from_array","value":"fn (arr: &[Point<N>; 4]) -> &Tetrahedron<N>","parent":null,"children":[],"decl_id":null,"docs":" Creates the reference to a tetrahedron from the reference to an array of four points.\n","sig":null,"attributes":[{"value":"/ Creates the reference to a tetrahedron from the reference to an array of four points.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":834379,"byte_end":834468,"line_start":101,"line_end":101,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":5801},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":834716,"byte_end":834717,"line_start":109,"line_end":109,"column_start":12,"column_end":13},"name":"a","qualname":"<Tetrahedron<N>>::a","value":"fn (&self) -> &Point<N>","parent":null,"children":[],"decl_id":null,"docs":" The fist point of this tetrahedron.\n","sig":null,"attributes":[{"value":"/ The fist point of this tetrahedron.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":834583,"byte_end":834622,"line_start":106,"line_end":106,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":834627,"byte_end":834636,"line_start":107,"line_end":107,"column_start":5,"column_end":14}},{"value":"deprecated(note = \"use the `self.a` public field directly.\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":834641,"byte_end":834704,"line_start":108,"line_end":108,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":5802},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":834902,"byte_end":834903,"line_start":116,"line_end":116,"column_start":12,"column_end":13},"name":"b","qualname":"<Tetrahedron<N>>::b","value":"fn (&self) -> &Point<N>","parent":null,"children":[],"decl_id":null,"docs":" The second point of this tetrahedron.\n","sig":null,"attributes":[{"value":"/ The second point of this tetrahedron.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":834767,"byte_end":834808,"line_start":113,"line_end":113,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":834813,"byte_end":834822,"line_start":114,"line_end":114,"column_start":5,"column_end":14}},{"value":"deprecated(note = \"use the `self.b` public field directly.\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":834827,"byte_end":834890,"line_start":115,"line_end":115,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":5803},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":835087,"byte_end":835088,"line_start":123,"line_end":123,"column_start":12,"column_end":13},"name":"c","qualname":"<Tetrahedron<N>>::c","value":"fn (&self) -> &Point<N>","parent":null,"children":[],"decl_id":null,"docs":" The third point of this tetrahedron.\n","sig":null,"attributes":[{"value":"/ The third point of this tetrahedron.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":834953,"byte_end":834993,"line_start":120,"line_end":120,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":834998,"byte_end":835007,"line_start":121,"line_end":121,"column_start":5,"column_end":14}},{"value":"deprecated(note = \"use the `self.c` public field directly.\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":835012,"byte_end":835075,"line_start":122,"line_end":122,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":5804},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":835273,"byte_end":835274,"line_start":130,"line_end":130,"column_start":12,"column_end":13},"name":"d","qualname":"<Tetrahedron<N>>::d","value":"fn (&self) -> &Point<N>","parent":null,"children":[],"decl_id":null,"docs":" The fourth point of this tetrahedron.\n","sig":null,"attributes":[{"value":"/ The fourth point of this tetrahedron.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":835138,"byte_end":835179,"line_start":127,"line_end":127,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":835184,"byte_end":835193,"line_start":128,"line_end":128,"column_start":5,"column_end":14}},{"value":"deprecated(note = \"use the `self.d` public field directly.\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":835198,"byte_end":835261,"line_start":129,"line_end":129,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":5805},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":835562,"byte_end":835566,"line_start":140,"line_end":140,"column_start":12,"column_end":16},"name":"face","qualname":"<Tetrahedron<N>>::face","value":"fn (&self, i: usize) -> Triangle<N>","parent":null,"children":[],"decl_id":null,"docs":" Returns the i-th face of this tetrahedron.","sig":null,"attributes":[{"value":"/ Returns the i-th face of this tetrahedron.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":835324,"byte_end":835370,"line_start":134,"line_end":134,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":835375,"byte_end":835378,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ The 0-th face is the triangle ABC.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":835383,"byte_end":835421,"line_start":136,"line_end":136,"column_start":5,"column_end":43}},{"value":"/ The 1-st face is the triangle ABD.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":835426,"byte_end":835464,"line_start":137,"line_end":137,"column_start":5,"column_end":43}},{"value":"/ The 2-nd face is the triangle ACD.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":835469,"byte_end":835507,"line_start":138,"line_end":138,"column_start":5,"column_end":43}},{"value":"/ The 3-rd face is the triangle BCD.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":835512,"byte_end":835550,"line_start":139,"line_end":139,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":5806},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":836181,"byte_end":836189,"line_start":156,"line_end":156,"column_start":12,"column_end":20},"name":"face_ids","qualname":"<Tetrahedron<N>>::face_ids","value":"fn (i: usize) -> (usize, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Returns the i-th face of this tetrahedron.","sig":null,"attributes":[{"value":"/ Returns the i-th face of this tetrahedron.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":835943,"byte_end":835989,"line_start":150,"line_end":150,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":835994,"byte_end":835997,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ The 0-th face is the triangle ABC.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":836002,"byte_end":836040,"line_start":152,"line_end":152,"column_start":5,"column_end":43}},{"value":"/ The 1-st face is the triangle ABD.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":836045,"byte_end":836083,"line_start":153,"line_end":153,"column_start":5,"column_end":43}},{"value":"/ The 2-nd face is the triangle ACD.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":836088,"byte_end":836126,"line_start":154,"line_end":154,"column_start":5,"column_end":43}},{"value":"/ The 3-rd face is the triangle BCD.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":836131,"byte_end":836169,"line_start":155,"line_end":155,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":5807},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":836769,"byte_end":836773,"line_start":174,"line_end":174,"column_start":12,"column_end":16},"name":"edge","qualname":"<Tetrahedron<N>>::edge","value":"fn (&self, i: usize) -> Segment<N>","parent":null,"children":[],"decl_id":null,"docs":" Returns the i-th edge of this tetrahedron.","sig":null,"attributes":[{"value":"/ Returns the i-th edge of this tetrahedron.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":836457,"byte_end":836503,"line_start":166,"line_end":166,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":836508,"byte_end":836511,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ The 0-st edge is the segment AB.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":836516,"byte_end":836552,"line_start":168,"line_end":168,"column_start":5,"column_end":41}},{"value":"/ The 1-st edge is the segment AC.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":836557,"byte_end":836593,"line_start":169,"line_end":169,"column_start":5,"column_end":41}},{"value":"/ The 2-nd edge is the segment AD.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":836598,"byte_end":836634,"line_start":170,"line_end":170,"column_start":5,"column_end":41}},{"value":"/ The 3-rd edge is the segment BC.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":836639,"byte_end":836675,"line_start":171,"line_end":171,"column_start":5,"column_end":41}},{"value":"/ The 4-th edge is the segment BD.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":836680,"byte_end":836716,"line_start":172,"line_end":172,"column_start":5,"column_end":41}},{"value":"/ The 5-th edge is the segment CD.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":836721,"byte_end":836757,"line_start":173,"line_end":173,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":5808},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":837551,"byte_end":837559,"line_start":194,"line_end":194,"column_start":12,"column_end":20},"name":"edge_ids","qualname":"<Tetrahedron<N>>::edge_ids","value":"fn (i: usize) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Returns the indices of the vertices of the i-th edge of this tetrahedron.","sig":null,"attributes":[{"value":"/ Returns the indices of the vertices of the i-th edge of this tetrahedron.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":837208,"byte_end":837285,"line_start":186,"line_end":186,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":837290,"byte_end":837293,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ The 0-st edge is the segment AB.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":837298,"byte_end":837334,"line_start":188,"line_end":188,"column_start":5,"column_end":41}},{"value":"/ The 1-st edge is the segment AC.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":837339,"byte_end":837375,"line_start":189,"line_end":189,"column_start":5,"column_end":41}},{"value":"/ The 2-nd edge is the segment AD.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":837380,"byte_end":837416,"line_start":190,"line_end":190,"column_start":5,"column_end":41}},{"value":"/ The 3-rd edge is the segment BC.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":837421,"byte_end":837457,"line_start":191,"line_end":191,"column_start":5,"column_end":41}},{"value":"/ The 4-th edge is the segment BD.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":837462,"byte_end":837498,"line_start":192,"line_end":192,"column_start":5,"column_end":41}},{"value":"/ The 5-th edge is the segment CD.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":837503,"byte_end":837539,"line_start":193,"line_end":193,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":5809},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":838042,"byte_end":838065,"line_start":209,"line_end":209,"column_start":12,"column_end":35},"name":"barycentric_coordinates","qualname":"<Tetrahedron<N>>::barycentric_coordinates","value":"fn (&self, p: &Point<N>) -> Option<[N; 4]>","parent":null,"children":[],"decl_id":null,"docs":" Computes the barycentric coordinates of the given point in the coordinate system of this tetrahedron.","sig":null,"attributes":[{"value":"/ Computes the barycentric coordinates of the given point in the coordinate system of this tetrahedron.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":837859,"byte_end":837964,"line_start":206,"line_end":206,"column_start":5,"column_end":110}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":837969,"byte_end":837972,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if this tetrahedron is degenerate.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":837977,"byte_end":838030,"line_start":208,"line_end":208,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":8250},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":839045,"byte_end":839053,"line_start":18,"line_end":18,"column_start":12,"column_end":20},"name":"Triangle","qualname":"::shape::triangle::Triangle","value":"Triangle { a, b, c }","parent":null,"children":[{"krate":0,"index":8252},{"krate":0,"index":8253},{"krate":0,"index":8254}],"decl_id":null,"docs":" A triangle shape.\n","sig":null,"attributes":[{"value":"/ A triangle shape.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":838897,"byte_end":838918,"line_start":14,"line_end":14,"column_start":1,"column_end":22}},{"value":"repr(C)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":838982,"byte_end":838992,"line_start":16,"line_end":16,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":8252},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":839112,"byte_end":839113,"line_start":20,"line_end":20,"column_start":9,"column_end":10},"name":"a","qualname":"::shape::triangle::Triangle::a","value":"na::Point<N, na::U3>","parent":{"krate":0,"index":8250},"children":[],"decl_id":null,"docs":" The triangle first point.\n","sig":null,"attributes":[{"value":"/ The triangle first point.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":839074,"byte_end":839103,"line_start":19,"line_end":19,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":8253},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":839168,"byte_end":839169,"line_start":22,"line_end":22,"column_start":9,"column_end":10},"name":"b","qualname":"::shape::triangle::Triangle::b","value":"na::Point<N, na::U3>","parent":{"krate":0,"index":8250},"children":[],"decl_id":null,"docs":" The triangle second point.\n","sig":null,"attributes":[{"value":"/ The triangle second point.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":839129,"byte_end":839159,"line_start":21,"line_end":21,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":8254},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":839223,"byte_end":839224,"line_start":24,"line_end":24,"column_start":9,"column_end":10},"name":"c","qualname":"::shape::triangle::Triangle::c","value":"na::Point<N, na::U3>","parent":{"krate":0,"index":8250},"children":[],"decl_id":null,"docs":" The triangle third point.\n","sig":null,"attributes":[{"value":"/ The triangle third point.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":839185,"byte_end":839214,"line_start":23,"line_end":23,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8271},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":839414,"byte_end":839422,"line_start":31,"line_end":31,"column_start":5,"column_end":13},"name":"OnVertex","qualname":"::shape::triangle::TrianglePointLocation::OnVertex","value":"TrianglePointLocation::OnVertex(usize)","parent":{"krate":0,"index":8269},"children":[],"decl_id":null,"docs":" The point lies on a vertex.\n","sig":null,"attributes":[{"value":"/ The point lies on a vertex.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":839378,"byte_end":839409,"line_start":30,"line_end":30,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8274},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":839774,"byte_end":839780,"line_start":39,"line_end":39,"column_start":5,"column_end":11},"name":"OnEdge","qualname":"::shape::triangle::TrianglePointLocation::OnEdge","value":"TrianglePointLocation::OnEdge(usize, [N; 2])","parent":{"krate":0,"index":8269},"children":[],"decl_id":null,"docs":" The point lies on an edge.","sig":null,"attributes":[{"value":"/ The point lies on an edge.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":839435,"byte_end":839465,"line_start":32,"line_end":32,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":839470,"byte_end":839473,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ The 0-st edge is the segment AB.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":839478,"byte_end":839514,"line_start":34,"line_end":34,"column_start":5,"column_end":41}},{"value":"/ The 1-st edge is the segment BC.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":839519,"byte_end":839555,"line_start":35,"line_end":35,"column_start":5,"column_end":41}},{"value":"/ The 2-nd edge is the segment AC.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":839560,"byte_end":839596,"line_start":36,"line_end":36,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8279},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":840106,"byte_end":840112,"line_start":45,"line_end":45,"column_start":5,"column_end":11},"name":"OnFace","qualname":"::shape::triangle::TrianglePointLocation::OnFace","value":"TrianglePointLocation::OnFace(usize, [N; 3])","parent":{"krate":0,"index":8269},"children":[],"decl_id":null,"docs":" The point lies on the triangle interior.","sig":null,"attributes":[{"value":"/ The point lies on the triangle interior.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":839801,"byte_end":839845,"line_start":40,"line_end":40,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":839850,"byte_end":839853,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ The integer indicates on which side of the face the point is. 0 indicates the point","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":839858,"byte_end":839945,"line_start":42,"line_end":42,"column_start":5,"column_end":92}},{"value":"/ is on the half-space toward the CW normal of the triangle. 1 indicates the point is on the other","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":839950,"byte_end":840050,"line_start":43,"line_end":43,"column_start":5,"column_end":105}},{"value":"/ half-space. This is always set to 0 in 2D.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":840055,"byte_end":840101,"line_start":44,"line_end":44,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8284},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":840210,"byte_end":840217,"line_start":47,"line_end":47,"column_start":5,"column_end":12},"name":"OnSolid","qualname":"::shape::triangle::TrianglePointLocation::OnSolid","value":"TrianglePointLocation::OnSolid","parent":{"krate":0,"index":8269},"children":[],"decl_id":null,"docs":" The point lies on the triangle interior (for \"solid\" point queries).\n","sig":null,"attributes":[{"value":"/ The point lies on the triangle interior (for \"solid\" point queries).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":840133,"byte_end":840205,"line_start":46,"line_end":46,"column_start":5,"column_end":77}}]},{"kind":"Enum","id":{"krate":0,"index":8269},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":839336,"byte_end":839357,"line_start":29,"line_end":29,"column_start":10,"column_end":31},"name":"TrianglePointLocation","qualname":"::shape::triangle::TrianglePointLocation","value":"TrianglePointLocation::{OnVertex, OnEdge, OnFace, OnSolid}","parent":null,"children":[{"krate":0,"index":8271},{"krate":0,"index":8274},{"krate":0,"index":8279},{"krate":0,"index":8284}],"decl_id":null,"docs":" Description of the location of a point on a triangle.\n","sig":null,"attributes":[{"value":"/ Description of the location of a point on a triangle.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":839239,"byte_end":839296,"line_start":27,"line_end":27,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":5831},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":840437,"byte_end":840460,"line_start":54,"line_end":54,"column_start":12,"column_end":35},"name":"barycentric_coordinates","qualname":"<TrianglePointLocation<N>>::barycentric_coordinates","value":"fn (&self) -> Option<[N; 3]>","parent":null,"children":[],"decl_id":null,"docs":" The barycentric coordinates corresponding to this point location.","sig":null,"attributes":[{"value":"/ The barycentric coordinates corresponding to this point location.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":840272,"byte_end":840341,"line_start":51,"line_end":51,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":840346,"byte_end":840349,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the location is `TrianglePointLocation::OnSolid`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":840354,"byte_end":840425,"line_start":53,"line_end":53,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":5834},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":841381,"byte_end":841391,"line_start":84,"line_end":84,"column_start":12,"column_end":22},"name":"is_on_face","qualname":"<TrianglePointLocation<N>>::is_on_face","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the point is located on the relative interior of the triangle.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the point is located on the relative interior of the triangle.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":841285,"byte_end":841369,"line_start":83,"line_end":83,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":5837},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":841643,"byte_end":841646,"line_start":96,"line_end":96,"column_start":12,"column_end":15},"name":"new","qualname":"<Triangle<N>>::new","value":"fn (a: Point<N>, b: Point<N>, c: Point<N>) -> Triangle<N>","parent":null,"children":[],"decl_id":null,"docs":" Creates a triangle from three points.\n","sig":null,"attributes":[{"value":"/ Creates a triangle from three points.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":841576,"byte_end":841617,"line_start":94,"line_end":94,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":841622,"byte_end":841631,"line_start":95,"line_end":95,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5838},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":841842,"byte_end":841852,"line_start":101,"line_end":101,"column_start":12,"column_end":22},"name":"from_array","qualname":"<Triangle<N>>::from_array","value":"fn (arr: &[Point<N>; 3]) -> &Triangle<N>","parent":null,"children":[],"decl_id":null,"docs":" Creates the reference to a triangle from the reference to an array of three points.\n","sig":null,"attributes":[{"value":"/ Creates the reference to a triangle from the reference to an array of three points.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":841743,"byte_end":841830,"line_start":100,"line_end":100,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":5840},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":842072,"byte_end":842073,"line_start":108,"line_end":108,"column_start":12,"column_end":13},"name":"a","qualname":"<Triangle<N>>::a","value":"fn (&self) -> &Point<N>","parent":null,"children":[],"decl_id":null,"docs":" The fist point of this triangle.\n","sig":null,"attributes":[{"value":"/ The fist point of this triangle.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":841942,"byte_end":841978,"line_start":105,"line_end":105,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":841983,"byte_end":841992,"line_start":106,"line_end":106,"column_start":5,"column_end":14}},{"value":"deprecated(note = \"use the `self.a` public field directly.\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":841997,"byte_end":842060,"line_start":107,"line_end":107,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":5841},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":842255,"byte_end":842256,"line_start":115,"line_end":115,"column_start":12,"column_end":13},"name":"b","qualname":"<Triangle<N>>::b","value":"fn (&self) -> &Point<N>","parent":null,"children":[],"decl_id":null,"docs":" The second point of this triangle.\n","sig":null,"attributes":[{"value":"/ The second point of this triangle.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":842123,"byte_end":842161,"line_start":112,"line_end":112,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":842166,"byte_end":842175,"line_start":113,"line_end":113,"column_start":5,"column_end":14}},{"value":"deprecated(note = \"use the `self.b` public field directly.\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":842180,"byte_end":842243,"line_start":114,"line_end":114,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":5842},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":842437,"byte_end":842438,"line_start":122,"line_end":122,"column_start":12,"column_end":13},"name":"c","qualname":"<Triangle<N>>::c","value":"fn (&self) -> &Point<N>","parent":null,"children":[],"decl_id":null,"docs":" The third point of this triangle.\n","sig":null,"attributes":[{"value":"/ The third point of this triangle.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":842306,"byte_end":842343,"line_start":119,"line_end":119,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":842348,"byte_end":842357,"line_start":120,"line_end":120,"column_start":5,"column_end":14}},{"value":"deprecated(note = \"use the `self.c` public field directly.\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":842362,"byte_end":842425,"line_start":121,"line_end":121,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":5843},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":842587,"byte_end":842595,"line_start":128,"line_end":128,"column_start":12,"column_end":20},"name":"vertices","qualname":"<Triangle<N>>::vertices","value":"fn (&self) -> &[Point<N>; 3]","parent":null,"children":[],"decl_id":null,"docs":" Reference to an array containing the three vertices of this triangle.\n","sig":null,"attributes":[{"value":"/ Reference to an array containing the three vertices of this triangle.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":842488,"byte_end":842561,"line_start":126,"line_end":126,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":842566,"byte_end":842575,"line_start":127,"line_end":127,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5845},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":842882,"byte_end":842888,"line_start":137,"line_end":137,"column_start":12,"column_end":18},"name":"normal","qualname":"<Triangle<N>>::normal","value":"fn (&self) -> Option<Unit<Vector<N>>>","parent":null,"children":[],"decl_id":null,"docs":" The normal of this triangle assuming it is oriented ccw.","sig":null,"attributes":[{"value":"/ The normal of this triangle assuming it is oriented ccw.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":842674,"byte_end":842734,"line_start":132,"line_end":132,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":842739,"byte_end":842742,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ The normal points such that it is collinear to `AB × AC` (where `×` denotes the cross","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":842747,"byte_end":842838,"line_start":134,"line_end":134,"column_start":5,"column_end":94}},{"value":"/ product).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":842843,"byte_end":842856,"line_start":135,"line_end":135,"column_start":5,"column_end":18}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":842861,"byte_end":842870,"line_start":136,"line_end":136,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5846},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":843079,"byte_end":843084,"line_start":143,"line_end":143,"column_start":12,"column_end":17},"name":"edges","qualname":"<Triangle<N>>::edges","value":"fn (&self) -> [Segment<N>; 3]","parent":null,"children":[],"decl_id":null,"docs":" The three edges of this triangle: [AB, BC, CA].\n","sig":null,"attributes":[{"value":"/ The three edges of this triangle: [AB, BC, CA].","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":843002,"byte_end":843053,"line_start":141,"line_end":141,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":843058,"byte_end":843067,"line_start":142,"line_end":142,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5848},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":843356,"byte_end":843367,"line_start":153,"line_end":153,"column_start":12,"column_end":23},"name":"transformed","qualname":"<Triangle<N>>::transformed","value":"fn (&self, m: &Isometry<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new triangle with vertices transformed by `m`.\n","sig":null,"attributes":[{"value":"/ Returns a new triangle with vertices transformed by `m`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":843270,"byte_end":843330,"line_start":151,"line_end":151,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":843335,"byte_end":843344,"line_start":152,"line_end":152,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5849},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":843574,"byte_end":843597,"line_start":158,"line_end":158,"column_start":12,"column_end":35},"name":"edges_scaled_directions","qualname":"<Triangle<N>>::edges_scaled_directions","value":"fn (&self) -> [Vector<N>; 3]","parent":null,"children":[],"decl_id":null,"docs":" The three edges scaled directions of this triangle: [B - A, C - B, A - C].\n","sig":null,"attributes":[{"value":"/ The three edges scaled directions of this triangle: [B - A, C - B, A - C].","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":843470,"byte_end":843548,"line_start":156,"line_end":156,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":843553,"byte_end":843562,"line_start":157,"line_end":157,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5851},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":843881,"byte_end":843894,"line_start":167,"line_end":167,"column_start":12,"column_end":25},"name":"scaled_normal","qualname":"<Triangle<N>>::scaled_normal","value":"fn (&self) -> Vector<N>","parent":null,"children":[],"decl_id":null,"docs":" A vector normal of this triangle.","sig":null,"attributes":[{"value":"/ A vector normal of this triangle.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":843696,"byte_end":843733,"line_start":162,"line_end":162,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":843738,"byte_end":843741,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ The vector points such that it is collinear to `AB × AC` (where `×` denotes the cross","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":843746,"byte_end":843837,"line_start":164,"line_end":164,"column_start":5,"column_end":94}},{"value":"/ product).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":843842,"byte_end":843855,"line_start":165,"line_end":165,"column_start":5,"column_end":18}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":843860,"byte_end":843869,"line_start":166,"line_end":166,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5852},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":844238,"byte_end":844252,"line_start":178,"line_end":178,"column_start":12,"column_end":26},"name":"extents_on_dir","qualname":"<Triangle<N>>::extents_on_dir","value":"fn (&self, dir: &Unit<Vector<N>>) -> (N, N)","parent":null,"children":[],"decl_id":null,"docs":" Computes the extents of this triangle on the given direction.","sig":null,"attributes":[{"value":"/ Computes the extents of this triangle on the given direction.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":844018,"byte_end":844083,"line_start":173,"line_end":173,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":844088,"byte_end":844091,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ This computes the min and max values of the dot products between each","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":844096,"byte_end":844169,"line_start":175,"line_end":175,"column_start":5,"column_end":78}},{"value":"/ vertex of this triangle and `dir`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":844174,"byte_end":844212,"line_start":176,"line_end":176,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":844217,"byte_end":844226,"line_start":177,"line_end":177,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5853},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":844961,"byte_end":844986,"line_start":206,"line_end":206,"column_start":12,"column_end":37},"name":"tangent_cone_contains_dir","qualname":"<Triangle<N>>::tangent_cone_contains_dir","value":"fn (&self, feature: FeatureId, m: &Isometry<N>, dir: &Unit<Vector<N>>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks that the given direction in world-space is on the tangent cone of the given `feature`.\n","sig":null,"attributes":[{"value":"/ Checks that the given direction in world-space is on the tangent cone of the given `feature`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":844809,"byte_end":844906,"line_start":203,"line_end":203,"column_start":5,"column_end":102}},{"value":"cfg(feature = \"dim3\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":844911,"byte_end":844935,"line_start":204,"line_end":204,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":844940,"byte_end":844949,"line_start":205,"line_end":205,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":8304},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":853318,"byte_end":853336,"line_start":34,"line_end":34,"column_start":12,"column_end":30},"name":"FaceAdjacentToEdge","qualname":"::shape::trimesh::FaceAdjacentToEdge","value":"FaceAdjacentToEdge { face_id, edge_id }","parent":null,"children":[{"krate":0,"index":8305},{"krate":0,"index":8306}],"decl_id":null,"docs":" Description of a face adjascent to an edge.\n","sig":null,"attributes":[{"value":"/ Description of a face adjascent to an edge.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":853259,"byte_end":853306,"line_start":33,"line_end":33,"column_start":1,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":8305},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":853374,"byte_end":853381,"line_start":36,"line_end":36,"column_start":9,"column_end":16},"name":"face_id","qualname":"::shape::trimesh::FaceAdjacentToEdge::face_id","value":"usize","parent":{"krate":0,"index":8304},"children":[],"decl_id":null,"docs":" Index of the face.\n","sig":null,"attributes":[{"value":"/ Index of the face.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":853343,"byte_end":853365,"line_start":35,"line_end":35,"column_start":5,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":8306},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":853450,"byte_end":853457,"line_start":38,"line_end":38,"column_start":9,"column_end":16},"name":"edge_id","qualname":"::shape::trimesh::FaceAdjacentToEdge::edge_id","value":"usize","parent":{"krate":0,"index":8304},"children":[],"decl_id":null,"docs":" Index of the edge the edge is adjascent to.\n","sig":null,"attributes":[{"value":"/ Index of the edge the edge is adjascent to.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":853394,"byte_end":853441,"line_start":37,"line_end":37,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":8309},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":853727,"byte_end":853738,"line_start":50,"line_end":50,"column_start":12,"column_end":23},"name":"TriMeshFace","qualname":"::shape::trimesh::TriMeshFace","value":"TriMeshFace { indices, edges, normal, side_normals }","parent":null,"children":[{"krate":0,"index":8311},{"krate":0,"index":8312},{"krate":0,"index":8313},{"krate":0,"index":8314},{"krate":0,"index":8315}],"decl_id":null,"docs":" A face of a triangle mesh.\n","sig":null,"attributes":[{"value":"/ A face of a triangle mesh.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":853685,"byte_end":853715,"line_start":49,"line_end":49,"column_start":1,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":8311},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":853809,"byte_end":853816,"line_start":52,"line_end":52,"column_start":9,"column_end":16},"name":"indices","qualname":"::shape::trimesh::TriMeshFace::indices","value":"na::Point<usize, na::U3>","parent":{"krate":0,"index":8309},"children":[],"decl_id":null,"docs":" Indices of the vertices of this face.\n","sig":null,"attributes":[{"value":"/ Indices of the vertices of this face.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":853759,"byte_end":853800,"line_start":51,"line_end":51,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":8312},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":853884,"byte_end":853889,"line_start":54,"line_end":54,"column_start":9,"column_end":14},"name":"edges","qualname":"::shape::trimesh::TriMeshFace::edges","value":"na::Point<usize, na::U3>","parent":{"krate":0,"index":8309},"children":[],"decl_id":null,"docs":" Indices of the edges of this face.\n","sig":null,"attributes":[{"value":"/ Indices of the edges of this face.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":853837,"byte_end":853875,"line_start":53,"line_end":53,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":8314},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":853992,"byte_end":853998,"line_start":57,"line_end":57,"column_start":9,"column_end":15},"name":"normal","qualname":"::shape::trimesh::TriMeshFace::normal","value":"std::option::Option<na::Unit<na::Matrix<N, na::U3, na::U1, <na::DefaultAllocator as na::allocator::Allocator<N, na::U3>>::Buffer>>>","parent":{"krate":0,"index":8309},"children":[],"decl_id":null,"docs":" The normal of this face if it is not degenerate.\n","sig":null,"attributes":[{"value":"/ The normal of this face if it is not degenerate.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":853931,"byte_end":853983,"line_start":56,"line_end":56,"column_start":5,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":8315},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":854083,"byte_end":854095,"line_start":59,"line_end":59,"column_start":9,"column_end":21},"name":"side_normals","qualname":"::shape::trimesh::TriMeshFace::side_normals","value":"std::option::Option<[na::Unit<na::Matrix<N, na::U3, na::U1, <na::DefaultAllocator as na::allocator::Allocator<N, na::U3>>::Buffer>>; 3]>","parent":{"krate":0,"index":8309},"children":[],"decl_id":null,"docs":" Outward edge normals on the face's plane.\n","sig":null,"attributes":[{"value":"/ Outward edge normals on the face's plane.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":854029,"byte_end":854074,"line_start":58,"line_end":58,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":8320},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":854253,"byte_end":854264,"line_start":65,"line_end":65,"column_start":12,"column_end":23},"name":"TriMeshEdge","qualname":"::shape::trimesh::TriMeshEdge","value":"TriMeshEdge { indices, adj_faces }","parent":null,"children":[{"krate":0,"index":8321},{"krate":0,"index":8322}],"decl_id":null,"docs":" An edge of a triangle mesh.\n","sig":null,"attributes":[{"value":"/ An edge of a triangle mesh.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":854210,"byte_end":854241,"line_start":64,"line_end":64,"column_start":1,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":8321},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":854309,"byte_end":854316,"line_start":67,"line_end":67,"column_start":9,"column_end":16},"name":"indices","qualname":"::shape::trimesh::TriMeshEdge::indices","value":"na::Point<usize, na::U2>","parent":{"krate":0,"index":8320},"children":[],"decl_id":null,"docs":" The indices of this edge.\n","sig":null,"attributes":[{"value":"/ The indices of this edge.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":854271,"byte_end":854300,"line_start":66,"line_end":66,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":8322},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":854383,"byte_end":854392,"line_start":69,"line_end":69,"column_start":9,"column_end":18},"name":"adj_faces","qualname":"::shape::trimesh::TriMeshEdge::adj_faces","value":"(shape::trimesh::FaceAdjacentToEdge, shape::trimesh::FaceAdjacentToEdge)","parent":{"krate":0,"index":8320},"children":[],"decl_id":null,"docs":" The faces adjascent to this edge.\n","sig":null,"attributes":[{"value":"/ The faces adjascent to this edge.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":854337,"byte_end":854374,"line_start":68,"line_end":68,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":8325},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":854563,"byte_end":854576,"line_start":75,"line_end":75,"column_start":12,"column_end":25},"name":"TriMeshVertex","qualname":"::shape::trimesh::TriMeshVertex","value":"TriMeshVertex { adj_faces, adj_vertices }","parent":null,"children":[{"krate":0,"index":8326},{"krate":0,"index":8327}],"decl_id":null,"docs":" A vertex of a triangle mesh.\n","sig":null,"attributes":[{"value":"/ A vertex of a triangle mesh.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":854519,"byte_end":854551,"line_start":74,"line_end":74,"column_start":1,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":8326},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":854643,"byte_end":854652,"line_start":77,"line_end":77,"column_start":9,"column_end":18},"name":"adj_faces","qualname":"::shape::trimesh::TriMeshVertex::adj_faces","value":"std::ops::Range<usize>","parent":{"krate":0,"index":8325},"children":[],"decl_id":null,"docs":" Indirect indices of this vertex adjacent faces.\n","sig":null,"attributes":[{"value":"/ Indirect indices of this vertex adjacent faces.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":854583,"byte_end":854634,"line_start":76,"line_end":76,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":8327},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":854735,"byte_end":854747,"line_start":79,"line_end":79,"column_start":9,"column_end":21},"name":"adj_vertices","qualname":"::shape::trimesh::TriMeshVertex::adj_vertices","value":"std::ops::Range<usize>","parent":{"krate":0,"index":8325},"children":[],"decl_id":null,"docs":" Indirect indices of this vertex adjacent vertices.\n","sig":null,"attributes":[{"value":"/ Indirect indices of this vertex adjacent vertices.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":854672,"byte_end":854726,"line_start":78,"line_end":78,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":8330},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":854881,"byte_end":854888,"line_start":85,"line_end":85,"column_start":12,"column_end":19},"name":"TriMesh","qualname":"::shape::trimesh::TriMesh","value":"TriMesh {  }","parent":null,"children":[{"krate":0,"index":8332},{"krate":0,"index":8333},{"krate":0,"index":8334},{"krate":0,"index":8335},{"krate":0,"index":8336},{"krate":0,"index":8337},{"krate":0,"index":8338},{"krate":0,"index":8339},{"krate":0,"index":8340},{"krate":0,"index":8341}],"decl_id":null,"docs":" A 3d triangle mesh.\n","sig":null,"attributes":[{"value":"/ A 3d triangle mesh.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":854766,"byte_end":854789,"line_start":82,"line_end":82,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":5916},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":855286,"byte_end":855289,"line_start":100,"line_end":100,"column_start":12,"column_end":15},"name":"new","qualname":"<TriMesh<N>>::new","value":"fn (points: Vec<Point<N>>, indices: Vec<Point3<usize>>, uvs: Option<Vec<Point2<N>>>) -> TriMesh<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new mesh.\n","sig":null,"attributes":[{"value":"/ Builds a new mesh.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":855252,"byte_end":855274,"line_start":99,"line_end":99,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":5922},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":863307,"byte_end":863311,"line_start":336,"line_end":336,"column_start":12,"column_end":16},"name":"aabb","qualname":"<TriMesh<N>>::aabb","value":"fn (&self) -> &AABB<N>","parent":null,"children":[],"decl_id":null,"docs":" The triangle mesh's AABB.\n","sig":null,"attributes":[{"value":"/ The triangle mesh's AABB.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":863252,"byte_end":863281,"line_start":334,"line_end":334,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":863286,"byte_end":863295,"line_start":335,"line_end":335,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5923},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":863504,"byte_end":863510,"line_start":344,"line_end":344,"column_start":12,"column_end":18},"name":"points","qualname":"<TriMesh<N>>::points","value":"fn (&self) -> &[Point<N>]","parent":null,"children":[],"decl_id":null,"docs":" The points of this mesh.\n","sig":null,"attributes":[{"value":"/ The points of this mesh.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":863450,"byte_end":863478,"line_start":342,"line_end":342,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":863483,"byte_end":863492,"line_start":343,"line_end":343,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5924},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":863620,"byte_end":863625,"line_start":350,"line_end":350,"column_start":12,"column_end":17},"name":"faces","qualname":"<TriMesh<N>>::faces","value":"fn (&self) -> &[TriMeshFace<N>]","parent":null,"children":[],"decl_id":null,"docs":" The faces of this mesh.\n","sig":null,"attributes":[{"value":"/ The faces of this mesh.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":863567,"byte_end":863594,"line_start":348,"line_end":348,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":863599,"byte_end":863608,"line_start":349,"line_end":349,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5925},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":863740,"byte_end":863745,"line_start":356,"line_end":356,"column_start":12,"column_end":17},"name":"edges","qualname":"<TriMesh<N>>::edges","value":"fn (&self) -> &[TriMeshEdge]","parent":null,"children":[],"decl_id":null,"docs":" The edges of this mesh.\n","sig":null,"attributes":[{"value":"/ The edges of this mesh.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":863687,"byte_end":863714,"line_start":354,"line_end":354,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":863719,"byte_end":863728,"line_start":355,"line_end":355,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5926},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":863860,"byte_end":863868,"line_start":362,"line_end":362,"column_start":12,"column_end":20},"name":"vertices","qualname":"<TriMesh<N>>::vertices","value":"fn (&self) -> &[TriMeshVertex]","parent":null,"children":[],"decl_id":null,"docs":" The vertices of this mesh.\n","sig":null,"attributes":[{"value":"/ The vertices of this mesh.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":863804,"byte_end":863834,"line_start":360,"line_end":360,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":863839,"byte_end":863848,"line_start":361,"line_end":361,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5927},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":864004,"byte_end":864016,"line_start":367,"line_end":367,"column_start":12,"column_end":24},"name":"transform_by","qualname":"<TriMesh<N>>::transform_by","value":"fn (&mut self, transform: &Isometry<N>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Applies in-place a transformation to this triangle mesh.\n","sig":null,"attributes":[{"value":"/ Applies in-place a transformation to this triangle mesh.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":863932,"byte_end":863992,"line_start":366,"line_end":366,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":5928},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":864210,"byte_end":864221,"line_start":374,"line_end":374,"column_start":12,"column_end":23},"name":"transformed","qualname":"<TriMesh<N>>::transformed","value":"fn (mut self, transform: &Isometry<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Applies a transformation to this triangle mesh.\n","sig":null,"attributes":[{"value":"/ Applies a transformation to this triangle mesh.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":864147,"byte_end":864198,"line_start":373,"line_end":373,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":5929},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":864404,"byte_end":864412,"line_start":380,"line_end":380,"column_start":12,"column_end":20},"name":"scale_by","qualname":"<TriMesh<N>>::scale_by","value":"fn (&mut self, scale: &Vector<N>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Applies in-place a non-uniform scale to this triangle mesh.\n","sig":null,"attributes":[{"value":"/ Applies in-place a non-uniform scale to this triangle mesh.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":864329,"byte_end":864392,"line_start":379,"line_end":379,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":5930},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":864619,"byte_end":864625,"line_start":387,"line_end":387,"column_start":12,"column_end":18},"name":"scaled","qualname":"<TriMesh<N>>::scaled","value":"fn (mut self, scale: &Vector<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Applies a non-uniform scale to this triangle mesh.\n","sig":null,"attributes":[{"value":"/ Applies a non-uniform scale to this triangle mesh.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":864553,"byte_end":864607,"line_start":386,"line_end":386,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":5931},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":864857,"byte_end":864865,"line_start":396,"line_end":396,"column_start":12,"column_end":20},"name":"oriented","qualname":"<TriMesh<N>>::oriented","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether this trimesh is considered is oriented or not.","sig":null,"attributes":[{"value":"/ Whether this trimesh is considered is oriented or not.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":864719,"byte_end":864777,"line_start":392,"line_end":392,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":864782,"byte_end":864785,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ By default a trimesh is not oriented.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":864790,"byte_end":864831,"line_start":394,"line_end":394,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":864836,"byte_end":864845,"line_start":395,"line_end":395,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5932},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":865073,"byte_end":865085,"line_start":404,"line_end":404,"column_start":12,"column_end":24},"name":"set_oriented","qualname":"<TriMesh<N>>::set_oriented","value":"fn (&mut self, oriented: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Whether this trimesh is considered as oriented or not.","sig":null,"attributes":[{"value":"/ Whether this trimesh is considered as oriented or not.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":864916,"byte_end":864974,"line_start":400,"line_end":400,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":864979,"byte_end":864982,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ This is determined at the initialization of the trimesh.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":864987,"byte_end":865047,"line_start":402,"line_end":402,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":865052,"byte_end":865061,"line_start":403,"line_end":403,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5933},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":865213,"byte_end":865236,"line_start":410,"line_end":410,"column_start":12,"column_end":35},"name":"face_containing_feature","qualname":"<TriMesh<N>>::face_containing_feature","value":"fn (&self, id: FeatureId) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Face containing feature.\n","sig":null,"attributes":[{"value":"/ Face containing feature.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":865159,"byte_end":865187,"line_start":408,"line_end":408,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":865192,"byte_end":865201,"line_start":409,"line_end":409,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5934},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":865666,"byte_end":865678,"line_start":421,"line_end":421,"column_start":12,"column_end":24},"name":"edge_segment","qualname":"<TriMesh<N>>::edge_segment","value":"fn (&self, i: usize) -> Segment<N>","parent":null,"children":[],"decl_id":null,"docs":" The segment of the `i`-th edge on this triangle mesh.\n","sig":null,"attributes":[{"value":"/ The segment of the `i`-th edge on this triangle mesh.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":865583,"byte_end":865640,"line_start":419,"line_end":419,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":865645,"byte_end":865654,"line_start":420,"line_end":420,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5935},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":865904,"byte_end":865907,"line_start":428,"line_end":428,"column_start":12,"column_end":15},"name":"uvs","qualname":"<TriMesh<N>>::uvs","value":"fn (&self) -> Option<&[Point2<N>]>","parent":null,"children":[],"decl_id":null,"docs":" The texture coordinates of this mesh.\n","sig":null,"attributes":[{"value":"/ The texture coordinates of this mesh.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":865837,"byte_end":865878,"line_start":426,"line_end":426,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":865883,"byte_end":865892,"line_start":427,"line_end":427,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5937},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":866179,"byte_end":866194,"line_start":436,"line_end":436,"column_start":12,"column_end":27},"name":"adj_vertex_list","qualname":"<TriMesh<N>>::adj_vertex_list","value":"fn (&self) -> &[usize]","parent":null,"children":[],"decl_id":null,"docs":" The adjacent vertices list of this mesh.","sig":null,"attributes":[{"value":"/ The adjacent vertices list of this mesh.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":865998,"byte_end":866042,"line_start":432,"line_end":432,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":866047,"byte_end":866050,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ Use `TriMeshVertex.adj_vertices` to index this. Elements are indexes into the `vertices` list.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":866055,"byte_end":866153,"line_start":434,"line_end":434,"column_start":5,"column_end":103}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":866158,"byte_end":866167,"line_start":435,"line_end":435,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5938},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":866432,"byte_end":866445,"line_start":444,"line_end":444,"column_start":12,"column_end":25},"name":"adj_face_list","qualname":"<TriMesh<N>>::adj_face_list","value":"fn (&self) -> &[usize]","parent":null,"children":[],"decl_id":null,"docs":" The adjacent vertices list of this mesh.","sig":null,"attributes":[{"value":"/ The adjacent vertices list of this mesh.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":866257,"byte_end":866301,"line_start":440,"line_end":440,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":866306,"byte_end":866309,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ Use `TriMeshVertex.adj_faces` to index this. Elements are indexes into the `faces` list.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":866314,"byte_end":866406,"line_start":442,"line_end":442,"column_start":5,"column_end":97}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":866411,"byte_end":866420,"line_start":443,"line_end":443,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5939},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":866563,"byte_end":866574,"line_start":450,"line_end":450,"column_start":12,"column_end":23},"name":"triangle_at","qualname":"<TriMesh<N>>::triangle_at","value":"fn (&self, i: usize) -> Triangle<N>","parent":null,"children":[],"decl_id":null,"docs":" Gets the i-th mesh element.\n","sig":null,"attributes":[{"value":"/ Gets the i-th mesh element.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":866506,"byte_end":866537,"line_start":448,"line_end":448,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":866542,"byte_end":866551,"line_start":449,"line_end":449,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5940},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":866881,"byte_end":866892,"line_start":459,"line_end":459,"column_start":12,"column_end":23},"name":"is_backface","qualname":"<TriMesh<N>>::is_backface","value":"fn (&self, feature: FeatureId) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the given feature is a FeatureId::Face and\n identifies a backface of this trimesh.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the given feature is a FeatureId::Face and","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":866744,"byte_end":866808,"line_start":456,"line_end":456,"column_start":5,"column_end":69}},{"value":"/ identifies a backface of this trimesh.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":866813,"byte_end":866855,"line_start":457,"line_end":457,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":866860,"byte_end":866869,"line_start":458,"line_end":458,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5941},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":867150,"byte_end":867153,"line_start":469,"line_end":469,"column_start":12,"column_end":15},"name":"bvt","qualname":"<TriMesh<N>>::bvt","value":"fn (&self) -> &BVT<usize, AABB<N>>","parent":null,"children":[],"decl_id":null,"docs":" The optimization structure used by this triangle mesh.\n","sig":null,"attributes":[{"value":"/ The optimization structure used by this triangle mesh.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":867066,"byte_end":867124,"line_start":467,"line_end":467,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":867129,"byte_end":867138,"line_start":468,"line_end":468,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5942},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":867323,"byte_end":867355,"line_start":475,"line_end":475,"column_start":12,"column_end":44},"name":"vertex_tangent_cone_contains_dir","qualname":"<TriMesh<N>>::vertex_tangent_cone_contains_dir","value":"fn (&self, i: usize, deformations: Option<&[N]>, dir: &Unit<Vector<N>>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests that the given `dir` is on the tangent cone of the `i`th vertex\n of this mesh.\n","sig":null,"attributes":[{"value":"/ Tests that the given `dir` is on the tangent cone of the `i`th vertex","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":867216,"byte_end":867289,"line_start":473,"line_end":473,"column_start":5,"column_end":78}},{"value":"/ of this mesh.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":867294,"byte_end":867311,"line_start":474,"line_end":474,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":5943},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":868660,"byte_end":868698,"line_start":517,"line_end":517,"column_start":12,"column_end":50},"name":"vertex_tangent_cone_polar_contains_dir","qualname":"<TriMesh<N>>::vertex_tangent_cone_polar_contains_dir","value":"fn (&self, i: usize, dir: &Unit<Vector<N>>, sin_ang_tol: N) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests that the given `dir` is on the polar of the tangent cone of the `i`th vertex\n of this mesh.\n","sig":null,"attributes":[{"value":"/ Tests that the given `dir` is on the polar of the tangent cone of the `i`th vertex","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":868540,"byte_end":868626,"line_start":515,"line_end":515,"column_start":5,"column_end":91}},{"value":"/ of this mesh.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":868631,"byte_end":868648,"line_start":516,"line_end":516,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":5944},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":869288,"byte_end":869318,"line_start":539,"line_end":539,"column_start":12,"column_end":42},"name":"edge_tangent_cone_contains_dir","qualname":"<TriMesh<N>>::edge_tangent_cone_contains_dir","value":"fn (&self, i: usize, deformations: Option<&[N]>, dir: &Unit<Vector<N>>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests that the given `dir` is on the tangent cone of the `i`th edge\n of this mesh.\n","sig":null,"attributes":[{"value":"/ Tests that the given `dir` is on the tangent cone of the `i`th edge","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":869183,"byte_end":869254,"line_start":537,"line_end":537,"column_start":5,"column_end":76}},{"value":"/ of this mesh.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":869259,"byte_end":869276,"line_start":538,"line_end":538,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":5945},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":870711,"byte_end":870758,"line_start":583,"line_end":583,"column_start":12,"column_end":59},"name":"edge_tangent_cone_polar_contains_orthogonal_dir","qualname":"<TriMesh<N>>::edge_tangent_cone_polar_contains_orthogonal_dir","value":"fn (&self, i: usize, dir: &Unit<Vector<N>>, sin_ang_tol: N) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests that the given `dir` is on the polar of the tangent cone of the `i`th edge\n of this mesh.","sig":null,"attributes":[{"value":"/ Tests that the given `dir` is on the polar of the tangent cone of the `i`th edge","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":870526,"byte_end":870610,"line_start":579,"line_end":579,"column_start":5,"column_end":89}},{"value":"/ of this mesh.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":870615,"byte_end":870632,"line_start":580,"line_end":580,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":870637,"byte_end":870640,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ The `dir` is assumed to be orthogonal to the edge.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":870645,"byte_end":870699,"line_start":582,"line_end":582,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":5946},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":871755,"byte_end":871791,"line_start":616,"line_end":616,"column_start":12,"column_end":48},"name":"edge_tangent_cone_polar_contains_dir","qualname":"<TriMesh<N>>::edge_tangent_cone_polar_contains_dir","value":"fn (&self, i: usize, dir: &Unit<Vector<N>>, sin_ang_tol: N, _cos_ang_tol: N) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests that the given `dir` is on the polar of the tangent cone of the `i`th edge\n of this mesh.\n","sig":null,"attributes":[{"value":"/ Tests that the given `dir` is on the polar of the tangent cone of the `i`th edge","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":871637,"byte_end":871721,"line_start":614,"line_end":614,"column_start":5,"column_end":89}},{"value":"/ of this mesh.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":871726,"byte_end":871743,"line_start":615,"line_end":615,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":5947},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":872301,"byte_end":872331,"line_start":632,"line_end":632,"column_start":12,"column_end":42},"name":"face_tangent_cone_contains_dir","qualname":"<TriMesh<N>>::face_tangent_cone_contains_dir","value":"fn (&self, i: usize, deformations: Option<&[N]>, dir: &Unit<Vector<N>>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests that the given `dir` is on the tangent cone of the `i`th face\n of this mesh.\n","sig":null,"attributes":[{"value":"/ Tests that the given `dir` is on the tangent cone of the `i`th face","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":872196,"byte_end":872267,"line_start":630,"line_end":630,"column_start":5,"column_end":76}},{"value":"/ of this mesh.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":872272,"byte_end":872289,"line_start":631,"line_end":631,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":5950},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":873748,"byte_end":873784,"line_start":676,"line_end":676,"column_start":12,"column_end":48},"name":"face_tangent_cone_polar_contains_dir","qualname":"<TriMesh<N>>::face_tangent_cone_polar_contains_dir","value":"fn (&self, i: usize, dir: &Unit<Vector<N>>, cos_ang_tol: N) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the polar of the tangent cone of the `i`-th face of this triangle mesh contains\n the specified direction within an angular tolerence.\n","sig":null,"attributes":[{"value":"/ Checks if the polar of the tangent cone of the `i`-th face of this triangle mesh contains","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":873582,"byte_end":873675,"line_start":674,"line_end":674,"column_start":5,"column_end":98}},{"value":"/ the specified direction within an angular tolerence.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":873680,"byte_end":873736,"line_start":675,"line_end":675,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":5953},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":874506,"byte_end":874537,"line_start":701,"line_end":701,"column_start":12,"column_end":43},"name":"tangent_cone_polar_contains_dir","qualname":"<TriMesh<N>>::tangent_cone_polar_contains_dir","value":"fn (&self, feature: FeatureId, dir: &Unit<Vector<N>>, sin_ang_tol: N, cos_ang_tol: N) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the polar of the tangent cone of the specified feature of this triangle mesh contains\n the specified direction within an angular tolerence.\n","sig":null,"attributes":[{"value":"/ Checks if the polar of the tangent cone of the specified feature of this triangle mesh contains","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":874334,"byte_end":874433,"line_start":699,"line_end":699,"column_start":5,"column_end":104}},{"value":"/ the specified direction within an angular tolerence.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":874438,"byte_end":874494,"line_start":700,"line_end":700,"column_start":5,"column_end":61}}]},{"kind":"Mod","id":{"krate":0,"index":5986},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"transformation","qualname":"::transformation","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/mod.rs","parent":null,"children":[{"krate":0,"index":5987},{"krate":0,"index":5988},{"krate":0,"index":5989},{"krate":0,"index":5990},{"krate":0,"index":5991},{"krate":0,"index":6021},{"krate":0,"index":6092},{"krate":0,"index":6113},{"krate":0,"index":6256}],"decl_id":null,"docs":" Transformation, simplification and decomposition of meshes.\n","sig":null,"attributes":[{"value":"! Transformation, simplification and decomposition of meshes.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/mod.rs","byte_start":884911,"byte_end":884974,"line_start":1,"line_end":1,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":6044},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/convex_hull3.rs","byte_start":892752,"byte_end":892764,"line_start":27,"line_end":27,"column_start":8,"column_end":20},"name":"convex_hull3","qualname":"::transformation::convex_hull3::convex_hull3","value":"fn <N> (points: &[Point3<N>]) -> TriMesh<N>","parent":null,"children":[],"decl_id":null,"docs":" Computes the convex hull of a set of 3d points.\n","sig":null,"attributes":[{"value":"/ Computes the convex hull of a set of 3d points.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/convex_hull3.rs","byte_start":892693,"byte_end":892744,"line_start":26,"line_end":26,"column_start":1,"column_end":52}}]},{"kind":"Mod","id":{"krate":0,"index":6092},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/convex_hull_utils.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"convex_hull_utils","qualname":"::transformation::convex_hull_utils","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/convex_hull_utils.rs","parent":null,"children":[{"krate":0,"index":6093},{"krate":0,"index":6094},{"krate":0,"index":6095},{"krate":0,"index":6096},{"krate":0,"index":6097},{"krate":0,"index":6100},{"krate":0,"index":6103},{"krate":0,"index":6106},{"krate":0,"index":6109},{"krate":0,"index":6111}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":6103},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/convex_hull_utils.rs","byte_start":913522,"byte_end":913538,"line_start":9,"line_end":9,"column_start":8,"column_end":24},"name":"support_point_id","qualname":"::transformation::convex_hull_utils::support_point_id","value":"fn <N, D> (direction: &na::VectorN<N, D>, points: &[na::Point<N, D>]) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns the index of the support point of a list of points.\n","sig":null,"attributes":[{"value":"/ Returns the index of the support point of a list of points.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/convex_hull_utils.rs","byte_start":913451,"byte_end":913514,"line_start":8,"line_end":8,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":6106},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/convex_hull_utils.rs","byte_start":914074,"byte_end":914098,"line_start":33,"line_end":33,"column_start":8,"column_end":32},"name":"indexed_support_point_id","qualname":"::transformation::convex_hull_utils::indexed_support_point_id","value":"fn <N, D> (direction: &na::VectorN<N, D>, points: &[na::Point<N, D>], idx: &[usize]) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns the index of the support point of an indexed list of points.\n","sig":null,"attributes":[{"value":"/ Returns the index of the support point of an indexed list of points.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/convex_hull_utils.rs","byte_start":913994,"byte_end":914066,"line_start":32,"line_end":32,"column_start":1,"column_end":73}}]},{"kind":"Function","id":{"krate":0,"index":6109},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/convex_hull_utils.rs","byte_start":914635,"byte_end":914644,"line_start":58,"line_end":58,"column_start":8,"column_end":17},"name":"normalize","qualname":"::transformation::convex_hull_utils::normalize","value":"fn <N> (coords: &mut [Point<N>]) -> (Point<N>, N)","parent":null,"children":[],"decl_id":null,"docs":" Scale and center the given set of point depending on their AABB.\n","sig":null,"attributes":[{"value":"/ Scale and center the given set of point depending on their AABB.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/convex_hull_utils.rs","byte_start":914559,"byte_end":914627,"line_start":57,"line_end":57,"column_start":1,"column_end":69}}]},{"kind":"Function","id":{"krate":0,"index":6111},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/convex_hull_utils.rs","byte_start":915021,"byte_end":915032,"line_start":71,"line_end":71,"column_start":8,"column_end":19},"name":"denormalize","qualname":"::transformation::convex_hull_utils::denormalize","value":"fn <N> (coords: &mut [Point<N>], center: &Point<N>, diag: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Scale and translates the given set of point.\n","sig":null,"attributes":[{"value":"/ Scale and translates the given set of point.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/convex_hull_utils.rs","byte_start":914965,"byte_end":915013,"line_start":70,"line_end":70,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":6152},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/hacd.rs","byte_start":915882,"byte_end":915886,"line_start":20,"line_end":20,"column_start":8,"column_end":12},"name":"hacd","qualname":"::transformation::hacd::hacd","value":"fn <N> (mesh: TriMesh<N>, error: N, min_components: usize) -> (Vec<TriMesh<N>>, Vec<Vec<usize>>)","parent":null,"children":[],"decl_id":null,"docs":" Approximate convex decomposition of a triangle mesh.\n","sig":null,"attributes":[{"value":"/ Approximate convex decomposition of a triangle mesh.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/hacd.rs","byte_start":915818,"byte_end":915874,"line_start":19,"line_end":19,"column_start":1,"column_end":57}}]},{"kind":"Trait","id":{"krate":0,"index":6316},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/to_trimesh/to_trimesh.rs","byte_start":943795,"byte_end":943804,"line_start":6,"line_end":6,"column_start":11,"column_end":20},"name":"ToTriMesh","qualname":"::transformation::to_trimesh::to_trimesh::ToTriMesh","value":"ToTriMesh<N: RealField>","parent":null,"children":[{"krate":0,"index":6318},{"krate":0,"index":6319}],"decl_id":null,"docs":" Trait implemented by shapes that can be approximated by a triangle mesh.\n","sig":null,"attributes":[{"value":"/ Trait implemented by shapes that can be approximated by a triangle mesh.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/to_trimesh/to_trimesh.rs","byte_start":943708,"byte_end":943784,"line_start":5,"line_end":5,"column_start":1,"column_end":77}}]},{"kind":"Type","id":{"krate":0,"index":6318},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/to_trimesh/to_trimesh.rs","byte_start":943830,"byte_end":943853,"line_start":7,"line_end":7,"column_start":10,"column_end":33},"name":"DiscretizationParameter","qualname":"::transformation::to_trimesh::to_trimesh::ToTriMesh::DiscretizationParameter","value":"type DiscretizationParameter;","parent":{"krate":0,"index":6316},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6319},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/to_trimesh/to_trimesh.rs","byte_start":943987,"byte_end":943997,"line_start":13,"line_end":13,"column_start":8,"column_end":18},"name":"to_trimesh","qualname":"::transformation::to_trimesh::to_trimesh::ToTriMesh::to_trimesh","value":"fn (&self, i: Self::DiscretizationParameter) -> TriMesh<N>","parent":{"krate":0,"index":6316},"children":[],"decl_id":null,"docs":" Builds a triangle mesh from this shape.","sig":null,"attributes":[{"value":"/ Builds a triangle mesh from this shape.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/to_trimesh/to_trimesh.rs","byte_start":943860,"byte_end":943903,"line_start":9,"line_end":9,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/to_trimesh/to_trimesh.rs","byte_start":943908,"byte_end":943911,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ # Arguments:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/to_trimesh/to_trimesh.rs","byte_start":943916,"byte_end":943932,"line_start":11,"line_end":11,"column_start":5,"column_end":21}},{"value":"/ * `i` - the discretization parameters.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/to_trimesh/to_trimesh.rs","byte_start":943937,"byte_end":943979,"line_start":12,"line_end":12,"column_start":5,"column_end":47}}]},{"kind":"Mod","id":{"krate":0,"index":6338},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"utils","qualname":"::utils","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/mod.rs","parent":null,"children":[{"krate":0,"index":6339},{"krate":0,"index":6340},{"krate":0,"index":6341},{"krate":0,"index":6342},{"krate":0,"index":6343},{"krate":0,"index":6344},{"krate":0,"index":6345},{"krate":0,"index":6346},{"krate":0,"index":6347},{"krate":0,"index":6350},{"krate":0,"index":6351},{"krate":0,"index":6352},{"krate":0,"index":6355},{"krate":0,"index":6356},{"krate":0,"index":6360},{"krate":0,"index":6361},{"krate":0,"index":6367},{"krate":0,"index":6379},{"krate":0,"index":6389},{"krate":0,"index":6396},{"krate":0,"index":6405},{"krate":0,"index":6415},{"krate":0,"index":6430},{"krate":0,"index":6446},{"krate":0,"index":6453},{"krate":0,"index":6464},{"krate":0,"index":6470},{"krate":0,"index":6502},{"krate":0,"index":6509},{"krate":0,"index":6520},{"krate":0,"index":6534}],"decl_id":null,"docs":" Various unsorted geometrical and logical operators.\n","sig":null,"attributes":[{"value":"! Various unsorted geometrical and logical operators.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/mod.rs","byte_start":944886,"byte_end":944941,"line_start":1,"line_end":1,"column_start":1,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":6367},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/as_bytes.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"as_bytes","qualname":"::utils::as_bytes","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/as_bytes.rs","parent":null,"children":[{"krate":0,"index":6368},{"krate":0,"index":6369},{"krate":0,"index":6370},{"krate":0,"index":6375},{"krate":0,"index":6376},{"krate":0,"index":6378},{"krate":0,"index":8345},{"krate":0,"index":8349},{"krate":0,"index":8353},{"krate":0,"index":8357}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":6376},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/as_bytes.rs","byte_start":946420,"byte_end":946427,"line_start":8,"line_end":8,"column_start":11,"column_end":18},"name":"AsBytes","qualname":"::utils::as_bytes::AsBytes","value":"AsBytes","parent":null,"children":[{"krate":0,"index":6377}],"decl_id":null,"docs":" Trait that transforms thing to a slice of u8.\n","sig":null,"attributes":[{"value":"/ Trait that transforms thing to a slice of u8.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/as_bytes.rs","byte_start":946360,"byte_end":946409,"line_start":7,"line_end":7,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":6377},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/as_bytes.rs","byte_start":946437,"byte_end":946445,"line_start":9,"line_end":9,"column_start":8,"column_end":16},"name":"as_bytes","qualname":"::utils::as_bytes::AsBytes::as_bytes","value":"fn (&self) -> &[u8]","parent":{"krate":0,"index":6376},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":6386},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/ccw_face_normal.rs","byte_start":947634,"byte_end":947649,"line_start":21,"line_end":21,"column_start":8,"column_end":23},"name":"ccw_face_normal","qualname":"::utils::ccw_face_normal::ccw_face_normal","value":"fn <N> (pts: [&Point<N>; 3]) -> Option<Unit<Vector<N>>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the normal of a counter-clock-wise triangle.","sig":null,"attributes":[{"value":"/ Computes the normal of a counter-clock-wise triangle.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/ccw_face_normal.rs","byte_start":947480,"byte_end":947537,"line_start":16,"line_end":16,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/ccw_face_normal.rs","byte_start":947538,"byte_end":947541,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Returns `None` if the triangle is degenerate.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/ccw_face_normal.rs","byte_start":947542,"byte_end":947591,"line_start":18,"line_end":18,"column_start":1,"column_end":50}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/ccw_face_normal.rs","byte_start":947592,"byte_end":947601,"line_start":19,"line_end":19,"column_start":1,"column_end":10}},{"value":"cfg(feature = \"dim3\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/ccw_face_normal.rs","byte_start":947602,"byte_end":947626,"line_start":20,"line_end":20,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":6394},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/center.rs","byte_start":947964,"byte_end":947970,"line_start":6,"line_end":6,"column_start":8,"column_end":14},"name":"center","qualname":"::utils::center::center","value":"fn <N> (pts: &[Point<N>]) -> Point<N>","parent":null,"children":[],"decl_id":null,"docs":" Computes the center of a set of point.\n","sig":null,"attributes":[{"value":"/ Computes the center of a set of point.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/center.rs","byte_start":947904,"byte_end":947946,"line_start":4,"line_end":4,"column_start":1,"column_end":43}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/center.rs","byte_start":947947,"byte_end":947956,"line_start":5,"line_end":5,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":6402},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/cleanup.rs","byte_start":948493,"byte_end":948513,"line_start":6,"line_end":6,"column_start":8,"column_end":28},"name":"remove_unused_points","qualname":"::utils::cleanup::remove_unused_points","value":"fn <N> (points: &mut Vec<Point<N>>, idx: &mut [Point3<u32>]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Given an index buffer, remove from `points` every point that is not indexed.\n","sig":null,"attributes":[{"value":"/ Given an index buffer, remove from `points` every point that is not indexed.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/cleanup.rs","byte_start":948405,"byte_end":948485,"line_start":5,"line_end":5,"column_start":1,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":6408},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/deterministic_state.rs","byte_start":949514,"byte_end":949532,"line_start":5,"line_end":5,"column_start":12,"column_end":30},"name":"DeterministicState","qualname":"::utils::deterministic_state::DeterministicState","value":"","parent":null,"children":[],"decl_id":null,"docs":" A hasher builder that creates `DefaultHasher` with default keys.\n","sig":null,"attributes":[{"value":"/ A hasher builder that creates `DefaultHasher` with default keys.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/deterministic_state.rs","byte_start":949434,"byte_end":949502,"line_start":4,"line_end":4,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":6411},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/deterministic_state.rs","byte_start":949662,"byte_end":949665,"line_start":9,"line_end":9,"column_start":12,"column_end":15},"name":"new","qualname":"<DeterministicState>::new","value":"fn () -> DeterministicState","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `DeterministicState` that builds `DefaultHasher` with default keys.\n","sig":null,"attributes":[{"value":"/ Creates a new `DeterministicState` that builds `DefaultHasher` with default keys.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/deterministic_state.rs","byte_start":949565,"byte_end":949650,"line_start":8,"line_end":8,"column_start":5,"column_end":90}}]},{"kind":"Struct","id":{"krate":0,"index":8361},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/hashable_partial_eq.rs","byte_start":950104,"byte_end":950121,"line_start":7,"line_end":7,"column_start":12,"column_end":29},"name":"HashablePartialEq","qualname":"::utils::hashable_partial_eq::HashablePartialEq","value":"HashablePartialEq {  }","parent":null,"children":[{"krate":0,"index":8363}],"decl_id":null,"docs":" A structure that implements `Eq` and is hashable even if the wrapped data implements only\n `PartialEq`.\n","sig":null,"attributes":[{"value":"/ A structure that implements `Eq` and is hashable even if the wrapped data implements only","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/hashable_partial_eq.rs","byte_start":949947,"byte_end":950040,"line_start":4,"line_end":4,"column_start":1,"column_end":94}},{"value":"/ `PartialEq`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/hashable_partial_eq.rs","byte_start":950041,"byte_end":950057,"line_start":5,"line_end":5,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":6422},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/hashable_partial_eq.rs","byte_start":950384,"byte_end":950387,"line_start":14,"line_end":14,"column_start":19,"column_end":22},"name":"new","qualname":"<HashablePartialEq<T>>::new","value":"fn (value: T) -> HashablePartialEq<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `HashablePartialEq`. This is unsafe because you must be sure that you really\n want to transform the wrapped object's partial equality to an equivalence relation.\n","sig":null,"attributes":[{"value":"/ Creates a new `HashablePartialEq`. This is unsafe because you must be sure that you really","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/hashable_partial_eq.rs","byte_start":950179,"byte_end":950273,"line_start":12,"line_end":12,"column_start":5,"column_end":99}},{"value":"/ want to transform the wrapped object's partial equality to an equivalence relation.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/hashable_partial_eq.rs","byte_start":950278,"byte_end":950365,"line_start":13,"line_end":13,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":6423},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/hashable_partial_eq.rs","byte_start":950517,"byte_end":950523,"line_start":19,"line_end":19,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<HashablePartialEq<T>>::unwrap","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Gets the wrapped value.\n","sig":null,"attributes":[{"value":"/ Gets the wrapped value.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/hashable_partial_eq.rs","byte_start":950478,"byte_end":950505,"line_start":18,"line_end":18,"column_start":5,"column_end":32}}]},{"kind":"Trait","id":{"krate":0,"index":6436},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/isometry_ops.rs","byte_start":950967,"byte_end":950978,"line_start":9,"line_end":9,"column_start":11,"column_end":22},"name":"IsometryOps","qualname":"::utils::isometry_ops::IsometryOps","value":"IsometryOps<N: RealField>","parent":null,"children":[{"krate":0,"index":6438},{"krate":0,"index":6439},{"krate":0,"index":6440}],"decl_id":null,"docs":" Extra operations with isometries.\n","sig":null,"attributes":[{"value":"/ Extra operations with isometries.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/isometry_ops.rs","byte_start":950919,"byte_end":950956,"line_start":8,"line_end":8,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":6438},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/isometry_ops.rs","byte_start":951107,"byte_end":951132,"line_start":12,"line_end":12,"column_start":8,"column_end":33},"name":"absolute_transform_vector","qualname":"::utils::isometry_ops::IsometryOps::absolute_transform_vector","value":"fn (&self, v: &Vector<N>) -> Vector<N>","parent":{"krate":0,"index":6436},"children":[],"decl_id":null,"docs":" Transform a vector by the absolute value of the homogeneous matrix\n equivalent to `self`.\n","sig":null,"attributes":[{"value":"/ Transform a vector by the absolute value of the homogeneous matrix","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/isometry_ops.rs","byte_start":950999,"byte_end":951069,"line_start":10,"line_end":10,"column_start":5,"column_end":75}},{"value":"/ equivalent to `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/isometry_ops.rs","byte_start":951074,"byte_end":951099,"line_start":11,"line_end":11,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":6439},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/isometry_ops.rs","byte_start":951234,"byte_end":951263,"line_start":14,"line_end":14,"column_start":8,"column_end":37},"name":"inverse_transform_unit_vector","qualname":"::utils::isometry_ops::IsometryOps::inverse_transform_unit_vector","value":"fn (&self, v: &Unit<Vector<N>>) -> Unit<Vector<N>>","parent":{"krate":0,"index":6436},"children":[],"decl_id":null,"docs":" Transform a unit vector by the inverse of `self`.\n","sig":null,"attributes":[{"value":"/ Transform a unit vector by the inverse of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/isometry_ops.rs","byte_start":951173,"byte_end":951226,"line_start":13,"line_end":13,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":6440},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/isometry_ops.rs","byte_start":951433,"byte_end":951443,"line_start":16,"line_end":16,"column_start":8,"column_end":18},"name":"lerp_slerp","qualname":"::utils::isometry_ops::IsometryOps::lerp_slerp","value":"fn (&self, other: &Self, t: N) -> Self","parent":{"krate":0,"index":6436},"children":[],"decl_id":null,"docs":" Interpolates between two isometries, using LERP for the translation part and SLERP for the rotation part.\n","sig":null,"attributes":[{"value":"/ Interpolates between two isometries, using LERP for the translation part and SLERP for the rotation part.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/isometry_ops.rs","byte_start":951316,"byte_end":951425,"line_start":15,"line_end":15,"column_start":5,"column_end":114}}]},{"kind":"Function","id":{"krate":0,"index":6450},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/median.rs","byte_start":952962,"byte_end":952968,"line_start":5,"line_end":5,"column_start":8,"column_end":14},"name":"median","qualname":"::utils::median::median","value":"fn <N> (vals: &mut [N]) -> N","parent":null,"children":[],"decl_id":null,"docs":" Computes the median of a set of values.\n","sig":null,"attributes":[{"value":"/ Computes the median of a set of values.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/median.rs","byte_start":952901,"byte_end":952944,"line_start":3,"line_end":3,"column_start":1,"column_end":44}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/median.rs","byte_start":952945,"byte_end":952954,"line_start":4,"line_end":4,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":6460},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/point_cloud_support_point.rs","byte_start":953425,"byte_end":953453,"line_start":6,"line_end":6,"column_start":8,"column_end":36},"name":"point_cloud_support_point_id","qualname":"::utils::point_cloud_support_point::point_cloud_support_point_id","value":"fn <N> (dir: &Vector<N>, points: &[Point<N>]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes the index of the support point of a cloud of points.\n","sig":null,"attributes":[{"value":"/ Computes the index of the support point of a cloud of points.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/point_cloud_support_point.rs","byte_start":953342,"byte_end":953407,"line_start":4,"line_end":4,"column_start":1,"column_end":66}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/point_cloud_support_point.rs","byte_start":953408,"byte_end":953417,"line_start":5,"line_end":5,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":6462},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/point_cloud_support_point.rs","byte_start":953873,"byte_end":953898,"line_start":25,"line_end":25,"column_start":8,"column_end":33},"name":"point_cloud_support_point","qualname":"::utils::point_cloud_support_point::point_cloud_support_point","value":"fn <N> (dir: &Vector<N>, points: &[Point<N>]) -> Point<N>","parent":null,"children":[],"decl_id":null,"docs":" Computes the support point of a cloud of points.\n","sig":null,"attributes":[{"value":"/ Computes the support point of a cloud of points.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/point_cloud_support_point.rs","byte_start":953803,"byte_end":953855,"line_start":23,"line_end":23,"column_start":1,"column_end":53}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/point_cloud_support_point.rs","byte_start":953856,"byte_end":953865,"line_start":24,"line_end":24,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":6468},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/point_in_poly2d.rs","byte_start":954181,"byte_end":954196,"line_start":5,"line_end":5,"column_start":8,"column_end":23},"name":"point_in_poly2d","qualname":"::utils::point_in_poly2d::point_in_poly2d","value":"fn <N> (pt: &Point2<N>, poly: &[Point2<N>]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if the given point is inside of a polygon with arbitrary orientation.\n","sig":null,"attributes":[{"value":"/ Tests if the given point is inside of a polygon with arbitrary orientation.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/point_in_poly2d.rs","byte_start":954094,"byte_end":954173,"line_start":4,"line_end":4,"column_start":1,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":6472},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/ref_with_cost.rs","byte_start":954865,"byte_end":954876,"line_start":6,"line_end":6,"column_start":12,"column_end":23},"name":"RefWithCost","qualname":"::utils::ref_with_cost::RefWithCost","value":"RefWithCost { object, cost }","parent":null,"children":[{"krate":0,"index":6476},{"krate":0,"index":6477}],"decl_id":null,"docs":" A reference packed with a cost value.\n","sig":null,"attributes":[{"value":"/ A reference packed with a cost value.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/ref_with_cost.rs","byte_start":954812,"byte_end":954853,"line_start":5,"line_end":5,"column_start":1,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":6476},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/ref_with_cost.rs","byte_start":954937,"byte_end":954943,"line_start":8,"line_end":8,"column_start":9,"column_end":15},"name":"object","qualname":"::utils::ref_with_cost::RefWithCost::object","value":"&'a T","parent":{"krate":0,"index":6472},"children":[],"decl_id":null,"docs":" The reference to an object.\n","sig":null,"attributes":[{"value":"/ The reference to an object.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/ref_with_cost.rs","byte_start":954897,"byte_end":954928,"line_start":7,"line_end":7,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":6477},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/ref_with_cost.rs","byte_start":954992,"byte_end":954996,"line_start":10,"line_end":10,"column_start":9,"column_end":13},"name":"cost","qualname":"::utils::ref_with_cost::RefWithCost::cost","value":"N","parent":{"krate":0,"index":6472},"children":[],"decl_id":null,"docs":" The cost of the object.\n","sig":null,"attributes":[{"value":"/ The cost of the object.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/ref_with_cost.rs","byte_start":954956,"byte_end":954983,"line_start":9,"line_end":9,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":6482},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/ref_with_cost.rs","byte_start":955126,"byte_end":955129,"line_start":16,"line_end":16,"column_start":12,"column_end":15},"name":"new","qualname":"<RefWithCost>::new","value":"fn (object: &'a T, cost: N) -> RefWithCost<'a, N, T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new reference packed with a cost value.\n","sig":null,"attributes":[{"value":"/ Creates a new reference packed with a cost value.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/ref_with_cost.rs","byte_start":955047,"byte_end":955100,"line_start":14,"line_end":14,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/ref_with_cost.rs","byte_start":955105,"byte_end":955114,"line_start":15,"line_end":15,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":6503},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/sort.rs","byte_start":956151,"byte_end":956156,"line_start":5,"line_end":5,"column_start":8,"column_end":13},"name":"sort2","qualname":"::utils::sort::sort2","value":"fn <'a, N> (a: &'a N, b: &'a N) -> (&'a N, &'a N)","parent":null,"children":[],"decl_id":null,"docs":" Sorts two values in increasing order.\n","sig":null,"attributes":[{"value":"/ Sorts two values in increasing order.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/sort.rs","byte_start":956092,"byte_end":956133,"line_start":3,"line_end":3,"column_start":1,"column_end":42}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/sort.rs","byte_start":956134,"byte_end":956143,"line_start":4,"line_end":4,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":6506},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/sort.rs","byte_start":956356,"byte_end":956361,"line_start":15,"line_end":15,"column_start":8,"column_end":13},"name":"sort3","qualname":"::utils::sort::sort3","value":"fn <'a, N> (a: &'a N, b: &'a N, c: &'a N) -> (&'a N, &'a N, &'a N)","parent":null,"children":[],"decl_id":null,"docs":" Sorts a set of three values in increasing order.\n","sig":null,"attributes":[{"value":"/ Sorts a set of three values in increasing order.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/sort.rs","byte_start":956286,"byte_end":956338,"line_start":13,"line_end":13,"column_start":1,"column_end":53}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/sort.rs","byte_start":956339,"byte_end":956348,"line_start":14,"line_end":14,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":8376},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/sorted_pair.rs","byte_start":957613,"byte_end":957623,"line_start":7,"line_end":7,"column_start":12,"column_end":22},"name":"SortedPair","qualname":"::utils::sorted_pair::SortedPair","value":"","parent":null,"children":[],"decl_id":null,"docs":" A pair of elements sorted in increasing order.\n","sig":null,"attributes":[{"value":"/ A pair of elements sorted in increasing order.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/sorted_pair.rs","byte_start":957483,"byte_end":957533,"line_start":5,"line_end":5,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":6515},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/sorted_pair.rs","byte_start":957760,"byte_end":957763,"line_start":11,"line_end":11,"column_start":12,"column_end":15},"name":"new","qualname":"<SortedPair<T>>::new","value":"fn (element1: T, element2: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sorts two elements in increasing order into a new pair.\n","sig":null,"attributes":[{"value":"/ Sorts two elements in increasing order into a new pair.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/sorted_pair.rs","byte_start":957689,"byte_end":957748,"line_start":10,"line_end":10,"column_start":5,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":6528},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/tetrahedron.rs","byte_start":958263,"byte_end":958281,"line_start":10,"line_end":10,"column_start":8,"column_end":26},"name":"tetrahedron_volume","qualname":"::utils::tetrahedron::tetrahedron_volume","value":"fn <N> (p1: &Point<N>, p2: &Point<N>, p3: &Point<N>, p4: &Point<N>) -> N","parent":null,"children":[],"decl_id":null,"docs":" Computes the volume of a tetrahedron.\n","sig":null,"attributes":[{"value":"/ Computes the volume of a tetrahedron.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/tetrahedron.rs","byte_start":958204,"byte_end":958245,"line_start":8,"line_end":8,"column_start":1,"column_end":42}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/tetrahedron.rs","byte_start":958246,"byte_end":958255,"line_start":9,"line_end":9,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":6530},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/tetrahedron.rs","byte_start":958627,"byte_end":958652,"line_start":24,"line_end":24,"column_start":8,"column_end":33},"name":"tetrahedron_signed_volume","qualname":"::utils::tetrahedron::tetrahedron_signed_volume","value":"fn <N> (p1: &Point<N>, p2: &Point<N>, p3: &Point<N>, p4: &Point<N>) -> N","parent":null,"children":[],"decl_id":null,"docs":" Computes the signed volume of a tetrahedron.","sig":null,"attributes":[{"value":"/ Computes the signed volume of a tetrahedron.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/tetrahedron.rs","byte_start":958441,"byte_end":958489,"line_start":19,"line_end":19,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/tetrahedron.rs","byte_start":958490,"byte_end":958493,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ If it is positive, `p4` is on the half-space pointed by the normal of the oriented triangle","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/tetrahedron.rs","byte_start":958494,"byte_end":958589,"line_start":21,"line_end":21,"column_start":1,"column_end":96}},{"value":"/ `(p1, p2, p3)`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/tetrahedron.rs","byte_start":958590,"byte_end":958609,"line_start":22,"line_end":22,"column_start":1,"column_end":20}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/tetrahedron.rs","byte_start":958610,"byte_end":958619,"line_start":23,"line_end":23,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":6532},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/tetrahedron.rs","byte_start":959063,"byte_end":959081,"line_start":43,"line_end":43,"column_start":8,"column_end":26},"name":"tetrahedron_center","qualname":"::utils::tetrahedron::tetrahedron_center","value":"fn <N> (p1: &Point<N>, p2: &Point<N>, p3: &Point<N>, p4: &Point<N>) -> Point<N>","parent":null,"children":[],"decl_id":null,"docs":" Computes the center of a tetrahedron.\n","sig":null,"attributes":[{"value":"/ Computes the center of a tetrahedron.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/tetrahedron.rs","byte_start":959004,"byte_end":959045,"line_start":41,"line_end":41,"column_start":1,"column_end":42}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/tetrahedron.rs","byte_start":959046,"byte_end":959055,"line_start":42,"line_end":42,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":6539},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/triangle.rs","byte_start":959368,"byte_end":959381,"line_start":8,"line_end":8,"column_start":8,"column_end":21},"name":"triangle_area","qualname":"::utils::triangle::triangle_area","value":"fn <N> (pa: &Point<N>, pb: &Point<N>, pc: &Point<N>) -> N","parent":null,"children":[],"decl_id":null,"docs":" Computes the area of a triangle.\n","sig":null,"attributes":[{"value":"/ Computes the area of a triangle.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/triangle.rs","byte_start":959314,"byte_end":959350,"line_start":6,"line_end":6,"column_start":1,"column_end":37}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/triangle.rs","byte_start":959351,"byte_end":959360,"line_start":7,"line_end":7,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":6541},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/triangle.rs","byte_start":959866,"byte_end":959881,"line_start":26,"line_end":26,"column_start":8,"column_end":23},"name":"triangle_center","qualname":"::utils::triangle::triangle_center","value":"fn <N> (pa: &Point<N>, pb: &Point<N>, pc: &Point<N>) -> Point<N>","parent":null,"children":[],"decl_id":null,"docs":" Computes the center of a triangle.\n","sig":null,"attributes":[{"value":"/ Computes the center of a triangle.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/triangle.rs","byte_start":959810,"byte_end":959848,"line_start":24,"line_end":24,"column_start":1,"column_end":39}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/triangle.rs","byte_start":959849,"byte_end":959858,"line_start":25,"line_end":25,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":6543},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/triangle.rs","byte_start":960053,"byte_end":960071,"line_start":32,"line_end":32,"column_start":8,"column_end":26},"name":"triangle_perimeter","qualname":"::utils::triangle::triangle_perimeter","value":"fn <N> (pa: &Point<N>, pb: &Point<N>, pc: &Point<N>) -> N","parent":null,"children":[],"decl_id":null,"docs":" Computes the perimeter of a triangle.\n","sig":null,"attributes":[{"value":"/ Computes the perimeter of a triangle.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/triangle.rs","byte_start":959994,"byte_end":960035,"line_start":30,"line_end":30,"column_start":1,"column_end":42}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/triangle.rs","byte_start":960036,"byte_end":960045,"line_start":31,"line_end":31,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":6545},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/triangle.rs","byte_start":960264,"byte_end":960276,"line_start":37,"line_end":37,"column_start":8,"column_end":20},"name":"circumcircle","qualname":"::utils::triangle::circumcircle","value":"fn <N> (pa: &Point<N>, pb: &Point<N>, pc: &Point<N>) -> (Point<N>, N)","parent":null,"children":[],"decl_id":null,"docs":" Computes the circumcircle of a triangle.\n","sig":null,"attributes":[{"value":"/ Computes the circumcircle of a triangle.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/triangle.rs","byte_start":960212,"byte_end":960256,"line_start":36,"line_end":36,"column_start":1,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":6547},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/triangle.rs","byte_start":961501,"byte_end":961531,"line_start":77,"line_end":77,"column_start":8,"column_end":38},"name":"is_affinely_dependent_triangle","qualname":"::utils::triangle::is_affinely_dependent_triangle","value":"fn <N> (p1: &Point<N>, p2: &Point<N>, p3: &Point<N>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if three 3D points are approximately aligned.\n","sig":null,"attributes":[{"value":"/ Tests if three 3D points are approximately aligned.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/triangle.rs","byte_start":961413,"byte_end":961468,"line_start":75,"line_end":75,"column_start":1,"column_end":56}},{"value":"cfg(feature = \"dim3\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/triangle.rs","byte_start":961469,"byte_end":961493,"line_start":76,"line_end":76,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":6549},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/triangle.rs","byte_start":962027,"byte_end":962047,"line_start":97,"line_end":97,"column_start":8,"column_end":28},"name":"is_point_in_triangle","qualname":"::utils::triangle::is_point_in_triangle","value":"fn <N> (p: &Point<N>, p1: &Point<N>, p2: &Point<N>, p3: &Point<N>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if a point is inside of a triangle.\n","sig":null,"attributes":[{"value":"/ Tests if a point is inside of a triangle.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/triangle.rs","byte_start":961974,"byte_end":962019,"line_start":96,"line_end":96,"column_start":1,"column_end":46}}]},{"kind":"Mod","id":{"krate":0,"index":6551},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","byte_start":2533,"byte_end":2537,"line_start":95,"line_end":95,"column_start":9,"column_end":13},"name":"math","qualname":"::math","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":6552},{"krate":0,"index":6562},{"krate":0,"index":6563},{"krate":0,"index":6564},{"krate":0,"index":6565},{"krate":0,"index":6566},{"krate":0,"index":6568},{"krate":0,"index":6570},{"krate":0,"index":6572},{"krate":0,"index":6574},{"krate":0,"index":6576},{"krate":0,"index":6578},{"krate":0,"index":6580},{"krate":0,"index":6582}],"decl_id":null,"docs":" Compilation flags dependent aliases for mathematical types.\n","sig":null,"attributes":[{"value":"/ Compilation flags dependent aliases for mathematical types.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","byte_start":2436,"byte_end":2499,"line_start":93,"line_end":93,"column_start":1,"column_end":64}},{"value":"cfg(feature = \"dim3\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","byte_start":2500,"byte_end":2524,"line_start":94,"line_end":94,"column_start":1,"column_end":25}}]},{"kind":"Const","id":{"krate":0,"index":6562},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","byte_start":2689,"byte_end":2692,"line_start":99,"line_end":99,"column_start":15,"column_end":18},"name":"DIM","qualname":"::math::DIM","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The dimension of the space.\n","sig":null,"attributes":[{"value":"/ The dimension of the space.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","byte_start":2643,"byte_end":2674,"line_start":98,"line_end":98,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":6563},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","byte_start":2763,"byte_end":2766,"line_start":102,"line_end":102,"column_start":14,"column_end":17},"name":"Dim","qualname":"::math::Dim","value":"U3","parent":null,"children":[],"decl_id":null,"docs":" The dimension of the ambient space.\n","sig":null,"attributes":[{"value":"/ The dimension of the ambient space.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","byte_start":2710,"byte_end":2749,"line_start":101,"line_end":101,"column_start":5,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":6564},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","byte_start":2830,"byte_end":2840,"line_start":105,"line_end":105,"column_start":14,"column_end":24},"name":"SpatialDim","qualname":"::math::SpatialDim","value":"U6","parent":null,"children":[],"decl_id":null,"docs":" The dimension of a spatial vector.\n","sig":null,"attributes":[{"value":"/ The dimension of a spatial vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","byte_start":2778,"byte_end":2816,"line_start":104,"line_end":104,"column_start":5,"column_end":43}}]},{"kind":"Type","id":{"krate":0,"index":6565},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","byte_start":2901,"byte_end":2911,"line_start":108,"line_end":108,"column_start":14,"column_end":24},"name":"AngularDim","qualname":"::math::AngularDim","value":"U3","parent":null,"children":[],"decl_id":null,"docs":" The dimension of the rotations.\n","sig":null,"attributes":[{"value":"/ The dimension of the rotations.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","byte_start":2852,"byte_end":2887,"line_start":107,"line_end":107,"column_start":5,"column_end":40}}]},{"kind":"Type","id":{"krate":0,"index":6566},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","byte_start":2956,"byte_end":2961,"line_start":111,"line_end":111,"column_start":14,"column_end":19},"name":"Point","qualname":"::math::Point","value":"Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" The point type.\n","sig":null,"attributes":[{"value":"/ The point type.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","byte_start":2923,"byte_end":2942,"line_start":110,"line_end":110,"column_start":5,"column_end":24}}]},{"kind":"Type","id":{"krate":0,"index":6568},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","byte_start":3025,"byte_end":3038,"line_start":114,"line_end":114,"column_start":14,"column_end":27},"name":"AngularVector","qualname":"::math::AngularVector","value":"Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" The angular vector type.\n","sig":null,"attributes":[{"value":"/ The angular vector type.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","byte_start":2983,"byte_end":3011,"line_start":113,"line_end":113,"column_start":5,"column_end":33}}]},{"kind":"Type","id":{"krate":0,"index":6570},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","byte_start":3095,"byte_end":3101,"line_start":117,"line_end":117,"column_start":14,"column_end":20},"name":"Vector","qualname":"::math::Vector","value":"Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" The vector type.\n","sig":null,"attributes":[{"value":"/ The vector type.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","byte_start":3061,"byte_end":3081,"line_start":116,"line_end":116,"column_start":5,"column_end":25}}]},{"kind":"Type","id":{"krate":0,"index":6572},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","byte_start":3158,"byte_end":3164,"line_start":120,"line_end":120,"column_start":14,"column_end":20},"name":"Matrix","qualname":"::math::Matrix","value":"Matrix3<N>","parent":null,"children":[],"decl_id":null,"docs":" The matrix type.\n","sig":null,"attributes":[{"value":"/ The matrix type.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","byte_start":3124,"byte_end":3144,"line_start":119,"line_end":119,"column_start":5,"column_end":25}}]},{"kind":"Type","id":{"krate":0,"index":6574},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","byte_start":3254,"byte_end":3267,"line_start":123,"line_end":123,"column_start":14,"column_end":27},"name":"SpatialVector","qualname":"::math::SpatialVector","value":"Vector6<N>","parent":null,"children":[],"decl_id":null,"docs":" The vector type with dimension `SpatialDim × 1`.\n","sig":null,"attributes":[{"value":"/ The vector type with dimension `SpatialDim × 1`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","byte_start":3187,"byte_end":3240,"line_start":122,"line_end":122,"column_start":5,"column_end":57}}]},{"kind":"Type","id":{"krate":0,"index":6576},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","byte_start":3329,"byte_end":3340,"line_start":126,"line_end":126,"column_start":14,"column_end":25},"name":"Orientation","qualname":"::math::Orientation","value":"Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" The orientation type.\n","sig":null,"attributes":[{"value":"/ The orientation type.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","byte_start":3290,"byte_end":3315,"line_start":125,"line_end":125,"column_start":5,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":6578},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","byte_start":3412,"byte_end":3420,"line_start":129,"line_end":129,"column_start":14,"column_end":22},"name":"Isometry","qualname":"::math::Isometry","value":"Isometry3<N>","parent":null,"children":[],"decl_id":null,"docs":" The transformation matrix type.\n","sig":null,"attributes":[{"value":"/ The transformation matrix type.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","byte_start":3363,"byte_end":3398,"line_start":128,"line_end":128,"column_start":5,"column_end":40}}]},{"kind":"Type","id":{"krate":0,"index":6580},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","byte_start":3488,"byte_end":3496,"line_start":132,"line_end":132,"column_start":14,"column_end":22},"name":"Rotation","qualname":"::math::Rotation","value":"UnitQuaternion<N>","parent":null,"children":[],"decl_id":null,"docs":" The rotation matrix type.\n","sig":null,"attributes":[{"value":"/ The rotation matrix type.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","byte_start":3445,"byte_end":3474,"line_start":131,"line_end":131,"column_start":5,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":6582},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","byte_start":3565,"byte_end":3576,"line_start":135,"line_end":135,"column_start":14,"column_end":25},"name":"Translation","qualname":"::math::Translation","value":"Translation3<N>","parent":null,"children":[],"decl_id":null,"docs":" The translation type.\n","sig":null,"attributes":[{"value":"/ The translation type.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","byte_start":3526,"byte_end":3551,"line_start":134,"line_end":134,"column_start":5,"column_end":30}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb.rs","byte_start":9093,"byte_end":9097,"line_start":42,"line_end":42,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb.rs","byte_start":12433,"byte_end":12437,"line_start":149,"line_end":149,"column_start":42,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb_ball.rs","byte_start":15231,"byte_end":15235,"line_start":23,"line_end":23,"column_start":54,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":123},{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb_compound.rs","byte_start":15689,"byte_end":15697,"line_start":6,"line_end":6,"column_start":54,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":136},{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb_convex.rs","byte_start":16145,"byte_end":16155,"line_start":7,"line_end":7,"column_start":54,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":148},{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb_cuboid.rs","byte_start":16648,"byte_end":16654,"line_start":7,"line_end":7,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":162},{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb_heightfield.rs","byte_start":17307,"byte_end":17318,"line_start":6,"line_end":6,"column_start":54,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":175},{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb_plane.rs","byte_start":17763,"byte_end":17768,"line_start":7,"line_end":7,"column_start":54,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":191},{"krate":0,"index":192}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb_polyline.rs","byte_start":18378,"byte_end":18386,"line_start":6,"line_end":6,"column_start":54,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":204},{"krate":0,"index":205}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb_support_map.rs","byte_start":19311,"byte_end":19315,"line_start":10,"line_end":10,"column_start":54,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":232},{"krate":0,"index":233}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb_support_map.rs","byte_start":19657,"byte_end":19665,"line_start":23,"line_end":23,"column_start":54,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":236},{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb_support_map.rs","byte_start":19982,"byte_end":19989,"line_start":35,"line_end":35,"column_start":54,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":240},{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb_support_map.rs","byte_start":20306,"byte_end":20313,"line_start":47,"line_end":47,"column_start":54,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":244},{"krate":0,"index":245}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb_triangle.rs","byte_start":20801,"byte_end":20809,"line_start":8,"line_end":8,"column_start":54,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":259},{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb_trimesh.rs","byte_start":22798,"byte_end":22805,"line_start":6,"line_end":6,"column_start":54,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":272},{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_sphere.rs","byte_start":26764,"byte_end":26778,"line_start":39,"line_end":39,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_sphere.rs","byte_start":27407,"byte_end":27421,"line_start":64,"line_end":64,"column_start":42,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_sphere_ball.rs","byte_start":30665,"byte_end":30669,"line_start":6,"line_end":6,"column_start":64,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":344},{"krate":0,"index":345}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_sphere_capsule.rs","byte_start":31210,"byte_end":31217,"line_start":6,"line_end":6,"column_start":64,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":357},{"krate":0,"index":358}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_sphere_compound.rs","byte_start":31799,"byte_end":31807,"line_start":6,"line_end":6,"column_start":64,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":368},{"krate":0,"index":369}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_sphere_cone.rs","byte_start":32298,"byte_end":32302,"line_start":7,"line_end":7,"column_start":64,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":381},{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_sphere_convex.rs","byte_start":32956,"byte_end":32966,"line_start":7,"line_end":7,"column_start":64,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":393},{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_sphere_cuboid.rs","byte_start":33593,"byte_end":33599,"line_start":6,"line_end":6,"column_start":64,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":408},{"krate":0,"index":409}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_sphere_cylinder.rs","byte_start":34196,"byte_end":34204,"line_start":7,"line_end":7,"column_start":64,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":421},{"krate":0,"index":422}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_sphere_heightfield.rs","byte_start":34831,"byte_end":34842,"line_start":6,"line_end":6,"column_start":64,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":432},{"krate":0,"index":433}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_sphere_plane.rs","byte_start":35322,"byte_end":35327,"line_start":6,"line_end":6,"column_start":64,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":445},{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_sphere_polyline.rs","byte_start":35894,"byte_end":35902,"line_start":7,"line_end":7,"column_start":64,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":456},{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_sphere_segment.rs","byte_start":36403,"byte_end":36410,"line_start":7,"line_end":7,"column_start":64,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":468},{"krate":0,"index":469}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_sphere_triangle.rs","byte_start":37538,"byte_end":37546,"line_start":7,"line_end":7,"column_start":64,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":491},{"krate":0,"index":492}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_sphere_trimesh.rs","byte_start":38196,"byte_end":38203,"line_start":6,"line_end":6,"column_start":64,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":502},{"krate":0,"index":503}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/circular_cone.rs","byte_start":40420,"byte_end":40432,"line_start":28,"line_end":28,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":526},{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":529}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/spatialized_normal_cone.rs","byte_start":47978,"byte_end":47999,"line_start":15,"line_end":15,"column_start":42,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":539},{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":547}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":50008,"byte_end":50016,"line_start":16,"line_end":16,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":568}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":50413,"byte_end":50436,"line_start":30,"line_end":30,"column_start":20,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":575}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":50826,"byte_end":50849,"line_start":40,"line_end":40,"column_start":39,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":578}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":51379,"byte_end":51412,"line_start":56,"line_end":56,"column_start":20,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":586}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":51739,"byte_end":51772,"line_start":67,"line_end":67,"column_start":39,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":589}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":52736,"byte_end":52763,"line_start":95,"line_end":95,"column_start":20,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":592}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":53669,"byte_end":53696,"line_start":133,"line_end":133,"column_start":39,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":595}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":54903,"byte_end":54904,"line_start":172,"line_end":172,"column_start":78,"column_end":79},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":55152,"byte_end":55170,"line_start":180,"line_end":180,"column_start":71,"column_end":89},"value":"","parent":null,"children":[{"krate":0,"index":613}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":55612,"byte_end":55633,"line_start":194,"line_end":194,"column_start":9,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":624}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvh.rs","byte_start":63106,"byte_end":63113,"line_start":180,"line_end":180,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":693},{"krate":0,"index":695},{"krate":0,"index":698}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvh.rs","byte_start":65566,"byte_end":65579,"line_start":256,"line_end":256,"column_start":12,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":710}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvh.rs","byte_start":65848,"byte_end":65861,"line_start":267,"line_end":267,"column_start":37,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":714}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvh.rs","byte_start":66012,"byte_end":66025,"line_start":274,"line_end":274,"column_start":30,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvh.rs","byte_start":66074,"byte_end":66087,"line_start":276,"line_end":276,"column_start":39,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":721}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvh.rs","byte_start":66270,"byte_end":66283,"line_start":283,"line_end":283,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":725}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvt.rs","byte_start":68043,"byte_end":68050,"line_start":54,"line_end":54,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":740},{"krate":0,"index":741}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvt.rs","byte_start":68713,"byte_end":68716,"line_start":83,"line_end":83,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":755},{"krate":0,"index":757},{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":761},{"krate":0,"index":762},{"krate":0,"index":764},{"krate":0,"index":766}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvt.rs","byte_start":76555,"byte_end":76558,"line_start":275,"line_end":275,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":770},{"krate":0,"index":772},{"krate":0,"index":775},{"krate":0,"index":778}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvt.rs","byte_start":80606,"byte_end":80609,"line_start":403,"line_end":403,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":784},{"krate":0,"index":785},{"krate":0,"index":786},{"krate":0,"index":787},{"krate":0,"index":788}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/dbvt.rs","byte_start":82080,"byte_end":82090,"line_start":12,"line_end":12,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":799},{"krate":0,"index":800}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/dbvt.rs","byte_start":83969,"byte_end":83977,"line_start":87,"line_end":87,"column_start":46,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":805},{"krate":0,"index":806}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/dbvt.rs","byte_start":84615,"byte_end":84627,"line_start":107,"line_end":107,"column_start":43,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":810}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/dbvt.rs","byte_start":85131,"byte_end":85135,"line_start":126,"line_end":126,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":815},{"krate":0,"index":816},{"krate":0,"index":817},{"krate":0,"index":818},{"krate":0,"index":819},{"krate":0,"index":820}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/dbvt.rs","byte_start":93294,"byte_end":93298,"line_start":337,"line_end":337,"column_start":49,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":825},{"krate":0,"index":826}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/dbvt.rs","byte_start":93510,"byte_end":93514,"line_start":346,"line_end":346,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":832},{"krate":0,"index":833},{"krate":0,"index":834},{"krate":0,"index":835},{"krate":0,"index":836}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/broad_phase.rs","byte_start":98230,"byte_end":98251,"line_start":10,"line_end":10,"column_start":6,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":891},{"krate":0,"index":892},{"krate":0,"index":893}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/dbvt_broad_phase.rs","byte_start":102652,"byte_end":102671,"line_start":34,"line_end":34,"column_start":9,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":971},{"krate":0,"index":972}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/dbvt_broad_phase.rs","byte_start":103910,"byte_end":103924,"line_start":75,"line_end":75,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":991},{"krate":0,"index":992},{"krate":0,"index":993},{"krate":0,"index":995}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/dbvt_broad_phase.rs","byte_start":107413,"byte_end":107427,"line_start":168,"line_end":168,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1000},{"krate":0,"index":1001},{"krate":0,"index":1002},{"krate":0,"index":1003},{"krate":0,"index":1005},{"krate":0,"index":1006},{"krate":0,"index":1007},{"krate":0,"index":1008},{"krate":0,"index":1010},{"krate":0,"index":1012},{"krate":0,"index":1014}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/query.rs","byte_start":120263,"byte_end":120283,"line_start":45,"line_end":45,"column_start":50,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":1073},{"krate":0,"index":1074}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/query.rs","byte_start":122321,"byte_end":122343,"line_start":111,"line_end":111,"column_start":50,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":1095},{"krate":0,"index":1096}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/query.rs","byte_start":124130,"byte_end":124151,"line_start":165,"line_end":165,"column_start":9,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1116},{"krate":0,"index":1117}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/update.rs","byte_start":131571,"byte_end":131604,"line_start":25,"line_end":25,"column_start":9,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1198},{"krate":0,"index":1200},{"krate":0,"index":1201}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/ball_ball_manifold_generator.rs","byte_start":139606,"byte_end":139631,"line_start":17,"line_end":17,"column_start":20,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1295}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/ball_ball_manifold_generator.rs","byte_start":139913,"byte_end":139938,"line_start":27,"line_end":27,"column_start":52,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":1298}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/ball_convex_polyhedron_manifold_generator.rs","byte_start":141978,"byte_end":142015,"line_start":19,"line_end":19,"column_start":20,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1324},{"krate":0,"index":1325}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/ball_convex_polyhedron_manifold_generator.rs","byte_start":146010,"byte_end":146047,"line_start":125,"line_end":125,"column_start":52,"column_end":89},"value":"","parent":null,"children":[{"krate":0,"index":1328}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/capsule_capsule_manifold_generator.rs","byte_start":147256,"byte_end":147287,"line_start":15,"line_end":15,"column_start":20,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1350},{"krate":0,"index":1351}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/capsule_capsule_manifold_generator.rs","byte_start":148638,"byte_end":148669,"line_start":57,"line_end":57,"column_start":52,"column_end":83},"value":"","parent":null,"children":[{"krate":0,"index":1354}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/capsule_shape_manifold_generator.rs","byte_start":149767,"byte_end":149796,"line_start":13,"line_end":13,"column_start":20,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1377},{"krate":0,"index":1378}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/capsule_shape_manifold_generator.rs","byte_start":151740,"byte_end":151769,"line_start":77,"line_end":77,"column_start":52,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":1381}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/composite_shape_composite_shape_manifold_generator.rs","byte_start":153306,"byte_end":153351,"line_start":21,"line_end":21,"column_start":9,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1408}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/composite_shape_composite_shape_manifold_generator.rs","byte_start":153740,"byte_end":153785,"line_start":32,"line_end":32,"column_start":20,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1411}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/composite_shape_composite_shape_manifold_generator.rs","byte_start":157021,"byte_end":157066,"line_start":124,"line_end":124,"column_start":9,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1419}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/composite_shape_shape_manifold_generator.rs","byte_start":158520,"byte_end":158556,"line_start":23,"line_end":23,"column_start":20,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1453},{"krate":0,"index":1454}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/composite_shape_shape_manifold_generator.rs","byte_start":162046,"byte_end":162082,"line_start":123,"line_end":123,"column_start":52,"column_end":88},"value":"","parent":null,"children":[{"krate":0,"index":1460},{"krate":0,"index":1461}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/convex_polyhedron_convex_polyhedron_manifold_generator.rs","byte_start":166250,"byte_end":166299,"line_start":35,"line_end":35,"column_start":20,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":1506},{"krate":0,"index":1507}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/convex_polyhedron_convex_polyhedron_manifold_generator.rs","byte_start":167719,"byte_end":167768,"line_start":81,"line_end":81,"column_start":9,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1510}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/default_contact_dispatcher.rs","byte_start":171578,"byte_end":171602,"line_start":19,"line_end":19,"column_start":6,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1536}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/default_contact_dispatcher.rs","byte_start":171791,"byte_end":171815,"line_start":26,"line_end":26,"column_start":45,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":1539}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/heightfield_shape_manifold_generator.rs","byte_start":175576,"byte_end":175609,"line_start":17,"line_end":17,"column_start":20,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1570},{"krate":0,"index":1571}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/heightfield_shape_manifold_generator.rs","byte_start":179294,"byte_end":179327,"line_start":126,"line_end":126,"column_start":52,"column_end":85},"value":"","parent":null,"children":[{"krate":0,"index":1576}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/plane_ball_manifold_generator.rs","byte_start":181011,"byte_end":181037,"line_start":18,"line_end":18,"column_start":20,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1602},{"krate":0,"index":1603}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/plane_ball_manifold_generator.rs","byte_start":183700,"byte_end":183726,"line_start":86,"line_end":86,"column_start":52,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":1606}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/plane_convex_polyhedron_manifold_generator.rs","byte_start":184983,"byte_end":185021,"line_start":17,"line_end":17,"column_start":20,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1631},{"krate":0,"index":1632}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/plane_convex_polyhedron_manifold_generator.rs","byte_start":187747,"byte_end":187785,"line_start":84,"line_end":84,"column_start":52,"column_end":90},"value":"","parent":null,"children":[{"krate":0,"index":1635}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/trimesh_trimesh_manifold_generator.rs","byte_start":189716,"byte_end":189747,"line_start":23,"line_end":23,"column_start":20,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1677}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/trimesh_trimesh_manifold_generator.rs","byte_start":190231,"byte_end":190262,"line_start":36,"line_end":36,"column_start":20,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1680}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/trimesh_trimesh_manifold_generator.rs","byte_start":212192,"byte_end":212223,"line_start":518,"line_end":518,"column_start":52,"column_end":83},"value":"","parent":null,"children":[{"krate":0,"index":1689},{"krate":0,"index":1690}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/events.rs","byte_start":214558,"byte_end":214567,"line_start":19,"line_end":19,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1704},{"krate":0,"index":1705},{"krate":0,"index":1706},{"krate":0,"index":1707},{"krate":0,"index":1708},{"krate":0,"index":1710}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/events.rs","byte_start":216896,"byte_end":216910,"line_start":90,"line_end":90,"column_start":14,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1719}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":218615,"byte_end":218626,"line_start":30,"line_end":30,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1750},{"krate":0,"index":1751}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":219352,"byte_end":219368,"line_start":53,"line_end":53,"column_start":51,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":1760},{"krate":0,"index":1761},{"krate":0,"index":1762},{"krate":0,"index":1763},{"krate":0,"index":1766},{"krate":0,"index":1769},{"krate":0,"index":1772},{"krate":0,"index":1775},{"krate":0,"index":1776},{"krate":0,"index":1778},{"krate":0,"index":1780},{"krate":0,"index":1781},{"krate":0,"index":1784},{"krate":0,"index":1785},{"krate":0,"index":1787},{"krate":0,"index":1790},{"krate":0,"index":1793},{"krate":0,"index":1797},{"krate":0,"index":1801},{"krate":0,"index":1805}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":233249,"byte_end":233268,"line_start":411,"line_end":411,"column_start":9,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1817},{"krate":0,"index":1818}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/narrow_phase.rs","byte_start":235340,"byte_end":235351,"line_start":22,"line_end":22,"column_start":51,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1855},{"krate":0,"index":1856},{"krate":0,"index":1858},{"krate":0,"index":1861},{"krate":0,"index":1862},{"krate":0,"index":1865},{"krate":0,"index":1868},{"krate":0,"index":1870},{"krate":0,"index":1872},{"krate":0,"index":1873},{"krate":0,"index":1874}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/ball_ball_proximity_detector.rs","byte_start":246803,"byte_end":246828,"line_start":10,"line_end":10,"column_start":16,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1903}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/ball_ball_proximity_detector.rs","byte_start":246933,"byte_end":246958,"line_start":16,"line_end":16,"column_start":6,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1905}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/ball_ball_proximity_detector.rs","byte_start":247184,"byte_end":247209,"line_start":24,"line_end":24,"column_start":45,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":1908}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/composite_shape_shape_proximity_detector.rs","byte_start":248456,"byte_end":248492,"line_start":19,"line_end":19,"column_start":9,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1940}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/composite_shape_shape_proximity_detector.rs","byte_start":248950,"byte_end":248986,"line_start":32,"line_end":32,"column_start":20,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1943}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/composite_shape_shape_proximity_detector.rs","byte_start":253538,"byte_end":253574,"line_start":159,"line_end":159,"column_start":45,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":1950}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/default_proximity_dispatcher.rs","byte_start":254570,"byte_end":254596,"line_start":12,"line_end":12,"column_start":6,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1967}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/default_proximity_dispatcher.rs","byte_start":254791,"byte_end":254817,"line_start":19,"line_end":19,"column_start":47,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":1970}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/plane_support_map_proximity_detector.rs","byte_start":256277,"byte_end":256309,"line_start":11,"line_end":11,"column_start":6,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1984}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/plane_support_map_proximity_detector.rs","byte_start":256765,"byte_end":256797,"line_start":26,"line_end":26,"column_start":6,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1986}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/plane_support_map_proximity_detector.rs","byte_start":257162,"byte_end":257194,"line_start":37,"line_end":37,"column_start":45,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":1989}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/plane_support_map_proximity_detector.rs","byte_start":257651,"byte_end":257683,"line_start":54,"line_end":54,"column_start":45,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":1992}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/support_map_support_map_proximity_detector.rs","byte_start":259579,"byte_end":259616,"line_start":17,"line_end":17,"column_start":20,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2024}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/support_map_support_map_proximity_detector.rs","byte_start":260041,"byte_end":260078,"line_start":30,"line_end":30,"column_start":45,"column_end":82},"value":"","parent":null,"children":[{"krate":0,"index":2027}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":263297,"byte_end":263312,"line_start":50,"line_end":50,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2053},{"krate":0,"index":2054},{"krate":0,"index":2055},{"krate":0,"index":2056},{"krate":0,"index":2057},{"krate":0,"index":2058},{"krate":0,"index":2059},{"krate":0,"index":2060},{"krate":0,"index":2061},{"krate":0,"index":2062},{"krate":0,"index":2063},{"krate":0,"index":2064},{"krate":0,"index":2065},{"krate":0,"index":2066},{"krate":0,"index":2067},{"krate":0,"index":2068},{"krate":0,"index":2069},{"krate":0,"index":2070},{"krate":0,"index":2071},{"krate":0,"index":2072},{"krate":0,"index":2073},{"krate":0,"index":2074},{"krate":0,"index":2075},{"krate":0,"index":2076},{"krate":0,"index":2077},{"krate":0,"index":2078},{"krate":0,"index":2079},{"krate":0,"index":2080},{"krate":0,"index":2081},{"krate":0,"index":2082},{"krate":0,"index":2083},{"krate":0,"index":2084},{"krate":0,"index":2085},{"krate":0,"index":2086},{"krate":0,"index":2087},{"krate":0,"index":2088},{"krate":0,"index":2089}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":273816,"byte_end":273831,"line_start":368,"line_end":368,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2091}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":274006,"byte_end":274031,"line_start":378,"line_end":378,"column_start":6,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2095}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":274331,"byte_end":274356,"line_start":387,"line_end":387,"column_start":49,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":2100}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":275832,"byte_end":275858,"line_start":27,"line_end":27,"column_start":6,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2116},{"krate":0,"index":2117},{"krate":0,"index":2118},{"krate":0,"index":2119}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":280297,"byte_end":280322,"line_start":122,"line_end":122,"column_start":6,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2133}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":280922,"byte_end":280937,"line_start":143,"line_end":143,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2149},{"krate":0,"index":2150},{"krate":0,"index":2151},{"krate":0,"index":2152},{"krate":0,"index":2153},{"krate":0,"index":2154},{"krate":0,"index":2155},{"krate":0,"index":2156},{"krate":0,"index":2157},{"krate":0,"index":2158},{"krate":0,"index":2159},{"krate":0,"index":2160},{"krate":0,"index":2161},{"krate":0,"index":2162},{"krate":0,"index":2163},{"krate":0,"index":2164},{"krate":0,"index":2165},{"krate":0,"index":2166},{"krate":0,"index":2167},{"krate":0,"index":2168},{"krate":0,"index":2169}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":286320,"byte_end":286335,"line_start":306,"line_end":306,"column_start":49,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":2173},{"krate":0,"index":2174},{"krate":0,"index":2175},{"krate":0,"index":2176},{"krate":0,"index":2177},{"krate":0,"index":2178},{"krate":0,"index":2179},{"krate":0,"index":2180}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object_set.rs","byte_start":287518,"byte_end":287519,"line_start":11,"line_end":11,"column_start":89,"column_end":90},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object_set.rs","byte_start":288419,"byte_end":288438,"line_start":32,"line_end":32,"column_start":49,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":2208},{"krate":0,"index":2209},{"krate":0,"index":2210},{"krate":0,"index":2211}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object_set.rs","byte_start":289133,"byte_end":289152,"line_start":55,"line_end":55,"column_start":23,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2220},{"krate":0,"index":2221},{"krate":0,"index":2222},{"krate":0,"index":2223},{"krate":0,"index":2224},{"krate":0,"index":2225},{"krate":0,"index":2228},{"krate":0,"index":2229},{"krate":0,"index":2230},{"krate":0,"index":2231}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object_set.rs","byte_start":292069,"byte_end":292088,"line_start":141,"line_end":141,"column_start":60,"column_end":79},"value":"","parent":null,"children":[{"krate":0,"index":2235},{"krate":0,"index":2236}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object_set.rs","byte_start":292330,"byte_end":292349,"line_start":150,"line_end":150,"column_start":63,"column_end":82},"value":"","parent":null,"children":[{"krate":0,"index":2240}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object_set.rs","byte_start":292715,"byte_end":292731,"line_start":162,"line_end":162,"column_start":49,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":2250},{"krate":0,"index":2251}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object_set.rs","byte_start":293223,"byte_end":293242,"line_start":178,"line_end":178,"column_start":49,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":2262},{"krate":0,"index":2263}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/query_type.rs","byte_start":294257,"byte_end":294275,"line_start":21,"line_end":21,"column_start":20,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2270},{"krate":0,"index":2271},{"krate":0,"index":2272},{"krate":0,"index":2273}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":298026,"byte_end":298040,"line_start":44,"line_end":44,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2340},{"krate":0,"index":2341},{"krate":0,"index":2342},{"krate":0,"index":2344},{"krate":0,"index":2345},{"krate":0,"index":2346},{"krate":0,"index":2347},{"krate":0,"index":2348},{"krate":0,"index":2349},{"krate":0,"index":2350},{"krate":0,"index":2353},{"krate":0,"index":2355},{"krate":0,"index":2356},{"krate":0,"index":2358},{"krate":0,"index":2359},{"krate":0,"index":2360},{"krate":0,"index":2361},{"krate":0,"index":2362},{"krate":0,"index":2363},{"krate":0,"index":2368},{"krate":0,"index":2371},{"krate":0,"index":2374},{"krate":0,"index":2377},{"krate":0,"index":2380},{"krate":0,"index":2381},{"krate":0,"index":2383},{"krate":0,"index":2385},{"krate":0,"index":2387},{"krate":0,"index":2388},{"krate":0,"index":2389},{"krate":0,"index":2390},{"krate":0,"index":2392},{"krate":0,"index":2394},{"krate":0,"index":2396},{"krate":0,"index":2398},{"krate":0,"index":2401},{"krate":0,"index":2404},{"krate":0,"index":2407},{"krate":0,"index":2408}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/arrowhead_cap.rs","byte_start":322810,"byte_end":322822,"line_start":13,"line_end":13,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2464},{"krate":0,"index":2465}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/arrowhead_cap.rs","byte_start":325829,"byte_end":325841,"line_start":102,"line_end":102,"column_start":49,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2469},{"krate":0,"index":2470}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/no_cap.rs","byte_start":326811,"byte_end":326816,"line_start":8,"line_end":8,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2480}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/no_cap.rs","byte_start":326963,"byte_end":326968,"line_start":16,"line_end":16,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2483},{"krate":0,"index":2484}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/polyline_path.rs","byte_start":328834,"byte_end":328846,"line_start":16,"line_end":16,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2533}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/polyline_path.rs","byte_start":329430,"byte_end":329442,"line_start":37,"line_end":37,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2537}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/polyline_pattern.rs","byte_start":331674,"byte_end":331689,"line_start":42,"line_end":42,"column_start":17,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2571}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/polyline_pattern.rs","byte_start":332407,"byte_end":332422,"line_start":71,"line_end":71,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2576}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":336385,"byte_end":336396,"line_start":17,"line_end":17,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2594},{"krate":0,"index":2595}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":337465,"byte_end":337472,"line_start":52,"line_end":52,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2598},{"krate":0,"index":2601},{"krate":0,"index":2602},{"krate":0,"index":2603},{"krate":0,"index":2604},{"krate":0,"index":2605},{"krate":0,"index":2606}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":340054,"byte_end":340061,"line_start":148,"line_end":148,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2609},{"krate":0,"index":2611},{"krate":0,"index":2612},{"krate":0,"index":2613}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":342134,"byte_end":342141,"line_start":214,"line_end":214,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2616}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":342352,"byte_end":342359,"line_start":224,"line_end":224,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2619},{"krate":0,"index":2626}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":347235,"byte_end":347242,"line_start":349,"line_end":349,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2635}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/cso_point.rs","byte_start":386106,"byte_end":386114,"line_start":23,"line_end":23,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2810},{"krate":0,"index":2811},{"krate":0,"index":2812},{"krate":0,"index":2813},{"krate":0,"index":2814},{"krate":0,"index":2817},{"krate":0,"index":2820},{"krate":0,"index":2821}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/cso_point.rs","byte_start":388306,"byte_end":388314,"line_start":98,"line_end":98,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2824},{"krate":0,"index":2825}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/epa3.rs","byte_start":389053,"byte_end":389059,"line_start":19,"line_end":19,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2850}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/epa3.rs","byte_start":389278,"byte_end":389284,"line_start":29,"line_end":29,"column_start":27,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/epa3.rs","byte_start":389326,"byte_end":389332,"line_start":31,"line_end":31,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2855}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/epa3.rs","byte_start":389501,"byte_end":389507,"line_start":38,"line_end":38,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2858}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/epa3.rs","byte_start":389994,"byte_end":389998,"line_start":61,"line_end":61,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2861},{"krate":0,"index":2865},{"krate":0,"index":2869},{"krate":0,"index":2870},{"krate":0,"index":2871},{"krate":0,"index":2872}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/epa3.rs","byte_start":392841,"byte_end":392855,"line_start":156,"line_end":156,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2877}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/epa3.rs","byte_start":393196,"byte_end":393199,"line_start":170,"line_end":170,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2886},{"krate":0,"index":2887},{"krate":0,"index":2888},{"krate":0,"index":2891},{"krate":0,"index":2895},{"krate":0,"index":2896},{"krate":0,"index":2897}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/special_support_maps.rs","byte_start":418460,"byte_end":418474,"line_start":9,"line_end":9,"column_start":38,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2953},{"krate":0,"index":2954},{"krate":0,"index":2955},{"krate":0,"index":2956}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/special_support_maps.rs","byte_start":419297,"byte_end":419309,"line_start":39,"line_end":39,"column_start":69,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":2967},{"krate":0,"index":2968},{"krate":0,"index":2969},{"krate":0,"index":2970}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/voronoi_simplex3.rs","byte_start":420618,"byte_end":420632,"line_start":22,"line_end":22,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2993},{"krate":0,"index":2997},{"krate":0,"index":2998},{"krate":0,"index":2999},{"krate":0,"index":3000},{"krate":0,"index":3001},{"krate":0,"index":3002},{"krate":0,"index":3003},{"krate":0,"index":3004},{"krate":0,"index":3005},{"krate":0,"index":3006},{"krate":0,"index":3007},{"krate":0,"index":3008},{"krate":0,"index":3009},{"krate":0,"index":3010}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/closest_points/closest_points.rs","byte_start":433914,"byte_end":433927,"line_start":17,"line_end":17,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3037}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/closest_points/closest_points_composite_shape_shape.rs","byte_start":436510,"byte_end":436556,"line_start":56,"line_end":56,"column_start":25,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":3087}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/closest_points/closest_points_composite_shape_shape.rs","byte_start":437274,"byte_end":437320,"line_start":84,"line_end":84,"column_start":9,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3092},{"krate":0,"index":3093}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact.rs","byte_start":452091,"byte_end":452098,"line_start":29,"line_end":29,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3222},{"krate":0,"index":3223}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact.rs","byte_start":452682,"byte_end":452689,"line_start":49,"line_end":49,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3226}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact.rs","byte_start":453638,"byte_end":453652,"line_start":74,"line_end":74,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3229}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact.rs","byte_start":454190,"byte_end":454207,"line_start":97,"line_end":97,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3232},{"krate":0,"index":3233},{"krate":0,"index":3234},{"krate":0,"index":3235},{"krate":0,"index":3236},{"krate":0,"index":3237},{"krate":0,"index":3238},{"krate":0,"index":3239},{"krate":0,"index":3240}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":462357,"byte_end":462380,"line_start":39,"line_end":39,"column_start":20,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3310}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":463239,"byte_end":463255,"line_start":65,"line_end":65,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3313},{"krate":0,"index":3314},{"krate":0,"index":3315},{"krate":0,"index":3316},{"krate":0,"index":3317},{"krate":0,"index":3318},{"krate":0,"index":3319},{"krate":0,"index":3320},{"krate":0,"index":3321},{"krate":0,"index":3322},{"krate":0,"index":3323},{"krate":0,"index":3324},{"krate":0,"index":3325},{"krate":0,"index":3326},{"krate":0,"index":3327},{"krate":0,"index":3328},{"krate":0,"index":3329},{"krate":0,"index":3330},{"krate":0,"index":3331},{"krate":0,"index":3332}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_manifold.rs","byte_start":475319,"byte_end":475334,"line_start":41,"line_end":41,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3350},{"krate":0,"index":3351},{"krate":0,"index":3352},{"krate":0,"index":3355},{"krate":0,"index":3358},{"krate":0,"index":3359},{"krate":0,"index":3360},{"krate":0,"index":3361},{"krate":0,"index":3362},{"krate":0,"index":3366}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/distance/distance_composite_shape_shape.rs","byte_start":495464,"byte_end":495503,"line_start":62,"line_end":62,"column_start":9,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3508},{"krate":0,"index":3509}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/error.rs","byte_start":499481,"byte_end":499492,"line_start":7,"line_end":7,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3552}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/error.rs","byte_start":499652,"byte_end":499663,"line_start":13,"line_end":13,"column_start":28,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/nonlinear_time_of_impact/nonlinear_time_of_impact_composite_shape_shape.rs","byte_start":503743,"byte_end":503786,"line_start":73,"line_end":73,"column_start":17,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3623}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/nonlinear_time_of_impact/nonlinear_time_of_impact_composite_shape_shape.rs","byte_start":504513,"byte_end":504556,"line_start":101,"line_end":101,"column_start":9,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3628},{"krate":0,"index":3629}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_aabb.rs","byte_start":516262,"byte_end":516266,"line_start":8,"line_end":8,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3698}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_aabb.rs","byte_start":517785,"byte_end":517789,"line_start":62,"line_end":62,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3701},{"krate":0,"index":3702},{"krate":0,"index":3703},{"krate":0,"index":3704}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_ball.rs","byte_start":521095,"byte_end":521099,"line_start":8,"line_end":8,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3719},{"krate":0,"index":3720},{"krate":0,"index":3721},{"krate":0,"index":3722}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_bounding_sphere.rs","byte_start":522575,"byte_end":522589,"line_start":7,"line_end":7,"column_start":38,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3737},{"krate":0,"index":3738},{"krate":0,"index":3739},{"krate":0,"index":3740}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_capsule.rs","byte_start":523927,"byte_end":523934,"line_start":6,"line_end":6,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3759},{"krate":0,"index":3760}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_compound.rs","byte_start":525507,"byte_end":525515,"line_start":8,"line_end":8,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3783},{"krate":0,"index":3784},{"krate":0,"index":3785}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_compound.rs","byte_start":526916,"byte_end":526940,"line_start":60,"line_end":60,"column_start":64,"column_end":88},"value":"","parent":null,"children":[{"krate":0,"index":3795},{"krate":0,"index":3796}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_cuboid.rs","byte_start":528109,"byte_end":528115,"line_start":7,"line_end":7,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3812},{"krate":0,"index":3813},{"krate":0,"index":3814},{"krate":0,"index":3815}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_heightfield.rs","byte_start":529505,"byte_end":529516,"line_start":6,"line_end":6,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3833},{"krate":0,"index":3834},{"krate":0,"index":3835}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_heightfield.rs","byte_start":530685,"byte_end":530696,"line_start":47,"line_end":47,"column_start":50,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":3838},{"krate":0,"index":3839}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_plane.rs","byte_start":531163,"byte_end":531168,"line_start":6,"line_end":6,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3855},{"krate":0,"index":3856},{"krate":0,"index":3857},{"krate":0,"index":3858}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_polyline.rs","byte_start":532804,"byte_end":532812,"line_start":10,"line_end":10,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3882},{"krate":0,"index":3883},{"krate":0,"index":3884}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_polyline.rs","byte_start":534101,"byte_end":534109,"line_start":54,"line_end":54,"column_start":50,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3887},{"krate":0,"index":3888}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_query.rs","byte_start":536952,"byte_end":536967,"line_start":15,"line_end":15,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3900}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_segment.rs","byte_start":540048,"byte_end":540055,"line_start":6,"line_end":6,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3928},{"krate":0,"index":3929}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_segment.rs","byte_start":541421,"byte_end":541428,"line_start":48,"line_end":48,"column_start":50,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3932},{"krate":0,"index":3933}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_support_map.rs","byte_start":545846,"byte_end":545854,"line_start":56,"line_end":56,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3982},{"krate":0,"index":3983}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_support_map.rs","byte_start":546367,"byte_end":546371,"line_start":73,"line_end":73,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3986},{"krate":0,"index":3987}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_support_map.rs","byte_start":546884,"byte_end":546894,"line_start":90,"line_end":90,"column_start":38,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3990},{"krate":0,"index":3991}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_tetrahedron.rs","byte_start":549025,"byte_end":549036,"line_start":6,"line_end":6,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4010},{"krate":0,"index":4011}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_tetrahedron.rs","byte_start":549902,"byte_end":549913,"line_start":31,"line_end":31,"column_start":50,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":4014},{"krate":0,"index":4015}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_triangle.rs","byte_start":561025,"byte_end":561033,"line_start":21,"line_end":21,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4041},{"krate":0,"index":4042}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_triangle.rs","byte_start":562313,"byte_end":562321,"line_start":57,"line_end":57,"column_start":50,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":4045},{"krate":0,"index":4046}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_trimesh.rs","byte_start":571281,"byte_end":571288,"line_start":10,"line_end":10,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4086},{"krate":0,"index":4087},{"krate":0,"index":4088}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_trimesh.rs","byte_start":572160,"byte_end":572167,"line_start":43,"line_end":43,"column_start":50,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":4091},{"krate":0,"index":4092}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_trimesh.rs","byte_start":572945,"byte_end":572968,"line_start":74,"line_end":74,"column_start":64,"column_end":87},"value":"","parent":null,"children":[{"krate":0,"index":4101},{"krate":0,"index":4102}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/proximity/proximity_composite_shape_shape.rs","byte_start":577631,"byte_end":577668,"line_start":57,"line_end":57,"column_start":36,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":4165}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/proximity/proximity_composite_shape_shape.rs","byte_start":578337,"byte_end":578374,"line_start":84,"line_end":84,"column_start":9,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4170},{"krate":0,"index":4171}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray.rs","byte_start":585972,"byte_end":585975,"line_start":18,"line_end":18,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4247},{"krate":0,"index":4248},{"krate":0,"index":4249},{"krate":0,"index":4250},{"krate":0,"index":4251}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray.rs","byte_start":588120,"byte_end":588135,"line_start":82,"line_end":82,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4254},{"krate":0,"index":4255}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_aabb.rs","byte_start":590686,"byte_end":590690,"line_start":13,"line_end":13,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4285},{"krate":0,"index":4286},{"krate":0,"index":4288}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_aabb.rs","byte_start":592914,"byte_end":592918,"line_start":86,"line_end":86,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4291},{"krate":0,"index":4293},{"krate":0,"index":4295},{"krate":0,"index":4297}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_ball.rs","byte_start":600216,"byte_end":600220,"line_start":24,"line_end":24,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4326},{"krate":0,"index":4328},{"krate":0,"index":4330}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_bounding_sphere.rs","byte_start":603679,"byte_end":603693,"line_start":7,"line_end":7,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4349},{"krate":0,"index":4350},{"krate":0,"index":4351},{"krate":0,"index":4352}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_compound.rs","byte_start":605503,"byte_end":605511,"line_start":9,"line_end":9,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4368},{"krate":0,"index":4370}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_compound.rs","byte_start":606846,"byte_end":606867,"line_start":61,"line_end":61,"column_start":64,"column_end":85},"value":"","parent":null,"children":[{"krate":0,"index":4382},{"krate":0,"index":4383}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_compound.rs","byte_start":608142,"byte_end":608172,"line_start":107,"line_end":107,"column_start":9,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4394},{"krate":0,"index":4395}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_cuboid.rs","byte_start":609461,"byte_end":609467,"line_start":7,"line_end":7,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4409},{"krate":0,"index":4410},{"krate":0,"index":4411}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_heightfield.rs","byte_start":614485,"byte_end":614496,"line_start":123,"line_end":123,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4422}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_plane.rs","byte_start":619657,"byte_end":619662,"line_start":41,"line_end":41,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4446}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_polyline.rs","byte_start":620938,"byte_end":620946,"line_start":8,"line_end":8,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4464},{"krate":0,"index":4466}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_polyline.rs","byte_start":622350,"byte_end":622371,"line_start":62,"line_end":62,"column_start":64,"column_end":85},"value":"","parent":null,"children":[{"krate":0,"index":4477},{"krate":0,"index":4478}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_polyline.rs","byte_start":623692,"byte_end":623722,"line_start":107,"line_end":107,"column_start":9,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4488},{"krate":0,"index":4489}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_support_map.rs","byte_start":628605,"byte_end":628613,"line_start":63,"line_end":63,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4534}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_support_map.rs","byte_start":629223,"byte_end":629227,"line_start":89,"line_end":89,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4538}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_support_map.rs","byte_start":629812,"byte_end":629819,"line_start":114,"line_end":114,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4542}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_support_map.rs","byte_start":630429,"byte_end":630439,"line_start":140,"line_end":140,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4546}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_support_map.rs","byte_start":631674,"byte_end":631681,"line_start":192,"line_end":192,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4550}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_triangle.rs","byte_start":635418,"byte_end":635426,"line_start":7,"line_end":7,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4569}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_trimesh.rs","byte_start":638152,"byte_end":638159,"line_start":8,"line_end":8,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4593},{"krate":0,"index":4595},{"krate":0,"index":4597}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_trimesh.rs","byte_start":640866,"byte_end":640886,"line_start":106,"line_end":106,"column_start":64,"column_end":84},"value":"","parent":null,"children":[{"krate":0,"index":4608},{"krate":0,"index":4609}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_trimesh.rs","byte_start":642200,"byte_end":642229,"line_start":151,"line_end":151,"column_start":9,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4619},{"krate":0,"index":4620}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_trimesh.rs","byte_start":643672,"byte_end":643707,"line_start":200,"line_end":200,"column_start":9,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4630},{"krate":0,"index":4631}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/time_of_impact/time_of_impact.rs","byte_start":647648,"byte_end":647651,"line_start":46,"line_end":46,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4664}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/time_of_impact/time_of_impact_composite_shape_shape.rs","byte_start":655046,"byte_end":655080,"line_start":85,"line_end":85,"column_start":25,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":4732}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/time_of_impact/time_of_impact_composite_shape_shape.rs","byte_start":656137,"byte_end":656171,"line_start":125,"line_end":125,"column_start":9,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4737},{"krate":0,"index":4738}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/toi_dispatcher.rs","byte_start":667967,"byte_end":667987,"line_start":56,"line_end":56,"column_start":41,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":4804},{"krate":0,"index":4805}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/toi_dispatcher.rs","byte_start":669587,"byte_end":669592,"line_start":118,"line_end":118,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7630},{"krate":0,"index":7632}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/aabb_sets_interferences_collector.rs","byte_start":672118,"byte_end":672148,"line_start":22,"line_end":22,"column_start":27,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":4849}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/aabb_sets_interferences_collector.rs","byte_start":672656,"byte_end":672686,"line_start":41,"line_end":41,"column_start":9,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4854}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/bounding_volume_interferences_collector.rs","byte_start":673942,"byte_end":673978,"line_start":15,"line_end":15,"column_start":20,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":4875}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/bounding_volume_interferences_collector.rs","byte_start":674440,"byte_end":674476,"line_start":34,"line_end":34,"column_start":39,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":4881}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/composite_closest_point_visitor.rs","byte_start":675403,"byte_end":675431,"line_start":15,"line_end":15,"column_start":46,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":4908}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/composite_closest_point_visitor.rs","byte_start":675839,"byte_end":675867,"line_start":27,"line_end":27,"column_start":9,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4913},{"krate":0,"index":4914}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/composite_point_containment_test.rs","byte_start":677587,"byte_end":677616,"line_start":19,"line_end":19,"column_start":28,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":4939}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/point_interferences_collector.rs","byte_start":678835,"byte_end":678862,"line_start":16,"line_end":16,"column_start":27,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":4960}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/point_interferences_collector.rs","byte_start":679220,"byte_end":679247,"line_start":30,"line_end":30,"column_start":39,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":4966}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/ray_interferences_collector.rs","byte_start":680200,"byte_end":680225,"line_start":16,"line_end":16,"column_start":27,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":4987}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/ray_interferences_collector.rs","byte_start":680605,"byte_end":680630,"line_start":32,"line_end":32,"column_start":39,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":4993}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/ray_intersection_cost_fn_visitor.rs","byte_start":682200,"byte_end":682228,"line_start":32,"line_end":32,"column_start":35,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":5026}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/ray_intersection_cost_fn_visitor.rs","byte_start":682905,"byte_end":682933,"line_start":55,"line_end":55,"column_start":9,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5033},{"krate":0,"index":5034}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/ball.rs","byte_start":687549,"byte_end":687553,"line_start":14,"line_end":14,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5085},{"krate":0,"index":5086}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/ball.rs","byte_start":687908,"byte_end":687912,"line_start":29,"line_end":29,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":5089},{"krate":0,"index":5090},{"krate":0,"index":5091},{"krate":0,"index":5092}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/capsule.rs","byte_start":689165,"byte_end":689172,"line_start":19,"line_end":19,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5111},{"krate":0,"index":5112},{"krate":0,"index":5113},{"krate":0,"index":5114},{"krate":0,"index":5115},{"krate":0,"index":5116}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/capsule.rs","byte_start":690690,"byte_end":690697,"line_start":72,"line_end":72,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5120},{"krate":0,"index":5121}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/capsule.rs","byte_start":691189,"byte_end":691215,"line_start":90,"line_end":90,"column_start":20,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/capsule.rs","byte_start":691408,"byte_end":691434,"line_start":98,"line_end":98,"column_start":47,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":5129}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/compound.rs","byte_start":694781,"byte_end":694789,"line_start":26,"line_end":26,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5170}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/compound.rs","byte_start":695685,"byte_end":695693,"line_start":56,"line_end":56,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5173},{"krate":0,"index":5174},{"krate":0,"index":5175},{"krate":0,"index":5176},{"krate":0,"index":5177},{"krate":0,"index":5178}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/compound.rs","byte_start":697426,"byte_end":697434,"line_start":111,"line_end":111,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":5181},{"krate":0,"index":5182},{"krate":0,"index":5183},{"krate":0,"index":5184},{"krate":0,"index":5185}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/compound.rs","byte_start":698568,"byte_end":698592,"line_start":161,"line_end":161,"column_start":24,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":5195}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/compound.rs","byte_start":698850,"byte_end":698874,"line_start":171,"line_end":171,"column_start":51,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":5199}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/cone.rs","byte_start":700631,"byte_end":700635,"line_start":17,"line_end":17,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5210},{"krate":0,"index":5211},{"krate":0,"index":5212}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/cone.rs","byte_start":701424,"byte_end":701428,"line_start":45,"line_end":45,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":5215}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex.rs","byte_start":702789,"byte_end":702793,"line_start":26,"line_end":26,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5242}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex.rs","byte_start":703476,"byte_end":703484,"line_start":53,"line_end":53,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5245}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex.rs","byte_start":704295,"byte_end":704305,"line_start":83,"line_end":83,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5248},{"krate":0,"index":5250},{"krate":0,"index":5251},{"krate":0,"index":5252},{"krate":0,"index":5253},{"krate":0,"index":5254}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex.rs","byte_start":716623,"byte_end":716633,"line_start":416,"line_end":416,"column_start":38,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":5257}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex.rs","byte_start":716831,"byte_end":716841,"line_start":423,"line_end":423,"column_start":44,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":5260},{"krate":0,"index":5261},{"krate":0,"index":5262},{"krate":0,"index":5263},{"krate":0,"index":5264},{"krate":0,"index":5265},{"krate":0,"index":5266}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polygonal_feature3.rs","byte_start":721295,"byte_end":721308,"line_start":19,"line_end":19,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5295},{"krate":0,"index":5296}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polygonal_feature3.rs","byte_start":722559,"byte_end":722581,"line_start":56,"line_end":56,"column_start":20,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":5299},{"krate":0,"index":5300},{"krate":0,"index":5301},{"krate":0,"index":5302},{"krate":0,"index":5303},{"krate":0,"index":5304},{"krate":0,"index":5305},{"krate":0,"index":5306},{"krate":0,"index":5307},{"krate":0,"index":5308},{"krate":0,"index":5309},{"krate":0,"index":5310},{"krate":0,"index":5311},{"krate":0,"index":5312},{"krate":0,"index":5313},{"krate":0,"index":5314},{"krate":0,"index":5315},{"krate":0,"index":5317}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polyhedron.rs","byte_start":735717,"byte_end":735726,"line_start":25,"line_end":25,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5330},{"krate":0,"index":5331},{"krate":0,"index":5332}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/cuboid.rs","byte_start":739060,"byte_end":739066,"line_start":23,"line_end":23,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5360}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/cuboid.rs","byte_start":739346,"byte_end":739352,"line_start":32,"line_end":32,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5363},{"krate":0,"index":5364}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/cuboid.rs","byte_start":742645,"byte_end":742651,"line_start":135,"line_end":135,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5367}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/cuboid.rs","byte_start":742937,"byte_end":742943,"line_start":148,"line_end":148,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":5370},{"krate":0,"index":5371},{"krate":0,"index":5372},{"krate":0,"index":5373},{"krate":0,"index":5374},{"krate":0,"index":5375},{"krate":0,"index":5376}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/cylinder.rs","byte_start":757026,"byte_end":757034,"line_start":17,"line_end":17,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5387},{"krate":0,"index":5388},{"krate":0,"index":5389}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/cylinder.rs","byte_start":757906,"byte_end":757914,"line_start":47,"line_end":47,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":5392}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/heightfield3.rs","byte_start":760836,"byte_end":760847,"line_start":35,"line_end":35,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5417},{"krate":0,"index":5418},{"krate":0,"index":5419},{"krate":0,"index":5420},{"krate":0,"index":5421},{"krate":0,"index":5422},{"krate":0,"index":5423},{"krate":0,"index":5424},{"krate":0,"index":5425},{"krate":0,"index":5426},{"krate":0,"index":5427},{"krate":0,"index":5430},{"krate":0,"index":5431},{"krate":0,"index":5432},{"krate":0,"index":5433},{"krate":0,"index":5434},{"krate":0,"index":5435},{"krate":0,"index":5436},{"krate":0,"index":5437},{"krate":0,"index":5438},{"krate":0,"index":5439},{"krate":0,"index":5440},{"krate":0,"index":5441},{"krate":0,"index":5442},{"krate":0,"index":5443}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/heightfield3.rs","byte_start":776537,"byte_end":776575,"line_start":464,"line_end":464,"column_start":24,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":5453}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/heightfield3.rs","byte_start":776825,"byte_end":776863,"line_start":473,"line_end":473,"column_start":51,"column_end":89},"value":"","parent":null,"children":[{"krate":0,"index":5457}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/heightfield3.rs","byte_start":778281,"byte_end":778301,"line_start":526,"line_end":526,"column_start":37,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":5467},{"krate":0,"index":5468}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/plane.rs","byte_start":779430,"byte_end":779435,"line_start":13,"line_end":13,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5476},{"krate":0,"index":5477}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":781492,"byte_end":781500,"line_start":56,"line_end":56,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5515},{"krate":0,"index":5517},{"krate":0,"index":5518},{"krate":0,"index":5519},{"krate":0,"index":5521},{"krate":0,"index":5522},{"krate":0,"index":5523},{"krate":0,"index":5524},{"krate":0,"index":5525},{"krate":0,"index":5526},{"krate":0,"index":5527},{"krate":0,"index":5528},{"krate":0,"index":5529},{"krate":0,"index":5530},{"krate":0,"index":5531},{"krate":0,"index":5532},{"krate":0,"index":5533},{"krate":0,"index":5534},{"krate":0,"index":5535},{"krate":0,"index":5536},{"krate":0,"index":5537},{"krate":0,"index":5538},{"krate":0,"index":5539},{"krate":0,"index":5542},{"krate":0,"index":5543}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":796241,"byte_end":796249,"line_start":533,"line_end":533,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":5546},{"krate":0,"index":5547},{"krate":0,"index":5548},{"krate":0,"index":5549},{"krate":0,"index":5550}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":797277,"byte_end":797285,"line_start":576,"line_end":576,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":5553},{"krate":0,"index":5554},{"krate":0,"index":5555}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":802530,"byte_end":802554,"line_start":711,"line_end":711,"column_start":24,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":5566}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":802919,"byte_end":802943,"line_start":727,"line_end":727,"column_start":51,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":5570}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/segment.rs","byte_start":805723,"byte_end":805743,"line_start":32,"line_end":32,"column_start":20,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5592}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/segment.rs","byte_start":806205,"byte_end":806212,"line_start":49,"line_end":49,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5597},{"krate":0,"index":5598}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/segment.rs","byte_start":806584,"byte_end":806591,"line_start":62,"line_end":62,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5602},{"krate":0,"index":5603}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/segment.rs","byte_start":806981,"byte_end":806988,"line_start":78,"line_end":78,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5606},{"krate":0,"index":5607},{"krate":0,"index":5608},{"krate":0,"index":5609},{"krate":0,"index":5610},{"krate":0,"index":5611},{"krate":0,"index":5612},{"krate":0,"index":5613}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/segment.rs","byte_start":810483,"byte_end":810490,"line_start":183,"line_end":183,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5616}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/segment.rs","byte_start":810753,"byte_end":810760,"line_start":194,"line_end":194,"column_start":44,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":5619},{"krate":0,"index":5620},{"krate":0,"index":5621},{"krate":0,"index":5622},{"krate":0,"index":5623},{"krate":0,"index":5624},{"krate":0,"index":5625}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":817210,"byte_end":817211,"line_start":16,"line_end":16,"column_start":69,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":5655}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":821327,"byte_end":821338,"line_start":157,"line_end":157,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5683},{"krate":0,"index":5685},{"krate":0,"index":5686},{"krate":0,"index":5687}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":822112,"byte_end":822123,"line_start":183,"line_end":183,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":5690}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":822238,"byte_end":822249,"line_start":190,"line_end":190,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5693},{"krate":0,"index":5694}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape_impl.rs","byte_start":825085,"byte_end":825093,"line_start":111,"line_end":111,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":8120},{"krate":0,"index":8121},{"krate":0,"index":8122},{"krate":0,"index":8123},{"krate":0,"index":8124},{"krate":0,"index":8125},{"krate":0,"index":8126},{"krate":0,"index":8127},{"krate":0,"index":8128},{"krate":0,"index":8129}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape_impl.rs","byte_start":825222,"byte_end":825229,"line_start":117,"line_end":117,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":8130},{"krate":0,"index":8131},{"krate":0,"index":8132},{"krate":0,"index":8133},{"krate":0,"index":8134},{"krate":0,"index":8135},{"krate":0,"index":8136},{"krate":0,"index":8137},{"krate":0,"index":8138},{"krate":0,"index":8139}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape_impl.rs","byte_start":825358,"byte_end":825362,"line_start":123,"line_end":123,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":8140},{"krate":0,"index":8141},{"krate":0,"index":8142},{"krate":0,"index":8143},{"krate":0,"index":8144},{"krate":0,"index":8145},{"krate":0,"index":8146},{"krate":0,"index":5740}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape_impl.rs","byte_start":825782,"byte_end":825788,"line_start":141,"line_end":141,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":8147},{"krate":0,"index":8148},{"krate":0,"index":8149},{"krate":0,"index":8150},{"krate":0,"index":8151},{"krate":0,"index":8152},{"krate":0,"index":8153},{"krate":0,"index":8154},{"krate":0,"index":8155},{"krate":0,"index":8156}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape_impl.rs","byte_start":825917,"byte_end":825924,"line_start":147,"line_end":147,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":8157},{"krate":0,"index":8158},{"krate":0,"index":8159},{"krate":0,"index":8160},{"krate":0,"index":8161},{"krate":0,"index":8162},{"krate":0,"index":8163},{"krate":0,"index":5745}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape_impl.rs","byte_start":826369,"byte_end":826379,"line_start":166,"line_end":166,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":8164},{"krate":0,"index":8165},{"krate":0,"index":8166},{"krate":0,"index":8167},{"krate":0,"index":8168},{"krate":0,"index":8169},{"krate":0,"index":8170},{"krate":0,"index":8171},{"krate":0,"index":8172},{"krate":0,"index":8173}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape_impl.rs","byte_start":826675,"byte_end":826683,"line_start":179,"line_end":179,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":8174},{"krate":0,"index":8175},{"krate":0,"index":8176},{"krate":0,"index":8177},{"krate":0,"index":8178},{"krate":0,"index":8179},{"krate":0,"index":8180},{"krate":0,"index":5750},{"krate":0,"index":5751}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape_impl.rs","byte_start":827366,"byte_end":827373,"line_start":204,"line_end":204,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":8181},{"krate":0,"index":8182},{"krate":0,"index":8183},{"krate":0,"index":8184},{"krate":0,"index":8185},{"krate":0,"index":8186},{"krate":0,"index":8187},{"krate":0,"index":8188},{"krate":0,"index":8189},{"krate":0,"index":8190},{"krate":0,"index":5754},{"krate":0,"index":5755}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape_impl.rs","byte_start":828235,"byte_end":828243,"line_start":231,"line_end":231,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":8191},{"krate":0,"index":8192},{"krate":0,"index":8193},{"krate":0,"index":8194},{"krate":0,"index":8195},{"krate":0,"index":8196},{"krate":0,"index":8197},{"krate":0,"index":8198},{"krate":0,"index":8199},{"krate":0,"index":8200},{"krate":0,"index":5758},{"krate":0,"index":5759}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape_impl.rs","byte_start":828718,"byte_end":828729,"line_start":252,"line_end":252,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":8201},{"krate":0,"index":8202},{"krate":0,"index":8203},{"krate":0,"index":8204},{"krate":0,"index":8205},{"krate":0,"index":5762},{"krate":0,"index":5763}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape_impl.rs","byte_start":829122,"byte_end":829127,"line_start":272,"line_end":272,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":8206},{"krate":0,"index":8207},{"krate":0,"index":8208},{"krate":0,"index":8209},{"krate":0,"index":8210},{"krate":0,"index":5766}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":832397,"byte_end":832421,"line_start":48,"line_end":48,"column_start":20,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5792},{"krate":0,"index":5795}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":834166,"byte_end":834177,"line_start":94,"line_end":94,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5798},{"krate":0,"index":5799},{"krate":0,"index":5801},{"krate":0,"index":5802},{"krate":0,"index":5803},{"krate":0,"index":5804},{"krate":0,"index":5805},{"krate":0,"index":5806},{"krate":0,"index":5807},{"krate":0,"index":5808},{"krate":0,"index":5809}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":840241,"byte_end":840262,"line_start":50,"line_end":50,"column_start":20,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5831},{"krate":0,"index":5834}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":841558,"byte_end":841566,"line_start":93,"line_end":93,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5837},{"krate":0,"index":5838},{"krate":0,"index":5840},{"krate":0,"index":5841},{"krate":0,"index":5842},{"krate":0,"index":5843},{"krate":0,"index":5845},{"krate":0,"index":5846},{"krate":0,"index":5848},{"krate":0,"index":5849},{"krate":0,"index":5851},{"krate":0,"index":5852},{"krate":0,"index":5853},{"krate":0,"index":5854}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":847808,"byte_end":847816,"line_start":290,"line_end":290,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":5858}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":848362,"byte_end":848370,"line_start":314,"line_end":314,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":5861},{"krate":0,"index":5862},{"krate":0,"index":5863},{"krate":0,"index":5864},{"krate":0,"index":5865},{"krate":0,"index":5866},{"krate":0,"index":5867}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":853474,"byte_end":853492,"line_start":41,"line_end":41,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5913}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":855235,"byte_end":855242,"line_start":98,"line_end":98,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5916},{"krate":0,"index":5918},{"krate":0,"index":5920},{"krate":0,"index":5921},{"krate":0,"index":5922},{"krate":0,"index":5923},{"krate":0,"index":5924},{"krate":0,"index":5925},{"krate":0,"index":5926},{"krate":0,"index":5927},{"krate":0,"index":5928},{"krate":0,"index":5929},{"krate":0,"index":5930},{"krate":0,"index":5931},{"krate":0,"index":5932},{"krate":0,"index":5933},{"krate":0,"index":5934},{"krate":0,"index":5935},{"krate":0,"index":5937},{"krate":0,"index":5938},{"krate":0,"index":5939},{"krate":0,"index":5940},{"krate":0,"index":5941},{"krate":0,"index":5942},{"krate":0,"index":5943},{"krate":0,"index":5944},{"krate":0,"index":5945},{"krate":0,"index":5946},{"krate":0,"index":5947},{"krate":0,"index":5950},{"krate":0,"index":5953},{"krate":0,"index":5954}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":875509,"byte_end":875516,"line_start":731,"line_end":731,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":5957},{"krate":0,"index":5958},{"krate":0,"index":5959},{"krate":0,"index":5960},{"krate":0,"index":5961}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":876561,"byte_end":876568,"line_start":774,"line_end":774,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":5964},{"krate":0,"index":5965},{"krate":0,"index":5966}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":882197,"byte_end":882204,"line_start":914,"line_end":914,"column_start":53,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":5969}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":882716,"byte_end":882739,"line_start":932,"line_end":932,"column_start":24,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":5981}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":883094,"byte_end":883117,"line_start":948,"line_end":948,"column_start":51,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":5985}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/convex_hull2.rs","byte_start":891069,"byte_end":891081,"line_start":197,"line_end":197,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6019},{"krate":0,"index":6020}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/convex_hull3.rs","byte_start":909146,"byte_end":909159,"line_start":560,"line_end":560,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6084},{"krate":0,"index":6085},{"krate":0,"index":6086},{"krate":0,"index":6087},{"krate":0,"index":6088},{"krate":0,"index":6089},{"krate":0,"index":6090},{"krate":0,"index":6091}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/hacd.rs","byte_start":921246,"byte_end":921261,"line_start":195,"line_end":195,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6173},{"krate":0,"index":6174}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/hacd.rs","byte_start":927110,"byte_end":927123,"line_start":382,"line_end":382,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6191},{"krate":0,"index":6193},{"krate":0,"index":6194}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/hacd.rs","byte_start":934032,"byte_end":934045,"line_start":580,"line_end":580,"column_start":34,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6200}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/hacd.rs","byte_start":934189,"byte_end":934202,"line_start":587,"line_end":587,"column_start":27,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/hacd.rs","byte_start":934245,"byte_end":934258,"line_start":589,"line_end":589,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":6205}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/hacd.rs","byte_start":934434,"byte_end":934447,"line_start":596,"line_end":596,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6208}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/hacd.rs","byte_start":934805,"byte_end":934824,"line_start":614,"line_end":614,"column_start":9,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6215}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/hacd.rs","byte_start":935048,"byte_end":935067,"line_start":624,"line_end":624,"column_start":34,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":6218}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/hacd.rs","byte_start":935246,"byte_end":935265,"line_start":631,"line_end":631,"column_start":27,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/hacd.rs","byte_start":935308,"byte_end":935327,"line_start":633,"line_end":633,"column_start":36,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":6223}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/hacd.rs","byte_start":935700,"byte_end":935719,"line_start":646,"line_end":646,"column_start":29,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":6226}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/hacd.rs","byte_start":939593,"byte_end":939603,"line_start":777,"line_end":777,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6246}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/hacd.rs","byte_start":939775,"byte_end":939785,"line_start":783,"line_end":783,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":6250},{"krate":0,"index":6251}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/hacd.rs","byte_start":940299,"byte_end":940309,"line_start":802,"line_end":802,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":6255}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/to_trimesh/ball_to_trimesh.rs","byte_start":941160,"byte_end":941164,"line_start":8,"line_end":8,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6267},{"krate":0,"index":6268}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/to_trimesh/capsule_to_trimesh.rs","byte_start":941644,"byte_end":941651,"line_start":8,"line_end":8,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":6278},{"krate":0,"index":6279}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/to_trimesh/cone_to_trimesh.rs","byte_start":942290,"byte_end":942294,"line_start":8,"line_end":8,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6289},{"krate":0,"index":6290}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/to_trimesh/cuboid_to_trimesh.rs","byte_start":942928,"byte_end":942934,"line_start":8,"line_end":8,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":6300},{"krate":0,"index":6301}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/to_trimesh/cylinder_to_trimesh.rs","byte_start":943360,"byte_end":943368,"line_start":8,"line_end":8,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":6311},{"krate":0,"index":6312}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/to_trimesh/heightfield_to_trimesh.rs","byte_start":944203,"byte_end":944214,"line_start":6,"line_end":6,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":6327},{"krate":0,"index":6328}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/to_trimesh/triangle_to_trimesh.rs","byte_start":944706,"byte_end":944714,"line_start":6,"line_end":6,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":6336},{"krate":0,"index":6337}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/deterministic_state.rs","byte_start":949540,"byte_end":949558,"line_start":7,"line_end":7,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6411}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/deterministic_state.rs","byte_start":949749,"byte_end":949767,"line_start":14,"line_end":14,"column_start":22,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":6413},{"krate":0,"index":6414}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/hashable_partial_eq.rs","byte_start":950152,"byte_end":950169,"line_start":11,"line_end":11,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6422},{"krate":0,"index":6423}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/hashable_partial_eq.rs","byte_start":950591,"byte_end":950608,"line_start":24,"line_end":24,"column_start":27,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/hashable_partial_eq.rs","byte_start":950642,"byte_end":950659,"line_start":26,"line_end":26,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":6428}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/isometry_ops.rs","byte_start":952248,"byte_end":952257,"line_start":41,"line_end":41,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":6443},{"krate":0,"index":6444},{"krate":0,"index":6445}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/ref_with_cost.rs","byte_start":955019,"byte_end":955030,"line_start":13,"line_end":13,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6482}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/ref_with_cost.rs","byte_start":955314,"byte_end":955325,"line_start":24,"line_end":24,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":6487}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/ref_with_cost.rs","byte_start":955486,"byte_end":955497,"line_start":31,"line_end":31,"column_start":34,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/ref_with_cost.rs","byte_start":955554,"byte_end":955565,"line_start":33,"line_end":33,"column_start":43,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":6496}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/ref_with_cost.rs","byte_start":955758,"byte_end":955769,"line_start":40,"line_end":40,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6501}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/sorted_pair.rs","byte_start":957669,"byte_end":957679,"line_start":9,"line_end":9,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6515}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/sorted_pair.rs","byte_start":957989,"byte_end":957999,"line_start":20,"line_end":20,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6518},{"krate":0,"index":6519}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","byte_start":2266,"byte_end":2281,"line_start":83,"line_end":83,"column_start":9,"column_end":24},"ref_id":{"krate":0,"index":15}},{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/mod.rs","byte_start":5218,"byte_end":5233,"line_start":22,"line_end":22,"column_start":9,"column_end":24},"ref_id":{"krate":0,"index":38}},{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/mod.rs","byte_start":5259,"byte_end":5263,"line_start":25,"line_end":25,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":59}},{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/mod.rs","byte_start":5605,"byte_end":5620,"line_start":44,"line_end":44,"column_start":9,"column_end":24},"ref_id":{"krate":0,"index":300}},{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","byte_start":2291,"byte_end":2304,"line_start":84,"line_end":84,"column_start":9,"column_end":22},"ref_id":{"krate":0,"index":548}},{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","byte_start":2314,"byte_end":2326,"line_start":85,"line_end":85,"column_start":9,"column_end":21},"ref_id":{"krate":0,"index":625}},{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","byte_start":2336,"byte_end":2344,"line_start":86,"line_end":86,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":870}},{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/mod.rs","byte_start":97578,"byte_end":97589,"line_start":9,"line_end":9,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":876}},{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/mod.rs","byte_start":97921,"byte_end":97932,"line_start":9,"line_end":9,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":883}},{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/mod.rs","byte_start":97957,"byte_end":97980,"line_start":11,"line_end":11,"column_start":9,"column_end":32},"ref_id":{"krate":0,"index":919}},{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/mod.rs","byte_start":97599,"byte_end":97603,"line_start":10,"line_end":10,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1017}},{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/mod.rs","byte_start":97613,"byte_end":97625,"line_start":11,"line_end":11,"column_start":9,"column_end":21},"ref_id":{"krate":0,"index":1217}},{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/mod.rs","byte_start":137033,"byte_end":137050,"line_start":28,"line_end":28,"column_start":9,"column_end":26},"ref_id":{"krate":0,"index":1256}},{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/mod.rs","byte_start":138786,"byte_end":138812,"line_start":28,"line_end":28,"column_start":9,"column_end":35},"ref_id":{"krate":0,"index":1462}},{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/mod.rs","byte_start":137128,"byte_end":137146,"line_start":33,"line_end":33,"column_start":9,"column_end":27},"ref_id":{"krate":0,"index":1875}},{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/mod.rs","byte_start":246433,"byte_end":246451,"line_start":17,"line_end":17,"column_start":9,"column_end":27},"ref_id":{"krate":0,"index":1993}},{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/mod.rs","byte_start":97635,"byte_end":97641,"line_start":12,"line_end":12,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":2028}},{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/mod.rs","byte_start":97651,"byte_end":97656,"line_start":13,"line_end":13,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":2274}},{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","byte_start":2354,"byte_end":2364,"line_start":87,"line_end":87,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":2409}},{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/mod.rs","byte_start":321816,"byte_end":321820,"line_start":28,"line_end":28,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":2437}},{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/mod.rs","byte_start":321907,"byte_end":321912,"line_start":33,"line_end":33,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":2637}},{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","byte_start":2374,"byte_end":2379,"line_start":88,"line_end":88,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":2783}},{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/mod.rs","byte_start":384361,"byte_end":384371,"line_start":39,"line_end":39,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":2794}},{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/mod.rs","byte_start":384995,"byte_end":384999,"line_start":17,"line_end":17,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":2826}},{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/mod.rs","byte_start":385009,"byte_end":385012,"line_start":18,"line_end":18,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":2898}},{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/mod.rs","byte_start":385090,"byte_end":385110,"line_start":20,"line_end":20,"column_start":9,"column_end":29},"ref_id":{"krate":0,"index":2940}},{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/mod.rs","byte_start":515836,"byte_end":515847,"line_start":17,"line_end":17,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":3890}},{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/mod.rs","byte_start":384544,"byte_end":384552,"line_start":50,"line_end":50,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":4817}},{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","byte_start":2389,"byte_end":2394,"line_start":89,"line_end":89,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":5035}},{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/mod.rs","byte_start":686562,"byte_end":686577,"line_start":45,"line_end":45,"column_start":9,"column_end":24},"ref_id":{"krate":0,"index":5130}},{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/mod.rs","byte_start":687065,"byte_end":687070,"line_start":70,"line_end":70,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":5626}},{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/mod.rs","byte_start":687111,"byte_end":687122,"line_start":73,"line_end":73,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":5767}},{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","byte_start":2404,"byte_end":2418,"line_start":90,"line_end":90,"column_start":9,"column_end":23},"ref_id":{"krate":0,"index":5986}},{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/mod.rs","byte_start":885562,"byte_end":885579,"line_start":21,"line_end":21,"column_start":9,"column_end":26},"ref_id":{"krate":0,"index":6092}},{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/lib.rs","byte_start":2428,"byte_end":2433,"line_start":91,"line_end":91,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":6338}},{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/mod.rs","byte_start":945938,"byte_end":945946,"line_start":29,"line_end":29,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":6367}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_volume.rs","byte_start":6966,"byte_end":6971,"line_start":19,"line_end":19,"column_start":51,"column_end":56},"kind":"SuperTrait","from":{"krate":2,"index":6069},"to":{"krate":0,"index":48}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb.rs","byte_start":9093,"byte_end":9097,"line_start":42,"line_end":42,"column_start":20,"column_end":24},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":6584},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb.rs","byte_start":12433,"byte_end":12437,"line_start":149,"line_end":149,"column_start":42,"column_end":46},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":6584},"to":{"krate":0,"index":48}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb_ball.rs","byte_start":15231,"byte_end":15235,"line_start":23,"line_end":23,"column_start":54,"column_end":58},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":7634},"to":{"krate":0,"index":43}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb_compound.rs","byte_start":15689,"byte_end":15697,"line_start":6,"line_end":6,"column_start":54,"column_end":62},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":7669},"to":{"krate":0,"index":43}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb_convex.rs","byte_start":16145,"byte_end":16155,"line_start":7,"line_end":7,"column_start":54,"column_end":64},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":7767},"to":{"krate":0,"index":43}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb_cuboid.rs","byte_start":16648,"byte_end":16654,"line_start":7,"line_end":7,"column_start":54,"column_end":60},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":7837},"to":{"krate":0,"index":43}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb_heightfield.rs","byte_start":17307,"byte_end":17318,"line_start":6,"line_end":6,"column_start":54,"column_end":65},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":7996},"to":{"krate":0,"index":43}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb_plane.rs","byte_start":17763,"byte_end":17768,"line_start":7,"line_end":7,"column_start":54,"column_end":59},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":8009},"to":{"krate":0,"index":43}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb_polyline.rs","byte_start":18378,"byte_end":18386,"line_start":6,"line_end":6,"column_start":54,"column_end":62},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":8047},"to":{"krate":0,"index":43}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb_support_map.rs","byte_start":19311,"byte_end":19315,"line_start":10,"line_end":10,"column_start":54,"column_end":58},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":7678},"to":{"krate":0,"index":43}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb_support_map.rs","byte_start":19657,"byte_end":19665,"line_start":23,"line_end":23,"column_start":54,"column_end":62},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":7854},"to":{"krate":0,"index":43}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb_support_map.rs","byte_start":19982,"byte_end":19989,"line_start":35,"line_end":35,"column_start":54,"column_end":61},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":7651},"to":{"krate":0,"index":43}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb_support_map.rs","byte_start":20306,"byte_end":20313,"line_start":47,"line_end":47,"column_start":54,"column_end":61},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":8060},"to":{"krate":0,"index":43}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb_triangle.rs","byte_start":20801,"byte_end":20809,"line_start":8,"line_end":8,"column_start":54,"column_end":62},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":8250},"to":{"krate":0,"index":43}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/aabb_trimesh.rs","byte_start":22798,"byte_end":22805,"line_start":6,"line_end":6,"column_start":54,"column_end":61},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":8330},"to":{"krate":0,"index":43}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_sphere.rs","byte_start":26764,"byte_end":26778,"line_start":39,"line_end":39,"column_start":20,"column_end":34},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":6602},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_sphere.rs","byte_start":27407,"byte_end":27421,"line_start":64,"line_end":64,"column_start":42,"column_end":56},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":6602},"to":{"krate":0,"index":48}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_sphere_ball.rs","byte_start":30665,"byte_end":30669,"line_start":6,"line_end":6,"column_start":64,"column_end":68},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":7634},"to":{"krate":0,"index":43}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_sphere_capsule.rs","byte_start":31210,"byte_end":31217,"line_start":6,"line_end":6,"column_start":64,"column_end":71},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":7651},"to":{"krate":0,"index":43}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_sphere_compound.rs","byte_start":31799,"byte_end":31807,"line_start":6,"line_end":6,"column_start":64,"column_end":72},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":7669},"to":{"krate":0,"index":43}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_sphere_cone.rs","byte_start":32298,"byte_end":32302,"line_start":7,"line_end":7,"column_start":64,"column_end":68},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":7678},"to":{"krate":0,"index":43}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_sphere_convex.rs","byte_start":32956,"byte_end":32966,"line_start":7,"line_end":7,"column_start":64,"column_end":74},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":7767},"to":{"krate":0,"index":43}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_sphere_cuboid.rs","byte_start":33593,"byte_end":33599,"line_start":6,"line_end":6,"column_start":64,"column_end":70},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":7837},"to":{"krate":0,"index":43}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_sphere_cylinder.rs","byte_start":34196,"byte_end":34204,"line_start":7,"line_end":7,"column_start":64,"column_end":72},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":7854},"to":{"krate":0,"index":43}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_sphere_heightfield.rs","byte_start":34831,"byte_end":34842,"line_start":6,"line_end":6,"column_start":64,"column_end":75},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":7996},"to":{"krate":0,"index":43}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_sphere_plane.rs","byte_start":35322,"byte_end":35327,"line_start":6,"line_end":6,"column_start":64,"column_end":69},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":8009},"to":{"krate":0,"index":43}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_sphere_polyline.rs","byte_start":35894,"byte_end":35902,"line_start":7,"line_end":7,"column_start":64,"column_end":72},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":8047},"to":{"krate":0,"index":43}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_sphere_segment.rs","byte_start":36403,"byte_end":36410,"line_start":7,"line_end":7,"column_start":64,"column_end":71},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":8060},"to":{"krate":0,"index":43}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_sphere_triangle.rs","byte_start":37538,"byte_end":37546,"line_start":7,"line_end":7,"column_start":64,"column_end":72},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":8250},"to":{"krate":0,"index":43}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/bounding_sphere_trimesh.rs","byte_start":38196,"byte_end":38203,"line_start":6,"line_end":6,"column_start":64,"column_end":71},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":8330},"to":{"krate":0,"index":43}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/circular_cone.rs","byte_start":40420,"byte_end":40432,"line_start":28,"line_end":28,"column_start":20,"column_end":32},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":6620},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/bounding_volume/spatialized_normal_cone.rs","byte_start":47978,"byte_end":47999,"line_start":15,"line_end":15,"column_start":42,"column_end":63},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":6648},"to":{"krate":0,"index":48}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":50008,"byte_end":50016,"line_start":16,"line_end":16,"column_start":39,"column_end":47},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":6578},"to":{"krate":0,"index":563}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":50413,"byte_end":50436,"line_start":30,"line_end":30,"column_start":20,"column_end":43},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":569},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":50826,"byte_end":50849,"line_start":40,"line_end":40,"column_start":39,"column_end":62},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":569},"to":{"krate":0,"index":563}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":51379,"byte_end":51412,"line_start":56,"line_end":56,"column_start":20,"column_end":53},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":579},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":51739,"byte_end":51772,"line_start":67,"line_end":67,"column_start":39,"column_end":72},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":579},"to":{"krate":0,"index":563}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":52736,"byte_end":52763,"line_start":95,"line_end":95,"column_start":20,"column_end":47},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":6658},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":53669,"byte_end":53696,"line_start":133,"line_end":133,"column_start":39,"column_end":66},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":6658},"to":{"krate":0,"index":563}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":54272,"byte_end":54283,"line_start":151,"line_end":151,"column_start":49,"column_end":60},"kind":"SuperTrait","from":{"krate":0,"index":563},"to":{"krate":0,"index":596}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":54903,"byte_end":54904,"line_start":172,"line_end":172,"column_start":78,"column_end":79},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":602},"to":{"krate":0,"index":596}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":55152,"byte_end":55170,"line_start":180,"line_end":180,"column_start":71,"column_end":89},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":603},"to":{"krate":0,"index":563}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/interpolation/rigid_motion.rs","byte_start":55612,"byte_end":55633,"line_start":194,"line_end":194,"column_start":9,"column_end":30},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":614},"to":{"krate":0,"index":563}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvh.rs","byte_start":63106,"byte_end":63113,"line_start":180,"line_end":180,"column_start":31,"column_end":38},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":6668},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvh.rs","byte_start":65566,"byte_end":65579,"line_start":256,"line_end":256,"column_start":12,"column_end":25},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":702},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvh.rs","byte_start":65848,"byte_end":65861,"line_start":267,"line_end":267,"column_start":37,"column_end":50},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":702},"to":{"krate":2,"index":1634}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvh.rs","byte_start":66012,"byte_end":66025,"line_start":274,"line_end":274,"column_start":30,"column_end":43},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":702},"to":{"krate":2,"index":1639}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvh.rs","byte_start":66074,"byte_end":66087,"line_start":276,"line_end":276,"column_start":39,"column_end":52},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":702},"to":{"krate":2,"index":1671}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvh.rs","byte_start":66270,"byte_end":66283,"line_start":283,"line_end":283,"column_start":32,"column_end":45},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":702},"to":{"krate":2,"index":1660}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvt.rs","byte_start":68043,"byte_end":68050,"line_start":54,"line_end":54,"column_start":13,"column_end":20},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":6733},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvt.rs","byte_start":68713,"byte_end":68716,"line_start":83,"line_end":83,"column_start":13,"column_end":16},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":6690},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvt.rs","byte_start":76555,"byte_end":76558,"line_start":275,"line_end":275,"column_start":13,"column_end":16},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":6690},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/bvt.rs","byte_start":80606,"byte_end":80609,"line_start":403,"line_end":403,"column_start":32,"column_end":35},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":6690},"to":{"krate":0,"index":658}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/dbvt.rs","byte_start":82080,"byte_end":82090,"line_start":12,"line_end":12,"column_start":6,"column_end":16},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":6747},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/dbvt.rs","byte_start":83969,"byte_end":83977,"line_start":87,"line_end":87,"column_start":46,"column_end":54},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":6819},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/dbvt.rs","byte_start":84615,"byte_end":84627,"line_start":107,"line_end":107,"column_start":43,"column_end":55},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":6832},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/dbvt.rs","byte_start":85131,"byte_end":85135,"line_start":126,"line_end":126,"column_start":46,"column_end":50},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":6807},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/dbvt.rs","byte_start":93294,"byte_end":93298,"line_start":337,"line_end":337,"column_start":49,"column_end":53},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":6807},"to":{"krate":2,"index":2154}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/partitioning/dbvt.rs","byte_start":93510,"byte_end":93514,"line_start":346,"line_end":346,"column_start":46,"column_end":50},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":6807},"to":{"krate":0,"index":658}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/broad_phase.rs","byte_start":98230,"byte_end":98251,"line_start":10,"line_end":10,"column_start":6,"column_end":27},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":6845},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/broad_phase.rs","byte_start":99095,"byte_end":99098,"line_start":41,"line_end":41,"column_start":44,"column_end":47},"kind":"SuperTrait","from":{"krate":2,"index":2394},"to":{"krate":0,"index":899}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/broad_phase.rs","byte_start":99101,"byte_end":99105,"line_start":41,"line_end":41,"column_start":50,"column_end":54},"kind":"SuperTrait","from":{"krate":2,"index":1916},"to":{"krate":0,"index":899}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/broad_phase.rs","byte_start":99108,"byte_end":99112,"line_start":41,"line_end":41,"column_start":57,"column_end":61},"kind":"SuperTrait","from":{"krate":2,"index":1904},"to":{"krate":0,"index":899}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/broad_phase_pair_filter.rs","byte_start":101257,"byte_end":101260,"line_start":5,"line_end":5,"column_start":63,"column_end":66},"kind":"SuperTrait","from":{"krate":2,"index":2394},"to":{"krate":0,"index":922}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/broad_phase_pair_filter.rs","byte_start":101263,"byte_end":101267,"line_start":5,"line_end":5,"column_start":69,"column_end":73},"kind":"SuperTrait","from":{"krate":2,"index":1904},"to":{"krate":0,"index":922}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/broad_phase_pair_filter.rs","byte_start":101270,"byte_end":101274,"line_start":5,"line_end":5,"column_start":76,"column_end":80},"kind":"SuperTrait","from":{"krate":2,"index":1916},"to":{"krate":0,"index":922}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/dbvt_broad_phase.rs","byte_start":102652,"byte_end":102671,"line_start":34,"line_end":34,"column_start":9,"column_end":28},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":964},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/dbvt_broad_phase.rs","byte_start":103910,"byte_end":103924,"line_start":75,"line_end":75,"column_start":16,"column_end":30},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":974},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/broad_phase/dbvt_broad_phase.rs","byte_start":107413,"byte_end":107427,"line_start":168,"line_end":168,"column_start":41,"column_end":55},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":974},"to":{"krate":0,"index":899}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/query.rs","byte_start":120263,"byte_end":120283,"line_start":45,"line_end":45,"column_start":50,"column_end":70},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1058},"to":{"krate":2,"index":4852}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/query.rs","byte_start":122321,"byte_end":122343,"line_start":111,"line_end":111,"column_start":50,"column_end":72},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1081},"to":{"krate":2,"index":4852}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/query.rs","byte_start":124130,"byte_end":124151,"line_start":165,"line_end":165,"column_start":9,"column_end":30},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1103},"to":{"krate":2,"index":4852}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/glue/update.rs","byte_start":131571,"byte_end":131604,"line_start":25,"line_end":25,"column_start":9,"column_end":42},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1182},"to":{"krate":0,"index":894}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/ball_ball_manifold_generator.rs","byte_start":139606,"byte_end":139631,"line_start":17,"line_end":17,"column_start":20,"column_end":45},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":6908},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/ball_ball_manifold_generator.rs","byte_start":139913,"byte_end":139938,"line_start":27,"line_end":27,"column_start":52,"column_end":77},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":6908},"to":{"krate":0,"index":1471}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/ball_convex_polyhedron_manifold_generator.rs","byte_start":141978,"byte_end":142015,"line_start":19,"line_end":19,"column_start":20,"column_end":57},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":6914},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/ball_convex_polyhedron_manifold_generator.rs","byte_start":146010,"byte_end":146047,"line_start":125,"line_end":125,"column_start":52,"column_end":89},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":6914},"to":{"krate":0,"index":1471}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/capsule_capsule_manifold_generator.rs","byte_start":147256,"byte_end":147287,"line_start":15,"line_end":15,"column_start":20,"column_end":51},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1345},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/capsule_capsule_manifold_generator.rs","byte_start":148638,"byte_end":148669,"line_start":57,"line_end":57,"column_start":52,"column_end":83},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1345},"to":{"krate":0,"index":1471}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/capsule_shape_manifold_generator.rs","byte_start":149767,"byte_end":149796,"line_start":13,"line_end":13,"column_start":20,"column_end":49},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1371},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/capsule_shape_manifold_generator.rs","byte_start":151740,"byte_end":151769,"line_start":77,"line_end":77,"column_start":52,"column_end":81},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1371},"to":{"krate":0,"index":1471}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/composite_shape_composite_shape_manifold_generator.rs","byte_start":153306,"byte_end":153351,"line_start":21,"line_end":21,"column_start":9,"column_end":54},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1401},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/composite_shape_composite_shape_manifold_generator.rs","byte_start":153740,"byte_end":153785,"line_start":32,"line_end":32,"column_start":20,"column_end":65},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1401},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/composite_shape_composite_shape_manifold_generator.rs","byte_start":157021,"byte_end":157066,"line_start":124,"line_end":124,"column_start":9,"column_end":54},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1401},"to":{"krate":0,"index":1471}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/composite_shape_shape_manifold_generator.rs","byte_start":158520,"byte_end":158556,"line_start":23,"line_end":23,"column_start":20,"column_end":56},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1445},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/composite_shape_shape_manifold_generator.rs","byte_start":162046,"byte_end":162082,"line_start":123,"line_end":123,"column_start":52,"column_end":88},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1445},"to":{"krate":0,"index":1471}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/contact_manifold_generator.rs","byte_start":163473,"byte_end":163476,"line_start":10,"line_end":10,"column_start":51,"column_end":54},"kind":"SuperTrait","from":{"krate":2,"index":2394},"to":{"krate":0,"index":1471}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/contact_manifold_generator.rs","byte_start":163479,"byte_end":163483,"line_start":10,"line_end":10,"column_start":57,"column_end":61},"kind":"SuperTrait","from":{"krate":2,"index":1904},"to":{"krate":0,"index":1471}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/contact_manifold_generator.rs","byte_start":163486,"byte_end":163490,"line_start":10,"line_end":10,"column_start":64,"column_end":68},"kind":"SuperTrait","from":{"krate":2,"index":1916},"to":{"krate":0,"index":1471}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/contact_manifold_generator.rs","byte_start":164693,"byte_end":164696,"line_start":40,"line_end":40,"column_start":33,"column_end":36},"kind":"SuperTrait","from":{"krate":2,"index":2394},"to":{"krate":0,"index":1477}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/contact_manifold_generator.rs","byte_start":164699,"byte_end":164703,"line_start":40,"line_end":40,"column_start":39,"column_end":43},"kind":"SuperTrait","from":{"krate":2,"index":1904},"to":{"krate":0,"index":1477}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/contact_manifold_generator.rs","byte_start":164706,"byte_end":164710,"line_start":40,"line_end":40,"column_start":46,"column_end":50},"kind":"SuperTrait","from":{"krate":2,"index":1916},"to":{"krate":0,"index":1477}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/convex_polyhedron_convex_polyhedron_manifold_generator.rs","byte_start":166250,"byte_end":166299,"line_start":35,"line_end":35,"column_start":20,"column_end":69},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":6921},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/convex_polyhedron_convex_polyhedron_manifold_generator.rs","byte_start":167719,"byte_end":167768,"line_start":81,"line_end":81,"column_start":9,"column_end":58},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":6921},"to":{"krate":0,"index":1471}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/default_contact_dispatcher.rs","byte_start":171578,"byte_end":171602,"line_start":19,"line_end":19,"column_start":6,"column_end":30},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1534},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/default_contact_dispatcher.rs","byte_start":171791,"byte_end":171815,"line_start":26,"line_end":26,"column_start":45,"column_end":69},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1534},"to":{"krate":0,"index":1477}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/heightfield_shape_manifold_generator.rs","byte_start":175576,"byte_end":175609,"line_start":17,"line_end":17,"column_start":20,"column_end":53},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1563},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/heightfield_shape_manifold_generator.rs","byte_start":179294,"byte_end":179327,"line_start":126,"line_end":126,"column_start":52,"column_end":85},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1563},"to":{"krate":0,"index":1471}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/plane_ball_manifold_generator.rs","byte_start":181011,"byte_end":181037,"line_start":18,"line_end":18,"column_start":20,"column_end":46},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":6933},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/plane_ball_manifold_generator.rs","byte_start":183700,"byte_end":183726,"line_start":86,"line_end":86,"column_start":52,"column_end":78},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":6933},"to":{"krate":0,"index":1471}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/plane_convex_polyhedron_manifold_generator.rs","byte_start":184983,"byte_end":185021,"line_start":17,"line_end":17,"column_start":20,"column_end":58},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":6940},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/plane_convex_polyhedron_manifold_generator.rs","byte_start":187747,"byte_end":187785,"line_start":84,"line_end":84,"column_start":52,"column_end":90},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":6940},"to":{"krate":0,"index":1471}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/trimesh_trimesh_manifold_generator.rs","byte_start":189716,"byte_end":189747,"line_start":23,"line_end":23,"column_start":20,"column_end":51},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1668},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/trimesh_trimesh_manifold_generator.rs","byte_start":190231,"byte_end":190262,"line_start":36,"line_end":36,"column_start":20,"column_end":51},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1668},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/contact_generator/trimesh_trimesh_manifold_generator.rs","byte_start":212192,"byte_end":212223,"line_start":518,"line_end":518,"column_start":52,"column_end":83},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1668},"to":{"krate":0,"index":1471}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/events.rs","byte_start":214558,"byte_end":214567,"line_start":19,"line_end":19,"column_start":9,"column_end":18},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1695},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/events.rs","byte_start":216896,"byte_end":216910,"line_start":90,"line_end":90,"column_start":14,"column_end":28},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":6969},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":218615,"byte_end":218626,"line_start":30,"line_end":30,"column_start":20,"column_end":31},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1738},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":219352,"byte_end":219368,"line_start":53,"line_end":53,"column_start":51,"column_end":67},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1752},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/interaction_graph.rs","byte_start":233249,"byte_end":233268,"line_start":411,"line_end":411,"column_start":9,"column_end":28},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1806},"to":{"krate":2,"index":4852}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/narrow_phase.rs","byte_start":235340,"byte_end":235351,"line_start":22,"line_end":22,"column_start":51,"column_end":62},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1844},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/ball_ball_proximity_detector.rs","byte_start":246803,"byte_end":246828,"line_start":10,"line_end":10,"column_start":16,"column_end":41},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1901},"to":{"krate":2,"index":1606}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/ball_ball_proximity_detector.rs","byte_start":246933,"byte_end":246958,"line_start":16,"line_end":16,"column_start":6,"column_end":31},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1901},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/ball_ball_proximity_detector.rs","byte_start":247184,"byte_end":247209,"line_start":24,"line_end":24,"column_start":45,"column_end":70},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1901},"to":{"krate":0,"index":1999}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/composite_shape_shape_proximity_detector.rs","byte_start":248456,"byte_end":248492,"line_start":19,"line_end":19,"column_start":9,"column_end":45},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1931},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/composite_shape_shape_proximity_detector.rs","byte_start":248950,"byte_end":248986,"line_start":32,"line_end":32,"column_start":20,"column_end":56},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1931},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/composite_shape_shape_proximity_detector.rs","byte_start":253538,"byte_end":253574,"line_start":159,"line_end":159,"column_start":45,"column_end":81},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1931},"to":{"krate":0,"index":1999}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/default_proximity_dispatcher.rs","byte_start":254570,"byte_end":254596,"line_start":12,"line_end":12,"column_start":6,"column_end":32},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1965},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/default_proximity_dispatcher.rs","byte_start":254791,"byte_end":254817,"line_start":19,"line_end":19,"column_start":47,"column_end":73},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1965},"to":{"krate":0,"index":2004}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/plane_support_map_proximity_detector.rs","byte_start":256277,"byte_end":256309,"line_start":11,"line_end":11,"column_start":6,"column_end":38},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":6983},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/plane_support_map_proximity_detector.rs","byte_start":256765,"byte_end":256797,"line_start":26,"line_end":26,"column_start":6,"column_end":38},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":6986},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/plane_support_map_proximity_detector.rs","byte_start":257162,"byte_end":257194,"line_start":37,"line_end":37,"column_start":45,"column_end":77},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":6983},"to":{"krate":0,"index":1999}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/plane_support_map_proximity_detector.rs","byte_start":257651,"byte_end":257683,"line_start":54,"line_end":54,"column_start":45,"column_end":77},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":6986},"to":{"krate":0,"index":1999}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/proximity_detector.rs","byte_start":258251,"byte_end":258254,"line_start":8,"line_end":8,"column_start":44,"column_end":47},"kind":"SuperTrait","from":{"krate":2,"index":2394},"to":{"krate":0,"index":1999}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/proximity_detector.rs","byte_start":258257,"byte_end":258261,"line_start":8,"line_end":8,"column_start":50,"column_end":54},"kind":"SuperTrait","from":{"krate":2,"index":1904},"to":{"krate":0,"index":1999}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/proximity_detector.rs","byte_start":258264,"byte_end":258268,"line_start":8,"line_end":8,"column_start":57,"column_end":61},"kind":"SuperTrait","from":{"krate":2,"index":1916},"to":{"krate":0,"index":1999}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/proximity_detector.rs","byte_start":258780,"byte_end":258783,"line_start":24,"line_end":24,"column_start":35,"column_end":38},"kind":"SuperTrait","from":{"krate":2,"index":2394},"to":{"krate":0,"index":2004}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/proximity_detector.rs","byte_start":258786,"byte_end":258790,"line_start":24,"line_end":24,"column_start":41,"column_end":45},"kind":"SuperTrait","from":{"krate":2,"index":1904},"to":{"krate":0,"index":2004}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/proximity_detector.rs","byte_start":258793,"byte_end":258797,"line_start":24,"line_end":24,"column_start":48,"column_end":52},"kind":"SuperTrait","from":{"krate":2,"index":1916},"to":{"krate":0,"index":2004}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/support_map_support_map_proximity_detector.rs","byte_start":259579,"byte_end":259616,"line_start":17,"line_end":17,"column_start":20,"column_end":57},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":6990},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/narrow_phase/proximity_detector/support_map_support_map_proximity_detector.rs","byte_start":260041,"byte_end":260078,"line_start":30,"line_end":30,"column_start":45,"column_end":82},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":6990},"to":{"krate":0,"index":1999}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":263297,"byte_end":263312,"line_start":50,"line_end":50,"column_start":6,"column_end":21},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":6997},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":273816,"byte_end":273831,"line_start":368,"line_end":368,"column_start":18,"column_end":33},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":6997},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":274006,"byte_end":274031,"line_start":378,"line_end":378,"column_start":6,"column_end":31},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":2092},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_groups.rs","byte_start":274331,"byte_end":274356,"line_start":387,"line_end":387,"column_start":49,"column_end":74},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":2092},"to":{"krate":0,"index":922}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":275832,"byte_end":275858,"line_start":27,"line_end":27,"column_start":6,"column_end":32},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":7006},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":280297,"byte_end":280322,"line_start":122,"line_end":122,"column_start":6,"column_end":31},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":7114},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":280922,"byte_end":280937,"line_start":143,"line_end":143,"column_start":23,"column_end":38},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":2134},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object.rs","byte_start":286320,"byte_end":286335,"line_start":306,"line_end":306,"column_start":49,"column_end":64},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":2134},"to":{"krate":0,"index":2120}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object_set.rs","byte_start":287373,"byte_end":287377,"line_start":9,"line_end":9,"column_start":34,"column_end":38},"kind":"SuperTrait","from":{"krate":2,"index":1914},"to":{"krate":0,"index":2195}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object_set.rs","byte_start":287380,"byte_end":287384,"line_start":9,"line_end":9,"column_start":41,"column_end":45},"kind":"SuperTrait","from":{"krate":2,"index":6257},"to":{"krate":0,"index":2195}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object_set.rs","byte_start":287387,"byte_end":287396,"line_start":9,"line_end":9,"column_start":48,"column_end":57},"kind":"SuperTrait","from":{"krate":2,"index":1634},"to":{"krate":0,"index":2195}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object_set.rs","byte_start":287399,"byte_end":287401,"line_start":9,"line_end":9,"column_start":60,"column_end":62},"kind":"SuperTrait","from":{"krate":2,"index":1639},"to":{"krate":0,"index":2195}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object_set.rs","byte_start":287414,"byte_end":287418,"line_start":9,"line_end":9,"column_start":75,"column_end":79},"kind":"SuperTrait","from":{"krate":2,"index":1904},"to":{"krate":0,"index":2195}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object_set.rs","byte_start":287421,"byte_end":287425,"line_start":9,"line_end":9,"column_start":82,"column_end":86},"kind":"SuperTrait","from":{"krate":2,"index":1916},"to":{"krate":0,"index":2195}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object_set.rs","byte_start":287518,"byte_end":287519,"line_start":11,"line_end":11,"column_start":89,"column_end":90},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":2197},"to":{"krate":0,"index":2195}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object_set.rs","byte_start":288419,"byte_end":288438,"line_start":32,"line_end":32,"column_start":49,"column_end":68},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":2213},"to":{"krate":0,"index":2198}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object_set.rs","byte_start":289133,"byte_end":289152,"line_start":55,"line_end":55,"column_start":23,"column_end":42},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":2213},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object_set.rs","byte_start":292069,"byte_end":292088,"line_start":141,"line_end":141,"column_start":60,"column_end":79},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":2213},"to":{"krate":2,"index":2154}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object_set.rs","byte_start":292330,"byte_end":292349,"line_start":150,"line_end":150,"column_start":63,"column_end":82},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":2213},"to":{"krate":2,"index":2158}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object_set.rs","byte_start":292715,"byte_end":292731,"line_start":162,"line_end":162,"column_start":49,"column_end":65},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":2241},"to":{"krate":2,"index":4852}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/collision_object_set.rs","byte_start":293223,"byte_end":293242,"line_start":178,"line_end":178,"column_start":49,"column_end":68},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":2253},"to":{"krate":2,"index":4852}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/object/query_type.rs","byte_start":294257,"byte_end":294275,"line_start":21,"line_end":21,"column_start":20,"column_end":38},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":7140},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/pipeline/world.rs","byte_start":298026,"byte_end":298040,"line_start":44,"line_end":44,"column_start":23,"column_end":37},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":2328},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/arrowhead_cap.rs","byte_start":322810,"byte_end":322822,"line_start":13,"line_end":13,"column_start":20,"column_end":32},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":2457},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/arrowhead_cap.rs","byte_start":325829,"byte_end":325841,"line_start":102,"line_end":102,"column_start":49,"column_end":61},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":2457},"to":{"krate":0,"index":2563}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/no_cap.rs","byte_start":326811,"byte_end":326816,"line_start":8,"line_end":8,"column_start":6,"column_end":11},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":2477},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/no_cap.rs","byte_start":326963,"byte_end":326968,"line_start":16,"line_end":16,"column_start":49,"column_end":54},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":2477},"to":{"krate":0,"index":2563}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/polyline_path.rs","byte_start":328834,"byte_end":328846,"line_start":16,"line_end":16,"column_start":24,"column_end":36},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":2522},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/polyline_path.rs","byte_start":329430,"byte_end":329442,"line_start":37,"line_end":37,"column_start":44,"column_end":56},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":2522},"to":{"krate":0,"index":2507}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/polyline_pattern.rs","byte_start":331674,"byte_end":331689,"line_start":42,"line_end":42,"column_start":17,"column_end":32},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":2554},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/path/polyline_pattern.rs","byte_start":332407,"byte_end":332422,"line_start":71,"line_end":71,"column_start":38,"column_end":53},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":2554},"to":{"krate":0,"index":2510}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":336385,"byte_end":336396,"line_start":17,"line_end":17,"column_start":6,"column_end":17},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":7163},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":337465,"byte_end":337472,"line_start":52,"line_end":52,"column_start":20,"column_end":27},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":7174},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":340054,"byte_end":340061,"line_start":148,"line_end":148,"column_start":20,"column_end":27},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":7174},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":342134,"byte_end":342141,"line_start":214,"line_end":214,"column_start":20,"column_end":27},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":7174},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":342352,"byte_end":342359,"line_start":224,"line_end":224,"column_start":20,"column_end":27},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":7174},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/procedural/trimesh.rs","byte_start":347235,"byte_end":347242,"line_start":349,"line_end":349,"column_start":20,"column_end":27},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":7174},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/cso_point.rs","byte_start":386106,"byte_end":386114,"line_start":23,"line_end":23,"column_start":20,"column_end":28},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":7186},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/cso_point.rs","byte_start":388306,"byte_end":388314,"line_start":98,"line_end":98,"column_start":41,"column_end":49},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":7186},"to":{"krate":2,"index":1972}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/epa3.rs","byte_start":389053,"byte_end":389059,"line_start":19,"line_end":19,"column_start":20,"column_end":26},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":7205},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/epa3.rs","byte_start":389278,"byte_end":389284,"line_start":29,"line_end":29,"column_start":27,"column_end":33},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":7205},"to":{"krate":2,"index":1639}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/epa3.rs","byte_start":389326,"byte_end":389332,"line_start":31,"line_end":31,"column_start":35,"column_end":41},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":7205},"to":{"krate":2,"index":1671}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/epa3.rs","byte_start":389501,"byte_end":389507,"line_start":38,"line_end":38,"column_start":28,"column_end":34},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":7205},"to":{"krate":2,"index":1660}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/epa3.rs","byte_start":389994,"byte_end":389998,"line_start":61,"line_end":61,"column_start":20,"column_end":24},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":7220},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/epa3.rs","byte_start":392841,"byte_end":392855,"line_start":156,"line_end":156,"column_start":6,"column_end":20},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":2873},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/epa3.rs","byte_start":393196,"byte_end":393199,"line_start":170,"line_end":170,"column_start":20,"column_end":23},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":2878},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/special_support_maps.rs","byte_start":418460,"byte_end":418474,"line_start":9,"line_end":9,"column_start":38,"column_end":52},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":2949},"to":{"krate":0,"index":5775}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/special_support_maps.rs","byte_start":419297,"byte_end":419309,"line_start":39,"line_end":39,"column_start":69,"column_end":81},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":2957},"to":{"krate":0,"index":5775}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/algorithms/voronoi_simplex3.rs","byte_start":420618,"byte_end":420632,"line_start":22,"line_end":22,"column_start":20,"column_end":34},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":7264},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/closest_points/closest_points.rs","byte_start":433914,"byte_end":433927,"line_start":17,"line_end":17,"column_start":20,"column_end":33},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":7282},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/closest_points/closest_points_composite_shape_shape.rs","byte_start":436510,"byte_end":436556,"line_start":56,"line_end":56,"column_start":25,"column_end":71},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":3072},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/closest_points/closest_points_composite_shape_shape.rs","byte_start":437274,"byte_end":437320,"line_start":84,"line_end":84,"column_start":9,"column_end":55},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":3072},"to":{"krate":0,"index":864}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact.rs","byte_start":452091,"byte_end":452098,"line_start":29,"line_end":29,"column_start":20,"column_end":27},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":7339},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact.rs","byte_start":452682,"byte_end":452689,"line_start":49,"line_end":49,"column_start":20,"column_end":27},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":7339},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact.rs","byte_start":453638,"byte_end":453652,"line_start":74,"line_end":74,"column_start":20,"column_end":34},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":7359},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact.rs","byte_start":454190,"byte_end":454207,"line_start":97,"line_end":97,"column_start":20,"column_end":37},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":7372},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":462357,"byte_end":462380,"line_start":39,"line_end":39,"column_start":20,"column_end":43},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":7422},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_kinematic.rs","byte_start":463239,"byte_end":463255,"line_start":65,"line_end":65,"column_start":20,"column_end":36},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":7435},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/contact/contact_manifold.rs","byte_start":475319,"byte_end":475334,"line_start":41,"line_end":41,"column_start":20,"column_end":35},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":7490},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/distance/distance_composite_shape_shape.rs","byte_start":495464,"byte_end":495503,"line_start":62,"line_end":62,"column_start":9,"column_end":48},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":3494},"to":{"krate":0,"index":864}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/error.rs","byte_start":499481,"byte_end":499492,"line_start":7,"line_end":7,"column_start":23,"column_end":34},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":7503},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/error.rs","byte_start":499652,"byte_end":499663,"line_start":13,"line_end":13,"column_start":28,"column_end":39},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":7503},"to":{"krate":1,"index":1634}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/nonlinear_time_of_impact/nonlinear_time_of_impact_composite_shape_shape.rs","byte_start":503743,"byte_end":503786,"line_start":73,"line_end":73,"column_start":17,"column_end":60},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":3607},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/nonlinear_time_of_impact/nonlinear_time_of_impact_composite_shape_shape.rs","byte_start":504513,"byte_end":504556,"line_start":101,"line_end":101,"column_start":9,"column_end":52},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":3607},"to":{"krate":0,"index":864}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_aabb.rs","byte_start":516262,"byte_end":516266,"line_start":8,"line_end":8,"column_start":20,"column_end":24},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":6584},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_aabb.rs","byte_start":517785,"byte_end":517789,"line_start":62,"line_end":62,"column_start":38,"column_end":42},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":6584},"to":{"krate":0,"index":3901}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_ball.rs","byte_start":521095,"byte_end":521099,"line_start":8,"line_end":8,"column_start":38,"column_end":42},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":7634},"to":{"krate":0,"index":3901}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_bounding_sphere.rs","byte_start":522575,"byte_end":522589,"line_start":7,"line_end":7,"column_start":38,"column_end":52},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":6602},"to":{"krate":0,"index":3901}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_capsule.rs","byte_start":523927,"byte_end":523934,"line_start":6,"line_end":6,"column_start":38,"column_end":45},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":7651},"to":{"krate":0,"index":3901}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_compound.rs","byte_start":525507,"byte_end":525515,"line_start":8,"line_end":8,"column_start":38,"column_end":46},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":7669},"to":{"krate":0,"index":3901}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_compound.rs","byte_start":526916,"byte_end":526940,"line_start":60,"line_end":60,"column_start":64,"column_end":88},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":3786},"to":{"krate":0,"index":864}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_cuboid.rs","byte_start":528109,"byte_end":528115,"line_start":7,"line_end":7,"column_start":38,"column_end":44},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":7837},"to":{"krate":0,"index":3901}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_heightfield.rs","byte_start":529505,"byte_end":529516,"line_start":6,"line_end":6,"column_start":38,"column_end":49},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":7996},"to":{"krate":0,"index":3901}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_heightfield.rs","byte_start":530685,"byte_end":530696,"line_start":47,"line_end":47,"column_start":50,"column_end":61},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":7996},"to":{"krate":0,"index":3907}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_plane.rs","byte_start":531163,"byte_end":531168,"line_start":6,"line_end":6,"column_start":38,"column_end":43},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":8009},"to":{"krate":0,"index":3901}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_polyline.rs","byte_start":532804,"byte_end":532812,"line_start":10,"line_end":10,"column_start":38,"column_end":46},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":8047},"to":{"krate":0,"index":3901}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_polyline.rs","byte_start":534101,"byte_end":534109,"line_start":54,"line_end":54,"column_start":50,"column_end":58},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":8047},"to":{"krate":0,"index":3907}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_query.rs","byte_start":536952,"byte_end":536967,"line_start":15,"line_end":15,"column_start":20,"column_end":35},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":7536},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_segment.rs","byte_start":540048,"byte_end":540055,"line_start":6,"line_end":6,"column_start":38,"column_end":45},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":8060},"to":{"krate":0,"index":3901}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_segment.rs","byte_start":541421,"byte_end":541428,"line_start":48,"line_end":48,"column_start":50,"column_end":57},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":8060},"to":{"krate":0,"index":3907}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_support_map.rs","byte_start":545846,"byte_end":545854,"line_start":56,"line_end":56,"column_start":38,"column_end":46},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":7854},"to":{"krate":0,"index":3901}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_support_map.rs","byte_start":546367,"byte_end":546371,"line_start":73,"line_end":73,"column_start":38,"column_end":42},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":7678},"to":{"krate":0,"index":3901}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_support_map.rs","byte_start":546884,"byte_end":546894,"line_start":90,"line_end":90,"column_start":38,"column_end":48},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":7767},"to":{"krate":0,"index":3901}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_tetrahedron.rs","byte_start":549025,"byte_end":549036,"line_start":6,"line_end":6,"column_start":38,"column_end":49},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":8211},"to":{"krate":0,"index":3901}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_tetrahedron.rs","byte_start":549902,"byte_end":549913,"line_start":31,"line_end":31,"column_start":50,"column_end":61},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":8211},"to":{"krate":0,"index":3907}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_triangle.rs","byte_start":561025,"byte_end":561033,"line_start":21,"line_end":21,"column_start":38,"column_end":46},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":8250},"to":{"krate":0,"index":3901}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_triangle.rs","byte_start":562313,"byte_end":562321,"line_start":57,"line_end":57,"column_start":50,"column_end":58},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":8250},"to":{"krate":0,"index":3907}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_trimesh.rs","byte_start":571281,"byte_end":571288,"line_start":10,"line_end":10,"column_start":38,"column_end":45},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":8330},"to":{"krate":0,"index":3901}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_trimesh.rs","byte_start":572160,"byte_end":572167,"line_start":43,"line_end":43,"column_start":50,"column_end":57},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":8330},"to":{"krate":0,"index":3907}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/point/point_trimesh.rs","byte_start":572945,"byte_end":572968,"line_start":74,"line_end":74,"column_start":64,"column_end":87},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":4093},"to":{"krate":0,"index":864}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/proximity/proximity_composite_shape_shape.rs","byte_start":577631,"byte_end":577668,"line_start":57,"line_end":57,"column_start":36,"column_end":73},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":4150},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/proximity/proximity_composite_shape_shape.rs","byte_start":578337,"byte_end":578374,"line_start":84,"line_end":84,"column_start":9,"column_end":46},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":4150},"to":{"krate":0,"index":864}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray.rs","byte_start":585972,"byte_end":585975,"line_start":18,"line_end":18,"column_start":20,"column_end":23},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":7564},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray.rs","byte_start":588120,"byte_end":588135,"line_start":82,"line_end":82,"column_start":20,"column_end":35},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":7576},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_aabb.rs","byte_start":590686,"byte_end":590690,"line_start":13,"line_end":13,"column_start":35,"column_end":39},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":6584},"to":{"krate":0,"index":4256}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_aabb.rs","byte_start":592914,"byte_end":592918,"line_start":86,"line_end":86,"column_start":20,"column_end":24},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":6584},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_ball.rs","byte_start":600216,"byte_end":600220,"line_start":24,"line_end":24,"column_start":35,"column_end":39},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":7634},"to":{"krate":0,"index":4256}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_bounding_sphere.rs","byte_start":603679,"byte_end":603693,"line_start":7,"line_end":7,"column_start":35,"column_end":49},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":6602},"to":{"krate":0,"index":4256}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_compound.rs","byte_start":605503,"byte_end":605511,"line_start":9,"line_end":9,"column_start":35,"column_end":43},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":7669},"to":{"krate":0,"index":4256}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_compound.rs","byte_start":606846,"byte_end":606867,"line_start":61,"line_end":61,"column_start":64,"column_end":85},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":4372},"to":{"krate":0,"index":864}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_compound.rs","byte_start":608142,"byte_end":608172,"line_start":107,"line_end":107,"column_start":9,"column_end":39},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":4384},"to":{"krate":0,"index":864}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_cuboid.rs","byte_start":609461,"byte_end":609467,"line_start":7,"line_end":7,"column_start":35,"column_end":41},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":7837},"to":{"krate":0,"index":4256}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_heightfield.rs","byte_start":614485,"byte_end":614496,"line_start":123,"line_end":123,"column_start":35,"column_end":46},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":7996},"to":{"krate":0,"index":4256}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_plane.rs","byte_start":619657,"byte_end":619662,"line_start":41,"line_end":41,"column_start":35,"column_end":40},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":8009},"to":{"krate":0,"index":4256}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_polyline.rs","byte_start":620938,"byte_end":620946,"line_start":8,"line_end":8,"column_start":35,"column_end":43},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":8047},"to":{"krate":0,"index":4256}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_polyline.rs","byte_start":622350,"byte_end":622371,"line_start":62,"line_end":62,"column_start":64,"column_end":85},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":4468},"to":{"krate":0,"index":864}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_polyline.rs","byte_start":623692,"byte_end":623722,"line_start":107,"line_end":107,"column_start":9,"column_end":39},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":4479},"to":{"krate":0,"index":864}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_support_map.rs","byte_start":628605,"byte_end":628613,"line_start":63,"line_end":63,"column_start":35,"column_end":43},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":7854},"to":{"krate":0,"index":4256}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_support_map.rs","byte_start":629223,"byte_end":629227,"line_start":89,"line_end":89,"column_start":35,"column_end":39},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":7678},"to":{"krate":0,"index":4256}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_support_map.rs","byte_start":629812,"byte_end":629819,"line_start":114,"line_end":114,"column_start":35,"column_end":42},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":7651},"to":{"krate":0,"index":4256}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_support_map.rs","byte_start":630429,"byte_end":630439,"line_start":140,"line_end":140,"column_start":35,"column_end":45},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":7767},"to":{"krate":0,"index":4256}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_support_map.rs","byte_start":631674,"byte_end":631681,"line_start":192,"line_end":192,"column_start":35,"column_end":42},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":8060},"to":{"krate":0,"index":4256}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_triangle.rs","byte_start":635418,"byte_end":635426,"line_start":7,"line_end":7,"column_start":35,"column_end":43},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":8250},"to":{"krate":0,"index":4256}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_trimesh.rs","byte_start":638152,"byte_end":638159,"line_start":8,"line_end":8,"column_start":35,"column_end":42},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":8330},"to":{"krate":0,"index":4256}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_trimesh.rs","byte_start":640866,"byte_end":640886,"line_start":106,"line_end":106,"column_start":64,"column_end":84},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":4599},"to":{"krate":0,"index":864}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_trimesh.rs","byte_start":642200,"byte_end":642229,"line_start":151,"line_end":151,"column_start":9,"column_end":38},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":4610},"to":{"krate":0,"index":864}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/ray/ray_trimesh.rs","byte_start":643672,"byte_end":643707,"line_start":200,"line_end":200,"column_start":9,"column_end":44},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":4621},"to":{"krate":0,"index":864}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/time_of_impact/time_of_impact.rs","byte_start":647648,"byte_end":647651,"line_start":46,"line_end":46,"column_start":20,"column_end":23},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":7610},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/time_of_impact/time_of_impact_composite_shape_shape.rs","byte_start":655046,"byte_end":655080,"line_start":85,"line_end":85,"column_start":25,"column_end":59},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":4712},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/time_of_impact/time_of_impact_composite_shape_shape.rs","byte_start":656137,"byte_end":656171,"line_start":125,"line_end":125,"column_start":9,"column_end":43},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":4712},"to":{"krate":0,"index":864}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/toi_dispatcher.rs","byte_start":666598,"byte_end":666602,"line_start":13,"line_end":13,"column_start":40,"column_end":44},"kind":"SuperTrait","from":{"krate":2,"index":1904},"to":{"krate":0,"index":4796}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/toi_dispatcher.rs","byte_start":666605,"byte_end":666609,"line_start":13,"line_end":13,"column_start":47,"column_end":51},"kind":"SuperTrait","from":{"krate":2,"index":1916},"to":{"krate":0,"index":4796}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/toi_dispatcher.rs","byte_start":667967,"byte_end":667987,"line_start":56,"line_end":56,"column_start":41,"column_end":61},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":7624},"to":{"krate":0,"index":4796}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/toi_dispatcher.rs","byte_start":669587,"byte_end":669592,"line_start":118,"line_end":118,"column_start":36,"column_end":41},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":4806},"to":{"krate":0,"index":4796}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/aabb_sets_interferences_collector.rs","byte_start":672118,"byte_end":672148,"line_start":22,"line_end":22,"column_start":27,"column_end":57},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":4837},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/aabb_sets_interferences_collector.rs","byte_start":672656,"byte_end":672686,"line_start":41,"line_end":41,"column_start":9,"column_end":39},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":4837},"to":{"krate":0,"index":849}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/bounding_volume_interferences_collector.rs","byte_start":673942,"byte_end":673978,"line_start":15,"line_end":15,"column_start":20,"column_end":56},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":4862},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/bounding_volume_interferences_collector.rs","byte_start":674440,"byte_end":674476,"line_start":34,"line_end":34,"column_start":39,"column_end":75},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":4862},"to":{"krate":0,"index":845}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/composite_closest_point_visitor.rs","byte_start":675403,"byte_end":675431,"line_start":15,"line_end":15,"column_start":46,"column_end":74},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":4897},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/composite_closest_point_visitor.rs","byte_start":675839,"byte_end":675867,"line_start":27,"line_end":27,"column_start":9,"column_end":37},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":4897},"to":{"krate":0,"index":864}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/composite_point_containment_test.rs","byte_start":677587,"byte_end":677616,"line_start":19,"line_end":19,"column_start":28,"column_end":57},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":4927},"to":{"krate":0,"index":845}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/point_interferences_collector.rs","byte_start":678835,"byte_end":678862,"line_start":16,"line_end":16,"column_start":27,"column_end":54},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":4950},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/point_interferences_collector.rs","byte_start":679220,"byte_end":679247,"line_start":30,"line_end":30,"column_start":39,"column_end":66},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":4950},"to":{"krate":0,"index":845}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/ray_interferences_collector.rs","byte_start":680200,"byte_end":680225,"line_start":16,"line_end":16,"column_start":27,"column_end":52},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":4976},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/ray_interferences_collector.rs","byte_start":680605,"byte_end":680630,"line_start":32,"line_end":32,"column_start":39,"column_end":64},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":4976},"to":{"krate":0,"index":845}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/ray_intersection_cost_fn_visitor.rs","byte_start":682200,"byte_end":682228,"line_start":32,"line_end":32,"column_start":35,"column_end":63},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":5010},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/query/visitors/ray_intersection_cost_fn_visitor.rs","byte_start":682905,"byte_end":682933,"line_start":55,"line_end":55,"column_start":9,"column_end":37},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":5010},"to":{"krate":0,"index":864}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/ball.rs","byte_start":687549,"byte_end":687553,"line_start":14,"line_end":14,"column_start":20,"column_end":24},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":7634},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/ball.rs","byte_start":687908,"byte_end":687912,"line_start":29,"line_end":29,"column_start":38,"column_end":42},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":7634},"to":{"krate":0,"index":5775}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/capsule.rs","byte_start":689165,"byte_end":689172,"line_start":19,"line_end":19,"column_start":20,"column_end":27},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":7651},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/capsule.rs","byte_start":690690,"byte_end":690697,"line_start":72,"line_end":72,"column_start":38,"column_end":45},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":7651},"to":{"krate":0,"index":5775}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/capsule.rs","byte_start":691189,"byte_end":691215,"line_start":90,"line_end":90,"column_start":20,"column_end":46},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":5122},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/capsule.rs","byte_start":691408,"byte_end":691434,"line_start":98,"line_end":98,"column_start":47,"column_end":73},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":5122},"to":{"krate":0,"index":3390}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/compound.rs","byte_start":694781,"byte_end":694789,"line_start":26,"line_end":26,"column_start":20,"column_end":28},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":7669},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/compound.rs","byte_start":695685,"byte_end":695693,"line_start":56,"line_end":56,"column_start":20,"column_end":28},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":7669},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/compound.rs","byte_start":697426,"byte_end":697434,"line_start":111,"line_end":111,"column_start":42,"column_end":50},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":7669},"to":{"krate":0,"index":5139}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/compound.rs","byte_start":698568,"byte_end":698592,"line_start":161,"line_end":161,"column_start":24,"column_end":48},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":5186},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/compound.rs","byte_start":698850,"byte_end":698874,"line_start":171,"line_end":171,"column_start":51,"column_end":75},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":5186},"to":{"krate":0,"index":3390}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/cone.rs","byte_start":700631,"byte_end":700635,"line_start":17,"line_end":17,"column_start":20,"column_end":24},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":7678},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/cone.rs","byte_start":701424,"byte_end":701428,"line_start":45,"line_end":45,"column_start":38,"column_end":42},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":7678},"to":{"krate":0,"index":5775}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex.rs","byte_start":702789,"byte_end":702793,"line_start":26,"line_end":26,"column_start":20,"column_end":24},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":7708},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex.rs","byte_start":703476,"byte_end":703484,"line_start":53,"line_end":53,"column_start":20,"column_end":28},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":7747},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex.rs","byte_start":704295,"byte_end":704305,"line_start":83,"line_end":83,"column_start":20,"column_end":30},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":7767},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex.rs","byte_start":716623,"byte_end":716633,"line_start":416,"line_end":416,"column_start":38,"column_end":48},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":7767},"to":{"krate":0,"index":5775}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex.rs","byte_start":716831,"byte_end":716841,"line_start":423,"line_end":423,"column_start":44,"column_end":54},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":7767},"to":{"krate":0,"index":5333}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polygonal_feature3.rs","byte_start":721295,"byte_end":721308,"line_start":19,"line_end":19,"column_start":20,"column_end":33},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":7789},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polygonal_feature3.rs","byte_start":722559,"byte_end":722581,"line_start":56,"line_end":56,"column_start":20,"column_end":42},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":7796},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polyhedron.rs","byte_start":735717,"byte_end":735726,"line_start":25,"line_end":25,"column_start":6,"column_end":15},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":7810},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/convex_polyhedron.rs","byte_start":736615,"byte_end":736625,"line_start":53,"line_end":53,"column_start":43,"column_end":53},"kind":"SuperTrait","from":{"krate":0,"index":5775},"to":{"krate":0,"index":5333}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/cuboid.rs","byte_start":739060,"byte_end":739066,"line_start":23,"line_end":23,"column_start":20,"column_end":26},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":7837},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/cuboid.rs","byte_start":739346,"byte_end":739352,"line_start":32,"line_end":32,"column_start":20,"column_end":26},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":7837},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/cuboid.rs","byte_start":742645,"byte_end":742651,"line_start":135,"line_end":135,"column_start":38,"column_end":44},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":7837},"to":{"krate":0,"index":5775}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/cuboid.rs","byte_start":742937,"byte_end":742943,"line_start":148,"line_end":148,"column_start":44,"column_end":50},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":7837},"to":{"krate":0,"index":5333}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/cylinder.rs","byte_start":757026,"byte_end":757034,"line_start":17,"line_end":17,"column_start":20,"column_end":28},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":7854},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/cylinder.rs","byte_start":757906,"byte_end":757914,"line_start":47,"line_end":47,"column_start":38,"column_end":46},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":7854},"to":{"krate":0,"index":5775}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/heightfield3.rs","byte_start":760836,"byte_end":760847,"line_start":35,"line_end":35,"column_start":20,"column_end":31},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":7996},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/heightfield3.rs","byte_start":776537,"byte_end":776575,"line_start":464,"line_end":464,"column_start":24,"column_end":62},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":5445},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/heightfield3.rs","byte_start":776825,"byte_end":776863,"line_start":473,"line_end":473,"column_start":51,"column_end":89},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":5445},"to":{"krate":0,"index":3390}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/heightfield3.rs","byte_start":778281,"byte_end":778301,"line_start":526,"line_end":526,"column_start":37,"column_end":57},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":5458},"to":{"krate":2,"index":4852}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/plane.rs","byte_start":779430,"byte_end":779435,"line_start":13,"line_end":13,"column_start":20,"column_end":25},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":8009},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":781492,"byte_end":781500,"line_start":56,"line_end":56,"column_start":20,"column_end":28},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":8047},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":796241,"byte_end":796249,"line_start":533,"line_end":533,"column_start":42,"column_end":50},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":8047},"to":{"krate":0,"index":5139}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":797277,"byte_end":797285,"line_start":576,"line_end":576,"column_start":43,"column_end":51},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":8047},"to":{"krate":0,"index":5396}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":802530,"byte_end":802554,"line_start":711,"line_end":711,"column_start":24,"column_end":48},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":5556},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/polyline.rs","byte_start":802919,"byte_end":802943,"line_start":727,"line_end":727,"column_start":51,"column_end":75},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":5556},"to":{"krate":0,"index":3390}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/segment.rs","byte_start":805723,"byte_end":805743,"line_start":32,"line_end":32,"column_start":20,"column_end":40},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":8078},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/segment.rs","byte_start":806205,"byte_end":806212,"line_start":49,"line_end":49,"column_start":20,"column_end":27},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":8060},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/segment.rs","byte_start":806584,"byte_end":806591,"line_start":62,"line_end":62,"column_start":20,"column_end":27},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":8060},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/segment.rs","byte_start":806981,"byte_end":806988,"line_start":78,"line_end":78,"column_start":20,"column_end":27},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":8060},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/segment.rs","byte_start":810483,"byte_end":810490,"line_start":183,"line_end":183,"column_start":38,"column_end":45},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":8060},"to":{"krate":0,"index":5775}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/segment.rs","byte_start":810753,"byte_end":810760,"line_start":194,"line_end":194,"column_start":44,"column_end":51},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":8060},"to":{"krate":0,"index":5333}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":817210,"byte_end":817211,"line_start":16,"line_end":16,"column_start":69,"column_end":70},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":5654},"to":{"krate":0,"index":5649}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":817457,"byte_end":817461,"line_start":25,"line_end":25,"column_start":32,"column_end":36},"kind":"SuperTrait","from":{"krate":2,"index":1904},"to":{"krate":0,"index":5656}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":817464,"byte_end":817468,"line_start":25,"line_end":25,"column_start":39,"column_end":43},"kind":"SuperTrait","from":{"krate":2,"index":1916},"to":{"krate":0,"index":5656}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":817471,"byte_end":817479,"line_start":25,"line_end":25,"column_start":46,"column_end":54},"kind":"SuperTrait","from":{"krate":17,"index":10},"to":{"krate":0,"index":5656}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":817482,"byte_end":817492,"line_start":25,"line_end":25,"column_start":57,"column_end":67},"kind":"SuperTrait","from":{"krate":0,"index":5649},"to":{"krate":0,"index":5656}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":821327,"byte_end":821338,"line_start":157,"line_end":157,"column_start":20,"column_end":31},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":8113},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":822112,"byte_end":822123,"line_start":183,"line_end":183,"column_start":44,"column_end":55},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":8113},"to":{"krate":2,"index":1816}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape.rs","byte_start":822238,"byte_end":822249,"line_start":190,"line_end":190,"column_start":30,"column_end":41},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":8113},"to":{"krate":2,"index":2073}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape_impl.rs","byte_start":825085,"byte_end":825093,"line_start":111,"line_end":111,"column_start":33,"column_end":41},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":8250},"to":{"krate":0,"index":5656}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape_impl.rs","byte_start":825222,"byte_end":825229,"line_start":117,"line_end":117,"column_start":33,"column_end":40},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":8060},"to":{"krate":0,"index":5656}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape_impl.rs","byte_start":825358,"byte_end":825362,"line_start":123,"line_end":123,"column_start":33,"column_end":37},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":7634},"to":{"krate":0,"index":5656}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape_impl.rs","byte_start":825782,"byte_end":825788,"line_start":141,"line_end":141,"column_start":33,"column_end":39},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":7837},"to":{"krate":0,"index":5656}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape_impl.rs","byte_start":825917,"byte_end":825924,"line_start":147,"line_end":147,"column_start":33,"column_end":40},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":7651},"to":{"krate":0,"index":5656}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape_impl.rs","byte_start":826369,"byte_end":826379,"line_start":166,"line_end":166,"column_start":33,"column_end":43},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":7767},"to":{"krate":0,"index":5656}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape_impl.rs","byte_start":826675,"byte_end":826683,"line_start":179,"line_end":179,"column_start":33,"column_end":41},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":7669},"to":{"krate":0,"index":5656}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape_impl.rs","byte_start":827366,"byte_end":827373,"line_start":204,"line_end":204,"column_start":33,"column_end":40},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":8330},"to":{"krate":0,"index":5656}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape_impl.rs","byte_start":828235,"byte_end":828243,"line_start":231,"line_end":231,"column_start":33,"column_end":41},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":8047},"to":{"krate":0,"index":5656}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape_impl.rs","byte_start":828718,"byte_end":828729,"line_start":252,"line_end":252,"column_start":33,"column_end":44},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":7996},"to":{"krate":0,"index":5656}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/shape_impl.rs","byte_start":829122,"byte_end":829127,"line_start":272,"line_end":272,"column_start":33,"column_end":38},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":8009},"to":{"krate":0,"index":5656}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":832397,"byte_end":832421,"line_start":48,"line_end":48,"column_start":20,"column_end":44},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":8225},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/tetrahedron.rs","byte_start":834166,"byte_end":834177,"line_start":94,"line_end":94,"column_start":20,"column_end":31},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":8211},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":840241,"byte_end":840262,"line_start":50,"line_end":50,"column_start":20,"column_end":41},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":8269},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":841558,"byte_end":841566,"line_start":93,"line_end":93,"column_start":20,"column_end":28},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":8250},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":847808,"byte_end":847816,"line_start":290,"line_end":290,"column_start":38,"column_end":46},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":8250},"to":{"krate":0,"index":5775}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/triangle.rs","byte_start":848362,"byte_end":848370,"line_start":314,"line_end":314,"column_start":44,"column_end":52},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":8250},"to":{"krate":0,"index":5333}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":853474,"byte_end":853492,"line_start":41,"line_end":41,"column_start":6,"column_end":24},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":8304},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":855235,"byte_end":855242,"line_start":98,"line_end":98,"column_start":20,"column_end":27},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":8330},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":875509,"byte_end":875516,"line_start":731,"line_end":731,"column_start":42,"column_end":49},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":8330},"to":{"krate":0,"index":5139}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":876561,"byte_end":876568,"line_start":774,"line_end":774,"column_start":43,"column_end":50},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":8330},"to":{"krate":0,"index":5396}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":882197,"byte_end":882204,"line_start":914,"line_end":914,"column_start":53,"column_end":60},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":8330},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":882716,"byte_end":882739,"line_start":932,"line_end":932,"column_start":24,"column_end":47},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":5971},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/shape/trimesh.rs","byte_start":883094,"byte_end":883117,"line_start":948,"line_end":948,"column_start":51,"column_end":74},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":5971},"to":{"krate":0,"index":3390}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/convex_hull2.rs","byte_start":891069,"byte_end":891081,"line_start":197,"line_end":197,"column_start":20,"column_end":32},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":6007},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/convex_hull3.rs","byte_start":909146,"byte_end":909159,"line_start":560,"line_end":560,"column_start":20,"column_end":33},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":6069},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/hacd.rs","byte_start":921246,"byte_end":921261,"line_start":195,"line_end":195,"column_start":20,"column_end":35},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":6159},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/hacd.rs","byte_start":927110,"byte_end":927123,"line_start":382,"line_end":382,"column_start":20,"column_end":33},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":6176},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/hacd.rs","byte_start":934032,"byte_end":934045,"line_start":580,"line_end":580,"column_start":34,"column_end":47},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":6176},"to":{"krate":2,"index":1634}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/hacd.rs","byte_start":934189,"byte_end":934202,"line_start":587,"line_end":587,"column_start":27,"column_end":40},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":6176},"to":{"krate":2,"index":1639}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/hacd.rs","byte_start":934245,"byte_end":934258,"line_start":589,"line_end":589,"column_start":36,"column_end":49},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":6176},"to":{"krate":2,"index":1671}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/hacd.rs","byte_start":934434,"byte_end":934447,"line_start":596,"line_end":596,"column_start":29,"column_end":42},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":6176},"to":{"krate":2,"index":1660}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/hacd.rs","byte_start":934805,"byte_end":934824,"line_start":614,"line_end":614,"column_start":9,"column_end":28},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":6209},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/hacd.rs","byte_start":935048,"byte_end":935067,"line_start":624,"line_end":624,"column_start":34,"column_end":53},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":6209},"to":{"krate":2,"index":1634}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/hacd.rs","byte_start":935246,"byte_end":935265,"line_start":631,"line_end":631,"column_start":27,"column_end":46},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":6209},"to":{"krate":2,"index":1639}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/hacd.rs","byte_start":935308,"byte_end":935327,"line_start":633,"line_end":633,"column_start":36,"column_end":55},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":6209},"to":{"krate":2,"index":1671}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/hacd.rs","byte_start":935700,"byte_end":935719,"line_start":646,"line_end":646,"column_start":29,"column_end":48},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":6209},"to":{"krate":2,"index":1660}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/hacd.rs","byte_start":939593,"byte_end":939603,"line_start":777,"line_end":777,"column_start":24,"column_end":34},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":6238},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/hacd.rs","byte_start":939775,"byte_end":939785,"line_start":783,"line_end":783,"column_start":42,"column_end":52},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":6238},"to":{"krate":0,"index":5775}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/hacd.rs","byte_start":940299,"byte_end":940309,"line_start":802,"line_end":802,"column_start":39,"column_end":49},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":6238},"to":{"krate":0,"index":4256}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/to_trimesh/ball_to_trimesh.rs","byte_start":941160,"byte_end":941164,"line_start":8,"line_end":8,"column_start":37,"column_end":41},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":7634},"to":{"krate":0,"index":6316}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/to_trimesh/capsule_to_trimesh.rs","byte_start":941644,"byte_end":941651,"line_start":8,"line_end":8,"column_start":37,"column_end":44},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":7651},"to":{"krate":0,"index":6316}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/to_trimesh/cone_to_trimesh.rs","byte_start":942290,"byte_end":942294,"line_start":8,"line_end":8,"column_start":37,"column_end":41},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":7678},"to":{"krate":0,"index":6316}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/to_trimesh/cuboid_to_trimesh.rs","byte_start":942928,"byte_end":942934,"line_start":8,"line_end":8,"column_start":37,"column_end":43},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":7837},"to":{"krate":0,"index":6316}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/to_trimesh/cylinder_to_trimesh.rs","byte_start":943360,"byte_end":943368,"line_start":8,"line_end":8,"column_start":37,"column_end":45},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":7854},"to":{"krate":0,"index":6316}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/to_trimesh/heightfield_to_trimesh.rs","byte_start":944203,"byte_end":944214,"line_start":6,"line_end":6,"column_start":44,"column_end":55},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":7996},"to":{"krate":0,"index":6316}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/transformation/to_trimesh/triangle_to_trimesh.rs","byte_start":944706,"byte_end":944714,"line_start":6,"line_end":6,"column_start":37,"column_end":45},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":8250},"to":{"krate":0,"index":6316}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/deterministic_state.rs","byte_start":949540,"byte_end":949558,"line_start":7,"line_end":7,"column_start":6,"column_end":24},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":6408},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/deterministic_state.rs","byte_start":949749,"byte_end":949767,"line_start":14,"line_end":14,"column_start":22,"column_end":40},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":6408},"to":{"krate":2,"index":6296}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/hashable_partial_eq.rs","byte_start":950152,"byte_end":950169,"line_start":11,"line_end":11,"column_start":9,"column_end":26},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":8361},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/hashable_partial_eq.rs","byte_start":950591,"byte_end":950608,"line_start":24,"line_end":24,"column_start":27,"column_end":44},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":8361},"to":{"krate":2,"index":1639}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/hashable_partial_eq.rs","byte_start":950642,"byte_end":950659,"line_start":26,"line_end":26,"column_start":27,"column_end":44},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":8361},"to":{"krate":2,"index":6257}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/isometry_ops.rs","byte_start":952248,"byte_end":952257,"line_start":41,"line_end":41,"column_start":39,"column_end":48},"kind":{"Impl":{"id":340}},"from":{"krate":19,"index":6003},"to":{"krate":0,"index":6436}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/ref_with_cost.rs","byte_start":955019,"byte_end":955030,"line_start":13,"line_end":13,"column_start":16,"column_end":27},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":6472},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/ref_with_cost.rs","byte_start":955314,"byte_end":955325,"line_start":24,"line_end":24,"column_start":41,"column_end":52},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":6472},"to":{"krate":2,"index":1634}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/ref_with_cost.rs","byte_start":955486,"byte_end":955497,"line_start":31,"line_end":31,"column_start":34,"column_end":45},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":6472},"to":{"krate":2,"index":1639}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/ref_with_cost.rs","byte_start":955554,"byte_end":955565,"line_start":33,"line_end":33,"column_start":43,"column_end":54},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":6472},"to":{"krate":2,"index":1671}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/ref_with_cost.rs","byte_start":955758,"byte_end":955769,"line_start":40,"line_end":40,"column_start":36,"column_end":47},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":6472},"to":{"krate":2,"index":1660}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/sorted_pair.rs","byte_start":957669,"byte_end":957679,"line_start":9,"line_end":9,"column_start":21,"column_end":31},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":8376},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/ncollide3d-0.24.0/src/utils/sorted_pair.rs","byte_start":957989,"byte_end":957999,"line_start":20,"line_end":20,"column_start":31,"column_end":41},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":8376},"to":{"krate":2,"index":2073}}]}