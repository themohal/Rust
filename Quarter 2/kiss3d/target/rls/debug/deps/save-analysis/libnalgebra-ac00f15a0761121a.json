{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0","program":"/home/farjad-ali/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","nalgebra","--edition=2018","/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"matrixmultiply\"","--cfg","feature=\"rand_distr\"","--cfg","feature=\"std\"","-C","metadata=ac00f15a0761121a","-C","extra-filename=-ac00f15a0761121a","--out-dir","/home/farjad-ali/Rust/Quarter 2/kiss3d/target/rls/debug/deps","-L","dependency=/home/farjad-ali/Rust/Quarter 2/kiss3d/target/rls/debug/deps","--extern","approx=/home/farjad-ali/Rust/Quarter 2/kiss3d/target/rls/debug/deps/libapprox-224d59d13d32eeb0.rmeta","--extern","generic_array=/home/farjad-ali/Rust/Quarter 2/kiss3d/target/rls/debug/deps/libgeneric_array-613654743fc31683.rmeta","--extern","matrixmultiply=/home/farjad-ali/Rust/Quarter 2/kiss3d/target/rls/debug/deps/libmatrixmultiply-7949214deb5a4585.rmeta","--extern","num_complex=/home/farjad-ali/Rust/Quarter 2/kiss3d/target/rls/debug/deps/libnum_complex-5541e8a041939eb4.rmeta","--extern","num_rational=/home/farjad-ali/Rust/Quarter 2/kiss3d/target/rls/debug/deps/libnum_rational-aea006694ebbebc1.rmeta","--extern","num_traits=/home/farjad-ali/Rust/Quarter 2/kiss3d/target/rls/debug/deps/libnum_traits-cdf93f73925a1d07.rmeta","--extern","rand=/home/farjad-ali/Rust/Quarter 2/kiss3d/target/rls/debug/deps/librand-ce31753660185100.rmeta","--extern","rand_distr=/home/farjad-ali/Rust/Quarter 2/kiss3d/target/rls/debug/deps/librand_distr-cdd2744de5af7a24.rmeta","--extern","simba=/home/farjad-ali/Rust/Quarter 2/kiss3d/target/rls/debug/deps/libsimba-98012b013ecd9437.rmeta","--extern","typenum=/home/farjad-ali/Rust/Quarter 2/kiss3d/target/rls/debug/deps/libtypenum-fd7698cb9c476c14.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/farjad-ali/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/farjad-ali/Rust/Quarter 2/kiss3d/target/rls/debug/deps/libnalgebra-ac00f15a0761121a.rmeta"},"prelude":{"crate_id":{"name":"nalgebra","disambiguator":[15628696787522050203,7991634580994669825]},"crate_root":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src","external_crates":[{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9564622754343001814,6395353584576912375]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[16347567532895737325,10433174518283571136]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[6035154360143295752,3120051156278071757]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[17970804288108720841,8277620835330235672]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[16732030649177302276,7623982932271952002]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[2049976911787826744,13979720418681232837]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[17847122289935873599,14578858192368606437]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12400616498443773685,4537628398871354645]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[1484644931138181661,6065563251080435870]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[10540921678309121045,13783658537477923762]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[14352423081837475994,16315607114161141584]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[15159368332461590608,12067571535011159917]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[565700744459104052,3788273681611333969]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[2676206115383283879,17948995864942817625]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","num":15,"id":{"name":"approx","disambiguator":[4659412410510464707,8179273015758229317]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","num":16,"id":{"name":"num_traits","disambiguator":[18280951367680062438,17399211580599509837]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","num":17,"id":{"name":"matrixmultiply","disambiguator":[16810115894398399111,2821757940363213925]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","num":18,"id":{"name":"rawpointer","disambiguator":[12175646293835987387,6358191257837919929]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","num":19,"id":{"name":"rand_distr","disambiguator":[7819059941814983980,6907032081130253966]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","num":20,"id":{"name":"rand","disambiguator":[5872653678934046551,17707811861653497161]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","num":21,"id":{"name":"rand_core","disambiguator":[474046970265584131,16317056499667026151]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","num":22,"id":{"name":"getrandom","disambiguator":[5257712510970732985,11318898845138337117]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","num":23,"id":{"name":"cfg_if","disambiguator":[6956900293673062683,13192834746660551626]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","num":24,"id":{"name":"libc","disambiguator":[657624222426815521,10684527131133059072]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","num":25,"id":{"name":"rand_chacha","disambiguator":[17380563507190122393,10169145866536563654]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","num":26,"id":{"name":"ppv_lite86","disambiguator":[5200464393876613351,13424582627006814768]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","num":27,"id":{"name":"simba","disambiguator":[6216583338450269413,12924415775222353370]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","num":28,"id":{"name":"num_complex","disambiguator":[13109746978719735377,2968288435886182343]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","num":29,"id":{"name":"paste","disambiguator":[9347646932603485813,8717825850453567916]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","num":30,"id":{"name":"proc_macro_hack","disambiguator":[6420530350504618305,13182919156808654971]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","num":31,"id":{"name":"paste_impl","disambiguator":[14446104188430901687,11289301769036049829]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/default_allocator.rs","num":32,"id":{"name":"generic_array","disambiguator":[7907160341891213291,18141815836686927397]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/default_allocator.rs","num":33,"id":{"name":"typenum","disambiguator":[16574785526192663555,11852271692604152690]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction_slice.rs","num":34,"id":{"name":"num_rational","disambiguator":[9906114152297790726,17878255054636837789]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction_slice.rs","num":35,"id":{"name":"num_integer","disambiguator":[4183640638276385209,3904821750051454826]}}],"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":0,"byte_end":14754,"line_start":1,"line_end":540,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/mod.rs","byte_start":15460,"byte_end":15461,"line_start":40,"line_end":40,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"Vector, VectorSum, SquareMatrix, MatrixSum, RowVector, Matrix","parent":{"krate":0,"index":7}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/mod.rs","byte_start":15460,"byte_end":15461,"line_start":40,"line_end":40,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"Norm","parent":{"krate":0,"index":7}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/mod.rs","byte_start":15460,"byte_end":15461,"line_start":40,"line_end":40,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"Scalar","parent":{"krate":0,"index":7}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/mod.rs","byte_start":15460,"byte_end":15461,"line_start":40,"line_end":40,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"Unit, Normed","parent":{"krate":0,"index":7}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/mod.rs","byte_start":15460,"byte_end":15461,"line_start":40,"line_end":40,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"DefaultAllocator","parent":{"krate":0,"index":7}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/mod.rs","byte_start":15460,"byte_end":15461,"line_start":40,"line_end":40,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"DimName, Dynamic, U1, Dim, DimDiff, U2, DimSub, U3","parent":{"krate":0,"index":7}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/mod.rs","byte_start":15460,"byte_end":15461,"line_start":40,"line_end":40,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"VectorN, RowVectorN, Matrix3, Vector2, DMatrix, MatrixN, Matrix2, Vector4, Vector1, Matrix4, MatrixMN, Vector3, Matrix2x3","parent":{"krate":0,"index":7}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/mod.rs","byte_start":15460,"byte_end":15461,"line_start":40,"line_end":40,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"MatrixSliceMN, DVectorSlice, MatrixSliceMutMN, DVectorSliceMut, VectorSliceN","parent":{"krate":0,"index":7}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/mod.rs","byte_start":15460,"byte_end":15461,"line_start":40,"line_end":40,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"ArrayStorage","parent":{"krate":0,"index":7}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/mod.rs","byte_start":15460,"byte_end":15461,"line_start":40,"line_end":40,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"SliceStorage, MatrixSliceMut, MatrixSlice, SliceStorageMut","parent":{"krate":0,"index":7}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/mod.rs","byte_start":15460,"byte_end":15461,"line_start":40,"line_end":40,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"VecStorage","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":3923},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/mod.rs","byte_start":507519,"byte_end":507535,"line_start":89,"line_end":89,"column_start":34,"column_end":50},"alias_span":null,"name":"AbstractRotation","value":"","parent":{"krate":0,"index":3899}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/mod.rs","byte_start":507559,"byte_end":507560,"line_start":91,"line_end":91,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"Point","parent":{"krate":0,"index":3899}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/mod.rs","byte_start":507559,"byte_end":507560,"line_start":91,"line_end":91,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"Point3, Point2","parent":{"krate":0,"index":3899}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/mod.rs","byte_start":507559,"byte_end":507560,"line_start":91,"line_end":91,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"Rotation","parent":{"krate":0,"index":3899}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/mod.rs","byte_start":507559,"byte_end":507560,"line_start":91,"line_end":91,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"Rotation2, Rotation3","parent":{"krate":0,"index":3899}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/mod.rs","byte_start":507559,"byte_end":507560,"line_start":91,"line_end":91,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"UnitQuaternion, Quaternion","parent":{"krate":0,"index":3899}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/mod.rs","byte_start":507559,"byte_end":507560,"line_start":91,"line_end":91,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"UnitComplex","parent":{"krate":0,"index":3899}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/mod.rs","byte_start":507559,"byte_end":507560,"line_start":91,"line_end":91,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"Translation","parent":{"krate":0,"index":3899}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/mod.rs","byte_start":507559,"byte_end":507560,"line_start":91,"line_end":91,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"Translation2, Translation3","parent":{"krate":0,"index":3899}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/mod.rs","byte_start":507559,"byte_end":507560,"line_start":91,"line_end":91,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"Isometry","parent":{"krate":0,"index":3899}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/mod.rs","byte_start":507559,"byte_end":507560,"line_start":91,"line_end":91,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"IsometryMatrix3","parent":{"krate":0,"index":3899}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/mod.rs","byte_start":507559,"byte_end":507560,"line_start":91,"line_end":91,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"Similarity","parent":{"krate":0,"index":3899}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/mod.rs","byte_start":507559,"byte_end":507560,"line_start":91,"line_end":91,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":3899}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/mod.rs","byte_start":507559,"byte_end":507560,"line_start":91,"line_end":91,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"TAffine, TCategory, TProjective, Transform, SubTCategoryOf, TGeneral, SuperTCategoryOf, TCategoryMul","parent":{"krate":0,"index":3899}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/mod.rs","byte_start":507559,"byte_end":507560,"line_start":91,"line_end":91,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"Projective3","parent":{"krate":0,"index":3899}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/mod.rs","byte_start":507559,"byte_end":507560,"line_start":91,"line_end":91,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"Reflection","parent":{"krate":0,"index":3899}},{"kind":"Use","ref_id":{"krate":0,"index":6962},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/mod.rs","byte_start":508030,"byte_end":508043,"line_start":115,"line_end":115,"column_start":29,"column_end":42},"alias_span":null,"name":"Orthographic3","value":"","parent":{"krate":0,"index":3899}},{"kind":"Use","ref_id":{"krate":0,"index":7036},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/mod.rs","byte_start":508072,"byte_end":508084,"line_start":116,"line_end":116,"column_start":28,"column_end":40},"alias_span":null,"name":"Perspective3","value":"","parent":{"krate":0,"index":3899}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/mod.rs","byte_start":1032285,"byte_end":1032286,"line_start":31,"line_end":31,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"Bidiagonal","parent":{"krate":0,"index":7102}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/mod.rs","byte_start":1032285,"byte_end":1032286,"line_start":31,"line_end":31,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":7102}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/mod.rs","byte_start":1032285,"byte_end":1032286,"line_start":31,"line_end":31,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":7102}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/mod.rs","byte_start":1032285,"byte_end":1032286,"line_start":31,"line_end":31,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":7102}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/mod.rs","byte_start":1032285,"byte_end":1032286,"line_start":31,"line_end":31,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":7102}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/mod.rs","byte_start":1032285,"byte_end":1032286,"line_start":31,"line_end":31,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"Hessenberg","parent":{"krate":0,"index":7102}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/mod.rs","byte_start":1032285,"byte_end":1032286,"line_start":31,"line_end":31,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"LU","parent":{"krate":0,"index":7102}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/mod.rs","byte_start":1032285,"byte_end":1032286,"line_start":31,"line_end":31,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"PermutationSequence","parent":{"krate":0,"index":7102}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/mod.rs","byte_start":1032285,"byte_end":1032286,"line_start":31,"line_end":31,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":7102}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/mod.rs","byte_start":1032285,"byte_end":1032286,"line_start":31,"line_end":31,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":7102}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/mod.rs","byte_start":1032285,"byte_end":1032286,"line_start":31,"line_end":31,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":7102}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/mod.rs","byte_start":1032285,"byte_end":1032286,"line_start":31,"line_end":31,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":7102}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/mod.rs","byte_start":1032285,"byte_end":1032286,"line_start":31,"line_end":31,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"SymmetricTridiagonal","parent":{"krate":0,"index":7102}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":4235,"byte_end":4236,"line_start":133,"line_end":133,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"VectorN, Scalar, storage, allocator, Unit, VectorSliceN, Matrix, U1, U2, MatrixN, Norm, MatrixMN, dimension, constraint, RowVectorN, Vector, Normed, DimName, DefaultAllocator, Dim, U3","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":4235,"byte_end":4236,"line_start":133,"line_end":133,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"Point","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":4235,"byte_end":4236,"line_start":133,"line_end":133,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":4494,"byte_end":4498,"line_start":142,"line_end":142,"column_start":9,"column_end":13},"alias_span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":4502,"byte_end":4506,"line_start":142,"line_end":142,"column_start":17,"column_end":21},"name":"core","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":28,"index":471},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":4669,"byte_end":4676,"line_start":150,"line_end":150,"column_start":22,"column_end":29},"alias_span":null,"name":"Complex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":27,"index":144},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":4707,"byte_end":4716,"line_start":152,"line_end":152,"column_start":5,"column_end":14},"alias_span":null,"name":"ClosedAdd","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":27,"index":150},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":4718,"byte_end":4727,"line_start":152,"line_end":152,"column_start":16,"column_end":25},"alias_span":null,"name":"ClosedDiv","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":27,"index":148},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":4729,"byte_end":4738,"line_start":152,"line_end":152,"column_start":27,"column_end":36},"alias_span":null,"name":"ClosedMul","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":27,"index":146},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":4740,"byte_end":4749,"line_start":152,"line_end":152,"column_start":38,"column_end":47},"alias_span":null,"name":"ClosedSub","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":27,"index":72},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":4751,"byte_end":4763,"line_start":152,"line_end":152,"column_start":49,"column_end":61},"alias_span":null,"name":"ComplexField","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":27,"index":167},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":4765,"byte_end":4770,"line_start":152,"line_end":152,"column_start":63,"column_end":68},"alias_span":null,"name":"Field","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":27,"index":28},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":4772,"byte_end":4781,"line_start":152,"line_end":152,"column_start":70,"column_end":79},"alias_span":null,"name":"RealField","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":27,"index":217},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":4808,"byte_end":4816,"line_start":154,"line_end":154,"column_start":23,"column_end":31},"alias_span":null,"name":"SimdBool","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":27,"index":286},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":4818,"byte_end":4834,"line_start":154,"line_end":154,"column_start":33,"column_end":49},"alias_span":null,"name":"SimdComplexField","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":27,"index":363},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":4836,"byte_end":4850,"line_start":154,"line_end":154,"column_start":51,"column_end":65},"alias_span":null,"name":"SimdPartialOrd","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":27,"index":394},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":4852,"byte_end":4865,"line_start":154,"line_end":154,"column_start":67,"column_end":80},"alias_span":null,"name":"SimdRealField","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":0,"byte_end":14754,"line_start":1,"line_end":540,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":3899},{"krate":0,"index":7102},{"krate":0,"index":8146},{"krate":0,"index":8147},{"krate":0,"index":8148},{"krate":0,"index":8149},{"krate":0,"index":8150},{"krate":0,"index":8151},{"krate":0,"index":8155},{"krate":0,"index":8159},{"krate":0,"index":8160},{"krate":0,"index":8161},{"krate":0,"index":8169},{"krate":0,"index":8174},{"krate":0,"index":8176},{"krate":0,"index":8178},{"krate":0,"index":8180},{"krate":0,"index":8182},{"krate":0,"index":8184},{"krate":0,"index":8186},{"krate":0,"index":8188},{"krate":0,"index":8192},{"krate":0,"index":8196},{"krate":0,"index":8200},{"krate":0,"index":8202},{"krate":0,"index":8204},{"krate":0,"index":8206},{"krate":0,"index":8208},{"krate":0,"index":8210},{"krate":0,"index":8213},{"krate":0,"index":8216},{"krate":0,"index":8219},{"krate":0,"index":8222},{"krate":0,"index":8225},{"krate":0,"index":8228},{"krate":0,"index":8231},{"krate":0,"index":8234},{"krate":0,"index":8237},{"krate":0,"index":8240},{"krate":0,"index":8243},{"krate":0,"index":8246},{"krate":0,"index":8249}],"decl_id":null,"docs":"# nalgebra","sig":null,"attributes":[{"value":"!\n# nalgebra\n\n**nalgebra** is a linear algebra library written for Rust targeting:\n\n* General-purpose linear algebra (still lacks a lot of features…)\n* Real-time computer graphics.\n* Real-time computer physics.\n\n## Using **nalgebra**\nYou will need the last stable build of the [rust compiler](https://www.rust-lang.org)\nand the official package manager: [cargo](https://github.com/rust-lang/cargo).\n\nSimply add the following to your `Cargo.toml` file:\n\n```.ignore\n[dependencies]\nnalgebra = \"0.18\"\n```\n\n\nMost useful functionalities of **nalgebra** are grouped in the root module `nalgebra::`.\n\nHowever, the recommended way to use **nalgebra** is to import types and traits\nexplicitly, and call free-functions using the `na::` prefix:\n\n```.rust\n#[macro_use]\nextern crate approx; // For the macro relative_eq!\nextern crate nalgebra as na;\nuse na::{Vector3, Rotation3};\n\nfn main() {\n    let axis  = Vector3::x_axis();\n    let angle = 1.57;\n    let b     = Rotation3::from_axis_angle(&axis, angle);\n\n    relative_eq!(b.axis().unwrap(), axis);\n    relative_eq!(b.angle(), angle);\n}\n```\n\n\n## Features\n**nalgebra** is meant to be a general-purpose, low-dimensional, linear algebra library, with\nan optimized set of tools for computer graphics and physics. Those features include:\n\n* A single parametrizable type `Matrix` for vectors, (square or rectangular) matrices, and slices\n  with dimensions known either at compile-time (using type-level integers) or at runtime.\n* Matrices and vectors with compile-time sizes are statically allocated while dynamic ones are\n  allocated on the heap.\n* Convenient aliases for low-dimensional matrices and vectors: `Vector1` to `Vector6` and\n  `Matrix1x1` to `Matrix6x6`, including rectangular matrices like `Matrix2x5`.\n* Points sizes known at compile time, and convenience aliases: `Point1` to `Point6`.\n* Translation (seen as a transformation that composes by multiplication): `Translation2`,\n  `Translation3`.\n* Rotation matrices: `Rotation2`, `Rotation3`.\n* Quaternions: `Quaternion`, `UnitQuaternion` (for 3D rotation).\n* Unit complex numbers can be used for 2D rotation: `UnitComplex`.\n* Algebraic entities with a norm equal to one: `Unit<T>`, e.g., `Unit<Vector3<f32>>`.\n* Isometries (translation ⨯ rotation): `Isometry2`, `Isometry3`\n* Similarity transformations (translation ⨯ rotation ⨯ uniform scale): `Similarity2`, `Similarity3`.\n* Affine transformations stored as a homogeneous matrix: `Affine2`, `Affine3`.\n* Projective (i.e. invertible) transformations stored as a homogeneous matrix: `Projective2`,\n  `Projective3`.\n* General transformations that does not have to be invertible, stored as a homogeneous matrix:\n  `Transform2`, `Transform3`.\n* 3D projections for computer graphics: `Perspective3`, `Orthographic3`.\n* Matrix factorizations: `Cholesky`, `QR`, `LU`, `FullPivLU`, `SVD`, `Schur`, `Hessenberg`, `SymmetricEigen`.\n* Insertion and removal of rows of columns of a matrix.\n*/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":0,"byte_end":2939,"line_start":1,"line_end":71,"column_start":1,"column_end":3}},{"value":"deny(non_camel_case_types)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":2990,"byte_end":3020,"line_start":77,"line_end":77,"column_start":1,"column_end":31}},{"value":"deny(unused_parens)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":3021,"byte_end":3044,"line_start":78,"line_end":78,"column_start":1,"column_end":24}},{"value":"deny(non_upper_case_globals)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":3045,"byte_end":3077,"line_start":79,"line_end":79,"column_start":1,"column_end":33}},{"value":"deny(unused_qualifications)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":3078,"byte_end":3109,"line_start":80,"line_end":80,"column_start":1,"column_end":32}},{"value":"deny(unused_results)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":3110,"byte_end":3134,"line_start":81,"line_end":81,"column_start":1,"column_end":25}},{"value":"deny(missing_docs)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":3135,"byte_end":3157,"line_start":82,"line_end":82,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":7},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"base","qualname":"::base","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/mod.rs","parent":null,"children":[{"krate":0,"index":8},{"krate":0,"index":62},{"krate":0,"index":316},{"krate":0,"index":360},{"krate":0,"index":380},{"krate":0,"index":463},{"krate":0,"index":584},{"krate":0,"index":715},{"krate":0,"index":1005},{"krate":0,"index":1073},{"krate":0,"index":1204},{"krate":0,"index":1815},{"krate":0,"index":1924},{"krate":0,"index":2023},{"krate":0,"index":2074},{"krate":0,"index":2200},{"krate":0,"index":2248},{"krate":0,"index":2481},{"krate":0,"index":2637},{"krate":0,"index":2788},{"krate":0,"index":3229},{"krate":0,"index":3255},{"krate":0,"index":3412},{"krate":0,"index":3571},{"krate":0,"index":3611},{"krate":0,"index":3622},{"krate":0,"index":3684},{"krate":0,"index":3697},{"krate":0,"index":3771},{"krate":0,"index":3877},{"krate":0,"index":3888},{"krate":0,"index":3889},{"krate":0,"index":3890},{"krate":0,"index":3891},{"krate":0,"index":3892},{"krate":0,"index":3893},{"krate":0,"index":3894},{"krate":0,"index":3895},{"krate":0,"index":3896},{"krate":0,"index":3897},{"krate":0,"index":3898}],"decl_id":null,"docs":" [Reexported at the root of this crate.] Data structures for vector and matrix computations.\n","sig":null,"attributes":[{"value":"! [Reexported at the root of this crate.] Data structures for vector and matrix computations.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/mod.rs","byte_start":14756,"byte_end":14851,"line_start":1,"line_end":1,"column_start":1,"column_end":96}}]},{"kind":"Mod","id":{"krate":0,"index":8},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/allocator.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"allocator","qualname":"::base::allocator","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/allocator.rs","parent":null,"children":[{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":29},{"krate":0,"index":36},{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":48},{"krate":0,"index":54},{"krate":0,"index":58}],"decl_id":null,"docs":" Abstract definition of a matrix data storage allocator.\n","sig":null,"attributes":[{"value":"! Abstract definition of a matrix data storage allocator.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/allocator.rs","byte_start":15796,"byte_end":15855,"line_start":1,"line_end":1,"column_start":1,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":21},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/allocator.rs","byte_start":16526,"byte_end":16535,"line_start":19,"line_end":19,"column_start":11,"column_end":20},"name":"Allocator","qualname":"::base::allocator::Allocator","value":"Allocator<N: Scalar, R: Dim, C: Dim = U1>: Any + Sized","parent":null,"children":[{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27}],"decl_id":null,"docs":" A matrix allocator of a memory buffer that may contain `R::to_usize() * C::to_usize()`\n elements of type `N`.","sig":null,"attributes":[{"value":"/ A matrix allocator of a memory buffer that may contain `R::to_usize() * C::to_usize()`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/allocator.rs","byte_start":16097,"byte_end":16187,"line_start":10,"line_end":10,"column_start":1,"column_end":91}},{"value":"/ elements of type `N`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/allocator.rs","byte_start":16188,"byte_end":16213,"line_start":11,"line_end":11,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/allocator.rs","byte_start":16214,"byte_end":16217,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ An allocator is said to be:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/allocator.rs","byte_start":16218,"byte_end":16249,"line_start":13,"line_end":13,"column_start":1,"column_end":32}},{"value":"/   − static:  if `R` and `C` both implement `DimName`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/allocator.rs","byte_start":16250,"byte_end":16309,"line_start":14,"line_end":14,"column_start":1,"column_end":58}},{"value":"/   − dynamic: if either one (or both) of `R` or `C` is equal to `Dynamic`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/allocator.rs","byte_start":16310,"byte_end":16389,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/allocator.rs","byte_start":16390,"byte_end":16393,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Every allocator must be both static and dynamic. Though not all implementations may share the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/allocator.rs","byte_start":16394,"byte_end":16491,"line_start":17,"line_end":17,"column_start":1,"column_end":98}},{"value":"/ same `Buffer` type.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/allocator.rs","byte_start":16492,"byte_end":16515,"line_start":18,"line_end":18,"column_start":1,"column_end":24}}]},{"kind":"Type","id":{"krate":0,"index":25},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/allocator.rs","byte_start":16651,"byte_end":16657,"line_start":21,"line_end":21,"column_start":10,"column_end":16},"name":"Buffer","qualname":"::base::allocator::Allocator::Buffer","value":"type Buffer: ContiguousStorageMut<N, R, C> + Clone;","parent":{"krate":0,"index":21},"children":[],"decl_id":null,"docs":" The type of buffer this allocator can instanciate.\n","sig":null,"attributes":[{"value":"/ The type of buffer this allocator can instanciate.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/allocator.rs","byte_start":16587,"byte_end":16641,"line_start":20,"line_end":20,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/allocator.rs","byte_start":16816,"byte_end":16838,"line_start":24,"line_end":24,"column_start":15,"column_end":37},"name":"allocate_uninitialized","qualname":"::base::allocator::Allocator::allocate_uninitialized","value":"fn (nrows: R, ncols: C) -> Self::Buffer","parent":{"krate":0,"index":21},"children":[],"decl_id":null,"docs":" Allocates a buffer with the given number of rows and columns without initializing its content.\n","sig":null,"attributes":[{"value":"/ Allocates a buffer with the given number of rows and columns without initializing its content.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/allocator.rs","byte_start":16703,"byte_end":16801,"line_start":23,"line_end":23,"column_start":5,"column_end":103}}]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/allocator.rs","byte_start":16963,"byte_end":16985,"line_start":27,"line_end":27,"column_start":8,"column_end":30},"name":"allocate_from_iterator","qualname":"::base::allocator::Allocator::allocate_from_iterator","value":"fn <I> (nrows: R, ncols: C, iter: I) -> Self::Buffer","parent":{"krate":0,"index":21},"children":[],"decl_id":null,"docs":" Allocates a buffer initialized with the content of the given iterator.\n","sig":null,"attributes":[{"value":"/ Allocates a buffer initialized with the content of the given iterator.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/allocator.rs","byte_start":16881,"byte_end":16955,"line_start":26,"line_end":26,"column_start":5,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":29},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/allocator.rs","byte_start":17261,"byte_end":17272,"line_start":36,"line_end":36,"column_start":11,"column_end":22},"name":"Reallocator","qualname":"::base::allocator::Reallocator","value":"Reallocator<N: Scalar, RFrom: Dim, CFrom: Dim, RTo: Dim, CTo: Dim>: Allocator<N, RFrom, CFrom> + Allocator<N, RTo, CTo>","parent":null,"children":[{"krate":0,"index":35}],"decl_id":null,"docs":" A matrix reallocator. Changes the size of the memory buffer that initially contains (RFrom ×\n CFrom) elements to a smaller or larger size (RTo, CTo).\n","sig":null,"attributes":[{"value":"/ A matrix reallocator. Changes the size of the memory buffer that initially contains (RFrom ×","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/allocator.rs","byte_start":17093,"byte_end":17190,"line_start":34,"line_end":34,"column_start":1,"column_end":97}},{"value":"/ CFrom) elements to a smaller or larger size (RTo, CTo).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/allocator.rs","byte_start":17191,"byte_end":17250,"line_start":35,"line_end":35,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/allocator.rs","byte_start":17882,"byte_end":17897,"line_start":46,"line_end":46,"column_start":15,"column_end":30},"name":"reallocate_copy","qualname":"::base::allocator::Reallocator::reallocate_copy","value":"fn (nrows: RTo, ncols: CTo, buf: <Self as Allocator<N, RFrom, CFrom>>::Buffer) -> <Self as Allocator<N, RTo, CTo>>::Buffer","parent":{"krate":0,"index":29},"children":[],"decl_id":null,"docs":" Reallocates a buffer of shape `(RTo, CTo)`, possibly reusing a previously allocated buffer\n `buf`. Data stored by `buf` are linearly copied to the output:","sig":null,"attributes":[{"value":"/ Reallocates a buffer of shape `(RTo, CTo)`, possibly reusing a previously allocated buffer","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/allocator.rs","byte_start":17391,"byte_end":17485,"line_start":39,"line_end":39,"column_start":5,"column_end":99}},{"value":"/ `buf`. Data stored by `buf` are linearly copied to the output:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/allocator.rs","byte_start":17490,"byte_end":17556,"line_start":40,"line_end":40,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/allocator.rs","byte_start":17561,"byte_end":17564,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ * The copy is performed as if both were just arrays (without a matrix structure).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/allocator.rs","byte_start":17569,"byte_end":17654,"line_start":42,"line_end":42,"column_start":5,"column_end":90}},{"value":"/ * If `buf` is larger than the output size, then extra elements of `buf` are truncated.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/allocator.rs","byte_start":17659,"byte_end":17749,"line_start":43,"line_end":43,"column_start":5,"column_end":95}},{"value":"/ * If `buf` is smaller than the output size, then extra elements of the output are left","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/allocator.rs","byte_start":17754,"byte_end":17844,"line_start":44,"line_end":44,"column_start":5,"column_end":95}},{"value":"/ uninitialized.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/allocator.rs","byte_start":17849,"byte_end":17867,"line_start":45,"line_end":45,"column_start":5,"column_end":23}}]},{"kind":"Type","id":{"krate":0,"index":36},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/allocator.rs","byte_start":18144,"byte_end":18154,"line_start":54,"line_end":54,"column_start":10,"column_end":20},"name":"SameShapeR","qualname":"::base::allocator::SameShapeR","value":"<ShapeConstraint as SameNumberOfRows<R1, R2>>::Representative","parent":null,"children":[],"decl_id":null,"docs":" The number of rows of the result of a componentwise operation on two matrices.\n","sig":null,"attributes":[{"value":"/ The number of rows of the result of a componentwise operation on two matrices.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/allocator.rs","byte_start":18052,"byte_end":18134,"line_start":53,"line_end":53,"column_start":1,"column_end":83}}]},{"kind":"Type","id":{"krate":0,"index":39},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/allocator.rs","byte_start":18324,"byte_end":18334,"line_start":57,"line_end":57,"column_start":10,"column_end":20},"name":"SameShapeC","qualname":"::base::allocator::SameShapeC","value":"<ShapeConstraint as SameNumberOfColumns<C1, C2>>::Representative","parent":null,"children":[],"decl_id":null,"docs":" The number of columns of the result of a componentwise operation on two matrices.\n","sig":null,"attributes":[{"value":"/ The number of columns of the result of a componentwise operation on two matrices.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/allocator.rs","byte_start":18229,"byte_end":18314,"line_start":56,"line_end":56,"column_start":1,"column_end":86}}]},{"kind":"Trait","id":{"krate":0,"index":42},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/allocator.rs","byte_start":18522,"byte_end":18540,"line_start":61,"line_end":61,"column_start":11,"column_end":29},"name":"SameShapeAllocator","qualname":"::base::allocator::SameShapeAllocator","value":"SameShapeAllocator<N, R1, C1, R2, C2>: Allocator<N, R1, C1> + Allocator<N, SameShapeR<R1, R2>, SameShapeC<C1, C2>>","parent":null,"children":[],"decl_id":null,"docs":" Restricts the given number of rows and columns to be respectively the same.\n","sig":null,"attributes":[{"value":"/ Restricts the given number of rows and columns to be respectively the same.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/allocator.rs","byte_start":18432,"byte_end":18511,"line_start":60,"line_end":60,"column_start":1,"column_end":80}}]},{"kind":"Trait","id":{"krate":0,"index":54},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/allocator.rs","byte_start":19213,"byte_end":19237,"line_start":87,"line_end":87,"column_start":11,"column_end":35},"name":"SameShapeVectorAllocator","qualname":"::base::allocator::SameShapeVectorAllocator","value":"SameShapeVectorAllocator<N, R1, R2>: Allocator<N, R1> + Allocator<N, SameShapeR<R1, R2>> +\nSameShapeAllocator<N, R1, U1, R2, U1>","parent":null,"children":[],"decl_id":null,"docs":" Restricts the given number of rows to be equal.\n","sig":null,"attributes":[{"value":"/ Restricts the given number of rows to be equal.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/allocator.rs","byte_start":19151,"byte_end":19202,"line_start":86,"line_end":86,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":20886,"byte_end":20892,"line_start":34,"line_end":34,"column_start":12,"column_end":18},"name":"icamax","qualname":"<Vector<N, D, S>>::icamax","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes the index of the vector component with the largest complex or real absolute value.","sig":null,"attributes":[{"value":"/ Computes the index of the vector component with the largest complex or real absolute value.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":20422,"byte_end":20517,"line_start":21,"line_end":21,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":20522,"byte_end":20525,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":20530,"byte_end":20545,"line_start":23,"line_end":23,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":20550,"byte_end":20553,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":20558,"byte_end":20565,"line_start":25,"line_end":25,"column_start":5,"column_end":12}},{"value":"/ # extern crate num_complex;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":20570,"byte_end":20601,"line_start":26,"line_end":26,"column_start":5,"column_end":36}},{"value":"/ # extern crate nalgebra;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":20606,"byte_end":20634,"line_start":27,"line_end":27,"column_start":5,"column_end":33}},{"value":"/ # use num_complex::Complex;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":20639,"byte_end":20670,"line_start":28,"line_end":28,"column_start":5,"column_end":36}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":20675,"byte_end":20703,"line_start":29,"line_end":29,"column_start":5,"column_end":33}},{"value":"/ let vec = Vector3::new(Complex::new(11.0, 3.0), Complex::new(-15.0, 0.0), Complex::new(13.0, 5.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":20708,"byte_end":20811,"line_start":30,"line_end":30,"column_start":5,"column_end":108}},{"value":"/ assert_eq!(vec.icamax(), 2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":20816,"byte_end":20848,"line_start":31,"line_end":31,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":20853,"byte_end":20860,"line_start":32,"line_end":32,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":20865,"byte_end":20874,"line_start":33,"line_end":33,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":21685,"byte_end":21691,"line_start":64,"line_end":64,"column_start":12,"column_end":18},"name":"argmax","qualname":"<Vector<N, D, S>>::argmax","value":"fn (&self) -> (usize, N)","parent":null,"children":[],"decl_id":null,"docs":" Computes the index and value of the vector component with the largest value.","sig":null,"attributes":[{"value":"/ Computes the index and value of the vector component with the largest value.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":21398,"byte_end":21478,"line_start":54,"line_end":54,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":21483,"byte_end":21486,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":21491,"byte_end":21506,"line_start":56,"line_end":56,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":21511,"byte_end":21514,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":21519,"byte_end":21526,"line_start":58,"line_end":58,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":21531,"byte_end":21559,"line_start":59,"line_end":59,"column_start":5,"column_end":33}},{"value":"/ let vec = Vector3::new(11, -15, 13);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":21564,"byte_end":21604,"line_start":60,"line_end":60,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(vec.argmax(), (2, 13));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":21609,"byte_end":21647,"line_start":61,"line_end":61,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":21652,"byte_end":21659,"line_start":62,"line_end":62,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":21664,"byte_end":21673,"line_start":63,"line_end":63,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":22407,"byte_end":22411,"line_start":92,"line_end":92,"column_start":12,"column_end":16},"name":"imax","qualname":"<Vector<N, D, S>>::imax","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes the index of the vector component with the largest value.","sig":null,"attributes":[{"value":"/ Computes the index of the vector component with the largest value.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":22138,"byte_end":22208,"line_start":82,"line_end":82,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":22213,"byte_end":22216,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":22221,"byte_end":22236,"line_start":84,"line_end":84,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":22241,"byte_end":22244,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":22249,"byte_end":22256,"line_start":86,"line_end":86,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":22261,"byte_end":22289,"line_start":87,"line_end":87,"column_start":5,"column_end":33}},{"value":"/ let vec = Vector3::new(11, -15, 13);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":22294,"byte_end":22334,"line_start":88,"line_end":88,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(vec.imax(), 2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":22339,"byte_end":22369,"line_start":89,"line_end":89,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":22374,"byte_end":22381,"line_start":90,"line_end":90,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":22386,"byte_end":22395,"line_start":91,"line_end":91,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":22744,"byte_end":22749,"line_start":106,"line_end":106,"column_start":12,"column_end":17},"name":"iamax","qualname":"<Vector<N, D, S>>::iamax","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes the index of the vector component with the largest absolute value.","sig":null,"attributes":[{"value":"/ Computes the index of the vector component with the largest absolute value.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":22465,"byte_end":22544,"line_start":96,"line_end":96,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":22549,"byte_end":22552,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":22557,"byte_end":22572,"line_start":98,"line_end":98,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":22577,"byte_end":22580,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":22585,"byte_end":22592,"line_start":100,"line_end":100,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":22597,"byte_end":22625,"line_start":101,"line_end":101,"column_start":5,"column_end":33}},{"value":"/ let vec = Vector3::new(11, -15, 13);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":22630,"byte_end":22670,"line_start":102,"line_end":102,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(vec.iamax(), 1);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":22675,"byte_end":22706,"line_start":103,"line_end":103,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":22711,"byte_end":22718,"line_start":104,"line_end":104,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":22723,"byte_end":22732,"line_start":105,"line_end":105,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":23498,"byte_end":23504,"line_start":137,"line_end":137,"column_start":12,"column_end":18},"name":"argmin","qualname":"<Vector<N, D, S>>::argmin","value":"fn (&self) -> (usize, N)","parent":null,"children":[],"decl_id":null,"docs":" Computes the index and value of the vector component with the smallest value.","sig":null,"attributes":[{"value":"/ Computes the index and value of the vector component with the smallest value.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":23209,"byte_end":23290,"line_start":127,"line_end":127,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":23295,"byte_end":23298,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":23303,"byte_end":23318,"line_start":129,"line_end":129,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":23323,"byte_end":23326,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":23331,"byte_end":23338,"line_start":131,"line_end":131,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":23343,"byte_end":23371,"line_start":132,"line_end":132,"column_start":5,"column_end":33}},{"value":"/ let vec = Vector3::new(11, -15, 13);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":23376,"byte_end":23416,"line_start":133,"line_end":133,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(vec.argmin(), (1, -15));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":23421,"byte_end":23460,"line_start":134,"line_end":134,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":23465,"byte_end":23472,"line_start":135,"line_end":135,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":23477,"byte_end":23486,"line_start":136,"line_end":136,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":24221,"byte_end":24225,"line_start":165,"line_end":165,"column_start":12,"column_end":16},"name":"imin","qualname":"<Vector<N, D, S>>::imin","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes the index of the vector component with the smallest value.","sig":null,"attributes":[{"value":"/ Computes the index of the vector component with the smallest value.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":23951,"byte_end":24022,"line_start":155,"line_end":155,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":24027,"byte_end":24030,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":24035,"byte_end":24050,"line_start":157,"line_end":157,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":24055,"byte_end":24058,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":24063,"byte_end":24070,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":24075,"byte_end":24103,"line_start":160,"line_end":160,"column_start":5,"column_end":33}},{"value":"/ let vec = Vector3::new(11, -15, 13);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":24108,"byte_end":24148,"line_start":161,"line_end":161,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(vec.imin(), 1);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":24153,"byte_end":24183,"line_start":162,"line_end":162,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":24188,"byte_end":24195,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":24200,"byte_end":24209,"line_start":164,"line_end":164,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":24559,"byte_end":24564,"line_start":179,"line_end":179,"column_start":12,"column_end":17},"name":"iamin","qualname":"<Vector<N, D, S>>::iamin","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes the index of the vector component with the smallest absolute value.","sig":null,"attributes":[{"value":"/ Computes the index of the vector component with the smallest absolute value.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":24279,"byte_end":24359,"line_start":169,"line_end":169,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":24364,"byte_end":24367,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":24372,"byte_end":24387,"line_start":171,"line_end":171,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":24392,"byte_end":24395,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":24400,"byte_end":24407,"line_start":173,"line_end":173,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":24412,"byte_end":24440,"line_start":174,"line_end":174,"column_start":5,"column_end":33}},{"value":"/ let vec = Vector3::new(11, -15, 13);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":24445,"byte_end":24485,"line_start":175,"line_end":175,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(vec.iamin(), 0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":24490,"byte_end":24521,"line_start":176,"line_end":176,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":24526,"byte_end":24533,"line_start":177,"line_end":177,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":24538,"byte_end":24547,"line_start":178,"line_end":178,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":25758,"byte_end":25769,"line_start":217,"line_end":217,"column_start":12,"column_end":23},"name":"icamax_full","qualname":"<Matrix<N, R, C, S>>::icamax_full","value":"fn (&self) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Computes the index of the matrix component with the largest absolute value.","sig":null,"attributes":[{"value":"/ Computes the index of the matrix component with the largest absolute value.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":25186,"byte_end":25265,"line_start":203,"line_end":203,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":25270,"byte_end":25273,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":25278,"byte_end":25293,"line_start":205,"line_end":205,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":25298,"byte_end":25301,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":25306,"byte_end":25313,"line_start":207,"line_end":207,"column_start":5,"column_end":12}},{"value":"/ # extern crate num_complex;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":25318,"byte_end":25349,"line_start":208,"line_end":208,"column_start":5,"column_end":36}},{"value":"/ # extern crate nalgebra;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":25354,"byte_end":25382,"line_start":209,"line_end":209,"column_start":5,"column_end":33}},{"value":"/ # use num_complex::Complex;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":25387,"byte_end":25418,"line_start":210,"line_end":210,"column_start":5,"column_end":36}},{"value":"/ # use nalgebra::Matrix2x3;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":25423,"byte_end":25453,"line_start":211,"line_end":211,"column_start":5,"column_end":35}},{"value":"/ let mat = Matrix2x3::new(Complex::new(11.0, 1.0), Complex::new(-12.0, 2.0), Complex::new(13.0, 3.0),","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":25458,"byte_end":25562,"line_start":212,"line_end":212,"column_start":5,"column_end":109}},{"value":"/                          Complex::new(21.0, 43.0), Complex::new(22.0, 5.0), Complex::new(-23.0, 0.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":25567,"byte_end":25673,"line_start":213,"line_end":213,"column_start":5,"column_end":111}},{"value":"/ assert_eq!(mat.icamax_full(), (1, 0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":25678,"byte_end":25720,"line_start":214,"line_end":214,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":25725,"byte_end":25732,"line_start":215,"line_end":215,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":25737,"byte_end":25746,"line_start":216,"line_end":216,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":26740,"byte_end":26750,"line_start":250,"line_end":250,"column_start":12,"column_end":22},"name":"iamax_full","qualname":"<Matrix<N, R, C, S>>::iamax_full","value":"fn (&self) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Computes the index of the matrix component with the largest absolute value.","sig":null,"attributes":[{"value":"/ Computes the index of the matrix component with the largest absolute value.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":26401,"byte_end":26480,"line_start":239,"line_end":239,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":26485,"byte_end":26488,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":26493,"byte_end":26508,"line_start":241,"line_end":241,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":26513,"byte_end":26516,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":26521,"byte_end":26528,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix2x3;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":26533,"byte_end":26563,"line_start":244,"line_end":244,"column_start":5,"column_end":35}},{"value":"/ let mat = Matrix2x3::new(11, -12, 13,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":26568,"byte_end":26609,"line_start":245,"line_end":245,"column_start":5,"column_end":46}},{"value":"/                          21, 22, -23);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":26614,"byte_end":26656,"line_start":246,"line_end":246,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(mat.iamax_full(), (1, 2));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":26661,"byte_end":26702,"line_start":247,"line_end":247,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":26707,"byte_end":26714,"line_start":248,"line_end":248,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":26719,"byte_end":26728,"line_start":249,"line_end":249,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":33850,"byte_end":33853,"line_start":440,"line_end":440,"column_start":12,"column_end":15},"name":"dot","qualname":"<Matrix<N, R, C, S>>::dot","value":"fn <R2, C2, SB> (&self, rhs: &Matrix<N, R2, C2, SB>) -> N","parent":null,"children":[],"decl_id":null,"docs":" The dot product between two vectors or matrices (seen as vectors).","sig":null,"attributes":[{"value":"/ The dot product between two vectors or matrices (seen as vectors).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":32942,"byte_end":33012,"line_start":416,"line_end":416,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":33017,"byte_end":33020,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ This is equal to `self.transpose() * rhs`. For the sesquilinear complex dot product, use","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":33025,"byte_end":33117,"line_start":418,"line_end":418,"column_start":5,"column_end":97}},{"value":"/ `self.dotc(rhs)`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":33122,"byte_end":33143,"line_start":419,"line_end":419,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":33148,"byte_end":33151,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ Note that this is **not** the matrix multiplication as in, e.g., numpy. For matrix","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":33156,"byte_end":33242,"line_start":421,"line_end":421,"column_start":5,"column_end":91}},{"value":"/ multiplication, use one of: `.gemm`, `.mul_to`, `.mul`, the `*` operator.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":33247,"byte_end":33324,"line_start":422,"line_end":422,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":33329,"byte_end":33332,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":33337,"byte_end":33352,"line_start":424,"line_end":424,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":33357,"byte_end":33360,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":33365,"byte_end":33372,"line_start":426,"line_end":426,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Vector3, Matrix2x3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":33377,"byte_end":33418,"line_start":427,"line_end":427,"column_start":5,"column_end":46}},{"value":"/ let vec1 = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":33423,"byte_end":33466,"line_start":428,"line_end":428,"column_start":5,"column_end":48}},{"value":"/ let vec2 = Vector3::new(0.1, 0.2, 0.3);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":33471,"byte_end":33514,"line_start":429,"line_end":429,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(vec1.dot(&vec2), 1.4);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":33519,"byte_end":33556,"line_start":430,"line_end":430,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":33561,"byte_end":33564,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ let mat1 = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":33569,"byte_end":33613,"line_start":432,"line_end":432,"column_start":5,"column_end":49}},{"value":"/                           4.0, 5.0, 6.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":33618,"byte_end":33663,"line_start":433,"line_end":433,"column_start":5,"column_end":50}},{"value":"/ let mat2 = Matrix2x3::new(0.1, 0.2, 0.3,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":33668,"byte_end":33712,"line_start":434,"line_end":434,"column_start":5,"column_end":49}},{"value":"/                           0.4, 0.5, 0.6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":33717,"byte_end":33762,"line_start":435,"line_end":435,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(mat1.dot(&mat2), 9.1);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":33767,"byte_end":33804,"line_start":436,"line_end":436,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":33809,"byte_end":33816,"line_start":437,"line_end":437,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":33821,"byte_end":33824,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":33829,"byte_end":33838,"line_start":439,"line_end":439,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":34968,"byte_end":34972,"line_start":468,"line_end":468,"column_start":12,"column_end":16},"name":"dotc","qualname":"<Matrix<N, R, C, S>>::dotc","value":"fn <R2, C2, SB> (&self, rhs: &Matrix<N, R2, C2, SB>) -> N","parent":null,"children":[],"decl_id":null,"docs":" The conjugate-linear dot product between two vectors or matrices (seen as vectors).","sig":null,"attributes":[{"value":"/ The conjugate-linear dot product between two vectors or matrices (seen as vectors).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":34060,"byte_end":34147,"line_start":448,"line_end":448,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":34152,"byte_end":34155,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ This is equal to `self.adjoint() * rhs`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":34160,"byte_end":34204,"line_start":450,"line_end":450,"column_start":5,"column_end":49}},{"value":"/ For real vectors, this is identical to `self.dot(&rhs)`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":34209,"byte_end":34269,"line_start":451,"line_end":451,"column_start":5,"column_end":65}},{"value":"/ Note that this is **not** the matrix multiplication as in, e.g., numpy. For matrix","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":34274,"byte_end":34360,"line_start":452,"line_end":452,"column_start":5,"column_end":91}},{"value":"/ multiplication, use one of: `.gemm`, `.mul_to`, `.mul`, the `*` operator.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":34365,"byte_end":34442,"line_start":453,"line_end":453,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":34447,"byte_end":34450,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":34455,"byte_end":34470,"line_start":455,"line_end":455,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":34475,"byte_end":34478,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":34483,"byte_end":34490,"line_start":457,"line_end":457,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Vector2, Complex};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":34495,"byte_end":34534,"line_start":458,"line_end":458,"column_start":5,"column_end":44}},{"value":"/ let vec1 = Vector2::new(Complex::new(1.0, 2.0), Complex::new(3.0, 4.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":34539,"byte_end":34615,"line_start":459,"line_end":459,"column_start":5,"column_end":81}},{"value":"/ let vec2 = Vector2::new(Complex::new(0.4, 0.3), Complex::new(0.2, 0.1));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":34620,"byte_end":34696,"line_start":460,"line_end":460,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(vec1.dotc(&vec2), Complex::new(2.0, -1.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":34701,"byte_end":34759,"line_start":461,"line_end":461,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":34764,"byte_end":34767,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ // Note that for complex vectors, we generally have:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":34772,"byte_end":34828,"line_start":463,"line_end":463,"column_start":5,"column_end":61}},{"value":"/ // vec1.dotc(&vec2) != vec2.dot(&vec2)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":34833,"byte_end":34875,"line_start":464,"line_end":464,"column_start":5,"column_end":47}},{"value":"/ assert_ne!(vec1.dotc(&vec2), vec1.dot(&vec2));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":34880,"byte_end":34930,"line_start":465,"line_end":465,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":34935,"byte_end":34942,"line_start":466,"line_end":466,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":34947,"byte_end":34956,"line_start":467,"line_end":467,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":35866,"byte_end":35872,"line_start":495,"line_end":495,"column_start":12,"column_end":18},"name":"tr_dot","qualname":"<Matrix<N, R, C, S>>::tr_dot","value":"fn <R2, C2, SB> (&self, rhs: &Matrix<N, R2, C2, SB>) -> N","parent":null,"children":[],"decl_id":null,"docs":" The dot product between the transpose of `self` and `rhs`.","sig":null,"attributes":[{"value":"/ The dot product between the transpose of `self` and `rhs`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":35220,"byte_end":35282,"line_start":477,"line_end":477,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":35287,"byte_end":35290,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":35295,"byte_end":35310,"line_start":479,"line_end":479,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":35315,"byte_end":35318,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":35323,"byte_end":35330,"line_start":481,"line_end":481,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Vector3, RowVector3, Matrix2x3, Matrix3x2};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":35335,"byte_end":35399,"line_start":482,"line_end":482,"column_start":5,"column_end":69}},{"value":"/ let vec1 = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":35404,"byte_end":35447,"line_start":483,"line_end":483,"column_start":5,"column_end":48}},{"value":"/ let vec2 = RowVector3::new(0.1, 0.2, 0.3);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":35452,"byte_end":35498,"line_start":484,"line_end":484,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(vec1.tr_dot(&vec2), 1.4);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":35503,"byte_end":35543,"line_start":485,"line_end":485,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":35548,"byte_end":35551,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ let mat1 = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":35556,"byte_end":35600,"line_start":487,"line_end":487,"column_start":5,"column_end":49}},{"value":"/                           4.0, 5.0, 6.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":35605,"byte_end":35650,"line_start":488,"line_end":488,"column_start":5,"column_end":50}},{"value":"/ let mat2 = Matrix3x2::new(0.1, 0.4,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":35655,"byte_end":35694,"line_start":489,"line_end":489,"column_start":5,"column_end":44}},{"value":"/                           0.2, 0.5,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":35699,"byte_end":35738,"line_start":490,"line_end":490,"column_start":5,"column_end":44}},{"value":"/                           0.3, 0.6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":35743,"byte_end":35783,"line_start":491,"line_end":491,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(mat1.tr_dot(&mat2), 9.1);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":35788,"byte_end":35828,"line_start":492,"line_end":492,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":35833,"byte_end":35840,"line_start":493,"line_end":493,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":35845,"byte_end":35854,"line_start":494,"line_end":494,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":37968,"byte_end":37973,"line_start":577,"line_end":577,"column_start":12,"column_end":17},"name":"axcpy","qualname":"<Vector<N, D, S>>::axcpy","value":"fn <D2, SB> (&mut self, a: N, x: &Vector<N, D2, SB>, c: N, b: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = a * x * c + b * self`.","sig":null,"attributes":[{"value":"/ Computes `self = a * x * c + b * self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":37548,"byte_end":37591,"line_start":563,"line_end":563,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":37596,"byte_end":37599,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ If `b` is zero, `self` is never read from.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":37604,"byte_end":37650,"line_start":565,"line_end":565,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":37655,"byte_end":37658,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":37663,"byte_end":37678,"line_start":567,"line_end":567,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":37683,"byte_end":37686,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":37691,"byte_end":37698,"line_start":569,"line_end":569,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":37703,"byte_end":37731,"line_start":570,"line_end":570,"column_start":5,"column_end":33}},{"value":"/ let mut vec1 = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":37736,"byte_end":37783,"line_start":571,"line_end":571,"column_start":5,"column_end":52}},{"value":"/ let vec2 = Vector3::new(0.1, 0.2, 0.3);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":37788,"byte_end":37831,"line_start":572,"line_end":572,"column_start":5,"column_end":48}},{"value":"/ vec1.axcpy(5.0, &vec2, 2.0, 5.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":37836,"byte_end":37873,"line_start":573,"line_end":573,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(vec1, Vector3::new(6.0, 12.0, 18.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":37878,"byte_end":37930,"line_start":574,"line_end":574,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":37935,"byte_end":37942,"line_start":575,"line_end":575,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":37947,"byte_end":37956,"line_start":576,"line_end":576,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":38970,"byte_end":38974,"line_start":611,"line_end":611,"column_start":12,"column_end":16},"name":"axpy","qualname":"<Vector<N, D, S>>::axpy","value":"fn <D2, SB> (&mut self, a: N, x: &Vector<N, D2, SB>, b: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = a * x + b * self`.","sig":null,"attributes":[{"value":"/ Computes `self = a * x + b * self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":38559,"byte_end":38598,"line_start":597,"line_end":597,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":38603,"byte_end":38606,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ If `b` is zero, `self` is never read from.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":38611,"byte_end":38657,"line_start":599,"line_end":599,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":38662,"byte_end":38665,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":38670,"byte_end":38685,"line_start":601,"line_end":601,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":38690,"byte_end":38693,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":38698,"byte_end":38705,"line_start":603,"line_end":603,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":38710,"byte_end":38738,"line_start":604,"line_end":604,"column_start":5,"column_end":33}},{"value":"/ let mut vec1 = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":38743,"byte_end":38790,"line_start":605,"line_end":605,"column_start":5,"column_end":52}},{"value":"/ let vec2 = Vector3::new(0.1, 0.2, 0.3);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":38795,"byte_end":38838,"line_start":606,"line_end":606,"column_start":5,"column_end":48}},{"value":"/ vec1.axpy(10.0, &vec2, 5.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":38843,"byte_end":38875,"line_start":607,"line_end":607,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(vec1, Vector3::new(6.0, 12.0, 18.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":38880,"byte_end":38932,"line_start":608,"line_end":608,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":38937,"byte_end":38944,"line_start":609,"line_end":609,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":38949,"byte_end":38958,"line_start":610,"line_end":610,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":39843,"byte_end":39847,"line_start":638,"line_end":638,"column_start":12,"column_end":16},"name":"gemv","qualname":"<Vector<N, D, S>>::gemv","value":"fn <R2, C2, D3, SB, SC> (&mut self, alpha: N, a: &Matrix<N, R2, C2, SB>, x: &Vector<N, D3, SC>, beta: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * a * x + beta * self`, where `a` is a matrix, `x` a vector, and\n `alpha, beta` two scalars.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * a * x + beta * self`, where `a` is a matrix, `x` a vector, and","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":39262,"byte_end":39353,"line_start":621,"line_end":621,"column_start":5,"column_end":96}},{"value":"/ `alpha, beta` two scalars.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":39358,"byte_end":39388,"line_start":622,"line_end":622,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":39393,"byte_end":39396,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ If `beta` is zero, `self` is never read.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":39401,"byte_end":39445,"line_start":624,"line_end":624,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":39450,"byte_end":39453,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":39458,"byte_end":39473,"line_start":626,"line_end":626,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":39478,"byte_end":39481,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":39486,"byte_end":39493,"line_start":628,"line_end":628,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2, Vector2};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":39498,"byte_end":39537,"line_start":629,"line_end":629,"column_start":5,"column_end":44}},{"value":"/ let mut vec1 = Vector2::new(1.0, 2.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":39542,"byte_end":39584,"line_start":630,"line_end":630,"column_start":5,"column_end":47}},{"value":"/ let vec2 = Vector2::new(0.1, 0.2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":39589,"byte_end":39627,"line_start":631,"line_end":631,"column_start":5,"column_end":43}},{"value":"/ let mat = Matrix2::new(1.0, 2.0,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":39632,"byte_end":39668,"line_start":632,"line_end":632,"column_start":5,"column_end":41}},{"value":"/                        3.0, 4.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":39673,"byte_end":39710,"line_start":633,"line_end":633,"column_start":5,"column_end":42}},{"value":"/ vec1.gemv(10.0, &mat, &vec2, 5.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":39715,"byte_end":39753,"line_start":634,"line_end":634,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(vec1, Vector2::new(10.0, 21.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":39758,"byte_end":39805,"line_start":635,"line_end":635,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":39810,"byte_end":39817,"line_start":636,"line_end":636,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":39822,"byte_end":39831,"line_start":637,"line_end":637,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":43171,"byte_end":43180,"line_start":745,"line_end":745,"column_start":12,"column_end":21},"name":"gemv_symm","qualname":"<Vector<N, D, S>>::gemv_symm","value":"fn <D2, D3, SB, SC> (&mut self, alpha: N, a: &SquareMatrix<N, D2, SB>, x: &Vector<N, D3, SC>, beta: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * a * x + beta * self`, where `a` is a **symmetric** matrix, `x` a\n vector, and `alpha, beta` two scalars. DEPRECATED: use `sygemv` instead.\n","sig":null,"attributes":[{"value":"/ Computes `self = alpha * a * x + beta * self`, where `a` is a **symmetric** matrix, `x` a","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":42878,"byte_end":42971,"line_start":741,"line_end":741,"column_start":5,"column_end":98}},{"value":"/ vector, and `alpha, beta` two scalars. DEPRECATED: use `sygemv` instead.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":42976,"byte_end":43052,"line_start":742,"line_end":742,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":43057,"byte_end":43066,"line_start":743,"line_end":743,"column_start":5,"column_end":14}},{"value":"deprecated(note =\n             \"This is renamed `sygemv` to match the original BLAS terminology.\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":43071,"byte_end":43159,"line_start":744,"line_end":744,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":44769,"byte_end":44775,"line_start":789,"line_end":789,"column_start":12,"column_end":18},"name":"sygemv","qualname":"<Vector<N, D, S>>::sygemv","value":"fn <D2, D3, SB, SC> (&mut self, alpha: N, a: &SquareMatrix<N, D2, SB>, x: &Vector<N, D3, SC>, beta: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * a * x + beta * self`, where `a` is a **symmetric** matrix, `x` a\n vector, and `alpha, beta` two scalars.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * a * x + beta * self`, where `a` is a **symmetric** matrix, `x` a","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":43547,"byte_end":43640,"line_start":760,"line_end":760,"column_start":5,"column_end":98}},{"value":"/ vector, and `alpha, beta` two scalars.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":43645,"byte_end":43687,"line_start":761,"line_end":761,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":43692,"byte_end":43695,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ For hermitian matrices, use `.hegemv` instead.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":43700,"byte_end":43750,"line_start":763,"line_end":763,"column_start":5,"column_end":55}},{"value":"/ If `beta` is zero, `self` is never read. If `self` is read, only its lower-triangular part","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":43755,"byte_end":43849,"line_start":764,"line_end":764,"column_start":5,"column_end":99}},{"value":"/ (including the diagonal) is actually read.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":43854,"byte_end":43900,"line_start":765,"line_end":765,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":43905,"byte_end":43908,"line_start":766,"line_end":766,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":43913,"byte_end":43928,"line_start":767,"line_end":767,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":43933,"byte_end":43936,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":43941,"byte_end":43948,"line_start":769,"line_end":769,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2, Vector2};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":43953,"byte_end":43992,"line_start":770,"line_end":770,"column_start":5,"column_end":44}},{"value":"/ let mat = Matrix2::new(1.0, 2.0,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":43997,"byte_end":44033,"line_start":771,"line_end":771,"column_start":5,"column_end":41}},{"value":"/                        2.0, 4.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":44038,"byte_end":44075,"line_start":772,"line_end":772,"column_start":5,"column_end":42}},{"value":"/ let mut vec1 = Vector2::new(1.0, 2.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":44080,"byte_end":44122,"line_start":773,"line_end":773,"column_start":5,"column_end":47}},{"value":"/ let vec2 = Vector2::new(0.1, 0.2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":44127,"byte_end":44165,"line_start":774,"line_end":774,"column_start":5,"column_end":43}},{"value":"/ vec1.sygemv(10.0, &mat, &vec2, 5.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":44170,"byte_end":44210,"line_start":775,"line_end":775,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(vec1, Vector2::new(10.0, 20.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":44215,"byte_end":44262,"line_start":776,"line_end":776,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":44267,"byte_end":44270,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":44275,"byte_end":44278,"line_start":778,"line_end":778,"column_start":5,"column_end":8}},{"value":"/ // The matrix upper-triangular elements can be garbage because it is never","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":44283,"byte_end":44361,"line_start":779,"line_end":779,"column_start":5,"column_end":83}},{"value":"/ // read by this method. Therefore, it is not necessary for the caller to","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":44366,"byte_end":44442,"line_start":780,"line_end":780,"column_start":5,"column_end":81}},{"value":"/ // fill the matrix struct upper-triangle.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":44447,"byte_end":44492,"line_start":781,"line_end":781,"column_start":5,"column_end":50}},{"value":"/ let mat = Matrix2::new(1.0, 9999999.9999999,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":44497,"byte_end":44545,"line_start":782,"line_end":782,"column_start":5,"column_end":53}},{"value":"/                        2.0, 4.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":44550,"byte_end":44587,"line_start":783,"line_end":783,"column_start":5,"column_end":42}},{"value":"/ let mut vec1 = Vector2::new(1.0, 2.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":44592,"byte_end":44634,"line_start":784,"line_end":784,"column_start":5,"column_end":47}},{"value":"/ vec1.sygemv(10.0, &mat, &vec2, 5.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":44639,"byte_end":44679,"line_start":785,"line_end":785,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(vec1, Vector2::new(10.0, 20.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":44684,"byte_end":44731,"line_start":786,"line_end":786,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":44736,"byte_end":44743,"line_start":787,"line_end":787,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":44748,"byte_end":44757,"line_start":788,"line_end":788,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":46861,"byte_end":46867,"line_start":834,"line_end":834,"column_start":12,"column_end":18},"name":"hegemv","qualname":"<Vector<N, D, S>>::hegemv","value":"fn <D2, D3, SB, SC> (&mut self, alpha: N, a: &SquareMatrix<N, D2, SB>, x: &Vector<N, D3, SC>, beta: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * a * x + beta * self`, where `a` is an **hermitian** matrix, `x` a\n vector, and `alpha, beta` two scalars.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * a * x + beta * self`, where `a` is an **hermitian** matrix, `x` a","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":45159,"byte_end":45253,"line_start":804,"line_end":804,"column_start":5,"column_end":99}},{"value":"/ vector, and `alpha, beta` two scalars.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":45258,"byte_end":45300,"line_start":805,"line_end":805,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":45305,"byte_end":45308,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ If `beta` is zero, `self` is never read. If `self` is read, only its lower-triangular part","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":45313,"byte_end":45407,"line_start":807,"line_end":807,"column_start":5,"column_end":99}},{"value":"/ (including the diagonal) is actually read.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":45412,"byte_end":45458,"line_start":808,"line_end":808,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":45463,"byte_end":45466,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":45471,"byte_end":45486,"line_start":810,"line_end":810,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":45491,"byte_end":45494,"line_start":811,"line_end":811,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":45499,"byte_end":45506,"line_start":812,"line_end":812,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2, Vector2, Complex};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":45511,"byte_end":45559,"line_start":813,"line_end":813,"column_start":5,"column_end":53}},{"value":"/ let mat = Matrix2::new(Complex::new(1.0, 0.0), Complex::new(2.0, -0.1),","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":45564,"byte_end":45639,"line_start":814,"line_end":814,"column_start":5,"column_end":80}},{"value":"/                        Complex::new(2.0, 1.0), Complex::new(4.0, 0.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":45644,"byte_end":45719,"line_start":815,"line_end":815,"column_start":5,"column_end":80}},{"value":"/ let mut vec1 = Vector2::new(Complex::new(1.0, 2.0), Complex::new(3.0, 4.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":45724,"byte_end":45804,"line_start":816,"line_end":816,"column_start":5,"column_end":85}},{"value":"/ let vec2 = Vector2::new(Complex::new(0.1, 0.2), Complex::new(0.3, 0.4));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":45809,"byte_end":45885,"line_start":817,"line_end":817,"column_start":5,"column_end":81}},{"value":"/ vec1.sygemv(Complex::new(10.0, 20.0), &mat, &vec2, Complex::new(5.0, 15.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":45890,"byte_end":45970,"line_start":818,"line_end":818,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(vec1, Vector2::new(Complex::new(-48.0, 44.0), Complex::new(-75.0, 110.0)));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":45975,"byte_end":46065,"line_start":819,"line_end":819,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":46070,"byte_end":46073,"line_start":820,"line_end":820,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":46078,"byte_end":46081,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ // The matrix upper-triangular elements can be garbage because it is never","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":46086,"byte_end":46164,"line_start":822,"line_end":822,"column_start":5,"column_end":83}},{"value":"/ // read by this method. Therefore, it is not necessary for the caller to","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":46169,"byte_end":46245,"line_start":823,"line_end":823,"column_start":5,"column_end":81}},{"value":"/ // fill the matrix struct upper-triangle.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":46250,"byte_end":46295,"line_start":824,"line_end":824,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":46300,"byte_end":46303,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ let mat = Matrix2::new(Complex::new(1.0, 0.0), Complex::new(99999999.9, 999999999.9),","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":46308,"byte_end":46397,"line_start":826,"line_end":826,"column_start":5,"column_end":94}},{"value":"/                        Complex::new(2.0, 1.0), Complex::new(4.0, 0.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":46402,"byte_end":46477,"line_start":827,"line_end":827,"column_start":5,"column_end":80}},{"value":"/ let mut vec1 = Vector2::new(Complex::new(1.0, 2.0), Complex::new(3.0, 4.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":46482,"byte_end":46562,"line_start":828,"line_end":828,"column_start":5,"column_end":85}},{"value":"/ let vec2 = Vector2::new(Complex::new(0.1, 0.2), Complex::new(0.3, 0.4));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":46567,"byte_end":46643,"line_start":829,"line_end":829,"column_start":5,"column_end":81}},{"value":"/ vec1.sygemv(Complex::new(10.0, 20.0), &mat, &vec2, Complex::new(5.0, 15.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":46648,"byte_end":46728,"line_start":830,"line_end":830,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(vec1, Vector2::new(Complex::new(-48.0, 44.0), Complex::new(-75.0, 110.0)));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":46733,"byte_end":46823,"line_start":831,"line_end":831,"column_start":5,"column_end":95}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":46828,"byte_end":46835,"line_start":832,"line_end":832,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":46840,"byte_end":46849,"line_start":833,"line_end":833,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":49141,"byte_end":49148,"line_start":909,"line_end":909,"column_start":12,"column_end":19},"name":"gemv_tr","qualname":"<Vector<N, D, S>>::gemv_tr","value":"fn <R2, C2, D3, SB, SC> (&mut self, alpha: N, a: &Matrix<N, R2, C2, SB>, x: &Vector<N, D3, SC>, beta: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * a.transpose() * x + beta * self`, where `a` is a matrix, `x` a vector, and\n `alpha, beta` two scalars.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * a.transpose() * x + beta * self`, where `a` is a matrix, `x` a vector, and","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":48486,"byte_end":48589,"line_start":890,"line_end":890,"column_start":5,"column_end":108}},{"value":"/ `alpha, beta` two scalars.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":48594,"byte_end":48624,"line_start":891,"line_end":891,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":48629,"byte_end":48632,"line_start":892,"line_end":892,"column_start":5,"column_end":8}},{"value":"/ If `beta` is zero, `self` is never read.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":48637,"byte_end":48681,"line_start":893,"line_end":893,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":48686,"byte_end":48689,"line_start":894,"line_end":894,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":48694,"byte_end":48709,"line_start":895,"line_end":895,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":48714,"byte_end":48717,"line_start":896,"line_end":896,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":48722,"byte_end":48729,"line_start":897,"line_end":897,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2, Vector2};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":48734,"byte_end":48773,"line_start":898,"line_end":898,"column_start":5,"column_end":44}},{"value":"/ let mat = Matrix2::new(1.0, 3.0,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":48778,"byte_end":48814,"line_start":899,"line_end":899,"column_start":5,"column_end":41}},{"value":"/                        2.0, 4.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":48819,"byte_end":48856,"line_start":900,"line_end":900,"column_start":5,"column_end":42}},{"value":"/ let mut vec1 = Vector2::new(1.0, 2.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":48861,"byte_end":48903,"line_start":901,"line_end":901,"column_start":5,"column_end":47}},{"value":"/ let vec2 = Vector2::new(0.1, 0.2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":48908,"byte_end":48946,"line_start":902,"line_end":902,"column_start":5,"column_end":43}},{"value":"/ let expected = mat.transpose() * vec2 * 10.0 + vec1 * 5.0;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":48951,"byte_end":49013,"line_start":903,"line_end":903,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":49018,"byte_end":49021,"line_start":904,"line_end":904,"column_start":5,"column_end":8}},{"value":"/ vec1.gemv_tr(10.0, &mat, &vec2, 5.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":49026,"byte_end":49067,"line_start":905,"line_end":905,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(vec1, expected);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":49072,"byte_end":49103,"line_start":906,"line_end":906,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":49108,"byte_end":49115,"line_start":907,"line_end":907,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":49120,"byte_end":49129,"line_start":908,"line_end":908,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":50491,"byte_end":50498,"line_start":944,"line_end":944,"column_start":12,"column_end":19},"name":"gemv_ad","qualname":"<Vector<N, D, S>>::gemv_ad","value":"fn <R2, C2, D3, SB, SC> (&mut self, alpha: N, a: &Matrix<N, R2, C2, SB>, x: &Vector<N, D3, SC>, beta: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * a.adjoint() * x + beta * self`, where `a` is a matrix, `x` a vector, and\n `alpha, beta` two scalars.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * a.adjoint() * x + beta * self`, where `a` is a matrix, `x` a vector, and","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":49540,"byte_end":49641,"line_start":924,"line_end":924,"column_start":5,"column_end":106}},{"value":"/ `alpha, beta` two scalars.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":49646,"byte_end":49676,"line_start":925,"line_end":925,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":49681,"byte_end":49684,"line_start":926,"line_end":926,"column_start":5,"column_end":8}},{"value":"/ For real matrices, this is the same as `.gemv_tr`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":49689,"byte_end":49743,"line_start":927,"line_end":927,"column_start":5,"column_end":59}},{"value":"/ If `beta` is zero, `self` is never read.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":49748,"byte_end":49792,"line_start":928,"line_end":928,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":49797,"byte_end":49800,"line_start":929,"line_end":929,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":49805,"byte_end":49820,"line_start":930,"line_end":930,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":49825,"byte_end":49828,"line_start":931,"line_end":931,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":49833,"byte_end":49840,"line_start":932,"line_end":932,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2, Vector2, Complex};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":49845,"byte_end":49893,"line_start":933,"line_end":933,"column_start":5,"column_end":53}},{"value":"/ let mat = Matrix2::new(Complex::new(1.0, 2.0), Complex::new(3.0, 4.0),","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":49898,"byte_end":49972,"line_start":934,"line_end":934,"column_start":5,"column_end":79}},{"value":"/                        Complex::new(5.0, 6.0), Complex::new(7.0, 8.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":49977,"byte_end":50052,"line_start":935,"line_end":935,"column_start":5,"column_end":80}},{"value":"/ let mut vec1 = Vector2::new(Complex::new(1.0, 2.0), Complex::new(3.0, 4.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":50057,"byte_end":50137,"line_start":936,"line_end":936,"column_start":5,"column_end":85}},{"value":"/ let vec2 = Vector2::new(Complex::new(0.1, 0.2), Complex::new(0.3, 0.4));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":50142,"byte_end":50218,"line_start":937,"line_end":937,"column_start":5,"column_end":81}},{"value":"/ let expected = mat.adjoint() * vec2 * Complex::new(10.0, 20.0) + vec1 * Complex::new(5.0, 15.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":50223,"byte_end":50323,"line_start":938,"line_end":938,"column_start":5,"column_end":105}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":50328,"byte_end":50331,"line_start":939,"line_end":939,"column_start":5,"column_end":8}},{"value":"/ vec1.gemv_ad(Complex::new(10.0, 20.0), &mat, &vec2, Complex::new(5.0, 15.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":50336,"byte_end":50417,"line_start":940,"line_end":940,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(vec1, expected);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":50422,"byte_end":50453,"line_start":941,"line_end":941,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":50458,"byte_end":50465,"line_start":942,"line_end":942,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":50470,"byte_end":50479,"line_start":943,"line_end":943,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":52439,"byte_end":52442,"line_start":1012,"line_end":1012,"column_start":12,"column_end":15},"name":"ger","qualname":"<Matrix<N, R1, C1, S>>::ger","value":"fn <D2, D3, SB, SC> (&mut self, alpha: N, x: &Vector<N, D2, SB>, y: &Vector<N, D3, SC>, beta: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * x * y.transpose() + beta * self`.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * x * y.transpose() + beta * self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":51890,"byte_end":51952,"line_start":995,"line_end":995,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":51957,"byte_end":51960,"line_start":996,"line_end":996,"column_start":5,"column_end":8}},{"value":"/ If `beta` is zero, `self` is never read.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":51965,"byte_end":52009,"line_start":997,"line_end":997,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":52014,"byte_end":52017,"line_start":998,"line_end":998,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":52022,"byte_end":52037,"line_start":999,"line_end":999,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":52042,"byte_end":52045,"line_start":1000,"line_end":1000,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":52050,"byte_end":52057,"line_start":1001,"line_end":1001,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2x3, Vector2, Vector3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":52062,"byte_end":52112,"line_start":1002,"line_end":1002,"column_start":5,"column_end":55}},{"value":"/ let mut mat = Matrix2x3::repeat(4.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":52117,"byte_end":52158,"line_start":1003,"line_end":1003,"column_start":5,"column_end":46}},{"value":"/ let vec1 = Vector2::new(1.0, 2.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":52163,"byte_end":52201,"line_start":1004,"line_end":1004,"column_start":5,"column_end":43}},{"value":"/ let vec2 = Vector3::new(0.1, 0.2, 0.3);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":52206,"byte_end":52249,"line_start":1005,"line_end":1005,"column_start":5,"column_end":48}},{"value":"/ let expected = vec1 * vec2.transpose() * 10.0 + mat * 5.0;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":52254,"byte_end":52316,"line_start":1006,"line_end":1006,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":52321,"byte_end":52324,"line_start":1007,"line_end":1007,"column_start":5,"column_end":8}},{"value":"/ mat.ger(10.0, &vec1, &vec2, 5.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":52329,"byte_end":52366,"line_start":1008,"line_end":1008,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(mat, expected);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":52371,"byte_end":52401,"line_start":1009,"line_end":1009,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":52406,"byte_end":52413,"line_start":1010,"line_end":1010,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":52418,"byte_end":52427,"line_start":1011,"line_end":1011,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":53580,"byte_end":53584,"line_start":1045,"line_end":1045,"column_start":12,"column_end":16},"name":"gerc","qualname":"<Matrix<N, R1, C1, S>>::gerc","value":"fn <D2, D3, SB, SC> (&mut self, alpha: N, x: &Vector<N, D2, SB>, y: &Vector<N, D3, SC>, beta: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * x * y.adjoint() + beta * self`.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * x * y.adjoint() + beta * self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":52787,"byte_end":52847,"line_start":1027,"line_end":1027,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":52852,"byte_end":52855,"line_start":1028,"line_end":1028,"column_start":5,"column_end":8}},{"value":"/ If `beta` is zero, `self` is never read.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":52860,"byte_end":52904,"line_start":1029,"line_end":1029,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":52909,"byte_end":52912,"line_start":1030,"line_end":1030,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":52917,"byte_end":52932,"line_start":1031,"line_end":1031,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":52937,"byte_end":52940,"line_start":1032,"line_end":1032,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":52945,"byte_end":52952,"line_start":1033,"line_end":1033,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":52957,"byte_end":52996,"line_start":1034,"line_end":1034,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Matrix2x3, Vector2, Vector3, Complex};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":53001,"byte_end":53060,"line_start":1035,"line_end":1035,"column_start":5,"column_end":64}},{"value":"/ let mut mat = Matrix2x3::repeat(Complex::new(4.0, 5.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":53065,"byte_end":53125,"line_start":1036,"line_end":1036,"column_start":5,"column_end":65}},{"value":"/ let vec1 = Vector2::new(Complex::new(1.0, 2.0), Complex::new(3.0, 4.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":53130,"byte_end":53206,"line_start":1037,"line_end":1037,"column_start":5,"column_end":81}},{"value":"/ let vec2 = Vector3::new(Complex::new(0.6, 0.5), Complex::new(0.4, 0.5), Complex::new(0.2, 0.1));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":53211,"byte_end":53311,"line_start":1038,"line_end":1038,"column_start":5,"column_end":105}},{"value":"/ let expected = vec1 * vec2.adjoint() * Complex::new(10.0, 20.0) + mat * Complex::new(5.0, 15.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":53316,"byte_end":53416,"line_start":1039,"line_end":1039,"column_start":5,"column_end":105}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":53421,"byte_end":53424,"line_start":1040,"line_end":1040,"column_start":5,"column_end":8}},{"value":"/ mat.gerc(Complex::new(10.0, 20.0), &vec1, &vec2, Complex::new(5.0, 15.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":53429,"byte_end":53507,"line_start":1041,"line_end":1041,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(mat, expected);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":53512,"byte_end":53542,"line_start":1042,"line_end":1042,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":53547,"byte_end":53554,"line_start":1043,"line_end":1043,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":53559,"byte_end":53568,"line_start":1044,"line_end":1044,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":54798,"byte_end":54802,"line_start":1082,"line_end":1082,"column_start":12,"column_end":16},"name":"gemm","qualname":"<Matrix<N, R1, C1, S>>::gemm","value":"fn <R2, C2, R3, C3, SB, SC> (&mut self, alpha: N, a: &Matrix<N, R2, C2, SB>, b: &Matrix<N, R3, C3, SC>, beta: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * a * b + beta * self`, where `a, b, self` are matrices.\n `alpha` and `beta` are scalar.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * a * b + beta * self`, where `a, b, self` are matrices.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":53969,"byte_end":54052,"line_start":1060,"line_end":1060,"column_start":5,"column_end":88}},{"value":"/ `alpha` and `beta` are scalar.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":54057,"byte_end":54091,"line_start":1061,"line_end":1061,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":54096,"byte_end":54099,"line_start":1062,"line_end":1062,"column_start":5,"column_end":8}},{"value":"/ If `beta` is zero, `self` is never read.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":54104,"byte_end":54148,"line_start":1063,"line_end":1063,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":54153,"byte_end":54156,"line_start":1064,"line_end":1064,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":54161,"byte_end":54176,"line_start":1065,"line_end":1065,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":54181,"byte_end":54184,"line_start":1066,"line_end":1066,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":54189,"byte_end":54196,"line_start":1067,"line_end":1067,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":54201,"byte_end":54240,"line_start":1068,"line_end":1068,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Matrix2x3, Matrix3x4, Matrix2x4};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":54245,"byte_end":54299,"line_start":1069,"line_end":1069,"column_start":5,"column_end":59}},{"value":"/ let mut mat1 = Matrix2x4::identity();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":54304,"byte_end":54345,"line_start":1070,"line_end":1070,"column_start":5,"column_end":46}},{"value":"/ let mat2 = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":54350,"byte_end":54394,"line_start":1071,"line_end":1071,"column_start":5,"column_end":49}},{"value":"/                           4.0, 5.0, 6.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":54399,"byte_end":54444,"line_start":1072,"line_end":1072,"column_start":5,"column_end":50}},{"value":"/ let mat3 = Matrix3x4::new(0.1, 0.2, 0.3, 0.4,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":54449,"byte_end":54498,"line_start":1073,"line_end":1073,"column_start":5,"column_end":54}},{"value":"/                           0.5, 0.6, 0.7, 0.8,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":54503,"byte_end":54552,"line_start":1074,"line_end":1074,"column_start":5,"column_end":54}},{"value":"/                           0.9, 1.0, 1.1, 1.2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":54557,"byte_end":54607,"line_start":1075,"line_end":1075,"column_start":5,"column_end":55}},{"value":"/ let expected = mat2 * mat3 * 10.0 + mat1 * 5.0;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":54612,"byte_end":54663,"line_start":1076,"line_end":1076,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":54668,"byte_end":54671,"line_start":1077,"line_end":1077,"column_start":5,"column_end":8}},{"value":"/ mat1.gemm(10.0, &mat2, &mat3, 5.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":54676,"byte_end":54715,"line_start":1078,"line_end":1078,"column_start":5,"column_end":44}},{"value":"/ assert_relative_eq!(mat1, expected);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":54720,"byte_end":54760,"line_start":1079,"line_end":1079,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":54765,"byte_end":54772,"line_start":1080,"line_end":1080,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":54777,"byte_end":54786,"line_start":1081,"line_end":1081,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":60922,"byte_end":60929,"line_start":1237,"line_end":1237,"column_start":12,"column_end":19},"name":"gemm_tr","qualname":"<Matrix<N, R1, C1, S>>::gemm_tr","value":"fn <R2, C2, R3, C3, SB, SC> (&mut self, alpha: N, a: &Matrix<N, R2, C2, SB>, b: &Matrix<N, R3, C3, SC>, beta: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * a.transpose() * b + beta * self`, where `a, b, self` are matrices.\n `alpha` and `beta` are scalar.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * a.transpose() * b + beta * self`, where `a, b, self` are matrices.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":60041,"byte_end":60136,"line_start":1214,"line_end":1214,"column_start":5,"column_end":100}},{"value":"/ `alpha` and `beta` are scalar.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":60141,"byte_end":60175,"line_start":1215,"line_end":1215,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":60180,"byte_end":60183,"line_start":1216,"line_end":1216,"column_start":5,"column_end":8}},{"value":"/ If `beta` is zero, `self` is never read.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":60188,"byte_end":60232,"line_start":1217,"line_end":1217,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":60237,"byte_end":60240,"line_start":1218,"line_end":1218,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":60245,"byte_end":60260,"line_start":1219,"line_end":1219,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":60265,"byte_end":60268,"line_start":1220,"line_end":1220,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":60273,"byte_end":60280,"line_start":1221,"line_end":1221,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":60285,"byte_end":60324,"line_start":1222,"line_end":1222,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Matrix3x2, Matrix3x4, Matrix2x4};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":60329,"byte_end":60383,"line_start":1223,"line_end":1223,"column_start":5,"column_end":59}},{"value":"/ let mut mat1 = Matrix2x4::identity();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":60388,"byte_end":60429,"line_start":1224,"line_end":1224,"column_start":5,"column_end":46}},{"value":"/ let mat2 = Matrix3x2::new(1.0, 4.0,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":60434,"byte_end":60473,"line_start":1225,"line_end":1225,"column_start":5,"column_end":44}},{"value":"/                           2.0, 5.0,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":60478,"byte_end":60517,"line_start":1226,"line_end":1226,"column_start":5,"column_end":44}},{"value":"/                           3.0, 6.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":60522,"byte_end":60562,"line_start":1227,"line_end":1227,"column_start":5,"column_end":45}},{"value":"/ let mat3 = Matrix3x4::new(0.1, 0.2, 0.3, 0.4,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":60567,"byte_end":60616,"line_start":1228,"line_end":1228,"column_start":5,"column_end":54}},{"value":"/                           0.5, 0.6, 0.7, 0.8,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":60621,"byte_end":60670,"line_start":1229,"line_end":1229,"column_start":5,"column_end":54}},{"value":"/                           0.9, 1.0, 1.1, 1.2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":60675,"byte_end":60725,"line_start":1230,"line_end":1230,"column_start":5,"column_end":55}},{"value":"/ let expected = mat2.transpose() * mat3 * 10.0 + mat1 * 5.0;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":60730,"byte_end":60793,"line_start":1231,"line_end":1231,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":60798,"byte_end":60801,"line_start":1232,"line_end":1232,"column_start":5,"column_end":8}},{"value":"/ mat1.gemm_tr(10.0, &mat2, &mat3, 5.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":60806,"byte_end":60848,"line_start":1233,"line_end":1233,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(mat1, expected);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":60853,"byte_end":60884,"line_start":1234,"line_end":1234,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":60889,"byte_end":60896,"line_start":1235,"line_end":1235,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":60901,"byte_end":60910,"line_start":1236,"line_end":1236,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":63318,"byte_end":63325,"line_start":1299,"line_end":1299,"column_start":12,"column_end":19},"name":"gemm_ad","qualname":"<Matrix<N, R1, C1, S>>::gemm_ad","value":"fn <R2, C2, R3, C3, SB, SC> (&mut self, alpha: N, a: &Matrix<N, R2, C2, SB>, b: &Matrix<N, R3, C3, SC>, beta: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * a.adjoint() * b + beta * self`, where `a, b, self` are matrices.\n `alpha` and `beta` are scalar.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * a.adjoint() * b + beta * self`, where `a, b, self` are matrices.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":62007,"byte_end":62100,"line_start":1276,"line_end":1276,"column_start":5,"column_end":98}},{"value":"/ `alpha` and `beta` are scalar.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":62105,"byte_end":62139,"line_start":1277,"line_end":1277,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":62144,"byte_end":62147,"line_start":1278,"line_end":1278,"column_start":5,"column_end":8}},{"value":"/ If `beta` is zero, `self` is never read.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":62152,"byte_end":62196,"line_start":1279,"line_end":1279,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":62201,"byte_end":62204,"line_start":1280,"line_end":1280,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":62209,"byte_end":62224,"line_start":1281,"line_end":1281,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":62229,"byte_end":62232,"line_start":1282,"line_end":1282,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":62237,"byte_end":62244,"line_start":1283,"line_end":1283,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":62249,"byte_end":62288,"line_start":1284,"line_end":1284,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Matrix3x2, Matrix3x4, Matrix2x4, Complex};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":62293,"byte_end":62356,"line_start":1285,"line_end":1285,"column_start":5,"column_end":68}},{"value":"/ let mut mat1 = Matrix2x4::identity();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":62361,"byte_end":62402,"line_start":1286,"line_end":1286,"column_start":5,"column_end":46}},{"value":"/ let mat2 = Matrix3x2::new(Complex::new(1.0, 4.0), Complex::new(7.0, 8.0),","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":62407,"byte_end":62484,"line_start":1287,"line_end":1287,"column_start":5,"column_end":82}},{"value":"/                           Complex::new(2.0, 5.0), Complex::new(9.0, 10.0),","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":62489,"byte_end":62567,"line_start":1288,"line_end":1288,"column_start":5,"column_end":83}},{"value":"/                           Complex::new(3.0, 6.0), Complex::new(11.0, 12.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":62572,"byte_end":62652,"line_start":1289,"line_end":1289,"column_start":5,"column_end":85}},{"value":"/ let mat3 = Matrix3x4::new(Complex::new(0.1, 1.3), Complex::new(0.2, 1.4), Complex::new(0.3, 1.5), Complex::new(0.4, 1.6),","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":62657,"byte_end":62782,"line_start":1290,"line_end":1290,"column_start":5,"column_end":130}},{"value":"/                           Complex::new(0.5, 1.7), Complex::new(0.6, 1.8), Complex::new(0.7, 1.9), Complex::new(0.8, 2.0),","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":62787,"byte_end":62912,"line_start":1291,"line_end":1291,"column_start":5,"column_end":130}},{"value":"/                           Complex::new(0.9, 2.1), Complex::new(1.0, 2.2), Complex::new(1.1, 2.3), Complex::new(1.2, 2.4));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":62917,"byte_end":63043,"line_start":1292,"line_end":1292,"column_start":5,"column_end":131}},{"value":"/ let expected = mat2.adjoint() * mat3 * Complex::new(10.0, 20.0) + mat1 * Complex::new(5.0, 15.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":63048,"byte_end":63149,"line_start":1293,"line_end":1293,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":63154,"byte_end":63157,"line_start":1294,"line_end":1294,"column_start":5,"column_end":8}},{"value":"/ mat1.gemm_ad(Complex::new(10.0, 20.0), &mat2, &mat3, Complex::new(5.0, 15.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":63162,"byte_end":63244,"line_start":1295,"line_end":1295,"column_start":5,"column_end":87}},{"value":"/ assert_eq!(mat1, expected);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":63249,"byte_end":63280,"line_start":1296,"line_end":1296,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":63285,"byte_end":63292,"line_start":1297,"line_end":1297,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":63297,"byte_end":63306,"line_start":1298,"line_end":1298,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":66488,"byte_end":66496,"line_start":1395,"line_end":1395,"column_start":12,"column_end":20},"name":"ger_symm","qualname":"<Matrix<N, R1, C1, S>>::ger_symm","value":"fn <D2, D3, SB, SC> (&mut self, alpha: N, x: &Vector<N, D2, SB>, y: &Vector<N, D3, SC>, beta: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * x * y.transpose() + beta * self`, where `self` is a **symmetric**\n matrix.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * x * y.transpose() + beta * self`, where `self` is a **symmetric**","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":65499,"byte_end":65593,"line_start":1374,"line_end":1374,"column_start":5,"column_end":99}},{"value":"/ matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":65598,"byte_end":65609,"line_start":1375,"line_end":1375,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":65614,"byte_end":65617,"line_start":1376,"line_end":1376,"column_start":5,"column_end":8}},{"value":"/ If `beta` is zero, `self` is never read. The result is symmetric. Only the lower-triangular","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":65622,"byte_end":65717,"line_start":1377,"line_end":1377,"column_start":5,"column_end":100}},{"value":"/ (including the diagonal) part of `self` is read/written.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":65722,"byte_end":65782,"line_start":1378,"line_end":1378,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":65787,"byte_end":65790,"line_start":1379,"line_end":1379,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":65795,"byte_end":65810,"line_start":1380,"line_end":1380,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":65815,"byte_end":65818,"line_start":1381,"line_end":1381,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":65823,"byte_end":65830,"line_start":1382,"line_end":1382,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2, Vector2};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":65835,"byte_end":65874,"line_start":1383,"line_end":1383,"column_start":5,"column_end":44}},{"value":"/ let mut mat = Matrix2::identity();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":65879,"byte_end":65917,"line_start":1384,"line_end":1384,"column_start":5,"column_end":43}},{"value":"/ let vec1 = Vector2::new(1.0, 2.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":65922,"byte_end":65960,"line_start":1385,"line_end":1385,"column_start":5,"column_end":43}},{"value":"/ let vec2 = Vector2::new(0.1, 0.2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":65965,"byte_end":66003,"line_start":1386,"line_end":1386,"column_start":5,"column_end":43}},{"value":"/ let expected = vec1 * vec2.transpose() * 10.0 + mat * 5.0;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":66008,"byte_end":66070,"line_start":1387,"line_end":1387,"column_start":5,"column_end":67}},{"value":"/ mat.m12 = 99999.99999; // This component is on the upper-triangular part and will not be read/written.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":66075,"byte_end":66181,"line_start":1388,"line_end":1388,"column_start":5,"column_end":111}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":66186,"byte_end":66189,"line_start":1389,"line_end":1389,"column_start":5,"column_end":8}},{"value":"/ mat.ger_symm(10.0, &vec1, &vec2, 5.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":66194,"byte_end":66236,"line_start":1390,"line_end":1390,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(mat.lower_triangle(), expected.lower_triangle());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":66241,"byte_end":66305,"line_start":1391,"line_end":1391,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(mat.m12, 99999.99999); // This was untouched.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":66310,"byte_end":66370,"line_start":1392,"line_end":1392,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":66375,"byte_end":66384,"line_start":1393,"line_end":1393,"column_start":5,"column_end":14}},{"value":"deprecated(note =\n             \"This is renamed `syger` to match the original BLAS terminology.\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":66389,"byte_end":66476,"line_start":1394,"line_end":1394,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":67792,"byte_end":67797,"line_start":1431,"line_end":1431,"column_start":12,"column_end":17},"name":"syger","qualname":"<Matrix<N, R1, C1, S>>::syger","value":"fn <D2, D3, SB, SC> (&mut self, alpha: N, x: &Vector<N, D2, SB>, y: &Vector<N, D3, SC>, beta: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * x * y.transpose() + beta * self`, where `self` is a **symmetric**\n matrix.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * x * y.transpose() + beta * self`, where `self` is a **symmetric**","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":66835,"byte_end":66929,"line_start":1410,"line_end":1410,"column_start":5,"column_end":99}},{"value":"/ matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":66934,"byte_end":66945,"line_start":1411,"line_end":1411,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":66950,"byte_end":66953,"line_start":1412,"line_end":1412,"column_start":5,"column_end":8}},{"value":"/ For hermitian complex matrices, use `.hegerc` instead.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":66958,"byte_end":67016,"line_start":1413,"line_end":1413,"column_start":5,"column_end":63}},{"value":"/ If `beta` is zero, `self` is never read. The result is symmetric. Only the lower-triangular","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":67021,"byte_end":67116,"line_start":1414,"line_end":1414,"column_start":5,"column_end":100}},{"value":"/ (including the diagonal) part of `self` is read/written.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":67121,"byte_end":67181,"line_start":1415,"line_end":1415,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":67186,"byte_end":67189,"line_start":1416,"line_end":1416,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":67194,"byte_end":67209,"line_start":1417,"line_end":1417,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":67214,"byte_end":67217,"line_start":1418,"line_end":1418,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":67222,"byte_end":67229,"line_start":1419,"line_end":1419,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2, Vector2};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":67234,"byte_end":67273,"line_start":1420,"line_end":1420,"column_start":5,"column_end":44}},{"value":"/ let mut mat = Matrix2::identity();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":67278,"byte_end":67316,"line_start":1421,"line_end":1421,"column_start":5,"column_end":43}},{"value":"/ let vec1 = Vector2::new(1.0, 2.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":67321,"byte_end":67359,"line_start":1422,"line_end":1422,"column_start":5,"column_end":43}},{"value":"/ let vec2 = Vector2::new(0.1, 0.2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":67364,"byte_end":67402,"line_start":1423,"line_end":1423,"column_start":5,"column_end":43}},{"value":"/ let expected = vec1 * vec2.transpose() * 10.0 + mat * 5.0;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":67407,"byte_end":67469,"line_start":1424,"line_end":1424,"column_start":5,"column_end":67}},{"value":"/ mat.m12 = 99999.99999; // This component is on the upper-triangular part and will not be read/written.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":67474,"byte_end":67580,"line_start":1425,"line_end":1425,"column_start":5,"column_end":111}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":67585,"byte_end":67588,"line_start":1426,"line_end":1426,"column_start":5,"column_end":8}},{"value":"/ mat.syger(10.0, &vec1, &vec2, 5.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":67593,"byte_end":67632,"line_start":1427,"line_end":1427,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(mat.lower_triangle(), expected.lower_triangle());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":67637,"byte_end":67701,"line_start":1428,"line_end":1428,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(mat.m12, 99999.99999); // This was untouched.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":67706,"byte_end":67766,"line_start":1429,"line_end":1429,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":67771,"byte_end":67780,"line_start":1430,"line_end":1430,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":69255,"byte_end":69261,"line_start":1466,"line_end":1466,"column_start":12,"column_end":18},"name":"hegerc","qualname":"<Matrix<N, R1, C1, S>>::hegerc","value":"fn <D2, D3, SB, SC> (&mut self, alpha: N, x: &Vector<N, D2, SB>, y: &Vector<N, D3, SC>, beta: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * x * y.adjoint() + beta * self`, where `self` is an **hermitian**\n matrix.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * x * y.adjoint() + beta * self`, where `self` is an **hermitian**","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":68144,"byte_end":68237,"line_start":1446,"line_end":1446,"column_start":5,"column_end":98}},{"value":"/ matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":68242,"byte_end":68253,"line_start":1447,"line_end":1447,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":68258,"byte_end":68261,"line_start":1448,"line_end":1448,"column_start":5,"column_end":8}},{"value":"/ If `beta` is zero, `self` is never read. The result is symmetric. Only the lower-triangular","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":68266,"byte_end":68361,"line_start":1449,"line_end":1449,"column_start":5,"column_end":100}},{"value":"/ (including the diagonal) part of `self` is read/written.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":68366,"byte_end":68426,"line_start":1450,"line_end":1450,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":68431,"byte_end":68434,"line_start":1451,"line_end":1451,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":68439,"byte_end":68454,"line_start":1452,"line_end":1452,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":68459,"byte_end":68462,"line_start":1453,"line_end":1453,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":68467,"byte_end":68474,"line_start":1454,"line_end":1454,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2, Vector2, Complex};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":68479,"byte_end":68527,"line_start":1455,"line_end":1455,"column_start":5,"column_end":53}},{"value":"/ let mut mat = Matrix2::identity();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":68532,"byte_end":68570,"line_start":1456,"line_end":1456,"column_start":5,"column_end":43}},{"value":"/ let vec1 = Vector2::new(Complex::new(1.0, 3.0), Complex::new(2.0, 4.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":68575,"byte_end":68651,"line_start":1457,"line_end":1457,"column_start":5,"column_end":81}},{"value":"/ let vec2 = Vector2::new(Complex::new(0.2, 0.4), Complex::new(0.1, 0.3));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":68656,"byte_end":68732,"line_start":1458,"line_end":1458,"column_start":5,"column_end":81}},{"value":"/ let expected = vec1 * vec2.adjoint() * Complex::new(10.0, 20.0) + mat * Complex::new(5.0, 15.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":68737,"byte_end":68837,"line_start":1459,"line_end":1459,"column_start":5,"column_end":105}},{"value":"/ mat.m12 = Complex::new(99999.99999, 88888.88888); // This component is on the upper-triangular part and will not be read/written.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":68842,"byte_end":68975,"line_start":1460,"line_end":1460,"column_start":5,"column_end":138}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":68980,"byte_end":68983,"line_start":1461,"line_end":1461,"column_start":5,"column_end":8}},{"value":"/ mat.hegerc(Complex::new(10.0, 20.0), &vec1, &vec2, Complex::new(5.0, 15.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":68988,"byte_end":69068,"line_start":1462,"line_end":1462,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(mat.lower_triangle(), expected.lower_triangle());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":69073,"byte_end":69137,"line_start":1463,"line_end":1463,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(mat.m12, Complex::new(99999.99999, 88888.88888)); // This was untouched.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":69142,"byte_end":69229,"line_start":1464,"line_end":1464,"column_start":5,"column_end":92}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":69234,"byte_end":69243,"line_start":1465,"line_end":1465,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":71192,"byte_end":71218,"line_start":1512,"line_end":1512,"column_start":12,"column_end":38},"name":"quadform_tr_with_workspace","qualname":"<SquareMatrix<N, D1, S>>::quadform_tr_with_workspace","value":"fn <D2, S2, R3, C3, S3, D4, S4> (&mut self, work: &mut Vector<N, D2, S2>, alpha: N, lhs: &Matrix<N, R3, C3, S3>, mid: &SquareMatrix<N, D4, S4>, beta: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the quadratic form `self = alpha * lhs * mid * lhs.transpose() + beta * self`.","sig":null,"attributes":[{"value":"/ Computes the quadratic form `self = alpha * lhs * mid * lhs.transpose() + beta * self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":69776,"byte_end":69867,"line_start":1486,"line_end":1486,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":69872,"byte_end":69875,"line_start":1487,"line_end":1487,"column_start":5,"column_end":8}},{"value":"/ This uses the provided workspace `work` to avoid allocations for intermediate results.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":69880,"byte_end":69970,"line_start":1488,"line_end":1488,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":69975,"byte_end":69978,"line_start":1489,"line_end":1489,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":69983,"byte_end":69998,"line_start":1490,"line_end":1490,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":70003,"byte_end":70006,"line_start":1491,"line_end":1491,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":70011,"byte_end":70018,"line_start":1492,"line_end":1492,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":70023,"byte_end":70062,"line_start":1493,"line_end":1493,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{DMatrix, DVector};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":70067,"byte_end":70106,"line_start":1494,"line_end":1494,"column_start":5,"column_end":44}},{"value":"/ // Note that all those would also work with statically-sized matrices.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":70111,"byte_end":70185,"line_start":1495,"line_end":1495,"column_start":5,"column_end":79}},{"value":"/ // We use DMatrix/DVector since that's the only case where pre-allocating the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":70190,"byte_end":70271,"line_start":1496,"line_end":1496,"column_start":5,"column_end":86}},{"value":"/ // workspace is actually useful (assuming the same workspace is re-used for","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":70276,"byte_end":70355,"line_start":1497,"line_end":1497,"column_start":5,"column_end":84}},{"value":"/ // several computations) because it avoids repeated dynamic allocations.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":70360,"byte_end":70436,"line_start":1498,"line_end":1498,"column_start":5,"column_end":81}},{"value":"/ let mut mat = DMatrix::identity(2, 2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":70441,"byte_end":70483,"line_start":1499,"line_end":1499,"column_start":5,"column_end":47}},{"value":"/ let lhs = DMatrix::from_row_slice(2, 3, &[1.0, 2.0, 3.0,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":70488,"byte_end":70548,"line_start":1500,"line_end":1500,"column_start":5,"column_end":65}},{"value":"/                                           4.0, 5.0, 6.0]);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":70553,"byte_end":70615,"line_start":1501,"line_end":1501,"column_start":5,"column_end":67}},{"value":"/ let mid = DMatrix::from_row_slice(3, 3, &[0.1, 0.2, 0.3,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":70620,"byte_end":70680,"line_start":1502,"line_end":1502,"column_start":5,"column_end":65}},{"value":"/                                           0.5, 0.6, 0.7,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":70685,"byte_end":70745,"line_start":1503,"line_end":1503,"column_start":5,"column_end":65}},{"value":"/                                           0.9, 1.0, 1.1]);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":70750,"byte_end":70812,"line_start":1504,"line_end":1504,"column_start":5,"column_end":67}},{"value":"/ // The random shows that values on the workspace do not","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":70817,"byte_end":70876,"line_start":1505,"line_end":1505,"column_start":5,"column_end":64}},{"value":"/ // matter as they will be overwritten.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":70881,"byte_end":70923,"line_start":1506,"line_end":1506,"column_start":5,"column_end":47}},{"value":"/ let mut workspace = DVector::new_random(2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":70928,"byte_end":70975,"line_start":1507,"line_end":1507,"column_start":5,"column_end":52}},{"value":"/ let expected = &lhs * &mid * lhs.transpose() * 10.0 + &mat * 5.0;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":70980,"byte_end":71049,"line_start":1508,"line_end":1508,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":71054,"byte_end":71057,"line_start":1509,"line_end":1509,"column_start":5,"column_end":8}},{"value":"/ mat.quadform_tr_with_workspace(&mut workspace, 10.0, &lhs, &mid, 5.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":71062,"byte_end":71136,"line_start":1510,"line_end":1510,"column_start":5,"column_end":79}},{"value":"/ assert_relative_eq!(mat, expected);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":71141,"byte_end":71180,"line_start":1511,"line_end":1511,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":72979,"byte_end":72990,"line_start":1559,"line_end":1559,"column_start":12,"column_end":23},"name":"quadform_tr","qualname":"<SquareMatrix<N, D1, S>>::quadform_tr","value":"fn <R3, C3, S3, D4, S4> (&mut self, alpha: N, lhs: &Matrix<N, R3, C3, S3>, mid: &SquareMatrix<N, D4, S4>, beta: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the quadratic form `self = alpha * lhs * mid * lhs.transpose() + beta * self`.","sig":null,"attributes":[{"value":"/ Computes the quadratic form `self = alpha * lhs * mid * lhs.transpose() + beta * self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":72013,"byte_end":72104,"line_start":1538,"line_end":1538,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":72109,"byte_end":72112,"line_start":1539,"line_end":1539,"column_start":5,"column_end":8}},{"value":"/ This allocates a workspace vector of dimension D1 for intermediate results.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":72117,"byte_end":72196,"line_start":1540,"line_end":1540,"column_start":5,"column_end":84}},{"value":"/ If `D1` is a type-level integer, then the allocation is performed on the stack.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":72201,"byte_end":72284,"line_start":1541,"line_end":1541,"column_start":5,"column_end":88}},{"value":"/ Use `.quadform_tr_with_workspace(...)` instead to avoid allocations.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":72289,"byte_end":72361,"line_start":1542,"line_end":1542,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":72366,"byte_end":72369,"line_start":1543,"line_end":1543,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":72374,"byte_end":72389,"line_start":1544,"line_end":1544,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":72394,"byte_end":72397,"line_start":1545,"line_end":1545,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":72402,"byte_end":72409,"line_start":1546,"line_end":1546,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":72414,"byte_end":72453,"line_start":1547,"line_end":1547,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Matrix2, Matrix3, Matrix2x3, Vector2};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":72458,"byte_end":72517,"line_start":1548,"line_end":1548,"column_start":5,"column_end":64}},{"value":"/ let mut mat = Matrix2::identity();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":72522,"byte_end":72560,"line_start":1549,"line_end":1549,"column_start":5,"column_end":43}},{"value":"/ let lhs = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":72565,"byte_end":72608,"line_start":1550,"line_end":1550,"column_start":5,"column_end":48}},{"value":"/                          4.0, 5.0, 6.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":72613,"byte_end":72657,"line_start":1551,"line_end":1551,"column_start":5,"column_end":49}},{"value":"/ let mid = Matrix3::new(0.1, 0.2, 0.3,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":72662,"byte_end":72703,"line_start":1552,"line_end":1552,"column_start":5,"column_end":46}},{"value":"/                        0.5, 0.6, 0.7,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":72708,"byte_end":72749,"line_start":1553,"line_end":1553,"column_start":5,"column_end":46}},{"value":"/                        0.9, 1.0, 1.1);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":72754,"byte_end":72796,"line_start":1554,"line_end":1554,"column_start":5,"column_end":47}},{"value":"/ let expected = lhs * mid * lhs.transpose() * 10.0 + mat * 5.0;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":72801,"byte_end":72867,"line_start":1555,"line_end":1555,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":72872,"byte_end":72875,"line_start":1556,"line_end":1556,"column_start":5,"column_end":8}},{"value":"/ mat.quadform_tr(10.0, &lhs, &mid, 5.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":72880,"byte_end":72923,"line_start":1557,"line_end":1557,"column_start":5,"column_end":48}},{"value":"/ assert_relative_eq!(mat, expected);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":72928,"byte_end":72967,"line_start":1558,"line_end":1558,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":75005,"byte_end":75028,"line_start":1603,"line_end":1603,"column_start":12,"column_end":35},"name":"quadform_with_workspace","qualname":"<SquareMatrix<N, D1, S>>::quadform_with_workspace","value":"fn <D2, S2, D3, S3, R4, C4, S4> (&mut self, work: &mut Vector<N, D2, S2>, alpha: N, mid: &SquareMatrix<N, D3, S3>, rhs: &Matrix<N, R4, C4, S4>, beta: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the quadratic form `self = alpha * rhs.transpose() * mid * rhs + beta * self`.","sig":null,"attributes":[{"value":"/ Computes the quadratic form `self = alpha * rhs.transpose() * mid * rhs + beta * self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":73570,"byte_end":73661,"line_start":1578,"line_end":1578,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":73666,"byte_end":73669,"line_start":1579,"line_end":1579,"column_start":5,"column_end":8}},{"value":"/ This uses the provided workspace `work` to avoid allocations for intermediate results.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":73674,"byte_end":73764,"line_start":1580,"line_end":1580,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":73769,"byte_end":73772,"line_start":1581,"line_end":1581,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":73777,"byte_end":73784,"line_start":1582,"line_end":1582,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":73789,"byte_end":73828,"line_start":1583,"line_end":1583,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{DMatrix, DVector};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":73833,"byte_end":73872,"line_start":1584,"line_end":1584,"column_start":5,"column_end":44}},{"value":"/ // Note that all those would also work with statically-sized matrices.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":73877,"byte_end":73951,"line_start":1585,"line_end":1585,"column_start":5,"column_end":79}},{"value":"/ // We use DMatrix/DVector since that's the only case where pre-allocating the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":73956,"byte_end":74037,"line_start":1586,"line_end":1586,"column_start":5,"column_end":86}},{"value":"/ // workspace is actually useful (assuming the same workspace is re-used for","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":74042,"byte_end":74121,"line_start":1587,"line_end":1587,"column_start":5,"column_end":84}},{"value":"/ // several computations) because it avoids repeated dynamic allocations.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":74126,"byte_end":74202,"line_start":1588,"line_end":1588,"column_start":5,"column_end":81}},{"value":"/ let mut mat = DMatrix::identity(2, 2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":74207,"byte_end":74249,"line_start":1589,"line_end":1589,"column_start":5,"column_end":47}},{"value":"/ let rhs = DMatrix::from_row_slice(3, 2, &[1.0, 2.0,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":74254,"byte_end":74309,"line_start":1590,"line_end":1590,"column_start":5,"column_end":60}},{"value":"/                                           3.0, 4.0,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":74314,"byte_end":74369,"line_start":1591,"line_end":1591,"column_start":5,"column_end":60}},{"value":"/                                           5.0, 6.0]);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":74374,"byte_end":74431,"line_start":1592,"line_end":1592,"column_start":5,"column_end":62}},{"value":"/ let mid = DMatrix::from_row_slice(3, 3, &[0.1, 0.2, 0.3,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":74436,"byte_end":74496,"line_start":1593,"line_end":1593,"column_start":5,"column_end":65}},{"value":"/                                           0.5, 0.6, 0.7,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":74501,"byte_end":74561,"line_start":1594,"line_end":1594,"column_start":5,"column_end":65}},{"value":"/                                           0.9, 1.0, 1.1]);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":74566,"byte_end":74628,"line_start":1595,"line_end":1595,"column_start":5,"column_end":67}},{"value":"/ // The random shows that values on the workspace do not","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":74633,"byte_end":74692,"line_start":1596,"line_end":1596,"column_start":5,"column_end":64}},{"value":"/ // matter as they will be overwritten.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":74697,"byte_end":74739,"line_start":1597,"line_end":1597,"column_start":5,"column_end":47}},{"value":"/ let mut workspace = DVector::new_random(3);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":74744,"byte_end":74791,"line_start":1598,"line_end":1598,"column_start":5,"column_end":52}},{"value":"/ let expected = rhs.transpose() * &mid * &rhs * 10.0 + &mat * 5.0;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":74796,"byte_end":74865,"line_start":1599,"line_end":1599,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":74870,"byte_end":74873,"line_start":1600,"line_end":1600,"column_start":5,"column_end":8}},{"value":"/ mat.quadform_with_workspace(&mut workspace, 10.0, &mid, &rhs, 5.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":74878,"byte_end":74949,"line_start":1601,"line_end":1601,"column_start":5,"column_end":76}},{"value":"/ assert_relative_eq!(mat, expected);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":74954,"byte_end":74993,"line_start":1602,"line_end":1602,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":76883,"byte_end":76891,"line_start":1652,"line_end":1652,"column_start":12,"column_end":20},"name":"quadform","qualname":"<SquareMatrix<N, D1, S>>::quadform","value":"fn <D2, S2, R3, C3, S3> (&mut self, alpha: N, mid: &SquareMatrix<N, D2, S2>, rhs: &Matrix<N, R3, C3, S3>, beta: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the quadratic form `self = alpha * rhs.transpose() * mid * rhs + beta * self`.","sig":null,"attributes":[{"value":"/ Computes the quadratic form `self = alpha * rhs.transpose() * mid * rhs + beta * self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":75927,"byte_end":76018,"line_start":1632,"line_end":1632,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":76023,"byte_end":76026,"line_start":1633,"line_end":1633,"column_start":5,"column_end":8}},{"value":"/ This allocates a workspace vector of dimension D2 for intermediate results.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":76031,"byte_end":76110,"line_start":1634,"line_end":1634,"column_start":5,"column_end":84}},{"value":"/ If `D2` is a type-level integer, then the allocation is performed on the stack.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":76115,"byte_end":76198,"line_start":1635,"line_end":1635,"column_start":5,"column_end":88}},{"value":"/ Use `.quadform_with_workspace(...)` instead to avoid allocations.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":76203,"byte_end":76272,"line_start":1636,"line_end":1636,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":76277,"byte_end":76280,"line_start":1637,"line_end":1637,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":76285,"byte_end":76292,"line_start":1638,"line_end":1638,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":76297,"byte_end":76336,"line_start":1639,"line_end":1639,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Matrix2, Matrix3x2, Matrix3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":76341,"byte_end":76391,"line_start":1640,"line_end":1640,"column_start":5,"column_end":55}},{"value":"/ let mut mat = Matrix2::identity();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":76396,"byte_end":76434,"line_start":1641,"line_end":1641,"column_start":5,"column_end":43}},{"value":"/ let rhs = Matrix3x2::new(1.0, 2.0,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":76439,"byte_end":76477,"line_start":1642,"line_end":1642,"column_start":5,"column_end":43}},{"value":"/                          3.0, 4.0,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":76482,"byte_end":76520,"line_start":1643,"line_end":1643,"column_start":5,"column_end":43}},{"value":"/                          5.0, 6.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":76525,"byte_end":76564,"line_start":1644,"line_end":1644,"column_start":5,"column_end":44}},{"value":"/ let mid = Matrix3::new(0.1, 0.2, 0.3,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":76569,"byte_end":76610,"line_start":1645,"line_end":1645,"column_start":5,"column_end":46}},{"value":"/                        0.5, 0.6, 0.7,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":76615,"byte_end":76656,"line_start":1646,"line_end":1646,"column_start":5,"column_end":46}},{"value":"/                        0.9, 1.0, 1.1);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":76661,"byte_end":76703,"line_start":1647,"line_end":1647,"column_start":5,"column_end":47}},{"value":"/ let expected = rhs.transpose() * mid * rhs * 10.0 + mat * 5.0;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":76708,"byte_end":76774,"line_start":1648,"line_end":1648,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":76779,"byte_end":76782,"line_start":1649,"line_end":1649,"column_start":5,"column_end":8}},{"value":"/ mat.quadform(10.0, &mid, &rhs, 5.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":76787,"byte_end":76827,"line_start":1650,"line_end":1650,"column_start":5,"column_end":45}},{"value":"/ assert_relative_eq!(mat, expected);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":76832,"byte_end":76871,"line_start":1651,"line_end":1651,"column_start":5,"column_end":44}}]},{"kind":"Mod","id":{"krate":0,"index":316},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/constraint.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"constraint","qualname":"::base::constraint","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/constraint.rs","parent":null,"children":[{"krate":0,"index":317},{"krate":0,"index":321},{"krate":0,"index":323},{"krate":0,"index":328},{"krate":0,"index":333},{"krate":0,"index":337},{"krate":0,"index":340},{"krate":0,"index":343},{"krate":0,"index":346},{"krate":0,"index":8252},{"krate":0,"index":8256},{"krate":0,"index":8259},{"krate":0,"index":8262},{"krate":0,"index":8265},{"krate":0,"index":8269},{"krate":0,"index":8272},{"krate":0,"index":8275},{"krate":0,"index":347},{"krate":0,"index":351},{"krate":0,"index":354},{"krate":0,"index":357}],"decl_id":null,"docs":" Compatibility constraints between matrix shapes, e.g., for addition or multiplication.\n","sig":null,"attributes":[{"value":"! Compatibility constraints between matrix shapes, e.g., for addition or multiplication.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/constraint.rs","byte_start":77483,"byte_end":77573,"line_start":1,"line_end":1,"column_start":1,"column_end":91}}]},{"kind":"Struct","id":{"krate":0,"index":321},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/constraint.rs","byte_start":77702,"byte_end":77717,"line_start":6,"line_end":6,"column_start":12,"column_end":27},"name":"ShapeConstraint","qualname":"::base::constraint::ShapeConstraint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type used in `where` clauses for enforcing constraints.\n","sig":null,"attributes":[{"value":"/ A type used in `where` clauses for enforcing constraints.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/constraint.rs","byte_start":77629,"byte_end":77690,"line_start":5,"line_end":5,"column_start":1,"column_end":62}}]},{"kind":"Trait","id":{"krate":0,"index":323},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/constraint.rs","byte_start":77778,"byte_end":77793,"line_start":9,"line_end":9,"column_start":11,"column_end":26},"name":"AreMultipliable","qualname":"::base::constraint::AreMultipliable","value":"AreMultipliable<R1: Dim, C1: Dim, R2: Dim, C2: Dim>: DimEq<C1, R2>","parent":null,"children":[],"decl_id":null,"docs":" Constraints `C1` and `R2` to be equivalent.\n","sig":null,"attributes":[{"value":"/ Constraints `C1` and `R2` to be equivalent.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/constraint.rs","byte_start":77720,"byte_end":77767,"line_start":8,"line_end":8,"column_start":1,"column_end":48}}]},{"kind":"Trait","id":{"krate":0,"index":333},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/constraint.rs","byte_start":78046,"byte_end":78051,"line_start":17,"line_end":17,"column_start":11,"column_end":16},"name":"DimEq","qualname":"::base::constraint::DimEq","value":"DimEq<D1: Dim, D2: Dim>","parent":null,"children":[{"krate":0,"index":336}],"decl_id":null,"docs":" Constraints `D1` and `D2` to be equivalent.\n","sig":null,"attributes":[{"value":"/ Constraints `D1` and `D2` to be equivalent.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/constraint.rs","byte_start":77988,"byte_end":78035,"line_start":16,"line_end":16,"column_start":1,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":336},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/constraint.rs","byte_start":78200,"byte_end":78214,"line_start":20,"line_end":20,"column_start":10,"column_end":24},"name":"Representative","qualname":"::base::constraint::DimEq::Representative","value":"type Representative: Dim;","parent":{"krate":0,"index":333},"children":[],"decl_id":null,"docs":" This is either equal to `D1` or `D2`, always choosing the one (if any) which is a type-level\n constant.\n","sig":null,"attributes":[{"value":"/ This is either equal to `D1` or `D2`, always choosing the one (if any) which is a type-level","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/constraint.rs","byte_start":78076,"byte_end":78172,"line_start":18,"line_end":18,"column_start":5,"column_end":101}},{"value":"/ constant.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/constraint.rs","byte_start":78177,"byte_end":78190,"line_start":19,"line_end":19,"column_start":5,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":8252},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/constraint.rs","byte_start":79447,"byte_end":79463,"line_start":63,"line_end":63,"column_start":5,"column_end":21},"name":"SameNumberOfRows","qualname":"::base::constraint::SameNumberOfRows","value":"SameNumberOfRows<D1: Dim, D2: Dim>: DimEq<D1, D2> + DimEq<D2, D1>","parent":null,"children":[{"krate":0,"index":8255}],"decl_id":null,"docs":"Constraints `D1` and `D2` to be equivalent. They are both assumed to be the number of rows of a matrix.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":8265},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/constraint.rs","byte_start":79597,"byte_end":79616,"line_start":67,"line_end":67,"column_start":5,"column_end":24},"name":"SameNumberOfColumns","qualname":"::base::constraint::SameNumberOfColumns","value":"SameNumberOfColumns<D1: Dim, D2: Dim>: DimEq<D1, D2> + DimEq<D2, D1>","parent":null,"children":[{"krate":0,"index":8268}],"decl_id":null,"docs":"Constraints `D1` and `D2` to be equivalent. They are both assumed to be the number of columns of a matrix.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":347},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/constraint.rs","byte_start":79762,"byte_end":79775,"line_start":72,"line_end":72,"column_start":11,"column_end":24},"name":"SameDimension","qualname":"::base::constraint::SameDimension","value":"SameDimension<D1: Dim, D2: Dim>: SameNumberOfRows<D1, D2> + SameNumberOfColumns<D1, D2>","parent":null,"children":[{"krate":0,"index":350}],"decl_id":null,"docs":" Constraints D1 and D2 to be equivalent, where they both designate dimensions of algebraic\n entities (e.g. square matrices).\n","sig":null,"attributes":[{"value":"/ Constraints D1 and D2 to be equivalent, where they both designate dimensions of algebraic","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/constraint.rs","byte_start":79621,"byte_end":79714,"line_start":70,"line_end":70,"column_start":1,"column_end":94}},{"value":"/ entities (e.g. square matrices).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/constraint.rs","byte_start":79715,"byte_end":79751,"line_start":71,"line_end":71,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":350},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/constraint.rs","byte_start":79984,"byte_end":79998,"line_start":77,"line_end":77,"column_start":10,"column_end":24},"name":"Representative","qualname":"::base::constraint::SameDimension::Representative","value":"type Representative: Dim;","parent":{"krate":0,"index":347},"children":[],"decl_id":null,"docs":" This is either equal to `D1` or `D2`, always choosing the one (if any) which is a type-level\n constant.\n","sig":null,"attributes":[{"value":"/ This is either equal to `D1` or `D2`, always choosing the one (if any) which is a type-level","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/constraint.rs","byte_start":79860,"byte_end":79956,"line_start":75,"line_end":75,"column_start":5,"column_end":101}},{"value":"/ constant.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/constraint.rs","byte_start":79961,"byte_end":79974,"line_start":76,"line_end":76,"column_start":5,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":360},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"coordinates","qualname":"::base::coordinates","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","parent":null,"children":[{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":365},{"krate":0,"index":372},{"krate":0,"index":375},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":8278},{"krate":0,"index":8299},{"krate":0,"index":8301},{"krate":0,"index":8293},{"krate":0,"index":8295},{"krate":0,"index":8290},{"krate":0,"index":8286},{"krate":0,"index":8283},{"krate":0,"index":8281},{"krate":0,"index":8304},{"krate":0,"index":8326},{"krate":0,"index":8328},{"krate":0,"index":8320},{"krate":0,"index":8322},{"krate":0,"index":8317},{"krate":0,"index":8313},{"krate":0,"index":8310},{"krate":0,"index":8308},{"krate":0,"index":8331},{"krate":0,"index":8354},{"krate":0,"index":8356},{"krate":0,"index":8348},{"krate":0,"index":8350},{"krate":0,"index":8345},{"krate":0,"index":8341},{"krate":0,"index":8338},{"krate":0,"index":8336},{"krate":0,"index":8359},{"krate":0,"index":8383},{"krate":0,"index":8385},{"krate":0,"index":8377},{"krate":0,"index":8379},{"krate":0,"index":8374},{"krate":0,"index":8370},{"krate":0,"index":8367},{"krate":0,"index":8365},{"krate":0,"index":8388},{"krate":0,"index":8413},{"krate":0,"index":8415},{"krate":0,"index":8407},{"krate":0,"index":8409},{"krate":0,"index":8404},{"krate":0,"index":8400},{"krate":0,"index":8397},{"krate":0,"index":8395},{"krate":0,"index":8418},{"krate":0,"index":8444},{"krate":0,"index":8446},{"krate":0,"index":8438},{"krate":0,"index":8440},{"krate":0,"index":8435},{"krate":0,"index":8431},{"krate":0,"index":8428},{"krate":0,"index":8426},{"krate":0,"index":8449},{"krate":0,"index":8473},{"krate":0,"index":8475},{"krate":0,"index":8467},{"krate":0,"index":8469},{"krate":0,"index":8464},{"krate":0,"index":8460},{"krate":0,"index":8457},{"krate":0,"index":8455},{"krate":0,"index":8478},{"krate":0,"index":8502},{"krate":0,"index":8504},{"krate":0,"index":8496},{"krate":0,"index":8498},{"krate":0,"index":8493},{"krate":0,"index":8489},{"krate":0,"index":8486},{"krate":0,"index":8484},{"krate":0,"index":8507},{"krate":0,"index":8533},{"krate":0,"index":8535},{"krate":0,"index":8527},{"krate":0,"index":8529},{"krate":0,"index":8524},{"krate":0,"index":8520},{"krate":0,"index":8517},{"krate":0,"index":8515},{"krate":0,"index":8538},{"krate":0,"index":8566},{"krate":0,"index":8568},{"krate":0,"index":8560},{"krate":0,"index":8562},{"krate":0,"index":8557},{"krate":0,"index":8553},{"krate":0,"index":8550},{"krate":0,"index":8548},{"krate":0,"index":8571},{"krate":0,"index":8601},{"krate":0,"index":8603},{"krate":0,"index":8595},{"krate":0,"index":8597},{"krate":0,"index":8592},{"krate":0,"index":8588},{"krate":0,"index":8585},{"krate":0,"index":8583},{"krate":0,"index":8606},{"krate":0,"index":8638},{"krate":0,"index":8640},{"krate":0,"index":8632},{"krate":0,"index":8634},{"krate":0,"index":8629},{"krate":0,"index":8625},{"krate":0,"index":8622},{"krate":0,"index":8620},{"krate":0,"index":8643},{"krate":0,"index":8669},{"krate":0,"index":8671},{"krate":0,"index":8663},{"krate":0,"index":8665},{"krate":0,"index":8660},{"krate":0,"index":8656},{"krate":0,"index":8653},{"krate":0,"index":8651},{"krate":0,"index":8674},{"krate":0,"index":8703},{"krate":0,"index":8705},{"krate":0,"index":8697},{"krate":0,"index":8699},{"krate":0,"index":8694},{"krate":0,"index":8690},{"krate":0,"index":8687},{"krate":0,"index":8685},{"krate":0,"index":8708},{"krate":0,"index":8740},{"krate":0,"index":8742},{"krate":0,"index":8734},{"krate":0,"index":8736},{"krate":0,"index":8731},{"krate":0,"index":8727},{"krate":0,"index":8724},{"krate":0,"index":8722},{"krate":0,"index":8745},{"krate":0,"index":8780},{"krate":0,"index":8782},{"krate":0,"index":8774},{"krate":0,"index":8776},{"krate":0,"index":8771},{"krate":0,"index":8767},{"krate":0,"index":8764},{"krate":0,"index":8762},{"krate":0,"index":8785},{"krate":0,"index":8823},{"krate":0,"index":8825},{"krate":0,"index":8817},{"krate":0,"index":8819},{"krate":0,"index":8814},{"krate":0,"index":8810},{"krate":0,"index":8807},{"krate":0,"index":8805},{"krate":0,"index":8828},{"krate":0,"index":8856},{"krate":0,"index":8858},{"krate":0,"index":8850},{"krate":0,"index":8852},{"krate":0,"index":8847},{"krate":0,"index":8843},{"krate":0,"index":8840},{"krate":0,"index":8838},{"krate":0,"index":8861},{"krate":0,"index":8893},{"krate":0,"index":8895},{"krate":0,"index":8887},{"krate":0,"index":8889},{"krate":0,"index":8884},{"krate":0,"index":8880},{"krate":0,"index":8877},{"krate":0,"index":8875},{"krate":0,"index":8898},{"krate":0,"index":8934},{"krate":0,"index":8936},{"krate":0,"index":8928},{"krate":0,"index":8930},{"krate":0,"index":8925},{"krate":0,"index":8921},{"krate":0,"index":8918},{"krate":0,"index":8916},{"krate":0,"index":8939},{"krate":0,"index":8979},{"krate":0,"index":8981},{"krate":0,"index":8973},{"krate":0,"index":8975},{"krate":0,"index":8970},{"krate":0,"index":8966},{"krate":0,"index":8963},{"krate":0,"index":8961},{"krate":0,"index":8984},{"krate":0,"index":9028},{"krate":0,"index":9030},{"krate":0,"index":9022},{"krate":0,"index":9024},{"krate":0,"index":9019},{"krate":0,"index":9015},{"krate":0,"index":9012},{"krate":0,"index":9010},{"krate":0,"index":9033},{"krate":0,"index":9063},{"krate":0,"index":9065},{"krate":0,"index":9057},{"krate":0,"index":9059},{"krate":0,"index":9054},{"krate":0,"index":9050},{"krate":0,"index":9047},{"krate":0,"index":9045},{"krate":0,"index":9068},{"krate":0,"index":9103},{"krate":0,"index":9105},{"krate":0,"index":9097},{"krate":0,"index":9099},{"krate":0,"index":9094},{"krate":0,"index":9090},{"krate":0,"index":9087},{"krate":0,"index":9085},{"krate":0,"index":9108},{"krate":0,"index":9148},{"krate":0,"index":9150},{"krate":0,"index":9142},{"krate":0,"index":9144},{"krate":0,"index":9139},{"krate":0,"index":9135},{"krate":0,"index":9132},{"krate":0,"index":9130},{"krate":0,"index":9153},{"krate":0,"index":9198},{"krate":0,"index":9200},{"krate":0,"index":9192},{"krate":0,"index":9194},{"krate":0,"index":9189},{"krate":0,"index":9185},{"krate":0,"index":9182},{"krate":0,"index":9180},{"krate":0,"index":9203},{"krate":0,"index":9253},{"krate":0,"index":9255},{"krate":0,"index":9247},{"krate":0,"index":9249},{"krate":0,"index":9244},{"krate":0,"index":9240},{"krate":0,"index":9237},{"krate":0,"index":9235},{"krate":0,"index":9258},{"krate":0,"index":9290},{"krate":0,"index":9292},{"krate":0,"index":9284},{"krate":0,"index":9286},{"krate":0,"index":9281},{"krate":0,"index":9277},{"krate":0,"index":9274},{"krate":0,"index":9272},{"krate":0,"index":9295},{"krate":0,"index":9333},{"krate":0,"index":9335},{"krate":0,"index":9327},{"krate":0,"index":9329},{"krate":0,"index":9324},{"krate":0,"index":9320},{"krate":0,"index":9317},{"krate":0,"index":9315},{"krate":0,"index":9338},{"krate":0,"index":9382},{"krate":0,"index":9384},{"krate":0,"index":9376},{"krate":0,"index":9378},{"krate":0,"index":9373},{"krate":0,"index":9369},{"krate":0,"index":9366},{"krate":0,"index":9364},{"krate":0,"index":9387},{"krate":0,"index":9437},{"krate":0,"index":9439},{"krate":0,"index":9431},{"krate":0,"index":9433},{"krate":0,"index":9428},{"krate":0,"index":9424},{"krate":0,"index":9421},{"krate":0,"index":9419},{"krate":0,"index":9442},{"krate":0,"index":9498},{"krate":0,"index":9500},{"krate":0,"index":9492},{"krate":0,"index":9494},{"krate":0,"index":9489},{"krate":0,"index":9485},{"krate":0,"index":9482},{"krate":0,"index":9480},{"krate":0,"index":9503},{"krate":0,"index":9508},{"krate":0,"index":9512},{"krate":0,"index":9517},{"krate":0,"index":9521},{"krate":0,"index":9526},{"krate":0,"index":9530},{"krate":0,"index":9535},{"krate":0,"index":9539},{"krate":0,"index":9544},{"krate":0,"index":9548},{"krate":0,"index":9553},{"krate":0,"index":9557},{"krate":0,"index":9562},{"krate":0,"index":9566},{"krate":0,"index":9571},{"krate":0,"index":9575},{"krate":0,"index":9580},{"krate":0,"index":9584},{"krate":0,"index":9589},{"krate":0,"index":9593},{"krate":0,"index":9598},{"krate":0,"index":9602},{"krate":0,"index":9607},{"krate":0,"index":9611},{"krate":0,"index":9616},{"krate":0,"index":9620},{"krate":0,"index":9625},{"krate":0,"index":9629},{"krate":0,"index":9634},{"krate":0,"index":9638},{"krate":0,"index":9643},{"krate":0,"index":9647},{"krate":0,"index":9652},{"krate":0,"index":9656},{"krate":0,"index":9661},{"krate":0,"index":9665},{"krate":0,"index":9670},{"krate":0,"index":9674},{"krate":0,"index":9679},{"krate":0,"index":9683},{"krate":0,"index":9688},{"krate":0,"index":9692},{"krate":0,"index":9697},{"krate":0,"index":9701},{"krate":0,"index":9706},{"krate":0,"index":9710},{"krate":0,"index":9715},{"krate":0,"index":9719},{"krate":0,"index":9724},{"krate":0,"index":9728},{"krate":0,"index":9733},{"krate":0,"index":9737},{"krate":0,"index":9742},{"krate":0,"index":9746},{"krate":0,"index":9751},{"krate":0,"index":9755},{"krate":0,"index":9760},{"krate":0,"index":9764},{"krate":0,"index":9769},{"krate":0,"index":9773},{"krate":0,"index":9778},{"krate":0,"index":9782},{"krate":0,"index":9787},{"krate":0,"index":9791},{"krate":0,"index":9796},{"krate":0,"index":9800},{"krate":0,"index":9805},{"krate":0,"index":9809},{"krate":0,"index":9814},{"krate":0,"index":9818},{"krate":0,"index":9823}],"decl_id":null,"docs":" Structures to which matrices and vector can be auto-dereferenced (through `Deref`) to access\n components using their names. For example, if `v` is a 3D vector, one can write `v.z` instead\n of `v[2]`.\n","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":80289,"byte_end":80312,"line_start":1,"line_end":1,"column_start":1,"column_end":24}},{"value":"! Structures to which matrices and vector can be auto-dereferenced (through `Deref`) to access","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":80314,"byte_end":80410,"line_start":3,"line_end":3,"column_start":1,"column_end":97}},{"value":"! components using their names. For example, if `v` is a 3D vector, one can write `v.z` instead","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":80411,"byte_end":80508,"line_start":4,"line_end":4,"column_start":1,"column_end":98}},{"value":"! of `v[2]`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":80509,"byte_end":80523,"line_start":5,"line_end":5,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8278},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":81999,"byte_end":82000,"line_start":60,"line_end":60,"column_start":14,"column_end":15},"name":"X","qualname":"::base::coordinates::X","value":"X { x }","parent":null,"children":[{"krate":0,"index":8280}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":80884,"byte_end":80971,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":80980,"byte_end":81041,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":81050,"byte_end":81060,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8280},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82002,"byte_end":82003,"line_start":60,"line_end":60,"column_start":17,"column_end":18},"name":"x","qualname":"::base::coordinates::X::x","value":"N","parent":{"krate":0,"index":8278},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8304},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82019,"byte_end":82021,"line_start":61,"line_end":61,"column_start":14,"column_end":16},"name":"XY","qualname":"::base::coordinates::XY","value":"XY { x, y }","parent":null,"children":[{"krate":0,"index":8306},{"krate":0,"index":8307}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":80884,"byte_end":80971,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":80980,"byte_end":81041,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":81050,"byte_end":81060,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8306},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82023,"byte_end":82024,"line_start":61,"line_end":61,"column_start":18,"column_end":19},"name":"x","qualname":"::base::coordinates::XY::x","value":"N","parent":{"krate":0,"index":8304},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8307},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82026,"byte_end":82027,"line_start":61,"line_end":61,"column_start":21,"column_end":22},"name":"y","qualname":"::base::coordinates::XY::y","value":"N","parent":{"krate":0,"index":8304},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8331},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82043,"byte_end":82046,"line_start":62,"line_end":62,"column_start":14,"column_end":17},"name":"XYZ","qualname":"::base::coordinates::XYZ","value":"XYZ { x, y, z }","parent":null,"children":[{"krate":0,"index":8333},{"krate":0,"index":8334},{"krate":0,"index":8335}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":80884,"byte_end":80971,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":80980,"byte_end":81041,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":81050,"byte_end":81060,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8333},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82048,"byte_end":82049,"line_start":62,"line_end":62,"column_start":19,"column_end":20},"name":"x","qualname":"::base::coordinates::XYZ::x","value":"N","parent":{"krate":0,"index":8331},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8334},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82051,"byte_end":82052,"line_start":62,"line_end":62,"column_start":22,"column_end":23},"name":"y","qualname":"::base::coordinates::XYZ::y","value":"N","parent":{"krate":0,"index":8331},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8335},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82054,"byte_end":82055,"line_start":62,"line_end":62,"column_start":25,"column_end":26},"name":"z","qualname":"::base::coordinates::XYZ::z","value":"N","parent":{"krate":0,"index":8331},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8359},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82071,"byte_end":82075,"line_start":63,"line_end":63,"column_start":14,"column_end":18},"name":"XYZW","qualname":"::base::coordinates::XYZW","value":"XYZW { x, y, z, w }","parent":null,"children":[{"krate":0,"index":8361},{"krate":0,"index":8362},{"krate":0,"index":8363},{"krate":0,"index":8364}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":80884,"byte_end":80971,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":80980,"byte_end":81041,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":81050,"byte_end":81060,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8361},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82077,"byte_end":82078,"line_start":63,"line_end":63,"column_start":20,"column_end":21},"name":"x","qualname":"::base::coordinates::XYZW::x","value":"N","parent":{"krate":0,"index":8359},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8362},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82080,"byte_end":82081,"line_start":63,"line_end":63,"column_start":23,"column_end":24},"name":"y","qualname":"::base::coordinates::XYZW::y","value":"N","parent":{"krate":0,"index":8359},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8363},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82083,"byte_end":82084,"line_start":63,"line_end":63,"column_start":26,"column_end":27},"name":"z","qualname":"::base::coordinates::XYZW::z","value":"N","parent":{"krate":0,"index":8359},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8364},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82086,"byte_end":82087,"line_start":63,"line_end":63,"column_start":29,"column_end":30},"name":"w","qualname":"::base::coordinates::XYZW::w","value":"N","parent":{"krate":0,"index":8359},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8388},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82103,"byte_end":82108,"line_start":64,"line_end":64,"column_start":14,"column_end":19},"name":"XYZWA","qualname":"::base::coordinates::XYZWA","value":"XYZWA { x, y, z, w, a }","parent":null,"children":[{"krate":0,"index":8390},{"krate":0,"index":8391},{"krate":0,"index":8392},{"krate":0,"index":8393},{"krate":0,"index":8394}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":80884,"byte_end":80971,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":80980,"byte_end":81041,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":81050,"byte_end":81060,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8390},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82110,"byte_end":82111,"line_start":64,"line_end":64,"column_start":21,"column_end":22},"name":"x","qualname":"::base::coordinates::XYZWA::x","value":"N","parent":{"krate":0,"index":8388},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8391},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82113,"byte_end":82114,"line_start":64,"line_end":64,"column_start":24,"column_end":25},"name":"y","qualname":"::base::coordinates::XYZWA::y","value":"N","parent":{"krate":0,"index":8388},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8392},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82116,"byte_end":82117,"line_start":64,"line_end":64,"column_start":27,"column_end":28},"name":"z","qualname":"::base::coordinates::XYZWA::z","value":"N","parent":{"krate":0,"index":8388},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8393},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82119,"byte_end":82120,"line_start":64,"line_end":64,"column_start":30,"column_end":31},"name":"w","qualname":"::base::coordinates::XYZWA::w","value":"N","parent":{"krate":0,"index":8388},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8394},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82122,"byte_end":82123,"line_start":64,"line_end":64,"column_start":33,"column_end":34},"name":"a","qualname":"::base::coordinates::XYZWA::a","value":"N","parent":{"krate":0,"index":8388},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8418},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82139,"byte_end":82145,"line_start":65,"line_end":65,"column_start":14,"column_end":20},"name":"XYZWAB","qualname":"::base::coordinates::XYZWAB","value":"XYZWAB { x, y, z, w, a, b }","parent":null,"children":[{"krate":0,"index":8420},{"krate":0,"index":8421},{"krate":0,"index":8422},{"krate":0,"index":8423},{"krate":0,"index":8424},{"krate":0,"index":8425}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":80884,"byte_end":80971,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":80980,"byte_end":81041,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":81050,"byte_end":81060,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8420},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82147,"byte_end":82148,"line_start":65,"line_end":65,"column_start":22,"column_end":23},"name":"x","qualname":"::base::coordinates::XYZWAB::x","value":"N","parent":{"krate":0,"index":8418},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8421},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82150,"byte_end":82151,"line_start":65,"line_end":65,"column_start":25,"column_end":26},"name":"y","qualname":"::base::coordinates::XYZWAB::y","value":"N","parent":{"krate":0,"index":8418},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8422},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82153,"byte_end":82154,"line_start":65,"line_end":65,"column_start":28,"column_end":29},"name":"z","qualname":"::base::coordinates::XYZWAB::z","value":"N","parent":{"krate":0,"index":8418},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8423},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82156,"byte_end":82157,"line_start":65,"line_end":65,"column_start":31,"column_end":32},"name":"w","qualname":"::base::coordinates::XYZWAB::w","value":"N","parent":{"krate":0,"index":8418},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8424},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82159,"byte_end":82160,"line_start":65,"line_end":65,"column_start":34,"column_end":35},"name":"a","qualname":"::base::coordinates::XYZWAB::a","value":"N","parent":{"krate":0,"index":8418},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8425},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82162,"byte_end":82163,"line_start":65,"line_end":65,"column_start":37,"column_end":38},"name":"b","qualname":"::base::coordinates::XYZWAB::b","value":"N","parent":{"krate":0,"index":8418},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8449},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82179,"byte_end":82183,"line_start":66,"line_end":66,"column_start":14,"column_end":18},"name":"IJKW","qualname":"::base::coordinates::IJKW","value":"IJKW { i, j, k, w }","parent":null,"children":[{"krate":0,"index":8451},{"krate":0,"index":8452},{"krate":0,"index":8453},{"krate":0,"index":8454}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":80884,"byte_end":80971,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":80980,"byte_end":81041,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":81050,"byte_end":81060,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8451},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82185,"byte_end":82186,"line_start":66,"line_end":66,"column_start":20,"column_end":21},"name":"i","qualname":"::base::coordinates::IJKW::i","value":"N","parent":{"krate":0,"index":8449},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8452},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82188,"byte_end":82189,"line_start":66,"line_end":66,"column_start":23,"column_end":24},"name":"j","qualname":"::base::coordinates::IJKW::j","value":"N","parent":{"krate":0,"index":8449},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8453},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82191,"byte_end":82192,"line_start":66,"line_end":66,"column_start":26,"column_end":27},"name":"k","qualname":"::base::coordinates::IJKW::k","value":"N","parent":{"krate":0,"index":8449},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8454},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82194,"byte_end":82195,"line_start":66,"line_end":66,"column_start":29,"column_end":30},"name":"w","qualname":"::base::coordinates::IJKW::w","value":"N","parent":{"krate":0,"index":8449},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8478},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82256,"byte_end":82260,"line_start":71,"line_end":71,"column_start":14,"column_end":18},"name":"M2x2","qualname":"::base::coordinates::M2x2","value":"M2x2 { m11, m21, m12, m22 }","parent":null,"children":[{"krate":0,"index":8480},{"krate":0,"index":8481},{"krate":0,"index":8482},{"krate":0,"index":8483}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":80884,"byte_end":80971,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":80980,"byte_end":81041,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":81050,"byte_end":81060,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8480},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82262,"byte_end":82265,"line_start":71,"line_end":71,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M2x2::m11","value":"N","parent":{"krate":0,"index":8478},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8481},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82267,"byte_end":82270,"line_start":71,"line_end":71,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M2x2::m21","value":"N","parent":{"krate":0,"index":8478},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8482},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82291,"byte_end":82294,"line_start":72,"line_end":72,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M2x2::m12","value":"N","parent":{"krate":0,"index":8478},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8483},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82296,"byte_end":82299,"line_start":72,"line_end":72,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M2x2::m22","value":"N","parent":{"krate":0,"index":8478},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8507},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82315,"byte_end":82319,"line_start":73,"line_end":73,"column_start":14,"column_end":18},"name":"M2x3","qualname":"::base::coordinates::M2x3","value":"M2x3 { m11, m21, m12, m22, m13, m23 }","parent":null,"children":[{"krate":0,"index":8509},{"krate":0,"index":8510},{"krate":0,"index":8511},{"krate":0,"index":8512},{"krate":0,"index":8513},{"krate":0,"index":8514}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":80884,"byte_end":80971,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":80980,"byte_end":81041,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":81050,"byte_end":81060,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8509},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82321,"byte_end":82324,"line_start":73,"line_end":73,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M2x3::m11","value":"N","parent":{"krate":0,"index":8507},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8510},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82326,"byte_end":82329,"line_start":73,"line_end":73,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M2x3::m21","value":"N","parent":{"krate":0,"index":8507},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8511},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82350,"byte_end":82353,"line_start":74,"line_end":74,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M2x3::m12","value":"N","parent":{"krate":0,"index":8507},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8512},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82355,"byte_end":82358,"line_start":74,"line_end":74,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M2x3::m22","value":"N","parent":{"krate":0,"index":8507},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8513},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82379,"byte_end":82382,"line_start":75,"line_end":75,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M2x3::m13","value":"N","parent":{"krate":0,"index":8507},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8514},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82384,"byte_end":82387,"line_start":75,"line_end":75,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M2x3::m23","value":"N","parent":{"krate":0,"index":8507},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8538},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82403,"byte_end":82407,"line_start":76,"line_end":76,"column_start":14,"column_end":18},"name":"M2x4","qualname":"::base::coordinates::M2x4","value":"M2x4 { m11, m21, m12, m22, m13, m23, m14, m24 }","parent":null,"children":[{"krate":0,"index":8540},{"krate":0,"index":8541},{"krate":0,"index":8542},{"krate":0,"index":8543},{"krate":0,"index":8544},{"krate":0,"index":8545},{"krate":0,"index":8546},{"krate":0,"index":8547}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":80884,"byte_end":80971,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":80980,"byte_end":81041,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":81050,"byte_end":81060,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8540},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82409,"byte_end":82412,"line_start":76,"line_end":76,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M2x4::m11","value":"N","parent":{"krate":0,"index":8538},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8541},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82414,"byte_end":82417,"line_start":76,"line_end":76,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M2x4::m21","value":"N","parent":{"krate":0,"index":8538},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8542},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82438,"byte_end":82441,"line_start":77,"line_end":77,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M2x4::m12","value":"N","parent":{"krate":0,"index":8538},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8543},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82443,"byte_end":82446,"line_start":77,"line_end":77,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M2x4::m22","value":"N","parent":{"krate":0,"index":8538},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8544},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82467,"byte_end":82470,"line_start":78,"line_end":78,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M2x4::m13","value":"N","parent":{"krate":0,"index":8538},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8545},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82472,"byte_end":82475,"line_start":78,"line_end":78,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M2x4::m23","value":"N","parent":{"krate":0,"index":8538},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8546},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82496,"byte_end":82499,"line_start":79,"line_end":79,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M2x4::m14","value":"N","parent":{"krate":0,"index":8538},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8547},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82501,"byte_end":82504,"line_start":79,"line_end":79,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M2x4::m24","value":"N","parent":{"krate":0,"index":8538},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8571},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82520,"byte_end":82524,"line_start":80,"line_end":80,"column_start":14,"column_end":18},"name":"M2x5","qualname":"::base::coordinates::M2x5","value":"M2x5 { m11, m21, m12, m22, m13, m23, m14, m24, m15, m25 }","parent":null,"children":[{"krate":0,"index":8573},{"krate":0,"index":8574},{"krate":0,"index":8575},{"krate":0,"index":8576},{"krate":0,"index":8577},{"krate":0,"index":8578},{"krate":0,"index":8579},{"krate":0,"index":8580},{"krate":0,"index":8581},{"krate":0,"index":8582}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":80884,"byte_end":80971,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":80980,"byte_end":81041,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":81050,"byte_end":81060,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8573},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82526,"byte_end":82529,"line_start":80,"line_end":80,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M2x5::m11","value":"N","parent":{"krate":0,"index":8571},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8574},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82531,"byte_end":82534,"line_start":80,"line_end":80,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M2x5::m21","value":"N","parent":{"krate":0,"index":8571},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8575},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82555,"byte_end":82558,"line_start":81,"line_end":81,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M2x5::m12","value":"N","parent":{"krate":0,"index":8571},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8576},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82560,"byte_end":82563,"line_start":81,"line_end":81,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M2x5::m22","value":"N","parent":{"krate":0,"index":8571},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8577},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82584,"byte_end":82587,"line_start":82,"line_end":82,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M2x5::m13","value":"N","parent":{"krate":0,"index":8571},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8578},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82589,"byte_end":82592,"line_start":82,"line_end":82,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M2x5::m23","value":"N","parent":{"krate":0,"index":8571},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8579},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82613,"byte_end":82616,"line_start":83,"line_end":83,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M2x5::m14","value":"N","parent":{"krate":0,"index":8571},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8580},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82618,"byte_end":82621,"line_start":83,"line_end":83,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M2x5::m24","value":"N","parent":{"krate":0,"index":8571},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8581},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82642,"byte_end":82645,"line_start":84,"line_end":84,"column_start":20,"column_end":23},"name":"m15","qualname":"::base::coordinates::M2x5::m15","value":"N","parent":{"krate":0,"index":8571},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8582},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82647,"byte_end":82650,"line_start":84,"line_end":84,"column_start":25,"column_end":28},"name":"m25","qualname":"::base::coordinates::M2x5::m25","value":"N","parent":{"krate":0,"index":8571},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8606},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82666,"byte_end":82670,"line_start":85,"line_end":85,"column_start":14,"column_end":18},"name":"M2x6","qualname":"::base::coordinates::M2x6","value":"M2x6 { m11, m21, m12, m22, m13, m23, m14, m24, m15, m25, m16, m26 }","parent":null,"children":[{"krate":0,"index":8608},{"krate":0,"index":8609},{"krate":0,"index":8610},{"krate":0,"index":8611},{"krate":0,"index":8612},{"krate":0,"index":8613},{"krate":0,"index":8614},{"krate":0,"index":8615},{"krate":0,"index":8616},{"krate":0,"index":8617},{"krate":0,"index":8618},{"krate":0,"index":8619}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":80884,"byte_end":80971,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":80980,"byte_end":81041,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":81050,"byte_end":81060,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8608},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82672,"byte_end":82675,"line_start":85,"line_end":85,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M2x6::m11","value":"N","parent":{"krate":0,"index":8606},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8609},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82677,"byte_end":82680,"line_start":85,"line_end":85,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M2x6::m21","value":"N","parent":{"krate":0,"index":8606},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8610},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82701,"byte_end":82704,"line_start":86,"line_end":86,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M2x6::m12","value":"N","parent":{"krate":0,"index":8606},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8611},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82706,"byte_end":82709,"line_start":86,"line_end":86,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M2x6::m22","value":"N","parent":{"krate":0,"index":8606},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8612},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82730,"byte_end":82733,"line_start":87,"line_end":87,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M2x6::m13","value":"N","parent":{"krate":0,"index":8606},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8613},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82735,"byte_end":82738,"line_start":87,"line_end":87,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M2x6::m23","value":"N","parent":{"krate":0,"index":8606},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8614},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82759,"byte_end":82762,"line_start":88,"line_end":88,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M2x6::m14","value":"N","parent":{"krate":0,"index":8606},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8615},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82764,"byte_end":82767,"line_start":88,"line_end":88,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M2x6::m24","value":"N","parent":{"krate":0,"index":8606},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8616},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82788,"byte_end":82791,"line_start":89,"line_end":89,"column_start":20,"column_end":23},"name":"m15","qualname":"::base::coordinates::M2x6::m15","value":"N","parent":{"krate":0,"index":8606},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8617},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82793,"byte_end":82796,"line_start":89,"line_end":89,"column_start":25,"column_end":28},"name":"m25","qualname":"::base::coordinates::M2x6::m25","value":"N","parent":{"krate":0,"index":8606},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8618},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82817,"byte_end":82820,"line_start":90,"line_end":90,"column_start":20,"column_end":23},"name":"m16","qualname":"::base::coordinates::M2x6::m16","value":"N","parent":{"krate":0,"index":8606},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8619},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82822,"byte_end":82825,"line_start":90,"line_end":90,"column_start":25,"column_end":28},"name":"m26","qualname":"::base::coordinates::M2x6::m26","value":"N","parent":{"krate":0,"index":8606},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8643},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82886,"byte_end":82890,"line_start":95,"line_end":95,"column_start":14,"column_end":18},"name":"M3x2","qualname":"::base::coordinates::M3x2","value":"M3x2 { m11, m21, m31, m12, m22, m32 }","parent":null,"children":[{"krate":0,"index":8645},{"krate":0,"index":8646},{"krate":0,"index":8647},{"krate":0,"index":8648},{"krate":0,"index":8649},{"krate":0,"index":8650}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":80884,"byte_end":80971,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":80980,"byte_end":81041,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":81050,"byte_end":81060,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8645},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82892,"byte_end":82895,"line_start":95,"line_end":95,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M3x2::m11","value":"N","parent":{"krate":0,"index":8643},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8646},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82897,"byte_end":82900,"line_start":95,"line_end":95,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M3x2::m21","value":"N","parent":{"krate":0,"index":8643},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8647},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82902,"byte_end":82905,"line_start":95,"line_end":95,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M3x2::m31","value":"N","parent":{"krate":0,"index":8643},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8648},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82926,"byte_end":82929,"line_start":96,"line_end":96,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M3x2::m12","value":"N","parent":{"krate":0,"index":8643},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8649},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82931,"byte_end":82934,"line_start":96,"line_end":96,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M3x2::m22","value":"N","parent":{"krate":0,"index":8643},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8650},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82936,"byte_end":82939,"line_start":96,"line_end":96,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M3x2::m32","value":"N","parent":{"krate":0,"index":8643},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8674},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82955,"byte_end":82959,"line_start":97,"line_end":97,"column_start":14,"column_end":18},"name":"M3x3","qualname":"::base::coordinates::M3x3","value":"M3x3 { m11, m21, m31, m12, m22, m32, m13, m23, m33 }","parent":null,"children":[{"krate":0,"index":8676},{"krate":0,"index":8677},{"krate":0,"index":8678},{"krate":0,"index":8679},{"krate":0,"index":8680},{"krate":0,"index":8681},{"krate":0,"index":8682},{"krate":0,"index":8683},{"krate":0,"index":8684}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":80884,"byte_end":80971,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":80980,"byte_end":81041,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":81050,"byte_end":81060,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8676},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82961,"byte_end":82964,"line_start":97,"line_end":97,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M3x3::m11","value":"N","parent":{"krate":0,"index":8674},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8677},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82966,"byte_end":82969,"line_start":97,"line_end":97,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M3x3::m21","value":"N","parent":{"krate":0,"index":8674},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8678},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82971,"byte_end":82974,"line_start":97,"line_end":97,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M3x3::m31","value":"N","parent":{"krate":0,"index":8674},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8679},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":82995,"byte_end":82998,"line_start":98,"line_end":98,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M3x3::m12","value":"N","parent":{"krate":0,"index":8674},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8680},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83000,"byte_end":83003,"line_start":98,"line_end":98,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M3x3::m22","value":"N","parent":{"krate":0,"index":8674},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8681},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83005,"byte_end":83008,"line_start":98,"line_end":98,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M3x3::m32","value":"N","parent":{"krate":0,"index":8674},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8682},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83029,"byte_end":83032,"line_start":99,"line_end":99,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M3x3::m13","value":"N","parent":{"krate":0,"index":8674},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8683},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83034,"byte_end":83037,"line_start":99,"line_end":99,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M3x3::m23","value":"N","parent":{"krate":0,"index":8674},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8684},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83039,"byte_end":83042,"line_start":99,"line_end":99,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M3x3::m33","value":"N","parent":{"krate":0,"index":8674},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8708},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83058,"byte_end":83062,"line_start":100,"line_end":100,"column_start":14,"column_end":18},"name":"M3x4","qualname":"::base::coordinates::M3x4","value":"M3x4 { m11, m21, m31, m12, m22, m32, m13, m23, m33, m14, m24, m34 }","parent":null,"children":[{"krate":0,"index":8710},{"krate":0,"index":8711},{"krate":0,"index":8712},{"krate":0,"index":8713},{"krate":0,"index":8714},{"krate":0,"index":8715},{"krate":0,"index":8716},{"krate":0,"index":8717},{"krate":0,"index":8718},{"krate":0,"index":8719},{"krate":0,"index":8720},{"krate":0,"index":8721}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":80884,"byte_end":80971,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":80980,"byte_end":81041,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":81050,"byte_end":81060,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8710},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83064,"byte_end":83067,"line_start":100,"line_end":100,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M3x4::m11","value":"N","parent":{"krate":0,"index":8708},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8711},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83069,"byte_end":83072,"line_start":100,"line_end":100,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M3x4::m21","value":"N","parent":{"krate":0,"index":8708},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8712},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83074,"byte_end":83077,"line_start":100,"line_end":100,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M3x4::m31","value":"N","parent":{"krate":0,"index":8708},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8713},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83098,"byte_end":83101,"line_start":101,"line_end":101,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M3x4::m12","value":"N","parent":{"krate":0,"index":8708},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8714},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83103,"byte_end":83106,"line_start":101,"line_end":101,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M3x4::m22","value":"N","parent":{"krate":0,"index":8708},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8715},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83108,"byte_end":83111,"line_start":101,"line_end":101,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M3x4::m32","value":"N","parent":{"krate":0,"index":8708},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8716},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83132,"byte_end":83135,"line_start":102,"line_end":102,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M3x4::m13","value":"N","parent":{"krate":0,"index":8708},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8717},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83137,"byte_end":83140,"line_start":102,"line_end":102,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M3x4::m23","value":"N","parent":{"krate":0,"index":8708},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8718},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83142,"byte_end":83145,"line_start":102,"line_end":102,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M3x4::m33","value":"N","parent":{"krate":0,"index":8708},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8719},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83166,"byte_end":83169,"line_start":103,"line_end":103,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M3x4::m14","value":"N","parent":{"krate":0,"index":8708},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8720},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83171,"byte_end":83174,"line_start":103,"line_end":103,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M3x4::m24","value":"N","parent":{"krate":0,"index":8708},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8721},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83176,"byte_end":83179,"line_start":103,"line_end":103,"column_start":30,"column_end":33},"name":"m34","qualname":"::base::coordinates::M3x4::m34","value":"N","parent":{"krate":0,"index":8708},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8745},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83195,"byte_end":83199,"line_start":104,"line_end":104,"column_start":14,"column_end":18},"name":"M3x5","qualname":"::base::coordinates::M3x5","value":"M3x5 { m11, m21, m31, m12, m22, m32, m13, m23, m33, m14, m24, m34, m15, m25, m35 }","parent":null,"children":[{"krate":0,"index":8747},{"krate":0,"index":8748},{"krate":0,"index":8749},{"krate":0,"index":8750},{"krate":0,"index":8751},{"krate":0,"index":8752},{"krate":0,"index":8753},{"krate":0,"index":8754},{"krate":0,"index":8755},{"krate":0,"index":8756},{"krate":0,"index":8757},{"krate":0,"index":8758},{"krate":0,"index":8759},{"krate":0,"index":8760},{"krate":0,"index":8761}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":80884,"byte_end":80971,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":80980,"byte_end":81041,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":81050,"byte_end":81060,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8747},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83201,"byte_end":83204,"line_start":104,"line_end":104,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M3x5::m11","value":"N","parent":{"krate":0,"index":8745},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8748},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83206,"byte_end":83209,"line_start":104,"line_end":104,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M3x5::m21","value":"N","parent":{"krate":0,"index":8745},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8749},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83211,"byte_end":83214,"line_start":104,"line_end":104,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M3x5::m31","value":"N","parent":{"krate":0,"index":8745},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8750},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83235,"byte_end":83238,"line_start":105,"line_end":105,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M3x5::m12","value":"N","parent":{"krate":0,"index":8745},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8751},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83240,"byte_end":83243,"line_start":105,"line_end":105,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M3x5::m22","value":"N","parent":{"krate":0,"index":8745},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8752},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83245,"byte_end":83248,"line_start":105,"line_end":105,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M3x5::m32","value":"N","parent":{"krate":0,"index":8745},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8753},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83269,"byte_end":83272,"line_start":106,"line_end":106,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M3x5::m13","value":"N","parent":{"krate":0,"index":8745},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8754},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83274,"byte_end":83277,"line_start":106,"line_end":106,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M3x5::m23","value":"N","parent":{"krate":0,"index":8745},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8755},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83279,"byte_end":83282,"line_start":106,"line_end":106,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M3x5::m33","value":"N","parent":{"krate":0,"index":8745},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8756},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83303,"byte_end":83306,"line_start":107,"line_end":107,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M3x5::m14","value":"N","parent":{"krate":0,"index":8745},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8757},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83308,"byte_end":83311,"line_start":107,"line_end":107,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M3x5::m24","value":"N","parent":{"krate":0,"index":8745},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8758},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83313,"byte_end":83316,"line_start":107,"line_end":107,"column_start":30,"column_end":33},"name":"m34","qualname":"::base::coordinates::M3x5::m34","value":"N","parent":{"krate":0,"index":8745},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8759},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83337,"byte_end":83340,"line_start":108,"line_end":108,"column_start":20,"column_end":23},"name":"m15","qualname":"::base::coordinates::M3x5::m15","value":"N","parent":{"krate":0,"index":8745},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8760},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83342,"byte_end":83345,"line_start":108,"line_end":108,"column_start":25,"column_end":28},"name":"m25","qualname":"::base::coordinates::M3x5::m25","value":"N","parent":{"krate":0,"index":8745},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8761},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83347,"byte_end":83350,"line_start":108,"line_end":108,"column_start":30,"column_end":33},"name":"m35","qualname":"::base::coordinates::M3x5::m35","value":"N","parent":{"krate":0,"index":8745},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8785},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83366,"byte_end":83370,"line_start":109,"line_end":109,"column_start":14,"column_end":18},"name":"M3x6","qualname":"::base::coordinates::M3x6","value":"M3x6 { m11, m21, m31, m12, m22, m32, m13, m23, m33, m14, m24, m34, m15, m25, m35, m16, m26, m36 }","parent":null,"children":[{"krate":0,"index":8787},{"krate":0,"index":8788},{"krate":0,"index":8789},{"krate":0,"index":8790},{"krate":0,"index":8791},{"krate":0,"index":8792},{"krate":0,"index":8793},{"krate":0,"index":8794},{"krate":0,"index":8795},{"krate":0,"index":8796},{"krate":0,"index":8797},{"krate":0,"index":8798},{"krate":0,"index":8799},{"krate":0,"index":8800},{"krate":0,"index":8801},{"krate":0,"index":8802},{"krate":0,"index":8803},{"krate":0,"index":8804}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":80884,"byte_end":80971,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":80980,"byte_end":81041,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":81050,"byte_end":81060,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8787},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83372,"byte_end":83375,"line_start":109,"line_end":109,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M3x6::m11","value":"N","parent":{"krate":0,"index":8785},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8788},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83377,"byte_end":83380,"line_start":109,"line_end":109,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M3x6::m21","value":"N","parent":{"krate":0,"index":8785},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8789},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83382,"byte_end":83385,"line_start":109,"line_end":109,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M3x6::m31","value":"N","parent":{"krate":0,"index":8785},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8790},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83406,"byte_end":83409,"line_start":110,"line_end":110,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M3x6::m12","value":"N","parent":{"krate":0,"index":8785},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8791},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83411,"byte_end":83414,"line_start":110,"line_end":110,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M3x6::m22","value":"N","parent":{"krate":0,"index":8785},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8792},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83416,"byte_end":83419,"line_start":110,"line_end":110,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M3x6::m32","value":"N","parent":{"krate":0,"index":8785},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8793},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83440,"byte_end":83443,"line_start":111,"line_end":111,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M3x6::m13","value":"N","parent":{"krate":0,"index":8785},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8794},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83445,"byte_end":83448,"line_start":111,"line_end":111,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M3x6::m23","value":"N","parent":{"krate":0,"index":8785},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8795},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83450,"byte_end":83453,"line_start":111,"line_end":111,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M3x6::m33","value":"N","parent":{"krate":0,"index":8785},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8796},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83474,"byte_end":83477,"line_start":112,"line_end":112,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M3x6::m14","value":"N","parent":{"krate":0,"index":8785},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8797},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83479,"byte_end":83482,"line_start":112,"line_end":112,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M3x6::m24","value":"N","parent":{"krate":0,"index":8785},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8798},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83484,"byte_end":83487,"line_start":112,"line_end":112,"column_start":30,"column_end":33},"name":"m34","qualname":"::base::coordinates::M3x6::m34","value":"N","parent":{"krate":0,"index":8785},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8799},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83508,"byte_end":83511,"line_start":113,"line_end":113,"column_start":20,"column_end":23},"name":"m15","qualname":"::base::coordinates::M3x6::m15","value":"N","parent":{"krate":0,"index":8785},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8800},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83513,"byte_end":83516,"line_start":113,"line_end":113,"column_start":25,"column_end":28},"name":"m25","qualname":"::base::coordinates::M3x6::m25","value":"N","parent":{"krate":0,"index":8785},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8801},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83518,"byte_end":83521,"line_start":113,"line_end":113,"column_start":30,"column_end":33},"name":"m35","qualname":"::base::coordinates::M3x6::m35","value":"N","parent":{"krate":0,"index":8785},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8802},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83542,"byte_end":83545,"line_start":114,"line_end":114,"column_start":20,"column_end":23},"name":"m16","qualname":"::base::coordinates::M3x6::m16","value":"N","parent":{"krate":0,"index":8785},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8803},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83547,"byte_end":83550,"line_start":114,"line_end":114,"column_start":25,"column_end":28},"name":"m26","qualname":"::base::coordinates::M3x6::m26","value":"N","parent":{"krate":0,"index":8785},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8804},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83552,"byte_end":83555,"line_start":114,"line_end":114,"column_start":30,"column_end":33},"name":"m36","qualname":"::base::coordinates::M3x6::m36","value":"N","parent":{"krate":0,"index":8785},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8828},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83616,"byte_end":83620,"line_start":119,"line_end":119,"column_start":14,"column_end":18},"name":"M4x2","qualname":"::base::coordinates::M4x2","value":"M4x2 { m11, m21, m31, m41, m12, m22, m32, m42 }","parent":null,"children":[{"krate":0,"index":8830},{"krate":0,"index":8831},{"krate":0,"index":8832},{"krate":0,"index":8833},{"krate":0,"index":8834},{"krate":0,"index":8835},{"krate":0,"index":8836},{"krate":0,"index":8837}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":80884,"byte_end":80971,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":80980,"byte_end":81041,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":81050,"byte_end":81060,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8830},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83622,"byte_end":83625,"line_start":119,"line_end":119,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M4x2::m11","value":"N","parent":{"krate":0,"index":8828},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8831},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83627,"byte_end":83630,"line_start":119,"line_end":119,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M4x2::m21","value":"N","parent":{"krate":0,"index":8828},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8832},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83632,"byte_end":83635,"line_start":119,"line_end":119,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M4x2::m31","value":"N","parent":{"krate":0,"index":8828},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8833},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83637,"byte_end":83640,"line_start":119,"line_end":119,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M4x2::m41","value":"N","parent":{"krate":0,"index":8828},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8834},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83661,"byte_end":83664,"line_start":120,"line_end":120,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M4x2::m12","value":"N","parent":{"krate":0,"index":8828},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8835},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83666,"byte_end":83669,"line_start":120,"line_end":120,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M4x2::m22","value":"N","parent":{"krate":0,"index":8828},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8836},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83671,"byte_end":83674,"line_start":120,"line_end":120,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M4x2::m32","value":"N","parent":{"krate":0,"index":8828},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8837},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83676,"byte_end":83679,"line_start":120,"line_end":120,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M4x2::m42","value":"N","parent":{"krate":0,"index":8828},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8861},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83695,"byte_end":83699,"line_start":121,"line_end":121,"column_start":14,"column_end":18},"name":"M4x3","qualname":"::base::coordinates::M4x3","value":"M4x3 { m11, m21, m31, m41, m12, m22, m32, m42, m13, m23, m33, m43 }","parent":null,"children":[{"krate":0,"index":8863},{"krate":0,"index":8864},{"krate":0,"index":8865},{"krate":0,"index":8866},{"krate":0,"index":8867},{"krate":0,"index":8868},{"krate":0,"index":8869},{"krate":0,"index":8870},{"krate":0,"index":8871},{"krate":0,"index":8872},{"krate":0,"index":8873},{"krate":0,"index":8874}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":80884,"byte_end":80971,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":80980,"byte_end":81041,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":81050,"byte_end":81060,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8863},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83701,"byte_end":83704,"line_start":121,"line_end":121,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M4x3::m11","value":"N","parent":{"krate":0,"index":8861},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8864},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83706,"byte_end":83709,"line_start":121,"line_end":121,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M4x3::m21","value":"N","parent":{"krate":0,"index":8861},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8865},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83711,"byte_end":83714,"line_start":121,"line_end":121,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M4x3::m31","value":"N","parent":{"krate":0,"index":8861},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8866},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83716,"byte_end":83719,"line_start":121,"line_end":121,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M4x3::m41","value":"N","parent":{"krate":0,"index":8861},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8867},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83740,"byte_end":83743,"line_start":122,"line_end":122,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M4x3::m12","value":"N","parent":{"krate":0,"index":8861},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8868},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83745,"byte_end":83748,"line_start":122,"line_end":122,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M4x3::m22","value":"N","parent":{"krate":0,"index":8861},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8869},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83750,"byte_end":83753,"line_start":122,"line_end":122,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M4x3::m32","value":"N","parent":{"krate":0,"index":8861},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8870},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83755,"byte_end":83758,"line_start":122,"line_end":122,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M4x3::m42","value":"N","parent":{"krate":0,"index":8861},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8871},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83779,"byte_end":83782,"line_start":123,"line_end":123,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M4x3::m13","value":"N","parent":{"krate":0,"index":8861},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8872},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83784,"byte_end":83787,"line_start":123,"line_end":123,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M4x3::m23","value":"N","parent":{"krate":0,"index":8861},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8873},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83789,"byte_end":83792,"line_start":123,"line_end":123,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M4x3::m33","value":"N","parent":{"krate":0,"index":8861},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8874},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83794,"byte_end":83797,"line_start":123,"line_end":123,"column_start":35,"column_end":38},"name":"m43","qualname":"::base::coordinates::M4x3::m43","value":"N","parent":{"krate":0,"index":8861},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8898},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83813,"byte_end":83817,"line_start":124,"line_end":124,"column_start":14,"column_end":18},"name":"M4x4","qualname":"::base::coordinates::M4x4","value":"M4x4 { m11, m21, m31, m41, m12, m22, m32, m42, m13, m23, m33, m43, m14, m24, m34, m44 }","parent":null,"children":[{"krate":0,"index":8900},{"krate":0,"index":8901},{"krate":0,"index":8902},{"krate":0,"index":8903},{"krate":0,"index":8904},{"krate":0,"index":8905},{"krate":0,"index":8906},{"krate":0,"index":8907},{"krate":0,"index":8908},{"krate":0,"index":8909},{"krate":0,"index":8910},{"krate":0,"index":8911},{"krate":0,"index":8912},{"krate":0,"index":8913},{"krate":0,"index":8914},{"krate":0,"index":8915}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":80884,"byte_end":80971,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":80980,"byte_end":81041,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":81050,"byte_end":81060,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8900},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83819,"byte_end":83822,"line_start":124,"line_end":124,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M4x4::m11","value":"N","parent":{"krate":0,"index":8898},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8901},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83824,"byte_end":83827,"line_start":124,"line_end":124,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M4x4::m21","value":"N","parent":{"krate":0,"index":8898},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8902},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83829,"byte_end":83832,"line_start":124,"line_end":124,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M4x4::m31","value":"N","parent":{"krate":0,"index":8898},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8903},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83834,"byte_end":83837,"line_start":124,"line_end":124,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M4x4::m41","value":"N","parent":{"krate":0,"index":8898},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8904},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83858,"byte_end":83861,"line_start":125,"line_end":125,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M4x4::m12","value":"N","parent":{"krate":0,"index":8898},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8905},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83863,"byte_end":83866,"line_start":125,"line_end":125,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M4x4::m22","value":"N","parent":{"krate":0,"index":8898},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8906},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83868,"byte_end":83871,"line_start":125,"line_end":125,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M4x4::m32","value":"N","parent":{"krate":0,"index":8898},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8907},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83873,"byte_end":83876,"line_start":125,"line_end":125,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M4x4::m42","value":"N","parent":{"krate":0,"index":8898},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8908},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83897,"byte_end":83900,"line_start":126,"line_end":126,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M4x4::m13","value":"N","parent":{"krate":0,"index":8898},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8909},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83902,"byte_end":83905,"line_start":126,"line_end":126,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M4x4::m23","value":"N","parent":{"krate":0,"index":8898},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8910},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83907,"byte_end":83910,"line_start":126,"line_end":126,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M4x4::m33","value":"N","parent":{"krate":0,"index":8898},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8911},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83912,"byte_end":83915,"line_start":126,"line_end":126,"column_start":35,"column_end":38},"name":"m43","qualname":"::base::coordinates::M4x4::m43","value":"N","parent":{"krate":0,"index":8898},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8912},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83936,"byte_end":83939,"line_start":127,"line_end":127,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M4x4::m14","value":"N","parent":{"krate":0,"index":8898},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8913},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83941,"byte_end":83944,"line_start":127,"line_end":127,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M4x4::m24","value":"N","parent":{"krate":0,"index":8898},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8914},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83946,"byte_end":83949,"line_start":127,"line_end":127,"column_start":30,"column_end":33},"name":"m34","qualname":"::base::coordinates::M4x4::m34","value":"N","parent":{"krate":0,"index":8898},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8915},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83951,"byte_end":83954,"line_start":127,"line_end":127,"column_start":35,"column_end":38},"name":"m44","qualname":"::base::coordinates::M4x4::m44","value":"N","parent":{"krate":0,"index":8898},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8939},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83970,"byte_end":83974,"line_start":128,"line_end":128,"column_start":14,"column_end":18},"name":"M4x5","qualname":"::base::coordinates::M4x5","value":"M4x5 { m11, m21, m31, m41, m12, m22, m32, m42, m13, m23, m33, m43, m14, m24, m34, m44, m15, m25, m35, m45 }","parent":null,"children":[{"krate":0,"index":8941},{"krate":0,"index":8942},{"krate":0,"index":8943},{"krate":0,"index":8944},{"krate":0,"index":8945},{"krate":0,"index":8946},{"krate":0,"index":8947},{"krate":0,"index":8948},{"krate":0,"index":8949},{"krate":0,"index":8950},{"krate":0,"index":8951},{"krate":0,"index":8952},{"krate":0,"index":8953},{"krate":0,"index":8954},{"krate":0,"index":8955},{"krate":0,"index":8956},{"krate":0,"index":8957},{"krate":0,"index":8958},{"krate":0,"index":8959},{"krate":0,"index":8960}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":80884,"byte_end":80971,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":80980,"byte_end":81041,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":81050,"byte_end":81060,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8941},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83976,"byte_end":83979,"line_start":128,"line_end":128,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M4x5::m11","value":"N","parent":{"krate":0,"index":8939},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8942},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83981,"byte_end":83984,"line_start":128,"line_end":128,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M4x5::m21","value":"N","parent":{"krate":0,"index":8939},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8943},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83986,"byte_end":83989,"line_start":128,"line_end":128,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M4x5::m31","value":"N","parent":{"krate":0,"index":8939},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8944},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":83991,"byte_end":83994,"line_start":128,"line_end":128,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M4x5::m41","value":"N","parent":{"krate":0,"index":8939},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8945},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84015,"byte_end":84018,"line_start":129,"line_end":129,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M4x5::m12","value":"N","parent":{"krate":0,"index":8939},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8946},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84020,"byte_end":84023,"line_start":129,"line_end":129,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M4x5::m22","value":"N","parent":{"krate":0,"index":8939},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8947},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84025,"byte_end":84028,"line_start":129,"line_end":129,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M4x5::m32","value":"N","parent":{"krate":0,"index":8939},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8948},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84030,"byte_end":84033,"line_start":129,"line_end":129,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M4x5::m42","value":"N","parent":{"krate":0,"index":8939},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8949},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84054,"byte_end":84057,"line_start":130,"line_end":130,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M4x5::m13","value":"N","parent":{"krate":0,"index":8939},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8950},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84059,"byte_end":84062,"line_start":130,"line_end":130,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M4x5::m23","value":"N","parent":{"krate":0,"index":8939},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8951},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84064,"byte_end":84067,"line_start":130,"line_end":130,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M4x5::m33","value":"N","parent":{"krate":0,"index":8939},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8952},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84069,"byte_end":84072,"line_start":130,"line_end":130,"column_start":35,"column_end":38},"name":"m43","qualname":"::base::coordinates::M4x5::m43","value":"N","parent":{"krate":0,"index":8939},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8953},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84093,"byte_end":84096,"line_start":131,"line_end":131,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M4x5::m14","value":"N","parent":{"krate":0,"index":8939},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8954},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84098,"byte_end":84101,"line_start":131,"line_end":131,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M4x5::m24","value":"N","parent":{"krate":0,"index":8939},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8955},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84103,"byte_end":84106,"line_start":131,"line_end":131,"column_start":30,"column_end":33},"name":"m34","qualname":"::base::coordinates::M4x5::m34","value":"N","parent":{"krate":0,"index":8939},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8956},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84108,"byte_end":84111,"line_start":131,"line_end":131,"column_start":35,"column_end":38},"name":"m44","qualname":"::base::coordinates::M4x5::m44","value":"N","parent":{"krate":0,"index":8939},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8957},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84132,"byte_end":84135,"line_start":132,"line_end":132,"column_start":20,"column_end":23},"name":"m15","qualname":"::base::coordinates::M4x5::m15","value":"N","parent":{"krate":0,"index":8939},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8958},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84137,"byte_end":84140,"line_start":132,"line_end":132,"column_start":25,"column_end":28},"name":"m25","qualname":"::base::coordinates::M4x5::m25","value":"N","parent":{"krate":0,"index":8939},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8959},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84142,"byte_end":84145,"line_start":132,"line_end":132,"column_start":30,"column_end":33},"name":"m35","qualname":"::base::coordinates::M4x5::m35","value":"N","parent":{"krate":0,"index":8939},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8960},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84147,"byte_end":84150,"line_start":132,"line_end":132,"column_start":35,"column_end":38},"name":"m45","qualname":"::base::coordinates::M4x5::m45","value":"N","parent":{"krate":0,"index":8939},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8984},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84166,"byte_end":84170,"line_start":133,"line_end":133,"column_start":14,"column_end":18},"name":"M4x6","qualname":"::base::coordinates::M4x6","value":"M4x6 { m11, m21, m31, m41, m12, m22, m32, m42, m13, m23, m33, m43, m14, m24, m34, m44, m15, m25, m35, m45, m16, m26, m36, m46 }","parent":null,"children":[{"krate":0,"index":8986},{"krate":0,"index":8987},{"krate":0,"index":8988},{"krate":0,"index":8989},{"krate":0,"index":8990},{"krate":0,"index":8991},{"krate":0,"index":8992},{"krate":0,"index":8993},{"krate":0,"index":8994},{"krate":0,"index":8995},{"krate":0,"index":8996},{"krate":0,"index":8997},{"krate":0,"index":8998},{"krate":0,"index":8999},{"krate":0,"index":9000},{"krate":0,"index":9001},{"krate":0,"index":9002},{"krate":0,"index":9003},{"krate":0,"index":9004},{"krate":0,"index":9005},{"krate":0,"index":9006},{"krate":0,"index":9007},{"krate":0,"index":9008},{"krate":0,"index":9009}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":80884,"byte_end":80971,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":80980,"byte_end":81041,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":81050,"byte_end":81060,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8986},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84172,"byte_end":84175,"line_start":133,"line_end":133,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M4x6::m11","value":"N","parent":{"krate":0,"index":8984},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8987},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84177,"byte_end":84180,"line_start":133,"line_end":133,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M4x6::m21","value":"N","parent":{"krate":0,"index":8984},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8988},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84182,"byte_end":84185,"line_start":133,"line_end":133,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M4x6::m31","value":"N","parent":{"krate":0,"index":8984},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8989},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84187,"byte_end":84190,"line_start":133,"line_end":133,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M4x6::m41","value":"N","parent":{"krate":0,"index":8984},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8990},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84211,"byte_end":84214,"line_start":134,"line_end":134,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M4x6::m12","value":"N","parent":{"krate":0,"index":8984},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8991},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84216,"byte_end":84219,"line_start":134,"line_end":134,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M4x6::m22","value":"N","parent":{"krate":0,"index":8984},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8992},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84221,"byte_end":84224,"line_start":134,"line_end":134,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M4x6::m32","value":"N","parent":{"krate":0,"index":8984},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8993},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84226,"byte_end":84229,"line_start":134,"line_end":134,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M4x6::m42","value":"N","parent":{"krate":0,"index":8984},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8994},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84250,"byte_end":84253,"line_start":135,"line_end":135,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M4x6::m13","value":"N","parent":{"krate":0,"index":8984},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8995},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84255,"byte_end":84258,"line_start":135,"line_end":135,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M4x6::m23","value":"N","parent":{"krate":0,"index":8984},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8996},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84260,"byte_end":84263,"line_start":135,"line_end":135,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M4x6::m33","value":"N","parent":{"krate":0,"index":8984},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8997},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84265,"byte_end":84268,"line_start":135,"line_end":135,"column_start":35,"column_end":38},"name":"m43","qualname":"::base::coordinates::M4x6::m43","value":"N","parent":{"krate":0,"index":8984},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8998},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84289,"byte_end":84292,"line_start":136,"line_end":136,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M4x6::m14","value":"N","parent":{"krate":0,"index":8984},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8999},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84294,"byte_end":84297,"line_start":136,"line_end":136,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M4x6::m24","value":"N","parent":{"krate":0,"index":8984},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9000},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84299,"byte_end":84302,"line_start":136,"line_end":136,"column_start":30,"column_end":33},"name":"m34","qualname":"::base::coordinates::M4x6::m34","value":"N","parent":{"krate":0,"index":8984},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9001},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84304,"byte_end":84307,"line_start":136,"line_end":136,"column_start":35,"column_end":38},"name":"m44","qualname":"::base::coordinates::M4x6::m44","value":"N","parent":{"krate":0,"index":8984},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9002},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84328,"byte_end":84331,"line_start":137,"line_end":137,"column_start":20,"column_end":23},"name":"m15","qualname":"::base::coordinates::M4x6::m15","value":"N","parent":{"krate":0,"index":8984},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9003},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84333,"byte_end":84336,"line_start":137,"line_end":137,"column_start":25,"column_end":28},"name":"m25","qualname":"::base::coordinates::M4x6::m25","value":"N","parent":{"krate":0,"index":8984},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9004},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84338,"byte_end":84341,"line_start":137,"line_end":137,"column_start":30,"column_end":33},"name":"m35","qualname":"::base::coordinates::M4x6::m35","value":"N","parent":{"krate":0,"index":8984},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9005},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84343,"byte_end":84346,"line_start":137,"line_end":137,"column_start":35,"column_end":38},"name":"m45","qualname":"::base::coordinates::M4x6::m45","value":"N","parent":{"krate":0,"index":8984},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9006},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84367,"byte_end":84370,"line_start":138,"line_end":138,"column_start":20,"column_end":23},"name":"m16","qualname":"::base::coordinates::M4x6::m16","value":"N","parent":{"krate":0,"index":8984},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9007},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84372,"byte_end":84375,"line_start":138,"line_end":138,"column_start":25,"column_end":28},"name":"m26","qualname":"::base::coordinates::M4x6::m26","value":"N","parent":{"krate":0,"index":8984},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9008},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84377,"byte_end":84380,"line_start":138,"line_end":138,"column_start":30,"column_end":33},"name":"m36","qualname":"::base::coordinates::M4x6::m36","value":"N","parent":{"krate":0,"index":8984},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9009},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84382,"byte_end":84385,"line_start":138,"line_end":138,"column_start":35,"column_end":38},"name":"m46","qualname":"::base::coordinates::M4x6::m46","value":"N","parent":{"krate":0,"index":8984},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9033},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84446,"byte_end":84450,"line_start":143,"line_end":143,"column_start":14,"column_end":18},"name":"M5x2","qualname":"::base::coordinates::M5x2","value":"M5x2 { m11, m21, m31, m41, m51, m12, m22, m32, m42, m52 }","parent":null,"children":[{"krate":0,"index":9035},{"krate":0,"index":9036},{"krate":0,"index":9037},{"krate":0,"index":9038},{"krate":0,"index":9039},{"krate":0,"index":9040},{"krate":0,"index":9041},{"krate":0,"index":9042},{"krate":0,"index":9043},{"krate":0,"index":9044}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":80884,"byte_end":80971,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":80980,"byte_end":81041,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":81050,"byte_end":81060,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":9035},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84452,"byte_end":84455,"line_start":143,"line_end":143,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M5x2::m11","value":"N","parent":{"krate":0,"index":9033},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9036},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84457,"byte_end":84460,"line_start":143,"line_end":143,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M5x2::m21","value":"N","parent":{"krate":0,"index":9033},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9037},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84462,"byte_end":84465,"line_start":143,"line_end":143,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M5x2::m31","value":"N","parent":{"krate":0,"index":9033},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9038},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84467,"byte_end":84470,"line_start":143,"line_end":143,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M5x2::m41","value":"N","parent":{"krate":0,"index":9033},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9039},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84472,"byte_end":84475,"line_start":143,"line_end":143,"column_start":40,"column_end":43},"name":"m51","qualname":"::base::coordinates::M5x2::m51","value":"N","parent":{"krate":0,"index":9033},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9040},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84496,"byte_end":84499,"line_start":144,"line_end":144,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M5x2::m12","value":"N","parent":{"krate":0,"index":9033},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9041},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84501,"byte_end":84504,"line_start":144,"line_end":144,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M5x2::m22","value":"N","parent":{"krate":0,"index":9033},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9042},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84506,"byte_end":84509,"line_start":144,"line_end":144,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M5x2::m32","value":"N","parent":{"krate":0,"index":9033},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9043},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84511,"byte_end":84514,"line_start":144,"line_end":144,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M5x2::m42","value":"N","parent":{"krate":0,"index":9033},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9044},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84516,"byte_end":84519,"line_start":144,"line_end":144,"column_start":40,"column_end":43},"name":"m52","qualname":"::base::coordinates::M5x2::m52","value":"N","parent":{"krate":0,"index":9033},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9068},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84535,"byte_end":84539,"line_start":145,"line_end":145,"column_start":14,"column_end":18},"name":"M5x3","qualname":"::base::coordinates::M5x3","value":"M5x3 { m11, m21, m31, m41, m51, m12, m22, m32, m42, m52, m13, m23, m33, m43, m53 }","parent":null,"children":[{"krate":0,"index":9070},{"krate":0,"index":9071},{"krate":0,"index":9072},{"krate":0,"index":9073},{"krate":0,"index":9074},{"krate":0,"index":9075},{"krate":0,"index":9076},{"krate":0,"index":9077},{"krate":0,"index":9078},{"krate":0,"index":9079},{"krate":0,"index":9080},{"krate":0,"index":9081},{"krate":0,"index":9082},{"krate":0,"index":9083},{"krate":0,"index":9084}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":80884,"byte_end":80971,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":80980,"byte_end":81041,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":81050,"byte_end":81060,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":9070},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84541,"byte_end":84544,"line_start":145,"line_end":145,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M5x3::m11","value":"N","parent":{"krate":0,"index":9068},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9071},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84546,"byte_end":84549,"line_start":145,"line_end":145,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M5x3::m21","value":"N","parent":{"krate":0,"index":9068},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9072},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84551,"byte_end":84554,"line_start":145,"line_end":145,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M5x3::m31","value":"N","parent":{"krate":0,"index":9068},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9073},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84556,"byte_end":84559,"line_start":145,"line_end":145,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M5x3::m41","value":"N","parent":{"krate":0,"index":9068},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9074},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84561,"byte_end":84564,"line_start":145,"line_end":145,"column_start":40,"column_end":43},"name":"m51","qualname":"::base::coordinates::M5x3::m51","value":"N","parent":{"krate":0,"index":9068},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9075},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84585,"byte_end":84588,"line_start":146,"line_end":146,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M5x3::m12","value":"N","parent":{"krate":0,"index":9068},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9076},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84590,"byte_end":84593,"line_start":146,"line_end":146,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M5x3::m22","value":"N","parent":{"krate":0,"index":9068},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9077},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84595,"byte_end":84598,"line_start":146,"line_end":146,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M5x3::m32","value":"N","parent":{"krate":0,"index":9068},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9078},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84600,"byte_end":84603,"line_start":146,"line_end":146,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M5x3::m42","value":"N","parent":{"krate":0,"index":9068},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9079},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84605,"byte_end":84608,"line_start":146,"line_end":146,"column_start":40,"column_end":43},"name":"m52","qualname":"::base::coordinates::M5x3::m52","value":"N","parent":{"krate":0,"index":9068},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9080},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84629,"byte_end":84632,"line_start":147,"line_end":147,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M5x3::m13","value":"N","parent":{"krate":0,"index":9068},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9081},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84634,"byte_end":84637,"line_start":147,"line_end":147,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M5x3::m23","value":"N","parent":{"krate":0,"index":9068},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9082},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84639,"byte_end":84642,"line_start":147,"line_end":147,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M5x3::m33","value":"N","parent":{"krate":0,"index":9068},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9083},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84644,"byte_end":84647,"line_start":147,"line_end":147,"column_start":35,"column_end":38},"name":"m43","qualname":"::base::coordinates::M5x3::m43","value":"N","parent":{"krate":0,"index":9068},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9084},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84649,"byte_end":84652,"line_start":147,"line_end":147,"column_start":40,"column_end":43},"name":"m53","qualname":"::base::coordinates::M5x3::m53","value":"N","parent":{"krate":0,"index":9068},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9108},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84668,"byte_end":84672,"line_start":148,"line_end":148,"column_start":14,"column_end":18},"name":"M5x4","qualname":"::base::coordinates::M5x4","value":"M5x4 { m11, m21, m31, m41, m51, m12, m22, m32, m42, m52, m13, m23, m33, m43, m53, m14, m24, m34, m44, m54 }","parent":null,"children":[{"krate":0,"index":9110},{"krate":0,"index":9111},{"krate":0,"index":9112},{"krate":0,"index":9113},{"krate":0,"index":9114},{"krate":0,"index":9115},{"krate":0,"index":9116},{"krate":0,"index":9117},{"krate":0,"index":9118},{"krate":0,"index":9119},{"krate":0,"index":9120},{"krate":0,"index":9121},{"krate":0,"index":9122},{"krate":0,"index":9123},{"krate":0,"index":9124},{"krate":0,"index":9125},{"krate":0,"index":9126},{"krate":0,"index":9127},{"krate":0,"index":9128},{"krate":0,"index":9129}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":80884,"byte_end":80971,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":80980,"byte_end":81041,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":81050,"byte_end":81060,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":9110},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84674,"byte_end":84677,"line_start":148,"line_end":148,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M5x4::m11","value":"N","parent":{"krate":0,"index":9108},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9111},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84679,"byte_end":84682,"line_start":148,"line_end":148,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M5x4::m21","value":"N","parent":{"krate":0,"index":9108},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9112},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84684,"byte_end":84687,"line_start":148,"line_end":148,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M5x4::m31","value":"N","parent":{"krate":0,"index":9108},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9113},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84689,"byte_end":84692,"line_start":148,"line_end":148,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M5x4::m41","value":"N","parent":{"krate":0,"index":9108},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9114},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84694,"byte_end":84697,"line_start":148,"line_end":148,"column_start":40,"column_end":43},"name":"m51","qualname":"::base::coordinates::M5x4::m51","value":"N","parent":{"krate":0,"index":9108},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9115},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84718,"byte_end":84721,"line_start":149,"line_end":149,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M5x4::m12","value":"N","parent":{"krate":0,"index":9108},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9116},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84723,"byte_end":84726,"line_start":149,"line_end":149,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M5x4::m22","value":"N","parent":{"krate":0,"index":9108},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9117},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84728,"byte_end":84731,"line_start":149,"line_end":149,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M5x4::m32","value":"N","parent":{"krate":0,"index":9108},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9118},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84733,"byte_end":84736,"line_start":149,"line_end":149,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M5x4::m42","value":"N","parent":{"krate":0,"index":9108},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9119},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84738,"byte_end":84741,"line_start":149,"line_end":149,"column_start":40,"column_end":43},"name":"m52","qualname":"::base::coordinates::M5x4::m52","value":"N","parent":{"krate":0,"index":9108},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9120},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84762,"byte_end":84765,"line_start":150,"line_end":150,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M5x4::m13","value":"N","parent":{"krate":0,"index":9108},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9121},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84767,"byte_end":84770,"line_start":150,"line_end":150,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M5x4::m23","value":"N","parent":{"krate":0,"index":9108},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9122},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84772,"byte_end":84775,"line_start":150,"line_end":150,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M5x4::m33","value":"N","parent":{"krate":0,"index":9108},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9123},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84777,"byte_end":84780,"line_start":150,"line_end":150,"column_start":35,"column_end":38},"name":"m43","qualname":"::base::coordinates::M5x4::m43","value":"N","parent":{"krate":0,"index":9108},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9124},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84782,"byte_end":84785,"line_start":150,"line_end":150,"column_start":40,"column_end":43},"name":"m53","qualname":"::base::coordinates::M5x4::m53","value":"N","parent":{"krate":0,"index":9108},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9125},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84806,"byte_end":84809,"line_start":151,"line_end":151,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M5x4::m14","value":"N","parent":{"krate":0,"index":9108},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9126},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84811,"byte_end":84814,"line_start":151,"line_end":151,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M5x4::m24","value":"N","parent":{"krate":0,"index":9108},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9127},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84816,"byte_end":84819,"line_start":151,"line_end":151,"column_start":30,"column_end":33},"name":"m34","qualname":"::base::coordinates::M5x4::m34","value":"N","parent":{"krate":0,"index":9108},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9128},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84821,"byte_end":84824,"line_start":151,"line_end":151,"column_start":35,"column_end":38},"name":"m44","qualname":"::base::coordinates::M5x4::m44","value":"N","parent":{"krate":0,"index":9108},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9129},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84826,"byte_end":84829,"line_start":151,"line_end":151,"column_start":40,"column_end":43},"name":"m54","qualname":"::base::coordinates::M5x4::m54","value":"N","parent":{"krate":0,"index":9108},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9153},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84845,"byte_end":84849,"line_start":152,"line_end":152,"column_start":14,"column_end":18},"name":"M5x5","qualname":"::base::coordinates::M5x5","value":"M5x5 { m11, m21, m31, m41, m51, m12, m22, m32, m42, m52, m13, m23, m33, m43, m53, m14, m24, m34, m44, m54, m15, m25, m35, m45, m55 }","parent":null,"children":[{"krate":0,"index":9155},{"krate":0,"index":9156},{"krate":0,"index":9157},{"krate":0,"index":9158},{"krate":0,"index":9159},{"krate":0,"index":9160},{"krate":0,"index":9161},{"krate":0,"index":9162},{"krate":0,"index":9163},{"krate":0,"index":9164},{"krate":0,"index":9165},{"krate":0,"index":9166},{"krate":0,"index":9167},{"krate":0,"index":9168},{"krate":0,"index":9169},{"krate":0,"index":9170},{"krate":0,"index":9171},{"krate":0,"index":9172},{"krate":0,"index":9173},{"krate":0,"index":9174},{"krate":0,"index":9175},{"krate":0,"index":9176},{"krate":0,"index":9177},{"krate":0,"index":9178},{"krate":0,"index":9179}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":80884,"byte_end":80971,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":80980,"byte_end":81041,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":81050,"byte_end":81060,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":9155},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84851,"byte_end":84854,"line_start":152,"line_end":152,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M5x5::m11","value":"N","parent":{"krate":0,"index":9153},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9156},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84856,"byte_end":84859,"line_start":152,"line_end":152,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M5x5::m21","value":"N","parent":{"krate":0,"index":9153},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9157},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84861,"byte_end":84864,"line_start":152,"line_end":152,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M5x5::m31","value":"N","parent":{"krate":0,"index":9153},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9158},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84866,"byte_end":84869,"line_start":152,"line_end":152,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M5x5::m41","value":"N","parent":{"krate":0,"index":9153},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9159},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84871,"byte_end":84874,"line_start":152,"line_end":152,"column_start":40,"column_end":43},"name":"m51","qualname":"::base::coordinates::M5x5::m51","value":"N","parent":{"krate":0,"index":9153},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9160},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84895,"byte_end":84898,"line_start":153,"line_end":153,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M5x5::m12","value":"N","parent":{"krate":0,"index":9153},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9161},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84900,"byte_end":84903,"line_start":153,"line_end":153,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M5x5::m22","value":"N","parent":{"krate":0,"index":9153},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9162},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84905,"byte_end":84908,"line_start":153,"line_end":153,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M5x5::m32","value":"N","parent":{"krate":0,"index":9153},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9163},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84910,"byte_end":84913,"line_start":153,"line_end":153,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M5x5::m42","value":"N","parent":{"krate":0,"index":9153},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9164},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84915,"byte_end":84918,"line_start":153,"line_end":153,"column_start":40,"column_end":43},"name":"m52","qualname":"::base::coordinates::M5x5::m52","value":"N","parent":{"krate":0,"index":9153},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9165},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84939,"byte_end":84942,"line_start":154,"line_end":154,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M5x5::m13","value":"N","parent":{"krate":0,"index":9153},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9166},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84944,"byte_end":84947,"line_start":154,"line_end":154,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M5x5::m23","value":"N","parent":{"krate":0,"index":9153},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9167},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84949,"byte_end":84952,"line_start":154,"line_end":154,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M5x5::m33","value":"N","parent":{"krate":0,"index":9153},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9168},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84954,"byte_end":84957,"line_start":154,"line_end":154,"column_start":35,"column_end":38},"name":"m43","qualname":"::base::coordinates::M5x5::m43","value":"N","parent":{"krate":0,"index":9153},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9169},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84959,"byte_end":84962,"line_start":154,"line_end":154,"column_start":40,"column_end":43},"name":"m53","qualname":"::base::coordinates::M5x5::m53","value":"N","parent":{"krate":0,"index":9153},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9170},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84983,"byte_end":84986,"line_start":155,"line_end":155,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M5x5::m14","value":"N","parent":{"krate":0,"index":9153},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9171},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84988,"byte_end":84991,"line_start":155,"line_end":155,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M5x5::m24","value":"N","parent":{"krate":0,"index":9153},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9172},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84993,"byte_end":84996,"line_start":155,"line_end":155,"column_start":30,"column_end":33},"name":"m34","qualname":"::base::coordinates::M5x5::m34","value":"N","parent":{"krate":0,"index":9153},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9173},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":84998,"byte_end":85001,"line_start":155,"line_end":155,"column_start":35,"column_end":38},"name":"m44","qualname":"::base::coordinates::M5x5::m44","value":"N","parent":{"krate":0,"index":9153},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9174},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85003,"byte_end":85006,"line_start":155,"line_end":155,"column_start":40,"column_end":43},"name":"m54","qualname":"::base::coordinates::M5x5::m54","value":"N","parent":{"krate":0,"index":9153},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9175},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85027,"byte_end":85030,"line_start":156,"line_end":156,"column_start":20,"column_end":23},"name":"m15","qualname":"::base::coordinates::M5x5::m15","value":"N","parent":{"krate":0,"index":9153},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9176},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85032,"byte_end":85035,"line_start":156,"line_end":156,"column_start":25,"column_end":28},"name":"m25","qualname":"::base::coordinates::M5x5::m25","value":"N","parent":{"krate":0,"index":9153},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9177},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85037,"byte_end":85040,"line_start":156,"line_end":156,"column_start":30,"column_end":33},"name":"m35","qualname":"::base::coordinates::M5x5::m35","value":"N","parent":{"krate":0,"index":9153},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9178},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85042,"byte_end":85045,"line_start":156,"line_end":156,"column_start":35,"column_end":38},"name":"m45","qualname":"::base::coordinates::M5x5::m45","value":"N","parent":{"krate":0,"index":9153},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9179},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85047,"byte_end":85050,"line_start":156,"line_end":156,"column_start":40,"column_end":43},"name":"m55","qualname":"::base::coordinates::M5x5::m55","value":"N","parent":{"krate":0,"index":9153},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9203},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85066,"byte_end":85070,"line_start":157,"line_end":157,"column_start":14,"column_end":18},"name":"M5x6","qualname":"::base::coordinates::M5x6","value":"M5x6 { m11, m21, m31, m41, m51, m12, m22, m32, m42, m52, m13, m23, m33, m43, m53, m14, m24, m34, m44, m54, m15, m25, m35, m45, m55, m16, m26, m36, m46, m56 }","parent":null,"children":[{"krate":0,"index":9205},{"krate":0,"index":9206},{"krate":0,"index":9207},{"krate":0,"index":9208},{"krate":0,"index":9209},{"krate":0,"index":9210},{"krate":0,"index":9211},{"krate":0,"index":9212},{"krate":0,"index":9213},{"krate":0,"index":9214},{"krate":0,"index":9215},{"krate":0,"index":9216},{"krate":0,"index":9217},{"krate":0,"index":9218},{"krate":0,"index":9219},{"krate":0,"index":9220},{"krate":0,"index":9221},{"krate":0,"index":9222},{"krate":0,"index":9223},{"krate":0,"index":9224},{"krate":0,"index":9225},{"krate":0,"index":9226},{"krate":0,"index":9227},{"krate":0,"index":9228},{"krate":0,"index":9229},{"krate":0,"index":9230},{"krate":0,"index":9231},{"krate":0,"index":9232},{"krate":0,"index":9233},{"krate":0,"index":9234}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":80884,"byte_end":80971,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":80980,"byte_end":81041,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":81050,"byte_end":81060,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":9205},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85072,"byte_end":85075,"line_start":157,"line_end":157,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M5x6::m11","value":"N","parent":{"krate":0,"index":9203},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9206},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85077,"byte_end":85080,"line_start":157,"line_end":157,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M5x6::m21","value":"N","parent":{"krate":0,"index":9203},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9207},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85082,"byte_end":85085,"line_start":157,"line_end":157,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M5x6::m31","value":"N","parent":{"krate":0,"index":9203},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9208},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85087,"byte_end":85090,"line_start":157,"line_end":157,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M5x6::m41","value":"N","parent":{"krate":0,"index":9203},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9209},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85092,"byte_end":85095,"line_start":157,"line_end":157,"column_start":40,"column_end":43},"name":"m51","qualname":"::base::coordinates::M5x6::m51","value":"N","parent":{"krate":0,"index":9203},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9210},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85116,"byte_end":85119,"line_start":158,"line_end":158,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M5x6::m12","value":"N","parent":{"krate":0,"index":9203},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9211},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85121,"byte_end":85124,"line_start":158,"line_end":158,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M5x6::m22","value":"N","parent":{"krate":0,"index":9203},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9212},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85126,"byte_end":85129,"line_start":158,"line_end":158,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M5x6::m32","value":"N","parent":{"krate":0,"index":9203},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9213},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85131,"byte_end":85134,"line_start":158,"line_end":158,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M5x6::m42","value":"N","parent":{"krate":0,"index":9203},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9214},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85136,"byte_end":85139,"line_start":158,"line_end":158,"column_start":40,"column_end":43},"name":"m52","qualname":"::base::coordinates::M5x6::m52","value":"N","parent":{"krate":0,"index":9203},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9215},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85160,"byte_end":85163,"line_start":159,"line_end":159,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M5x6::m13","value":"N","parent":{"krate":0,"index":9203},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9216},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85165,"byte_end":85168,"line_start":159,"line_end":159,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M5x6::m23","value":"N","parent":{"krate":0,"index":9203},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9217},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85170,"byte_end":85173,"line_start":159,"line_end":159,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M5x6::m33","value":"N","parent":{"krate":0,"index":9203},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9218},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85175,"byte_end":85178,"line_start":159,"line_end":159,"column_start":35,"column_end":38},"name":"m43","qualname":"::base::coordinates::M5x6::m43","value":"N","parent":{"krate":0,"index":9203},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9219},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85180,"byte_end":85183,"line_start":159,"line_end":159,"column_start":40,"column_end":43},"name":"m53","qualname":"::base::coordinates::M5x6::m53","value":"N","parent":{"krate":0,"index":9203},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9220},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85204,"byte_end":85207,"line_start":160,"line_end":160,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M5x6::m14","value":"N","parent":{"krate":0,"index":9203},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9221},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85209,"byte_end":85212,"line_start":160,"line_end":160,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M5x6::m24","value":"N","parent":{"krate":0,"index":9203},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9222},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85214,"byte_end":85217,"line_start":160,"line_end":160,"column_start":30,"column_end":33},"name":"m34","qualname":"::base::coordinates::M5x6::m34","value":"N","parent":{"krate":0,"index":9203},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9223},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85219,"byte_end":85222,"line_start":160,"line_end":160,"column_start":35,"column_end":38},"name":"m44","qualname":"::base::coordinates::M5x6::m44","value":"N","parent":{"krate":0,"index":9203},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9224},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85224,"byte_end":85227,"line_start":160,"line_end":160,"column_start":40,"column_end":43},"name":"m54","qualname":"::base::coordinates::M5x6::m54","value":"N","parent":{"krate":0,"index":9203},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9225},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85248,"byte_end":85251,"line_start":161,"line_end":161,"column_start":20,"column_end":23},"name":"m15","qualname":"::base::coordinates::M5x6::m15","value":"N","parent":{"krate":0,"index":9203},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9226},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85253,"byte_end":85256,"line_start":161,"line_end":161,"column_start":25,"column_end":28},"name":"m25","qualname":"::base::coordinates::M5x6::m25","value":"N","parent":{"krate":0,"index":9203},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9227},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85258,"byte_end":85261,"line_start":161,"line_end":161,"column_start":30,"column_end":33},"name":"m35","qualname":"::base::coordinates::M5x6::m35","value":"N","parent":{"krate":0,"index":9203},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9228},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85263,"byte_end":85266,"line_start":161,"line_end":161,"column_start":35,"column_end":38},"name":"m45","qualname":"::base::coordinates::M5x6::m45","value":"N","parent":{"krate":0,"index":9203},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9229},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85268,"byte_end":85271,"line_start":161,"line_end":161,"column_start":40,"column_end":43},"name":"m55","qualname":"::base::coordinates::M5x6::m55","value":"N","parent":{"krate":0,"index":9203},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9230},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85292,"byte_end":85295,"line_start":162,"line_end":162,"column_start":20,"column_end":23},"name":"m16","qualname":"::base::coordinates::M5x6::m16","value":"N","parent":{"krate":0,"index":9203},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9231},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85297,"byte_end":85300,"line_start":162,"line_end":162,"column_start":25,"column_end":28},"name":"m26","qualname":"::base::coordinates::M5x6::m26","value":"N","parent":{"krate":0,"index":9203},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9232},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85302,"byte_end":85305,"line_start":162,"line_end":162,"column_start":30,"column_end":33},"name":"m36","qualname":"::base::coordinates::M5x6::m36","value":"N","parent":{"krate":0,"index":9203},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9233},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85307,"byte_end":85310,"line_start":162,"line_end":162,"column_start":35,"column_end":38},"name":"m46","qualname":"::base::coordinates::M5x6::m46","value":"N","parent":{"krate":0,"index":9203},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9234},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85312,"byte_end":85315,"line_start":162,"line_end":162,"column_start":40,"column_end":43},"name":"m56","qualname":"::base::coordinates::M5x6::m56","value":"N","parent":{"krate":0,"index":9203},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9258},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85377,"byte_end":85381,"line_start":168,"line_end":168,"column_start":14,"column_end":18},"name":"M6x2","qualname":"::base::coordinates::M6x2","value":"M6x2 { m11, m21, m31, m41, m51, m61, m12, m22, m32, m42, m52, m62 }","parent":null,"children":[{"krate":0,"index":9260},{"krate":0,"index":9261},{"krate":0,"index":9262},{"krate":0,"index":9263},{"krate":0,"index":9264},{"krate":0,"index":9265},{"krate":0,"index":9266},{"krate":0,"index":9267},{"krate":0,"index":9268},{"krate":0,"index":9269},{"krate":0,"index":9270},{"krate":0,"index":9271}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":80884,"byte_end":80971,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":80980,"byte_end":81041,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":81050,"byte_end":81060,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":9260},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85383,"byte_end":85386,"line_start":168,"line_end":168,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M6x2::m11","value":"N","parent":{"krate":0,"index":9258},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9261},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85388,"byte_end":85391,"line_start":168,"line_end":168,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M6x2::m21","value":"N","parent":{"krate":0,"index":9258},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9262},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85393,"byte_end":85396,"line_start":168,"line_end":168,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M6x2::m31","value":"N","parent":{"krate":0,"index":9258},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9263},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85398,"byte_end":85401,"line_start":168,"line_end":168,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M6x2::m41","value":"N","parent":{"krate":0,"index":9258},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9264},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85403,"byte_end":85406,"line_start":168,"line_end":168,"column_start":40,"column_end":43},"name":"m51","qualname":"::base::coordinates::M6x2::m51","value":"N","parent":{"krate":0,"index":9258},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9265},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85408,"byte_end":85411,"line_start":168,"line_end":168,"column_start":45,"column_end":48},"name":"m61","qualname":"::base::coordinates::M6x2::m61","value":"N","parent":{"krate":0,"index":9258},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9266},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85432,"byte_end":85435,"line_start":169,"line_end":169,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M6x2::m12","value":"N","parent":{"krate":0,"index":9258},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9267},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85437,"byte_end":85440,"line_start":169,"line_end":169,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M6x2::m22","value":"N","parent":{"krate":0,"index":9258},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9268},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85442,"byte_end":85445,"line_start":169,"line_end":169,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M6x2::m32","value":"N","parent":{"krate":0,"index":9258},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9269},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85447,"byte_end":85450,"line_start":169,"line_end":169,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M6x2::m42","value":"N","parent":{"krate":0,"index":9258},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9270},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85452,"byte_end":85455,"line_start":169,"line_end":169,"column_start":40,"column_end":43},"name":"m52","qualname":"::base::coordinates::M6x2::m52","value":"N","parent":{"krate":0,"index":9258},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9271},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85457,"byte_end":85460,"line_start":169,"line_end":169,"column_start":45,"column_end":48},"name":"m62","qualname":"::base::coordinates::M6x2::m62","value":"N","parent":{"krate":0,"index":9258},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9295},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85476,"byte_end":85480,"line_start":170,"line_end":170,"column_start":14,"column_end":18},"name":"M6x3","qualname":"::base::coordinates::M6x3","value":"M6x3 { m11, m21, m31, m41, m51, m61, m12, m22, m32, m42, m52, m62, m13, m23, m33, m43, m53, m63 }","parent":null,"children":[{"krate":0,"index":9297},{"krate":0,"index":9298},{"krate":0,"index":9299},{"krate":0,"index":9300},{"krate":0,"index":9301},{"krate":0,"index":9302},{"krate":0,"index":9303},{"krate":0,"index":9304},{"krate":0,"index":9305},{"krate":0,"index":9306},{"krate":0,"index":9307},{"krate":0,"index":9308},{"krate":0,"index":9309},{"krate":0,"index":9310},{"krate":0,"index":9311},{"krate":0,"index":9312},{"krate":0,"index":9313},{"krate":0,"index":9314}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":80884,"byte_end":80971,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":80980,"byte_end":81041,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":81050,"byte_end":81060,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":9297},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85482,"byte_end":85485,"line_start":170,"line_end":170,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M6x3::m11","value":"N","parent":{"krate":0,"index":9295},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9298},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85487,"byte_end":85490,"line_start":170,"line_end":170,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M6x3::m21","value":"N","parent":{"krate":0,"index":9295},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9299},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85492,"byte_end":85495,"line_start":170,"line_end":170,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M6x3::m31","value":"N","parent":{"krate":0,"index":9295},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9300},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85497,"byte_end":85500,"line_start":170,"line_end":170,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M6x3::m41","value":"N","parent":{"krate":0,"index":9295},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9301},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85502,"byte_end":85505,"line_start":170,"line_end":170,"column_start":40,"column_end":43},"name":"m51","qualname":"::base::coordinates::M6x3::m51","value":"N","parent":{"krate":0,"index":9295},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9302},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85507,"byte_end":85510,"line_start":170,"line_end":170,"column_start":45,"column_end":48},"name":"m61","qualname":"::base::coordinates::M6x3::m61","value":"N","parent":{"krate":0,"index":9295},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9303},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85531,"byte_end":85534,"line_start":171,"line_end":171,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M6x3::m12","value":"N","parent":{"krate":0,"index":9295},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9304},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85536,"byte_end":85539,"line_start":171,"line_end":171,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M6x3::m22","value":"N","parent":{"krate":0,"index":9295},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9305},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85541,"byte_end":85544,"line_start":171,"line_end":171,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M6x3::m32","value":"N","parent":{"krate":0,"index":9295},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9306},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85546,"byte_end":85549,"line_start":171,"line_end":171,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M6x3::m42","value":"N","parent":{"krate":0,"index":9295},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9307},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85551,"byte_end":85554,"line_start":171,"line_end":171,"column_start":40,"column_end":43},"name":"m52","qualname":"::base::coordinates::M6x3::m52","value":"N","parent":{"krate":0,"index":9295},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9308},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85556,"byte_end":85559,"line_start":171,"line_end":171,"column_start":45,"column_end":48},"name":"m62","qualname":"::base::coordinates::M6x3::m62","value":"N","parent":{"krate":0,"index":9295},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9309},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85580,"byte_end":85583,"line_start":172,"line_end":172,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M6x3::m13","value":"N","parent":{"krate":0,"index":9295},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9310},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85585,"byte_end":85588,"line_start":172,"line_end":172,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M6x3::m23","value":"N","parent":{"krate":0,"index":9295},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9311},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85590,"byte_end":85593,"line_start":172,"line_end":172,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M6x3::m33","value":"N","parent":{"krate":0,"index":9295},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9312},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85595,"byte_end":85598,"line_start":172,"line_end":172,"column_start":35,"column_end":38},"name":"m43","qualname":"::base::coordinates::M6x3::m43","value":"N","parent":{"krate":0,"index":9295},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9313},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85600,"byte_end":85603,"line_start":172,"line_end":172,"column_start":40,"column_end":43},"name":"m53","qualname":"::base::coordinates::M6x3::m53","value":"N","parent":{"krate":0,"index":9295},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9314},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85605,"byte_end":85608,"line_start":172,"line_end":172,"column_start":45,"column_end":48},"name":"m63","qualname":"::base::coordinates::M6x3::m63","value":"N","parent":{"krate":0,"index":9295},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9338},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85624,"byte_end":85628,"line_start":173,"line_end":173,"column_start":14,"column_end":18},"name":"M6x4","qualname":"::base::coordinates::M6x4","value":"M6x4 { m11, m21, m31, m41, m51, m61, m12, m22, m32, m42, m52, m62, m13, m23, m33, m43, m53, m63, m14, m24, m34, m44, m54, m64 }","parent":null,"children":[{"krate":0,"index":9340},{"krate":0,"index":9341},{"krate":0,"index":9342},{"krate":0,"index":9343},{"krate":0,"index":9344},{"krate":0,"index":9345},{"krate":0,"index":9346},{"krate":0,"index":9347},{"krate":0,"index":9348},{"krate":0,"index":9349},{"krate":0,"index":9350},{"krate":0,"index":9351},{"krate":0,"index":9352},{"krate":0,"index":9353},{"krate":0,"index":9354},{"krate":0,"index":9355},{"krate":0,"index":9356},{"krate":0,"index":9357},{"krate":0,"index":9358},{"krate":0,"index":9359},{"krate":0,"index":9360},{"krate":0,"index":9361},{"krate":0,"index":9362},{"krate":0,"index":9363}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":80884,"byte_end":80971,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":80980,"byte_end":81041,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":81050,"byte_end":81060,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":9340},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85630,"byte_end":85633,"line_start":173,"line_end":173,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M6x4::m11","value":"N","parent":{"krate":0,"index":9338},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9341},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85635,"byte_end":85638,"line_start":173,"line_end":173,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M6x4::m21","value":"N","parent":{"krate":0,"index":9338},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9342},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85640,"byte_end":85643,"line_start":173,"line_end":173,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M6x4::m31","value":"N","parent":{"krate":0,"index":9338},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9343},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85645,"byte_end":85648,"line_start":173,"line_end":173,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M6x4::m41","value":"N","parent":{"krate":0,"index":9338},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9344},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85650,"byte_end":85653,"line_start":173,"line_end":173,"column_start":40,"column_end":43},"name":"m51","qualname":"::base::coordinates::M6x4::m51","value":"N","parent":{"krate":0,"index":9338},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9345},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85655,"byte_end":85658,"line_start":173,"line_end":173,"column_start":45,"column_end":48},"name":"m61","qualname":"::base::coordinates::M6x4::m61","value":"N","parent":{"krate":0,"index":9338},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9346},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85679,"byte_end":85682,"line_start":174,"line_end":174,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M6x4::m12","value":"N","parent":{"krate":0,"index":9338},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9347},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85684,"byte_end":85687,"line_start":174,"line_end":174,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M6x4::m22","value":"N","parent":{"krate":0,"index":9338},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9348},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85689,"byte_end":85692,"line_start":174,"line_end":174,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M6x4::m32","value":"N","parent":{"krate":0,"index":9338},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9349},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85694,"byte_end":85697,"line_start":174,"line_end":174,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M6x4::m42","value":"N","parent":{"krate":0,"index":9338},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9350},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85699,"byte_end":85702,"line_start":174,"line_end":174,"column_start":40,"column_end":43},"name":"m52","qualname":"::base::coordinates::M6x4::m52","value":"N","parent":{"krate":0,"index":9338},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9351},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85704,"byte_end":85707,"line_start":174,"line_end":174,"column_start":45,"column_end":48},"name":"m62","qualname":"::base::coordinates::M6x4::m62","value":"N","parent":{"krate":0,"index":9338},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9352},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85728,"byte_end":85731,"line_start":175,"line_end":175,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M6x4::m13","value":"N","parent":{"krate":0,"index":9338},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9353},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85733,"byte_end":85736,"line_start":175,"line_end":175,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M6x4::m23","value":"N","parent":{"krate":0,"index":9338},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9354},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85738,"byte_end":85741,"line_start":175,"line_end":175,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M6x4::m33","value":"N","parent":{"krate":0,"index":9338},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9355},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85743,"byte_end":85746,"line_start":175,"line_end":175,"column_start":35,"column_end":38},"name":"m43","qualname":"::base::coordinates::M6x4::m43","value":"N","parent":{"krate":0,"index":9338},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9356},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85748,"byte_end":85751,"line_start":175,"line_end":175,"column_start":40,"column_end":43},"name":"m53","qualname":"::base::coordinates::M6x4::m53","value":"N","parent":{"krate":0,"index":9338},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9357},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85753,"byte_end":85756,"line_start":175,"line_end":175,"column_start":45,"column_end":48},"name":"m63","qualname":"::base::coordinates::M6x4::m63","value":"N","parent":{"krate":0,"index":9338},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9358},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85777,"byte_end":85780,"line_start":176,"line_end":176,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M6x4::m14","value":"N","parent":{"krate":0,"index":9338},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9359},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85782,"byte_end":85785,"line_start":176,"line_end":176,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M6x4::m24","value":"N","parent":{"krate":0,"index":9338},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9360},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85787,"byte_end":85790,"line_start":176,"line_end":176,"column_start":30,"column_end":33},"name":"m34","qualname":"::base::coordinates::M6x4::m34","value":"N","parent":{"krate":0,"index":9338},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9361},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85792,"byte_end":85795,"line_start":176,"line_end":176,"column_start":35,"column_end":38},"name":"m44","qualname":"::base::coordinates::M6x4::m44","value":"N","parent":{"krate":0,"index":9338},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9362},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85797,"byte_end":85800,"line_start":176,"line_end":176,"column_start":40,"column_end":43},"name":"m54","qualname":"::base::coordinates::M6x4::m54","value":"N","parent":{"krate":0,"index":9338},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9363},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85802,"byte_end":85805,"line_start":176,"line_end":176,"column_start":45,"column_end":48},"name":"m64","qualname":"::base::coordinates::M6x4::m64","value":"N","parent":{"krate":0,"index":9338},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9387},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85821,"byte_end":85825,"line_start":177,"line_end":177,"column_start":14,"column_end":18},"name":"M6x5","qualname":"::base::coordinates::M6x5","value":"M6x5 { m11, m21, m31, m41, m51, m61, m12, m22, m32, m42, m52, m62, m13, m23, m33, m43, m53, m63, m14, m24, m34, m44, m54, m64, m15, m25, m35, m45, m55, m65 }","parent":null,"children":[{"krate":0,"index":9389},{"krate":0,"index":9390},{"krate":0,"index":9391},{"krate":0,"index":9392},{"krate":0,"index":9393},{"krate":0,"index":9394},{"krate":0,"index":9395},{"krate":0,"index":9396},{"krate":0,"index":9397},{"krate":0,"index":9398},{"krate":0,"index":9399},{"krate":0,"index":9400},{"krate":0,"index":9401},{"krate":0,"index":9402},{"krate":0,"index":9403},{"krate":0,"index":9404},{"krate":0,"index":9405},{"krate":0,"index":9406},{"krate":0,"index":9407},{"krate":0,"index":9408},{"krate":0,"index":9409},{"krate":0,"index":9410},{"krate":0,"index":9411},{"krate":0,"index":9412},{"krate":0,"index":9413},{"krate":0,"index":9414},{"krate":0,"index":9415},{"krate":0,"index":9416},{"krate":0,"index":9417},{"krate":0,"index":9418}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":80884,"byte_end":80971,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":80980,"byte_end":81041,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":81050,"byte_end":81060,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":9389},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85827,"byte_end":85830,"line_start":177,"line_end":177,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M6x5::m11","value":"N","parent":{"krate":0,"index":9387},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9390},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85832,"byte_end":85835,"line_start":177,"line_end":177,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M6x5::m21","value":"N","parent":{"krate":0,"index":9387},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9391},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85837,"byte_end":85840,"line_start":177,"line_end":177,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M6x5::m31","value":"N","parent":{"krate":0,"index":9387},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9392},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85842,"byte_end":85845,"line_start":177,"line_end":177,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M6x5::m41","value":"N","parent":{"krate":0,"index":9387},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9393},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85847,"byte_end":85850,"line_start":177,"line_end":177,"column_start":40,"column_end":43},"name":"m51","qualname":"::base::coordinates::M6x5::m51","value":"N","parent":{"krate":0,"index":9387},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9394},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85852,"byte_end":85855,"line_start":177,"line_end":177,"column_start":45,"column_end":48},"name":"m61","qualname":"::base::coordinates::M6x5::m61","value":"N","parent":{"krate":0,"index":9387},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9395},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85876,"byte_end":85879,"line_start":178,"line_end":178,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M6x5::m12","value":"N","parent":{"krate":0,"index":9387},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9396},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85881,"byte_end":85884,"line_start":178,"line_end":178,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M6x5::m22","value":"N","parent":{"krate":0,"index":9387},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9397},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85886,"byte_end":85889,"line_start":178,"line_end":178,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M6x5::m32","value":"N","parent":{"krate":0,"index":9387},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9398},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85891,"byte_end":85894,"line_start":178,"line_end":178,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M6x5::m42","value":"N","parent":{"krate":0,"index":9387},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9399},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85896,"byte_end":85899,"line_start":178,"line_end":178,"column_start":40,"column_end":43},"name":"m52","qualname":"::base::coordinates::M6x5::m52","value":"N","parent":{"krate":0,"index":9387},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9400},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85901,"byte_end":85904,"line_start":178,"line_end":178,"column_start":45,"column_end":48},"name":"m62","qualname":"::base::coordinates::M6x5::m62","value":"N","parent":{"krate":0,"index":9387},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9401},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85925,"byte_end":85928,"line_start":179,"line_end":179,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M6x5::m13","value":"N","parent":{"krate":0,"index":9387},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9402},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85930,"byte_end":85933,"line_start":179,"line_end":179,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M6x5::m23","value":"N","parent":{"krate":0,"index":9387},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9403},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85935,"byte_end":85938,"line_start":179,"line_end":179,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M6x5::m33","value":"N","parent":{"krate":0,"index":9387},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9404},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85940,"byte_end":85943,"line_start":179,"line_end":179,"column_start":35,"column_end":38},"name":"m43","qualname":"::base::coordinates::M6x5::m43","value":"N","parent":{"krate":0,"index":9387},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9405},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85945,"byte_end":85948,"line_start":179,"line_end":179,"column_start":40,"column_end":43},"name":"m53","qualname":"::base::coordinates::M6x5::m53","value":"N","parent":{"krate":0,"index":9387},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9406},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85950,"byte_end":85953,"line_start":179,"line_end":179,"column_start":45,"column_end":48},"name":"m63","qualname":"::base::coordinates::M6x5::m63","value":"N","parent":{"krate":0,"index":9387},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9407},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85974,"byte_end":85977,"line_start":180,"line_end":180,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M6x5::m14","value":"N","parent":{"krate":0,"index":9387},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9408},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85979,"byte_end":85982,"line_start":180,"line_end":180,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M6x5::m24","value":"N","parent":{"krate":0,"index":9387},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9409},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85984,"byte_end":85987,"line_start":180,"line_end":180,"column_start":30,"column_end":33},"name":"m34","qualname":"::base::coordinates::M6x5::m34","value":"N","parent":{"krate":0,"index":9387},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9410},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85989,"byte_end":85992,"line_start":180,"line_end":180,"column_start":35,"column_end":38},"name":"m44","qualname":"::base::coordinates::M6x5::m44","value":"N","parent":{"krate":0,"index":9387},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9411},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85994,"byte_end":85997,"line_start":180,"line_end":180,"column_start":40,"column_end":43},"name":"m54","qualname":"::base::coordinates::M6x5::m54","value":"N","parent":{"krate":0,"index":9387},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9412},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":85999,"byte_end":86002,"line_start":180,"line_end":180,"column_start":45,"column_end":48},"name":"m64","qualname":"::base::coordinates::M6x5::m64","value":"N","parent":{"krate":0,"index":9387},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9413},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":86023,"byte_end":86026,"line_start":181,"line_end":181,"column_start":20,"column_end":23},"name":"m15","qualname":"::base::coordinates::M6x5::m15","value":"N","parent":{"krate":0,"index":9387},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9414},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":86028,"byte_end":86031,"line_start":181,"line_end":181,"column_start":25,"column_end":28},"name":"m25","qualname":"::base::coordinates::M6x5::m25","value":"N","parent":{"krate":0,"index":9387},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9415},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":86033,"byte_end":86036,"line_start":181,"line_end":181,"column_start":30,"column_end":33},"name":"m35","qualname":"::base::coordinates::M6x5::m35","value":"N","parent":{"krate":0,"index":9387},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9416},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":86038,"byte_end":86041,"line_start":181,"line_end":181,"column_start":35,"column_end":38},"name":"m45","qualname":"::base::coordinates::M6x5::m45","value":"N","parent":{"krate":0,"index":9387},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9417},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":86043,"byte_end":86046,"line_start":181,"line_end":181,"column_start":40,"column_end":43},"name":"m55","qualname":"::base::coordinates::M6x5::m55","value":"N","parent":{"krate":0,"index":9387},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9418},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":86048,"byte_end":86051,"line_start":181,"line_end":181,"column_start":45,"column_end":48},"name":"m65","qualname":"::base::coordinates::M6x5::m65","value":"N","parent":{"krate":0,"index":9387},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9442},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":86067,"byte_end":86071,"line_start":182,"line_end":182,"column_start":14,"column_end":18},"name":"M6x6","qualname":"::base::coordinates::M6x6","value":"M6x6 { m11, m21, m31, m41, m51, m61, m12, m22, m32, m42, m52, m62, m13, m23, m33, m43, m53, m63, m14, m24, m34, m44, m54, m64, m15, m25, m35, m45, m55, m65, m16, m26, m36, m46, m56, m66 }","parent":null,"children":[{"krate":0,"index":9444},{"krate":0,"index":9445},{"krate":0,"index":9446},{"krate":0,"index":9447},{"krate":0,"index":9448},{"krate":0,"index":9449},{"krate":0,"index":9450},{"krate":0,"index":9451},{"krate":0,"index":9452},{"krate":0,"index":9453},{"krate":0,"index":9454},{"krate":0,"index":9455},{"krate":0,"index":9456},{"krate":0,"index":9457},{"krate":0,"index":9458},{"krate":0,"index":9459},{"krate":0,"index":9460},{"krate":0,"index":9461},{"krate":0,"index":9462},{"krate":0,"index":9463},{"krate":0,"index":9464},{"krate":0,"index":9465},{"krate":0,"index":9466},{"krate":0,"index":9467},{"krate":0,"index":9468},{"krate":0,"index":9469},{"krate":0,"index":9470},{"krate":0,"index":9471},{"krate":0,"index":9472},{"krate":0,"index":9473},{"krate":0,"index":9474},{"krate":0,"index":9475},{"krate":0,"index":9476},{"krate":0,"index":9477},{"krate":0,"index":9478},{"krate":0,"index":9479}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":80884,"byte_end":80971,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":80980,"byte_end":81041,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":81050,"byte_end":81060,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":9444},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":86073,"byte_end":86076,"line_start":182,"line_end":182,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M6x6::m11","value":"N","parent":{"krate":0,"index":9442},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9445},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":86078,"byte_end":86081,"line_start":182,"line_end":182,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M6x6::m21","value":"N","parent":{"krate":0,"index":9442},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9446},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":86083,"byte_end":86086,"line_start":182,"line_end":182,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M6x6::m31","value":"N","parent":{"krate":0,"index":9442},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9447},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":86088,"byte_end":86091,"line_start":182,"line_end":182,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M6x6::m41","value":"N","parent":{"krate":0,"index":9442},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9448},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":86093,"byte_end":86096,"line_start":182,"line_end":182,"column_start":40,"column_end":43},"name":"m51","qualname":"::base::coordinates::M6x6::m51","value":"N","parent":{"krate":0,"index":9442},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9449},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":86098,"byte_end":86101,"line_start":182,"line_end":182,"column_start":45,"column_end":48},"name":"m61","qualname":"::base::coordinates::M6x6::m61","value":"N","parent":{"krate":0,"index":9442},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9450},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":86122,"byte_end":86125,"line_start":183,"line_end":183,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M6x6::m12","value":"N","parent":{"krate":0,"index":9442},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9451},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":86127,"byte_end":86130,"line_start":183,"line_end":183,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M6x6::m22","value":"N","parent":{"krate":0,"index":9442},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9452},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":86132,"byte_end":86135,"line_start":183,"line_end":183,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M6x6::m32","value":"N","parent":{"krate":0,"index":9442},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9453},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":86137,"byte_end":86140,"line_start":183,"line_end":183,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M6x6::m42","value":"N","parent":{"krate":0,"index":9442},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9454},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":86142,"byte_end":86145,"line_start":183,"line_end":183,"column_start":40,"column_end":43},"name":"m52","qualname":"::base::coordinates::M6x6::m52","value":"N","parent":{"krate":0,"index":9442},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9455},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":86147,"byte_end":86150,"line_start":183,"line_end":183,"column_start":45,"column_end":48},"name":"m62","qualname":"::base::coordinates::M6x6::m62","value":"N","parent":{"krate":0,"index":9442},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9456},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":86171,"byte_end":86174,"line_start":184,"line_end":184,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M6x6::m13","value":"N","parent":{"krate":0,"index":9442},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9457},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":86176,"byte_end":86179,"line_start":184,"line_end":184,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M6x6::m23","value":"N","parent":{"krate":0,"index":9442},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9458},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":86181,"byte_end":86184,"line_start":184,"line_end":184,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M6x6::m33","value":"N","parent":{"krate":0,"index":9442},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9459},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":86186,"byte_end":86189,"line_start":184,"line_end":184,"column_start":35,"column_end":38},"name":"m43","qualname":"::base::coordinates::M6x6::m43","value":"N","parent":{"krate":0,"index":9442},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9460},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":86191,"byte_end":86194,"line_start":184,"line_end":184,"column_start":40,"column_end":43},"name":"m53","qualname":"::base::coordinates::M6x6::m53","value":"N","parent":{"krate":0,"index":9442},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9461},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":86196,"byte_end":86199,"line_start":184,"line_end":184,"column_start":45,"column_end":48},"name":"m63","qualname":"::base::coordinates::M6x6::m63","value":"N","parent":{"krate":0,"index":9442},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9462},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":86220,"byte_end":86223,"line_start":185,"line_end":185,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M6x6::m14","value":"N","parent":{"krate":0,"index":9442},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9463},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":86225,"byte_end":86228,"line_start":185,"line_end":185,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M6x6::m24","value":"N","parent":{"krate":0,"index":9442},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9464},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":86230,"byte_end":86233,"line_start":185,"line_end":185,"column_start":30,"column_end":33},"name":"m34","qualname":"::base::coordinates::M6x6::m34","value":"N","parent":{"krate":0,"index":9442},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9465},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":86235,"byte_end":86238,"line_start":185,"line_end":185,"column_start":35,"column_end":38},"name":"m44","qualname":"::base::coordinates::M6x6::m44","value":"N","parent":{"krate":0,"index":9442},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9466},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":86240,"byte_end":86243,"line_start":185,"line_end":185,"column_start":40,"column_end":43},"name":"m54","qualname":"::base::coordinates::M6x6::m54","value":"N","parent":{"krate":0,"index":9442},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9467},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":86245,"byte_end":86248,"line_start":185,"line_end":185,"column_start":45,"column_end":48},"name":"m64","qualname":"::base::coordinates::M6x6::m64","value":"N","parent":{"krate":0,"index":9442},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9468},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":86269,"byte_end":86272,"line_start":186,"line_end":186,"column_start":20,"column_end":23},"name":"m15","qualname":"::base::coordinates::M6x6::m15","value":"N","parent":{"krate":0,"index":9442},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9469},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":86274,"byte_end":86277,"line_start":186,"line_end":186,"column_start":25,"column_end":28},"name":"m25","qualname":"::base::coordinates::M6x6::m25","value":"N","parent":{"krate":0,"index":9442},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9470},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":86279,"byte_end":86282,"line_start":186,"line_end":186,"column_start":30,"column_end":33},"name":"m35","qualname":"::base::coordinates::M6x6::m35","value":"N","parent":{"krate":0,"index":9442},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9471},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":86284,"byte_end":86287,"line_start":186,"line_end":186,"column_start":35,"column_end":38},"name":"m45","qualname":"::base::coordinates::M6x6::m45","value":"N","parent":{"krate":0,"index":9442},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9472},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":86289,"byte_end":86292,"line_start":186,"line_end":186,"column_start":40,"column_end":43},"name":"m55","qualname":"::base::coordinates::M6x6::m55","value":"N","parent":{"krate":0,"index":9442},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9473},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":86294,"byte_end":86297,"line_start":186,"line_end":186,"column_start":45,"column_end":48},"name":"m65","qualname":"::base::coordinates::M6x6::m65","value":"N","parent":{"krate":0,"index":9442},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9474},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":86318,"byte_end":86321,"line_start":187,"line_end":187,"column_start":20,"column_end":23},"name":"m16","qualname":"::base::coordinates::M6x6::m16","value":"N","parent":{"krate":0,"index":9442},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9475},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":86323,"byte_end":86326,"line_start":187,"line_end":187,"column_start":25,"column_end":28},"name":"m26","qualname":"::base::coordinates::M6x6::m26","value":"N","parent":{"krate":0,"index":9442},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9476},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":86328,"byte_end":86331,"line_start":187,"line_end":187,"column_start":30,"column_end":33},"name":"m36","qualname":"::base::coordinates::M6x6::m36","value":"N","parent":{"krate":0,"index":9442},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9477},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":86333,"byte_end":86336,"line_start":187,"line_end":187,"column_start":35,"column_end":38},"name":"m46","qualname":"::base::coordinates::M6x6::m46","value":"N","parent":{"krate":0,"index":9442},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9478},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":86338,"byte_end":86341,"line_start":187,"line_end":187,"column_start":40,"column_end":43},"name":"m56","qualname":"::base::coordinates::M6x6::m56","value":"N","parent":{"krate":0,"index":9442},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9479},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/coordinates.rs","byte_start":86343,"byte_end":86346,"line_start":187,"line_end":187,"column_start":45,"column_end":48},"name":"m66","qualname":"::base::coordinates::M6x6::m66","value":"N","parent":{"krate":0,"index":9442},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":380},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/default_allocator.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"default_allocator","qualname":"::base::default_allocator","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/default_allocator.rs","parent":null,"children":[{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":395},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":402},{"krate":0,"index":410},{"krate":0,"index":417},{"krate":0,"index":424},{"krate":0,"index":431},{"krate":0,"index":437},{"krate":0,"index":443},{"krate":0,"index":448},{"krate":0,"index":453},{"krate":0,"index":458}],"decl_id":null,"docs":" The default matrix data storage allocator.","sig":null,"attributes":[{"value":"! The default matrix data storage allocator.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/default_allocator.rs","byte_start":87374,"byte_end":87420,"line_start":1,"line_end":1,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/default_allocator.rs","byte_start":87421,"byte_end":87424,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This will use stack-allocated buffers for matrices with dimensions known at compile-time, and","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/default_allocator.rs","byte_start":87425,"byte_end":87522,"line_start":3,"line_end":3,"column_start":1,"column_end":98}},{"value":"! heap-allocated buffers for matrices with at least one dimension unknown at compile-time.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/default_allocator.rs","byte_start":87523,"byte_end":87615,"line_start":4,"line_end":4,"column_start":1,"column_end":93}}]},{"kind":"Struct","id":{"krate":0,"index":400},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/default_allocator.rs","byte_start":88366,"byte_end":88382,"line_start":34,"line_end":34,"column_start":12,"column_end":28},"name":"DefaultAllocator","qualname":"::base::default_allocator::DefaultAllocator","value":"","parent":null,"children":[],"decl_id":null,"docs":" An allocator based on `GenericArray` and `VecStorage` for statically-sized and dynamically-sized\n matrices respectively.\n","sig":null,"attributes":[{"value":"/ An allocator based on `GenericArray` and `VecStorage` for statically-sized and dynamically-sized","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/default_allocator.rs","byte_start":88227,"byte_end":88327,"line_start":32,"line_end":32,"column_start":1,"column_end":101}},{"value":"/ matrices respectively.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/default_allocator.rs","byte_start":88328,"byte_end":88354,"line_start":33,"line_end":33,"column_start":1,"column_end":27}}]},{"kind":"Mod","id":{"krate":0,"index":463},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dimension","qualname":"::base::dimension","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","parent":null,"children":[{"krate":0,"index":464},{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":474},{"krate":0,"index":9827},{"krate":0,"index":9839},{"krate":0,"index":9838},{"krate":0,"index":9835},{"krate":0,"index":9836},{"krate":0,"index":9831},{"krate":0,"index":9832},{"krate":0,"index":9829},{"krate":0,"index":489},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":501},{"krate":0,"index":505},{"krate":0,"index":508},{"krate":0,"index":511},{"krate":0,"index":9841},{"krate":0,"index":9844},{"krate":0,"index":9848},{"krate":0,"index":9853},{"krate":0,"index":9857},{"krate":0,"index":9861},{"krate":0,"index":9864},{"krate":0,"index":9868},{"krate":0,"index":9873},{"krate":0,"index":9876},{"krate":0,"index":9880},{"krate":0,"index":9885},{"krate":0,"index":9889},{"krate":0,"index":9893},{"krate":0,"index":9896},{"krate":0,"index":9900},{"krate":0,"index":9905},{"krate":0,"index":9908},{"krate":0,"index":9912},{"krate":0,"index":9917},{"krate":0,"index":9921},{"krate":0,"index":9925},{"krate":0,"index":9928},{"krate":0,"index":9932},{"krate":0,"index":9937},{"krate":0,"index":9940},{"krate":0,"index":9944},{"krate":0,"index":9949},{"krate":0,"index":9953},{"krate":0,"index":9957},{"krate":0,"index":9960},{"krate":0,"index":9964},{"krate":0,"index":9969},{"krate":0,"index":9972},{"krate":0,"index":9976},{"krate":0,"index":9981},{"krate":0,"index":9985},{"krate":0,"index":9989},{"krate":0,"index":9992},{"krate":0,"index":9996},{"krate":0,"index":10001},{"krate":0,"index":10004},{"krate":0,"index":10008},{"krate":0,"index":10013},{"krate":0,"index":10017},{"krate":0,"index":10021},{"krate":0,"index":10024},{"krate":0,"index":10028},{"krate":0,"index":512},{"krate":0,"index":516},{"krate":0,"index":10033},{"krate":0,"index":10047},{"krate":0,"index":10046},{"krate":0,"index":10044},{"krate":0,"index":10041},{"krate":0,"index":10038},{"krate":0,"index":10039},{"krate":0,"index":10035},{"krate":0,"index":10036},{"krate":0,"index":518},{"krate":0,"index":522},{"krate":0,"index":525},{"krate":0,"index":527},{"krate":0,"index":11319},{"krate":0,"index":11333},{"krate":0,"index":11332},{"krate":0,"index":11330},{"krate":0,"index":11327},{"krate":0,"index":11324},{"krate":0,"index":11325},{"krate":0,"index":11321},{"krate":0,"index":11322},{"krate":0,"index":10049},{"krate":0,"index":10053},{"krate":0,"index":10056},{"krate":0,"index":10058},{"krate":0,"index":11335},{"krate":0,"index":11349},{"krate":0,"index":11348},{"krate":0,"index":11346},{"krate":0,"index":11343},{"krate":0,"index":11340},{"krate":0,"index":11341},{"krate":0,"index":11337},{"krate":0,"index":11338},{"krate":0,"index":10059},{"krate":0,"index":10063},{"krate":0,"index":10066},{"krate":0,"index":10068},{"krate":0,"index":11351},{"krate":0,"index":11365},{"krate":0,"index":11364},{"krate":0,"index":11362},{"krate":0,"index":11359},{"krate":0,"index":11356},{"krate":0,"index":11357},{"krate":0,"index":11353},{"krate":0,"index":11354},{"krate":0,"index":10069},{"krate":0,"index":10073},{"krate":0,"index":10076},{"krate":0,"index":10078},{"krate":0,"index":11367},{"krate":0,"index":11381},{"krate":0,"index":11380},{"krate":0,"index":11378},{"krate":0,"index":11375},{"krate":0,"index":11372},{"krate":0,"index":11373},{"krate":0,"index":11369},{"krate":0,"index":11370},{"krate":0,"index":10079},{"krate":0,"index":10083},{"krate":0,"index":10086},{"krate":0,"index":10088},{"krate":0,"index":11383},{"krate":0,"index":11397},{"krate":0,"index":11396},{"krate":0,"index":11394},{"krate":0,"index":11391},{"krate":0,"index":11388},{"krate":0,"index":11389},{"krate":0,"index":11385},{"krate":0,"index":11386},{"krate":0,"index":10089},{"krate":0,"index":10093},{"krate":0,"index":10096},{"krate":0,"index":10098},{"krate":0,"index":11399},{"krate":0,"index":11413},{"krate":0,"index":11412},{"krate":0,"index":11410},{"krate":0,"index":11407},{"krate":0,"index":11404},{"krate":0,"index":11405},{"krate":0,"index":11401},{"krate":0,"index":11402},{"krate":0,"index":10099},{"krate":0,"index":10103},{"krate":0,"index":10106},{"krate":0,"index":10108},{"krate":0,"index":11415},{"krate":0,"index":11429},{"krate":0,"index":11428},{"krate":0,"index":11426},{"krate":0,"index":11423},{"krate":0,"index":11420},{"krate":0,"index":11421},{"krate":0,"index":11417},{"krate":0,"index":11418},{"krate":0,"index":10109},{"krate":0,"index":10113},{"krate":0,"index":10116},{"krate":0,"index":10118},{"krate":0,"index":11431},{"krate":0,"index":11445},{"krate":0,"index":11444},{"krate":0,"index":11442},{"krate":0,"index":11439},{"krate":0,"index":11436},{"krate":0,"index":11437},{"krate":0,"index":11433},{"krate":0,"index":11434},{"krate":0,"index":10119},{"krate":0,"index":10123},{"krate":0,"index":10126},{"krate":0,"index":10128},{"krate":0,"index":11447},{"krate":0,"index":11461},{"krate":0,"index":11460},{"krate":0,"index":11458},{"krate":0,"index":11455},{"krate":0,"index":11452},{"krate":0,"index":11453},{"krate":0,"index":11449},{"krate":0,"index":11450},{"krate":0,"index":10129},{"krate":0,"index":10133},{"krate":0,"index":10136},{"krate":0,"index":10138},{"krate":0,"index":11463},{"krate":0,"index":11477},{"krate":0,"index":11476},{"krate":0,"index":11474},{"krate":0,"index":11471},{"krate":0,"index":11468},{"krate":0,"index":11469},{"krate":0,"index":11465},{"krate":0,"index":11466},{"krate":0,"index":10139},{"krate":0,"index":10143},{"krate":0,"index":10146},{"krate":0,"index":10148},{"krate":0,"index":11479},{"krate":0,"index":11493},{"krate":0,"index":11492},{"krate":0,"index":11490},{"krate":0,"index":11487},{"krate":0,"index":11484},{"krate":0,"index":11485},{"krate":0,"index":11481},{"krate":0,"index":11482},{"krate":0,"index":10149},{"krate":0,"index":10153},{"krate":0,"index":10156},{"krate":0,"index":10158},{"krate":0,"index":11495},{"krate":0,"index":11509},{"krate":0,"index":11508},{"krate":0,"index":11506},{"krate":0,"index":11503},{"krate":0,"index":11500},{"krate":0,"index":11501},{"krate":0,"index":11497},{"krate":0,"index":11498},{"krate":0,"index":10159},{"krate":0,"index":10163},{"krate":0,"index":10166},{"krate":0,"index":10168},{"krate":0,"index":11511},{"krate":0,"index":11525},{"krate":0,"index":11524},{"krate":0,"index":11522},{"krate":0,"index":11519},{"krate":0,"index":11516},{"krate":0,"index":11517},{"krate":0,"index":11513},{"krate":0,"index":11514},{"krate":0,"index":10169},{"krate":0,"index":10173},{"krate":0,"index":10176},{"krate":0,"index":10178},{"krate":0,"index":11527},{"krate":0,"index":11541},{"krate":0,"index":11540},{"krate":0,"index":11538},{"krate":0,"index":11535},{"krate":0,"index":11532},{"krate":0,"index":11533},{"krate":0,"index":11529},{"krate":0,"index":11530},{"krate":0,"index":10179},{"krate":0,"index":10183},{"krate":0,"index":10186},{"krate":0,"index":10188},{"krate":0,"index":11543},{"krate":0,"index":11557},{"krate":0,"index":11556},{"krate":0,"index":11554},{"krate":0,"index":11551},{"krate":0,"index":11548},{"krate":0,"index":11549},{"krate":0,"index":11545},{"krate":0,"index":11546},{"krate":0,"index":10189},{"krate":0,"index":10193},{"krate":0,"index":10196},{"krate":0,"index":10198},{"krate":0,"index":11559},{"krate":0,"index":11573},{"krate":0,"index":11572},{"krate":0,"index":11570},{"krate":0,"index":11567},{"krate":0,"index":11564},{"krate":0,"index":11565},{"krate":0,"index":11561},{"krate":0,"index":11562},{"krate":0,"index":10199},{"krate":0,"index":10203},{"krate":0,"index":10206},{"krate":0,"index":10208},{"krate":0,"index":11575},{"krate":0,"index":11589},{"krate":0,"index":11588},{"krate":0,"index":11586},{"krate":0,"index":11583},{"krate":0,"index":11580},{"krate":0,"index":11581},{"krate":0,"index":11577},{"krate":0,"index":11578},{"krate":0,"index":10209},{"krate":0,"index":10213},{"krate":0,"index":10216},{"krate":0,"index":10218},{"krate":0,"index":11591},{"krate":0,"index":11605},{"krate":0,"index":11604},{"krate":0,"index":11602},{"krate":0,"index":11599},{"krate":0,"index":11596},{"krate":0,"index":11597},{"krate":0,"index":11593},{"krate":0,"index":11594},{"krate":0,"index":10219},{"krate":0,"index":10223},{"krate":0,"index":10226},{"krate":0,"index":10228},{"krate":0,"index":11607},{"krate":0,"index":11621},{"krate":0,"index":11620},{"krate":0,"index":11618},{"krate":0,"index":11615},{"krate":0,"index":11612},{"krate":0,"index":11613},{"krate":0,"index":11609},{"krate":0,"index":11610},{"krate":0,"index":10229},{"krate":0,"index":10233},{"krate":0,"index":10236},{"krate":0,"index":10238},{"krate":0,"index":11623},{"krate":0,"index":11637},{"krate":0,"index":11636},{"krate":0,"index":11634},{"krate":0,"index":11631},{"krate":0,"index":11628},{"krate":0,"index":11629},{"krate":0,"index":11625},{"krate":0,"index":11626},{"krate":0,"index":10239},{"krate":0,"index":10243},{"krate":0,"index":10246},{"krate":0,"index":10248},{"krate":0,"index":11639},{"krate":0,"index":11653},{"krate":0,"index":11652},{"krate":0,"index":11650},{"krate":0,"index":11647},{"krate":0,"index":11644},{"krate":0,"index":11645},{"krate":0,"index":11641},{"krate":0,"index":11642},{"krate":0,"index":10249},{"krate":0,"index":10253},{"krate":0,"index":10256},{"krate":0,"index":10258},{"krate":0,"index":11655},{"krate":0,"index":11669},{"krate":0,"index":11668},{"krate":0,"index":11666},{"krate":0,"index":11663},{"krate":0,"index":11660},{"krate":0,"index":11661},{"krate":0,"index":11657},{"krate":0,"index":11658},{"krate":0,"index":10259},{"krate":0,"index":10263},{"krate":0,"index":10266},{"krate":0,"index":10268},{"krate":0,"index":11671},{"krate":0,"index":11685},{"krate":0,"index":11684},{"krate":0,"index":11682},{"krate":0,"index":11679},{"krate":0,"index":11676},{"krate":0,"index":11677},{"krate":0,"index":11673},{"krate":0,"index":11674},{"krate":0,"index":10269},{"krate":0,"index":10273},{"krate":0,"index":10276},{"krate":0,"index":10278},{"krate":0,"index":11687},{"krate":0,"index":11701},{"krate":0,"index":11700},{"krate":0,"index":11698},{"krate":0,"index":11695},{"krate":0,"index":11692},{"krate":0,"index":11693},{"krate":0,"index":11689},{"krate":0,"index":11690},{"krate":0,"index":10279},{"krate":0,"index":10283},{"krate":0,"index":10286},{"krate":0,"index":10288},{"krate":0,"index":11703},{"krate":0,"index":11717},{"krate":0,"index":11716},{"krate":0,"index":11714},{"krate":0,"index":11711},{"krate":0,"index":11708},{"krate":0,"index":11709},{"krate":0,"index":11705},{"krate":0,"index":11706},{"krate":0,"index":10289},{"krate":0,"index":10293},{"krate":0,"index":10296},{"krate":0,"index":10298},{"krate":0,"index":11719},{"krate":0,"index":11733},{"krate":0,"index":11732},{"krate":0,"index":11730},{"krate":0,"index":11727},{"krate":0,"index":11724},{"krate":0,"index":11725},{"krate":0,"index":11721},{"krate":0,"index":11722},{"krate":0,"index":10299},{"krate":0,"index":10303},{"krate":0,"index":10306},{"krate":0,"index":10308},{"krate":0,"index":11735},{"krate":0,"index":11749},{"krate":0,"index":11748},{"krate":0,"index":11746},{"krate":0,"index":11743},{"krate":0,"index":11740},{"krate":0,"index":11741},{"krate":0,"index":11737},{"krate":0,"index":11738},{"krate":0,"index":10309},{"krate":0,"index":10313},{"krate":0,"index":10316},{"krate":0,"index":10318},{"krate":0,"index":11751},{"krate":0,"index":11765},{"krate":0,"index":11764},{"krate":0,"index":11762},{"krate":0,"index":11759},{"krate":0,"index":11756},{"krate":0,"index":11757},{"krate":0,"index":11753},{"krate":0,"index":11754},{"krate":0,"index":10319},{"krate":0,"index":10323},{"krate":0,"index":10326},{"krate":0,"index":10328},{"krate":0,"index":11767},{"krate":0,"index":11781},{"krate":0,"index":11780},{"krate":0,"index":11778},{"krate":0,"index":11775},{"krate":0,"index":11772},{"krate":0,"index":11773},{"krate":0,"index":11769},{"krate":0,"index":11770},{"krate":0,"index":10329},{"krate":0,"index":10333},{"krate":0,"index":10336},{"krate":0,"index":10338},{"krate":0,"index":11783},{"krate":0,"index":11797},{"krate":0,"index":11796},{"krate":0,"index":11794},{"krate":0,"index":11791},{"krate":0,"index":11788},{"krate":0,"index":11789},{"krate":0,"index":11785},{"krate":0,"index":11786},{"krate":0,"index":10339},{"krate":0,"index":10343},{"krate":0,"index":10346},{"krate":0,"index":10348},{"krate":0,"index":11799},{"krate":0,"index":11813},{"krate":0,"index":11812},{"krate":0,"index":11810},{"krate":0,"index":11807},{"krate":0,"index":11804},{"krate":0,"index":11805},{"krate":0,"index":11801},{"krate":0,"index":11802},{"krate":0,"index":10349},{"krate":0,"index":10353},{"krate":0,"index":10356},{"krate":0,"index":10358},{"krate":0,"index":11815},{"krate":0,"index":11829},{"krate":0,"index":11828},{"krate":0,"index":11826},{"krate":0,"index":11823},{"krate":0,"index":11820},{"krate":0,"index":11821},{"krate":0,"index":11817},{"krate":0,"index":11818},{"krate":0,"index":10359},{"krate":0,"index":10363},{"krate":0,"index":10366},{"krate":0,"index":10368},{"krate":0,"index":11831},{"krate":0,"index":11845},{"krate":0,"index":11844},{"krate":0,"index":11842},{"krate":0,"index":11839},{"krate":0,"index":11836},{"krate":0,"index":11837},{"krate":0,"index":11833},{"krate":0,"index":11834},{"krate":0,"index":10369},{"krate":0,"index":10373},{"krate":0,"index":10376},{"krate":0,"index":10378},{"krate":0,"index":11847},{"krate":0,"index":11861},{"krate":0,"index":11860},{"krate":0,"index":11858},{"krate":0,"index":11855},{"krate":0,"index":11852},{"krate":0,"index":11853},{"krate":0,"index":11849},{"krate":0,"index":11850},{"krate":0,"index":10379},{"krate":0,"index":10383},{"krate":0,"index":10386},{"krate":0,"index":10388},{"krate":0,"index":11863},{"krate":0,"index":11877},{"krate":0,"index":11876},{"krate":0,"index":11874},{"krate":0,"index":11871},{"krate":0,"index":11868},{"krate":0,"index":11869},{"krate":0,"index":11865},{"krate":0,"index":11866},{"krate":0,"index":10389},{"krate":0,"index":10393},{"krate":0,"index":10396},{"krate":0,"index":10398},{"krate":0,"index":11879},{"krate":0,"index":11893},{"krate":0,"index":11892},{"krate":0,"index":11890},{"krate":0,"index":11887},{"krate":0,"index":11884},{"krate":0,"index":11885},{"krate":0,"index":11881},{"krate":0,"index":11882},{"krate":0,"index":10399},{"krate":0,"index":10403},{"krate":0,"index":10406},{"krate":0,"index":10408},{"krate":0,"index":11895},{"krate":0,"index":11909},{"krate":0,"index":11908},{"krate":0,"index":11906},{"krate":0,"index":11903},{"krate":0,"index":11900},{"krate":0,"index":11901},{"krate":0,"index":11897},{"krate":0,"index":11898},{"krate":0,"index":10409},{"krate":0,"index":10413},{"krate":0,"index":10416},{"krate":0,"index":10418},{"krate":0,"index":11911},{"krate":0,"index":11925},{"krate":0,"index":11924},{"krate":0,"index":11922},{"krate":0,"index":11919},{"krate":0,"index":11916},{"krate":0,"index":11917},{"krate":0,"index":11913},{"krate":0,"index":11914},{"krate":0,"index":10419},{"krate":0,"index":10423},{"krate":0,"index":10426},{"krate":0,"index":10428},{"krate":0,"index":11927},{"krate":0,"index":11941},{"krate":0,"index":11940},{"krate":0,"index":11938},{"krate":0,"index":11935},{"krate":0,"index":11932},{"krate":0,"index":11933},{"krate":0,"index":11929},{"krate":0,"index":11930},{"krate":0,"index":10429},{"krate":0,"index":10433},{"krate":0,"index":10436},{"krate":0,"index":10438},{"krate":0,"index":11943},{"krate":0,"index":11957},{"krate":0,"index":11956},{"krate":0,"index":11954},{"krate":0,"index":11951},{"krate":0,"index":11948},{"krate":0,"index":11949},{"krate":0,"index":11945},{"krate":0,"index":11946},{"krate":0,"index":10439},{"krate":0,"index":10443},{"krate":0,"index":10446},{"krate":0,"index":10448},{"krate":0,"index":11959},{"krate":0,"index":11973},{"krate":0,"index":11972},{"krate":0,"index":11970},{"krate":0,"index":11967},{"krate":0,"index":11964},{"krate":0,"index":11965},{"krate":0,"index":11961},{"krate":0,"index":11962},{"krate":0,"index":10449},{"krate":0,"index":10453},{"krate":0,"index":10456},{"krate":0,"index":10458},{"krate":0,"index":11975},{"krate":0,"index":11989},{"krate":0,"index":11988},{"krate":0,"index":11986},{"krate":0,"index":11983},{"krate":0,"index":11980},{"krate":0,"index":11981},{"krate":0,"index":11977},{"krate":0,"index":11978},{"krate":0,"index":10459},{"krate":0,"index":10463},{"krate":0,"index":10466},{"krate":0,"index":10468},{"krate":0,"index":11991},{"krate":0,"index":12005},{"krate":0,"index":12004},{"krate":0,"index":12002},{"krate":0,"index":11999},{"krate":0,"index":11996},{"krate":0,"index":11997},{"krate":0,"index":11993},{"krate":0,"index":11994},{"krate":0,"index":10469},{"krate":0,"index":10473},{"krate":0,"index":10476},{"krate":0,"index":10478},{"krate":0,"index":12007},{"krate":0,"index":12021},{"krate":0,"index":12020},{"krate":0,"index":12018},{"krate":0,"index":12015},{"krate":0,"index":12012},{"krate":0,"index":12013},{"krate":0,"index":12009},{"krate":0,"index":12010},{"krate":0,"index":10479},{"krate":0,"index":10483},{"krate":0,"index":10486},{"krate":0,"index":10488},{"krate":0,"index":12023},{"krate":0,"index":12037},{"krate":0,"index":12036},{"krate":0,"index":12034},{"krate":0,"index":12031},{"krate":0,"index":12028},{"krate":0,"index":12029},{"krate":0,"index":12025},{"krate":0,"index":12026},{"krate":0,"index":10489},{"krate":0,"index":10493},{"krate":0,"index":10496},{"krate":0,"index":10498},{"krate":0,"index":12039},{"krate":0,"index":12053},{"krate":0,"index":12052},{"krate":0,"index":12050},{"krate":0,"index":12047},{"krate":0,"index":12044},{"krate":0,"index":12045},{"krate":0,"index":12041},{"krate":0,"index":12042},{"krate":0,"index":10499},{"krate":0,"index":10503},{"krate":0,"index":10506},{"krate":0,"index":10508},{"krate":0,"index":12055},{"krate":0,"index":12069},{"krate":0,"index":12068},{"krate":0,"index":12066},{"krate":0,"index":12063},{"krate":0,"index":12060},{"krate":0,"index":12061},{"krate":0,"index":12057},{"krate":0,"index":12058},{"krate":0,"index":10509},{"krate":0,"index":10513},{"krate":0,"index":10516},{"krate":0,"index":10518},{"krate":0,"index":12071},{"krate":0,"index":12085},{"krate":0,"index":12084},{"krate":0,"index":12082},{"krate":0,"index":12079},{"krate":0,"index":12076},{"krate":0,"index":12077},{"krate":0,"index":12073},{"krate":0,"index":12074},{"krate":0,"index":10519},{"krate":0,"index":10523},{"krate":0,"index":10526},{"krate":0,"index":10528},{"krate":0,"index":12087},{"krate":0,"index":12101},{"krate":0,"index":12100},{"krate":0,"index":12098},{"krate":0,"index":12095},{"krate":0,"index":12092},{"krate":0,"index":12093},{"krate":0,"index":12089},{"krate":0,"index":12090},{"krate":0,"index":10529},{"krate":0,"index":10533},{"krate":0,"index":10536},{"krate":0,"index":10538},{"krate":0,"index":12103},{"krate":0,"index":12117},{"krate":0,"index":12116},{"krate":0,"index":12114},{"krate":0,"index":12111},{"krate":0,"index":12108},{"krate":0,"index":12109},{"krate":0,"index":12105},{"krate":0,"index":12106},{"krate":0,"index":10539},{"krate":0,"index":10543},{"krate":0,"index":10546},{"krate":0,"index":10548},{"krate":0,"index":12119},{"krate":0,"index":12133},{"krate":0,"index":12132},{"krate":0,"index":12130},{"krate":0,"index":12127},{"krate":0,"index":12124},{"krate":0,"index":12125},{"krate":0,"index":12121},{"krate":0,"index":12122},{"krate":0,"index":10549},{"krate":0,"index":10553},{"krate":0,"index":10556},{"krate":0,"index":10558},{"krate":0,"index":12135},{"krate":0,"index":12149},{"krate":0,"index":12148},{"krate":0,"index":12146},{"krate":0,"index":12143},{"krate":0,"index":12140},{"krate":0,"index":12141},{"krate":0,"index":12137},{"krate":0,"index":12138},{"krate":0,"index":10559},{"krate":0,"index":10563},{"krate":0,"index":10566},{"krate":0,"index":10568},{"krate":0,"index":12151},{"krate":0,"index":12165},{"krate":0,"index":12164},{"krate":0,"index":12162},{"krate":0,"index":12159},{"krate":0,"index":12156},{"krate":0,"index":12157},{"krate":0,"index":12153},{"krate":0,"index":12154},{"krate":0,"index":10569},{"krate":0,"index":10573},{"krate":0,"index":10576},{"krate":0,"index":10578},{"krate":0,"index":12167},{"krate":0,"index":12181},{"krate":0,"index":12180},{"krate":0,"index":12178},{"krate":0,"index":12175},{"krate":0,"index":12172},{"krate":0,"index":12173},{"krate":0,"index":12169},{"krate":0,"index":12170},{"krate":0,"index":10579},{"krate":0,"index":10583},{"krate":0,"index":10586},{"krate":0,"index":10588},{"krate":0,"index":12183},{"krate":0,"index":12197},{"krate":0,"index":12196},{"krate":0,"index":12194},{"krate":0,"index":12191},{"krate":0,"index":12188},{"krate":0,"index":12189},{"krate":0,"index":12185},{"krate":0,"index":12186},{"krate":0,"index":10589},{"krate":0,"index":10593},{"krate":0,"index":10596},{"krate":0,"index":10598},{"krate":0,"index":12199},{"krate":0,"index":12213},{"krate":0,"index":12212},{"krate":0,"index":12210},{"krate":0,"index":12207},{"krate":0,"index":12204},{"krate":0,"index":12205},{"krate":0,"index":12201},{"krate":0,"index":12202},{"krate":0,"index":10599},{"krate":0,"index":10603},{"krate":0,"index":10606},{"krate":0,"index":10608},{"krate":0,"index":12215},{"krate":0,"index":12229},{"krate":0,"index":12228},{"krate":0,"index":12226},{"krate":0,"index":12223},{"krate":0,"index":12220},{"krate":0,"index":12221},{"krate":0,"index":12217},{"krate":0,"index":12218},{"krate":0,"index":10609},{"krate":0,"index":10613},{"krate":0,"index":10616},{"krate":0,"index":10618},{"krate":0,"index":12231},{"krate":0,"index":12245},{"krate":0,"index":12244},{"krate":0,"index":12242},{"krate":0,"index":12239},{"krate":0,"index":12236},{"krate":0,"index":12237},{"krate":0,"index":12233},{"krate":0,"index":12234},{"krate":0,"index":10619},{"krate":0,"index":10623},{"krate":0,"index":10626},{"krate":0,"index":10628},{"krate":0,"index":12247},{"krate":0,"index":12261},{"krate":0,"index":12260},{"krate":0,"index":12258},{"krate":0,"index":12255},{"krate":0,"index":12252},{"krate":0,"index":12253},{"krate":0,"index":12249},{"krate":0,"index":12250},{"krate":0,"index":10629},{"krate":0,"index":10633},{"krate":0,"index":10636},{"krate":0,"index":10638},{"krate":0,"index":12263},{"krate":0,"index":12277},{"krate":0,"index":12276},{"krate":0,"index":12274},{"krate":0,"index":12271},{"krate":0,"index":12268},{"krate":0,"index":12269},{"krate":0,"index":12265},{"krate":0,"index":12266},{"krate":0,"index":10639},{"krate":0,"index":10643},{"krate":0,"index":10646},{"krate":0,"index":10648},{"krate":0,"index":12279},{"krate":0,"index":12293},{"krate":0,"index":12292},{"krate":0,"index":12290},{"krate":0,"index":12287},{"krate":0,"index":12284},{"krate":0,"index":12285},{"krate":0,"index":12281},{"krate":0,"index":12282},{"krate":0,"index":10649},{"krate":0,"index":10653},{"krate":0,"index":10656},{"krate":0,"index":10658},{"krate":0,"index":12295},{"krate":0,"index":12309},{"krate":0,"index":12308},{"krate":0,"index":12306},{"krate":0,"index":12303},{"krate":0,"index":12300},{"krate":0,"index":12301},{"krate":0,"index":12297},{"krate":0,"index":12298},{"krate":0,"index":10659},{"krate":0,"index":10663},{"krate":0,"index":10666},{"krate":0,"index":10668},{"krate":0,"index":12311},{"krate":0,"index":12325},{"krate":0,"index":12324},{"krate":0,"index":12322},{"krate":0,"index":12319},{"krate":0,"index":12316},{"krate":0,"index":12317},{"krate":0,"index":12313},{"krate":0,"index":12314},{"krate":0,"index":10669},{"krate":0,"index":10673},{"krate":0,"index":10676},{"krate":0,"index":10678},{"krate":0,"index":12327},{"krate":0,"index":12341},{"krate":0,"index":12340},{"krate":0,"index":12338},{"krate":0,"index":12335},{"krate":0,"index":12332},{"krate":0,"index":12333},{"krate":0,"index":12329},{"krate":0,"index":12330},{"krate":0,"index":10679},{"krate":0,"index":10683},{"krate":0,"index":10686},{"krate":0,"index":10688},{"krate":0,"index":12343},{"krate":0,"index":12357},{"krate":0,"index":12356},{"krate":0,"index":12354},{"krate":0,"index":12351},{"krate":0,"index":12348},{"krate":0,"index":12349},{"krate":0,"index":12345},{"krate":0,"index":12346},{"krate":0,"index":10689},{"krate":0,"index":10693},{"krate":0,"index":10696},{"krate":0,"index":10698},{"krate":0,"index":12359},{"krate":0,"index":12373},{"krate":0,"index":12372},{"krate":0,"index":12370},{"krate":0,"index":12367},{"krate":0,"index":12364},{"krate":0,"index":12365},{"krate":0,"index":12361},{"krate":0,"index":12362},{"krate":0,"index":10699},{"krate":0,"index":10703},{"krate":0,"index":10706},{"krate":0,"index":10708},{"krate":0,"index":12375},{"krate":0,"index":12389},{"krate":0,"index":12388},{"krate":0,"index":12386},{"krate":0,"index":12383},{"krate":0,"index":12380},{"krate":0,"index":12381},{"krate":0,"index":12377},{"krate":0,"index":12378},{"krate":0,"index":10709},{"krate":0,"index":10713},{"krate":0,"index":10716},{"krate":0,"index":10718},{"krate":0,"index":12391},{"krate":0,"index":12405},{"krate":0,"index":12404},{"krate":0,"index":12402},{"krate":0,"index":12399},{"krate":0,"index":12396},{"krate":0,"index":12397},{"krate":0,"index":12393},{"krate":0,"index":12394},{"krate":0,"index":10719},{"krate":0,"index":10723},{"krate":0,"index":10726},{"krate":0,"index":10728},{"krate":0,"index":12407},{"krate":0,"index":12421},{"krate":0,"index":12420},{"krate":0,"index":12418},{"krate":0,"index":12415},{"krate":0,"index":12412},{"krate":0,"index":12413},{"krate":0,"index":12409},{"krate":0,"index":12410},{"krate":0,"index":10729},{"krate":0,"index":10733},{"krate":0,"index":10736},{"krate":0,"index":10738},{"krate":0,"index":12423},{"krate":0,"index":12437},{"krate":0,"index":12436},{"krate":0,"index":12434},{"krate":0,"index":12431},{"krate":0,"index":12428},{"krate":0,"index":12429},{"krate":0,"index":12425},{"krate":0,"index":12426},{"krate":0,"index":10739},{"krate":0,"index":10743},{"krate":0,"index":10746},{"krate":0,"index":10748},{"krate":0,"index":12439},{"krate":0,"index":12453},{"krate":0,"index":12452},{"krate":0,"index":12450},{"krate":0,"index":12447},{"krate":0,"index":12444},{"krate":0,"index":12445},{"krate":0,"index":12441},{"krate":0,"index":12442},{"krate":0,"index":10749},{"krate":0,"index":10753},{"krate":0,"index":10756},{"krate":0,"index":10758},{"krate":0,"index":12455},{"krate":0,"index":12469},{"krate":0,"index":12468},{"krate":0,"index":12466},{"krate":0,"index":12463},{"krate":0,"index":12460},{"krate":0,"index":12461},{"krate":0,"index":12457},{"krate":0,"index":12458},{"krate":0,"index":10759},{"krate":0,"index":10763},{"krate":0,"index":10766},{"krate":0,"index":10768},{"krate":0,"index":12471},{"krate":0,"index":12485},{"krate":0,"index":12484},{"krate":0,"index":12482},{"krate":0,"index":12479},{"krate":0,"index":12476},{"krate":0,"index":12477},{"krate":0,"index":12473},{"krate":0,"index":12474},{"krate":0,"index":10769},{"krate":0,"index":10773},{"krate":0,"index":10776},{"krate":0,"index":10778},{"krate":0,"index":12487},{"krate":0,"index":12501},{"krate":0,"index":12500},{"krate":0,"index":12498},{"krate":0,"index":12495},{"krate":0,"index":12492},{"krate":0,"index":12493},{"krate":0,"index":12489},{"krate":0,"index":12490},{"krate":0,"index":10779},{"krate":0,"index":10783},{"krate":0,"index":10786},{"krate":0,"index":10788},{"krate":0,"index":12503},{"krate":0,"index":12517},{"krate":0,"index":12516},{"krate":0,"index":12514},{"krate":0,"index":12511},{"krate":0,"index":12508},{"krate":0,"index":12509},{"krate":0,"index":12505},{"krate":0,"index":12506},{"krate":0,"index":10789},{"krate":0,"index":10793},{"krate":0,"index":10796},{"krate":0,"index":10798},{"krate":0,"index":12519},{"krate":0,"index":12533},{"krate":0,"index":12532},{"krate":0,"index":12530},{"krate":0,"index":12527},{"krate":0,"index":12524},{"krate":0,"index":12525},{"krate":0,"index":12521},{"krate":0,"index":12522},{"krate":0,"index":10799},{"krate":0,"index":10803},{"krate":0,"index":10806},{"krate":0,"index":10808},{"krate":0,"index":12535},{"krate":0,"index":12549},{"krate":0,"index":12548},{"krate":0,"index":12546},{"krate":0,"index":12543},{"krate":0,"index":12540},{"krate":0,"index":12541},{"krate":0,"index":12537},{"krate":0,"index":12538},{"krate":0,"index":10809},{"krate":0,"index":10813},{"krate":0,"index":10816},{"krate":0,"index":10818},{"krate":0,"index":12551},{"krate":0,"index":12565},{"krate":0,"index":12564},{"krate":0,"index":12562},{"krate":0,"index":12559},{"krate":0,"index":12556},{"krate":0,"index":12557},{"krate":0,"index":12553},{"krate":0,"index":12554},{"krate":0,"index":10819},{"krate":0,"index":10823},{"krate":0,"index":10826},{"krate":0,"index":10828},{"krate":0,"index":12567},{"krate":0,"index":12581},{"krate":0,"index":12580},{"krate":0,"index":12578},{"krate":0,"index":12575},{"krate":0,"index":12572},{"krate":0,"index":12573},{"krate":0,"index":12569},{"krate":0,"index":12570},{"krate":0,"index":10829},{"krate":0,"index":10833},{"krate":0,"index":10836},{"krate":0,"index":10838},{"krate":0,"index":12583},{"krate":0,"index":12597},{"krate":0,"index":12596},{"krate":0,"index":12594},{"krate":0,"index":12591},{"krate":0,"index":12588},{"krate":0,"index":12589},{"krate":0,"index":12585},{"krate":0,"index":12586},{"krate":0,"index":10839},{"krate":0,"index":10843},{"krate":0,"index":10846},{"krate":0,"index":10848},{"krate":0,"index":12599},{"krate":0,"index":12613},{"krate":0,"index":12612},{"krate":0,"index":12610},{"krate":0,"index":12607},{"krate":0,"index":12604},{"krate":0,"index":12605},{"krate":0,"index":12601},{"krate":0,"index":12602},{"krate":0,"index":10849},{"krate":0,"index":10853},{"krate":0,"index":10856},{"krate":0,"index":10858},{"krate":0,"index":12615},{"krate":0,"index":12629},{"krate":0,"index":12628},{"krate":0,"index":12626},{"krate":0,"index":12623},{"krate":0,"index":12620},{"krate":0,"index":12621},{"krate":0,"index":12617},{"krate":0,"index":12618},{"krate":0,"index":10859},{"krate":0,"index":10863},{"krate":0,"index":10866},{"krate":0,"index":10868},{"krate":0,"index":12631},{"krate":0,"index":12645},{"krate":0,"index":12644},{"krate":0,"index":12642},{"krate":0,"index":12639},{"krate":0,"index":12636},{"krate":0,"index":12637},{"krate":0,"index":12633},{"krate":0,"index":12634},{"krate":0,"index":10869},{"krate":0,"index":10873},{"krate":0,"index":10876},{"krate":0,"index":10878},{"krate":0,"index":12647},{"krate":0,"index":12661},{"krate":0,"index":12660},{"krate":0,"index":12658},{"krate":0,"index":12655},{"krate":0,"index":12652},{"krate":0,"index":12653},{"krate":0,"index":12649},{"krate":0,"index":12650},{"krate":0,"index":10879},{"krate":0,"index":10883},{"krate":0,"index":10886},{"krate":0,"index":10888},{"krate":0,"index":12663},{"krate":0,"index":12677},{"krate":0,"index":12676},{"krate":0,"index":12674},{"krate":0,"index":12671},{"krate":0,"index":12668},{"krate":0,"index":12669},{"krate":0,"index":12665},{"krate":0,"index":12666},{"krate":0,"index":10889},{"krate":0,"index":10893},{"krate":0,"index":10896},{"krate":0,"index":10898},{"krate":0,"index":12679},{"krate":0,"index":12693},{"krate":0,"index":12692},{"krate":0,"index":12690},{"krate":0,"index":12687},{"krate":0,"index":12684},{"krate":0,"index":12685},{"krate":0,"index":12681},{"krate":0,"index":12682},{"krate":0,"index":10899},{"krate":0,"index":10903},{"krate":0,"index":10906},{"krate":0,"index":10908},{"krate":0,"index":12695},{"krate":0,"index":12709},{"krate":0,"index":12708},{"krate":0,"index":12706},{"krate":0,"index":12703},{"krate":0,"index":12700},{"krate":0,"index":12701},{"krate":0,"index":12697},{"krate":0,"index":12698},{"krate":0,"index":10909},{"krate":0,"index":10913},{"krate":0,"index":10916},{"krate":0,"index":10918},{"krate":0,"index":12711},{"krate":0,"index":12725},{"krate":0,"index":12724},{"krate":0,"index":12722},{"krate":0,"index":12719},{"krate":0,"index":12716},{"krate":0,"index":12717},{"krate":0,"index":12713},{"krate":0,"index":12714},{"krate":0,"index":10919},{"krate":0,"index":10923},{"krate":0,"index":10926},{"krate":0,"index":10928},{"krate":0,"index":12727},{"krate":0,"index":12741},{"krate":0,"index":12740},{"krate":0,"index":12738},{"krate":0,"index":12735},{"krate":0,"index":12732},{"krate":0,"index":12733},{"krate":0,"index":12729},{"krate":0,"index":12730},{"krate":0,"index":10929},{"krate":0,"index":10933},{"krate":0,"index":10936},{"krate":0,"index":10938},{"krate":0,"index":12743},{"krate":0,"index":12757},{"krate":0,"index":12756},{"krate":0,"index":12754},{"krate":0,"index":12751},{"krate":0,"index":12748},{"krate":0,"index":12749},{"krate":0,"index":12745},{"krate":0,"index":12746},{"krate":0,"index":10939},{"krate":0,"index":10943},{"krate":0,"index":10946},{"krate":0,"index":10948},{"krate":0,"index":12759},{"krate":0,"index":12773},{"krate":0,"index":12772},{"krate":0,"index":12770},{"krate":0,"index":12767},{"krate":0,"index":12764},{"krate":0,"index":12765},{"krate":0,"index":12761},{"krate":0,"index":12762},{"krate":0,"index":10949},{"krate":0,"index":10953},{"krate":0,"index":10956},{"krate":0,"index":10958},{"krate":0,"index":12775},{"krate":0,"index":12789},{"krate":0,"index":12788},{"krate":0,"index":12786},{"krate":0,"index":12783},{"krate":0,"index":12780},{"krate":0,"index":12781},{"krate":0,"index":12777},{"krate":0,"index":12778},{"krate":0,"index":10959},{"krate":0,"index":10963},{"krate":0,"index":10966},{"krate":0,"index":10968},{"krate":0,"index":12791},{"krate":0,"index":12805},{"krate":0,"index":12804},{"krate":0,"index":12802},{"krate":0,"index":12799},{"krate":0,"index":12796},{"krate":0,"index":12797},{"krate":0,"index":12793},{"krate":0,"index":12794},{"krate":0,"index":10969},{"krate":0,"index":10973},{"krate":0,"index":10976},{"krate":0,"index":10978},{"krate":0,"index":12807},{"krate":0,"index":12821},{"krate":0,"index":12820},{"krate":0,"index":12818},{"krate":0,"index":12815},{"krate":0,"index":12812},{"krate":0,"index":12813},{"krate":0,"index":12809},{"krate":0,"index":12810},{"krate":0,"index":10979},{"krate":0,"index":10983},{"krate":0,"index":10986},{"krate":0,"index":10988},{"krate":0,"index":12823},{"krate":0,"index":12837},{"krate":0,"index":12836},{"krate":0,"index":12834},{"krate":0,"index":12831},{"krate":0,"index":12828},{"krate":0,"index":12829},{"krate":0,"index":12825},{"krate":0,"index":12826},{"krate":0,"index":10989},{"krate":0,"index":10993},{"krate":0,"index":10996},{"krate":0,"index":10998},{"krate":0,"index":12839},{"krate":0,"index":12853},{"krate":0,"index":12852},{"krate":0,"index":12850},{"krate":0,"index":12847},{"krate":0,"index":12844},{"krate":0,"index":12845},{"krate":0,"index":12841},{"krate":0,"index":12842},{"krate":0,"index":10999},{"krate":0,"index":11003},{"krate":0,"index":11006},{"krate":0,"index":11008},{"krate":0,"index":12855},{"krate":0,"index":12869},{"krate":0,"index":12868},{"krate":0,"index":12866},{"krate":0,"index":12863},{"krate":0,"index":12860},{"krate":0,"index":12861},{"krate":0,"index":12857},{"krate":0,"index":12858},{"krate":0,"index":11009},{"krate":0,"index":11013},{"krate":0,"index":11016},{"krate":0,"index":11018},{"krate":0,"index":12871},{"krate":0,"index":12885},{"krate":0,"index":12884},{"krate":0,"index":12882},{"krate":0,"index":12879},{"krate":0,"index":12876},{"krate":0,"index":12877},{"krate":0,"index":12873},{"krate":0,"index":12874},{"krate":0,"index":11019},{"krate":0,"index":11023},{"krate":0,"index":11026},{"krate":0,"index":11028},{"krate":0,"index":12887},{"krate":0,"index":12901},{"krate":0,"index":12900},{"krate":0,"index":12898},{"krate":0,"index":12895},{"krate":0,"index":12892},{"krate":0,"index":12893},{"krate":0,"index":12889},{"krate":0,"index":12890},{"krate":0,"index":11029},{"krate":0,"index":11033},{"krate":0,"index":11036},{"krate":0,"index":11038},{"krate":0,"index":12903},{"krate":0,"index":12917},{"krate":0,"index":12916},{"krate":0,"index":12914},{"krate":0,"index":12911},{"krate":0,"index":12908},{"krate":0,"index":12909},{"krate":0,"index":12905},{"krate":0,"index":12906},{"krate":0,"index":11039},{"krate":0,"index":11043},{"krate":0,"index":11046},{"krate":0,"index":11048},{"krate":0,"index":12919},{"krate":0,"index":12933},{"krate":0,"index":12932},{"krate":0,"index":12930},{"krate":0,"index":12927},{"krate":0,"index":12924},{"krate":0,"index":12925},{"krate":0,"index":12921},{"krate":0,"index":12922},{"krate":0,"index":11049},{"krate":0,"index":11053},{"krate":0,"index":11056},{"krate":0,"index":11058},{"krate":0,"index":12935},{"krate":0,"index":12949},{"krate":0,"index":12948},{"krate":0,"index":12946},{"krate":0,"index":12943},{"krate":0,"index":12940},{"krate":0,"index":12941},{"krate":0,"index":12937},{"krate":0,"index":12938},{"krate":0,"index":11059},{"krate":0,"index":11063},{"krate":0,"index":11066},{"krate":0,"index":11068},{"krate":0,"index":12951},{"krate":0,"index":12965},{"krate":0,"index":12964},{"krate":0,"index":12962},{"krate":0,"index":12959},{"krate":0,"index":12956},{"krate":0,"index":12957},{"krate":0,"index":12953},{"krate":0,"index":12954},{"krate":0,"index":11069},{"krate":0,"index":11073},{"krate":0,"index":11076},{"krate":0,"index":11078},{"krate":0,"index":12967},{"krate":0,"index":12981},{"krate":0,"index":12980},{"krate":0,"index":12978},{"krate":0,"index":12975},{"krate":0,"index":12972},{"krate":0,"index":12973},{"krate":0,"index":12969},{"krate":0,"index":12970},{"krate":0,"index":11079},{"krate":0,"index":11083},{"krate":0,"index":11086},{"krate":0,"index":11088},{"krate":0,"index":12983},{"krate":0,"index":12997},{"krate":0,"index":12996},{"krate":0,"index":12994},{"krate":0,"index":12991},{"krate":0,"index":12988},{"krate":0,"index":12989},{"krate":0,"index":12985},{"krate":0,"index":12986},{"krate":0,"index":11089},{"krate":0,"index":11093},{"krate":0,"index":11096},{"krate":0,"index":11098},{"krate":0,"index":12999},{"krate":0,"index":13013},{"krate":0,"index":13012},{"krate":0,"index":13010},{"krate":0,"index":13007},{"krate":0,"index":13004},{"krate":0,"index":13005},{"krate":0,"index":13001},{"krate":0,"index":13002},{"krate":0,"index":11099},{"krate":0,"index":11103},{"krate":0,"index":11106},{"krate":0,"index":11108},{"krate":0,"index":13015},{"krate":0,"index":13029},{"krate":0,"index":13028},{"krate":0,"index":13026},{"krate":0,"index":13023},{"krate":0,"index":13020},{"krate":0,"index":13021},{"krate":0,"index":13017},{"krate":0,"index":13018},{"krate":0,"index":11109},{"krate":0,"index":11113},{"krate":0,"index":11116},{"krate":0,"index":11118},{"krate":0,"index":13031},{"krate":0,"index":13045},{"krate":0,"index":13044},{"krate":0,"index":13042},{"krate":0,"index":13039},{"krate":0,"index":13036},{"krate":0,"index":13037},{"krate":0,"index":13033},{"krate":0,"index":13034},{"krate":0,"index":11119},{"krate":0,"index":11123},{"krate":0,"index":11126},{"krate":0,"index":11128},{"krate":0,"index":13047},{"krate":0,"index":13061},{"krate":0,"index":13060},{"krate":0,"index":13058},{"krate":0,"index":13055},{"krate":0,"index":13052},{"krate":0,"index":13053},{"krate":0,"index":13049},{"krate":0,"index":13050},{"krate":0,"index":11129},{"krate":0,"index":11133},{"krate":0,"index":11136},{"krate":0,"index":11138},{"krate":0,"index":13063},{"krate":0,"index":13077},{"krate":0,"index":13076},{"krate":0,"index":13074},{"krate":0,"index":13071},{"krate":0,"index":13068},{"krate":0,"index":13069},{"krate":0,"index":13065},{"krate":0,"index":13066},{"krate":0,"index":11139},{"krate":0,"index":11143},{"krate":0,"index":11146},{"krate":0,"index":11148},{"krate":0,"index":13079},{"krate":0,"index":13093},{"krate":0,"index":13092},{"krate":0,"index":13090},{"krate":0,"index":13087},{"krate":0,"index":13084},{"krate":0,"index":13085},{"krate":0,"index":13081},{"krate":0,"index":13082},{"krate":0,"index":11149},{"krate":0,"index":11153},{"krate":0,"index":11156},{"krate":0,"index":11158},{"krate":0,"index":13095},{"krate":0,"index":13109},{"krate":0,"index":13108},{"krate":0,"index":13106},{"krate":0,"index":13103},{"krate":0,"index":13100},{"krate":0,"index":13101},{"krate":0,"index":13097},{"krate":0,"index":13098},{"krate":0,"index":11159},{"krate":0,"index":11163},{"krate":0,"index":11166},{"krate":0,"index":11168},{"krate":0,"index":13111},{"krate":0,"index":13125},{"krate":0,"index":13124},{"krate":0,"index":13122},{"krate":0,"index":13119},{"krate":0,"index":13116},{"krate":0,"index":13117},{"krate":0,"index":13113},{"krate":0,"index":13114},{"krate":0,"index":11169},{"krate":0,"index":11173},{"krate":0,"index":11176},{"krate":0,"index":11178},{"krate":0,"index":13127},{"krate":0,"index":13141},{"krate":0,"index":13140},{"krate":0,"index":13138},{"krate":0,"index":13135},{"krate":0,"index":13132},{"krate":0,"index":13133},{"krate":0,"index":13129},{"krate":0,"index":13130},{"krate":0,"index":11179},{"krate":0,"index":11183},{"krate":0,"index":11186},{"krate":0,"index":11188},{"krate":0,"index":13143},{"krate":0,"index":13157},{"krate":0,"index":13156},{"krate":0,"index":13154},{"krate":0,"index":13151},{"krate":0,"index":13148},{"krate":0,"index":13149},{"krate":0,"index":13145},{"krate":0,"index":13146},{"krate":0,"index":11189},{"krate":0,"index":11193},{"krate":0,"index":11196},{"krate":0,"index":11198},{"krate":0,"index":13159},{"krate":0,"index":13173},{"krate":0,"index":13172},{"krate":0,"index":13170},{"krate":0,"index":13167},{"krate":0,"index":13164},{"krate":0,"index":13165},{"krate":0,"index":13161},{"krate":0,"index":13162},{"krate":0,"index":11199},{"krate":0,"index":11203},{"krate":0,"index":11206},{"krate":0,"index":11208},{"krate":0,"index":13175},{"krate":0,"index":13189},{"krate":0,"index":13188},{"krate":0,"index":13186},{"krate":0,"index":13183},{"krate":0,"index":13180},{"krate":0,"index":13181},{"krate":0,"index":13177},{"krate":0,"index":13178},{"krate":0,"index":11209},{"krate":0,"index":11213},{"krate":0,"index":11216},{"krate":0,"index":11218},{"krate":0,"index":13191},{"krate":0,"index":13205},{"krate":0,"index":13204},{"krate":0,"index":13202},{"krate":0,"index":13199},{"krate":0,"index":13196},{"krate":0,"index":13197},{"krate":0,"index":13193},{"krate":0,"index":13194},{"krate":0,"index":11219},{"krate":0,"index":11223},{"krate":0,"index":11226},{"krate":0,"index":11228},{"krate":0,"index":13207},{"krate":0,"index":13221},{"krate":0,"index":13220},{"krate":0,"index":13218},{"krate":0,"index":13215},{"krate":0,"index":13212},{"krate":0,"index":13213},{"krate":0,"index":13209},{"krate":0,"index":13210},{"krate":0,"index":11229},{"krate":0,"index":11233},{"krate":0,"index":11236},{"krate":0,"index":11238},{"krate":0,"index":13223},{"krate":0,"index":13237},{"krate":0,"index":13236},{"krate":0,"index":13234},{"krate":0,"index":13231},{"krate":0,"index":13228},{"krate":0,"index":13229},{"krate":0,"index":13225},{"krate":0,"index":13226},{"krate":0,"index":11239},{"krate":0,"index":11243},{"krate":0,"index":11246},{"krate":0,"index":11248},{"krate":0,"index":13239},{"krate":0,"index":13253},{"krate":0,"index":13252},{"krate":0,"index":13250},{"krate":0,"index":13247},{"krate":0,"index":13244},{"krate":0,"index":13245},{"krate":0,"index":13241},{"krate":0,"index":13242},{"krate":0,"index":11249},{"krate":0,"index":11253},{"krate":0,"index":11256},{"krate":0,"index":11258},{"krate":0,"index":13255},{"krate":0,"index":13269},{"krate":0,"index":13268},{"krate":0,"index":13266},{"krate":0,"index":13263},{"krate":0,"index":13260},{"krate":0,"index":13261},{"krate":0,"index":13257},{"krate":0,"index":13258},{"krate":0,"index":11259},{"krate":0,"index":11263},{"krate":0,"index":11266},{"krate":0,"index":11268},{"krate":0,"index":13271},{"krate":0,"index":13285},{"krate":0,"index":13284},{"krate":0,"index":13282},{"krate":0,"index":13279},{"krate":0,"index":13276},{"krate":0,"index":13277},{"krate":0,"index":13273},{"krate":0,"index":13274},{"krate":0,"index":11269},{"krate":0,"index":11273},{"krate":0,"index":11276},{"krate":0,"index":11278},{"krate":0,"index":13287},{"krate":0,"index":13301},{"krate":0,"index":13300},{"krate":0,"index":13298},{"krate":0,"index":13295},{"krate":0,"index":13292},{"krate":0,"index":13293},{"krate":0,"index":13289},{"krate":0,"index":13290},{"krate":0,"index":11279},{"krate":0,"index":11283},{"krate":0,"index":11286},{"krate":0,"index":11288},{"krate":0,"index":13303},{"krate":0,"index":13317},{"krate":0,"index":13316},{"krate":0,"index":13314},{"krate":0,"index":13311},{"krate":0,"index":13308},{"krate":0,"index":13309},{"krate":0,"index":13305},{"krate":0,"index":13306},{"krate":0,"index":11289},{"krate":0,"index":11293},{"krate":0,"index":11296},{"krate":0,"index":11298},{"krate":0,"index":13319},{"krate":0,"index":13333},{"krate":0,"index":13332},{"krate":0,"index":13330},{"krate":0,"index":13327},{"krate":0,"index":13324},{"krate":0,"index":13325},{"krate":0,"index":13321},{"krate":0,"index":13322},{"krate":0,"index":11299},{"krate":0,"index":11303},{"krate":0,"index":11306},{"krate":0,"index":11308},{"krate":0,"index":13335},{"krate":0,"index":13349},{"krate":0,"index":13348},{"krate":0,"index":13346},{"krate":0,"index":13343},{"krate":0,"index":13340},{"krate":0,"index":13341},{"krate":0,"index":13337},{"krate":0,"index":13338},{"krate":0,"index":11309},{"krate":0,"index":11313},{"krate":0,"index":11316},{"krate":0,"index":11318},{"krate":0,"index":528},{"krate":0,"index":537},{"krate":0,"index":548},{"krate":0,"index":558},{"krate":0,"index":566},{"krate":0,"index":570},{"krate":0,"index":576},{"krate":0,"index":581}],"decl_id":null,"docs":" Traits and tags for identifying the dimension of all algebraic entities.\n","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":95703,"byte_end":95726,"line_start":1,"line_end":1,"column_start":1,"column_end":24}},{"value":"! Traits and tags for identifying the dimension of all algebraic entities.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":95728,"byte_end":95804,"line_start":3,"line_end":3,"column_start":1,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":9827},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":96223,"byte_end":96230,"line_start":18,"line_end":18,"column_start":12,"column_end":19},"name":"Dynamic","qualname":"::base::dimension::Dynamic","value":"Dynamic {  }","parent":null,"children":[{"krate":0,"index":9828}],"decl_id":null,"docs":" Dim of dynamically-sized algebraic entities.\n","sig":null,"attributes":[{"value":"/ Dim of dynamically-sized algebraic entities.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":96118,"byte_end":96166,"line_start":16,"line_end":16,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":96335,"byte_end":96338,"line_start":25,"line_end":25,"column_start":12,"column_end":15},"name":"new","qualname":"<Dynamic>::new","value":"fn (value: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A dynamic size equal to `value`.\n","sig":null,"attributes":[{"value":"/ A dynamic size equal to `value`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":96273,"byte_end":96309,"line_start":23,"line_end":23,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":96314,"byte_end":96323,"line_start":24,"line_end":24,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":491},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":96939,"byte_end":96948,"line_start":51,"line_end":51,"column_start":11,"column_end":20},"name":"IsDynamic","qualname":"::base::dimension::IsDynamic","value":"IsDynamic","parent":null,"children":[],"decl_id":null,"docs":" Trait implemented by `Dynamic`.\n","sig":null,"attributes":[{"value":"/ Trait implemented by `Dynamic`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":96893,"byte_end":96928,"line_start":50,"line_end":50,"column_start":1,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":492},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":97042,"byte_end":97056,"line_start":53,"line_end":53,"column_start":11,"column_end":25},"name":"IsNotStaticOne","qualname":"::base::dimension::IsNotStaticOne","value":"IsNotStaticOne","parent":null,"children":[],"decl_id":null,"docs":" Trait implemented by `Dynamic` and type-level integers different from `U1`.\n","sig":null,"attributes":[{"value":"/ Trait implemented by `Dynamic` and type-level integers different from `U1`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":96952,"byte_end":97031,"line_start":52,"line_end":52,"column_start":1,"column_end":80}}]},{"kind":"Trait","id":{"krate":0,"index":495},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":97300,"byte_end":97303,"line_start":60,"line_end":60,"column_start":11,"column_end":14},"name":"Dim","qualname":"::base::dimension::Dim","value":"Dim: Any + Debug + Copy + PartialEq + Send + Sync","parent":null,"children":[{"krate":0,"index":496},{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":500}],"decl_id":null,"docs":" Trait implemented by any type that can be used as a dimension. This includes type-level\n integers and `Dynamic` (for dimensions not known at compile-time).\n","sig":null,"attributes":[{"value":"/ Trait implemented by any type that can be used as a dimension. This includes type-level","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":97127,"byte_end":97218,"line_start":58,"line_end":58,"column_start":1,"column_end":92}},{"value":"/ integers and `Dynamic` (for dimensions not known at compile-time).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":97219,"byte_end":97289,"line_start":59,"line_end":59,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":97381,"byte_end":97383,"line_start":62,"line_end":62,"column_start":8,"column_end":10},"name":"is","qualname":"::base::dimension::Dim::is","value":"fn <D> () -> bool","parent":{"krate":0,"index":495},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":97356,"byte_end":97373,"line_start":61,"line_end":61,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":97585,"byte_end":97597,"line_start":68,"line_end":68,"column_start":8,"column_end":20},"name":"try_to_usize","qualname":"::base::dimension::Dim::try_to_usize","value":"fn () -> Option<usize>","parent":{"krate":0,"index":495},"children":[],"decl_id":null,"docs":" Gets the compile-time value of `Self`. Returns `None` if it is not known, i.e., if `Self =\n Dynamic`.\n","sig":null,"attributes":[{"value":"/ Gets the compile-time value of `Self`. Returns `None` if it is not known, i.e., if `Self =","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":97465,"byte_end":97559,"line_start":66,"line_end":66,"column_start":5,"column_end":99}},{"value":"/ Dynamic`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":97564,"byte_end":97577,"line_start":67,"line_end":67,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":499},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":97755,"byte_end":97760,"line_start":72,"line_end":72,"column_start":8,"column_end":13},"name":"value","qualname":"::base::dimension::Dim::value","value":"fn (&self) -> usize","parent":{"krate":0,"index":495},"children":[],"decl_id":null,"docs":" Gets the run-time value of `self`. For type-level integers, this is the same as\n `Self::try_to_usize().unwrap()`.\n","sig":null,"attributes":[{"value":"/ Gets the run-time value of `self`. For type-level integers, this is the same as","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":97623,"byte_end":97706,"line_start":70,"line_end":70,"column_start":5,"column_end":88}},{"value":"/ `Self::try_to_usize().unwrap()`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":97711,"byte_end":97747,"line_start":71,"line_end":71,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":97939,"byte_end":97949,"line_start":76,"line_end":76,"column_start":8,"column_end":18},"name":"from_usize","qualname":"::base::dimension::Dim::from_usize","value":"fn (dim: usize) -> Self","parent":{"krate":0,"index":495},"children":[],"decl_id":null,"docs":" Builds an instance of `Self` from a run-time value. Panics if `Self` is a type-level\n integer and `dim != Self::try_to_usize().unwrap()`.\n","sig":null,"attributes":[{"value":"/ Builds an instance of `Self` from a run-time value. Panics if `Self` is a type-level","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":97783,"byte_end":97871,"line_start":74,"line_end":74,"column_start":5,"column_end":93}},{"value":"/ integer and `dim != Self::try_to_usize().unwrap()`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":97876,"byte_end":97931,"line_start":75,"line_end":75,"column_start":5,"column_end":60}}]},{"kind":"Type","id":{"krate":0,"index":9841},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":100504,"byte_end":100510,"line_start":184,"line_end":184,"column_start":45,"column_end":51},"name":"DimSum","qualname":"::base::dimension::DimSum","value":"<D1 as DimAdd<D2>>::Output","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":9844},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":100464,"byte_end":100470,"line_start":184,"line_end":184,"column_start":5,"column_end":11},"name":"DimAdd","qualname":"::base::dimension::DimAdd","value":"DimAdd<D: Dim>: Dim","parent":null,"children":[{"krate":0,"index":9846},{"krate":0,"index":9847}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9847},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":100489,"byte_end":100492,"line_start":184,"line_end":184,"column_start":30,"column_end":33},"name":"add","qualname":"::base::dimension::DimAdd::add","value":"fn (self, other: D) -> Self::Output","parent":{"krate":0,"index":9844},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":9861},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":100516,"byte_end":100526,"line_start":184,"line_end":184,"column_start":57,"column_end":67},"name":"DimNameSum","qualname":"::base::dimension::DimNameSum","value":"<D1 as DimNameAdd<D2>>::Output","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":9864},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":100472,"byte_end":100482,"line_start":184,"line_end":184,"column_start":13,"column_end":23},"name":"DimNameAdd","qualname":"::base::dimension::DimNameAdd","value":"DimNameAdd<D: DimName>: DimName","parent":null,"children":[{"krate":0,"index":9866},{"krate":0,"index":9867}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9867},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":100489,"byte_end":100492,"line_start":184,"line_end":184,"column_start":30,"column_end":33},"name":"add","qualname":"::base::dimension::DimNameAdd::add","value":"fn (self, other: D) -> Self::Output","parent":{"krate":0,"index":9864},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":9873},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":100581,"byte_end":100588,"line_start":185,"line_end":185,"column_start":45,"column_end":52},"name":"DimProd","qualname":"::base::dimension::DimProd","value":"<D1 as DimMul<D2>>::Output","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":9876},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":100541,"byte_end":100547,"line_start":185,"line_end":185,"column_start":5,"column_end":11},"name":"DimMul","qualname":"::base::dimension::DimMul","value":"DimMul<D: Dim>: Dim","parent":null,"children":[{"krate":0,"index":9878},{"krate":0,"index":9879}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9879},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":100566,"byte_end":100569,"line_start":185,"line_end":185,"column_start":30,"column_end":33},"name":"mul","qualname":"::base::dimension::DimMul::mul","value":"fn (self, other: D) -> Self::Output","parent":{"krate":0,"index":9876},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":9893},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":100593,"byte_end":100604,"line_start":185,"line_end":185,"column_start":57,"column_end":68},"name":"DimNameProd","qualname":"::base::dimension::DimNameProd","value":"<D1 as DimNameMul<D2>>::Output","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":9896},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":100549,"byte_end":100559,"line_start":185,"line_end":185,"column_start":13,"column_end":23},"name":"DimNameMul","qualname":"::base::dimension::DimNameMul","value":"DimNameMul<D: DimName>: DimName","parent":null,"children":[{"krate":0,"index":9898},{"krate":0,"index":9899}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9899},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":100566,"byte_end":100569,"line_start":185,"line_end":185,"column_start":30,"column_end":33},"name":"mul","qualname":"::base::dimension::DimNameMul::mul","value":"fn (self, other: D) -> Self::Output","parent":{"krate":0,"index":9896},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":9905},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":100659,"byte_end":100666,"line_start":186,"line_end":186,"column_start":45,"column_end":52},"name":"DimDiff","qualname":"::base::dimension::DimDiff","value":"<D1 as DimSub<D2>>::Output","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":9908},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":100619,"byte_end":100625,"line_start":186,"line_end":186,"column_start":5,"column_end":11},"name":"DimSub","qualname":"::base::dimension::DimSub","value":"DimSub<D: Dim>: Dim","parent":null,"children":[{"krate":0,"index":9910},{"krate":0,"index":9911}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9911},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":100644,"byte_end":100647,"line_start":186,"line_end":186,"column_start":30,"column_end":33},"name":"sub","qualname":"::base::dimension::DimSub::sub","value":"fn (self, other: D) -> Self::Output","parent":{"krate":0,"index":9908},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":9925},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":100671,"byte_end":100682,"line_start":186,"line_end":186,"column_start":57,"column_end":68},"name":"DimNameDiff","qualname":"::base::dimension::DimNameDiff","value":"<D1 as DimNameSub<D2>>::Output","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":9928},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":100627,"byte_end":100637,"line_start":186,"line_end":186,"column_start":13,"column_end":23},"name":"DimNameSub","qualname":"::base::dimension::DimNameSub","value":"DimNameSub<D: DimName>: DimName","parent":null,"children":[{"krate":0,"index":9930},{"krate":0,"index":9931}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9931},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":100644,"byte_end":100647,"line_start":186,"line_end":186,"column_start":30,"column_end":33},"name":"sub","qualname":"::base::dimension::DimNameSub::sub","value":"fn (self, other: D) -> Self::Output","parent":{"krate":0,"index":9928},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":9937},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":100737,"byte_end":100744,"line_start":187,"line_end":187,"column_start":45,"column_end":52},"name":"DimQuot","qualname":"::base::dimension::DimQuot","value":"<D1 as DimDiv<D2>>::Output","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":9940},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":100697,"byte_end":100703,"line_start":187,"line_end":187,"column_start":5,"column_end":11},"name":"DimDiv","qualname":"::base::dimension::DimDiv","value":"DimDiv<D: Dim>: Dim","parent":null,"children":[{"krate":0,"index":9942},{"krate":0,"index":9943}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9943},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":100722,"byte_end":100725,"line_start":187,"line_end":187,"column_start":30,"column_end":33},"name":"div","qualname":"::base::dimension::DimDiv::div","value":"fn (self, other: D) -> Self::Output","parent":{"krate":0,"index":9940},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":9957},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":100749,"byte_end":100760,"line_start":187,"line_end":187,"column_start":57,"column_end":68},"name":"DimNameQuot","qualname":"::base::dimension::DimNameQuot","value":"<D1 as DimNameDiv<D2>>::Output","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":9960},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":100705,"byte_end":100715,"line_start":187,"line_end":187,"column_start":13,"column_end":23},"name":"DimNameDiv","qualname":"::base::dimension::DimNameDiv","value":"DimNameDiv<D: DimName>: DimName","parent":null,"children":[{"krate":0,"index":9962},{"krate":0,"index":9963}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9963},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":100722,"byte_end":100725,"line_start":187,"line_end":187,"column_start":30,"column_end":33},"name":"div","qualname":"::base::dimension::DimNameDiv::div","value":"fn (self, other: D) -> Self::Output","parent":{"krate":0,"index":9960},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":9969},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":100815,"byte_end":100825,"line_start":188,"line_end":188,"column_start":45,"column_end":55},"name":"DimMinimum","qualname":"::base::dimension::DimMinimum","value":"<D1 as DimMin<D2>>::Output","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":9972},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":100775,"byte_end":100781,"line_start":188,"line_end":188,"column_start":5,"column_end":11},"name":"DimMin","qualname":"::base::dimension::DimMin","value":"DimMin<D: Dim>: Dim","parent":null,"children":[{"krate":0,"index":9974},{"krate":0,"index":9975}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9975},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":100800,"byte_end":100803,"line_start":188,"line_end":188,"column_start":30,"column_end":33},"name":"min","qualname":"::base::dimension::DimMin::min","value":"fn (self, other: D) -> Self::Output","parent":{"krate":0,"index":9972},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":9989},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":100827,"byte_end":100841,"line_start":188,"line_end":188,"column_start":57,"column_end":71},"name":"DimNameMinimum","qualname":"::base::dimension::DimNameMinimum","value":"<D1 as DimNameMin<D2>>::Output","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":9992},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":100783,"byte_end":100793,"line_start":188,"line_end":188,"column_start":13,"column_end":23},"name":"DimNameMin","qualname":"::base::dimension::DimNameMin","value":"DimNameMin<D: DimName>: DimName","parent":null,"children":[{"krate":0,"index":9994},{"krate":0,"index":9995}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9995},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":100800,"byte_end":100803,"line_start":188,"line_end":188,"column_start":30,"column_end":33},"name":"min","qualname":"::base::dimension::DimNameMin::min","value":"fn (self, other: D) -> Self::Output","parent":{"krate":0,"index":9992},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":10001},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":100896,"byte_end":100906,"line_start":189,"line_end":189,"column_start":45,"column_end":55},"name":"DimMaximum","qualname":"::base::dimension::DimMaximum","value":"<D1 as DimMax<D2>>::Output","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":10004},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":100856,"byte_end":100862,"line_start":189,"line_end":189,"column_start":5,"column_end":11},"name":"DimMax","qualname":"::base::dimension::DimMax","value":"DimMax<D: Dim>: Dim","parent":null,"children":[{"krate":0,"index":10006},{"krate":0,"index":10007}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10007},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":100881,"byte_end":100884,"line_start":189,"line_end":189,"column_start":30,"column_end":33},"name":"max","qualname":"::base::dimension::DimMax::max","value":"fn (self, other: D) -> Self::Output","parent":{"krate":0,"index":10004},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":10021},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":100908,"byte_end":100922,"line_start":189,"line_end":189,"column_start":57,"column_end":71},"name":"DimNameMaximum","qualname":"::base::dimension::DimNameMaximum","value":"<D1 as DimNameMax<D2>>::Output","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":10024},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":100864,"byte_end":100874,"line_start":189,"line_end":189,"column_start":13,"column_end":23},"name":"DimNameMax","qualname":"::base::dimension::DimNameMax","value":"DimNameMax<D: DimName>: DimName","parent":null,"children":[{"krate":0,"index":10026},{"krate":0,"index":10027}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10027},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":100881,"byte_end":100884,"line_start":189,"line_end":189,"column_start":30,"column_end":33},"name":"max","qualname":"::base::dimension::DimNameMax::max","value":"fn (self, other: D) -> Self::Output","parent":{"krate":0,"index":10024},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":512},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":101005,"byte_end":101012,"line_start":193,"line_end":193,"column_start":11,"column_end":18},"name":"DimName","qualname":"::base::dimension::DimName","value":"DimName: Dim","parent":null,"children":[{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":515}],"decl_id":null,"docs":" Trait implemented exclusively by type-level integers.\n","sig":null,"attributes":[{"value":"/ Trait implemented exclusively by type-level integers.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":100937,"byte_end":100994,"line_start":192,"line_end":192,"column_start":1,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":513},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":101029,"byte_end":101034,"line_start":194,"line_end":194,"column_start":10,"column_end":15},"name":"Value","qualname":"::base::dimension::DimName::Value","value":"type Value: NamedDim<Name = Self>;","parent":{"krate":0,"index":512},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":101131,"byte_end":101135,"line_start":197,"line_end":197,"column_start":8,"column_end":12},"name":"name","qualname":"::base::dimension::DimName::name","value":"fn () -> Self","parent":{"krate":0,"index":512},"children":[],"decl_id":null,"docs":" The name of this dimension, i.e., the singleton `Self`.\n","sig":null,"attributes":[{"value":"/ The name of this dimension, i.e., the singleton `Self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":101064,"byte_end":101123,"line_start":196,"line_end":196,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":101255,"byte_end":101258,"line_start":202,"line_end":202,"column_start":8,"column_end":11},"name":"dim","qualname":"::base::dimension::DimName::dim","value":"fn () -> usize","parent":{"krate":0,"index":512},"children":[],"decl_id":null,"docs":" The value of this dimension.\n","sig":null,"attributes":[{"value":"/ The value of this dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":101201,"byte_end":101233,"line_start":200,"line_end":200,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":101238,"byte_end":101247,"line_start":201,"line_end":201,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":516},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":101323,"byte_end":101331,"line_start":207,"line_end":207,"column_start":11,"column_end":19},"name":"NamedDim","qualname":"::base::dimension::NamedDim","value":"NamedDim: Sized + Any + Unsigned","parent":null,"children":[{"krate":0,"index":517}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":517},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":101367,"byte_end":101371,"line_start":208,"line_end":208,"column_start":10,"column_end":14},"name":"Name","qualname":"::base::dimension::NamedDim::Name","value":"type Name: DimName<Value = Self>;","parent":{"krate":0,"index":516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10033},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":101582,"byte_end":101584,"line_start":214,"line_end":214,"column_start":12,"column_end":14},"name":"U1","qualname":"::base::dimension::U1","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension with a value of `1`.\n","sig":null,"attributes":[{"value":"/ A type level dimension with a value of `1`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":101399,"byte_end":101446,"line_start":211,"line_end":211,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":11319},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103145,"byte_end":103147,"line_start":291,"line_end":291,"column_start":5,"column_end":7},"name":"U0","qualname":"::base::dimension::U0","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11335},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103157,"byte_end":103159,"line_start":291,"line_end":291,"column_start":17,"column_end":19},"name":"U2","qualname":"::base::dimension::U2","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11351},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103161,"byte_end":103163,"line_start":291,"line_end":291,"column_start":21,"column_end":23},"name":"U3","qualname":"::base::dimension::U3","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11367},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103165,"byte_end":103167,"line_start":291,"line_end":291,"column_start":25,"column_end":27},"name":"U4","qualname":"::base::dimension::U4","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11383},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103169,"byte_end":103171,"line_start":291,"line_end":291,"column_start":29,"column_end":31},"name":"U5","qualname":"::base::dimension::U5","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11399},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103173,"byte_end":103175,"line_start":291,"line_end":291,"column_start":33,"column_end":35},"name":"U6","qualname":"::base::dimension::U6","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11415},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103177,"byte_end":103179,"line_start":291,"line_end":291,"column_start":37,"column_end":39},"name":"U7","qualname":"::base::dimension::U7","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11431},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103181,"byte_end":103183,"line_start":291,"line_end":291,"column_start":41,"column_end":43},"name":"U8","qualname":"::base::dimension::U8","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11447},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103185,"byte_end":103187,"line_start":291,"line_end":291,"column_start":45,"column_end":47},"name":"U9","qualname":"::base::dimension::U9","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11463},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103189,"byte_end":103192,"line_start":291,"line_end":291,"column_start":49,"column_end":52},"name":"U10","qualname":"::base::dimension::U10","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11479},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103194,"byte_end":103197,"line_start":291,"line_end":291,"column_start":54,"column_end":57},"name":"U11","qualname":"::base::dimension::U11","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11495},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103199,"byte_end":103202,"line_start":291,"line_end":291,"column_start":59,"column_end":62},"name":"U12","qualname":"::base::dimension::U12","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11511},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103204,"byte_end":103207,"line_start":291,"line_end":291,"column_start":64,"column_end":67},"name":"U13","qualname":"::base::dimension::U13","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11527},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103209,"byte_end":103212,"line_start":291,"line_end":291,"column_start":69,"column_end":72},"name":"U14","qualname":"::base::dimension::U14","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11543},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103214,"byte_end":103217,"line_start":291,"line_end":291,"column_start":74,"column_end":77},"name":"U15","qualname":"::base::dimension::U15","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11559},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103219,"byte_end":103222,"line_start":291,"line_end":291,"column_start":79,"column_end":82},"name":"U16","qualname":"::base::dimension::U16","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11575},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103224,"byte_end":103227,"line_start":291,"line_end":291,"column_start":84,"column_end":87},"name":"U17","qualname":"::base::dimension::U17","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11591},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103229,"byte_end":103232,"line_start":291,"line_end":291,"column_start":89,"column_end":92},"name":"U18","qualname":"::base::dimension::U18","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11607},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103238,"byte_end":103241,"line_start":292,"line_end":292,"column_start":5,"column_end":8},"name":"U19","qualname":"::base::dimension::U19","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11623},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103243,"byte_end":103246,"line_start":292,"line_end":292,"column_start":10,"column_end":13},"name":"U20","qualname":"::base::dimension::U20","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11639},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103248,"byte_end":103251,"line_start":292,"line_end":292,"column_start":15,"column_end":18},"name":"U21","qualname":"::base::dimension::U21","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11655},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103253,"byte_end":103256,"line_start":292,"line_end":292,"column_start":20,"column_end":23},"name":"U22","qualname":"::base::dimension::U22","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11671},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103258,"byte_end":103261,"line_start":292,"line_end":292,"column_start":25,"column_end":28},"name":"U23","qualname":"::base::dimension::U23","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11687},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103263,"byte_end":103266,"line_start":292,"line_end":292,"column_start":30,"column_end":33},"name":"U24","qualname":"::base::dimension::U24","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11703},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103268,"byte_end":103271,"line_start":292,"line_end":292,"column_start":35,"column_end":38},"name":"U25","qualname":"::base::dimension::U25","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11719},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103273,"byte_end":103276,"line_start":292,"line_end":292,"column_start":40,"column_end":43},"name":"U26","qualname":"::base::dimension::U26","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11735},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103278,"byte_end":103281,"line_start":292,"line_end":292,"column_start":45,"column_end":48},"name":"U27","qualname":"::base::dimension::U27","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11751},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103283,"byte_end":103286,"line_start":292,"line_end":292,"column_start":50,"column_end":53},"name":"U28","qualname":"::base::dimension::U28","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11767},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103288,"byte_end":103291,"line_start":292,"line_end":292,"column_start":55,"column_end":58},"name":"U29","qualname":"::base::dimension::U29","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11783},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103293,"byte_end":103296,"line_start":292,"line_end":292,"column_start":60,"column_end":63},"name":"U30","qualname":"::base::dimension::U30","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11799},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103298,"byte_end":103301,"line_start":292,"line_end":292,"column_start":65,"column_end":68},"name":"U31","qualname":"::base::dimension::U31","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11815},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103303,"byte_end":103306,"line_start":292,"line_end":292,"column_start":70,"column_end":73},"name":"U32","qualname":"::base::dimension::U32","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11831},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103308,"byte_end":103311,"line_start":292,"line_end":292,"column_start":75,"column_end":78},"name":"U33","qualname":"::base::dimension::U33","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11847},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103313,"byte_end":103316,"line_start":292,"line_end":292,"column_start":80,"column_end":83},"name":"U34","qualname":"::base::dimension::U34","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11863},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103318,"byte_end":103321,"line_start":292,"line_end":292,"column_start":85,"column_end":88},"name":"U35","qualname":"::base::dimension::U35","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11879},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103323,"byte_end":103326,"line_start":292,"line_end":292,"column_start":90,"column_end":93},"name":"U36","qualname":"::base::dimension::U36","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11895},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103328,"byte_end":103331,"line_start":292,"line_end":292,"column_start":95,"column_end":98},"name":"U37","qualname":"::base::dimension::U37","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11911},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103337,"byte_end":103340,"line_start":293,"line_end":293,"column_start":5,"column_end":8},"name":"U38","qualname":"::base::dimension::U38","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11927},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103342,"byte_end":103345,"line_start":293,"line_end":293,"column_start":10,"column_end":13},"name":"U39","qualname":"::base::dimension::U39","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11943},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103347,"byte_end":103350,"line_start":293,"line_end":293,"column_start":15,"column_end":18},"name":"U40","qualname":"::base::dimension::U40","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11959},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103352,"byte_end":103355,"line_start":293,"line_end":293,"column_start":20,"column_end":23},"name":"U41","qualname":"::base::dimension::U41","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11975},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103357,"byte_end":103360,"line_start":293,"line_end":293,"column_start":25,"column_end":28},"name":"U42","qualname":"::base::dimension::U42","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11991},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103362,"byte_end":103365,"line_start":293,"line_end":293,"column_start":30,"column_end":33},"name":"U43","qualname":"::base::dimension::U43","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12007},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103367,"byte_end":103370,"line_start":293,"line_end":293,"column_start":35,"column_end":38},"name":"U44","qualname":"::base::dimension::U44","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12023},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103372,"byte_end":103375,"line_start":293,"line_end":293,"column_start":40,"column_end":43},"name":"U45","qualname":"::base::dimension::U45","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12039},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103377,"byte_end":103380,"line_start":293,"line_end":293,"column_start":45,"column_end":48},"name":"U46","qualname":"::base::dimension::U46","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12055},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103382,"byte_end":103385,"line_start":293,"line_end":293,"column_start":50,"column_end":53},"name":"U47","qualname":"::base::dimension::U47","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12071},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103387,"byte_end":103390,"line_start":293,"line_end":293,"column_start":55,"column_end":58},"name":"U48","qualname":"::base::dimension::U48","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12087},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103392,"byte_end":103395,"line_start":293,"line_end":293,"column_start":60,"column_end":63},"name":"U49","qualname":"::base::dimension::U49","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12103},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103397,"byte_end":103400,"line_start":293,"line_end":293,"column_start":65,"column_end":68},"name":"U50","qualname":"::base::dimension::U50","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12119},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103402,"byte_end":103405,"line_start":293,"line_end":293,"column_start":70,"column_end":73},"name":"U51","qualname":"::base::dimension::U51","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12135},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103407,"byte_end":103410,"line_start":293,"line_end":293,"column_start":75,"column_end":78},"name":"U52","qualname":"::base::dimension::U52","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12151},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103412,"byte_end":103415,"line_start":293,"line_end":293,"column_start":80,"column_end":83},"name":"U53","qualname":"::base::dimension::U53","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12167},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103417,"byte_end":103420,"line_start":293,"line_end":293,"column_start":85,"column_end":88},"name":"U54","qualname":"::base::dimension::U54","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12183},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103422,"byte_end":103425,"line_start":293,"line_end":293,"column_start":90,"column_end":93},"name":"U55","qualname":"::base::dimension::U55","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12199},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103427,"byte_end":103430,"line_start":293,"line_end":293,"column_start":95,"column_end":98},"name":"U56","qualname":"::base::dimension::U56","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12215},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103436,"byte_end":103439,"line_start":294,"line_end":294,"column_start":5,"column_end":8},"name":"U57","qualname":"::base::dimension::U57","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12231},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103441,"byte_end":103444,"line_start":294,"line_end":294,"column_start":10,"column_end":13},"name":"U58","qualname":"::base::dimension::U58","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12247},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103446,"byte_end":103449,"line_start":294,"line_end":294,"column_start":15,"column_end":18},"name":"U59","qualname":"::base::dimension::U59","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12263},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103451,"byte_end":103454,"line_start":294,"line_end":294,"column_start":20,"column_end":23},"name":"U60","qualname":"::base::dimension::U60","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12279},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103456,"byte_end":103459,"line_start":294,"line_end":294,"column_start":25,"column_end":28},"name":"U61","qualname":"::base::dimension::U61","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12295},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103461,"byte_end":103464,"line_start":294,"line_end":294,"column_start":30,"column_end":33},"name":"U62","qualname":"::base::dimension::U62","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12311},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103466,"byte_end":103469,"line_start":294,"line_end":294,"column_start":35,"column_end":38},"name":"U63","qualname":"::base::dimension::U63","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12327},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103471,"byte_end":103474,"line_start":294,"line_end":294,"column_start":40,"column_end":43},"name":"U64","qualname":"::base::dimension::U64","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12343},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103476,"byte_end":103479,"line_start":294,"line_end":294,"column_start":45,"column_end":48},"name":"U65","qualname":"::base::dimension::U65","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12359},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103481,"byte_end":103484,"line_start":294,"line_end":294,"column_start":50,"column_end":53},"name":"U66","qualname":"::base::dimension::U66","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12375},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103486,"byte_end":103489,"line_start":294,"line_end":294,"column_start":55,"column_end":58},"name":"U67","qualname":"::base::dimension::U67","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12391},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103491,"byte_end":103494,"line_start":294,"line_end":294,"column_start":60,"column_end":63},"name":"U68","qualname":"::base::dimension::U68","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12407},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103496,"byte_end":103499,"line_start":294,"line_end":294,"column_start":65,"column_end":68},"name":"U69","qualname":"::base::dimension::U69","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12423},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103501,"byte_end":103504,"line_start":294,"line_end":294,"column_start":70,"column_end":73},"name":"U70","qualname":"::base::dimension::U70","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12439},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103506,"byte_end":103509,"line_start":294,"line_end":294,"column_start":75,"column_end":78},"name":"U71","qualname":"::base::dimension::U71","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12455},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103511,"byte_end":103514,"line_start":294,"line_end":294,"column_start":80,"column_end":83},"name":"U72","qualname":"::base::dimension::U72","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12471},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103516,"byte_end":103519,"line_start":294,"line_end":294,"column_start":85,"column_end":88},"name":"U73","qualname":"::base::dimension::U73","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12487},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103521,"byte_end":103524,"line_start":294,"line_end":294,"column_start":90,"column_end":93},"name":"U74","qualname":"::base::dimension::U74","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12503},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103526,"byte_end":103529,"line_start":294,"line_end":294,"column_start":95,"column_end":98},"name":"U75","qualname":"::base::dimension::U75","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12519},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103535,"byte_end":103538,"line_start":295,"line_end":295,"column_start":5,"column_end":8},"name":"U76","qualname":"::base::dimension::U76","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12535},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103540,"byte_end":103543,"line_start":295,"line_end":295,"column_start":10,"column_end":13},"name":"U77","qualname":"::base::dimension::U77","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12551},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103545,"byte_end":103548,"line_start":295,"line_end":295,"column_start":15,"column_end":18},"name":"U78","qualname":"::base::dimension::U78","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12567},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103550,"byte_end":103553,"line_start":295,"line_end":295,"column_start":20,"column_end":23},"name":"U79","qualname":"::base::dimension::U79","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12583},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103555,"byte_end":103558,"line_start":295,"line_end":295,"column_start":25,"column_end":28},"name":"U80","qualname":"::base::dimension::U80","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12599},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103560,"byte_end":103563,"line_start":295,"line_end":295,"column_start":30,"column_end":33},"name":"U81","qualname":"::base::dimension::U81","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12615},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103565,"byte_end":103568,"line_start":295,"line_end":295,"column_start":35,"column_end":38},"name":"U82","qualname":"::base::dimension::U82","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12631},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103570,"byte_end":103573,"line_start":295,"line_end":295,"column_start":40,"column_end":43},"name":"U83","qualname":"::base::dimension::U83","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12647},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103575,"byte_end":103578,"line_start":295,"line_end":295,"column_start":45,"column_end":48},"name":"U84","qualname":"::base::dimension::U84","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12663},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103580,"byte_end":103583,"line_start":295,"line_end":295,"column_start":50,"column_end":53},"name":"U85","qualname":"::base::dimension::U85","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12679},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103585,"byte_end":103588,"line_start":295,"line_end":295,"column_start":55,"column_end":58},"name":"U86","qualname":"::base::dimension::U86","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12695},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103590,"byte_end":103593,"line_start":295,"line_end":295,"column_start":60,"column_end":63},"name":"U87","qualname":"::base::dimension::U87","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12711},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103595,"byte_end":103598,"line_start":295,"line_end":295,"column_start":65,"column_end":68},"name":"U88","qualname":"::base::dimension::U88","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12727},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103600,"byte_end":103603,"line_start":295,"line_end":295,"column_start":70,"column_end":73},"name":"U89","qualname":"::base::dimension::U89","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12743},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103605,"byte_end":103608,"line_start":295,"line_end":295,"column_start":75,"column_end":78},"name":"U90","qualname":"::base::dimension::U90","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12759},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103610,"byte_end":103613,"line_start":295,"line_end":295,"column_start":80,"column_end":83},"name":"U91","qualname":"::base::dimension::U91","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12775},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103615,"byte_end":103618,"line_start":295,"line_end":295,"column_start":85,"column_end":88},"name":"U92","qualname":"::base::dimension::U92","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12791},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103620,"byte_end":103623,"line_start":295,"line_end":295,"column_start":90,"column_end":93},"name":"U93","qualname":"::base::dimension::U93","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12807},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103625,"byte_end":103628,"line_start":295,"line_end":295,"column_start":95,"column_end":98},"name":"U94","qualname":"::base::dimension::U94","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12823},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103634,"byte_end":103637,"line_start":296,"line_end":296,"column_start":5,"column_end":8},"name":"U95","qualname":"::base::dimension::U95","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12839},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103639,"byte_end":103642,"line_start":296,"line_end":296,"column_start":10,"column_end":13},"name":"U96","qualname":"::base::dimension::U96","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12855},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103644,"byte_end":103647,"line_start":296,"line_end":296,"column_start":15,"column_end":18},"name":"U97","qualname":"::base::dimension::U97","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12871},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103649,"byte_end":103652,"line_start":296,"line_end":296,"column_start":20,"column_end":23},"name":"U98","qualname":"::base::dimension::U98","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12887},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103654,"byte_end":103657,"line_start":296,"line_end":296,"column_start":25,"column_end":28},"name":"U99","qualname":"::base::dimension::U99","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12903},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103659,"byte_end":103663,"line_start":296,"line_end":296,"column_start":30,"column_end":34},"name":"U100","qualname":"::base::dimension::U100","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12919},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103665,"byte_end":103669,"line_start":296,"line_end":296,"column_start":36,"column_end":40},"name":"U101","qualname":"::base::dimension::U101","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12935},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103671,"byte_end":103675,"line_start":296,"line_end":296,"column_start":42,"column_end":46},"name":"U102","qualname":"::base::dimension::U102","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12951},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103677,"byte_end":103681,"line_start":296,"line_end":296,"column_start":48,"column_end":52},"name":"U103","qualname":"::base::dimension::U103","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12967},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103683,"byte_end":103687,"line_start":296,"line_end":296,"column_start":54,"column_end":58},"name":"U104","qualname":"::base::dimension::U104","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12983},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103689,"byte_end":103693,"line_start":296,"line_end":296,"column_start":60,"column_end":64},"name":"U105","qualname":"::base::dimension::U105","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":12999},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103695,"byte_end":103699,"line_start":296,"line_end":296,"column_start":66,"column_end":70},"name":"U106","qualname":"::base::dimension::U106","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":13015},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103701,"byte_end":103705,"line_start":296,"line_end":296,"column_start":72,"column_end":76},"name":"U107","qualname":"::base::dimension::U107","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":13031},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103707,"byte_end":103711,"line_start":296,"line_end":296,"column_start":78,"column_end":82},"name":"U108","qualname":"::base::dimension::U108","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":13047},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103713,"byte_end":103717,"line_start":296,"line_end":296,"column_start":84,"column_end":88},"name":"U109","qualname":"::base::dimension::U109","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":13063},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103719,"byte_end":103723,"line_start":296,"line_end":296,"column_start":90,"column_end":94},"name":"U110","qualname":"::base::dimension::U110","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":13079},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103729,"byte_end":103733,"line_start":297,"line_end":297,"column_start":5,"column_end":9},"name":"U111","qualname":"::base::dimension::U111","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":13095},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103735,"byte_end":103739,"line_start":297,"line_end":297,"column_start":11,"column_end":15},"name":"U112","qualname":"::base::dimension::U112","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":13111},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103741,"byte_end":103745,"line_start":297,"line_end":297,"column_start":17,"column_end":21},"name":"U113","qualname":"::base::dimension::U113","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":13127},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103747,"byte_end":103751,"line_start":297,"line_end":297,"column_start":23,"column_end":27},"name":"U114","qualname":"::base::dimension::U114","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":13143},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103753,"byte_end":103757,"line_start":297,"line_end":297,"column_start":29,"column_end":33},"name":"U115","qualname":"::base::dimension::U115","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":13159},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103759,"byte_end":103763,"line_start":297,"line_end":297,"column_start":35,"column_end":39},"name":"U116","qualname":"::base::dimension::U116","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":13175},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103765,"byte_end":103769,"line_start":297,"line_end":297,"column_start":41,"column_end":45},"name":"U117","qualname":"::base::dimension::U117","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":13191},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103771,"byte_end":103775,"line_start":297,"line_end":297,"column_start":47,"column_end":51},"name":"U118","qualname":"::base::dimension::U118","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":13207},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103777,"byte_end":103781,"line_start":297,"line_end":297,"column_start":53,"column_end":57},"name":"U119","qualname":"::base::dimension::U119","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":13223},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103783,"byte_end":103787,"line_start":297,"line_end":297,"column_start":59,"column_end":63},"name":"U120","qualname":"::base::dimension::U120","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":13239},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103789,"byte_end":103793,"line_start":297,"line_end":297,"column_start":65,"column_end":69},"name":"U121","qualname":"::base::dimension::U121","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":13255},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103795,"byte_end":103799,"line_start":297,"line_end":297,"column_start":71,"column_end":75},"name":"U122","qualname":"::base::dimension::U122","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":13271},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103801,"byte_end":103805,"line_start":297,"line_end":297,"column_start":77,"column_end":81},"name":"U123","qualname":"::base::dimension::U123","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":13287},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103807,"byte_end":103811,"line_start":297,"line_end":297,"column_start":83,"column_end":87},"name":"U124","qualname":"::base::dimension::U124","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":13303},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103813,"byte_end":103817,"line_start":297,"line_end":297,"column_start":89,"column_end":93},"name":"U125","qualname":"::base::dimension::U125","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":13319},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103819,"byte_end":103823,"line_start":297,"line_end":297,"column_start":95,"column_end":99},"name":"U126","qualname":"::base::dimension::U126","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":13335},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":103829,"byte_end":103833,"line_start":298,"line_end":298,"column_start":5,"column_end":9},"name":"U127","qualname":"::base::dimension::U127","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102110,"byte_end":102137,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":584},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/iter.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"iter","qualname":"::base::iter","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/iter.rs","parent":null,"children":[{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":590},{"krate":0,"index":593},{"krate":0,"index":598},{"krate":0,"index":13351},{"krate":0,"index":13363},{"krate":0,"index":13370},{"krate":0,"index":13380},{"krate":0,"index":13387},{"krate":0,"index":13399},{"krate":0,"index":13406},{"krate":0,"index":13416},{"krate":0,"index":13423},{"krate":0,"index":13431},{"krate":0,"index":599},{"krate":0,"index":606},{"krate":0,"index":616},{"krate":0,"index":623},{"krate":0,"index":632},{"krate":0,"index":640},{"krate":0,"index":650},{"krate":0,"index":13438},{"krate":0,"index":13446},{"krate":0,"index":657},{"krate":0,"index":664},{"krate":0,"index":674},{"krate":0,"index":681},{"krate":0,"index":690},{"krate":0,"index":698},{"krate":0,"index":708}],"decl_id":null,"docs":" Matrix iterators.\n","sig":null,"attributes":[{"value":"! Matrix iterators.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/iter.rs","byte_start":107459,"byte_end":107480,"line_start":1,"line_end":1,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":13351},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/iter.rs","byte_start":112415,"byte_end":112425,"line_start":125,"line_end":125,"column_start":18,"column_end":28},"name":"MatrixIter","qualname":"::base::iter::MatrixIter","value":"MatrixIter {  }","parent":null,"children":[{"krate":0,"index":13357},{"krate":0,"index":13358},{"krate":0,"index":13359},{"krate":0,"index":13360},{"krate":0,"index":13361},{"krate":0,"index":13362}],"decl_id":null,"docs":" An iterator through a dense matrix with arbitrary strides matrix.\n","sig":null,"attributes":[{"value":"/ An iterator through a dense matrix with arbitrary strides matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/iter.rs","byte_start":107804,"byte_end":107873,"line_start":12,"line_end":12,"column_start":9,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":13387},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/iter.rs","byte_start":112487,"byte_end":112500,"line_start":126,"line_end":126,"column_start":18,"column_end":31},"name":"MatrixIterMut","qualname":"::base::iter::MatrixIterMut","value":"MatrixIterMut {  }","parent":null,"children":[{"krate":0,"index":13393},{"krate":0,"index":13394},{"krate":0,"index":13395},{"krate":0,"index":13396},{"krate":0,"index":13397},{"krate":0,"index":13398}],"decl_id":null,"docs":" An iterator through a dense matrix with arbitrary strides matrix.\n","sig":null,"attributes":[{"value":"/ An iterator through a dense matrix with arbitrary strides matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/iter.rs","byte_start":107804,"byte_end":107873,"line_start":12,"line_end":12,"column_start":9,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":13423},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/iter.rs","byte_start":112664,"byte_end":112671,"line_start":135,"line_end":135,"column_start":12,"column_end":19},"name":"RowIter","qualname":"::base::iter::RowIter","value":"RowIter {  }","parent":null,"children":[{"krate":0,"index":13429},{"krate":0,"index":13430}],"decl_id":null,"docs":" An iterator through the rows of a matrix.\n","sig":null,"attributes":[{"value":"/ An iterator through the rows of a matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/iter.rs","byte_start":112607,"byte_end":112652,"line_start":134,"line_end":134,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":623},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/iter.rs","byte_start":113931,"byte_end":113941,"line_start":184,"line_end":184,"column_start":12,"column_end":22},"name":"RowIterMut","qualname":"::base::iter::RowIterMut","value":"RowIterMut {  }","parent":null,"children":[{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":631}],"decl_id":null,"docs":" An iterator through the mutable rows of a matrix.\n","sig":null,"attributes":[{"value":"/ An iterator through the mutable rows of a matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/iter.rs","byte_start":113866,"byte_end":113919,"line_start":183,"line_end":183,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":13438},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/iter.rs","byte_start":115444,"byte_end":115454,"line_start":247,"line_end":247,"column_start":12,"column_end":22},"name":"ColumnIter","qualname":"::base::iter::ColumnIter","value":"ColumnIter {  }","parent":null,"children":[{"krate":0,"index":13444},{"krate":0,"index":13445}],"decl_id":null,"docs":" An iterator through the columns of a matrix.\n","sig":null,"attributes":[{"value":"/ An iterator through the columns of a matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/iter.rs","byte_start":115384,"byte_end":115432,"line_start":246,"line_end":246,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":681},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/iter.rs","byte_start":116736,"byte_end":116749,"line_start":298,"line_end":298,"column_start":12,"column_end":25},"name":"ColumnIterMut","qualname":"::base::iter::ColumnIterMut","value":"ColumnIterMut {  }","parent":null,"children":[{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":689}],"decl_id":null,"docs":" An iterator through the mutable columns of a matrix.\n","sig":null,"attributes":[{"value":"/ An iterator through the mutable columns of a matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/iter.rs","byte_start":116668,"byte_end":116724,"line_start":297,"line_end":297,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":817},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":121084,"byte_end":121091,"line_start":121,"line_end":121,"column_start":12,"column_end":19},"name":"neg_mut","qualname":"<Matrix<N, R, C, S>>::neg_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Negates `self` in-place.\n","sig":null,"attributes":[{"value":"/ Negates `self` in-place.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":121030,"byte_end":121058,"line_start":119,"line_end":119,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":121063,"byte_end":121072,"line_start":120,"line_end":120,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":13473},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":132438,"byte_end":132444,"line_start":373,"line_end":373,"column_start":27,"column_end":33},"name":"add_to","qualname":"<Matrix<N, R1, C1, SA>>::add_to","value":"fn <R2, C2, SB, R3, C3, SC> (&self, rhs: &Matrix<N, R2, C2, SB>, out: &mut Matrix<N, R3, C3, SC>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to `self + rhs` but stores the result into `out` to avoid allocations.\n","sig":null,"attributes":[{"value":"/ Equivalent to `self + rhs` but stores the result into `out` to avoid allocations.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":126890,"byte_end":126975,"line_start":255,"line_end":255,"column_start":13,"column_end":98}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":126988,"byte_end":126997,"line_start":256,"line_end":256,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":13563},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":132668,"byte_end":132674,"line_start":376,"line_end":376,"column_start":27,"column_end":33},"name":"sub_to","qualname":"<Matrix<N, R1, C1, SA>>::sub_to","value":"fn <R2, C2, SB, R3, C3, SC> (&self, rhs: &Matrix<N, R2, C2, SB>, out: &mut Matrix<N, R3, C3, SC>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to `self + rhs` but stores the result into `out` to avoid allocations.\n","sig":null,"attributes":[{"value":"/ Equivalent to `self + rhs` but stores the result into `out` to avoid allocations.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":126890,"byte_end":126975,"line_start":255,"line_end":255,"column_start":13,"column_end":98}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":126988,"byte_end":126997,"line_start":256,"line_end":256,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":915},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":142312,"byte_end":142318,"line_start":682,"line_end":682,"column_start":12,"column_end":18},"name":"tr_mul","qualname":"<Matrix<N, R1, C1, SA>>::tr_mul","value":"fn <R2, C2, SB> (&self, rhs: &Matrix<N, R2, C2, SB>) -> MatrixMN<N, C1, C2>","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to `self.transpose() * rhs`.\n","sig":null,"attributes":[{"value":"/ Equivalent to `self.transpose() * rhs`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":142243,"byte_end":142286,"line_start":680,"line_end":680,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":142291,"byte_end":142300,"line_start":681,"line_end":681,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":919},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":142798,"byte_end":142804,"line_start":697,"line_end":697,"column_start":12,"column_end":18},"name":"ad_mul","qualname":"<Matrix<N, R1, C1, SA>>::ad_mul","value":"fn <R2, C2, SB> (&self, rhs: &Matrix<N, R2, C2, SB>) -> MatrixMN<N, C1, C2>","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to `self.adjoint() * rhs`.\n","sig":null,"attributes":[{"value":"/ Equivalent to `self.adjoint() * rhs`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":142731,"byte_end":142772,"line_start":695,"line_end":695,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":142777,"byte_end":142786,"line_start":696,"line_end":696,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":931},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":144864,"byte_end":144873,"line_start":759,"line_end":759,"column_start":12,"column_end":21},"name":"tr_mul_to","qualname":"<Matrix<N, R1, C1, SA>>::tr_mul_to","value":"fn <R2, C2, SB, R3, C3, SC> (&self, rhs: &Matrix<N, R2, C2, SB>, out: &mut Matrix<N, R3, C3, SC>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to `self.transpose() * rhs` but stores the result into `out` to avoid\n allocations.\n","sig":null,"attributes":[{"value":"/ Equivalent to `self.transpose() * rhs` but stores the result into `out` to avoid","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":144733,"byte_end":144817,"line_start":756,"line_end":756,"column_start":5,"column_end":89}},{"value":"/ allocations.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":144822,"byte_end":144838,"line_start":757,"line_end":757,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":144843,"byte_end":144852,"line_start":758,"line_end":758,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":939},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":145370,"byte_end":145379,"line_start":774,"line_end":774,"column_start":12,"column_end":21},"name":"ad_mul_to","qualname":"<Matrix<N, R1, C1, SA>>::ad_mul_to","value":"fn <R2, C2, SB, R3, C3, SC> (&self, rhs: &Matrix<N, R2, C2, SB>, out: &mut Matrix<N, R3, C3, SC>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to `self.adjoint() * rhs` but stores the result into `out` to avoid\n allocations.\n","sig":null,"attributes":[{"value":"/ Equivalent to `self.adjoint() * rhs` but stores the result into `out` to avoid","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":145241,"byte_end":145323,"line_start":771,"line_end":771,"column_start":5,"column_end":87}},{"value":"/ allocations.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":145328,"byte_end":145344,"line_start":772,"line_end":772,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":145349,"byte_end":145358,"line_start":773,"line_end":773,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":947},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":145888,"byte_end":145894,"line_start":789,"line_end":789,"column_start":12,"column_end":18},"name":"mul_to","qualname":"<Matrix<N, R1, C1, SA>>::mul_to","value":"fn <R2, C2, SB, R3, C3, SC> (&self, rhs: &Matrix<N, R2, C2, SB>, out: &mut Matrix<N, R3, C3, SC>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to `self * rhs` but stores the result into `out` to avoid allocations.\n","sig":null,"attributes":[{"value":"/ Equivalent to `self * rhs` but stores the result into `out` to avoid allocations.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":145777,"byte_end":145862,"line_start":787,"line_end":787,"column_start":5,"column_end":90}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":145867,"byte_end":145876,"line_start":788,"line_end":788,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":954},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":146435,"byte_end":146444,"line_start":805,"line_end":805,"column_start":12,"column_end":21},"name":"kronecker","qualname":"<Matrix<N, R1, C1, SA>>::kronecker","value":"fn <R2, C2, SB> (&self, rhs: &Matrix<N, R2, C2, SB>) -> MatrixMN<N, DimProd<R1, R2>, DimProd<C1, C2>>","parent":null,"children":[],"decl_id":null,"docs":" The kronecker product of two matrices (aka. tensor product of the corresponding linear\n maps).\n","sig":null,"attributes":[{"value":"/ The kronecker product of two matrices (aka. tensor product of the corresponding linear","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":146318,"byte_end":146408,"line_start":803,"line_end":803,"column_start":5,"column_end":95}},{"value":"/ maps).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":146413,"byte_end":146423,"line_start":804,"line_end":804,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":963},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":147922,"byte_end":147932,"line_start":850,"line_end":850,"column_start":12,"column_end":22},"name":"add_scalar","qualname":"<Matrix<N, R, C, S>>::add_scalar","value":"fn (&self, rhs: N) -> MatrixMN<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Adds a scalar to `self`.\n","sig":null,"attributes":[{"value":"/ Adds a scalar to `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":147810,"byte_end":147838,"line_start":847,"line_end":847,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":147843,"byte_end":147852,"line_start":848,"line_end":848,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use add_scalar_mut()?\"","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":147857,"byte_end":147910,"line_start":849,"line_end":849,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":964},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":148192,"byte_end":148206,"line_start":861,"line_end":861,"column_start":12,"column_end":26},"name":"add_scalar_mut","qualname":"<Matrix<N, R, C, S>>::add_scalar_mut","value":"fn (&mut self, rhs: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds a scalar to `self` in-place.\n","sig":null,"attributes":[{"value":"/ Adds a scalar to `self` in-place.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":148129,"byte_end":148166,"line_start":859,"line_end":859,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":148171,"byte_end":148180,"line_start":860,"line_end":860,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":983},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":149362,"byte_end":149366,"line_start":900,"line_end":900,"column_start":12,"column_end":16},"name":"amax","qualname":"<Matrix<N, R, C, S>>::amax","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" Returns the absolute value of the component with the largest absolute value.\n # Example\n ```\n # use nalgebra::Vector3;\n assert_eq!(Vector3::new(-1.0, 2.0, 3.0).amax(), 3.0);\n assert_eq!(Vector3::new(-1.0, -2.0, -3.0).amax(), 3.0);\n ```\n","sig":null,"attributes":[{"value":"/ Returns the absolute value of the component with the largest absolute value.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":149055,"byte_end":149135,"line_start":892,"line_end":892,"column_start":5,"column_end":85}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":149140,"byte_end":149153,"line_start":893,"line_end":893,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":149158,"byte_end":149165,"line_start":894,"line_end":894,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":149170,"byte_end":149198,"line_start":895,"line_end":895,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(Vector3::new(-1.0, 2.0, 3.0).amax(), 3.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":149203,"byte_end":149260,"line_start":896,"line_end":896,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(Vector3::new(-1.0, -2.0, -3.0).amax(), 3.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":149265,"byte_end":149324,"line_start":897,"line_end":897,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":149329,"byte_end":149336,"line_start":898,"line_end":898,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":149341,"byte_end":149350,"line_start":899,"line_end":899,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":986},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":149930,"byte_end":149935,"line_start":920,"line_end":920,"column_start":12,"column_end":17},"name":"camax","qualname":"<Matrix<N, R, C, S>>::camax","value":"fn (&self) -> N::SimdRealField","parent":null,"children":[],"decl_id":null,"docs":" Returns the the 1-norm of the complex component with the largest 1-norm.\n # Example\n ```\n # use nalgebra::{Vector3, Complex};\n assert_eq!(Vector3::new(\n     Complex::new(-3.0, -2.0),\n     Complex::new(1.0, 2.0),\n     Complex::new(1.0, 3.0)).camax(), 5.0);\n ```\n","sig":null,"attributes":[{"value":"/ Returns the the 1-norm of the complex component with the largest 1-norm.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":149584,"byte_end":149660,"line_start":910,"line_end":910,"column_start":5,"column_end":81}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":149665,"byte_end":149678,"line_start":911,"line_end":911,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":149683,"byte_end":149690,"line_start":912,"line_end":912,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Vector3, Complex};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":149695,"byte_end":149734,"line_start":913,"line_end":913,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(Vector3::new(","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":149739,"byte_end":149767,"line_start":914,"line_end":914,"column_start":5,"column_end":33}},{"value":"/     Complex::new(-3.0, -2.0),","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":149772,"byte_end":149805,"line_start":915,"line_end":915,"column_start":5,"column_end":38}},{"value":"/     Complex::new(1.0, 2.0),","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":149810,"byte_end":149841,"line_start":916,"line_end":916,"column_start":5,"column_end":36}},{"value":"/     Complex::new(1.0, 3.0)).camax(), 5.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":149846,"byte_end":149892,"line_start":917,"line_end":917,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":149897,"byte_end":149904,"line_start":918,"line_end":918,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":149909,"byte_end":149918,"line_start":919,"line_end":919,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":989},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":150484,"byte_end":150487,"line_start":939,"line_end":939,"column_start":12,"column_end":15},"name":"max","qualname":"<Matrix<N, R, C, S>>::max","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" Returns the component with the largest value.\n # Example\n ```\n # use nalgebra::Vector3;\n assert_eq!(Vector3::new(-1.0, 2.0, 3.0).max(), 3.0);\n assert_eq!(Vector3::new(-1.0, -2.0, -3.0).max(), -1.0);\n assert_eq!(Vector3::new(5u32, 2, 3).max(), 5);\n ```\n","sig":null,"attributes":[{"value":"/ Returns the component with the largest value.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":150154,"byte_end":150203,"line_start":930,"line_end":930,"column_start":5,"column_end":54}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":150208,"byte_end":150221,"line_start":931,"line_end":931,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":150226,"byte_end":150233,"line_start":932,"line_end":932,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":150238,"byte_end":150266,"line_start":933,"line_end":933,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(Vector3::new(-1.0, 2.0, 3.0).max(), 3.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":150271,"byte_end":150327,"line_start":934,"line_end":934,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(Vector3::new(-1.0, -2.0, -3.0).max(), -1.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":150332,"byte_end":150391,"line_start":935,"line_end":935,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(Vector3::new(5u32, 2, 3).max(), 5);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":150396,"byte_end":150446,"line_start":936,"line_end":936,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":150451,"byte_end":150458,"line_start":937,"line_end":937,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":150463,"byte_end":150472,"line_start":938,"line_end":938,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":993},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":151020,"byte_end":151024,"line_start":957,"line_end":957,"column_start":12,"column_end":16},"name":"amin","qualname":"<Matrix<N, R, C, S>>::amin","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" Returns the absolute value of the component with the smallest absolute value.\n # Example\n ```\n # use nalgebra::Vector3;\n assert_eq!(Vector3::new(-1.0, 2.0, -3.0).amin(), 1.0);\n assert_eq!(Vector3::new(10.0, 2.0, 30.0).amin(), 2.0);\n ```\n","sig":null,"attributes":[{"value":"/ Returns the absolute value of the component with the smallest absolute value.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":150712,"byte_end":150793,"line_start":949,"line_end":949,"column_start":5,"column_end":86}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":150798,"byte_end":150811,"line_start":950,"line_end":950,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":150816,"byte_end":150823,"line_start":951,"line_end":951,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":150828,"byte_end":150856,"line_start":952,"line_end":952,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(Vector3::new(-1.0, 2.0, -3.0).amin(), 1.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":150861,"byte_end":150919,"line_start":953,"line_end":953,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(Vector3::new(10.0, 2.0, 30.0).amin(), 2.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":150924,"byte_end":150982,"line_start":954,"line_end":954,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":150987,"byte_end":150994,"line_start":955,"line_end":955,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":150999,"byte_end":151008,"line_start":956,"line_end":956,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":997},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":151599,"byte_end":151604,"line_start":977,"line_end":977,"column_start":12,"column_end":17},"name":"camin","qualname":"<Matrix<N, R, C, S>>::camin","value":"fn (&self) -> N::SimdRealField","parent":null,"children":[],"decl_id":null,"docs":" Returns the the 1-norm of the complex component with the smallest 1-norm.\n # Example\n ```\n # use nalgebra::{Vector3, Complex};\n assert_eq!(Vector3::new(\n     Complex::new(-3.0, -2.0),\n     Complex::new(1.0, 2.0),\n     Complex::new(1.0, 3.0)).camin(), 3.0);\n ```\n","sig":null,"attributes":[{"value":"/ Returns the the 1-norm of the complex component with the smallest 1-norm.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":151252,"byte_end":151329,"line_start":967,"line_end":967,"column_start":5,"column_end":82}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":151334,"byte_end":151347,"line_start":968,"line_end":968,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":151352,"byte_end":151359,"line_start":969,"line_end":969,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Vector3, Complex};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":151364,"byte_end":151403,"line_start":970,"line_end":970,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(Vector3::new(","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":151408,"byte_end":151436,"line_start":971,"line_end":971,"column_start":5,"column_end":33}},{"value":"/     Complex::new(-3.0, -2.0),","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":151441,"byte_end":151474,"line_start":972,"line_end":972,"column_start":5,"column_end":38}},{"value":"/     Complex::new(1.0, 2.0),","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":151479,"byte_end":151510,"line_start":973,"line_end":973,"column_start":5,"column_end":36}},{"value":"/     Complex::new(1.0, 3.0)).camin(), 3.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":151515,"byte_end":151561,"line_start":974,"line_end":974,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":151566,"byte_end":151573,"line_start":975,"line_end":975,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":151578,"byte_end":151587,"line_start":976,"line_end":976,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1001},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":152229,"byte_end":152232,"line_start":999,"line_end":999,"column_start":12,"column_end":15},"name":"min","qualname":"<Matrix<N, R, C, S>>::min","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" Returns the component with the smallest value.\n # Example\n ```\n # use nalgebra::Vector3;\n assert_eq!(Vector3::new(-1.0, 2.0, 3.0).min(), -1.0);\n assert_eq!(Vector3::new(1.0, 2.0, 3.0).min(), 1.0);\n assert_eq!(Vector3::new(5u32, 2, 3).min(), 2);\n ```\n","sig":null,"attributes":[{"value":"/ Returns the component with the smallest value.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":151901,"byte_end":151951,"line_start":990,"line_end":990,"column_start":5,"column_end":55}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":151956,"byte_end":151969,"line_start":991,"line_end":991,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":151974,"byte_end":151981,"line_start":992,"line_end":992,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":151986,"byte_end":152014,"line_start":993,"line_end":993,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(Vector3::new(-1.0, 2.0, 3.0).min(), -1.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":152019,"byte_end":152076,"line_start":994,"line_end":994,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(Vector3::new(1.0, 2.0, 3.0).min(), 1.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":152081,"byte_end":152136,"line_start":995,"line_end":995,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(Vector3::new(5u32, 2, 3).min(), 2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":152141,"byte_end":152191,"line_start":996,"line_end":996,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":152196,"byte_end":152203,"line_start":997,"line_end":997,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":152208,"byte_end":152217,"line_start":998,"line_end":998,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":1005},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"storage","qualname":"::base::storage","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","parent":null,"children":[{"krate":0,"index":1006},{"krate":0,"index":1007},{"krate":0,"index":1008},{"krate":0,"index":1012},{"krate":0,"index":1013},{"krate":0,"index":1016},{"krate":0,"index":1017},{"krate":0,"index":1023},{"krate":0,"index":1027},{"krate":0,"index":1031},{"krate":0,"index":1035},{"krate":0,"index":1053},{"krate":0,"index":1065},{"krate":0,"index":1069}],"decl_id":null,"docs":" Abstract definition of a matrix data storage.\n","sig":null,"attributes":[{"value":"! Abstract definition of a matrix data storage.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":152455,"byte_end":152504,"line_start":1,"line_end":1,"column_start":1,"column_end":50}}]},{"kind":"Type","id":{"krate":0,"index":1017},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":152869,"byte_end":152885,"line_start":15,"line_end":15,"column_start":10,"column_end":26},"name":"SameShapeStorage","qualname":"::base::storage::SameShapeStorage","value":"<DefaultAllocator as\nAllocator<N, SameShapeR<R1, R2>, SameShapeC<C1, C2>>>::Buffer","parent":null,"children":[],"decl_id":null,"docs":" The data storage for the sum of two matrices with dimensions `(R1, C1)` and `(R2, C2)`.\n","sig":null,"attributes":[{"value":"/ The data storage for the sum of two matrices with dimensions `(R1, C1)` and `(R2, C2)`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":152768,"byte_end":152859,"line_start":14,"line_end":14,"column_start":1,"column_end":92}}]},{"kind":"Type","id":{"krate":0,"index":1023},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":153099,"byte_end":153104,"line_start":20,"line_end":20,"column_start":10,"column_end":15},"name":"Owned","qualname":"::base::storage::Owned","value":"<DefaultAllocator as Allocator<N, R, C>>::Buffer","parent":null,"children":[],"decl_id":null,"docs":" The owned data storage that can be allocated from `S`.\n","sig":null,"attributes":[{"value":"/ The owned data storage that can be allocated from `S`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":153031,"byte_end":153089,"line_start":19,"line_end":19,"column_start":1,"column_end":59}}]},{"kind":"Type","id":{"krate":0,"index":1027},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":153262,"byte_end":153269,"line_start":23,"line_end":23,"column_start":10,"column_end":17},"name":"RStride","qualname":"::base::storage::RStride","value":"<<DefaultAllocator as Allocator<N, R, C>>::Buffer as\nStorage<N, R, C>>::RStride","parent":null,"children":[],"decl_id":null,"docs":" The row-stride of the owned data storage for a buffer of dimension `(R, C)`.\n","sig":null,"attributes":[{"value":"/ The row-stride of the owned data storage for a buffer of dimension `(R, C)`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":153172,"byte_end":153252,"line_start":22,"line_end":22,"column_start":1,"column_end":81}}]},{"kind":"Type","id":{"krate":0,"index":1031},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":153465,"byte_end":153472,"line_start":27,"line_end":27,"column_start":10,"column_end":17},"name":"CStride","qualname":"::base::storage::CStride","value":"<<DefaultAllocator as Allocator<N, R, C>>::Buffer as\nStorage<N, R, C>>::CStride","parent":null,"children":[],"decl_id":null,"docs":" The column-stride of the owned data storage for a buffer of dimension `(R, C)`.\n","sig":null,"attributes":[{"value":"/ The column-stride of the owned data storage for a buffer of dimension `(R, C)`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":153372,"byte_end":153455,"line_start":26,"line_end":26,"column_start":1,"column_end":84}}]},{"kind":"Trait","id":{"krate":0,"index":1035},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":154137,"byte_end":154144,"line_start":39,"line_end":39,"column_start":18,"column_end":25},"name":"Storage","qualname":"::base::storage::Storage","value":"Storage<N: Scalar, R: Dim, C: Dim = U1>: Debug + Sized","parent":null,"children":[{"krate":0,"index":1039},{"krate":0,"index":1040},{"krate":0,"index":1041},{"krate":0,"index":1042},{"krate":0,"index":1043},{"krate":0,"index":1044},{"krate":0,"index":1045},{"krate":0,"index":1046},{"krate":0,"index":1047},{"krate":0,"index":1048},{"krate":0,"index":1049},{"krate":0,"index":1050},{"krate":0,"index":1051},{"krate":0,"index":1052}],"decl_id":null,"docs":" The trait shared by all matrix data storage.","sig":null,"attributes":[{"value":"/ The trait shared by all matrix data storage.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":153575,"byte_end":153623,"line_start":30,"line_end":30,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":153624,"byte_end":153627,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ FIXME: doc","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":153628,"byte_end":153642,"line_start":32,"line_end":32,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":153643,"byte_end":153646,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Note that `Self` must always have a number of elements compatible with the matrix length (given","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":153647,"byte_end":153746,"line_start":34,"line_end":34,"column_start":1,"column_end":100}},{"value":"/ by `R` and `C` if they are known at compile-time). For example, implementors of this trait","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":153747,"byte_end":153841,"line_start":35,"line_end":35,"column_start":1,"column_end":95}},{"value":"/ should **not** allow the user to modify the size of the underlying buffer with safe methods","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":153842,"byte_end":153937,"line_start":36,"line_end":36,"column_start":1,"column_end":96}},{"value":"/ (for example the `VecStorage::data_mut` method is unsafe because the user could change the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":153938,"byte_end":154032,"line_start":37,"line_end":37,"column_start":1,"column_end":95}},{"value":"/ vector's size so that it no longer contains enough elements: this will lead to UB.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":154033,"byte_end":154119,"line_start":38,"line_end":38,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":1039},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":154253,"byte_end":154260,"line_start":41,"line_end":41,"column_start":10,"column_end":17},"name":"RStride","qualname":"::base::storage::Storage::RStride","value":"type RStride: Dim;","parent":{"krate":0,"index":1035},"children":[],"decl_id":null,"docs":" The static stride of this storage's rows.\n","sig":null,"attributes":[{"value":"/ The static stride of this storage's rows.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":154198,"byte_end":154243,"line_start":40,"line_end":40,"column_start":5,"column_end":50}}]},{"kind":"Type","id":{"krate":0,"index":1040},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":154330,"byte_end":154337,"line_start":44,"line_end":44,"column_start":10,"column_end":17},"name":"CStride","qualname":"::base::storage::Storage::CStride","value":"type CStride: Dim;","parent":{"krate":0,"index":1035},"children":[],"decl_id":null,"docs":" The static stride of this storage's columns.\n","sig":null,"attributes":[{"value":"/ The static stride of this storage's columns.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":154272,"byte_end":154320,"line_start":43,"line_end":43,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1041},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":154385,"byte_end":154388,"line_start":47,"line_end":47,"column_start":8,"column_end":11},"name":"ptr","qualname":"::base::storage::Storage::ptr","value":"fn (&self) -> *const N","parent":{"krate":0,"index":1035},"children":[],"decl_id":null,"docs":" The matrix data pointer.\n","sig":null,"attributes":[{"value":"/ The matrix data pointer.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":154349,"byte_end":154377,"line_start":46,"line_end":46,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1042},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":154609,"byte_end":154614,"line_start":51,"line_end":51,"column_start":8,"column_end":13},"name":"shape","qualname":"::base::storage::Storage::shape","value":"fn (&self) -> (R, C)","parent":{"krate":0,"index":1035},"children":[],"decl_id":null,"docs":" The dimension of the matrix at run-time. Arr length of zero indicates the additive identity\n element of any dimension. Must be equal to `Self::dimension()` if it is not `None`.\n","sig":null,"attributes":[{"value":"/ The dimension of the matrix at run-time. Arr length of zero indicates the additive identity","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":154414,"byte_end":154509,"line_start":49,"line_end":49,"column_start":5,"column_end":100}},{"value":"/ element of any dimension. Must be equal to `Self::dimension()` if it is not `None`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":154514,"byte_end":154601,"line_start":50,"line_end":50,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":1043},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":154816,"byte_end":154823,"line_start":56,"line_end":56,"column_start":8,"column_end":15},"name":"strides","qualname":"::base::storage::Storage::strides","value":"fn (&self) -> (Self::RStride, Self::CStride)","parent":{"krate":0,"index":1035},"children":[],"decl_id":null,"docs":" The spacing between consecutive row elements and consecutive column elements.","sig":null,"attributes":[{"value":"/ The spacing between consecutive row elements and consecutive column elements.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":154638,"byte_end":154719,"line_start":53,"line_end":53,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":154724,"byte_end":154727,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ For example this returns `(1, 5)` for a row-major matrix with 5 columns.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":154732,"byte_end":154808,"line_start":55,"line_end":55,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1044},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":155216,"byte_end":155228,"line_start":66,"line_end":66,"column_start":8,"column_end":20},"name":"linear_index","qualname":"::base::storage::Storage::linear_index","value":"fn (&self, irow: usize, icol: usize) -> usize","parent":{"krate":0,"index":1035},"children":[],"decl_id":null,"docs":" Compute the index corresponding to the irow-th row and icol-th column of this matrix. The\n index must be such that the following holds:","sig":null,"attributes":[{"value":"/ Compute the index corresponding to the irow-th row and icol-th column of this matrix. The","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":154871,"byte_end":154964,"line_start":58,"line_end":58,"column_start":5,"column_end":98}},{"value":"/ index must be such that the following holds:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":154969,"byte_end":155017,"line_start":59,"line_end":59,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":155022,"byte_end":155025,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ ```.ignore","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":155030,"byte_end":155044,"line_start":61,"line_end":61,"column_start":5,"column_end":19}},{"value":"/ let lindex = self.linear_index(irow, icol);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":155049,"byte_end":155096,"line_start":62,"line_end":62,"column_start":5,"column_end":52}},{"value":"/ assert!(*self.get_unchecked(irow, icol) == *self.get_unchecked_linear(lindex)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":155101,"byte_end":155182,"line_start":63,"line_end":63,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":155187,"byte_end":155194,"line_start":64,"line_end":64,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":155199,"byte_end":155208,"line_start":65,"line_end":65,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1045},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":155503,"byte_end":155531,"line_start":74,"line_end":74,"column_start":15,"column_end":43},"name":"get_address_unchecked_linear","qualname":"::base::storage::Storage::get_address_unchecked_linear","value":"fn (&self, i: usize) -> *const N","parent":{"krate":0,"index":1035},"children":[],"decl_id":null,"docs":" Gets the address of the i-th matrix component without performing bound-checking.\n","sig":null,"attributes":[{"value":"/ Gets the address of the i-th matrix component without performing bound-checking.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":155390,"byte_end":155474,"line_start":72,"line_end":72,"column_start":5,"column_end":89}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":155479,"byte_end":155488,"line_start":73,"line_end":73,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1046},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":155734,"byte_end":155755,"line_start":80,"line_end":80,"column_start":15,"column_end":36},"name":"get_address_unchecked","qualname":"::base::storage::Storage::get_address_unchecked","value":"fn (&self, irow: usize, icol: usize) -> *const N","parent":{"krate":0,"index":1035},"children":[],"decl_id":null,"docs":" Gets the address of the i-th matrix component without performing bound-checking.\n","sig":null,"attributes":[{"value":"/ Gets the address of the i-th matrix component without performing bound-checking.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":155621,"byte_end":155705,"line_start":78,"line_end":78,"column_start":5,"column_end":89}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":155710,"byte_end":155719,"line_start":79,"line_end":79,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1047},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":155985,"byte_end":156005,"line_start":86,"line_end":86,"column_start":15,"column_end":35},"name":"get_unchecked_linear","qualname":"::base::storage::Storage::get_unchecked_linear","value":"fn (&self, i: usize) -> &N","parent":{"krate":0,"index":1035},"children":[],"decl_id":null,"docs":" Retrieves a reference to the i-th element without bound-checking.\n","sig":null,"attributes":[{"value":"/ Retrieves a reference to the i-th element without bound-checking.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":155887,"byte_end":155956,"line_start":84,"line_end":84,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":155961,"byte_end":155970,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1048},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":156187,"byte_end":156200,"line_start":92,"line_end":92,"column_start":15,"column_end":28},"name":"get_unchecked","qualname":"::base::storage::Storage::get_unchecked","value":"fn (&self, irow: usize, icol: usize) -> &N","parent":{"krate":0,"index":1035},"children":[],"decl_id":null,"docs":" Retrieves a reference to the i-th element without bound-checking.\n","sig":null,"attributes":[{"value":"/ Retrieves a reference to the i-th element without bound-checking.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":156089,"byte_end":156158,"line_start":90,"line_end":90,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":156163,"byte_end":156172,"line_start":91,"line_end":91,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1049},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":156398,"byte_end":156411,"line_start":97,"line_end":97,"column_start":8,"column_end":21},"name":"is_contiguous","qualname":"::base::storage::Storage::is_contiguous","value":"fn (&self) -> bool","parent":{"krate":0,"index":1035},"children":[],"decl_id":null,"docs":" Indicates whether this data buffer stores its elements contiguously.\n","sig":null,"attributes":[{"value":"/ Indicates whether this data buffer stores its elements contiguously.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":156318,"byte_end":156390,"line_start":96,"line_end":96,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1050},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":156596,"byte_end":156604,"line_start":102,"line_end":102,"column_start":8,"column_end":16},"name":"as_slice","qualname":"::base::storage::Storage::as_slice","value":"fn (&self) -> &[N]","parent":{"krate":0,"index":1035},"children":[],"decl_id":null,"docs":" Retrieves the data buffer as a contiguous slice.","sig":null,"attributes":[{"value":"/ Retrieves the data buffer as a contiguous slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":156433,"byte_end":156485,"line_start":99,"line_end":99,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":156490,"byte_end":156493,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ The matrix components may not be stored in a contiguous way, depending on the strides.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":156498,"byte_end":156588,"line_start":101,"line_end":101,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":1051},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":156703,"byte_end":156713,"line_start":105,"line_end":105,"column_start":8,"column_end":18},"name":"into_owned","qualname":"::base::storage::Storage::into_owned","value":"fn (self) -> Owned<N, R, C>","parent":{"krate":0,"index":1035},"children":[],"decl_id":null,"docs":" Builds a matrix data storage that does not contain any reference.\n","sig":null,"attributes":[{"value":"/ Builds a matrix data storage that does not contain any reference.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":156626,"byte_end":156695,"line_start":104,"line_end":104,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1052},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":156879,"byte_end":156890,"line_start":110,"line_end":110,"column_start":8,"column_end":19},"name":"clone_owned","qualname":"::base::storage::Storage::clone_owned","value":"fn (&self) -> Owned<N, R, C>","parent":{"krate":0,"index":1035},"children":[],"decl_id":null,"docs":" Clones this data storage to one that does not contain any reference.\n","sig":null,"attributes":[{"value":"/ Clones this data storage to one that does not contain any reference.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":156799,"byte_end":156871,"line_start":109,"line_end":109,"column_start":5,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":1053},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":157338,"byte_end":157348,"line_start":120,"line_end":120,"column_start":18,"column_end":28},"name":"StorageMut","qualname":"::base::storage::StorageMut","value":"StorageMut<N: Scalar, R: Dim, C: Dim = U1>: Storage<N, R, C>","parent":null,"children":[{"krate":0,"index":1057},{"krate":0,"index":1058},{"krate":0,"index":1059},{"krate":0,"index":1060},{"krate":0,"index":1061},{"krate":0,"index":1062},{"krate":0,"index":1063},{"krate":0,"index":1064}],"decl_id":null,"docs":" Trait implemented by matrix data storage that can provide a mutable access to its elements.","sig":null,"attributes":[{"value":"/ Trait implemented by matrix data storage that can provide a mutable access to its elements.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":156975,"byte_end":157070,"line_start":115,"line_end":115,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":157071,"byte_end":157074,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ Note that a mutable access does not mean that the matrix owns its data. For example, a mutable","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":157075,"byte_end":157173,"line_start":117,"line_end":117,"column_start":1,"column_end":99}},{"value":"/ matrix slice can provide mutable access to its elements even if it does not own its data (it","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":157174,"byte_end":157270,"line_start":118,"line_end":118,"column_start":1,"column_end":97}},{"value":"/ contains only an internal reference to them).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":157271,"byte_end":157320,"line_start":119,"line_end":119,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1057},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":157449,"byte_end":157456,"line_start":122,"line_end":122,"column_start":8,"column_end":15},"name":"ptr_mut","qualname":"::base::storage::StorageMut::ptr_mut","value":"fn (&mut self) -> *mut N","parent":{"krate":0,"index":1053},"children":[],"decl_id":null,"docs":" The matrix mutable data pointer.\n","sig":null,"attributes":[{"value":"/ The matrix mutable data pointer.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":157405,"byte_end":157441,"line_start":121,"line_end":121,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1058},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":157605,"byte_end":157637,"line_start":126,"line_end":126,"column_start":15,"column_end":47},"name":"get_address_unchecked_linear_mut","qualname":"::base::storage::StorageMut::get_address_unchecked_linear_mut","value":"fn (&mut self, i: usize) -> *mut N","parent":{"krate":0,"index":1053},"children":[],"decl_id":null,"docs":" Gets the mutable address of the i-th matrix component without performing bound-checking.\n","sig":null,"attributes":[{"value":"/ Gets the mutable address of the i-th matrix component without performing bound-checking.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":157484,"byte_end":157576,"line_start":124,"line_end":124,"column_start":5,"column_end":97}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":157581,"byte_end":157590,"line_start":125,"line_end":125,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1059},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":157854,"byte_end":157879,"line_start":132,"line_end":132,"column_start":15,"column_end":40},"name":"get_address_unchecked_mut","qualname":"::base::storage::StorageMut::get_address_unchecked_mut","value":"fn (&mut self, irow: usize, icol: usize) -> *mut N","parent":{"krate":0,"index":1053},"children":[],"decl_id":null,"docs":" Gets the mutable address of the i-th matrix component without performing bound-checking.\n","sig":null,"attributes":[{"value":"/ Gets the mutable address of the i-th matrix component without performing bound-checking.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":157733,"byte_end":157825,"line_start":130,"line_end":130,"column_start":5,"column_end":97}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":157830,"byte_end":157839,"line_start":131,"line_end":131,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1060},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":158132,"byte_end":158156,"line_start":138,"line_end":138,"column_start":15,"column_end":39},"name":"get_unchecked_linear_mut","qualname":"::base::storage::StorageMut::get_unchecked_linear_mut","value":"fn (&mut self, i: usize) -> &mut N","parent":{"krate":0,"index":1053},"children":[],"decl_id":null,"docs":" Retrieves a mutable reference to the i-th element without bound-checking.\n","sig":null,"attributes":[{"value":"/ Retrieves a mutable reference to the i-th element without bound-checking.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":158040,"byte_end":158117,"line_start":137,"line_end":137,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1061},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":158375,"byte_end":158392,"line_start":144,"line_end":144,"column_start":15,"column_end":32},"name":"get_unchecked_mut","qualname":"::base::storage::StorageMut::get_unchecked_mut","value":"fn (&mut self, irow: usize, icol: usize) -> &mut N","parent":{"krate":0,"index":1053},"children":[],"decl_id":null,"docs":" Retrieves a mutable reference to the element at `(irow, icol)` without bound-checking.\n","sig":null,"attributes":[{"value":"/ Retrieves a mutable reference to the element at `(irow, icol)` without bound-checking.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":158256,"byte_end":158346,"line_start":142,"line_end":142,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":158351,"byte_end":158360,"line_start":143,"line_end":143,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1062},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":158610,"byte_end":158631,"line_start":150,"line_end":150,"column_start":15,"column_end":36},"name":"swap_unchecked_linear","qualname":"::base::storage::StorageMut::swap_unchecked_linear","value":"fn (&mut self, i1: usize, i2: usize) -> ()","parent":{"krate":0,"index":1053},"children":[],"decl_id":null,"docs":" Swaps two elements using their linear index without bound-checking.\n","sig":null,"attributes":[{"value":"/ Swaps two elements using their linear index without bound-checking.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":158510,"byte_end":158581,"line_start":148,"line_end":148,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":158586,"byte_end":158595,"line_start":149,"line_end":149,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1063},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":158909,"byte_end":158923,"line_start":159,"line_end":159,"column_start":15,"column_end":29},"name":"swap_unchecked","qualname":"::base::storage::StorageMut::swap_unchecked","value":"fn (&mut self, row_col1: (usize, usize), row_col2: (usize, usize)) -> ()","parent":{"krate":0,"index":1053},"children":[],"decl_id":null,"docs":" Swaps two elements without bound-checking.\n","sig":null,"attributes":[{"value":"/ Swaps two elements without bound-checking.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":158834,"byte_end":158880,"line_start":157,"line_end":157,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":158885,"byte_end":158894,"line_start":158,"line_end":158,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1064},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":159323,"byte_end":159335,"line_start":169,"line_end":169,"column_start":8,"column_end":20},"name":"as_mut_slice","qualname":"::base::storage::StorageMut::as_mut_slice","value":"fn (&mut self) -> &mut [N]","parent":{"krate":0,"index":1053},"children":[],"decl_id":null,"docs":" Retrieves the mutable data buffer as a contiguous slice.","sig":null,"attributes":[{"value":"/ Retrieves the mutable data buffer as a contiguous slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":159172,"byte_end":159232,"line_start":166,"line_end":166,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":159237,"byte_end":159240,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ Matrix components may not be contiguous, depending on its strides.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":159245,"byte_end":159315,"line_start":168,"line_end":168,"column_start":5,"column_end":75}}]},{"kind":"Trait","id":{"krate":0,"index":1065},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":159694,"byte_end":159711,"line_start":177,"line_end":177,"column_start":18,"column_end":35},"name":"ContiguousStorage","qualname":"::base::storage::ContiguousStorage","value":"ContiguousStorage<N: Scalar, R: Dim, C: Dim = U1>: Storage<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" A matrix storage that is stored contiguously in memory.","sig":null,"attributes":[{"value":"/ A matrix storage that is stored contiguously in memory.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":159363,"byte_end":159422,"line_start":172,"line_end":172,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":159423,"byte_end":159426,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ The storage requirement means that for any value of `i` in `[0, nrows * ncols[`, the value","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":159427,"byte_end":159521,"line_start":174,"line_end":174,"column_start":1,"column_end":95}},{"value":"/ `.get_unchecked_linear` returns one of the matrix component. This trait is unsafe because","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":159522,"byte_end":159615,"line_start":175,"line_end":175,"column_start":1,"column_end":94}},{"value":"/ failing to comply to this may cause Undefined Behaviors.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":159616,"byte_end":159676,"line_start":176,"line_end":176,"column_start":1,"column_end":61}}]},{"kind":"Trait","id":{"krate":0,"index":1069},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":160110,"byte_end":160130,"line_start":187,"line_end":187,"column_start":18,"column_end":38},"name":"ContiguousStorageMut","qualname":"::base::storage::ContiguousStorageMut","value":"ContiguousStorageMut<N: Scalar, R: Dim, C: Dim = U1>: ContiguousStorage<N, R, C> + StorageMut<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" A mutable matrix storage that is stored contiguously in memory.","sig":null,"attributes":[{"value":"/ A mutable matrix storage that is stored contiguously in memory.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":159771,"byte_end":159838,"line_start":182,"line_end":182,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":159839,"byte_end":159842,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ The storage requirement means that for any value of `i` in `[0, nrows * ncols[`, the value","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":159843,"byte_end":159937,"line_start":184,"line_end":184,"column_start":1,"column_end":95}},{"value":"/ `.get_unchecked_linear` returns one of the matrix component. This trait is unsafe because","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":159938,"byte_end":160031,"line_start":185,"line_end":185,"column_start":1,"column_end":94}},{"value":"/ failing to comply to this may cause Undefined Behaviors.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":160032,"byte_end":160092,"line_start":186,"line_end":186,"column_start":1,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":1085},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":160718,"byte_end":160726,"line_start":18,"line_end":18,"column_start":10,"column_end":18},"name":"MatrixNM","qualname":"::base::alias::MatrixNM","value":"Matrix<N, R, C, Owned<N, R, C>>","parent":null,"children":[],"decl_id":null,"docs":" A statically sized column-major matrix with `R` rows and `C` columns.\n","sig":null,"attributes":[{"value":"/ A statically sized column-major matrix with `R` rows and `C` columns.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":160555,"byte_end":160628,"line_start":16,"line_end":16,"column_start":1,"column_end":74}},{"value":"deprecated(note =\n             \"This matrix name contains a typo. Use MatrixMN instead.\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":160629,"byte_end":160708,"line_start":17,"line_end":17,"column_start":1,"column_end":80}}]},{"kind":"Type","id":{"krate":0,"index":1089},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":160855,"byte_end":160863,"line_start":21,"line_end":21,"column_start":10,"column_end":18},"name":"MatrixMN","qualname":"::base::alias::MatrixMN","value":"Matrix<N, R, C, Owned<N, R, C>>","parent":null,"children":[],"decl_id":null,"docs":" A statically sized column-major matrix with `R` rows and `C` columns.\n","sig":null,"attributes":[{"value":"/ A statically sized column-major matrix with `R` rows and `C` columns.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":160772,"byte_end":160845,"line_start":20,"line_end":20,"column_start":1,"column_end":74}}]},{"kind":"Type","id":{"krate":0,"index":1093},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":160995,"byte_end":161002,"line_start":24,"line_end":24,"column_start":10,"column_end":17},"name":"MatrixN","qualname":"::base::alias::MatrixN","value":"MatrixMN<N, D, D>","parent":null,"children":[],"decl_id":null,"docs":" A statically sized column-major square matrix with `D` rows and columns.\n","sig":null,"attributes":[{"value":"/ A statically sized column-major square matrix with `D` rows and columns.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":160909,"byte_end":160985,"line_start":23,"line_end":23,"column_start":1,"column_end":77}}]},{"kind":"Type","id":{"krate":0,"index":1096},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":161133,"byte_end":161140,"line_start":28,"line_end":28,"column_start":10,"column_end":17},"name":"DMatrix","qualname":"::base::alias::DMatrix","value":"MatrixN<N, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" A dynamically sized column-major matrix.\n","sig":null,"attributes":[{"value":"/ A dynamically sized column-major matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":161031,"byte_end":161075,"line_start":26,"line_end":26,"column_start":1,"column_end":45}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":161076,"byte_end":161123,"line_start":27,"line_end":27,"column_start":1,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":1098},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":161233,"byte_end":161240,"line_start":31,"line_end":31,"column_start":10,"column_end":17},"name":"Matrix1","qualname":"::base::alias::Matrix1","value":"MatrixN<N, U1>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 1x1 square matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 1x1 square matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":161168,"byte_end":161223,"line_start":30,"line_end":30,"column_start":1,"column_end":56}}]},{"kind":"Type","id":{"krate":0,"index":1100},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":161327,"byte_end":161334,"line_start":33,"line_end":33,"column_start":10,"column_end":17},"name":"Matrix2","qualname":"::base::alias::Matrix2","value":"MatrixN<N, U2>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 2x2 square matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 2x2 square matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":161262,"byte_end":161317,"line_start":32,"line_end":32,"column_start":1,"column_end":56}}]},{"kind":"Type","id":{"krate":0,"index":1102},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":161421,"byte_end":161428,"line_start":35,"line_end":35,"column_start":10,"column_end":17},"name":"Matrix3","qualname":"::base::alias::Matrix3","value":"MatrixN<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 3x3 square matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 3x3 square matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":161356,"byte_end":161411,"line_start":34,"line_end":34,"column_start":1,"column_end":56}}]},{"kind":"Type","id":{"krate":0,"index":1104},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":161515,"byte_end":161522,"line_start":37,"line_end":37,"column_start":10,"column_end":17},"name":"Matrix4","qualname":"::base::alias::Matrix4","value":"MatrixN<N, U4>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 4x4 square matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 4x4 square matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":161450,"byte_end":161505,"line_start":36,"line_end":36,"column_start":1,"column_end":56}}]},{"kind":"Type","id":{"krate":0,"index":1106},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":161609,"byte_end":161616,"line_start":39,"line_end":39,"column_start":10,"column_end":17},"name":"Matrix5","qualname":"::base::alias::Matrix5","value":"MatrixN<N, U5>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 5x5 square matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 5x5 square matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":161544,"byte_end":161599,"line_start":38,"line_end":38,"column_start":1,"column_end":56}}]},{"kind":"Type","id":{"krate":0,"index":1108},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":161703,"byte_end":161710,"line_start":41,"line_end":41,"column_start":10,"column_end":17},"name":"Matrix6","qualname":"::base::alias::Matrix6","value":"MatrixN<N, U6>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 6x6 square matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 6x6 square matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":161638,"byte_end":161693,"line_start":40,"line_end":40,"column_start":1,"column_end":56}}]},{"kind":"Type","id":{"krate":0,"index":1110},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":161791,"byte_end":161800,"line_start":44,"line_end":44,"column_start":10,"column_end":19},"name":"Matrix1x2","qualname":"::base::alias::Matrix1x2","value":"MatrixMN<N, U1, U2>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 1x2 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 1x2 matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":161733,"byte_end":161781,"line_start":43,"line_end":43,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1112},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":161885,"byte_end":161894,"line_start":46,"line_end":46,"column_start":10,"column_end":19},"name":"Matrix1x3","qualname":"::base::alias::Matrix1x3","value":"MatrixMN<N, U1, U3>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 1x3 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 1x3 matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":161827,"byte_end":161875,"line_start":45,"line_end":45,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1114},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":161979,"byte_end":161988,"line_start":48,"line_end":48,"column_start":10,"column_end":19},"name":"Matrix1x4","qualname":"::base::alias::Matrix1x4","value":"MatrixMN<N, U1, U4>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 1x4 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 1x4 matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":161921,"byte_end":161969,"line_start":47,"line_end":47,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1116},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":162073,"byte_end":162082,"line_start":50,"line_end":50,"column_start":10,"column_end":19},"name":"Matrix1x5","qualname":"::base::alias::Matrix1x5","value":"MatrixMN<N, U1, U5>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 1x5 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 1x5 matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":162015,"byte_end":162063,"line_start":49,"line_end":49,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1118},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":162167,"byte_end":162176,"line_start":52,"line_end":52,"column_start":10,"column_end":19},"name":"Matrix1x6","qualname":"::base::alias::Matrix1x6","value":"MatrixMN<N, U1, U6>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 1x6 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 1x6 matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":162109,"byte_end":162157,"line_start":51,"line_end":51,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1120},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":162262,"byte_end":162271,"line_start":55,"line_end":55,"column_start":10,"column_end":19},"name":"Matrix2x3","qualname":"::base::alias::Matrix2x3","value":"MatrixMN<N, U2, U3>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 2x3 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 2x3 matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":162204,"byte_end":162252,"line_start":54,"line_end":54,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1122},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":162356,"byte_end":162365,"line_start":57,"line_end":57,"column_start":10,"column_end":19},"name":"Matrix2x4","qualname":"::base::alias::Matrix2x4","value":"MatrixMN<N, U2, U4>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 2x4 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 2x4 matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":162298,"byte_end":162346,"line_start":56,"line_end":56,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1124},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":162450,"byte_end":162459,"line_start":59,"line_end":59,"column_start":10,"column_end":19},"name":"Matrix2x5","qualname":"::base::alias::Matrix2x5","value":"MatrixMN<N, U2, U5>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 2x5 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 2x5 matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":162392,"byte_end":162440,"line_start":58,"line_end":58,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1126},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":162544,"byte_end":162553,"line_start":61,"line_end":61,"column_start":10,"column_end":19},"name":"Matrix2x6","qualname":"::base::alias::Matrix2x6","value":"MatrixMN<N, U2, U6>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 2x6 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 2x6 matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":162486,"byte_end":162534,"line_start":60,"line_end":60,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1128},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":162639,"byte_end":162648,"line_start":64,"line_end":64,"column_start":10,"column_end":19},"name":"Matrix3x4","qualname":"::base::alias::Matrix3x4","value":"MatrixMN<N, U3, U4>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 3x4 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 3x4 matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":162581,"byte_end":162629,"line_start":63,"line_end":63,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1130},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":162733,"byte_end":162742,"line_start":66,"line_end":66,"column_start":10,"column_end":19},"name":"Matrix3x5","qualname":"::base::alias::Matrix3x5","value":"MatrixMN<N, U3, U5>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 3x5 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 3x5 matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":162675,"byte_end":162723,"line_start":65,"line_end":65,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1132},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":162827,"byte_end":162836,"line_start":68,"line_end":68,"column_start":10,"column_end":19},"name":"Matrix3x6","qualname":"::base::alias::Matrix3x6","value":"MatrixMN<N, U3, U6>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 3x6 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 3x6 matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":162769,"byte_end":162817,"line_start":67,"line_end":67,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1134},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":162922,"byte_end":162931,"line_start":71,"line_end":71,"column_start":10,"column_end":19},"name":"Matrix4x5","qualname":"::base::alias::Matrix4x5","value":"MatrixMN<N, U4, U5>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 4x5 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 4x5 matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":162864,"byte_end":162912,"line_start":70,"line_end":70,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1136},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":163016,"byte_end":163025,"line_start":73,"line_end":73,"column_start":10,"column_end":19},"name":"Matrix4x6","qualname":"::base::alias::Matrix4x6","value":"MatrixMN<N, U4, U6>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 4x6 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 4x6 matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":162958,"byte_end":163006,"line_start":72,"line_end":72,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1138},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":163111,"byte_end":163120,"line_start":76,"line_end":76,"column_start":10,"column_end":19},"name":"Matrix5x6","qualname":"::base::alias::Matrix5x6","value":"MatrixMN<N, U5, U6>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 5x6 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 5x6 matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":163053,"byte_end":163101,"line_start":75,"line_end":75,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1140},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":163206,"byte_end":163215,"line_start":79,"line_end":79,"column_start":10,"column_end":19},"name":"Matrix2x1","qualname":"::base::alias::Matrix2x1","value":"MatrixMN<N, U2, U1>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 2x1 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 2x1 matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":163148,"byte_end":163196,"line_start":78,"line_end":78,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1142},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":163300,"byte_end":163309,"line_start":81,"line_end":81,"column_start":10,"column_end":19},"name":"Matrix3x1","qualname":"::base::alias::Matrix3x1","value":"MatrixMN<N, U3, U1>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 3x1 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 3x1 matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":163242,"byte_end":163290,"line_start":80,"line_end":80,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1144},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":163394,"byte_end":163403,"line_start":83,"line_end":83,"column_start":10,"column_end":19},"name":"Matrix4x1","qualname":"::base::alias::Matrix4x1","value":"MatrixMN<N, U4, U1>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 4x1 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 4x1 matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":163336,"byte_end":163384,"line_start":82,"line_end":82,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1146},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":163488,"byte_end":163497,"line_start":85,"line_end":85,"column_start":10,"column_end":19},"name":"Matrix5x1","qualname":"::base::alias::Matrix5x1","value":"MatrixMN<N, U5, U1>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 5x1 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 5x1 matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":163430,"byte_end":163478,"line_start":84,"line_end":84,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1148},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":163582,"byte_end":163591,"line_start":87,"line_end":87,"column_start":10,"column_end":19},"name":"Matrix6x1","qualname":"::base::alias::Matrix6x1","value":"MatrixMN<N, U6, U1>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 6x1 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 6x1 matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":163524,"byte_end":163572,"line_start":86,"line_end":86,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1150},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":163677,"byte_end":163686,"line_start":90,"line_end":90,"column_start":10,"column_end":19},"name":"Matrix3x2","qualname":"::base::alias::Matrix3x2","value":"MatrixMN<N, U3, U2>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 3x2 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 3x2 matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":163619,"byte_end":163667,"line_start":89,"line_end":89,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1152},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":163771,"byte_end":163780,"line_start":92,"line_end":92,"column_start":10,"column_end":19},"name":"Matrix4x2","qualname":"::base::alias::Matrix4x2","value":"MatrixMN<N, U4, U2>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 4x2 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 4x2 matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":163713,"byte_end":163761,"line_start":91,"line_end":91,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1154},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":163865,"byte_end":163874,"line_start":94,"line_end":94,"column_start":10,"column_end":19},"name":"Matrix5x2","qualname":"::base::alias::Matrix5x2","value":"MatrixMN<N, U5, U2>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 5x2 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 5x2 matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":163807,"byte_end":163855,"line_start":93,"line_end":93,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1156},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":163959,"byte_end":163968,"line_start":96,"line_end":96,"column_start":10,"column_end":19},"name":"Matrix6x2","qualname":"::base::alias::Matrix6x2","value":"MatrixMN<N, U6, U2>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 6x2 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 6x2 matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":163901,"byte_end":163949,"line_start":95,"line_end":95,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1158},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":164054,"byte_end":164063,"line_start":99,"line_end":99,"column_start":10,"column_end":19},"name":"Matrix4x3","qualname":"::base::alias::Matrix4x3","value":"MatrixMN<N, U4, U3>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 4x3 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 4x3 matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":163996,"byte_end":164044,"line_start":98,"line_end":98,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1160},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":164148,"byte_end":164157,"line_start":101,"line_end":101,"column_start":10,"column_end":19},"name":"Matrix5x3","qualname":"::base::alias::Matrix5x3","value":"MatrixMN<N, U5, U3>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 5x3 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 5x3 matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":164090,"byte_end":164138,"line_start":100,"line_end":100,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1162},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":164242,"byte_end":164251,"line_start":103,"line_end":103,"column_start":10,"column_end":19},"name":"Matrix6x3","qualname":"::base::alias::Matrix6x3","value":"MatrixMN<N, U6, U3>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 6x3 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 6x3 matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":164184,"byte_end":164232,"line_start":102,"line_end":102,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1164},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":164337,"byte_end":164346,"line_start":106,"line_end":106,"column_start":10,"column_end":19},"name":"Matrix5x4","qualname":"::base::alias::Matrix5x4","value":"MatrixMN<N, U5, U4>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 5x4 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 5x4 matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":164279,"byte_end":164327,"line_start":105,"line_end":105,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1166},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":164431,"byte_end":164440,"line_start":108,"line_end":108,"column_start":10,"column_end":19},"name":"Matrix6x4","qualname":"::base::alias::Matrix6x4","value":"MatrixMN<N, U6, U4>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 6x4 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 6x4 matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":164373,"byte_end":164421,"line_start":107,"line_end":107,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1168},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":164526,"byte_end":164535,"line_start":111,"line_end":111,"column_start":10,"column_end":19},"name":"Matrix6x5","qualname":"::base::alias::Matrix6x5","value":"MatrixMN<N, U6, U5>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 6x5 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 6x5 matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":164468,"byte_end":164516,"line_start":110,"line_end":110,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1170},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":164697,"byte_end":164704,"line_start":122,"line_end":122,"column_start":10,"column_end":17},"name":"DVector","qualname":"::base::alias::DVector","value":"Matrix<N, Dynamic, U1, VecStorage<N, Dynamic, U1>>","parent":null,"children":[],"decl_id":null,"docs":" A dynamically sized column vector.\n","sig":null,"attributes":[{"value":"/ A dynamically sized column vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":164601,"byte_end":164639,"line_start":120,"line_end":120,"column_start":1,"column_end":39}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":164640,"byte_end":164687,"line_start":121,"line_end":121,"column_start":1,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":1172},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":164824,"byte_end":164831,"line_start":125,"line_end":125,"column_start":10,"column_end":17},"name":"VectorN","qualname":"::base::alias::VectorN","value":"MatrixMN<N, D, U1>","parent":null,"children":[],"decl_id":null,"docs":" A statically sized D-dimensional column vector.\n","sig":null,"attributes":[{"value":"/ A statically sized D-dimensional column vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":164763,"byte_end":164814,"line_start":124,"line_end":124,"column_start":1,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":1175},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":164922,"byte_end":164929,"line_start":128,"line_end":128,"column_start":10,"column_end":17},"name":"Vector1","qualname":"::base::alias::Vector1","value":"VectorN<N, U1>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, 1-dimensional column vector.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, 1-dimensional column vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":164861,"byte_end":164912,"line_start":127,"line_end":127,"column_start":1,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":1177},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":165012,"byte_end":165019,"line_start":130,"line_end":130,"column_start":10,"column_end":17},"name":"Vector2","qualname":"::base::alias::Vector2","value":"VectorN<N, U2>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, 2-dimensional column vector.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, 2-dimensional column vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":164951,"byte_end":165002,"line_start":129,"line_end":129,"column_start":1,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":1179},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":165102,"byte_end":165109,"line_start":132,"line_end":132,"column_start":10,"column_end":17},"name":"Vector3","qualname":"::base::alias::Vector3","value":"VectorN<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, 3-dimensional column vector.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, 3-dimensional column vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":165041,"byte_end":165092,"line_start":131,"line_end":131,"column_start":1,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":1181},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":165192,"byte_end":165199,"line_start":134,"line_end":134,"column_start":10,"column_end":17},"name":"Vector4","qualname":"::base::alias::Vector4","value":"VectorN<N, U4>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, 4-dimensional column vector.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, 4-dimensional column vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":165131,"byte_end":165182,"line_start":133,"line_end":133,"column_start":1,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":1183},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":165282,"byte_end":165289,"line_start":136,"line_end":136,"column_start":10,"column_end":17},"name":"Vector5","qualname":"::base::alias::Vector5","value":"VectorN<N, U5>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, 5-dimensional column vector.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, 5-dimensional column vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":165221,"byte_end":165272,"line_start":135,"line_end":135,"column_start":1,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":1185},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":165372,"byte_end":165379,"line_start":138,"line_end":138,"column_start":10,"column_end":17},"name":"Vector6","qualname":"::base::alias::Vector6","value":"VectorN<N, U6>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, 6-dimensional column vector.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, 6-dimensional column vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":165311,"byte_end":165362,"line_start":137,"line_end":137,"column_start":1,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":1187},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":165530,"byte_end":165540,"line_start":149,"line_end":149,"column_start":10,"column_end":20},"name":"RowDVector","qualname":"::base::alias::RowDVector","value":"Matrix<N, U1, Dynamic, VecStorage<N, U1, Dynamic>>","parent":null,"children":[],"decl_id":null,"docs":" A dynamically sized row vector.\n","sig":null,"attributes":[{"value":"/ A dynamically sized row vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":165437,"byte_end":165472,"line_start":147,"line_end":147,"column_start":1,"column_end":36}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":165473,"byte_end":165520,"line_start":148,"line_end":148,"column_start":1,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":1189},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":165657,"byte_end":165667,"line_start":152,"line_end":152,"column_start":10,"column_end":20},"name":"RowVectorN","qualname":"::base::alias::RowVectorN","value":"MatrixMN<N, U1, D>","parent":null,"children":[],"decl_id":null,"docs":" A statically sized D-dimensional row vector.\n","sig":null,"attributes":[{"value":"/ A statically sized D-dimensional row vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":165599,"byte_end":165647,"line_start":151,"line_end":151,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1192},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":165755,"byte_end":165765,"line_start":155,"line_end":155,"column_start":10,"column_end":20},"name":"RowVector1","qualname":"::base::alias::RowVector1","value":"RowVectorN<N, U1>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, 1-dimensional row vector.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, 1-dimensional row vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":165697,"byte_end":165745,"line_start":154,"line_end":154,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1194},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":165848,"byte_end":165858,"line_start":157,"line_end":157,"column_start":10,"column_end":20},"name":"RowVector2","qualname":"::base::alias::RowVector2","value":"RowVectorN<N, U2>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, 2-dimensional row vector.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, 2-dimensional row vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":165790,"byte_end":165838,"line_start":156,"line_end":156,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1196},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":165941,"byte_end":165951,"line_start":159,"line_end":159,"column_start":10,"column_end":20},"name":"RowVector3","qualname":"::base::alias::RowVector3","value":"RowVectorN<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, 3-dimensional row vector.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, 3-dimensional row vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":165883,"byte_end":165931,"line_start":158,"line_end":158,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1198},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":166034,"byte_end":166044,"line_start":161,"line_end":161,"column_start":10,"column_end":20},"name":"RowVector4","qualname":"::base::alias::RowVector4","value":"RowVectorN<N, U4>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, 4-dimensional row vector.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, 4-dimensional row vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":165976,"byte_end":166024,"line_start":160,"line_end":160,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1200},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":166127,"byte_end":166137,"line_start":163,"line_end":163,"column_start":10,"column_end":20},"name":"RowVector5","qualname":"::base::alias::RowVector5","value":"RowVectorN<N, U5>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, 5-dimensional row vector.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, 5-dimensional row vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":166069,"byte_end":166117,"line_start":162,"line_end":162,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1202},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":166220,"byte_end":166230,"line_start":165,"line_end":165,"column_start":10,"column_end":20},"name":"RowVector6","qualname":"::base::alias::RowVector6","value":"RowVectorN<N, U6>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, 6-dimensional row vector.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, 6-dimensional row vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias.rs","byte_start":166162,"byte_end":166210,"line_start":164,"line_end":164,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1217},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":166525,"byte_end":166538,"line_start":13,"line_end":13,"column_start":10,"column_end":23},"name":"MatrixSliceMN","qualname":"::base::alias_slice::MatrixSliceMN","value":"Matrix<N, R, C, SliceStorage<'a, N, R, C, RStride, CStride>>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with `R` rows and `C` columns.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with `R` rows and `C` columns.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":166453,"byte_end":166515,"line_start":12,"line_end":12,"column_start":1,"column_end":63}}]},{"kind":"Type","id":{"krate":0,"index":1224},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":166716,"byte_end":166728,"line_start":17,"line_end":17,"column_start":10,"column_end":22},"name":"MatrixSliceN","qualname":"::base::alias_slice::MatrixSliceN","value":"MatrixSliceMN<'a, N, D, D, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with `D` rows and columns.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with `D` rows and columns.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":166648,"byte_end":166706,"line_start":16,"line_end":16,"column_start":1,"column_end":59}}]},{"kind":"Type","id":{"krate":0,"index":1230},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":166897,"byte_end":166909,"line_start":21,"line_end":21,"column_start":10,"column_end":22},"name":"DMatrixSlice","qualname":"::base::alias_slice::DMatrixSlice","value":"MatrixSliceN<'a, N, Dynamic, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice dynamic numbers of rows and columns.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice dynamic numbers of rows and columns.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":166819,"byte_end":166887,"line_start":20,"line_end":20,"column_start":1,"column_end":69}}]},{"kind":"Type","id":{"krate":0,"index":1235},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":167051,"byte_end":167063,"line_start":25,"line_end":25,"column_start":10,"column_end":22},"name":"MatrixSlice1","qualname":"::base::alias_slice::MatrixSlice1","value":"MatrixSliceN<'a, N, U1, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 1x1 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 1x1 matrix slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":167005,"byte_end":167041,"line_start":24,"line_end":24,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1240},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":167194,"byte_end":167206,"line_start":28,"line_end":28,"column_start":10,"column_end":22},"name":"MatrixSlice2","qualname":"::base::alias_slice::MatrixSlice2","value":"MatrixSliceN<'a, N, U2, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 2x2 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 2x2 matrix slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":167148,"byte_end":167184,"line_start":27,"line_end":27,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1245},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":167337,"byte_end":167349,"line_start":31,"line_end":31,"column_start":10,"column_end":22},"name":"MatrixSlice3","qualname":"::base::alias_slice::MatrixSlice3","value":"MatrixSliceN<'a, N, U3, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 3x3 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 3x3 matrix slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":167291,"byte_end":167327,"line_start":30,"line_end":30,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1250},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":167480,"byte_end":167492,"line_start":34,"line_end":34,"column_start":10,"column_end":22},"name":"MatrixSlice4","qualname":"::base::alias_slice::MatrixSlice4","value":"MatrixSliceN<'a, N, U4, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 4x4 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 4x4 matrix slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":167434,"byte_end":167470,"line_start":33,"line_end":33,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1255},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":167623,"byte_end":167635,"line_start":37,"line_end":37,"column_start":10,"column_end":22},"name":"MatrixSlice5","qualname":"::base::alias_slice::MatrixSlice5","value":"MatrixSliceN<'a, N, U5, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 5x5 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 5x5 matrix slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":167577,"byte_end":167613,"line_start":36,"line_end":36,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1260},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":167766,"byte_end":167778,"line_start":40,"line_end":40,"column_start":10,"column_end":22},"name":"MatrixSlice6","qualname":"::base::alias_slice::MatrixSlice6","value":"MatrixSliceN<'a, N, U6, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 6x6 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 6x6 matrix slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":167720,"byte_end":167756,"line_start":39,"line_end":39,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1265},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":167910,"byte_end":167924,"line_start":44,"line_end":44,"column_start":10,"column_end":24},"name":"MatrixSlice1x2","qualname":"::base::alias_slice::MatrixSlice1x2","value":"MatrixSliceMN<'a, N, U1, U2, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 1x2 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 1x2 matrix slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":167864,"byte_end":167900,"line_start":43,"line_end":43,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1270},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":168060,"byte_end":168074,"line_start":47,"line_end":47,"column_start":10,"column_end":24},"name":"MatrixSlice1x3","qualname":"::base::alias_slice::MatrixSlice1x3","value":"MatrixSliceMN<'a, N, U1, U3, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 1x3 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 1x3 matrix slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":168014,"byte_end":168050,"line_start":46,"line_end":46,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1275},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":168210,"byte_end":168224,"line_start":50,"line_end":50,"column_start":10,"column_end":24},"name":"MatrixSlice1x4","qualname":"::base::alias_slice::MatrixSlice1x4","value":"MatrixSliceMN<'a, N, U1, U4, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 1x4 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 1x4 matrix slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":168164,"byte_end":168200,"line_start":49,"line_end":49,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1280},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":168360,"byte_end":168374,"line_start":53,"line_end":53,"column_start":10,"column_end":24},"name":"MatrixSlice1x5","qualname":"::base::alias_slice::MatrixSlice1x5","value":"MatrixSliceMN<'a, N, U1, U5, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 1x5 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 1x5 matrix slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":168314,"byte_end":168350,"line_start":52,"line_end":52,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1285},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":168510,"byte_end":168524,"line_start":56,"line_end":56,"column_start":10,"column_end":24},"name":"MatrixSlice1x6","qualname":"::base::alias_slice::MatrixSlice1x6","value":"MatrixSliceMN<'a, N, U1, U6, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 1x6 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 1x6 matrix slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":168464,"byte_end":168500,"line_start":55,"line_end":55,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1290},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":168661,"byte_end":168675,"line_start":60,"line_end":60,"column_start":10,"column_end":24},"name":"MatrixSlice2x1","qualname":"::base::alias_slice::MatrixSlice2x1","value":"MatrixSliceMN<'a, N, U2, U1, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 2x1 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 2x1 matrix slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":168615,"byte_end":168651,"line_start":59,"line_end":59,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1295},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":168811,"byte_end":168825,"line_start":63,"line_end":63,"column_start":10,"column_end":24},"name":"MatrixSlice2x3","qualname":"::base::alias_slice::MatrixSlice2x3","value":"MatrixSliceMN<'a, N, U2, U3, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 2x3 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 2x3 matrix slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":168765,"byte_end":168801,"line_start":62,"line_end":62,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1300},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":168961,"byte_end":168975,"line_start":66,"line_end":66,"column_start":10,"column_end":24},"name":"MatrixSlice2x4","qualname":"::base::alias_slice::MatrixSlice2x4","value":"MatrixSliceMN<'a, N, U2, U4, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 2x4 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 2x4 matrix slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":168915,"byte_end":168951,"line_start":65,"line_end":65,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1305},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":169111,"byte_end":169125,"line_start":69,"line_end":69,"column_start":10,"column_end":24},"name":"MatrixSlice2x5","qualname":"::base::alias_slice::MatrixSlice2x5","value":"MatrixSliceMN<'a, N, U2, U5, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 2x5 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 2x5 matrix slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":169065,"byte_end":169101,"line_start":68,"line_end":68,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1310},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":169261,"byte_end":169275,"line_start":72,"line_end":72,"column_start":10,"column_end":24},"name":"MatrixSlice2x6","qualname":"::base::alias_slice::MatrixSlice2x6","value":"MatrixSliceMN<'a, N, U2, U6, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 2x6 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 2x6 matrix slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":169215,"byte_end":169251,"line_start":71,"line_end":71,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1315},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":169412,"byte_end":169426,"line_start":76,"line_end":76,"column_start":10,"column_end":24},"name":"MatrixSlice3x1","qualname":"::base::alias_slice::MatrixSlice3x1","value":"MatrixSliceMN<'a, N, U3, U1, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 3x1 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 3x1 matrix slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":169366,"byte_end":169402,"line_start":75,"line_end":75,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1320},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":169562,"byte_end":169576,"line_start":79,"line_end":79,"column_start":10,"column_end":24},"name":"MatrixSlice3x2","qualname":"::base::alias_slice::MatrixSlice3x2","value":"MatrixSliceMN<'a, N, U3, U2, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 3x2 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 3x2 matrix slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":169516,"byte_end":169552,"line_start":78,"line_end":78,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1325},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":169712,"byte_end":169726,"line_start":82,"line_end":82,"column_start":10,"column_end":24},"name":"MatrixSlice3x4","qualname":"::base::alias_slice::MatrixSlice3x4","value":"MatrixSliceMN<'a, N, U3, U4, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 3x4 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 3x4 matrix slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":169666,"byte_end":169702,"line_start":81,"line_end":81,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1330},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":169862,"byte_end":169876,"line_start":85,"line_end":85,"column_start":10,"column_end":24},"name":"MatrixSlice3x5","qualname":"::base::alias_slice::MatrixSlice3x5","value":"MatrixSliceMN<'a, N, U3, U5, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 3x5 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 3x5 matrix slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":169816,"byte_end":169852,"line_start":84,"line_end":84,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1335},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":170012,"byte_end":170026,"line_start":88,"line_end":88,"column_start":10,"column_end":24},"name":"MatrixSlice3x6","qualname":"::base::alias_slice::MatrixSlice3x6","value":"MatrixSliceMN<'a, N, U3, U6, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 3x6 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 3x6 matrix slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":169966,"byte_end":170002,"line_start":87,"line_end":87,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1340},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":170163,"byte_end":170177,"line_start":92,"line_end":92,"column_start":10,"column_end":24},"name":"MatrixSlice4x1","qualname":"::base::alias_slice::MatrixSlice4x1","value":"MatrixSliceMN<'a, N, U4, U1, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 4x1 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 4x1 matrix slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":170117,"byte_end":170153,"line_start":91,"line_end":91,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1345},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":170313,"byte_end":170327,"line_start":95,"line_end":95,"column_start":10,"column_end":24},"name":"MatrixSlice4x2","qualname":"::base::alias_slice::MatrixSlice4x2","value":"MatrixSliceMN<'a, N, U4, U2, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 4x2 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 4x2 matrix slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":170267,"byte_end":170303,"line_start":94,"line_end":94,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1350},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":170463,"byte_end":170477,"line_start":98,"line_end":98,"column_start":10,"column_end":24},"name":"MatrixSlice4x3","qualname":"::base::alias_slice::MatrixSlice4x3","value":"MatrixSliceMN<'a, N, U4, U3, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 4x3 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 4x3 matrix slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":170417,"byte_end":170453,"line_start":97,"line_end":97,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1355},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":170613,"byte_end":170627,"line_start":101,"line_end":101,"column_start":10,"column_end":24},"name":"MatrixSlice4x5","qualname":"::base::alias_slice::MatrixSlice4x5","value":"MatrixSliceMN<'a, N, U4, U5, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 4x5 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 4x5 matrix slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":170567,"byte_end":170603,"line_start":100,"line_end":100,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1360},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":170763,"byte_end":170777,"line_start":104,"line_end":104,"column_start":10,"column_end":24},"name":"MatrixSlice4x6","qualname":"::base::alias_slice::MatrixSlice4x6","value":"MatrixSliceMN<'a, N, U4, U6, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 4x6 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 4x6 matrix slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":170717,"byte_end":170753,"line_start":103,"line_end":103,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1365},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":170914,"byte_end":170928,"line_start":108,"line_end":108,"column_start":10,"column_end":24},"name":"MatrixSlice5x1","qualname":"::base::alias_slice::MatrixSlice5x1","value":"MatrixSliceMN<'a, N, U5, U1, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 5x1 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 5x1 matrix slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":170868,"byte_end":170904,"line_start":107,"line_end":107,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1370},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":171064,"byte_end":171078,"line_start":111,"line_end":111,"column_start":10,"column_end":24},"name":"MatrixSlice5x2","qualname":"::base::alias_slice::MatrixSlice5x2","value":"MatrixSliceMN<'a, N, U5, U2, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 5x2 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 5x2 matrix slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":171018,"byte_end":171054,"line_start":110,"line_end":110,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1375},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":171214,"byte_end":171228,"line_start":114,"line_end":114,"column_start":10,"column_end":24},"name":"MatrixSlice5x3","qualname":"::base::alias_slice::MatrixSlice5x3","value":"MatrixSliceMN<'a, N, U5, U3, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 5x3 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 5x3 matrix slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":171168,"byte_end":171204,"line_start":113,"line_end":113,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1380},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":171364,"byte_end":171378,"line_start":117,"line_end":117,"column_start":10,"column_end":24},"name":"MatrixSlice5x4","qualname":"::base::alias_slice::MatrixSlice5x4","value":"MatrixSliceMN<'a, N, U5, U4, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 5x4 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 5x4 matrix slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":171318,"byte_end":171354,"line_start":116,"line_end":116,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1385},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":171514,"byte_end":171528,"line_start":120,"line_end":120,"column_start":10,"column_end":24},"name":"MatrixSlice5x6","qualname":"::base::alias_slice::MatrixSlice5x6","value":"MatrixSliceMN<'a, N, U5, U6, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 5x6 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 5x6 matrix slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":171468,"byte_end":171504,"line_start":119,"line_end":119,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1390},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":171665,"byte_end":171679,"line_start":124,"line_end":124,"column_start":10,"column_end":24},"name":"MatrixSlice6x1","qualname":"::base::alias_slice::MatrixSlice6x1","value":"MatrixSliceMN<'a, N, U6, U1, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 6x1 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 6x1 matrix slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":171619,"byte_end":171655,"line_start":123,"line_end":123,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1395},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":171815,"byte_end":171829,"line_start":127,"line_end":127,"column_start":10,"column_end":24},"name":"MatrixSlice6x2","qualname":"::base::alias_slice::MatrixSlice6x2","value":"MatrixSliceMN<'a, N, U6, U2, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 6x2 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 6x2 matrix slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":171769,"byte_end":171805,"line_start":126,"line_end":126,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1400},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":171965,"byte_end":171979,"line_start":130,"line_end":130,"column_start":10,"column_end":24},"name":"MatrixSlice6x3","qualname":"::base::alias_slice::MatrixSlice6x3","value":"MatrixSliceMN<'a, N, U6, U3, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 6x3 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 6x3 matrix slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":171919,"byte_end":171955,"line_start":129,"line_end":129,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1405},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":172115,"byte_end":172129,"line_start":133,"line_end":133,"column_start":10,"column_end":24},"name":"MatrixSlice6x4","qualname":"::base::alias_slice::MatrixSlice6x4","value":"MatrixSliceMN<'a, N, U6, U4, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 6x4 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 6x4 matrix slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":172069,"byte_end":172105,"line_start":132,"line_end":132,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1410},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":172265,"byte_end":172279,"line_start":136,"line_end":136,"column_start":10,"column_end":24},"name":"MatrixSlice6x5","qualname":"::base::alias_slice::MatrixSlice6x5","value":"MatrixSliceMN<'a, N, U6, U6, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 6x5 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 6x5 matrix slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":172219,"byte_end":172255,"line_start":135,"line_end":135,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1415},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":172465,"byte_end":172479,"line_start":140,"line_end":140,"column_start":10,"column_end":24},"name":"MatrixSlice1xX","qualname":"::base::alias_slice::MatrixSlice1xX","value":"MatrixSliceMN<'a, N, U1, Dynamic, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with 1 row and a number of columns chosen at runtime.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with 1 row and a number of columns chosen at runtime.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":172370,"byte_end":172455,"line_start":139,"line_end":139,"column_start":1,"column_end":86}}]},{"kind":"Type","id":{"krate":0,"index":1420},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":172670,"byte_end":172684,"line_start":143,"line_end":143,"column_start":10,"column_end":24},"name":"MatrixSlice2xX","qualname":"::base::alias_slice::MatrixSlice2xX","value":"MatrixSliceMN<'a, N, U2, Dynamic, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with 2 rows and a number of columns chosen at runtime.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with 2 rows and a number of columns chosen at runtime.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":172574,"byte_end":172660,"line_start":142,"line_end":142,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":1425},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":172875,"byte_end":172889,"line_start":146,"line_end":146,"column_start":10,"column_end":24},"name":"MatrixSlice3xX","qualname":"::base::alias_slice::MatrixSlice3xX","value":"MatrixSliceMN<'a, N, U3, Dynamic, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with 3 rows and a number of columns chosen at runtime.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with 3 rows and a number of columns chosen at runtime.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":172779,"byte_end":172865,"line_start":145,"line_end":145,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":1430},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":173080,"byte_end":173094,"line_start":149,"line_end":149,"column_start":10,"column_end":24},"name":"MatrixSlice4xX","qualname":"::base::alias_slice::MatrixSlice4xX","value":"MatrixSliceMN<'a, N, U4, Dynamic, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with 4 rows and a number of columns chosen at runtime.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with 4 rows and a number of columns chosen at runtime.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":172984,"byte_end":173070,"line_start":148,"line_end":148,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":1435},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":173285,"byte_end":173299,"line_start":152,"line_end":152,"column_start":10,"column_end":24},"name":"MatrixSlice5xX","qualname":"::base::alias_slice::MatrixSlice5xX","value":"MatrixSliceMN<'a, N, U5, Dynamic, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with 5 rows and a number of columns chosen at runtime.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with 5 rows and a number of columns chosen at runtime.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":173189,"byte_end":173275,"line_start":151,"line_end":151,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":1440},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":173490,"byte_end":173504,"line_start":155,"line_end":155,"column_start":10,"column_end":24},"name":"MatrixSlice6xX","qualname":"::base::alias_slice::MatrixSlice6xX","value":"MatrixSliceMN<'a, N, U6, Dynamic, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with 6 rows and a number of columns chosen at runtime.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with 6 rows and a number of columns chosen at runtime.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":173394,"byte_end":173480,"line_start":154,"line_end":154,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":1445},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":173695,"byte_end":173709,"line_start":159,"line_end":159,"column_start":10,"column_end":24},"name":"MatrixSliceXx1","qualname":"::base::alias_slice::MatrixSliceXx1","value":"MatrixSliceMN<'a, N, Dynamic, U1, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with a number of rows chosen at runtime and 1 column.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with a number of rows chosen at runtime and 1 column.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":173600,"byte_end":173685,"line_start":158,"line_end":158,"column_start":1,"column_end":86}}]},{"kind":"Type","id":{"krate":0,"index":1450},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":173905,"byte_end":173919,"line_start":162,"line_end":162,"column_start":10,"column_end":24},"name":"MatrixSliceXx2","qualname":"::base::alias_slice::MatrixSliceXx2","value":"MatrixSliceMN<'a, N, Dynamic, U2, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with a number of rows chosen at runtime and 2 columns.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with a number of rows chosen at runtime and 2 columns.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":173809,"byte_end":173895,"line_start":161,"line_end":161,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":1455},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":174115,"byte_end":174129,"line_start":165,"line_end":165,"column_start":10,"column_end":24},"name":"MatrixSliceXx3","qualname":"::base::alias_slice::MatrixSliceXx3","value":"MatrixSliceMN<'a, N, Dynamic, U3, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with a number of rows chosen at runtime and 3 columns.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with a number of rows chosen at runtime and 3 columns.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":174019,"byte_end":174105,"line_start":164,"line_end":164,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":1460},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":174325,"byte_end":174339,"line_start":168,"line_end":168,"column_start":10,"column_end":24},"name":"MatrixSliceXx4","qualname":"::base::alias_slice::MatrixSliceXx4","value":"MatrixSliceMN<'a, N, Dynamic, U4, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with a number of rows chosen at runtime and 4 columns.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with a number of rows chosen at runtime and 4 columns.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":174229,"byte_end":174315,"line_start":167,"line_end":167,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":1465},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":174535,"byte_end":174549,"line_start":171,"line_end":171,"column_start":10,"column_end":24},"name":"MatrixSliceXx5","qualname":"::base::alias_slice::MatrixSliceXx5","value":"MatrixSliceMN<'a, N, Dynamic, U5, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with a number of rows chosen at runtime and 5 columns.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with a number of rows chosen at runtime and 5 columns.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":174439,"byte_end":174525,"line_start":170,"line_end":170,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":1470},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":174745,"byte_end":174759,"line_start":174,"line_end":174,"column_start":10,"column_end":24},"name":"MatrixSliceXx6","qualname":"::base::alias_slice::MatrixSliceXx6","value":"MatrixSliceMN<'a, N, Dynamic, U6, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with a number of rows chosen at runtime and 6 columns.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with a number of rows chosen at runtime and 6 columns.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":174649,"byte_end":174735,"line_start":173,"line_end":173,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":1475},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":174910,"byte_end":174922,"line_start":178,"line_end":178,"column_start":10,"column_end":22},"name":"VectorSliceN","qualname":"::base::alias_slice::VectorSliceN","value":"Matrix<N, D, U1, SliceStorage<'a, N, D, U1, RStride, CStride>>","parent":null,"children":[],"decl_id":null,"docs":" A column vector slice with `D` rows.\n","sig":null,"attributes":[{"value":"/ A column vector slice with `D` rows.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":174860,"byte_end":174900,"line_start":177,"line_end":177,"column_start":1,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":1481},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":175103,"byte_end":175115,"line_start":182,"line_end":182,"column_start":10,"column_end":22},"name":"DVectorSlice","qualname":"::base::alias_slice::DVectorSlice","value":"VectorSliceN<'a, N, Dynamic, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column vector slice dynamic numbers of rows and columns.\n","sig":null,"attributes":[{"value":"/ A column vector slice dynamic numbers of rows and columns.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":175031,"byte_end":175093,"line_start":181,"line_end":181,"column_start":1,"column_end":63}}]},{"kind":"Type","id":{"krate":0,"index":1486},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":175250,"byte_end":175262,"line_start":186,"line_end":186,"column_start":10,"column_end":22},"name":"VectorSlice1","qualname":"::base::alias_slice::VectorSlice1","value":"VectorSliceN<'a, N, U1, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A 1D column vector slice.\n","sig":null,"attributes":[{"value":"/ A 1D column vector slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":175211,"byte_end":175240,"line_start":185,"line_end":185,"column_start":1,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":1491},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":175386,"byte_end":175398,"line_start":189,"line_end":189,"column_start":10,"column_end":22},"name":"VectorSlice2","qualname":"::base::alias_slice::VectorSlice2","value":"VectorSliceN<'a, N, U2, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A 2D column vector slice.\n","sig":null,"attributes":[{"value":"/ A 2D column vector slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":175347,"byte_end":175376,"line_start":188,"line_end":188,"column_start":1,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":1496},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":175522,"byte_end":175534,"line_start":192,"line_end":192,"column_start":10,"column_end":22},"name":"VectorSlice3","qualname":"::base::alias_slice::VectorSlice3","value":"VectorSliceN<'a, N, U3, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A 3D column vector slice.\n","sig":null,"attributes":[{"value":"/ A 3D column vector slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":175483,"byte_end":175512,"line_start":191,"line_end":191,"column_start":1,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":1501},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":175658,"byte_end":175670,"line_start":195,"line_end":195,"column_start":10,"column_end":22},"name":"VectorSlice4","qualname":"::base::alias_slice::VectorSlice4","value":"VectorSliceN<'a, N, U4, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A 4D column vector slice.\n","sig":null,"attributes":[{"value":"/ A 4D column vector slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":175619,"byte_end":175648,"line_start":194,"line_end":194,"column_start":1,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":1506},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":175794,"byte_end":175806,"line_start":198,"line_end":198,"column_start":10,"column_end":22},"name":"VectorSlice5","qualname":"::base::alias_slice::VectorSlice5","value":"VectorSliceN<'a, N, U5, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A 5D column vector slice.\n","sig":null,"attributes":[{"value":"/ A 5D column vector slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":175755,"byte_end":175784,"line_start":197,"line_end":197,"column_start":1,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":1511},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":175930,"byte_end":175942,"line_start":201,"line_end":201,"column_start":10,"column_end":22},"name":"VectorSlice6","qualname":"::base::alias_slice::VectorSlice6","value":"VectorSliceN<'a, N, U6, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A 6D column vector slice.\n","sig":null,"attributes":[{"value":"/ A 6D column vector slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":175891,"byte_end":175920,"line_start":200,"line_end":200,"column_start":1,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":1516},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":176166,"byte_end":176182,"line_start":212,"line_end":212,"column_start":10,"column_end":26},"name":"MatrixSliceMutMN","qualname":"::base::alias_slice::MatrixSliceMutMN","value":"Matrix<N, R, C, SliceStorageMut<'a, N, R, C, RStride, CStride>>","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice with `R` rows and `C` columns.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice with `R` rows and `C` columns.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":176086,"byte_end":176156,"line_start":211,"line_end":211,"column_start":1,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":1523},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":176371,"byte_end":176386,"line_start":216,"line_end":216,"column_start":10,"column_end":25},"name":"MatrixSliceMutN","qualname":"::base::alias_slice::MatrixSliceMutN","value":"MatrixSliceMutMN<'a, N, D, D, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice with `D` rows and columns.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice with `D` rows and columns.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":176295,"byte_end":176361,"line_start":215,"line_end":215,"column_start":1,"column_end":67}}]},{"kind":"Type","id":{"krate":0,"index":1529},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":176566,"byte_end":176581,"line_start":220,"line_end":220,"column_start":10,"column_end":25},"name":"DMatrixSliceMut","qualname":"::base::alias_slice::DMatrixSliceMut","value":"MatrixSliceMutN<'a, N, Dynamic, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice dynamic numbers of rows and columns.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice dynamic numbers of rows and columns.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":176480,"byte_end":176556,"line_start":219,"line_end":219,"column_start":1,"column_end":77}}]},{"kind":"Type","id":{"krate":0,"index":1534},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":176734,"byte_end":176749,"line_start":224,"line_end":224,"column_start":10,"column_end":25},"name":"MatrixSliceMut1","qualname":"::base::alias_slice::MatrixSliceMut1","value":"MatrixSliceMutN<'a, N, U1, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 1x1 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 1x1 mutable matrix slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":176680,"byte_end":176724,"line_start":223,"line_end":223,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1539},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":176891,"byte_end":176906,"line_start":227,"line_end":227,"column_start":10,"column_end":25},"name":"MatrixSliceMut2","qualname":"::base::alias_slice::MatrixSliceMut2","value":"MatrixSliceMutN<'a, N, U2, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 2x2 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 2x2 mutable matrix slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":176837,"byte_end":176881,"line_start":226,"line_end":226,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1544},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":177048,"byte_end":177063,"line_start":230,"line_end":230,"column_start":10,"column_end":25},"name":"MatrixSliceMut3","qualname":"::base::alias_slice::MatrixSliceMut3","value":"MatrixSliceMutN<'a, N, U3, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 3x3 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 3x3 mutable matrix slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":176994,"byte_end":177038,"line_start":229,"line_end":229,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1549},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":177205,"byte_end":177220,"line_start":233,"line_end":233,"column_start":10,"column_end":25},"name":"MatrixSliceMut4","qualname":"::base::alias_slice::MatrixSliceMut4","value":"MatrixSliceMutN<'a, N, U4, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 4x4 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 4x4 mutable matrix slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":177151,"byte_end":177195,"line_start":232,"line_end":232,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1554},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":177362,"byte_end":177377,"line_start":236,"line_end":236,"column_start":10,"column_end":25},"name":"MatrixSliceMut5","qualname":"::base::alias_slice::MatrixSliceMut5","value":"MatrixSliceMutN<'a, N, U5, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 5x5 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 5x5 mutable matrix slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":177308,"byte_end":177352,"line_start":235,"line_end":235,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1559},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":177519,"byte_end":177534,"line_start":239,"line_end":239,"column_start":10,"column_end":25},"name":"MatrixSliceMut6","qualname":"::base::alias_slice::MatrixSliceMut6","value":"MatrixSliceMutN<'a, N, U6, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 6x6 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 6x6 mutable matrix slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":177465,"byte_end":177509,"line_start":238,"line_end":238,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1564},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":177677,"byte_end":177694,"line_start":243,"line_end":243,"column_start":10,"column_end":27},"name":"MatrixSliceMut1x2","qualname":"::base::alias_slice::MatrixSliceMut1x2","value":"MatrixSliceMutMN<'a, N, U1, U2, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 1x2 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 1x2 mutable matrix slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":177623,"byte_end":177667,"line_start":242,"line_end":242,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1569},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":177841,"byte_end":177858,"line_start":246,"line_end":246,"column_start":10,"column_end":27},"name":"MatrixSliceMut1x3","qualname":"::base::alias_slice::MatrixSliceMut1x3","value":"MatrixSliceMutMN<'a, N, U1, U3, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 1x3 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 1x3 mutable matrix slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":177787,"byte_end":177831,"line_start":245,"line_end":245,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1574},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":178005,"byte_end":178022,"line_start":249,"line_end":249,"column_start":10,"column_end":27},"name":"MatrixSliceMut1x4","qualname":"::base::alias_slice::MatrixSliceMut1x4","value":"MatrixSliceMutMN<'a, N, U1, U4, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 1x4 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 1x4 mutable matrix slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":177951,"byte_end":177995,"line_start":248,"line_end":248,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1579},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":178169,"byte_end":178186,"line_start":252,"line_end":252,"column_start":10,"column_end":27},"name":"MatrixSliceMut1x5","qualname":"::base::alias_slice::MatrixSliceMut1x5","value":"MatrixSliceMutMN<'a, N, U1, U5, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 1x5 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 1x5 mutable matrix slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":178115,"byte_end":178159,"line_start":251,"line_end":251,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1584},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":178333,"byte_end":178350,"line_start":255,"line_end":255,"column_start":10,"column_end":27},"name":"MatrixSliceMut1x6","qualname":"::base::alias_slice::MatrixSliceMut1x6","value":"MatrixSliceMutMN<'a, N, U1, U6, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 1x6 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 1x6 mutable matrix slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":178279,"byte_end":178323,"line_start":254,"line_end":254,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1589},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":178498,"byte_end":178515,"line_start":259,"line_end":259,"column_start":10,"column_end":27},"name":"MatrixSliceMut2x1","qualname":"::base::alias_slice::MatrixSliceMut2x1","value":"MatrixSliceMutMN<'a, N, U2, U1, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 2x1 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 2x1 mutable matrix slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":178444,"byte_end":178488,"line_start":258,"line_end":258,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1594},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":178662,"byte_end":178679,"line_start":262,"line_end":262,"column_start":10,"column_end":27},"name":"MatrixSliceMut2x3","qualname":"::base::alias_slice::MatrixSliceMut2x3","value":"MatrixSliceMutMN<'a, N, U2, U3, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 2x3 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 2x3 mutable matrix slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":178608,"byte_end":178652,"line_start":261,"line_end":261,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1599},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":178826,"byte_end":178843,"line_start":265,"line_end":265,"column_start":10,"column_end":27},"name":"MatrixSliceMut2x4","qualname":"::base::alias_slice::MatrixSliceMut2x4","value":"MatrixSliceMutMN<'a, N, U2, U4, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 2x4 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 2x4 mutable matrix slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":178772,"byte_end":178816,"line_start":264,"line_end":264,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1604},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":178990,"byte_end":179007,"line_start":268,"line_end":268,"column_start":10,"column_end":27},"name":"MatrixSliceMut2x5","qualname":"::base::alias_slice::MatrixSliceMut2x5","value":"MatrixSliceMutMN<'a, N, U2, U5, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 2x5 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 2x5 mutable matrix slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":178936,"byte_end":178980,"line_start":267,"line_end":267,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1609},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":179154,"byte_end":179171,"line_start":271,"line_end":271,"column_start":10,"column_end":27},"name":"MatrixSliceMut2x6","qualname":"::base::alias_slice::MatrixSliceMut2x6","value":"MatrixSliceMutMN<'a, N, U2, U6, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 2x6 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 2x6 mutable matrix slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":179100,"byte_end":179144,"line_start":270,"line_end":270,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1614},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":179319,"byte_end":179336,"line_start":275,"line_end":275,"column_start":10,"column_end":27},"name":"MatrixSliceMut3x1","qualname":"::base::alias_slice::MatrixSliceMut3x1","value":"MatrixSliceMutMN<'a, N, U3, U1, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 3x1 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 3x1 mutable matrix slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":179265,"byte_end":179309,"line_start":274,"line_end":274,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1619},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":179483,"byte_end":179500,"line_start":278,"line_end":278,"column_start":10,"column_end":27},"name":"MatrixSliceMut3x2","qualname":"::base::alias_slice::MatrixSliceMut3x2","value":"MatrixSliceMutMN<'a, N, U3, U2, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 3x2 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 3x2 mutable matrix slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":179429,"byte_end":179473,"line_start":277,"line_end":277,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1624},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":179647,"byte_end":179664,"line_start":281,"line_end":281,"column_start":10,"column_end":27},"name":"MatrixSliceMut3x4","qualname":"::base::alias_slice::MatrixSliceMut3x4","value":"MatrixSliceMutMN<'a, N, U3, U4, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 3x4 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 3x4 mutable matrix slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":179593,"byte_end":179637,"line_start":280,"line_end":280,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1629},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":179811,"byte_end":179828,"line_start":284,"line_end":284,"column_start":10,"column_end":27},"name":"MatrixSliceMut3x5","qualname":"::base::alias_slice::MatrixSliceMut3x5","value":"MatrixSliceMutMN<'a, N, U3, U5, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 3x5 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 3x5 mutable matrix slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":179757,"byte_end":179801,"line_start":283,"line_end":283,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1634},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":179975,"byte_end":179992,"line_start":287,"line_end":287,"column_start":10,"column_end":27},"name":"MatrixSliceMut3x6","qualname":"::base::alias_slice::MatrixSliceMut3x6","value":"MatrixSliceMutMN<'a, N, U3, U6, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 3x6 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 3x6 mutable matrix slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":179921,"byte_end":179965,"line_start":286,"line_end":286,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1639},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":180140,"byte_end":180157,"line_start":291,"line_end":291,"column_start":10,"column_end":27},"name":"MatrixSliceMut4x1","qualname":"::base::alias_slice::MatrixSliceMut4x1","value":"MatrixSliceMutMN<'a, N, U4, U1, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 4x1 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 4x1 mutable matrix slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":180086,"byte_end":180130,"line_start":290,"line_end":290,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1644},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":180304,"byte_end":180321,"line_start":294,"line_end":294,"column_start":10,"column_end":27},"name":"MatrixSliceMut4x2","qualname":"::base::alias_slice::MatrixSliceMut4x2","value":"MatrixSliceMutMN<'a, N, U4, U2, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 4x2 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 4x2 mutable matrix slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":180250,"byte_end":180294,"line_start":293,"line_end":293,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1649},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":180468,"byte_end":180485,"line_start":297,"line_end":297,"column_start":10,"column_end":27},"name":"MatrixSliceMut4x3","qualname":"::base::alias_slice::MatrixSliceMut4x3","value":"MatrixSliceMutMN<'a, N, U4, U3, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 4x3 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 4x3 mutable matrix slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":180414,"byte_end":180458,"line_start":296,"line_end":296,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1654},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":180632,"byte_end":180649,"line_start":300,"line_end":300,"column_start":10,"column_end":27},"name":"MatrixSliceMut4x5","qualname":"::base::alias_slice::MatrixSliceMut4x5","value":"MatrixSliceMutMN<'a, N, U4, U5, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 4x5 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 4x5 mutable matrix slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":180578,"byte_end":180622,"line_start":299,"line_end":299,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1659},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":180796,"byte_end":180813,"line_start":303,"line_end":303,"column_start":10,"column_end":27},"name":"MatrixSliceMut4x6","qualname":"::base::alias_slice::MatrixSliceMut4x6","value":"MatrixSliceMutMN<'a, N, U4, U6, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 4x6 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 4x6 mutable matrix slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":180742,"byte_end":180786,"line_start":302,"line_end":302,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1664},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":180961,"byte_end":180978,"line_start":307,"line_end":307,"column_start":10,"column_end":27},"name":"MatrixSliceMut5x1","qualname":"::base::alias_slice::MatrixSliceMut5x1","value":"MatrixSliceMutMN<'a, N, U5, U1, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 5x1 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 5x1 mutable matrix slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":180907,"byte_end":180951,"line_start":306,"line_end":306,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1669},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":181125,"byte_end":181142,"line_start":310,"line_end":310,"column_start":10,"column_end":27},"name":"MatrixSliceMut5x2","qualname":"::base::alias_slice::MatrixSliceMut5x2","value":"MatrixSliceMutMN<'a, N, U5, U2, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 5x2 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 5x2 mutable matrix slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":181071,"byte_end":181115,"line_start":309,"line_end":309,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1674},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":181289,"byte_end":181306,"line_start":313,"line_end":313,"column_start":10,"column_end":27},"name":"MatrixSliceMut5x3","qualname":"::base::alias_slice::MatrixSliceMut5x3","value":"MatrixSliceMutMN<'a, N, U5, U3, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 5x3 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 5x3 mutable matrix slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":181235,"byte_end":181279,"line_start":312,"line_end":312,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1679},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":181453,"byte_end":181470,"line_start":316,"line_end":316,"column_start":10,"column_end":27},"name":"MatrixSliceMut5x4","qualname":"::base::alias_slice::MatrixSliceMut5x4","value":"MatrixSliceMutMN<'a, N, U5, U4, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 5x4 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 5x4 mutable matrix slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":181399,"byte_end":181443,"line_start":315,"line_end":315,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1684},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":181617,"byte_end":181634,"line_start":319,"line_end":319,"column_start":10,"column_end":27},"name":"MatrixSliceMut5x6","qualname":"::base::alias_slice::MatrixSliceMut5x6","value":"MatrixSliceMutMN<'a, N, U5, U6, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 5x6 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 5x6 mutable matrix slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":181563,"byte_end":181607,"line_start":318,"line_end":318,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1689},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":181782,"byte_end":181799,"line_start":323,"line_end":323,"column_start":10,"column_end":27},"name":"MatrixSliceMut6x1","qualname":"::base::alias_slice::MatrixSliceMut6x1","value":"MatrixSliceMutMN<'a, N, U6, U1, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 6x1 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 6x1 mutable matrix slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":181728,"byte_end":181772,"line_start":322,"line_end":322,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1694},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":181946,"byte_end":181963,"line_start":326,"line_end":326,"column_start":10,"column_end":27},"name":"MatrixSliceMut6x2","qualname":"::base::alias_slice::MatrixSliceMut6x2","value":"MatrixSliceMutMN<'a, N, U6, U2, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 6x2 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 6x2 mutable matrix slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":181892,"byte_end":181936,"line_start":325,"line_end":325,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1699},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":182110,"byte_end":182127,"line_start":329,"line_end":329,"column_start":10,"column_end":27},"name":"MatrixSliceMut6x3","qualname":"::base::alias_slice::MatrixSliceMut6x3","value":"MatrixSliceMutMN<'a, N, U6, U3, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 6x3 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 6x3 mutable matrix slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":182056,"byte_end":182100,"line_start":328,"line_end":328,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1704},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":182274,"byte_end":182291,"line_start":332,"line_end":332,"column_start":10,"column_end":27},"name":"MatrixSliceMut6x4","qualname":"::base::alias_slice::MatrixSliceMut6x4","value":"MatrixSliceMutMN<'a, N, U6, U4, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 6x4 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 6x4 mutable matrix slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":182220,"byte_end":182264,"line_start":331,"line_end":331,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1709},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":182438,"byte_end":182455,"line_start":335,"line_end":335,"column_start":10,"column_end":27},"name":"MatrixSliceMut6x5","qualname":"::base::alias_slice::MatrixSliceMut6x5","value":"MatrixSliceMutMN<'a, N, U6, U5, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 6x5 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 6x5 mutable matrix slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":182384,"byte_end":182428,"line_start":334,"line_end":334,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1714},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":182652,"byte_end":182669,"line_start":339,"line_end":339,"column_start":10,"column_end":27},"name":"MatrixSliceMut1xX","qualname":"::base::alias_slice::MatrixSliceMut1xX","value":"MatrixSliceMutMN<'a, N, U1, Dynamic, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice with 1 row and a number of columns chosen at runtime.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice with 1 row and a number of columns chosen at runtime.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":182549,"byte_end":182642,"line_start":338,"line_end":338,"column_start":1,"column_end":94}}]},{"kind":"Type","id":{"krate":0,"index":1719},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":182871,"byte_end":182888,"line_start":342,"line_end":342,"column_start":10,"column_end":27},"name":"MatrixSliceMut2xX","qualname":"::base::alias_slice::MatrixSliceMut2xX","value":"MatrixSliceMutMN<'a, N, U2, Dynamic, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice with 2 rows and a number of columns chosen at runtime.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice with 2 rows and a number of columns chosen at runtime.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":182767,"byte_end":182861,"line_start":341,"line_end":341,"column_start":1,"column_end":95}}]},{"kind":"Type","id":{"krate":0,"index":1724},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":183090,"byte_end":183107,"line_start":345,"line_end":345,"column_start":10,"column_end":27},"name":"MatrixSliceMut3xX","qualname":"::base::alias_slice::MatrixSliceMut3xX","value":"MatrixSliceMutMN<'a, N, U3, Dynamic, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice with 3 rows and a number of columns chosen at runtime.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice with 3 rows and a number of columns chosen at runtime.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":182986,"byte_end":183080,"line_start":344,"line_end":344,"column_start":1,"column_end":95}}]},{"kind":"Type","id":{"krate":0,"index":1729},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":183309,"byte_end":183326,"line_start":348,"line_end":348,"column_start":10,"column_end":27},"name":"MatrixSliceMut4xX","qualname":"::base::alias_slice::MatrixSliceMut4xX","value":"MatrixSliceMutMN<'a, N, U4, Dynamic, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice with 4 rows and a number of columns chosen at runtime.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice with 4 rows and a number of columns chosen at runtime.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":183205,"byte_end":183299,"line_start":347,"line_end":347,"column_start":1,"column_end":95}}]},{"kind":"Type","id":{"krate":0,"index":1734},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":183528,"byte_end":183545,"line_start":351,"line_end":351,"column_start":10,"column_end":27},"name":"MatrixSliceMut5xX","qualname":"::base::alias_slice::MatrixSliceMut5xX","value":"MatrixSliceMutMN<'a, N, U5, Dynamic, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice with 5 rows and a number of columns chosen at runtime.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice with 5 rows and a number of columns chosen at runtime.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":183424,"byte_end":183518,"line_start":350,"line_end":350,"column_start":1,"column_end":95}}]},{"kind":"Type","id":{"krate":0,"index":1739},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":183747,"byte_end":183764,"line_start":354,"line_end":354,"column_start":10,"column_end":27},"name":"MatrixSliceMut6xX","qualname":"::base::alias_slice::MatrixSliceMut6xX","value":"MatrixSliceMutMN<'a, N, U6, Dynamic, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice with 6 rows and a number of columns chosen at runtime.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice with 6 rows and a number of columns chosen at runtime.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":183643,"byte_end":183737,"line_start":353,"line_end":353,"column_start":1,"column_end":95}}]},{"kind":"Type","id":{"krate":0,"index":1744},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":183966,"byte_end":183983,"line_start":358,"line_end":358,"column_start":10,"column_end":27},"name":"MatrixSliceMutXx1","qualname":"::base::alias_slice::MatrixSliceMutXx1","value":"MatrixSliceMutMN<'a, N, Dynamic, U1, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice with a number of rows chosen at runtime and 1 column.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice with a number of rows chosen at runtime and 1 column.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":183863,"byte_end":183956,"line_start":357,"line_end":357,"column_start":1,"column_end":94}}]},{"kind":"Type","id":{"krate":0,"index":1749},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":184190,"byte_end":184207,"line_start":361,"line_end":361,"column_start":10,"column_end":27},"name":"MatrixSliceMutXx2","qualname":"::base::alias_slice::MatrixSliceMutXx2","value":"MatrixSliceMutMN<'a, N, Dynamic, U2, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice with a number of rows chosen at runtime and 2 columns.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice with a number of rows chosen at runtime and 2 columns.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":184086,"byte_end":184180,"line_start":360,"line_end":360,"column_start":1,"column_end":95}}]},{"kind":"Type","id":{"krate":0,"index":1754},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":184414,"byte_end":184431,"line_start":364,"line_end":364,"column_start":10,"column_end":27},"name":"MatrixSliceMutXx3","qualname":"::base::alias_slice::MatrixSliceMutXx3","value":"MatrixSliceMutMN<'a, N, Dynamic, U3, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice with a number of rows chosen at runtime and 3 columns.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice with a number of rows chosen at runtime and 3 columns.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":184310,"byte_end":184404,"line_start":363,"line_end":363,"column_start":1,"column_end":95}}]},{"kind":"Type","id":{"krate":0,"index":1759},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":184638,"byte_end":184655,"line_start":367,"line_end":367,"column_start":10,"column_end":27},"name":"MatrixSliceMutXx4","qualname":"::base::alias_slice::MatrixSliceMutXx4","value":"MatrixSliceMutMN<'a, N, Dynamic, U4, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice with a number of rows chosen at runtime and 4 columns.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice with a number of rows chosen at runtime and 4 columns.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":184534,"byte_end":184628,"line_start":366,"line_end":366,"column_start":1,"column_end":95}}]},{"kind":"Type","id":{"krate":0,"index":1764},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":184862,"byte_end":184879,"line_start":370,"line_end":370,"column_start":10,"column_end":27},"name":"MatrixSliceMutXx5","qualname":"::base::alias_slice::MatrixSliceMutXx5","value":"MatrixSliceMutMN<'a, N, Dynamic, U5, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice with a number of rows chosen at runtime and 5 columns.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice with a number of rows chosen at runtime and 5 columns.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":184758,"byte_end":184852,"line_start":369,"line_end":369,"column_start":1,"column_end":95}}]},{"kind":"Type","id":{"krate":0,"index":1769},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":185086,"byte_end":185103,"line_start":373,"line_end":373,"column_start":10,"column_end":27},"name":"MatrixSliceMutXx6","qualname":"::base::alias_slice::MatrixSliceMutXx6","value":"MatrixSliceMutMN<'a, N, Dynamic, U6, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice with a number of rows chosen at runtime and 6 columns.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice with a number of rows chosen at runtime and 6 columns.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":184982,"byte_end":185076,"line_start":372,"line_end":372,"column_start":1,"column_end":95}}]},{"kind":"Type","id":{"krate":0,"index":1774},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":185265,"byte_end":185280,"line_start":377,"line_end":377,"column_start":10,"column_end":25},"name":"VectorSliceMutN","qualname":"::base::alias_slice::VectorSliceMutN","value":"Matrix<N, D, U1, SliceStorageMut<'a, N, D, U1, RStride, CStride>>","parent":null,"children":[],"decl_id":null,"docs":" A mutable column vector slice with `D` rows.\n","sig":null,"attributes":[{"value":"/ A mutable column vector slice with `D` rows.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":185207,"byte_end":185255,"line_start":376,"line_end":376,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1780},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":185472,"byte_end":185487,"line_start":381,"line_end":381,"column_start":10,"column_end":25},"name":"DVectorSliceMut","qualname":"::base::alias_slice::DVectorSliceMut","value":"VectorSliceMutN<'a, N, Dynamic, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A mutable column vector slice dynamic numbers of rows and columns.\n","sig":null,"attributes":[{"value":"/ A mutable column vector slice dynamic numbers of rows and columns.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":185392,"byte_end":185462,"line_start":380,"line_end":380,"column_start":1,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":1785},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":185633,"byte_end":185648,"line_start":385,"line_end":385,"column_start":10,"column_end":25},"name":"VectorSliceMut1","qualname":"::base::alias_slice::VectorSliceMut1","value":"VectorSliceMutN<'a, N, U1, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A 1D mutable column vector slice.\n","sig":null,"attributes":[{"value":"/ A 1D mutable column vector slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":185586,"byte_end":185623,"line_start":384,"line_end":384,"column_start":1,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":1790},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":185783,"byte_end":185798,"line_start":388,"line_end":388,"column_start":10,"column_end":25},"name":"VectorSliceMut2","qualname":"::base::alias_slice::VectorSliceMut2","value":"VectorSliceMutN<'a, N, U2, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A 2D mutable column vector slice.\n","sig":null,"attributes":[{"value":"/ A 2D mutable column vector slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":185736,"byte_end":185773,"line_start":387,"line_end":387,"column_start":1,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":1795},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":185933,"byte_end":185948,"line_start":391,"line_end":391,"column_start":10,"column_end":25},"name":"VectorSliceMut3","qualname":"::base::alias_slice::VectorSliceMut3","value":"VectorSliceMutN<'a, N, U3, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A 3D mutable column vector slice.\n","sig":null,"attributes":[{"value":"/ A 3D mutable column vector slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":185886,"byte_end":185923,"line_start":390,"line_end":390,"column_start":1,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":1800},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":186083,"byte_end":186098,"line_start":394,"line_end":394,"column_start":10,"column_end":25},"name":"VectorSliceMut4","qualname":"::base::alias_slice::VectorSliceMut4","value":"VectorSliceMutN<'a, N, U4, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A 4D mutable column vector slice.\n","sig":null,"attributes":[{"value":"/ A 4D mutable column vector slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":186036,"byte_end":186073,"line_start":393,"line_end":393,"column_start":1,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":1805},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":186233,"byte_end":186248,"line_start":397,"line_end":397,"column_start":10,"column_end":25},"name":"VectorSliceMut5","qualname":"::base::alias_slice::VectorSliceMut5","value":"VectorSliceMutN<'a, N, U5, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A 5D mutable column vector slice.\n","sig":null,"attributes":[{"value":"/ A 5D mutable column vector slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":186186,"byte_end":186223,"line_start":396,"line_end":396,"column_start":1,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":1810},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":186383,"byte_end":186398,"line_start":400,"line_end":400,"column_start":10,"column_end":25},"name":"VectorSliceMut6","qualname":"::base::alias_slice::VectorSliceMut6","value":"VectorSliceMutN<'a, N, U6, RStride, CStride>","parent":null,"children":[],"decl_id":null,"docs":" A 6D mutable column vector slice.\n","sig":null,"attributes":[{"value":"/ A 6D mutable column vector slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/alias_slice.rs","byte_start":186336,"byte_end":186373,"line_start":399,"line_end":399,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":1843},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/array_storage.rs","byte_start":187553,"byte_end":187565,"line_start":37,"line_end":37,"column_start":12,"column_end":24},"name":"ArrayStorage","qualname":"::base::array_storage::ArrayStorage","value":"ArrayStorage {  }","parent":null,"children":[{"krate":0,"index":1847}],"decl_id":null,"docs":" A array-based statically sized matrix data storage.\n","sig":null,"attributes":[{"value":"/ A array-based statically sized matrix data storage.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/array_storage.rs","byte_start":187475,"byte_end":187530,"line_start":35,"line_end":35,"column_start":1,"column_end":56}},{"value":"repr(C)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/array_storage.rs","byte_start":187531,"byte_end":187541,"line_start":36,"line_end":36,"column_start":1,"column_end":11}}]},{"kind":"Type","id":{"krate":0,"index":1848},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/array_storage.rs","byte_start":187836,"byte_end":187847,"line_start":49,"line_end":49,"column_start":10,"column_end":21},"name":"MatrixArray","qualname":"::base::array_storage::MatrixArray","value":"ArrayStorage<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Renamed to [ArrayStorage].\n","sig":null,"attributes":[{"value":"deprecated(note = \"renamed to `ArrayStorage`\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/array_storage.rs","byte_start":187746,"byte_end":187795,"line_start":47,"line_end":47,"column_start":1,"column_end":50}},{"value":"/ Renamed to [ArrayStorage].","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/array_storage.rs","byte_start":187796,"byte_end":187826,"line_start":48,"line_end":48,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1966},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":196780,"byte_end":196791,"line_start":31,"line_end":31,"column_start":12,"column_end":23},"name":"new_scaling","qualname":"<MatrixN<N, D>>::new_scaling","value":"fn (scaling: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new homogeneous matrix that applies the same scaling factor on each dimension.\n","sig":null,"attributes":[{"value":"/ Creates a new homogeneous matrix that applies the same scaling factor on each dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":196662,"byte_end":196754,"line_start":29,"line_end":29,"column_start":5,"column_end":97}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":196759,"byte_end":196768,"line_start":30,"line_end":30,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1967},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":197073,"byte_end":197095,"line_start":40,"line_end":40,"column_start":12,"column_end":34},"name":"new_nonuniform_scaling","qualname":"<MatrixN<N, D>>::new_nonuniform_scaling","value":"fn <SB> (scaling: &Vector<N, DimNameDiff<D, U1>, SB>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new homogeneous matrix that applies a distinct scaling factor for each dimension.\n","sig":null,"attributes":[{"value":"/ Creates a new homogeneous matrix that applies a distinct scaling factor for each dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":196952,"byte_end":197047,"line_start":38,"line_end":38,"column_start":5,"column_end":100}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":197052,"byte_end":197061,"line_start":39,"line_end":39,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1969},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":197499,"byte_end":197514,"line_start":55,"line_end":55,"column_start":12,"column_end":27},"name":"new_translation","qualname":"<MatrixN<N, D>>::new_translation","value":"fn <SB> (translation: &Vector<N, DimNameDiff<D, U1>, SB>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new homogeneous matrix that applies a pure translation.\n","sig":null,"attributes":[{"value":"/ Creates a new homogeneous matrix that applies a pure translation.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":197404,"byte_end":197473,"line_start":53,"line_end":53,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":197478,"byte_end":197487,"line_start":54,"line_end":54,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1973},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":197974,"byte_end":197986,"line_start":71,"line_end":71,"column_start":12,"column_end":24},"name":"new_rotation","qualname":"<Matrix3<N>>::new_rotation","value":"fn (angle: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a 2 dimensional homogeneous rotation matrix from an angle in radian.\n","sig":null,"attributes":[{"value":"/ Builds a 2 dimensional homogeneous rotation matrix from an angle in radian.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":197869,"byte_end":197948,"line_start":69,"line_end":69,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":197953,"byte_end":197962,"line_start":70,"line_end":70,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1974},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":198265,"byte_end":198297,"line_start":79,"line_end":79,"column_start":12,"column_end":44},"name":"new_nonuniform_scaling_wrt_point","qualname":"<Matrix3<N>>::new_nonuniform_scaling_wrt_point","value":"fn (scaling: &Vector2<N>, pt: &Point2<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new homogeneous matrix that applies a scaling factor for each dimension with respect to point.","sig":null,"attributes":[{"value":"/ Creates a new homogeneous matrix that applies a scaling factor for each dimension with respect to point.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":198065,"byte_end":198173,"line_start":75,"line_end":75,"column_start":5,"column_end":113}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":198178,"byte_end":198181,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ Can be used to implement \"zoom_to\" functionality.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":198186,"byte_end":198239,"line_start":77,"line_end":77,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":198244,"byte_end":198253,"line_start":78,"line_end":78,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1977},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":198871,"byte_end":198883,"line_start":101,"line_end":101,"column_start":12,"column_end":24},"name":"new_rotation","qualname":"<Matrix4<N>>::new_rotation","value":"fn (axisangle: Vector3<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a 3D homogeneous rotation matrix from an axis and an angle (multiplied together).","sig":null,"attributes":[{"value":"/ Builds a 3D homogeneous rotation matrix from an axis and an angle (multiplied together).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":198678,"byte_end":198770,"line_start":97,"line_end":97,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":198775,"byte_end":198778,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ Returns the identity matrix if the given argument is zero.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":198783,"byte_end":198845,"line_start":99,"line_end":99,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":198850,"byte_end":198859,"line_start":100,"line_end":100,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1978},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":199172,"byte_end":199194,"line_start":109,"line_end":109,"column_start":12,"column_end":34},"name":"new_rotation_wrt_point","qualname":"<Matrix4<N>>::new_rotation_wrt_point","value":"fn (axisangle: Vector3<N>, pt: Point3<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a 3D homogeneous rotation matrix from an axis and an angle (multiplied together).","sig":null,"attributes":[{"value":"/ Builds a 3D homogeneous rotation matrix from an axis and an angle (multiplied together).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":198979,"byte_end":199071,"line_start":105,"line_end":105,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":199076,"byte_end":199079,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ Returns the identity matrix if the given argument is zero.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":199084,"byte_end":199146,"line_start":107,"line_end":107,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":199151,"byte_end":199160,"line_start":108,"line_end":108,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1979},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":199575,"byte_end":199607,"line_start":118,"line_end":118,"column_start":12,"column_end":44},"name":"new_nonuniform_scaling_wrt_point","qualname":"<Matrix4<N>>::new_nonuniform_scaling_wrt_point","value":"fn (scaling: &Vector3<N>, pt: &Point3<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new homogeneous matrix that applies a scaling factor for each dimension with respect to point.","sig":null,"attributes":[{"value":"/ Creates a new homogeneous matrix that applies a scaling factor for each dimension with respect to point.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":199375,"byte_end":199483,"line_start":114,"line_end":114,"column_start":5,"column_end":113}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":199488,"byte_end":199491,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ Can be used to implement \"zoom_to\" functionality.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":199496,"byte_end":199549,"line_start":116,"line_end":116,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":199554,"byte_end":199563,"line_start":117,"line_end":117,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1980},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":200338,"byte_end":200354,"line_start":146,"line_end":146,"column_start":12,"column_end":28},"name":"from_scaled_axis","qualname":"<Matrix4<N>>::from_scaled_axis","value":"fn (axisangle: Vector3<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a 3D homogeneous rotation matrix from an axis and an angle (multiplied together).","sig":null,"attributes":[{"value":"/ Builds a 3D homogeneous rotation matrix from an axis and an angle (multiplied together).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":200094,"byte_end":200186,"line_start":141,"line_end":141,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":200191,"byte_end":200194,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ Returns the identity matrix if the given argument is zero.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":200199,"byte_end":200261,"line_start":143,"line_end":143,"column_start":5,"column_end":67}},{"value":"/ This is identical to `Self::new_rotation`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":200266,"byte_end":200312,"line_start":144,"line_end":144,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":200317,"byte_end":200326,"line_start":145,"line_end":145,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1981},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":200612,"byte_end":200629,"line_start":153,"line_end":153,"column_start":12,"column_end":29},"name":"from_euler_angles","qualname":"<Matrix4<N>>::from_euler_angles","value":"fn (roll: N, pitch: N, yaw: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new rotation from Euler angles.","sig":null,"attributes":[{"value":"/ Creates a new rotation from Euler angles.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":200463,"byte_end":200508,"line_start":150,"line_end":150,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":200513,"byte_end":200516,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ The primitive rotations are applied in order: 1 roll − 2 pitch − 3 yaw.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":200521,"byte_end":200600,"line_start":152,"line_end":152,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1982},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":200840,"byte_end":200855,"line_start":158,"line_end":158,"column_start":12,"column_end":27},"name":"from_axis_angle","qualname":"<Matrix4<N>>::from_axis_angle","value":"fn (axis: &Unit<Vector3<N>>, angle: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a 3D homogeneous rotation matrix from an axis and a rotation angle.\n","sig":null,"attributes":[{"value":"/ Builds a 3D homogeneous rotation matrix from an axis and a rotation angle.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":200750,"byte_end":200828,"line_start":157,"line_end":157,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1983},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":201071,"byte_end":201087,"line_start":164,"line_end":164,"column_start":12,"column_end":28},"name":"new_orthographic","qualname":"<Matrix4<N>>::new_orthographic","value":"fn (left: N, right: N, bottom: N, top: N, znear: N, zfar: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new homogeneous matrix for an orthographic projection.\n","sig":null,"attributes":[{"value":"/ Creates a new homogeneous matrix for an orthographic projection.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":200977,"byte_end":201045,"line_start":162,"line_end":162,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":201050,"byte_end":201059,"line_start":163,"line_end":163,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1984},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":201337,"byte_end":201352,"line_start":170,"line_end":170,"column_start":12,"column_end":27},"name":"new_perspective","qualname":"<Matrix4<N>>::new_perspective","value":"fn (aspect: N, fovy: N, znear: N, zfar: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new homogeneous matrix for a perspective projection.\n","sig":null,"attributes":[{"value":"/ Creates a new homogeneous matrix for a perspective projection.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":201245,"byte_end":201311,"line_start":168,"line_end":168,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":201316,"byte_end":201325,"line_start":169,"line_end":169,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1985},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":201764,"byte_end":201776,"line_start":180,"line_end":180,"column_start":12,"column_end":24},"name":"face_towards","qualname":"<Matrix4<N>>::face_towards","value":"fn (eye: &Point3<N>, target: &Point3<N>, up: &Vector3<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an isometry that corresponds to the local frame of an observer standing at the\n point `eye` and looking toward `target`.","sig":null,"attributes":[{"value":"/ Creates an isometry that corresponds to the local frame of an observer standing at the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":201479,"byte_end":201569,"line_start":174,"line_end":174,"column_start":5,"column_end":95}},{"value":"/ point `eye` and looking toward `target`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":201574,"byte_end":201618,"line_start":175,"line_end":175,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":201623,"byte_end":201626,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ It maps the view direction `target - eye` to the positive `z` axis and the origin to the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":201631,"byte_end":201723,"line_start":177,"line_end":177,"column_start":5,"column_end":97}},{"value":"/ `eye`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":201728,"byte_end":201738,"line_start":178,"line_end":178,"column_start":5,"column_end":15}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":201743,"byte_end":201752,"line_start":179,"line_end":179,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1986},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":202042,"byte_end":202060,"line_start":186,"line_end":186,"column_start":12,"column_end":30},"name":"new_observer_frame","qualname":"<Matrix4<N>>::new_observer_frame","value":"fn (eye: &Point3<N>, target: &Point3<N>, up: &Vector3<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Deprecated: Use [Matrix4::face_towards] instead.\n","sig":null,"attributes":[{"value":"/ Deprecated: Use [Matrix4::face_towards] instead.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":201924,"byte_end":201976,"line_start":184,"line_end":184,"column_start":5,"column_end":57}},{"value":"deprecated(note = \"renamed to `face_towards`\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":201981,"byte_end":202030,"line_start":185,"line_end":185,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1987},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":202255,"byte_end":202265,"line_start":192,"line_end":192,"column_start":12,"column_end":22},"name":"look_at_rh","qualname":"<Matrix4<N>>::look_at_rh","value":"fn (eye: &Point3<N>, target: &Point3<N>, up: &Vector3<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a right-handed look-at view matrix.\n","sig":null,"attributes":[{"value":"/ Builds a right-handed look-at view matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":202183,"byte_end":202229,"line_start":190,"line_end":190,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":202234,"byte_end":202243,"line_start":191,"line_end":191,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1988},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":202482,"byte_end":202492,"line_start":198,"line_end":198,"column_start":12,"column_end":22},"name":"look_at_lh","qualname":"<Matrix4<N>>::look_at_lh","value":"fn (eye: &Point3<N>, target: &Point3<N>, up: &Vector3<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a left-handed look-at view matrix.\n","sig":null,"attributes":[{"value":"/ Builds a left-handed look-at view matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":202411,"byte_end":202456,"line_start":196,"line_end":196,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":202461,"byte_end":202470,"line_start":197,"line_end":197,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1993},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":202928,"byte_end":202942,"line_start":209,"line_end":209,"column_start":12,"column_end":26},"name":"append_scaling","qualname":"<SquareMatrix<N, D, S>>::append_scaling","value":"fn (&self, scaling: N) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the transformation equal to `self` followed by an uniform scaling factor.\n","sig":null,"attributes":[{"value":"/ Computes the transformation equal to `self` followed by an uniform scaling factor.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":202754,"byte_end":202840,"line_start":206,"line_end":206,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":202845,"byte_end":202854,"line_start":207,"line_end":207,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use append_scaling_mut()?\"","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":202859,"byte_end":202916,"line_start":208,"line_end":208,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1994},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":203349,"byte_end":203364,"line_start":222,"line_end":222,"column_start":12,"column_end":27},"name":"prepend_scaling","qualname":"<SquareMatrix<N, D, S>>::prepend_scaling","value":"fn (&self, scaling: N) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the transformation equal to an uniform scaling factor followed by `self`.\n","sig":null,"attributes":[{"value":"/ Computes the transformation equal to an uniform scaling factor followed by `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":203174,"byte_end":203260,"line_start":219,"line_end":219,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":203265,"byte_end":203274,"line_start":220,"line_end":220,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use prepend_scaling_mut()?\"","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":203279,"byte_end":203337,"line_start":221,"line_end":221,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1995},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":203785,"byte_end":203810,"line_start":235,"line_end":235,"column_start":12,"column_end":37},"name":"append_nonuniform_scaling","qualname":"<SquareMatrix<N, D, S>>::append_nonuniform_scaling","value":"fn <SB> (&self, scaling: &Vector<N, DimNameDiff<D, U1>, SB>) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the transformation equal to `self` followed by a non-uniform scaling factor.\n","sig":null,"attributes":[{"value":"/ Computes the transformation equal to `self` followed by a non-uniform scaling factor.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":203597,"byte_end":203686,"line_start":232,"line_end":232,"column_start":5,"column_end":94}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":203691,"byte_end":203700,"line_start":233,"line_end":233,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use append_nonuniform_scaling_mut()?\"","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":203705,"byte_end":203773,"line_start":234,"line_end":234,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1997},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":204346,"byte_end":204372,"line_start":252,"line_end":252,"column_start":12,"column_end":38},"name":"prepend_nonuniform_scaling","qualname":"<SquareMatrix<N, D, S>>::prepend_nonuniform_scaling","value":"fn <SB> (&self, scaling: &Vector<N, DimNameDiff<D, U1>, SB>) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the transformation equal to a non-uniform scaling factor followed by `self`.\n","sig":null,"attributes":[{"value":"/ Computes the transformation equal to a non-uniform scaling factor followed by `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":204157,"byte_end":204246,"line_start":249,"line_end":249,"column_start":5,"column_end":94}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":204251,"byte_end":204260,"line_start":250,"line_end":250,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use prepend_nonuniform_scaling_mut()?\"","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":204265,"byte_end":204334,"line_start":251,"line_end":251,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1999},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":204886,"byte_end":204904,"line_start":269,"line_end":269,"column_start":12,"column_end":30},"name":"append_translation","qualname":"<SquareMatrix<N, D, S>>::append_translation","value":"fn <SB> (&self, shift: &Vector<N, DimNameDiff<D, U1>, SB>) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the transformation equal to `self` followed by a translation.\n","sig":null,"attributes":[{"value":"/ Computes the transformation equal to `self` followed by a translation.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":204720,"byte_end":204794,"line_start":266,"line_end":266,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":204799,"byte_end":204808,"line_start":267,"line_end":267,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use append_translation_mut()?\"","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":204813,"byte_end":204874,"line_start":268,"line_end":268,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2001},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":205384,"byte_end":205403,"line_start":283,"line_end":283,"column_start":12,"column_end":31},"name":"prepend_translation","qualname":"<SquareMatrix<N, D, S>>::prepend_translation","value":"fn <SB> (&self, shift: &Vector<N, DimNameDiff<D, U1>, SB>) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the transformation equal to a translation followed by `self`.\n","sig":null,"attributes":[{"value":"/ Computes the transformation equal to a translation followed by `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":205217,"byte_end":205291,"line_start":280,"line_end":280,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":205296,"byte_end":205305,"line_start":281,"line_end":281,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use prepend_translation_mut()?\"","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":205310,"byte_end":205372,"line_start":282,"line_end":282,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2007},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":206015,"byte_end":206033,"line_start":303,"line_end":303,"column_start":12,"column_end":30},"name":"append_scaling_mut","qualname":"<SquareMatrix<N, D, S>>::append_scaling_mut","value":"fn (&mut self, scaling: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes in-place the transformation equal to `self` followed by an uniform scaling factor.\n","sig":null,"attributes":[{"value":"/ Computes in-place the transformation equal to `self` followed by an uniform scaling factor.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":205894,"byte_end":205989,"line_start":301,"line_end":301,"column_start":5,"column_end":100}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":205994,"byte_end":206003,"line_start":302,"line_end":302,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2008},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":206334,"byte_end":206353,"line_start":313,"line_end":313,"column_start":12,"column_end":31},"name":"prepend_scaling_mut","qualname":"<SquareMatrix<N, D, S>>::prepend_scaling_mut","value":"fn (&mut self, scaling: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes in-place the transformation equal to an uniform scaling factor followed by `self`.\n","sig":null,"attributes":[{"value":"/ Computes in-place the transformation equal to an uniform scaling factor followed by `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":206213,"byte_end":206308,"line_start":311,"line_end":311,"column_start":5,"column_end":100}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":206313,"byte_end":206322,"line_start":312,"line_end":312,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2009},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":206660,"byte_end":206689,"line_start":323,"line_end":323,"column_start":12,"column_end":41},"name":"append_nonuniform_scaling_mut","qualname":"<SquareMatrix<N, D, S>>::append_nonuniform_scaling_mut","value":"fn <SB> (&mut self, scaling: &Vector<N, DimNameDiff<D, U1>, SB>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes in-place the transformation equal to `self` followed by a non-uniform scaling factor.\n","sig":null,"attributes":[{"value":"/ Computes in-place the transformation equal to `self` followed by a non-uniform scaling factor.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":206536,"byte_end":206634,"line_start":321,"line_end":321,"column_start":5,"column_end":103}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":206639,"byte_end":206648,"line_start":322,"line_end":322,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2011},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":207131,"byte_end":207161,"line_start":336,"line_end":336,"column_start":12,"column_end":42},"name":"prepend_nonuniform_scaling_mut","qualname":"<SquareMatrix<N, D, S>>::prepend_nonuniform_scaling_mut","value":"fn <SB> (&mut self, scaling: &Vector<N, DimNameDiff<D, U1>, SB>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes in-place the transformation equal to a non-uniform scaling factor followed by `self`.\n","sig":null,"attributes":[{"value":"/ Computes in-place the transformation equal to a non-uniform scaling factor followed by `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":207007,"byte_end":207105,"line_start":334,"line_end":334,"column_start":5,"column_end":103}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":207110,"byte_end":207119,"line_start":335,"line_end":335,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2013},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":207601,"byte_end":207623,"line_start":351,"line_end":351,"column_start":12,"column_end":34},"name":"append_translation_mut","qualname":"<SquareMatrix<N, D, S>>::append_translation_mut","value":"fn <SB> (&mut self, shift: &Vector<N, DimNameDiff<D, U1>, SB>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the transformation equal to `self` followed by a translation.\n","sig":null,"attributes":[{"value":"/ Computes the transformation equal to `self` followed by a translation.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":207501,"byte_end":207575,"line_start":349,"line_end":349,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":207580,"byte_end":207589,"line_start":350,"line_end":350,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2015},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":208105,"byte_end":208128,"line_start":366,"line_end":366,"column_start":12,"column_end":35},"name":"prepend_translation_mut","qualname":"<SquareMatrix<N, D, S>>::prepend_translation_mut","value":"fn <SB> (&mut self, shift: &Vector<N, DimNameDiff<D, U1>, SB>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes the transformation equal to a translation followed by `self`.\n","sig":null,"attributes":[{"value":"/ Computes the transformation equal to a translation followed by `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":208005,"byte_end":208079,"line_start":364,"line_end":364,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":208084,"byte_end":208093,"line_start":365,"line_end":365,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2021},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":209129,"byte_end":209145,"line_start":393,"line_end":393,"column_start":12,"column_end":28},"name":"transform_vector","qualname":"<SquareMatrix<N, D, S>>::transform_vector","value":"fn (&self, v: &VectorN<N, DimNameDiff<D, U1>>) -> VectorN<N, DimNameDiff<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Transforms the given vector, assuming the matrix `self` uses homogeneous coordinates.\n","sig":null,"attributes":[{"value":"/ Transforms the given vector, assuming the matrix `self` uses homogeneous coordinates.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":209014,"byte_end":209103,"line_start":391,"line_end":391,"column_start":5,"column_end":94}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":209108,"byte_end":209117,"line_start":392,"line_end":392,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2022},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":209688,"byte_end":209703,"line_start":410,"line_end":410,"column_start":12,"column_end":27},"name":"transform_point","qualname":"<SquareMatrix<N, D, S>>::transform_point","value":"fn (&self, pt: &Point<N, DimNameDiff<D, U1>>) -> Point<N, DimNameDiff<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Transforms the given point, assuming the matrix `self` uses homogeneous coordinates.\n","sig":null,"attributes":[{"value":"/ Transforms the given point, assuming the matrix `self` uses homogeneous coordinates.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":209574,"byte_end":209662,"line_start":408,"line_end":408,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":209667,"byte_end":209676,"line_start":409,"line_end":409,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2062},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/componentwise.rs","byte_start":211349,"byte_end":211352,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"abs","qualname":"<Matrix<N, R, C, S>>::abs","value":"fn (&self) -> MatrixMN<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Computes the component-wise absolute value.","sig":null,"attributes":[{"value":"/ Computes the component-wise absolute value.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/componentwise.rs","byte_start":211042,"byte_end":211089,"line_start":19,"line_end":19,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/componentwise.rs","byte_start":211094,"byte_end":211097,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/componentwise.rs","byte_start":211102,"byte_end":211115,"line_start":21,"line_end":21,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/componentwise.rs","byte_start":211120,"byte_end":211123,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/componentwise.rs","byte_start":211128,"byte_end":211135,"line_start":23,"line_end":23,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix2;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/componentwise.rs","byte_start":211140,"byte_end":211168,"line_start":24,"line_end":24,"column_start":5,"column_end":33}},{"value":"/ let a = Matrix2::new(0.0, 1.0,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/componentwise.rs","byte_start":211173,"byte_end":211207,"line_start":25,"line_end":25,"column_start":5,"column_end":39}},{"value":"/                      -2.0, -3.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/componentwise.rs","byte_start":211212,"byte_end":211249,"line_start":26,"line_end":26,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(a.abs(), Matrix2::new(0.0, 1.0, 2.0, 3.0))","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/componentwise.rs","byte_start":211254,"byte_end":211311,"line_start":27,"line_end":27,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/componentwise.rs","byte_start":211316,"byte_end":211323,"line_start":28,"line_end":28,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/componentwise.rs","byte_start":211328,"byte_end":211337,"line_start":29,"line_end":29,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":13836},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/componentwise.rs","byte_start":216399,"byte_end":216412,"line_start":147,"line_end":147,"column_start":5,"column_end":18},"name":"component_mul","qualname":"<Matrix<N, R1, C1, SA>>::component_mul","value":"fn <R2, C2, SB> (&self, rhs: &Matrix<N, R2, C2, SB>) -> MatrixComponentOp<N, R1, C1, R2, C2>","parent":null,"children":[],"decl_id":null,"docs":"\n    Componentwise matrix or vector multiplication.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/componentwise.rs","byte_start":212023,"byte_end":212032,"line_start":51,"line_end":51,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":13845},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/componentwise.rs","byte_start":216455,"byte_end":216459,"line_start":147,"line_end":147,"column_start":61,"column_end":65},"name":"cmpy","qualname":"<Matrix<N, R1, C1, SA>>::cmpy","value":"fn <R2, C2, SB, R3, C3, SC> (&mut self, alpha: N, a: &Matrix<N, R2, C2, SB>, b: &Matrix<N, R3, C3, SC>, beta: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":"\n    Computes componentwise `self[i] = alpha * a[i] * b[i] + beta * self[i]`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/componentwise.rs","byte_start":213139,"byte_end":213148,"line_start":77,"line_end":77,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":13852},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/componentwise.rs","byte_start":216433,"byte_end":216453,"line_start":147,"line_end":147,"column_start":39,"column_end":59},"name":"component_mul_assign","qualname":"<Matrix<N, R1, C1, SA>>::component_mul_assign","value":"fn <R2, C2, SB> (&mut self, rhs: &Matrix<N, R2, C2, SB>) -> ()","parent":null,"children":[],"decl_id":null,"docs":"\n    Inplace componentwise matrix or vector multiplication.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/componentwise.rs","byte_start":215048,"byte_end":215057,"line_start":112,"line_end":112,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":13856},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/componentwise.rs","byte_start":216414,"byte_end":216431,"line_start":147,"line_end":147,"column_start":20,"column_end":37},"name":"component_mul_mut","qualname":"<Matrix<N, R1, C1, SA>>::component_mul_mut","value":"fn <R2, C2, SB> (&mut self, rhs: &Matrix<N, R2, C2, SB>) -> ()","parent":null,"children":[],"decl_id":null,"docs":"\n    Inplace componentwise matrix or vector multiplication.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/componentwise.rs","byte_start":215858,"byte_end":215867,"line_start":132,"line_end":132,"column_start":13,"column_end":22}},{"value":"deprecated(note =\n             \"This is renamed using the `_assign` suffix instead of the `_mut` suffix.\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/componentwise.rs","byte_start":215880,"byte_end":215976,"line_start":133,"line_end":133,"column_start":13,"column_end":109}}]},{"kind":"Method","id":{"krate":0,"index":13865},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/componentwise.rs","byte_start":217572,"byte_end":217585,"line_start":192,"line_end":192,"column_start":5,"column_end":18},"name":"component_div","qualname":"<Matrix<N, R1, C1, SA>>::component_div","value":"fn <R2, C2, SB> (&self, rhs: &Matrix<N, R2, C2, SB>) -> MatrixComponentOp<N, R1, C1, R2, C2>","parent":null,"children":[],"decl_id":null,"docs":"\n    Componentwise matrix or vector division.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/componentwise.rs","byte_start":212023,"byte_end":212032,"line_start":51,"line_end":51,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":13874},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/componentwise.rs","byte_start":217628,"byte_end":217632,"line_start":192,"line_end":192,"column_start":61,"column_end":65},"name":"cdpy","qualname":"<Matrix<N, R1, C1, SA>>::cdpy","value":"fn <R2, C2, SB, R3, C3, SC> (&mut self, alpha: N, a: &Matrix<N, R2, C2, SB>, b: &Matrix<N, R3, C3, SC>, beta: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":"\n    Computes componentwise `self[i] = alpha * a[i] / b[i] + beta * self[i]`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/componentwise.rs","byte_start":213139,"byte_end":213148,"line_start":77,"line_end":77,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":13881},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/componentwise.rs","byte_start":217606,"byte_end":217626,"line_start":192,"line_end":192,"column_start":39,"column_end":59},"name":"component_div_assign","qualname":"<Matrix<N, R1, C1, SA>>::component_div_assign","value":"fn <R2, C2, SB> (&mut self, rhs: &Matrix<N, R2, C2, SB>) -> ()","parent":null,"children":[],"decl_id":null,"docs":"\n    Inplace componentwise matrix or vector division.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/componentwise.rs","byte_start":215048,"byte_end":215057,"line_start":112,"line_end":112,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":13885},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/componentwise.rs","byte_start":217587,"byte_end":217604,"line_start":192,"line_end":192,"column_start":20,"column_end":37},"name":"component_div_mut","qualname":"<Matrix<N, R1, C1, SA>>::component_div_mut","value":"fn <R2, C2, SB> (&mut self, rhs: &Matrix<N, R2, C2, SB>) -> ()","parent":null,"children":[],"decl_id":null,"docs":"\n    Inplace componentwise matrix or vector division.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/componentwise.rs","byte_start":215858,"byte_end":215867,"line_start":132,"line_end":132,"column_start":13,"column_end":22}},{"value":"deprecated(note =\n             \"This is renamed using the `_assign` suffix instead of the `_mut` suffix.\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/componentwise.rs","byte_start":215880,"byte_end":215976,"line_start":133,"line_end":133,"column_start":13,"column_end":109}}]},{"kind":"Method","id":{"krate":0,"index":2069},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/componentwise.rs","byte_start":219089,"byte_end":219092,"line_start":250,"line_end":250,"column_start":12,"column_end":15},"name":"inf","qualname":"<Matrix<N, R, C, S>>::inf","value":"fn (&self, other: &Self) -> MatrixMN<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Computes the infimum (aka. componentwise min) of two matrices/vectors.\n","sig":null,"attributes":[{"value":"/ Computes the infimum (aka. componentwise min) of two matrices/vectors.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/componentwise.rs","byte_start":218989,"byte_end":219063,"line_start":248,"line_end":248,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/componentwise.rs","byte_start":219068,"byte_end":219077,"line_start":249,"line_end":249,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2071},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/componentwise.rs","byte_start":219299,"byte_end":219302,"line_start":256,"line_end":256,"column_start":12,"column_end":15},"name":"sup","qualname":"<Matrix<N, R, C, S>>::sup","value":"fn (&self, other: &Self) -> MatrixMN<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Computes the supremum (aka. componentwise max) of two matrices/vectors.\n","sig":null,"attributes":[{"value":"/ Computes the supremum (aka. componentwise max) of two matrices/vectors.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/componentwise.rs","byte_start":219198,"byte_end":219273,"line_start":254,"line_end":254,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/componentwise.rs","byte_start":219278,"byte_end":219287,"line_start":255,"line_end":255,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2073},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/componentwise.rs","byte_start":219495,"byte_end":219502,"line_start":262,"line_end":262,"column_start":12,"column_end":19},"name":"inf_sup","qualname":"<Matrix<N, R, C, S>>::inf_sup","value":"fn (&self, other: &Self) -> (MatrixMN<N, R, C>, MatrixMN<N, R, C>)","parent":null,"children":[],"decl_id":null,"docs":" Computes the (infimum, supremum) of two matrices/vectors.\n","sig":null,"attributes":[{"value":"/ Computes the (infimum, supremum) of two matrices/vectors.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/componentwise.rs","byte_start":219408,"byte_end":219469,"line_start":260,"line_end":260,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/componentwise.rs","byte_start":219474,"byte_end":219483,"line_start":261,"line_end":261,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2119},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":220707,"byte_end":220732,"line_start":37,"line_end":37,"column_start":19,"column_end":44},"name":"new_uninitialized_generic","qualname":"<MatrixMN<N, R, C>>::new_uninitialized_generic","value":"fn (nrows: R, ncols: C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new uninitialized matrix. If the matrix has a compile-time dimension, this panics\n if `nrows != R::to_usize()` or `ncols != C::to_usize()`.\n","sig":null,"attributes":[{"value":"/ Creates a new uninitialized matrix. If the matrix has a compile-time dimension, this panics","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":220514,"byte_end":220609,"line_start":34,"line_end":34,"column_start":5,"column_end":100}},{"value":"/ if `nrows != R::to_usize()` or `ncols != C::to_usize()`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":220614,"byte_end":220674,"line_start":35,"line_end":35,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":220679,"byte_end":220688,"line_start":36,"line_end":36,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2120},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":220937,"byte_end":220957,"line_start":43,"line_end":43,"column_start":12,"column_end":32},"name":"from_element_generic","qualname":"<MatrixMN<N, R, C>>::from_element_generic","value":"fn (nrows: R, ncols: C, elem: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a matrix with all its elements set to `elem`.\n","sig":null,"attributes":[{"value":"/ Creates a matrix with all its elements set to `elem`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":220854,"byte_end":220911,"line_start":41,"line_end":41,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":220916,"byte_end":220925,"line_start":42,"line_end":42,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2121},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":221268,"byte_end":221282,"line_start":52,"line_end":52,"column_start":12,"column_end":26},"name":"repeat_generic","qualname":"<MatrixMN<N, R, C>>::repeat_generic","value":"fn (nrows: R, ncols: C, elem: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a matrix with all its elements set to `elem`.","sig":null,"attributes":[{"value":"/ Creates a matrix with all its elements set to `elem`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":221137,"byte_end":221194,"line_start":48,"line_end":48,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":221199,"byte_end":221202,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Same as `from_element_generic`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":221207,"byte_end":221242,"line_start":50,"line_end":50,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":221247,"byte_end":221256,"line_start":51,"line_end":51,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2122},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":221540,"byte_end":221553,"line_start":59,"line_end":59,"column_start":12,"column_end":25},"name":"zeros_generic","qualname":"<MatrixMN<N, R, C>>::zeros_generic","value":"fn (nrows: R, ncols: C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a matrix with all its elements set to 0.\n","sig":null,"attributes":[{"value":"/ Creates a matrix with all its elements set to 0.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":221462,"byte_end":221514,"line_start":57,"line_end":57,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":221519,"byte_end":221528,"line_start":58,"line_end":58,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2123},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":221777,"byte_end":221798,"line_start":68,"line_end":68,"column_start":12,"column_end":33},"name":"from_iterator_generic","qualname":"<MatrixMN<N, R, C>>::from_iterator_generic","value":"fn <I> (nrows: R, ncols: C, iter: I) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a matrix with all its elements filled by an iterator.\n","sig":null,"attributes":[{"value":"/ Creates a matrix with all its elements filled by an iterator.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":221686,"byte_end":221751,"line_start":66,"line_end":66,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":221756,"byte_end":221765,"line_start":67,"line_end":67,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2125},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":222245,"byte_end":222267,"line_start":81,"line_end":81,"column_start":12,"column_end":34},"name":"from_row_slice_generic","qualname":"<MatrixMN<N, R, C>>::from_row_slice_generic","value":"fn (nrows: R, ncols: C, slice: &[N]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a matrix with its elements filled with the components provided by a slice in\n row-major order.","sig":null,"attributes":[{"value":"/ Creates a matrix with its elements filled with the components provided by a slice in","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":221987,"byte_end":222075,"line_start":75,"line_end":75,"column_start":5,"column_end":93}},{"value":"/ row-major order.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":222080,"byte_end":222100,"line_start":76,"line_end":76,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":222105,"byte_end":222108,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ The order of elements in the slice must follow the usual mathematic writing, i.e.,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":222113,"byte_end":222199,"line_start":78,"line_end":78,"column_start":5,"column_end":91}},{"value":"/ row-by-row.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":222204,"byte_end":222219,"line_start":79,"line_end":79,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":222224,"byte_end":222233,"line_start":80,"line_end":80,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2126},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":223036,"byte_end":223061,"line_start":102,"line_end":102,"column_start":12,"column_end":37},"name":"from_column_slice_generic","qualname":"<MatrixMN<N, R, C>>::from_column_slice_generic","value":"fn (nrows: R, ncols: C, slice: &[N]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a matrix with its elements filled with the components provided by a slice. The\n components must have the same layout as the matrix data storage (i.e. column-major).\n","sig":null,"attributes":[{"value":"/ Creates a matrix with its elements filled with the components provided by a slice. The","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":222827,"byte_end":222917,"line_start":99,"line_end":99,"column_start":5,"column_end":95}},{"value":"/ components must have the same layout as the matrix data storage (i.e. column-major).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":222922,"byte_end":223010,"line_start":100,"line_end":100,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":223015,"byte_end":223024,"line_start":101,"line_end":101,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2127},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":223327,"byte_end":223342,"line_start":109,"line_end":109,"column_start":12,"column_end":27},"name":"from_fn_generic","qualname":"<MatrixMN<N, R, C>>::from_fn_generic","value":"fn <F> (nrows: R, ncols: C, mut f: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a matrix filled with the results of a function applied to each of its component\n coordinates.\n","sig":null,"attributes":[{"value":"/ Creates a matrix filled with the results of a function applied to each of its component","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":223189,"byte_end":223280,"line_start":106,"line_end":106,"column_start":5,"column_end":96}},{"value":"/ coordinates.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":223285,"byte_end":223301,"line_start":107,"line_end":107,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":223306,"byte_end":223315,"line_start":108,"line_end":108,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2129},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":223945,"byte_end":223961,"line_start":129,"line_end":129,"column_start":12,"column_end":28},"name":"identity_generic","qualname":"<MatrixMN<N, R, C>>::identity_generic","value":"fn (nrows: R, ncols: C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new identity matrix.","sig":null,"attributes":[{"value":"/ Creates a new identity matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":223710,"byte_end":223744,"line_start":124,"line_end":124,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":223749,"byte_end":223752,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ If the matrix is not square, the largest square submatrix starting at index `(0, 0)` is set","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":223757,"byte_end":223852,"line_start":126,"line_end":126,"column_start":5,"column_end":100}},{"value":"/ to the identity matrix. All other entries are set to zero.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":223857,"byte_end":223919,"line_start":127,"line_end":127,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":223924,"byte_end":223933,"line_start":128,"line_end":128,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2130},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":224380,"byte_end":224409,"line_start":141,"line_end":141,"column_start":12,"column_end":41},"name":"from_diagonal_element_generic","qualname":"<MatrixMN<N, R, C>>::from_diagonal_element_generic","value":"fn (nrows: R, ncols: C, elt: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new matrix with its diagonal filled with copies of `elt`.","sig":null,"attributes":[{"value":"/ Creates a new matrix with its diagonal filled with copies of `elt`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":224108,"byte_end":224179,"line_start":136,"line_end":136,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":224184,"byte_end":224187,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ If the matrix is not square, the largest square submatrix starting at index `(0, 0)` is set","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":224192,"byte_end":224287,"line_start":138,"line_end":138,"column_start":5,"column_end":100}},{"value":"/ to the identity matrix. All other entries are set to zero.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":224292,"byte_end":224354,"line_start":139,"line_end":139,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":224359,"byte_end":224368,"line_start":140,"line_end":140,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2131},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":224993,"byte_end":225022,"line_start":159,"line_end":159,"column_start":12,"column_end":41},"name":"from_partial_diagonal_generic","qualname":"<MatrixMN<N, R, C>>::from_partial_diagonal_generic","value":"fn (nrows: R, ncols: C, elts: &[N]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new matrix that may be rectangular. The first `elts.len()` diagonal elements are\n filled with the content of `elts`. Others are set to 0.","sig":null,"attributes":[{"value":"/ Creates a new matrix that may be rectangular. The first `elts.len()` diagonal elements are","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":224716,"byte_end":224810,"line_start":154,"line_end":154,"column_start":5,"column_end":99}},{"value":"/ filled with the content of `elts`. Others are set to 0.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":224815,"byte_end":224874,"line_start":155,"line_end":155,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":224879,"byte_end":224882,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ Panics if `elts.len()` is larger than the minimum among `nrows` and `ncols`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":224887,"byte_end":224967,"line_start":157,"line_end":157,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":224972,"byte_end":224981,"line_start":158,"line_end":158,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2132},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":226137,"byte_end":226146,"line_start":193,"line_end":193,"column_start":12,"column_end":21},"name":"from_rows","qualname":"<MatrixMN<N, R, C>>::from_rows","value":"fn <SB> (rows: &[Matrix<N, U1, C, SB>]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a new matrix from its rows.","sig":null,"attributes":[{"value":"/ Builds a new matrix from its rows.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":225461,"byte_end":225499,"line_start":176,"line_end":176,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":225504,"byte_end":225507,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ Panics if not enough rows are provided (for statically-sized matrices), or if all rows do","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":225512,"byte_end":225605,"line_start":178,"line_end":178,"column_start":5,"column_end":98}},{"value":"/ not have the same dimensions.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":225610,"byte_end":225643,"line_start":179,"line_end":179,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":225648,"byte_end":225651,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":225656,"byte_end":225669,"line_start":181,"line_end":181,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":225674,"byte_end":225681,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{RowVector3, Matrix3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":225686,"byte_end":225728,"line_start":183,"line_end":183,"column_start":5,"column_end":47}},{"value":"/ # use std::iter;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":225733,"byte_end":225753,"line_start":184,"line_end":184,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":225758,"byte_end":225761,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix3::from_rows(&[ RowVector3::new(1.0, 2.0, 3.0),  RowVector3::new(4.0, 5.0, 6.0),  RowVector3::new(7.0, 8.0, 9.0) ]);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":225766,"byte_end":225900,"line_start":186,"line_end":186,"column_start":5,"column_end":139}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":225905,"byte_end":225908,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ assert!(m.m11 == 1.0 && m.m12 == 2.0 && m.m13 == 3.0 &&","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":225913,"byte_end":225972,"line_start":188,"line_end":188,"column_start":5,"column_end":64}},{"value":"/         m.m21 == 4.0 && m.m22 == 5.0 && m.m23 == 6.0 &&","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":225977,"byte_end":226036,"line_start":189,"line_end":189,"column_start":5,"column_end":64}},{"value":"/         m.m31 == 7.0 && m.m32 == 8.0 && m.m33 == 9.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":226041,"byte_end":226099,"line_start":190,"line_end":190,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":226104,"byte_end":226111,"line_start":191,"line_end":191,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":226116,"byte_end":226125,"line_start":192,"line_end":192,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2135},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":227602,"byte_end":227614,"line_start":235,"line_end":235,"column_start":12,"column_end":24},"name":"from_columns","qualname":"<MatrixMN<N, R, C>>::from_columns","value":"fn <SB> (columns: &[Vector<N, R, SB>]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a new matrix from its columns.","sig":null,"attributes":[{"value":"/ Builds a new matrix from its columns.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":226926,"byte_end":226967,"line_start":218,"line_end":218,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":226972,"byte_end":226975,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ Panics if not enough columns are provided (for statically-sized matrices), or if all","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":226980,"byte_end":227068,"line_start":220,"line_end":220,"column_start":5,"column_end":93}},{"value":"/ columns do not have the same dimensions.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":227073,"byte_end":227117,"line_start":221,"line_end":221,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":227122,"byte_end":227125,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":227130,"byte_end":227143,"line_start":223,"line_end":223,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":227148,"byte_end":227155,"line_start":224,"line_end":224,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Vector3, Matrix3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":227160,"byte_end":227199,"line_start":225,"line_end":225,"column_start":5,"column_end":44}},{"value":"/ # use std::iter;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":227204,"byte_end":227224,"line_start":226,"line_end":226,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":227229,"byte_end":227232,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix3::from_columns(&[ Vector3::new(1.0, 2.0, 3.0),  Vector3::new(4.0, 5.0, 6.0),  Vector3::new(7.0, 8.0, 9.0) ]);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":227237,"byte_end":227365,"line_start":228,"line_end":228,"column_start":5,"column_end":133}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":227370,"byte_end":227373,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ assert!(m.m11 == 1.0 && m.m12 == 4.0 && m.m13 == 7.0 &&","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":227378,"byte_end":227437,"line_start":230,"line_end":230,"column_start":5,"column_end":64}},{"value":"/         m.m21 == 2.0 && m.m22 == 5.0 && m.m23 == 8.0 &&","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":227442,"byte_end":227501,"line_start":231,"line_end":231,"column_start":5,"column_end":64}},{"value":"/         m.m31 == 3.0 && m.m32 == 6.0 && m.m33 == 9.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":227506,"byte_end":227564,"line_start":232,"line_end":232,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":227569,"byte_end":227576,"line_start":233,"line_end":233,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":227581,"byte_end":227590,"line_start":234,"line_end":234,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2138},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":228512,"byte_end":228530,"line_start":263,"line_end":263,"column_start":12,"column_end":30},"name":"new_random_generic","qualname":"<MatrixMN<N, R, C>>::new_random_generic","value":"fn (nrows: R, ncols: C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a matrix filled with random values.\n","sig":null,"attributes":[{"value":"/ Creates a matrix filled with random values.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":228411,"byte_end":228458,"line_start":260,"line_end":260,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":228463,"byte_end":228472,"line_start":261,"line_end":261,"column_start":5,"column_end":14}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":228477,"byte_end":228500,"line_start":262,"line_end":262,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2140},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":228789,"byte_end":228814,"line_start":272,"line_end":272,"column_start":12,"column_end":37},"name":"from_distribution_generic","qualname":"<MatrixMN<N, R, C>>::from_distribution_generic","value":"fn <Distr, G> (nrows: R, ncols: C, distribution: &Distr, rng: &mut G) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a matrix filled with random values from the given distribution.\n","sig":null,"attributes":[{"value":"/ Creates a matrix filled with random values from the given distribution.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":228688,"byte_end":228763,"line_start":270,"line_end":270,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":228768,"byte_end":228777,"line_start":271,"line_end":271,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2144},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":229704,"byte_end":229720,"line_start":300,"line_end":300,"column_start":12,"column_end":28},"name":"from_vec_generic","qualname":"<MatrixMN<N, R, C>>::from_vec_generic","value":"fn (nrows: R, ncols: C, data: Vec<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a matrix backed by a given `Vec`.","sig":null,"attributes":[{"value":"/ Creates a matrix backed by a given `Vec`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":229057,"byte_end":229102,"line_start":281,"line_end":281,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":229107,"byte_end":229110,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ The output matrix is filled column-by-column.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":229115,"byte_end":229164,"line_start":283,"line_end":283,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":229169,"byte_end":229172,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":229177,"byte_end":229190,"line_start":285,"line_end":285,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":229195,"byte_end":229202,"line_start":286,"line_end":286,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Dynamic, DMatrix, Matrix, U1};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":229207,"byte_end":229258,"line_start":287,"line_end":287,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":229263,"byte_end":229266,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ let vec = vec![0, 1, 2, 3, 4, 5];","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":229271,"byte_end":229308,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/ let vec_ptr = vec.as_ptr();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":229313,"byte_end":229344,"line_start":290,"line_end":290,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":229349,"byte_end":229352,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ let matrix = Matrix::from_vec_generic(Dynamic::new(vec.len()), U1, vec);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":229357,"byte_end":229433,"line_start":292,"line_end":292,"column_start":5,"column_end":81}},{"value":"/ let matrix_storage_ptr = matrix.data.as_vec().as_ptr();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":229438,"byte_end":229497,"line_start":293,"line_end":293,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":229502,"byte_end":229505,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ // `matrix` is backed by exactly the same `Vec` as it was constructed from.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":229510,"byte_end":229589,"line_start":295,"line_end":295,"column_start":5,"column_end":84}},{"value":"/ assert_eq!(matrix_storage_ptr, vec_ptr);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":229594,"byte_end":229638,"line_start":296,"line_end":296,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":229643,"byte_end":229650,"line_start":297,"line_end":297,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":229655,"byte_end":229664,"line_start":298,"line_end":298,"column_start":5,"column_end":14}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":229669,"byte_end":229692,"line_start":299,"line_end":299,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2148},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":230854,"byte_end":230867,"line_start":329,"line_end":329,"column_start":12,"column_end":25},"name":"from_diagonal","qualname":"<MatrixN<N, D>>::from_diagonal","value":"fn <SB> (diag: &Vector<N, D, SB>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a square matrix with its diagonal set to `diag` and all other entries set to 0.","sig":null,"attributes":[{"value":"/ Creates a square matrix with its diagonal set to `diag` and all other entries set to 0.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":229929,"byte_end":230020,"line_start":310,"line_end":310,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":230025,"byte_end":230028,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":230033,"byte_end":230046,"line_start":312,"line_end":312,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":230051,"byte_end":230058,"line_start":313,"line_end":313,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Vector3, DVector, Matrix3, DMatrix};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":230063,"byte_end":230120,"line_start":314,"line_end":314,"column_start":5,"column_end":62}},{"value":"/ # use std::iter;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":230125,"byte_end":230145,"line_start":315,"line_end":315,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":230150,"byte_end":230153,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix3::from_diagonal(&Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":230158,"byte_end":230223,"line_start":317,"line_end":317,"column_start":5,"column_end":70}},{"value":"/ // The two additional arguments represent the matrix dimensions.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":230228,"byte_end":230296,"line_start":318,"line_end":318,"column_start":5,"column_end":73}},{"value":"/ let dm = DMatrix::from_diagonal(&DVector::from_row_slice(&[1.0, 2.0, 3.0]));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":230301,"byte_end":230381,"line_start":319,"line_end":319,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":230386,"byte_end":230389,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ assert!(m.m11 == 1.0 && m.m12 == 0.0 && m.m13 == 0.0 &&","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":230394,"byte_end":230453,"line_start":321,"line_end":321,"column_start":5,"column_end":64}},{"value":"/         m.m21 == 0.0 && m.m22 == 2.0 && m.m23 == 0.0 &&","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":230458,"byte_end":230517,"line_start":322,"line_end":322,"column_start":5,"column_end":64}},{"value":"/         m.m31 == 0.0 && m.m32 == 0.0 && m.m33 == 3.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":230522,"byte_end":230580,"line_start":323,"line_end":323,"column_start":5,"column_end":63}},{"value":"/ assert!(dm[(0, 0)] == 1.0 && dm[(0, 1)] == 0.0 && dm[(0, 2)] == 0.0 &&","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":230585,"byte_end":230659,"line_start":324,"line_end":324,"column_start":5,"column_end":79}},{"value":"/         dm[(1, 0)] == 0.0 && dm[(1, 1)] == 2.0 && dm[(1, 2)] == 0.0 &&","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":230664,"byte_end":230738,"line_start":325,"line_end":325,"column_start":5,"column_end":79}},{"value":"/         dm[(2, 0)] == 0.0 && dm[(2, 1)] == 0.0 && dm[(2, 2)] == 3.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":230743,"byte_end":230816,"line_start":326,"line_end":326,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":230821,"byte_end":230828,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":230833,"byte_end":230842,"line_start":328,"line_end":328,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2187},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":258912,"byte_end":258915,"line_start":1016,"line_end":1016,"column_start":12,"column_end":15},"name":"ith","qualname":"<VectorN<N, R>>::ith","value":"fn (i: usize, val: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The column vector with `val` as its i-th component.\n","sig":null,"attributes":[{"value":"/ The column vector with `val` as its i-th component.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":258831,"byte_end":258886,"line_start":1014,"line_end":1014,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":258891,"byte_end":258900,"line_start":1015,"line_end":1015,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2188},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":259126,"byte_end":259127,"line_start":1024,"line_end":1024,"column_start":12,"column_end":13},"name":"x","qualname":"<VectorN<N, R>>::x","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" The column vector with a 1 as its first component, and zero elsewhere.\n","sig":null,"attributes":[{"value":"/ The column vector with a 1 as its first component, and zero elsewhere.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":259026,"byte_end":259100,"line_start":1022,"line_end":1022,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":259105,"byte_end":259114,"line_start":1023,"line_end":1023,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2189},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":259448,"byte_end":259449,"line_start":1038,"line_end":1038,"column_start":12,"column_end":13},"name":"y","qualname":"<VectorN<N, R>>::y","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" The column vector with a 1 as its second component, and zero elsewhere.\n","sig":null,"attributes":[{"value":"/ The column vector with a 1 as its second component, and zero elsewhere.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":259347,"byte_end":259422,"line_start":1036,"line_end":1036,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":259427,"byte_end":259436,"line_start":1037,"line_end":1037,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2190},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":259769,"byte_end":259770,"line_start":1052,"line_end":1052,"column_start":12,"column_end":13},"name":"z","qualname":"<VectorN<N, R>>::z","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" The column vector with a 1 as its third component, and zero elsewhere.\n","sig":null,"attributes":[{"value":"/ The column vector with a 1 as its third component, and zero elsewhere.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":259669,"byte_end":259743,"line_start":1050,"line_end":1050,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":259748,"byte_end":259757,"line_start":1051,"line_end":1051,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2191},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":260091,"byte_end":260092,"line_start":1066,"line_end":1066,"column_start":12,"column_end":13},"name":"w","qualname":"<VectorN<N, R>>::w","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" The column vector with a 1 as its fourth component, and zero elsewhere.\n","sig":null,"attributes":[{"value":"/ The column vector with a 1 as its fourth component, and zero elsewhere.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":259990,"byte_end":260065,"line_start":1064,"line_end":1064,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":260070,"byte_end":260079,"line_start":1065,"line_end":1065,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2192},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":260412,"byte_end":260413,"line_start":1080,"line_end":1080,"column_start":12,"column_end":13},"name":"a","qualname":"<VectorN<N, R>>::a","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" The column vector with a 1 as its fifth component, and zero elsewhere.\n","sig":null,"attributes":[{"value":"/ The column vector with a 1 as its fifth component, and zero elsewhere.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":260312,"byte_end":260386,"line_start":1078,"line_end":1078,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":260391,"byte_end":260400,"line_start":1079,"line_end":1079,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2193},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":260733,"byte_end":260734,"line_start":1094,"line_end":1094,"column_start":12,"column_end":13},"name":"b","qualname":"<VectorN<N, R>>::b","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" The column vector with a 1 as its sixth component, and zero elsewhere.\n","sig":null,"attributes":[{"value":"/ The column vector with a 1 as its sixth component, and zero elsewhere.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":260633,"byte_end":260707,"line_start":1092,"line_end":1092,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":260712,"byte_end":260721,"line_start":1093,"line_end":1093,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2194},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":261059,"byte_end":261065,"line_start":1108,"line_end":1108,"column_start":12,"column_end":18},"name":"x_axis","qualname":"<VectorN<N, R>>::x_axis","value":"fn () -> Unit<Self>","parent":null,"children":[],"decl_id":null,"docs":" The unit column vector with a 1 as its first component, and zero elsewhere.\n","sig":null,"attributes":[{"value":"/ The unit column vector with a 1 as its first component, and zero elsewhere.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":260954,"byte_end":261033,"line_start":1106,"line_end":1106,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":261038,"byte_end":261047,"line_start":1107,"line_end":1107,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2195},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":261308,"byte_end":261314,"line_start":1117,"line_end":1117,"column_start":12,"column_end":18},"name":"y_axis","qualname":"<VectorN<N, R>>::y_axis","value":"fn () -> Unit<Self>","parent":null,"children":[],"decl_id":null,"docs":" The unit column vector with a 1 as its second component, and zero elsewhere.\n","sig":null,"attributes":[{"value":"/ The unit column vector with a 1 as its second component, and zero elsewhere.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":261202,"byte_end":261282,"line_start":1115,"line_end":1115,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":261287,"byte_end":261296,"line_start":1116,"line_end":1116,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2196},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":261556,"byte_end":261562,"line_start":1126,"line_end":1126,"column_start":12,"column_end":18},"name":"z_axis","qualname":"<VectorN<N, R>>::z_axis","value":"fn () -> Unit<Self>","parent":null,"children":[],"decl_id":null,"docs":" The unit column vector with a 1 as its third component, and zero elsewhere.\n","sig":null,"attributes":[{"value":"/ The unit column vector with a 1 as its third component, and zero elsewhere.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":261451,"byte_end":261530,"line_start":1124,"line_end":1124,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":261535,"byte_end":261544,"line_start":1125,"line_end":1125,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2197},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":261805,"byte_end":261811,"line_start":1135,"line_end":1135,"column_start":12,"column_end":18},"name":"w_axis","qualname":"<VectorN<N, R>>::w_axis","value":"fn () -> Unit<Self>","parent":null,"children":[],"decl_id":null,"docs":" The unit column vector with a 1 as its fourth component, and zero elsewhere.\n","sig":null,"attributes":[{"value":"/ The unit column vector with a 1 as its fourth component, and zero elsewhere.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":261699,"byte_end":261779,"line_start":1133,"line_end":1133,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":261784,"byte_end":261793,"line_start":1134,"line_end":1134,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2198},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":262053,"byte_end":262059,"line_start":1144,"line_end":1144,"column_start":12,"column_end":18},"name":"a_axis","qualname":"<VectorN<N, R>>::a_axis","value":"fn () -> Unit<Self>","parent":null,"children":[],"decl_id":null,"docs":" The unit column vector with a 1 as its fifth component, and zero elsewhere.\n","sig":null,"attributes":[{"value":"/ The unit column vector with a 1 as its fifth component, and zero elsewhere.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":261948,"byte_end":262027,"line_start":1142,"line_end":1142,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":262032,"byte_end":262041,"line_start":1143,"line_end":1143,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2199},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":262301,"byte_end":262307,"line_start":1153,"line_end":1153,"column_start":12,"column_end":18},"name":"b_axis","qualname":"<VectorN<N, R>>::b_axis","value":"fn () -> Unit<Self>","parent":null,"children":[],"decl_id":null,"docs":" The unit column vector with a 1 as its sixth component, and zero elsewhere.\n","sig":null,"attributes":[{"value":"/ The unit column vector with a 1 as its sixth component, and zero elsewhere.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":262196,"byte_end":262275,"line_start":1151,"line_end":1151,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":262280,"byte_end":262289,"line_start":1152,"line_end":1152,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2221},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction_slice.rs","byte_start":263216,"byte_end":263257,"line_start":19,"line_end":19,"column_start":19,"column_end":60},"name":"from_slice_with_strides_generic_unchecked","qualname":"<MatrixSliceMN>::from_slice_with_strides_generic_unchecked","value":"fn (data: &'a [N], start: usize, nrows: R, ncols: C, rstride: RStride, cstride: CStride) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates, without bound-checking, a matrix slice from an array and with dimensions and strides specified by generic types instances.","sig":null,"attributes":[{"value":"/ Creates, without bound-checking, a matrix slice from an array and with dimensions and strides specified by generic types instances.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction_slice.rs","byte_start":262804,"byte_end":262939,"line_start":14,"line_end":14,"column_start":5,"column_end":140}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction_slice.rs","byte_start":262944,"byte_end":262947,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ This method is unsafe because the input data array is not checked to contain enough elements.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction_slice.rs","byte_start":262952,"byte_end":263049,"line_start":16,"line_end":16,"column_start":5,"column_end":102}},{"value":"/ The generic types `R`, `C`, `RStride`, `CStride` can either be type-level integers or integers wrapped with `Dynamic::new()`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction_slice.rs","byte_start":263054,"byte_end":263183,"line_start":17,"line_end":17,"column_start":5,"column_end":134}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction_slice.rs","byte_start":263188,"byte_end":263197,"line_start":18,"line_end":18,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2222},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction_slice.rs","byte_start":263970,"byte_end":264001,"line_start":40,"line_end":40,"column_start":12,"column_end":43},"name":"from_slice_with_strides_generic","qualname":"<MatrixSliceMN>::from_slice_with_strides_generic","value":"fn (data: &'a [N], nrows: R, ncols: C, rstride: RStride, cstride: CStride) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a matrix slice from an array and with dimensions and strides specified by generic types instances.","sig":null,"attributes":[{"value":"/ Creates a matrix slice from an array and with dimensions and strides specified by generic types instances.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction_slice.rs","byte_start":263619,"byte_end":263729,"line_start":35,"line_end":35,"column_start":5,"column_end":115}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction_slice.rs","byte_start":263734,"byte_end":263737,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ Panics if the input data array dose not contain enough elements.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction_slice.rs","byte_start":263742,"byte_end":263810,"line_start":37,"line_end":37,"column_start":5,"column_end":73}},{"value":"/ The generic types `R`, `C`, `RStride`, `CStride` can either be type-level integers or integers wrapped with `Dynamic::new()`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction_slice.rs","byte_start":263815,"byte_end":263944,"line_start":38,"line_end":38,"column_start":5,"column_end":134}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction_slice.rs","byte_start":263949,"byte_end":263958,"line_start":39,"line_end":39,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2230},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction_slice.rs","byte_start":265244,"byte_end":265285,"line_start":70,"line_end":70,"column_start":19,"column_end":60},"name":"from_slice_with_strides_generic_unchecked","qualname":"<MatrixSliceMutMN>::from_slice_with_strides_generic_unchecked","value":"fn (data: &'a mut [N], start: usize, nrows: R, ncols: C, rstride: RStride, cstride: CStride) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates, without bound-checking, a mutable matrix slice from an array and with dimensions and strides specified by generic types instances.","sig":null,"attributes":[{"value":"/ Creates, without bound-checking, a mutable matrix slice from an array and with dimensions and strides specified by generic types instances.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction_slice.rs","byte_start":264824,"byte_end":264967,"line_start":65,"line_end":65,"column_start":5,"column_end":148}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction_slice.rs","byte_start":264972,"byte_end":264975,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ This method is unsafe because the input data array is not checked to contain enough elements.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction_slice.rs","byte_start":264980,"byte_end":265077,"line_start":67,"line_end":67,"column_start":5,"column_end":102}},{"value":"/ The generic types `R`, `C`, `RStride`, `CStride` can either be type-level integers or integers wrapped with `Dynamic::new()`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction_slice.rs","byte_start":265082,"byte_end":265211,"line_start":68,"line_end":68,"column_start":5,"column_end":134}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction_slice.rs","byte_start":265216,"byte_end":265225,"line_start":69,"line_end":69,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2231},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction_slice.rs","byte_start":266017,"byte_end":266048,"line_start":91,"line_end":91,"column_start":12,"column_end":43},"name":"from_slice_with_strides_generic","qualname":"<MatrixSliceMutMN>::from_slice_with_strides_generic","value":"fn (data: &'a mut [N], nrows: R, ncols: C, rstride: RStride, cstride: CStride) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a mutable matrix slice from an array and with dimensions and strides specified by generic types instances.","sig":null,"attributes":[{"value":"/ Creates a mutable matrix slice from an array and with dimensions and strides specified by generic types instances.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction_slice.rs","byte_start":265658,"byte_end":265776,"line_start":86,"line_end":86,"column_start":5,"column_end":123}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction_slice.rs","byte_start":265781,"byte_end":265784,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ Panics if the input data array dose not contain enough elements.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction_slice.rs","byte_start":265789,"byte_end":265857,"line_start":88,"line_end":88,"column_start":5,"column_end":73}},{"value":"/ The generic types `R`, `C`, `RStride`, `CStride` can either be type-level integers or integers wrapped with `Dynamic::new()`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction_slice.rs","byte_start":265862,"byte_end":265991,"line_start":89,"line_end":89,"column_start":5,"column_end":134}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction_slice.rs","byte_start":265996,"byte_end":266005,"line_start":90,"line_end":90,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2237},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction_slice.rs","byte_start":268231,"byte_end":268259,"line_start":141,"line_end":141,"column_start":19,"column_end":47},"name":"from_slice_generic_unchecked","qualname":"<MatrixSliceMN>::from_slice_generic_unchecked","value":"fn (data: &'a [N], start: usize, nrows: R, ncols: C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates, without bound-checking, a matrix slice from an array and with dimensions specified by generic types instances.","sig":null,"attributes":[{"value":"/ Creates, without bound-checking, a matrix slice from an array and with dimensions specified by generic types instances.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction_slice.rs","byte_start":267850,"byte_end":267973,"line_start":136,"line_end":136,"column_start":5,"column_end":128}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction_slice.rs","byte_start":267978,"byte_end":267981,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ This method is unsafe because the input data array is not checked to contain enough elements.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction_slice.rs","byte_start":267986,"byte_end":268083,"line_start":138,"line_end":138,"column_start":5,"column_end":102}},{"value":"/ The generic types `R` and `C` can either be type-level integers or integers wrapped with `Dynamic::new()`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction_slice.rs","byte_start":268088,"byte_end":268198,"line_start":139,"line_end":139,"column_start":5,"column_end":115}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction_slice.rs","byte_start":268203,"byte_end":268212,"line_start":140,"line_end":140,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2238},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction_slice.rs","byte_start":268795,"byte_end":268813,"line_start":155,"line_end":155,"column_start":12,"column_end":30},"name":"from_slice_generic","qualname":"<MatrixSliceMN>::from_slice_generic","value":"fn (data: &'a [N], nrows: R, ncols: C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a matrix slice from an array and with dimensions and strides specified by generic types instances.","sig":null,"attributes":[{"value":"/ Creates a matrix slice from an array and with dimensions and strides specified by generic types instances.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction_slice.rs","byte_start":268463,"byte_end":268573,"line_start":150,"line_end":150,"column_start":5,"column_end":115}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction_slice.rs","byte_start":268578,"byte_end":268581,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ Panics if the input data array dose not contain enough elements.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction_slice.rs","byte_start":268586,"byte_end":268654,"line_start":152,"line_end":152,"column_start":5,"column_end":73}},{"value":"/ The generic types `R` and `C` can either be type-level integers or integers wrapped with `Dynamic::new()`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction_slice.rs","byte_start":268659,"byte_end":268769,"line_start":153,"line_end":153,"column_start":5,"column_end":115}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction_slice.rs","byte_start":268774,"byte_end":268783,"line_start":154,"line_end":154,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2244},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction_slice.rs","byte_start":269406,"byte_end":269434,"line_start":166,"line_end":166,"column_start":19,"column_end":47},"name":"from_slice_generic_unchecked","qualname":"<MatrixSliceMutMN>::from_slice_generic_unchecked","value":"fn (data: &'a mut [N], start: usize, nrows: R, ncols: C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates, without bound-checking, a mutable matrix slice from an array and with dimensions specified by generic types instances.","sig":null,"attributes":[{"value":"/ Creates, without bound-checking, a mutable matrix slice from an array and with dimensions specified by generic types instances.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction_slice.rs","byte_start":269017,"byte_end":269148,"line_start":161,"line_end":161,"column_start":5,"column_end":136}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction_slice.rs","byte_start":269153,"byte_end":269156,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ This method is unsafe because the input data array is not checked to contain enough elements.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction_slice.rs","byte_start":269161,"byte_end":269258,"line_start":163,"line_end":163,"column_start":5,"column_end":102}},{"value":"/ The generic types `R` and `C` can either be type-level integers or integers wrapped with `Dynamic::new()`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction_slice.rs","byte_start":269263,"byte_end":269373,"line_start":164,"line_end":164,"column_start":5,"column_end":115}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction_slice.rs","byte_start":269378,"byte_end":269387,"line_start":165,"line_end":165,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2245},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction_slice.rs","byte_start":269982,"byte_end":270000,"line_start":180,"line_end":180,"column_start":12,"column_end":30},"name":"from_slice_generic","qualname":"<MatrixSliceMutMN>::from_slice_generic","value":"fn (data: &'a mut [N], nrows: R, ncols: C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a mutable matrix slice from an array and with dimensions and strides specified by generic types instances.","sig":null,"attributes":[{"value":"/ Creates a mutable matrix slice from an array and with dimensions and strides specified by generic types instances.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction_slice.rs","byte_start":269642,"byte_end":269760,"line_start":175,"line_end":175,"column_start":5,"column_end":123}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction_slice.rs","byte_start":269765,"byte_end":269768,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ Panics if the input data array dose not contain enough elements.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction_slice.rs","byte_start":269773,"byte_end":269841,"line_start":177,"line_end":177,"column_start":5,"column_end":73}},{"value":"/ The generic types `R` and `C` can either be type-level integers or integers wrapped with `Dynamic::new()`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction_slice.rs","byte_start":269846,"byte_end":269956,"line_start":178,"line_end":178,"column_start":5,"column_end":115}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction_slice.rs","byte_start":269961,"byte_end":269970,"line_start":179,"line_end":179,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2524},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":298366,"byte_end":298380,"line_start":24,"line_end":24,"column_start":12,"column_end":26},"name":"upper_triangle","qualname":"<Matrix<N, R, C, S>>::upper_triangle","value":"fn (&self) -> MatrixMN<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the upper triangular part of this matrix (including the diagonal).\n","sig":null,"attributes":[{"value":"/ Extracts the upper triangular part of this matrix (including the diagonal).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":298261,"byte_end":298340,"line_start":22,"line_end":22,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":298345,"byte_end":298354,"line_start":23,"line_end":23,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2525},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":298689,"byte_end":298703,"line_start":36,"line_end":36,"column_start":12,"column_end":26},"name":"lower_triangle","qualname":"<Matrix<N, R, C, S>>::lower_triangle","value":"fn (&self) -> MatrixMN<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the lower triangular part of this matrix (including the diagonal).\n","sig":null,"attributes":[{"value":"/ Extracts the lower triangular part of this matrix (including the diagonal).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":298584,"byte_end":298663,"line_start":34,"line_end":34,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":298668,"byte_end":298677,"line_start":35,"line_end":35,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2526},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":299044,"byte_end":299055,"line_start":48,"line_end":48,"column_start":12,"column_end":23},"name":"select_rows","qualname":"<Matrix<N, R, C, S>>::select_rows","value":"fn <'a, I> (&self, irows: I) -> MatrixMN<N, Dynamic, C>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new matrix by extracting the given set of rows from `self`.\n","sig":null,"attributes":[{"value":"/ Creates a new matrix by extracting the given set of rows from `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":298907,"byte_end":298980,"line_start":46,"line_end":46,"column_start":5,"column_end":78}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":298985,"byte_end":299032,"line_start":47,"line_end":47,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2529},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":300313,"byte_end":300327,"line_start":83,"line_end":83,"column_start":12,"column_end":26},"name":"select_columns","qualname":"<Matrix<N, R, C, S>>::select_columns","value":"fn <'a, I> (&self, icols: I) -> MatrixMN<N, R, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new matrix by extracting the given set of columns from `self`.\n","sig":null,"attributes":[{"value":"/ Creates a new matrix by extracting the given set of columns from `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":300173,"byte_end":300249,"line_start":81,"line_end":81,"column_start":5,"column_end":81}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":300254,"byte_end":300301,"line_start":82,"line_end":82,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2537},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":301046,"byte_end":301050,"line_start":105,"line_end":105,"column_start":12,"column_end":16},"name":"fill","qualname":"<Matrix<N, R, C, S>>::fill","value":"fn (&mut self, val: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets all the elements of this matrix to `val`.\n","sig":null,"attributes":[{"value":"/ Sets all the elements of this matrix to `val`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":300970,"byte_end":301020,"line_start":103,"line_end":103,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":301025,"byte_end":301034,"line_start":104,"line_end":104,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2538},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":301233,"byte_end":301251,"line_start":113,"line_end":113,"column_start":12,"column_end":30},"name":"fill_with_identity","qualname":"<Matrix<N, R, C, S>>::fill_with_identity","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Fills `self` with the identity matrix.\n","sig":null,"attributes":[{"value":"/ Fills `self` with the identity matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":301165,"byte_end":301207,"line_start":111,"line_end":111,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":301212,"byte_end":301221,"line_start":112,"line_end":112,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2539},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":301466,"byte_end":301479,"line_start":123,"line_end":123,"column_start":12,"column_end":25},"name":"fill_diagonal","qualname":"<Matrix<N, R, C, S>>::fill_diagonal","value":"fn (&mut self, val: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets all the diagonal elements of this matrix to `val`.\n","sig":null,"attributes":[{"value":"/ Sets all the diagonal elements of this matrix to `val`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":301381,"byte_end":301440,"line_start":121,"line_end":121,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":301445,"byte_end":301454,"line_start":122,"line_end":122,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2540},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":301788,"byte_end":301796,"line_start":134,"line_end":134,"column_start":12,"column_end":20},"name":"fill_row","qualname":"<Matrix<N, R, C, S>>::fill_row","value":"fn (&mut self, i: usize, val: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets all the elements of the selected row to `val`.\n","sig":null,"attributes":[{"value":"/ Sets all the elements of the selected row to `val`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":301707,"byte_end":301762,"line_start":132,"line_end":132,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":301767,"byte_end":301776,"line_start":133,"line_end":133,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2541},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":302108,"byte_end":302119,"line_start":143,"line_end":143,"column_start":12,"column_end":23},"name":"fill_column","qualname":"<Matrix<N, R, C, S>>::fill_column","value":"fn (&mut self, j: usize, val: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets all the elements of the selected column to `val`.\n","sig":null,"attributes":[{"value":"/ Sets all the elements of the selected column to `val`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":302024,"byte_end":302082,"line_start":141,"line_end":141,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":302087,"byte_end":302096,"line_start":142,"line_end":142,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2542},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":302448,"byte_end":302460,"line_start":152,"line_end":152,"column_start":12,"column_end":24},"name":"set_diagonal","qualname":"<Matrix<N, R, C, S>>::set_diagonal","value":"fn <R2, S2> (&mut self, diag: &Vector<N, R2, S2>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Fills the diagonal of this matrix with the content of the given vector.\n","sig":null,"attributes":[{"value":"/ Fills the diagonal of this matrix with the content of the given vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":302347,"byte_end":302422,"line_start":150,"line_end":150,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":302427,"byte_end":302436,"line_start":151,"line_end":151,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2545},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":303278,"byte_end":303298,"line_start":173,"line_end":173,"column_start":12,"column_end":32},"name":"set_partial_diagonal","qualname":"<Matrix<N, R, C, S>>::set_partial_diagonal","value":"fn (&mut self, diag: impl Iterator<Item = N>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Fills the diagonal of this matrix with the content of the given iterator.","sig":null,"attributes":[{"value":"/ Fills the diagonal of this matrix with the content of the given iterator.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":302959,"byte_end":303036,"line_start":167,"line_end":167,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":303041,"byte_end":303044,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ This will fill as many diagonal elements as the iterator yields, up to the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":303049,"byte_end":303127,"line_start":169,"line_end":169,"column_start":5,"column_end":83}},{"value":"/ minimum of the number of rows and columns of `self`, and starting with the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":303132,"byte_end":303210,"line_start":170,"line_end":170,"column_start":5,"column_end":83}},{"value":"/ diagonal element at index (0, 0).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":303215,"byte_end":303252,"line_start":171,"line_end":171,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":303257,"byte_end":303266,"line_start":172,"line_end":172,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2547},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":303693,"byte_end":303700,"line_start":184,"line_end":184,"column_start":12,"column_end":19},"name":"set_row","qualname":"<Matrix<N, R, C, S>>::set_row","value":"fn <C2, S2> (&mut self, i: usize, row: &RowVector<N, C2, S2>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Fills the selected row of this matrix with the content of the given vector.\n","sig":null,"attributes":[{"value":"/ Fills the selected row of this matrix with the content of the given vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":303588,"byte_end":303667,"line_start":182,"line_end":182,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":303672,"byte_end":303681,"line_start":183,"line_end":183,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2550},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":304023,"byte_end":304033,"line_start":194,"line_end":194,"column_start":12,"column_end":22},"name":"set_column","qualname":"<Matrix<N, R, C, S>>::set_column","value":"fn <R2, S2> (&mut self, i: usize, column: &Vector<N, R2, S2>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Fills the selected column of this matrix with the content of the given vector.\n","sig":null,"attributes":[{"value":"/ Fills the selected column of this matrix with the content of the given vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":303915,"byte_end":303997,"line_start":192,"line_end":192,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":304002,"byte_end":304011,"line_start":193,"line_end":193,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2553},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":304681,"byte_end":304700,"line_start":210,"line_end":210,"column_start":12,"column_end":31},"name":"fill_lower_triangle","qualname":"<Matrix<N, R, C, S>>::fill_lower_triangle","value":"fn (&mut self, val: N, shift: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets all the elements of the lower-triangular part of this matrix to `val`.","sig":null,"attributes":[{"value":"/ Sets all the elements of the lower-triangular part of this matrix to `val`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":304251,"byte_end":304330,"line_start":202,"line_end":202,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":304335,"byte_end":304338,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ The parameter `shift` allows some subdiagonals to be left untouched:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":304343,"byte_end":304415,"line_start":204,"line_end":204,"column_start":5,"column_end":77}},{"value":"/ * If `shift = 0` then the diagonal is overwritten as well.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":304420,"byte_end":304482,"line_start":205,"line_end":205,"column_start":5,"column_end":67}},{"value":"/ * If `shift = 1` then the diagonal is left untouched.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":304487,"byte_end":304544,"line_start":206,"line_end":206,"column_start":5,"column_end":62}},{"value":"/ * If `shift > 1`, then the diagonal and the first `shift - 1` subdiagonals are left","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":304549,"byte_end":304636,"line_start":207,"line_end":207,"column_start":5,"column_end":92}},{"value":"/ untouched.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":304641,"byte_end":304655,"line_start":208,"line_end":208,"column_start":5,"column_end":19}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":304660,"byte_end":304669,"line_start":209,"line_end":209,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2554},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":305370,"byte_end":305389,"line_start":226,"line_end":226,"column_start":12,"column_end":31},"name":"fill_upper_triangle","qualname":"<Matrix<N, R, C, S>>::fill_upper_triangle","value":"fn (&mut self, val: N, shift: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets all the elements of the lower-triangular part of this matrix to `val`.","sig":null,"attributes":[{"value":"/ Sets all the elements of the lower-triangular part of this matrix to `val`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":304936,"byte_end":305015,"line_start":218,"line_end":218,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":305020,"byte_end":305023,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ The parameter `shift` allows some superdiagonals to be left untouched:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":305028,"byte_end":305102,"line_start":220,"line_end":220,"column_start":5,"column_end":79}},{"value":"/ * If `shift = 0` then the diagonal is overwritten as well.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":305107,"byte_end":305169,"line_start":221,"line_end":221,"column_start":5,"column_end":67}},{"value":"/ * If `shift = 1` then the diagonal is left untouched.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":305174,"byte_end":305231,"line_start":222,"line_end":222,"column_start":5,"column_end":62}},{"value":"/ * If `shift > 1`, then the diagonal and the first `shift - 1` superdiagonals are left","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":305236,"byte_end":305325,"line_start":223,"line_end":223,"column_start":5,"column_end":94}},{"value":"/ untouched.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":305330,"byte_end":305344,"line_start":224,"line_end":224,"column_start":5,"column_end":19}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":305349,"byte_end":305358,"line_start":225,"line_end":225,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2555},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":305821,"byte_end":305830,"line_start":238,"line_end":238,"column_start":12,"column_end":21},"name":"swap_rows","qualname":"<Matrix<N, R, C, S>>::swap_rows","value":"fn (&mut self, irow1: usize, irow2: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Swaps two rows in-place.\n","sig":null,"attributes":[{"value":"/ Swaps two rows in-place.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":305767,"byte_end":305795,"line_start":236,"line_end":236,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":305800,"byte_end":305809,"line_start":237,"line_end":237,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2556},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":306236,"byte_end":306248,"line_start":252,"line_end":252,"column_start":12,"column_end":24},"name":"swap_columns","qualname":"<Matrix<N, R, C, S>>::swap_columns","value":"fn (&mut self, icol1: usize, icol2: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Swaps two columns in-place.\n","sig":null,"attributes":[{"value":"/ Swaps two columns in-place.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":306179,"byte_end":306210,"line_start":250,"line_end":250,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":306215,"byte_end":306224,"line_start":251,"line_end":251,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2561},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":306839,"byte_end":306878,"line_start":269,"line_end":269,"column_start":12,"column_end":51},"name":"fill_lower_triangle_with_upper_triangle","qualname":"<Matrix<N, D, D, S>>::fill_lower_triangle_with_upper_triangle","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Copies the upper-triangle of this matrix to its lower-triangular part.","sig":null,"attributes":[{"value":"/ Copies the upper-triangle of this matrix to its lower-triangular part.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":306668,"byte_end":306742,"line_start":266,"line_end":266,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":306747,"byte_end":306750,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ This makes the matrix symmetric. Panics if the matrix is not square.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":306755,"byte_end":306827,"line_start":268,"line_end":268,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2562},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":307405,"byte_end":307444,"line_start":285,"line_end":285,"column_start":12,"column_end":51},"name":"fill_upper_triangle_with_lower_triangle","qualname":"<Matrix<N, D, D, S>>::fill_upper_triangle_with_lower_triangle","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Copies the upper-triangle of this matrix to its upper-triangular part.","sig":null,"attributes":[{"value":"/ Copies the upper-triangle of this matrix to its upper-triangular part.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":307234,"byte_end":307308,"line_start":282,"line_end":282,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":307313,"byte_end":307316,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ This makes the matrix symmetric. Panics if the matrix is not square.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":307321,"byte_end":307393,"line_start":284,"line_end":284,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2568},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":308036,"byte_end":308049,"line_start":311,"line_end":311,"column_start":12,"column_end":25},"name":"remove_column","qualname":"<Matrix<N, R, C, S>>::remove_column","value":"fn (self, i: usize) -> MatrixMN<N, R, DimDiff<C, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Removes the `i`-th column from this matrix.\n","sig":null,"attributes":[{"value":"/ Removes the `i`-th column from this matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":307963,"byte_end":308010,"line_start":309,"line_end":309,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":308015,"byte_end":308024,"line_start":310,"line_end":310,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2569},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":308363,"byte_end":308380,"line_start":321,"line_end":321,"column_start":12,"column_end":29},"name":"remove_columns_at","qualname":"<Matrix<N, R, C, S>>::remove_columns_at","value":"fn (self, indices: &[usize]) -> MatrixMN<N, R, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Removes all columns in `indices`   \n","sig":null,"attributes":[{"value":"/ Removes all columns in `indices`   ","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":308260,"byte_end":308299,"line_start":319,"line_end":319,"column_start":5,"column_end":44}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":308304,"byte_end":308351,"line_start":320,"line_end":320,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2570},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":309630,"byte_end":309644,"line_start":358,"line_end":358,"column_start":12,"column_end":26},"name":"remove_rows_at","qualname":"<Matrix<N, R, C, S>>::remove_rows_at","value":"fn (self, indices: &[usize]) -> MatrixMN<N, Dynamic, C>","parent":null,"children":[],"decl_id":null,"docs":" Removes all rows in `indices`   \n","sig":null,"attributes":[{"value":"/ Removes all rows in `indices`   ","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":309530,"byte_end":309566,"line_start":356,"line_end":356,"column_start":5,"column_end":41}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":309571,"byte_end":309618,"line_start":357,"line_end":357,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2571},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":310852,"byte_end":310872,"line_start":393,"line_end":393,"column_start":12,"column_end":32},"name":"remove_fixed_columns","qualname":"<Matrix<N, R, C, S>>::remove_fixed_columns","value":"fn <D> (self, i: usize) -> MatrixMN<N, R, DimDiff<C, D>>","parent":null,"children":[],"decl_id":null,"docs":" Removes `D::dim()` consecutive columns from this matrix, starting with the `i`-th\n (included).\n","sig":null,"attributes":[{"value":"/ Removes `D::dim()` consecutive columns from this matrix, starting with the `i`-th","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":310721,"byte_end":310806,"line_start":390,"line_end":390,"column_start":5,"column_end":90}},{"value":"/ (included).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":310811,"byte_end":310826,"line_start":391,"line_end":391,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":310831,"byte_end":310840,"line_start":392,"line_end":392,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2573},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":311278,"byte_end":311292,"line_start":405,"line_end":405,"column_start":12,"column_end":26},"name":"remove_columns","qualname":"<Matrix<N, R, C, S>>::remove_columns","value":"fn (self, i: usize, n: usize) -> MatrixMN<N, R, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Removes `n` consecutive columns from this matrix, starting with the `i`-th (included).\n","sig":null,"attributes":[{"value":"/ Removes `n` consecutive columns from this matrix, starting with the `i`-th (included).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":311110,"byte_end":311200,"line_start":402,"line_end":402,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":311205,"byte_end":311214,"line_start":403,"line_end":403,"column_start":5,"column_end":14}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":311219,"byte_end":311266,"line_start":404,"line_end":404,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2574},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":311804,"byte_end":311826,"line_start":418,"line_end":418,"column_start":12,"column_end":34},"name":"remove_columns_generic","qualname":"<Matrix<N, R, C, S>>::remove_columns_generic","value":"fn <D> (self, i: usize, nremove: D) -> MatrixMN<N, R, DimDiff<C, D>>","parent":null,"children":[],"decl_id":null,"docs":" Removes `nremove.value()` columns from this matrix, starting with the `i`-th (included).","sig":null,"attributes":[{"value":"/ Removes `nremove.value()` columns from this matrix, starting with the `i`-th (included).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":311535,"byte_end":311627,"line_start":413,"line_end":413,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":311632,"byte_end":311635,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ This is the generic implementation of `.remove_columns(...)` and","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":311640,"byte_end":311708,"line_start":415,"line_end":415,"column_start":5,"column_end":73}},{"value":"/ `.remove_fixed_columns(...)` which have nicer API interfaces.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":311713,"byte_end":311778,"line_start":416,"line_end":416,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":311783,"byte_end":311792,"line_start":417,"line_end":417,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2576},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":313201,"byte_end":313211,"line_start":466,"line_end":466,"column_start":12,"column_end":22},"name":"remove_row","qualname":"<Matrix<N, R, C, S>>::remove_row","value":"fn (self, i: usize) -> MatrixMN<N, DimDiff<R, U1>, C>","parent":null,"children":[],"decl_id":null,"docs":" Removes the `i`-th row from this matrix.\n","sig":null,"attributes":[{"value":"/ Removes the `i`-th row from this matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":313131,"byte_end":313175,"line_start":464,"line_end":464,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":313180,"byte_end":313189,"line_start":465,"line_end":465,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2577},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":313539,"byte_end":313556,"line_start":476,"line_end":476,"column_start":12,"column_end":29},"name":"remove_fixed_rows","qualname":"<Matrix<N, R, C, S>>::remove_fixed_rows","value":"fn <D> (self, i: usize) -> MatrixMN<N, DimDiff<R, D>, C>","parent":null,"children":[],"decl_id":null,"docs":" Removes `D::dim()` consecutive rows from this matrix, starting with the `i`-th (included).\n","sig":null,"attributes":[{"value":"/ Removes `D::dim()` consecutive rows from this matrix, starting with the `i`-th (included).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":313419,"byte_end":313513,"line_start":474,"line_end":474,"column_start":5,"column_end":99}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":313518,"byte_end":313527,"line_start":475,"line_end":475,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2579},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":313956,"byte_end":313967,"line_start":488,"line_end":488,"column_start":12,"column_end":23},"name":"remove_rows","qualname":"<Matrix<N, R, C, S>>::remove_rows","value":"fn (self, i: usize, n: usize) -> MatrixMN<N, Dynamic, C>","parent":null,"children":[],"decl_id":null,"docs":" Removes `n` consecutive rows from this matrix, starting with the `i`-th (included).\n","sig":null,"attributes":[{"value":"/ Removes `n` consecutive rows from this matrix, starting with the `i`-th (included).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":313791,"byte_end":313878,"line_start":485,"line_end":485,"column_start":5,"column_end":92}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":313883,"byte_end":313892,"line_start":486,"line_end":486,"column_start":5,"column_end":14}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":313897,"byte_end":313944,"line_start":487,"line_end":487,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2580},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":314467,"byte_end":314486,"line_start":501,"line_end":501,"column_start":12,"column_end":31},"name":"remove_rows_generic","qualname":"<Matrix<N, R, C, S>>::remove_rows_generic","value":"fn <D> (self, i: usize, nremove: D) -> MatrixMN<N, DimDiff<R, D>, C>","parent":null,"children":[],"decl_id":null,"docs":" Removes `nremove.value()` rows from this matrix, starting with the `i`-th (included).","sig":null,"attributes":[{"value":"/ Removes `nremove.value()` rows from this matrix, starting with the `i`-th (included).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":314207,"byte_end":314296,"line_start":496,"line_end":496,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":314301,"byte_end":314304,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ This is the generic implementation of `.remove_rows(...)` and `.remove_fixed_rows(...)`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":314309,"byte_end":314400,"line_start":498,"line_end":498,"column_start":5,"column_end":96}},{"value":"/ which have nicer API interfaces.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":314405,"byte_end":314441,"line_start":499,"line_end":499,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":314446,"byte_end":314455,"line_start":500,"line_end":500,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2582},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":315524,"byte_end":315537,"line_start":542,"line_end":542,"column_start":12,"column_end":25},"name":"insert_column","qualname":"<Matrix<N, R, C, S>>::insert_column","value":"fn (self, i: usize, val: N) -> MatrixMN<N, R, DimSum<C, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Inserts a column filled with `val` at the `i-th` position.\n","sig":null,"attributes":[{"value":"/ Inserts a column filled with `val` at the `i-th` position.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":315436,"byte_end":315498,"line_start":540,"line_end":540,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":315503,"byte_end":315512,"line_start":541,"line_end":541,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2583},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":315866,"byte_end":315886,"line_start":552,"line_end":552,"column_start":12,"column_end":32},"name":"insert_fixed_columns","qualname":"<Matrix<N, R, C, S>>::insert_fixed_columns","value":"fn <D> (self, i: usize, val: N) -> MatrixMN<N, R, DimSum<C, D>>","parent":null,"children":[],"decl_id":null,"docs":" Inserts `D::dim()` columns filled with `val` starting at the `i-th` position.\n","sig":null,"attributes":[{"value":"/ Inserts `D::dim()` columns filled with `val` starting at the `i-th` position.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":315759,"byte_end":315840,"line_start":550,"line_end":550,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":315845,"byte_end":315854,"line_start":551,"line_end":551,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2585},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":316383,"byte_end":316397,"line_start":566,"line_end":566,"column_start":12,"column_end":26},"name":"insert_columns","qualname":"<Matrix<N, R, C, S>>::insert_columns","value":"fn (self, i: usize, n: usize, val: N) -> MatrixMN<N, R, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Inserts `n` columns filled with `val` starting at the `i-th` position.\n","sig":null,"attributes":[{"value":"/ Inserts `n` columns filled with `val` starting at the `i-th` position.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":316231,"byte_end":316305,"line_start":563,"line_end":563,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":316310,"byte_end":316319,"line_start":564,"line_end":564,"column_start":5,"column_end":14}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":316324,"byte_end":316371,"line_start":565,"line_end":565,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2586},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":316917,"byte_end":316953,"line_start":580,"line_end":580,"column_start":19,"column_end":55},"name":"insert_columns_generic_uninitialized","qualname":"<Matrix<N, R, C, S>>::insert_columns_generic_uninitialized","value":"fn <D> (self, i: usize, ninsert: D) -> MatrixMN<N, R, DimSum<C, D>>","parent":null,"children":[],"decl_id":null,"docs":" Inserts `ninsert.value()` columns starting at the `i-th` place of this matrix.","sig":null,"attributes":[{"value":"/ Inserts `ninsert.value()` columns starting at the `i-th` place of this matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":316741,"byte_end":316823,"line_start":576,"line_end":576,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":316828,"byte_end":316831,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ The added column values are not initialized.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":316836,"byte_end":316884,"line_start":578,"line_end":578,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":316889,"byte_end":316898,"line_start":579,"line_end":579,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2588},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":318020,"byte_end":318030,"line_start":620,"line_end":620,"column_start":12,"column_end":22},"name":"insert_row","qualname":"<Matrix<N, R, C, S>>::insert_row","value":"fn (self, i: usize, val: N) -> MatrixMN<N, DimSum<R, U1>, C>","parent":null,"children":[],"decl_id":null,"docs":" Inserts a row filled with `val` at the `i-th` position.\n","sig":null,"attributes":[{"value":"/ Inserts a row filled with `val` at the `i-th` position.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":317935,"byte_end":317994,"line_start":618,"line_end":618,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":317999,"byte_end":318008,"line_start":619,"line_end":619,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2589},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":318353,"byte_end":318370,"line_start":630,"line_end":630,"column_start":12,"column_end":29},"name":"insert_fixed_rows","qualname":"<Matrix<N, R, C, S>>::insert_fixed_rows","value":"fn <D> (self, i: usize, val: N) -> MatrixMN<N, DimSum<R, D>, C>","parent":null,"children":[],"decl_id":null,"docs":" Inserts `D::dim()` rows filled with `val` starting at the `i-th` position.\n","sig":null,"attributes":[{"value":"/ Inserts `D::dim()` rows filled with `val` starting at the `i-th` position.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":318249,"byte_end":318327,"line_start":628,"line_end":628,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":318332,"byte_end":318341,"line_start":629,"line_end":629,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2591},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":318858,"byte_end":318869,"line_start":644,"line_end":644,"column_start":12,"column_end":23},"name":"insert_rows","qualname":"<Matrix<N, R, C, S>>::insert_rows","value":"fn (self, i: usize, n: usize, val: N) -> MatrixMN<N, Dynamic, C>","parent":null,"children":[],"decl_id":null,"docs":" Inserts `n` rows filled with `val` starting at the `i-th` position.\n","sig":null,"attributes":[{"value":"/ Inserts `n` rows filled with `val` starting at the `i-th` position.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":318709,"byte_end":318780,"line_start":641,"line_end":641,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":318785,"byte_end":318794,"line_start":642,"line_end":642,"column_start":5,"column_end":14}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":318799,"byte_end":318846,"line_start":643,"line_end":643,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2592},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":319506,"byte_end":319539,"line_start":660,"line_end":660,"column_start":19,"column_end":52},"name":"insert_rows_generic_uninitialized","qualname":"<Matrix<N, R, C, S>>::insert_rows_generic_uninitialized","value":"fn <D> (self, i: usize, ninsert: D) -> MatrixMN<N, DimSum<R, D>, C>","parent":null,"children":[],"decl_id":null,"docs":" Inserts `ninsert.value()` rows at the `i-th` place of this matrix.","sig":null,"attributes":[{"value":"/ Inserts `ninsert.value()` rows at the `i-th` place of this matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":319207,"byte_end":319277,"line_start":654,"line_end":654,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":319282,"byte_end":319285,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ The added rows values are not initialized.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":319290,"byte_end":319336,"line_start":656,"line_end":656,"column_start":5,"column_end":51}},{"value":"/ This is the generic implementation of `.insert_rows(...)` and","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":319341,"byte_end":319406,"line_start":657,"line_end":657,"column_start":5,"column_end":70}},{"value":"/ `.insert_fixed_rows(...)` which have nicer API interfaces.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":319411,"byte_end":319473,"line_start":658,"line_end":658,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":319478,"byte_end":319487,"line_start":659,"line_end":659,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2594},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":320731,"byte_end":320737,"line_start":704,"line_end":704,"column_start":12,"column_end":18},"name":"resize","qualname":"<Matrix<N, R, C, S>>::resize","value":"fn (self, new_nrows: usize, new_ncols: usize, val: N) -> DMatrix<N>","parent":null,"children":[],"decl_id":null,"docs":" Resizes this matrix so that it contains `new_nrows` rows and `new_ncols` columns.","sig":null,"attributes":[{"value":"/ Resizes this matrix so that it contains `new_nrows` rows and `new_ncols` columns.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":320382,"byte_end":320467,"line_start":699,"line_end":699,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":320472,"byte_end":320475,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ The values are copied such that `self[(i, j)] == result[(i, j)]`. If the result has more","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":320480,"byte_end":320572,"line_start":701,"line_end":701,"column_start":5,"column_end":97}},{"value":"/ rows and/or columns than `self`, then the extra rows or columns are filled with `val`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":320577,"byte_end":320667,"line_start":702,"line_end":702,"column_start":5,"column_end":95}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":320672,"byte_end":320719,"line_start":703,"line_end":703,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2595},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":321336,"byte_end":321353,"line_start":716,"line_end":716,"column_start":12,"column_end":29},"name":"resize_vertically","qualname":"<Matrix<N, R, C, S>>::resize_vertically","value":"fn (self, new_nrows: usize, val: N) -> MatrixMN<N, Dynamic, C>","parent":null,"children":[],"decl_id":null,"docs":" Resizes this matrix vertically, i.e., so that it contains `new_nrows` rows while keeping the same number of columns.","sig":null,"attributes":[{"value":"/ Resizes this matrix vertically, i.e., so that it contains `new_nrows` rows while keeping the same number of columns.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":320978,"byte_end":321098,"line_start":711,"line_end":711,"column_start":5,"column_end":125}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":321103,"byte_end":321106,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ The values are copied such that `self[(i, j)] == result[(i, j)]`. If the result has more","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":321111,"byte_end":321203,"line_start":713,"line_end":713,"column_start":5,"column_end":97}},{"value":"/ rows than `self`, then the extra rows are filled with `val`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":321208,"byte_end":321272,"line_start":714,"line_end":714,"column_start":5,"column_end":69}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":321277,"byte_end":321324,"line_start":715,"line_end":715,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2596},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":321978,"byte_end":321997,"line_start":729,"line_end":729,"column_start":12,"column_end":31},"name":"resize_horizontally","qualname":"<Matrix<N, R, C, S>>::resize_horizontally","value":"fn (self, new_ncols: usize, val: N) -> MatrixMN<N, R, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Resizes this matrix horizontally, i.e., so that it contains `new_ncolumns` columns while keeping the same number of columns.","sig":null,"attributes":[{"value":"/ Resizes this matrix horizontally, i.e., so that it contains `new_ncolumns` columns while keeping the same number of columns.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":321606,"byte_end":321734,"line_start":724,"line_end":724,"column_start":5,"column_end":133}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":321739,"byte_end":321742,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ The values are copied such that `self[(i, j)] == result[(i, j)]`. If the result has more","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":321747,"byte_end":321839,"line_start":726,"line_end":726,"column_start":5,"column_end":97}},{"value":"/ columns than `self`, then the extra columns are filled with `val`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":321844,"byte_end":321914,"line_start":727,"line_end":727,"column_start":5,"column_end":75}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":321919,"byte_end":321966,"line_start":728,"line_end":728,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2597},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":322551,"byte_end":322563,"line_start":741,"line_end":741,"column_start":12,"column_end":24},"name":"fixed_resize","qualname":"<Matrix<N, R, C, S>>::fixed_resize","value":"fn <R2, C2> (self, val: N) -> MatrixMN<N, R2, C2>","parent":null,"children":[],"decl_id":null,"docs":" Resizes this matrix so that it contains `R2::value()` rows and `C2::value()` columns.","sig":null,"attributes":[{"value":"/ Resizes this matrix so that it contains `R2::value()` rows and `C2::value()` columns.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":322250,"byte_end":322339,"line_start":737,"line_end":737,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":322344,"byte_end":322347,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/ The values are copied such that `self[(i, j)] == result[(i, j)]`. If the result has more","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":322352,"byte_end":322444,"line_start":739,"line_end":739,"column_start":5,"column_end":97}},{"value":"/ rows and/or columns than `self`, then the extra rows or columns are filled with `val`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":322449,"byte_end":322539,"line_start":740,"line_end":740,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":2600},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":323065,"byte_end":323079,"line_start":753,"line_end":753,"column_start":12,"column_end":26},"name":"resize_generic","qualname":"<Matrix<N, R, C, S>>::resize_generic","value":"fn <R2, C2> (self, new_nrows: R2, new_ncols: C2, val: N) -> MatrixMN<N, R2, C2>","parent":null,"children":[],"decl_id":null,"docs":" Resizes `self` such that it has dimensions `new_nrows × now_ncols`.","sig":null,"attributes":[{"value":"/ Resizes `self` such that it has dimensions `new_nrows × now_ncols`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":322767,"byte_end":322839,"line_start":748,"line_end":748,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":322844,"byte_end":322847,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ The values are copied such that `self[(i, j)] == result[(i, j)]`. If the result has more","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":322852,"byte_end":322944,"line_start":750,"line_end":750,"column_start":5,"column_end":97}},{"value":"/ rows and/or columns than `self`, then the extra rows or columns are filled with `val`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":322949,"byte_end":323039,"line_start":751,"line_end":751,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":323044,"byte_end":323053,"line_start":752,"line_end":752,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2605},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":325440,"byte_end":325450,"line_start":824,"line_end":824,"column_start":12,"column_end":22},"name":"resize_mut","qualname":"<DMatrix<N>>::resize_mut","value":"fn (&mut self, new_nrows: usize, new_ncols: usize, val: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Resizes this matrix in-place.","sig":null,"attributes":[{"value":"/ Resizes this matrix in-place.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":325115,"byte_end":325148,"line_start":818,"line_end":818,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":325153,"byte_end":325156,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ The values are copied such that `self[(i, j)] == result[(i, j)]`. If the result has more","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":325161,"byte_end":325253,"line_start":820,"line_end":820,"column_start":5,"column_end":97}},{"value":"/ rows and/or columns than `self`, then the extra rows or columns are filled with `val`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":325258,"byte_end":325348,"line_start":821,"line_end":821,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":325353,"byte_end":325356,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/ Defined only for owned fully-dynamic matrices, i.e., `DMatrix`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":325361,"byte_end":325428,"line_start":823,"line_end":823,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2609},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":326379,"byte_end":326400,"line_start":847,"line_end":847,"column_start":12,"column_end":33},"name":"resize_vertically_mut","qualname":"<MatrixMN<N, Dynamic, C>>::resize_vertically_mut","value":"fn (&mut self, new_nrows: usize, val: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Changes the number of rows of this matrix in-place.","sig":null,"attributes":[{"value":"/ Changes the number of rows of this matrix in-place.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":325982,"byte_end":326037,"line_start":840,"line_end":840,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":326042,"byte_end":326045,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ The values are copied such that `self[(i, j)] == result[(i, j)]`. If the result has more","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":326050,"byte_end":326142,"line_start":842,"line_end":842,"column_start":5,"column_end":97}},{"value":"/ rows than `self`, then the extra rows are filled with `val`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":326147,"byte_end":326211,"line_start":843,"line_end":843,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":326216,"byte_end":326219,"line_start":844,"line_end":844,"column_start":5,"column_end":8}},{"value":"/ Defined only for owned matrices with a dynamic number of rows (for example, `DVector`).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":326224,"byte_end":326315,"line_start":845,"line_end":845,"column_start":5,"column_end":96}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":326320,"byte_end":326367,"line_start":846,"line_end":846,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2613},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":327362,"byte_end":327385,"line_start":871,"line_end":871,"column_start":12,"column_end":35},"name":"resize_horizontally_mut","qualname":"<MatrixMN<N, R, Dynamic>>::resize_horizontally_mut","value":"fn (&mut self, new_ncols: usize, val: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Changes the number of column of this matrix in-place.","sig":null,"attributes":[{"value":"/ Changes the number of column of this matrix in-place.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":326954,"byte_end":327011,"line_start":864,"line_end":864,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":327016,"byte_end":327019,"line_start":865,"line_end":865,"column_start":5,"column_end":8}},{"value":"/ The values are copied such that `self[(i, j)] == result[(i, j)]`. If the result has more","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":327024,"byte_end":327116,"line_start":866,"line_end":866,"column_start":5,"column_end":97}},{"value":"/ columns than `self`, then the extra columns are filled with `val`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":327121,"byte_end":327191,"line_start":867,"line_end":867,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":327196,"byte_end":327199,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ Defined only for owned matrices with a dynamic number of columns (for example, `DVector`).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":327204,"byte_end":327298,"line_start":869,"line_end":869,"column_start":5,"column_end":99}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":327303,"byte_end":327350,"line_start":870,"line_end":870,"column_start":5,"column_end":52}}]},{"kind":"Mod","id":{"krate":0,"index":2637},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"indexing","qualname":"::base::indexing","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","parent":null,"children":[{"krate":0,"index":2638},{"krate":0,"index":2641},{"krate":0,"index":2652},{"krate":0,"index":2653},{"krate":0,"index":2659},{"krate":0,"index":2665},{"krate":0,"index":2671},{"krate":0,"index":2677},{"krate":0,"index":2684},{"krate":0,"index":2690},{"krate":0,"index":2696},{"krate":0,"index":2702},{"krate":0,"index":2708},{"krate":0,"index":2719},{"krate":0,"index":2729},{"krate":0,"index":2752},{"krate":0,"index":2761},{"krate":0,"index":2769},{"krate":0,"index":2778},{"krate":0,"index":2786},{"krate":0,"index":2787},{"krate":0,"index":15772},{"krate":0,"index":15782},{"krate":0,"index":15791},{"krate":0,"index":15801},{"krate":0,"index":15810},{"krate":0,"index":15820},{"krate":0,"index":15829},{"krate":0,"index":15839},{"krate":0,"index":15848},{"krate":0,"index":15858},{"krate":0,"index":15867},{"krate":0,"index":15877},{"krate":0,"index":15886},{"krate":0,"index":15897},{"krate":0,"index":15907},{"krate":0,"index":15917},{"krate":0,"index":15926},{"krate":0,"index":15936},{"krate":0,"index":15945},{"krate":0,"index":15955},{"krate":0,"index":15964},{"krate":0,"index":15974},{"krate":0,"index":15983},{"krate":0,"index":15993},{"krate":0,"index":16002},{"krate":0,"index":16012},{"krate":0,"index":16021},{"krate":0,"index":16031},{"krate":0,"index":16040},{"krate":0,"index":16051},{"krate":0,"index":16061},{"krate":0,"index":16071},{"krate":0,"index":16080},{"krate":0,"index":16090},{"krate":0,"index":16099},{"krate":0,"index":16109},{"krate":0,"index":16118},{"krate":0,"index":16128},{"krate":0,"index":16137},{"krate":0,"index":16147},{"krate":0,"index":16156},{"krate":0,"index":16166},{"krate":0,"index":16175},{"krate":0,"index":16185},{"krate":0,"index":16194},{"krate":0,"index":16205},{"krate":0,"index":16215},{"krate":0,"index":16225},{"krate":0,"index":16234},{"krate":0,"index":16244},{"krate":0,"index":16253},{"krate":0,"index":16263},{"krate":0,"index":16272},{"krate":0,"index":16282},{"krate":0,"index":16291},{"krate":0,"index":16301},{"krate":0,"index":16310},{"krate":0,"index":16320},{"krate":0,"index":16329},{"krate":0,"index":16339},{"krate":0,"index":16348},{"krate":0,"index":16359},{"krate":0,"index":16369},{"krate":0,"index":16379},{"krate":0,"index":16388},{"krate":0,"index":16398},{"krate":0,"index":16407},{"krate":0,"index":16417},{"krate":0,"index":16426},{"krate":0,"index":16436},{"krate":0,"index":16445},{"krate":0,"index":16455},{"krate":0,"index":16464},{"krate":0,"index":16474},{"krate":0,"index":16483},{"krate":0,"index":16493},{"krate":0,"index":16502},{"krate":0,"index":16513},{"krate":0,"index":16523},{"krate":0,"index":16533},{"krate":0,"index":16542},{"krate":0,"index":16552},{"krate":0,"index":16561},{"krate":0,"index":16571},{"krate":0,"index":16580},{"krate":0,"index":16590},{"krate":0,"index":16599},{"krate":0,"index":16609},{"krate":0,"index":16618},{"krate":0,"index":16628},{"krate":0,"index":16637},{"krate":0,"index":16647},{"krate":0,"index":16656},{"krate":0,"index":16667},{"krate":0,"index":16677},{"krate":0,"index":16687},{"krate":0,"index":16696},{"krate":0,"index":16706},{"krate":0,"index":16715},{"krate":0,"index":16725},{"krate":0,"index":16734},{"krate":0,"index":16744},{"krate":0,"index":16753},{"krate":0,"index":16763},{"krate":0,"index":16772},{"krate":0,"index":16782},{"krate":0,"index":16791},{"krate":0,"index":16801},{"krate":0,"index":16810},{"krate":0,"index":16821},{"krate":0,"index":16831},{"krate":0,"index":16842},{"krate":0,"index":16852},{"krate":0,"index":16863},{"krate":0,"index":16873},{"krate":0,"index":16884},{"krate":0,"index":16894},{"krate":0,"index":16905},{"krate":0,"index":16915},{"krate":0,"index":16926},{"krate":0,"index":16936},{"krate":0,"index":16947},{"krate":0,"index":16957},{"krate":0,"index":16968},{"krate":0,"index":16978},{"krate":0,"index":16990}],"decl_id":null,"docs":" Indexing\n","sig":null,"attributes":[{"value":"! Indexing","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":334159,"byte_end":334171,"line_start":1,"line_end":1,"column_start":1,"column_end":13}}]},{"kind":"Type","id":{"krate":0,"index":2655},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":334470,"byte_end":334476,"line_start":13,"line_end":13,"column_start":10,"column_end":16},"name":"Length","qualname":"::base::indexing::DimRange::Length","value":"type Length: Dim;","parent":{"krate":0,"index":2653},"children":[],"decl_id":null,"docs":" The number of elements indexed by this range.\n","sig":null,"attributes":[{"value":"/ The number of elements indexed by this range.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":334411,"byte_end":334460,"line_start":12,"line_end":12,"column_start":5,"column_end":54}}]},{"kind":"Trait","id":{"krate":0,"index":2708},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":342119,"byte_end":342130,"line_start":326,"line_end":326,"column_start":11,"column_end":22},"name":"MatrixIndex","qualname":"::base::indexing::MatrixIndex","value":"MatrixIndex<'a, N: Scalar, R: Dim, C: Dim, S: Storage<N, R, C>>: Sized","parent":null,"children":[{"krate":0,"index":2714},{"krate":0,"index":2715},{"krate":0,"index":2716},{"krate":0,"index":2717},{"krate":0,"index":2718}],"decl_id":null,"docs":" A helper trait used for indexing operations.\n","sig":null,"attributes":[{"value":"/ A helper trait used for indexing operations.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":342060,"byte_end":342108,"line_start":325,"line_end":325,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":2714},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":342246,"byte_end":342252,"line_start":328,"line_end":328,"column_start":10,"column_end":16},"name":"Output","qualname":"::base::indexing::MatrixIndex::Output","value":"type Output: 'a;","parent":{"krate":0,"index":2708},"children":[],"decl_id":null,"docs":" The output type returned by methods.\n","sig":null,"attributes":[{"value":"/ The output type returned by methods.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":342196,"byte_end":342236,"line_start":327,"line_end":327,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2715},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":342355,"byte_end":342367,"line_start":332,"line_end":332,"column_start":8,"column_end":20},"name":"contained_by","qualname":"::base::indexing::MatrixIndex::contained_by","value":"fn (&self, matrix: &Matrix<N, R, C, S>) -> bool","parent":{"krate":0,"index":2708},"children":[],"decl_id":null,"docs":" Produces true if the given matrix is contained by this index.\n","sig":null,"attributes":[{"value":"/ Produces true if the given matrix is contained by this index.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":342263,"byte_end":342328,"line_start":330,"line_end":330,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2716},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":342566,"byte_end":342569,"line_start":338,"line_end":338,"column_start":8,"column_end":11},"name":"get","qualname":"::base::indexing::MatrixIndex::get","value":"fn (self, matrix: &'a Matrix<N, R, C, S>) -> Option<Self::Output>","parent":{"krate":0,"index":2708},"children":[],"decl_id":null,"docs":" Produces a shared view of the data at this location if in bounds,\n or `None`, otherwise.\n","sig":null,"attributes":[{"value":"/ Produces a shared view of the data at this location if in bounds,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":342418,"byte_end":342487,"line_start":334,"line_end":334,"column_start":5,"column_end":74}},{"value":"/ or `None`, otherwise.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":342492,"byte_end":342517,"line_start":335,"line_end":335,"column_start":5,"column_end":30}},{"value":"inline(always)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":342541,"byte_end":342558,"line_start":337,"line_end":337,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2717},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":342923,"byte_end":342936,"line_start":349,"line_end":349,"column_start":15,"column_end":28},"name":"get_unchecked","qualname":"::base::indexing::MatrixIndex::get_unchecked","value":"fn (self, matrix: &'a Matrix<N, R, C, S>) -> Self::Output","parent":{"krate":0,"index":2708},"children":[],"decl_id":null,"docs":" Produces a shared view of the data at this location if in bounds\n without any bounds checking.\n","sig":null,"attributes":[{"value":"/ Produces a shared view of the data at this location if in bounds","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":342784,"byte_end":342852,"line_start":346,"line_end":346,"column_start":5,"column_end":73}},{"value":"/ without any bounds checking.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":342857,"byte_end":342889,"line_start":347,"line_end":347,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2718},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":343138,"byte_end":343143,"line_start":355,"line_end":355,"column_start":8,"column_end":13},"name":"index","qualname":"::base::indexing::MatrixIndex::index","value":"fn (self, matrix: &'a Matrix<N, R, C, S>) -> Self::Output","parent":{"krate":0,"index":2708},"children":[],"decl_id":null,"docs":" Produces a shared view to the data at this location, or panics\n if out of bounds.\n","sig":null,"attributes":[{"value":"/ Produces a shared view to the data at this location, or panics","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":342997,"byte_end":343063,"line_start":351,"line_end":351,"column_start":5,"column_end":71}},{"value":"/ if out of bounds.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":343068,"byte_end":343089,"line_start":352,"line_end":352,"column_start":5,"column_end":26}},{"value":"inline(always)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":343113,"byte_end":343130,"line_start":354,"line_end":354,"column_start":5,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":2719},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":343324,"byte_end":343338,"line_start":361,"line_end":361,"column_start":11,"column_end":25},"name":"MatrixIndexMut","qualname":"::base::indexing::MatrixIndexMut","value":"MatrixIndexMut<'a, N: Scalar, R: Dim, C: Dim, S: StorageMut<N, R, C>>: MatrixIndex<'a, N, R, C, S>","parent":null,"children":[{"krate":0,"index":2725},{"krate":0,"index":2726},{"krate":0,"index":2727},{"krate":0,"index":2728}],"decl_id":null,"docs":" A helper trait used for indexing operations.\n","sig":null,"attributes":[{"value":"/ A helper trait used for indexing operations.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":343265,"byte_end":343313,"line_start":360,"line_end":360,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":2725},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":343483,"byte_end":343492,"line_start":365,"line_end":365,"column_start":10,"column_end":19},"name":"OutputMut","qualname":"::base::indexing::MatrixIndexMut::OutputMut","value":"type OutputMut: 'a;","parent":{"krate":0,"index":2719},"children":[],"decl_id":null,"docs":" The output type returned by methods.\n","sig":null,"attributes":[{"value":"/ The output type returned by methods.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":343433,"byte_end":343473,"line_start":364,"line_end":364,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2726},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":343642,"byte_end":343659,"line_start":370,"line_end":370,"column_start":15,"column_end":32},"name":"get_unchecked_mut","qualname":"::base::indexing::MatrixIndexMut::get_unchecked_mut","value":"fn (self, matrix: &'a mut Matrix<N, R, C, S>) -> Self::OutputMut","parent":{"krate":0,"index":2719},"children":[],"decl_id":null,"docs":" Produces a mutable view of the data at this location, without\n performing any bounds checking.\n","sig":null,"attributes":[{"value":"/ Produces a mutable view of the data at this location, without","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":343503,"byte_end":343568,"line_start":367,"line_end":367,"column_start":5,"column_end":70}},{"value":"/ performing any bounds checking.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":343573,"byte_end":343608,"line_start":368,"line_end":368,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2727},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":343855,"byte_end":343862,"line_start":376,"line_end":376,"column_start":8,"column_end":15},"name":"get_mut","qualname":"::base::indexing::MatrixIndexMut::get_mut","value":"fn (self, matrix: &'a mut Matrix<N, R, C, S>) -> Option<Self::OutputMut>","parent":{"krate":0,"index":2719},"children":[],"decl_id":null,"docs":" Produces a mutable view of the data at this location, if in\n bounds.\n","sig":null,"attributes":[{"value":"/ Produces a mutable view of the data at this location, if in","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":343727,"byte_end":343790,"line_start":372,"line_end":372,"column_start":5,"column_end":68}},{"value":"/ bounds.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":343795,"byte_end":343806,"line_start":373,"line_end":373,"column_start":5,"column_end":16}},{"value":"inline(always)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":343830,"byte_end":343847,"line_start":375,"line_end":375,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2728},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":344230,"byte_end":344239,"line_start":388,"line_end":388,"column_start":8,"column_end":17},"name":"index_mut","qualname":"::base::indexing::MatrixIndexMut::index_mut","value":"fn (self, matrix: &'a mut Matrix<N, R, C, S>) -> Self::OutputMut","parent":{"krate":0,"index":2719},"children":[],"decl_id":null,"docs":" Produces a mutable view of the data at this location, or panics\n if out of bounds.\n","sig":null,"attributes":[{"value":"/ Produces a mutable view of the data at this location, or panics","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":344088,"byte_end":344155,"line_start":384,"line_end":384,"column_start":5,"column_end":72}},{"value":"/ if out of bounds.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":344160,"byte_end":344181,"line_start":385,"line_end":385,"column_start":5,"column_end":26}},{"value":"inline(always)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":344205,"byte_end":344222,"line_start":387,"line_end":387,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2734},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":347196,"byte_end":347199,"line_start":496,"line_end":496,"column_start":12,"column_end":15},"name":"get","qualname":"<Matrix<N, R, C, S>>::get","value":"fn <'a, I> (&'a self, index: I) -> Option<I::Output>","parent":null,"children":[],"decl_id":null,"docs":" Produces a view of the data at the given index, or\n `None` if the index is out of bounds.\n","sig":null,"attributes":[{"value":"/ Produces a view of the data at the given index, or","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":347070,"byte_end":347124,"line_start":493,"line_end":493,"column_start":5,"column_end":59}},{"value":"/ `None` if the index is out of bounds.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":347129,"byte_end":347170,"line_start":494,"line_end":494,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":347175,"byte_end":347184,"line_start":495,"line_end":495,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2737},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":347473,"byte_end":347480,"line_start":506,"line_end":506,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Matrix<N, R, C, S>>::get_mut","value":"fn <'a, I> (&'a mut self, index: I) -> Option<I::OutputMut>","parent":null,"children":[],"decl_id":null,"docs":" Produces a mutable view of the data at the given index, or\n `None` if the index is out of bounds.\n","sig":null,"attributes":[{"value":"/ Produces a mutable view of the data at the given index, or","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":347339,"byte_end":347401,"line_start":503,"line_end":503,"column_start":5,"column_end":67}},{"value":"/ `None` if the index is out of bounds.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":347406,"byte_end":347447,"line_start":504,"line_end":504,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":347452,"byte_end":347461,"line_start":505,"line_end":505,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2740},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":347792,"byte_end":347797,"line_start":517,"line_end":517,"column_start":12,"column_end":17},"name":"index","qualname":"<Matrix<N, R, C, S>>::index","value":"fn <'a, I> (&'a self, index: I) -> I::Output","parent":null,"children":[],"decl_id":null,"docs":" Produces a view of the data at the given index, or\n panics if the index is out of bounds.\n","sig":null,"attributes":[{"value":"/ Produces a view of the data at the given index, or","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":347666,"byte_end":347720,"line_start":514,"line_end":514,"column_start":5,"column_end":59}},{"value":"/ panics if the index is out of bounds.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":347725,"byte_end":347766,"line_start":515,"line_end":515,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":347771,"byte_end":347780,"line_start":516,"line_end":516,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2743},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":348065,"byte_end":348074,"line_start":527,"line_end":527,"column_start":12,"column_end":21},"name":"index_mut","qualname":"<Matrix<N, R, C, S>>::index_mut","value":"fn <'a, I> (&'a mut self, index: I) -> I::OutputMut","parent":null,"children":[],"decl_id":null,"docs":" Produces a mutable view of the data at the given index, or\n panics if the index is out of bounds.\n","sig":null,"attributes":[{"value":"/ Produces a mutable view of the data at the given index, or","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":347931,"byte_end":347993,"line_start":524,"line_end":524,"column_start":5,"column_end":67}},{"value":"/ panics if the index is out of bounds.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":347998,"byte_end":348039,"line_start":525,"line_end":525,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":348044,"byte_end":348053,"line_start":526,"line_end":526,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2746},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":348381,"byte_end":348394,"line_start":538,"line_end":538,"column_start":19,"column_end":32},"name":"get_unchecked","qualname":"<Matrix<N, R, C, S>>::get_unchecked","value":"fn <'a, I> (&'a self, index: I) -> I::Output","parent":null,"children":[],"decl_id":null,"docs":" Produces a view of the data at the given index, without doing\n any bounds checking.\n","sig":null,"attributes":[{"value":"/ Produces a view of the data at the given index, without doing","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":348254,"byte_end":348319,"line_start":535,"line_end":535,"column_start":5,"column_end":70}},{"value":"/ any bounds checking.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":348324,"byte_end":348348,"line_start":536,"line_end":536,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":348353,"byte_end":348362,"line_start":537,"line_end":537,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2749},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":348670,"byte_end":348687,"line_start":548,"line_end":548,"column_start":19,"column_end":36},"name":"get_unchecked_mut","qualname":"<Matrix<N, R, C, S>>::get_unchecked_mut","value":"fn <'a, I> (&'a mut self, index: I) -> I::OutputMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable view of the data at the given index, without doing\n any bounds checking.\n","sig":null,"attributes":[{"value":"/ Returns a mutable view of the data at the given index, without doing","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":348536,"byte_end":348608,"line_start":545,"line_end":545,"column_start":5,"column_end":77}},{"value":"/ any bounds checking.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":348613,"byte_end":348637,"line_start":546,"line_end":546,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":348642,"byte_end":348651,"line_start":547,"line_end":547,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":2851},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":357123,"byte_end":357135,"line_start":35,"line_end":35,"column_start":10,"column_end":22},"name":"SquareMatrix","qualname":"::base::matrix::SquareMatrix","value":"Matrix<N, D, D, S>","parent":null,"children":[],"decl_id":null,"docs":" A square matrix.\n","sig":null,"attributes":[{"value":"/ A square matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":357093,"byte_end":357113,"line_start":34,"line_end":34,"column_start":1,"column_end":21}}]},{"kind":"Type","id":{"krate":0,"index":2855},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":357220,"byte_end":357226,"line_start":38,"line_end":38,"column_start":10,"column_end":16},"name":"Vector","qualname":"::base::matrix::Vector","value":"Matrix<N, D, U1, S>","parent":null,"children":[],"decl_id":null,"docs":" A matrix with one column and `D` rows.\n","sig":null,"attributes":[{"value":"/ A matrix with one column and `D` rows.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":357168,"byte_end":357210,"line_start":37,"line_end":37,"column_start":1,"column_end":43}}]},{"kind":"Type","id":{"krate":0,"index":2859},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":357313,"byte_end":357322,"line_start":41,"line_end":41,"column_start":10,"column_end":19},"name":"RowVector","qualname":"::base::matrix::RowVector","value":"Matrix<N, U1, D, S>","parent":null,"children":[],"decl_id":null,"docs":" A matrix with one row and `D` columns .\n","sig":null,"attributes":[{"value":"/ A matrix with one row and `D` columns .","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":357260,"byte_end":357303,"line_start":40,"line_end":40,"column_start":1,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":2863},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":357409,"byte_end":357418,"line_start":44,"line_end":44,"column_start":10,"column_end":19},"name":"MatrixSum","qualname":"::base::matrix::MatrixSum","value":"Matrix<N, SameShapeR<R1, R2>, SameShapeC<C1, C2>,\n       SameShapeStorage<N, R1, C1, R2, C2>>","parent":null,"children":[],"decl_id":null,"docs":" The type of the result of a matrix sum.\n","sig":null,"attributes":[{"value":"/ The type of the result of a matrix sum.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":357356,"byte_end":357399,"line_start":43,"line_end":43,"column_start":1,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":2869},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":357586,"byte_end":357595,"line_start":48,"line_end":48,"column_start":10,"column_end":19},"name":"VectorSum","qualname":"::base::matrix::VectorSum","value":"Matrix<N, SameShapeR<R1, R2>, U1, SameShapeStorage<N, R1, U1, R2, U1>>","parent":null,"children":[],"decl_id":null,"docs":" The type of the result of a matrix sum.\n","sig":null,"attributes":[{"value":"/ The type of the result of a matrix sum.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":357533,"byte_end":357576,"line_start":47,"line_end":47,"column_start":1,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":2873},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":357749,"byte_end":357760,"line_start":52,"line_end":52,"column_start":10,"column_end":21},"name":"MatrixCross","qualname":"::base::matrix::MatrixCross","value":"Matrix<N, SameShapeR<R1, R2>, SameShapeC<C1, C2>,\n       SameShapeStorage<N, R1, C1, R2, C2>>","parent":null,"children":[],"decl_id":null,"docs":" The type of the result of a matrix cross product.\n","sig":null,"attributes":[{"value":"/ The type of the result of a matrix cross product.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":357686,"byte_end":357739,"line_start":51,"line_end":51,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":17001},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":359280,"byte_end":359286,"line_start":80,"line_end":80,"column_start":12,"column_end":18},"name":"Matrix","qualname":"::base::matrix::Matrix","value":"Matrix { data }","parent":null,"children":[{"krate":0,"index":17006},{"krate":0,"index":17007}],"decl_id":null,"docs":" The most generic column-major matrix (and vector) type.","sig":null,"attributes":[{"value":"/ The most generic column-major matrix (and vector) type.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":357875,"byte_end":357934,"line_start":55,"line_end":55,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":357935,"byte_end":357938,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ It combines four type parameters:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":357939,"byte_end":357976,"line_start":57,"line_end":57,"column_start":1,"column_end":38}},{"value":"/ - `N`: for the matrix components scalar type.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":357977,"byte_end":358026,"line_start":58,"line_end":58,"column_start":1,"column_end":50}},{"value":"/ - `R`: for the matrix number of rows.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":358027,"byte_end":358068,"line_start":59,"line_end":59,"column_start":1,"column_end":42}},{"value":"/ - `C`: for the matrix number of columns.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":358069,"byte_end":358113,"line_start":60,"line_end":60,"column_start":1,"column_end":45}},{"value":"/ - `S`: for the matrix data storage, i.e., the buffer that actually contains the matrix","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":358114,"byte_end":358204,"line_start":61,"line_end":61,"column_start":1,"column_end":91}},{"value":"/ components.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":358205,"byte_end":358220,"line_start":62,"line_end":62,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":358221,"byte_end":358224,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ The matrix dimensions parameters `R` and `C` can either be:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":358225,"byte_end":358288,"line_start":64,"line_end":64,"column_start":1,"column_end":64}},{"value":"/ - type-level unsigned integer constants (e.g. `U1`, `U124`) from the `nalgebra::` root module.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":358289,"byte_end":358387,"line_start":65,"line_end":65,"column_start":1,"column_end":99}},{"value":"/ All numbers from 0 to 127 are defined that way.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":358388,"byte_end":358440,"line_start":66,"line_end":66,"column_start":1,"column_end":52}},{"value":"/ - type-level unsigned integer constants (e.g. `U1024`, `U10000`) from the `typenum::` crate.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":358441,"byte_end":358537,"line_start":67,"line_end":67,"column_start":1,"column_end":97}},{"value":"/ Using those, you will not get error messages as nice as for numbers smaller than 128 defined on","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":358538,"byte_end":358637,"line_start":68,"line_end":68,"column_start":1,"column_end":100}},{"value":"/ the `nalgebra::` module.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":358638,"byte_end":358666,"line_start":69,"line_end":69,"column_start":1,"column_end":29}},{"value":"/ - the special value `Dynamic` from the `nalgebra::` root module. This indicates that the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":358667,"byte_end":358759,"line_start":70,"line_end":70,"column_start":1,"column_end":93}},{"value":"/ specified dimension is not known at compile-time. Note that this will generally imply that the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":358760,"byte_end":358858,"line_start":71,"line_end":71,"column_start":1,"column_end":99}},{"value":"/ matrix data storage `S` performs a dynamic allocation and contains extra metadata for the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":358859,"byte_end":358952,"line_start":72,"line_end":72,"column_start":1,"column_end":94}},{"value":"/ matrix shape.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":358953,"byte_end":358970,"line_start":73,"line_end":73,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":358971,"byte_end":358974,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ Note that mixing `Dynamic` with type-level unsigned integers is allowed. Actually, a","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":358975,"byte_end":359063,"line_start":75,"line_end":75,"column_start":1,"column_end":89}},{"value":"/ dynamically-sized column vector should be represented as a `Matrix<N, Dynamic, U1, S>` (given","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":359064,"byte_end":359161,"line_start":76,"line_end":76,"column_start":1,"column_end":98}},{"value":"/ some concrete types for `N` and a compatible data storage type `S`).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":359162,"byte_end":359234,"line_start":77,"line_end":77,"column_start":1,"column_end":73}},{"value":"repr(C)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":359235,"byte_end":359245,"line_start":78,"line_end":78,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":17006},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":359466,"byte_end":359470,"line_start":83,"line_end":83,"column_start":9,"column_end":13},"name":"data","qualname":"::base::matrix::Matrix::data","value":"S","parent":{"krate":0,"index":17001},"children":[],"decl_id":null,"docs":" The data storage that contains all the matrix components and informations about its number\n of rows and column (if needed).\n","sig":null,"attributes":[{"value":"/ The data storage that contains all the matrix components and informations about its number","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":359323,"byte_end":359417,"line_start":81,"line_end":81,"column_start":5,"column_end":99}},{"value":"/ of rows and column (if needed).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":359422,"byte_end":359457,"line_start":82,"line_end":82,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2896},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":362057,"byte_end":362087,"line_start":192,"line_end":192,"column_start":19,"column_end":49},"name":"from_data_statically_unchecked","qualname":"<Matrix<N, R, C, S>>::from_data_statically_unchecked","value":"fn (data: S) -> Matrix<N, R, C, S>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new matrix with the given data without statically checking that the matrix\n dimension matches the storage dimension.\n","sig":null,"attributes":[{"value":"/ Creates a new matrix with the given data without statically checking that the matrix","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":361887,"byte_end":361975,"line_start":189,"line_end":189,"column_start":5,"column_end":93}},{"value":"/ dimension matches the storage dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":361980,"byte_end":362024,"line_start":190,"line_end":190,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":362029,"byte_end":362038,"line_start":191,"line_end":191,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2902},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":362366,"byte_end":362375,"line_start":203,"line_end":203,"column_start":12,"column_end":21},"name":"from_data","qualname":"<Matrix<N, R, C, S>>::from_data","value":"fn (data: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new matrix with the given data.\n","sig":null,"attributes":[{"value":"/ Creates a new matrix with the given data.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":362295,"byte_end":362340,"line_start":201,"line_end":201,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":362345,"byte_end":362354,"line_start":202,"line_end":202,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2903},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":362705,"byte_end":362708,"line_start":216,"line_end":216,"column_start":12,"column_end":15},"name":"len","qualname":"<Matrix<N, R, C, S>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The total number of elements of this matrix.","sig":null,"attributes":[{"value":"/ The total number of elements of this matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":362468,"byte_end":362516,"line_start":207,"line_end":207,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":362521,"byte_end":362524,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":362529,"byte_end":362544,"line_start":209,"line_end":209,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":362549,"byte_end":362552,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":362557,"byte_end":362564,"line_start":211,"line_end":211,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix3x4;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":362569,"byte_end":362599,"line_start":212,"line_end":212,"column_start":5,"column_end":35}},{"value":"/ let mat = Matrix3x4::<f32>::zeros();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":362604,"byte_end":362644,"line_start":213,"line_end":213,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(mat.len(), 12);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":362649,"byte_end":362679,"line_start":214,"line_end":214,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":362684,"byte_end":362693,"line_start":215,"line_end":215,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2904},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":363085,"byte_end":363090,"line_start":230,"line_end":230,"column_start":12,"column_end":17},"name":"shape","qualname":"<Matrix<N, R, C, S>>::shape","value":"fn (&self) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" The shape of this matrix returned as the tuple (number of rows, number of columns).","sig":null,"attributes":[{"value":"/ The shape of this matrix returned as the tuple (number of rows, number of columns).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":362803,"byte_end":362890,"line_start":221,"line_end":221,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":362895,"byte_end":362898,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":362903,"byte_end":362918,"line_start":223,"line_end":223,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":362923,"byte_end":362926,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":362931,"byte_end":362938,"line_start":225,"line_end":225,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix3x4;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":362943,"byte_end":362973,"line_start":226,"line_end":226,"column_start":5,"column_end":35}},{"value":"/ let mat = Matrix3x4::<f32>::zeros();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":362978,"byte_end":363018,"line_start":227,"line_end":227,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(mat.shape(), (3, 4));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":363023,"byte_end":363059,"line_start":228,"line_end":228,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":363064,"byte_end":363073,"line_start":229,"line_end":229,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2905},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":363444,"byte_end":363449,"line_start":244,"line_end":244,"column_start":12,"column_end":17},"name":"nrows","qualname":"<Matrix<N, R, C, S>>::nrows","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The number of rows of this matrix.","sig":null,"attributes":[{"value":"/ The number of rows of this matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":363216,"byte_end":363254,"line_start":235,"line_end":235,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":363259,"byte_end":363262,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":363267,"byte_end":363282,"line_start":237,"line_end":237,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":363287,"byte_end":363290,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":363295,"byte_end":363302,"line_start":239,"line_end":239,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix3x4;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":363307,"byte_end":363337,"line_start":240,"line_end":240,"column_start":5,"column_end":35}},{"value":"/ let mat = Matrix3x4::<f32>::zeros();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":363342,"byte_end":363382,"line_start":241,"line_end":241,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(mat.nrows(), 3);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":363387,"byte_end":363418,"line_start":242,"line_end":242,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":363423,"byte_end":363432,"line_start":243,"line_end":243,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2906},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":363733,"byte_end":363738,"line_start":257,"line_end":257,"column_start":12,"column_end":17},"name":"ncols","qualname":"<Matrix<N, R, C, S>>::ncols","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The number of columns of this matrix.","sig":null,"attributes":[{"value":"/ The number of columns of this matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":363502,"byte_end":363543,"line_start":248,"line_end":248,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":363548,"byte_end":363551,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":363556,"byte_end":363571,"line_start":250,"line_end":250,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":363576,"byte_end":363579,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":363584,"byte_end":363591,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix3x4;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":363596,"byte_end":363626,"line_start":253,"line_end":253,"column_start":5,"column_end":35}},{"value":"/ let mat = Matrix3x4::<f32>::zeros();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":363631,"byte_end":363671,"line_start":254,"line_end":254,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(mat.ncols(), 4);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":363676,"byte_end":363707,"line_start":255,"line_end":255,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":363712,"byte_end":363721,"line_start":256,"line_end":256,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2907},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":364221,"byte_end":364228,"line_start":272,"line_end":272,"column_start":12,"column_end":19},"name":"strides","qualname":"<Matrix<N, R, C, S>>::strides","value":"fn (&self) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" The strides (row stride, column stride) of this matrix.","sig":null,"attributes":[{"value":"/ The strides (row stride, column stride) of this matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":363791,"byte_end":363850,"line_start":261,"line_end":261,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":363855,"byte_end":363858,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":363863,"byte_end":363878,"line_start":263,"line_end":263,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":363883,"byte_end":363886,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":363891,"byte_end":363898,"line_start":265,"line_end":265,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::DMatrix;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":363903,"byte_end":363931,"line_start":266,"line_end":266,"column_start":5,"column_end":33}},{"value":"/ let mat = DMatrix::<f32>::zeros(10, 10);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":363936,"byte_end":363980,"line_start":267,"line_end":267,"column_start":5,"column_end":49}},{"value":"/ let slice = mat.slice_with_steps((0, 0), (5, 3), (1, 2));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":363985,"byte_end":364046,"line_start":268,"line_end":268,"column_start":5,"column_end":66}},{"value":"/ // The column strides is the number of steps (here 2) multiplied by the corresponding dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":364051,"byte_end":364151,"line_start":269,"line_end":269,"column_start":5,"column_end":105}},{"value":"/ assert_eq!(mat.strides(), (1, 10));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":364156,"byte_end":364195,"line_start":270,"line_end":270,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":364200,"byte_end":364209,"line_start":271,"line_end":271,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2908},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":364964,"byte_end":364968,"line_start":294,"line_end":294,"column_start":12,"column_end":16},"name":"iter","qualname":"<Matrix<N, R, C, S>>::iter","value":"fn (&self) -> MatrixIter<N, R, C, S>","parent":null,"children":[],"decl_id":null,"docs":" Iterates through this matrix coordinates in column-major order.","sig":null,"attributes":[{"value":"/ Iterates through this matrix coordinates in column-major order.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":364356,"byte_end":364423,"line_start":277,"line_end":277,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":364428,"byte_end":364431,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":364436,"byte_end":364451,"line_start":279,"line_end":279,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":364456,"byte_end":364459,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":364464,"byte_end":364471,"line_start":281,"line_end":281,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix2x3;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":364476,"byte_end":364506,"line_start":282,"line_end":282,"column_start":5,"column_end":35}},{"value":"/ let mat = Matrix2x3::new(11, 12, 13,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":364511,"byte_end":364551,"line_start":283,"line_end":283,"column_start":5,"column_end":45}},{"value":"/                          21, 22, 23);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":364556,"byte_end":364597,"line_start":284,"line_end":284,"column_start":5,"column_end":46}},{"value":"/ let mut it = mat.iter();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":364602,"byte_end":364630,"line_start":285,"line_end":285,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(*it.next().unwrap(), 11);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":364635,"byte_end":364675,"line_start":286,"line_end":286,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(*it.next().unwrap(), 21);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":364680,"byte_end":364720,"line_start":287,"line_end":287,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(*it.next().unwrap(), 12);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":364725,"byte_end":364765,"line_start":288,"line_end":288,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(*it.next().unwrap(), 22);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":364770,"byte_end":364810,"line_start":289,"line_end":289,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(*it.next().unwrap(), 13);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":364815,"byte_end":364855,"line_start":290,"line_end":290,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(*it.next().unwrap(), 23);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":364860,"byte_end":364900,"line_start":291,"line_end":291,"column_start":5,"column_end":45}},{"value":"/ assert!(it.next().is_none());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":364905,"byte_end":364938,"line_start":292,"line_end":292,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":364943,"byte_end":364952,"line_start":293,"line_end":293,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2909},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":365394,"byte_end":365402,"line_start":310,"line_end":310,"column_start":12,"column_end":20},"name":"row_iter","qualname":"<Matrix<N, R, C, S>>::row_iter","value":"fn (&self) -> RowIter<N, R, C, S>","parent":null,"children":[],"decl_id":null,"docs":" Iterate through the rows of this matrix.","sig":null,"attributes":[{"value":"/ Iterate through the rows of this matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":365051,"byte_end":365095,"line_start":298,"line_end":298,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":365100,"byte_end":365103,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":365108,"byte_end":365121,"line_start":300,"line_end":300,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":365126,"byte_end":365133,"line_start":301,"line_end":301,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix2x3;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":365138,"byte_end":365168,"line_start":302,"line_end":302,"column_start":5,"column_end":35}},{"value":"/ let mut a = Matrix2x3::new(1, 2, 3,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":365173,"byte_end":365212,"line_start":303,"line_end":303,"column_start":5,"column_end":44}},{"value":"/                            4, 5, 6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":365217,"byte_end":365257,"line_start":304,"line_end":304,"column_start":5,"column_end":45}},{"value":"/ for (i, row) in a.row_iter().enumerate() {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":365262,"byte_end":365308,"line_start":305,"line_end":305,"column_start":5,"column_end":51}},{"value":"/     assert_eq!(row, a.row(i))","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":365313,"byte_end":365346,"line_start":306,"line_end":306,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":365351,"byte_end":365356,"line_start":307,"line_end":307,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":365361,"byte_end":365368,"line_start":308,"line_end":308,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":365373,"byte_end":365382,"line_start":309,"line_end":309,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2910},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":365823,"byte_end":365834,"line_start":325,"line_end":325,"column_start":12,"column_end":23},"name":"column_iter","qualname":"<Matrix<N, R, C, S>>::column_iter","value":"fn (&self) -> ColumnIter<N, R, C, S>","parent":null,"children":[],"decl_id":null,"docs":" Iterate through the columns of this matrix.\n # Example\n ```\n # use nalgebra::Matrix2x3;\n let mut a = Matrix2x3::new(1, 2, 3,\n                            4, 5, 6);\n for (i, column) in a.column_iter().enumerate() {\n     assert_eq!(column, a.column(i))\n }\n ```\n","sig":null,"attributes":[{"value":"/ Iterate through the columns of this matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":365473,"byte_end":365520,"line_start":314,"line_end":314,"column_start":5,"column_end":52}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":365525,"byte_end":365538,"line_start":315,"line_end":315,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":365543,"byte_end":365550,"line_start":316,"line_end":316,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix2x3;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":365555,"byte_end":365585,"line_start":317,"line_end":317,"column_start":5,"column_end":35}},{"value":"/ let mut a = Matrix2x3::new(1, 2, 3,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":365590,"byte_end":365629,"line_start":318,"line_end":318,"column_start":5,"column_end":44}},{"value":"/                            4, 5, 6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":365634,"byte_end":365674,"line_start":319,"line_end":319,"column_start":5,"column_end":45}},{"value":"/ for (i, column) in a.column_iter().enumerate() {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":365679,"byte_end":365731,"line_start":320,"line_end":320,"column_start":5,"column_end":57}},{"value":"/     assert_eq!(column, a.column(i))","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":365736,"byte_end":365775,"line_start":321,"line_end":321,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":365780,"byte_end":365785,"line_start":322,"line_end":322,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":365790,"byte_end":365797,"line_start":323,"line_end":323,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":365802,"byte_end":365811,"line_start":324,"line_end":324,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2911},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":366303,"byte_end":366325,"line_start":342,"line_end":342,"column_start":12,"column_end":34},"name":"vector_to_matrix_index","qualname":"<Matrix<N, R, C, S>>::vector_to_matrix_index","value":"fn (&self, i: usize) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Computes the row and column coordinates of the i-th element of this matrix seen as a\n vector.","sig":null,"attributes":[{"value":"/ Computes the row and column coordinates of the i-th element of this matrix seen as a","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":365911,"byte_end":365999,"line_start":329,"line_end":329,"column_start":5,"column_end":93}},{"value":"/ vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":366004,"byte_end":366015,"line_start":330,"line_end":330,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":366020,"byte_end":366023,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":366028,"byte_end":366041,"line_start":332,"line_end":332,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":366046,"byte_end":366053,"line_start":333,"line_end":333,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix2;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":366058,"byte_end":366086,"line_start":334,"line_end":334,"column_start":5,"column_end":33}},{"value":"/ let m = Matrix2::new(1, 2,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":366091,"byte_end":366121,"line_start":335,"line_end":335,"column_start":5,"column_end":35}},{"value":"/                      3, 4);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":366126,"byte_end":366157,"line_start":336,"line_end":336,"column_start":5,"column_end":36}},{"value":"/ let i = m.vector_to_matrix_index(3);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":366162,"byte_end":366202,"line_start":337,"line_end":337,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(i, (1, 1));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":366207,"byte_end":366233,"line_start":338,"line_end":338,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(m[i], m[3]);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":366238,"byte_end":366265,"line_start":339,"line_end":339,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":366270,"byte_end":366277,"line_start":340,"line_end":340,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":366282,"byte_end":366291,"line_start":341,"line_end":341,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2912},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":367097,"byte_end":367103,"line_start":370,"line_end":370,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<Matrix<N, R, C, S>>::as_ptr","value":"fn (&self) -> *const N","parent":null,"children":[],"decl_id":null,"docs":" Returns a pointer to the start of the matrix.","sig":null,"attributes":[{"value":"/ Returns a pointer to the start of the matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":366688,"byte_end":366737,"line_start":356,"line_end":356,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":366742,"byte_end":366745,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ If the matrix is not empty, this pointer is guaranteed to be aligned","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":366750,"byte_end":366822,"line_start":358,"line_end":358,"column_start":5,"column_end":77}},{"value":"/ and non-null.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":366827,"byte_end":366844,"line_start":359,"line_end":359,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":366849,"byte_end":366852,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":366857,"byte_end":366870,"line_start":361,"line_end":361,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":366875,"byte_end":366882,"line_start":362,"line_end":362,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix2;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":366887,"byte_end":366915,"line_start":363,"line_end":363,"column_start":5,"column_end":33}},{"value":"/ let m = Matrix2::new(1, 2,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":366920,"byte_end":366950,"line_start":364,"line_end":364,"column_start":5,"column_end":35}},{"value":"/                      3, 4);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":366955,"byte_end":366986,"line_start":365,"line_end":365,"column_start":5,"column_end":36}},{"value":"/ let ptr = m.as_ptr();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":366991,"byte_end":367016,"line_start":366,"line_end":366,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(unsafe { *ptr }, m[0]);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":367021,"byte_end":367059,"line_start":367,"line_end":367,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":367064,"byte_end":367071,"line_start":368,"line_end":368,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":367076,"byte_end":367085,"line_start":369,"line_end":369,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2913},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":367333,"byte_end":367344,"line_start":378,"line_end":378,"column_start":12,"column_end":23},"name":"relative_eq","qualname":"<Matrix<N, R, C, S>>::relative_eq","value":"fn <R2, C2, SB> (&self, other: &Matrix<N, R2, C2, SB>, eps: N::Epsilon, max_relative: N::Epsilon) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether `self` and `rhs` are equal up to a given epsilon.","sig":null,"attributes":[{"value":"/ Tests whether `self` and `rhs` are equal up to a given epsilon.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":367160,"byte_end":367227,"line_start":374,"line_end":374,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":367232,"byte_end":367235,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ See `relative_eq` from the `RelativeEq` trait for more details.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":367240,"byte_end":367307,"line_start":376,"line_end":376,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":367312,"byte_end":367321,"line_start":377,"line_end":377,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2918},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":367947,"byte_end":367949,"line_start":400,"line_end":400,"column_start":12,"column_end":14},"name":"eq","qualname":"<Matrix<N, R, C, S>>::eq","value":"fn <R2, C2, SB> (&self, other: &Matrix<N, R2, C2, SB>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether `self` and `rhs` are exactly equal.\n","sig":null,"attributes":[{"value":"/ Tests whether `self` and `rhs` are exactly equal.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":367868,"byte_end":367921,"line_start":398,"line_end":398,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":367926,"byte_end":367935,"line_start":399,"line_end":399,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2923},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":368387,"byte_end":368397,"line_start":414,"line_end":414,"column_start":12,"column_end":22},"name":"into_owned","qualname":"<Matrix<N, R, C, S>>::into_owned","value":"fn (self) -> MatrixMN<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Moves this matrix into one that owns its data.\n","sig":null,"attributes":[{"value":"/ Moves this matrix into one that owns its data.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":368311,"byte_end":368361,"line_start":412,"line_end":412,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":368366,"byte_end":368375,"line_start":413,"line_end":413,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2924},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":368805,"byte_end":368819,"line_start":426,"line_end":426,"column_start":12,"column_end":26},"name":"into_owned_sum","qualname":"<Matrix<N, R, C, S>>::into_owned_sum","value":"fn <R2, C2> (self) -> MatrixSum<N, R, C, R2, C2>","parent":null,"children":[],"decl_id":null,"docs":" Moves this matrix into one that owns its data. The actual type of the result depends on\n matrix storage combination rules for addition.\n","sig":null,"attributes":[{"value":"/ Moves this matrix into one that owns its data. The actual type of the result depends on","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":368633,"byte_end":368724,"line_start":423,"line_end":423,"column_start":5,"column_end":96}},{"value":"/ matrix storage combination rules for addition.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":368729,"byte_end":368779,"line_start":424,"line_end":424,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":368784,"byte_end":368793,"line_start":425,"line_end":425,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2927},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":369636,"byte_end":369647,"line_start":450,"line_end":450,"column_start":12,"column_end":23},"name":"clone_owned","qualname":"<Matrix<N, R, C, S>>::clone_owned","value":"fn (&self) -> MatrixMN<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Clones this matrix to one that owns its data.\n","sig":null,"attributes":[{"value":"/ Clones this matrix to one that owns its data.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":369561,"byte_end":369610,"line_start":448,"line_end":448,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":369615,"byte_end":369624,"line_start":449,"line_end":449,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2928},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":369973,"byte_end":369988,"line_start":460,"line_end":460,"column_start":12,"column_end":27},"name":"clone_owned_sum","qualname":"<Matrix<N, R, C, S>>::clone_owned_sum","value":"fn <R2, C2> (&self) -> MatrixSum<N, R, C, R2, C2>","parent":null,"children":[],"decl_id":null,"docs":" Clones this matrix into one that owns its data. The actual type of the result depends on\n matrix storage combination rules for addition.\n","sig":null,"attributes":[{"value":"/ Clones this matrix into one that owns its data. The actual type of the result depends on","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":369800,"byte_end":369892,"line_start":457,"line_end":457,"column_start":5,"column_end":97}},{"value":"/ matrix storage combination rules for addition.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":369897,"byte_end":369947,"line_start":458,"line_end":458,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":369952,"byte_end":369961,"line_start":459,"line_end":459,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2931},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":370918,"byte_end":370921,"line_start":488,"line_end":488,"column_start":12,"column_end":15},"name":"map","qualname":"<Matrix<N, R, C, S>>::map","value":"fn <N2, F> (&self, mut f: F) -> MatrixMN<N2, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Returns a matrix containing the result of `f` applied to each of its entries.\n","sig":null,"attributes":[{"value":"/ Returns a matrix containing the result of `f` applied to each of its entries.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":370811,"byte_end":370892,"line_start":486,"line_end":486,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":370897,"byte_end":370906,"line_start":487,"line_end":487,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2934},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":372069,"byte_end":372078,"line_start":516,"line_end":516,"column_start":12,"column_end":21},"name":"fold_with","qualname":"<Matrix<N, R, C, S>>::fold_with","value":"fn <N2> (&self, init_f: impl FnOnce(Option<&N>) -> N2, f: impl FnMut(N2, &N) -> N2) -> N2","parent":null,"children":[],"decl_id":null,"docs":" Similar to `self.iter().fold(init, f)` except that `init` is replaced by a closure.","sig":null,"attributes":[{"value":"/ Similar to `self.iter().fold(init, f)` except that `init` is replaced by a closure.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":371492,"byte_end":371579,"line_start":508,"line_end":508,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":371584,"byte_end":371587,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ The initialization closure is given the first component of this matrix:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":371592,"byte_end":371667,"line_start":510,"line_end":510,"column_start":5,"column_end":80}},{"value":"/ - If the matrix has no component (0 rows or 0 columns) then `init_f` is called with `None`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":371672,"byte_end":371766,"line_start":511,"line_end":511,"column_start":5,"column_end":99}},{"value":"/ and its return value is the value returned by this method.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":371771,"byte_end":371833,"line_start":512,"line_end":512,"column_start":5,"column_end":67}},{"value":"/ - If the matrix has has least one component, then `init_f` is called with the first component","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":371838,"byte_end":371935,"line_start":513,"line_end":513,"column_start":5,"column_end":102}},{"value":"/ to compute the initial value. Folding then continues on all the remaining components of the matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":371940,"byte_end":372043,"line_start":514,"line_end":514,"column_start":5,"column_end":108}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":372048,"byte_end":372057,"line_start":515,"line_end":515,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2938},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":372508,"byte_end":372525,"line_start":529,"line_end":529,"column_start":12,"column_end":29},"name":"map_with_location","qualname":"<Matrix<N, R, C, S>>::map_with_location","value":"fn <N2, F> (&self, mut f: F) -> MatrixMN<N2, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Returns a matrix containing the result of `f` applied to each of its entries. Unlike `map`,\n `f` also gets passed the row and column index, i.e. `f(row, col, value)`.\n","sig":null,"attributes":[{"value":"/ Returns a matrix containing the result of `f` applied to each of its entries. Unlike `map`,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":372305,"byte_end":372400,"line_start":526,"line_end":526,"column_start":5,"column_end":100}},{"value":"/ `f` also gets passed the row and column index, i.e. `f(row, col, value)`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":372405,"byte_end":372482,"line_start":527,"line_end":527,"column_start":5,"column_end":82}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":372487,"byte_end":372496,"line_start":528,"line_end":528,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2941},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":373267,"byte_end":373274,"line_start":555,"line_end":555,"column_start":12,"column_end":19},"name":"zip_map","qualname":"<Matrix<N, R, C, S>>::zip_map","value":"fn <N2, N3, S2, F> (&self, rhs: &Matrix<N2, R, C, S2>, mut f: F) -> MatrixMN<N3, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Returns a matrix containing the result of `f` applied to each entries of `self` and\n `rhs`.\n","sig":null,"attributes":[{"value":"/ Returns a matrix containing the result of `f` applied to each entries of `self` and","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":373139,"byte_end":373226,"line_start":552,"line_end":552,"column_start":5,"column_end":92}},{"value":"/ `rhs`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":373231,"byte_end":373241,"line_start":553,"line_end":553,"column_start":5,"column_end":15}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":373246,"byte_end":373255,"line_start":554,"line_end":554,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2946},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":374343,"byte_end":374354,"line_start":589,"line_end":589,"column_start":12,"column_end":23},"name":"zip_zip_map","qualname":"<Matrix<N, R, C, S>>::zip_zip_map","value":"fn <N2, N3, N4, S2, S3, F> (&self, b: &Matrix<N2, R, C, S2>, c: &Matrix<N3, R, C, S3>, mut f: F) -> MatrixMN<N4, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Returns a matrix containing the result of `f` applied to each entries of `self` and\n `b`, and `c`.\n","sig":null,"attributes":[{"value":"/ Returns a matrix containing the result of `f` applied to each entries of `self` and","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":374208,"byte_end":374295,"line_start":586,"line_end":586,"column_start":5,"column_end":92}},{"value":"/ `b`, and `c`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":374300,"byte_end":374317,"line_start":587,"line_end":587,"column_start":5,"column_end":22}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":374322,"byte_end":374331,"line_start":588,"line_end":588,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2953},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":375729,"byte_end":375733,"line_start":635,"line_end":635,"column_start":12,"column_end":16},"name":"fold","qualname":"<Matrix<N, R, C, S>>::fold","value":"fn <Acc> (&self, init: Acc, mut f: impl FnMut(Acc, N) -> Acc) -> Acc","parent":null,"children":[],"decl_id":null,"docs":" Folds a function `f` on each entry of `self`.\n","sig":null,"attributes":[{"value":"/ Folds a function `f` on each entry of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":375654,"byte_end":375703,"line_start":633,"line_end":633,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":375708,"byte_end":375717,"line_start":634,"line_end":634,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2956},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":376254,"byte_end":376262,"line_start":654,"line_end":654,"column_start":12,"column_end":20},"name":"zip_fold","qualname":"<Matrix<N, R, C, S>>::zip_fold","value":"fn <N2, R2, C2, S2, Acc> (&self, rhs: &Matrix<N2, R2, C2, S2>, init: Acc, mut f: impl FnMut(Acc, N, N2) -> Acc) -> Acc","parent":null,"children":[],"decl_id":null,"docs":" Folds a function `f` on each pairs of entries from `self` and `rhs`.\n","sig":null,"attributes":[{"value":"/ Folds a function `f` on each pairs of entries from `self` and `rhs`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":376156,"byte_end":376228,"line_start":652,"line_end":652,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":376233,"byte_end":376242,"line_start":653,"line_end":653,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2963},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":377283,"byte_end":377295,"line_start":692,"line_end":692,"column_start":12,"column_end":24},"name":"transpose_to","qualname":"<Matrix<N, R, C, S>>::transpose_to","value":"fn <R2, C2, SB> (&self, out: &mut Matrix<N, R2, C2, SB>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Transposes `self` and store the result into `out`.\n","sig":null,"attributes":[{"value":"/ Transposes `self` and store the result into `out`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":377203,"byte_end":377257,"line_start":690,"line_end":690,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":377262,"byte_end":377271,"line_start":691,"line_end":691,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2967},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":378053,"byte_end":378062,"line_start":718,"line_end":718,"column_start":12,"column_end":21},"name":"transpose","qualname":"<Matrix<N, R, C, S>>::transpose","value":"fn (&self) -> MatrixMN<N, C, R>","parent":null,"children":[],"decl_id":null,"docs":" Transposes `self`.\n","sig":null,"attributes":[{"value":"/ Transposes `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":377948,"byte_end":377970,"line_start":715,"line_end":715,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":377975,"byte_end":377984,"line_start":716,"line_end":716,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use transpose_mut()?\"","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":377989,"byte_end":378041,"line_start":717,"line_end":717,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2973},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":378531,"byte_end":378539,"line_start":736,"line_end":736,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<Matrix<N, R, C, S>>::iter_mut","value":"fn (&mut self) -> MatrixIterMut<N, R, C, S>","parent":null,"children":[],"decl_id":null,"docs":" Mutably iterates through this matrix coordinates.\n","sig":null,"attributes":[{"value":"/ Mutably iterates through this matrix coordinates.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":378452,"byte_end":378505,"line_start":734,"line_end":734,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":378510,"byte_end":378519,"line_start":735,"line_end":735,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2974},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":378826,"byte_end":378836,"line_start":745,"line_end":745,"column_start":12,"column_end":22},"name":"as_mut_ptr","qualname":"<Matrix<N, R, C, S>>::as_mut_ptr","value":"fn (&mut self) -> *mut N","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable pointer to the start of the matrix.","sig":null,"attributes":[{"value":"/ Returns a mutable pointer to the start of the matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":378636,"byte_end":378693,"line_start":740,"line_end":740,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":378698,"byte_end":378701,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ If the matrix is not empty, this pointer is guaranteed to be aligned","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":378706,"byte_end":378778,"line_start":742,"line_end":742,"column_start":5,"column_end":77}},{"value":"/ and non-null.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":378783,"byte_end":378800,"line_start":743,"line_end":743,"column_start":5,"column_end":22}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":378805,"byte_end":378814,"line_start":744,"line_end":744,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2975},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":379391,"byte_end":379403,"line_start":765,"line_end":765,"column_start":12,"column_end":24},"name":"row_iter_mut","qualname":"<Matrix<N, R, C, S>>::row_iter_mut","value":"fn (&mut self) -> RowIterMut<N, R, C, S>","parent":null,"children":[],"decl_id":null,"docs":" Mutably iterates through this matrix rows.","sig":null,"attributes":[{"value":"/ Mutably iterates through this matrix rows.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":378899,"byte_end":378945,"line_start":749,"line_end":749,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":378950,"byte_end":378953,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":378958,"byte_end":378971,"line_start":751,"line_end":751,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":378976,"byte_end":378983,"line_start":752,"line_end":752,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix2x3;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":378988,"byte_end":379018,"line_start":753,"line_end":753,"column_start":5,"column_end":35}},{"value":"/ let mut a = Matrix2x3::new(1, 2, 3,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":379023,"byte_end":379062,"line_start":754,"line_end":754,"column_start":5,"column_end":44}},{"value":"/                            4, 5, 6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":379067,"byte_end":379107,"line_start":755,"line_end":755,"column_start":5,"column_end":45}},{"value":"/ for (i, mut row) in a.row_iter_mut().enumerate() {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":379112,"byte_end":379166,"line_start":756,"line_end":756,"column_start":5,"column_end":59}},{"value":"/     row *= (i + 1) * 10;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":379171,"byte_end":379199,"line_start":757,"line_end":757,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":379204,"byte_end":379209,"line_start":758,"line_end":758,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":379214,"byte_end":379217,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ let expected = Matrix2x3::new(10, 20, 30,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":379222,"byte_end":379267,"line_start":760,"line_end":760,"column_start":5,"column_end":50}},{"value":"/                               80, 100, 120);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":379272,"byte_end":379320,"line_start":761,"line_end":761,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(a, expected);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":379325,"byte_end":379353,"line_start":762,"line_end":762,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":379358,"byte_end":379365,"line_start":763,"line_end":763,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":379370,"byte_end":379379,"line_start":764,"line_end":764,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2976},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":379982,"byte_end":379997,"line_start":785,"line_end":785,"column_start":12,"column_end":27},"name":"column_iter_mut","qualname":"<Matrix<N, R, C, S>>::column_iter_mut","value":"fn (&mut self) -> ColumnIterMut<N, R, C, S>","parent":null,"children":[],"decl_id":null,"docs":" Mutably iterates through this matrix columns.","sig":null,"attributes":[{"value":"/ Mutably iterates through this matrix columns.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":379484,"byte_end":379533,"line_start":769,"line_end":769,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":379538,"byte_end":379541,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":379546,"byte_end":379559,"line_start":771,"line_end":771,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":379564,"byte_end":379571,"line_start":772,"line_end":772,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix2x3;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":379576,"byte_end":379606,"line_start":773,"line_end":773,"column_start":5,"column_end":35}},{"value":"/ let mut a = Matrix2x3::new(1, 2, 3,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":379611,"byte_end":379650,"line_start":774,"line_end":774,"column_start":5,"column_end":44}},{"value":"/                            4, 5, 6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":379655,"byte_end":379695,"line_start":775,"line_end":775,"column_start":5,"column_end":45}},{"value":"/ for (i, mut col) in a.column_iter_mut().enumerate() {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":379700,"byte_end":379757,"line_start":776,"line_end":776,"column_start":5,"column_end":62}},{"value":"/     col *= (i + 1) * 10;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":379762,"byte_end":379790,"line_start":777,"line_end":777,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":379795,"byte_end":379800,"line_start":778,"line_end":778,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":379805,"byte_end":379808,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ let expected = Matrix2x3::new(10, 40, 90,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":379813,"byte_end":379858,"line_start":780,"line_end":780,"column_start":5,"column_end":50}},{"value":"/                               40, 100, 180);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":379863,"byte_end":379911,"line_start":781,"line_end":781,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(a, expected);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":379916,"byte_end":379944,"line_start":782,"line_end":782,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":379949,"byte_end":379956,"line_start":783,"line_end":783,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":379961,"byte_end":379970,"line_start":784,"line_end":784,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2977},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":380162,"byte_end":380176,"line_start":791,"line_end":791,"column_start":19,"column_end":33},"name":"swap_unchecked","qualname":"<Matrix<N, R, C, S>>::swap_unchecked","value":"fn (&mut self, row_cols1: (usize, usize), row_cols2: (usize, usize)) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Swaps two entries without bound-checking.\n","sig":null,"attributes":[{"value":"/ Swaps two entries without bound-checking.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":380084,"byte_end":380129,"line_start":789,"line_end":789,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":380134,"byte_end":380143,"line_start":790,"line_end":790,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2978},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":380520,"byte_end":380524,"line_start":799,"line_end":799,"column_start":12,"column_end":16},"name":"swap","qualname":"<Matrix<N, R, C, S>>::swap","value":"fn (&mut self, row_cols1: (usize, usize), row_cols2: (usize, usize)) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Swaps two entries.\n","sig":null,"attributes":[{"value":"/ Swaps two entries.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":380472,"byte_end":380494,"line_start":797,"line_end":797,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":380499,"byte_end":380508,"line_start":798,"line_end":798,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2979},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":381200,"byte_end":381215,"line_start":816,"line_end":816,"column_start":12,"column_end":27},"name":"copy_from_slice","qualname":"<Matrix<N, R, C, S>>::copy_from_slice","value":"fn (&mut self, slice: &[N]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Fills this matrix with the content of a slice. Both must hold the same number of elements.","sig":null,"attributes":[{"value":"/ Fills this matrix with the content of a slice. Both must hold the same number of elements.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":380987,"byte_end":381081,"line_start":812,"line_end":812,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":381086,"byte_end":381089,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ The components of the slice are assumed to be ordered in column-major order.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":381094,"byte_end":381174,"line_start":814,"line_end":814,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":381179,"byte_end":381188,"line_start":815,"line_end":815,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2980},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":381816,"byte_end":381825,"line_start":836,"line_end":836,"column_start":12,"column_end":21},"name":"copy_from","qualname":"<Matrix<N, R, C, S>>::copy_from","value":"fn <R2, C2, SB> (&mut self, other: &Matrix<N, R2, C2, SB>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Fills this matrix with the content of another one. Both must have the same shape.\n","sig":null,"attributes":[{"value":"/ Fills this matrix with the content of another one. Both must have the same shape.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":381705,"byte_end":381790,"line_start":834,"line_end":834,"column_start":5,"column_end":90}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":381795,"byte_end":381804,"line_start":835,"line_end":835,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2984},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":382525,"byte_end":382537,"line_start":859,"line_end":859,"column_start":12,"column_end":24},"name":"tr_copy_from","qualname":"<Matrix<N, R, C, S>>::tr_copy_from","value":"fn <R2, C2, SB> (&mut self, other: &Matrix<N, R2, C2, SB>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Fills this matrix with the content of the transpose another one.\n","sig":null,"attributes":[{"value":"/ Fills this matrix with the content of the transpose another one.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":382431,"byte_end":382499,"line_start":857,"line_end":857,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":382504,"byte_end":382513,"line_start":858,"line_end":858,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2988},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":383364,"byte_end":383374,"line_start":884,"line_end":884,"column_start":12,"column_end":22},"name":"apply_into","qualname":"<Matrix<N, R, C, S>>::apply_into","value":"fn <F> (mut self, f: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns `self` with each of its components replaced by the result of a closure `f` applied on it.\n","sig":null,"attributes":[{"value":"/ Returns `self` with each of its components replaced by the result of a closure `f` applied on it.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":383237,"byte_end":383338,"line_start":882,"line_end":882,"column_start":5,"column_end":106}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":383343,"byte_end":383352,"line_start":883,"line_end":883,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2990},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":383575,"byte_end":383580,"line_start":891,"line_end":891,"column_start":12,"column_end":17},"name":"apply","qualname":"<Matrix<N, R, C, S>>::apply","value":"fn <F> (&mut self, mut f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Replaces each component of `self` by the result of a closure `f` applied on it.\n","sig":null,"attributes":[{"value":"/ Replaces each component of `self` by the result of a closure `f` applied on it.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":383466,"byte_end":383549,"line_start":889,"line_end":889,"column_start":5,"column_end":88}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":383554,"byte_end":383563,"line_start":890,"line_end":890,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2992},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":384080,"byte_end":384089,"line_start":907,"line_end":907,"column_start":12,"column_end":21},"name":"zip_apply","qualname":"<Matrix<N, R, C, S>>::zip_apply","value":"fn <N2, R2, C2, S2> (&mut self, rhs: &Matrix<N2, R2, C2, S2>, mut f: impl FnMut(N, N2) -> N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Replaces each component of `self` by the result of a closure `f` applied on its components\n joined with the components from `rhs`.\n","sig":null,"attributes":[{"value":"/ Replaces each component of `self` by the result of a closure `f` applied on its components","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":383913,"byte_end":384007,"line_start":904,"line_end":904,"column_start":5,"column_end":99}},{"value":"/ joined with the components from `rhs`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":384012,"byte_end":384054,"line_start":905,"line_end":905,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":384059,"byte_end":384068,"line_start":906,"line_end":906,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2998},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":385085,"byte_end":385098,"line_start":940,"line_end":940,"column_start":12,"column_end":25},"name":"zip_zip_apply","qualname":"<Matrix<N, R, C, S>>::zip_zip_apply","value":"fn <N2, R2, C2, S2, N3, R3, C3, S3> (&mut self, b: &Matrix<N2, R2, C2, S2>, c: &Matrix<N3, R3, C3, S3>, mut f: impl FnMut(N, N2, N3) -> N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Replaces each component of `self` by the result of a closure `f` applied on its components\n joined with the components from `b` and `c`.\n","sig":null,"attributes":[{"value":"/ Replaces each component of `self` by the result of a closure `f` applied on its components","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":384912,"byte_end":385006,"line_start":937,"line_end":937,"column_start":5,"column_end":99}},{"value":"/ joined with the components from `b` and `c`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":385011,"byte_end":385059,"line_start":938,"line_end":938,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":385064,"byte_end":385073,"line_start":939,"line_end":939,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3012},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":386539,"byte_end":386553,"line_start":986,"line_end":986,"column_start":19,"column_end":33},"name":"vget_unchecked","qualname":"<Vector<N, D, S>>::vget_unchecked","value":"fn (&self, i: usize) -> &N","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the i-th element of this column vector without bound checking.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the i-th element of this column vector without bound checking.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":386420,"byte_end":386506,"line_start":984,"line_end":984,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":386511,"byte_end":386520,"line_start":985,"line_end":985,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3017},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":386934,"byte_end":386952,"line_start":996,"line_end":996,"column_start":19,"column_end":37},"name":"vget_unchecked_mut","qualname":"<Vector<N, D, S>>::vget_unchecked_mut","value":"fn (&mut self, i: usize) -> &mut N","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the i-th element of this column vector without bound checking.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the i-th element of this column vector without bound checking.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":386807,"byte_end":386901,"line_start":994,"line_end":994,"column_start":5,"column_end":99}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":386906,"byte_end":386915,"line_start":995,"line_end":995,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3023},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":387349,"byte_end":387357,"line_start":1006,"line_end":1006,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<Matrix<N, R, C, S>>::as_slice","value":"fn (&self) -> &[N]","parent":null,"children":[],"decl_id":null,"docs":" Extracts a slice containing the entire matrix entries ordered column-by-columns.\n","sig":null,"attributes":[{"value":"/ Extracts a slice containing the entire matrix entries ordered column-by-columns.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":387239,"byte_end":387323,"line_start":1004,"line_end":1004,"column_start":5,"column_end":89}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":387328,"byte_end":387337,"line_start":1005,"line_end":1005,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3029},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":387622,"byte_end":387634,"line_start":1014,"line_end":1014,"column_start":12,"column_end":24},"name":"as_mut_slice","qualname":"<Matrix<N, R, C, S>>::as_mut_slice","value":"fn (&mut self) -> &mut [N]","parent":null,"children":[],"decl_id":null,"docs":" Extracts a mutable slice containing the entire matrix entries ordered column-by-columns.\n","sig":null,"attributes":[{"value":"/ Extracts a mutable slice containing the entire matrix entries ordered column-by-columns.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":387504,"byte_end":387596,"line_start":1012,"line_end":1012,"column_start":5,"column_end":97}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":387601,"byte_end":387610,"line_start":1013,"line_end":1013,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3034},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":387836,"byte_end":387849,"line_start":1021,"line_end":1021,"column_start":12,"column_end":25},"name":"transpose_mut","qualname":"<Matrix<N, D, D, S>>::transpose_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Transposes the square matrix `self` in-place.\n","sig":null,"attributes":[{"value":"/ Transposes the square matrix `self` in-place.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":387775,"byte_end":387824,"line_start":1020,"line_end":1020,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3040},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":388376,"byte_end":388386,"line_start":1040,"line_end":1040,"column_start":12,"column_end":22},"name":"adjoint_to","qualname":"<Matrix<N, R, C, S>>::adjoint_to","value":"fn <R2, C2, SB> (&self, out: &mut Matrix<N, R2, C2, SB>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Takes the adjoint (aka. conjugate-transpose) of `self` and store the result into `out`.\n","sig":null,"attributes":[{"value":"/ Takes the adjoint (aka. conjugate-transpose) of `self` and store the result into `out`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":388259,"byte_end":388350,"line_start":1038,"line_end":1038,"column_start":5,"column_end":96}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":388355,"byte_end":388364,"line_start":1039,"line_end":1039,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3044},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":389174,"byte_end":389181,"line_start":1066,"line_end":1066,"column_start":12,"column_end":19},"name":"adjoint","qualname":"<Matrix<N, R, C, S>>::adjoint","value":"fn (&self) -> MatrixMN<N, C, R>","parent":null,"children":[],"decl_id":null,"docs":" The adjoint (aka. conjugate-transpose) of `self`.\n","sig":null,"attributes":[{"value":"/ The adjoint (aka. conjugate-transpose) of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":389040,"byte_end":389093,"line_start":1063,"line_end":1063,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":389098,"byte_end":389107,"line_start":1064,"line_end":1064,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use adjoint_mut()?\"","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":389112,"byte_end":389162,"line_start":1065,"line_end":1065,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3045},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":389673,"byte_end":389695,"line_start":1083,"line_end":1083,"column_start":12,"column_end":34},"name":"conjugate_transpose_to","qualname":"<Matrix<N, R, C, S>>::conjugate_transpose_to","value":"fn <R2, C2, SB> (&self, out: &mut Matrix<N, R2, C2, SB>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Takes the conjugate and transposes `self` and store the result into `out`.\n","sig":null,"attributes":[{"value":"/ Takes the conjugate and transposes `self` and store the result into `out`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":389509,"byte_end":389587,"line_start":1080,"line_end":1080,"column_start":5,"column_end":83}},{"value":"deprecated(note = \"Renamed `self.adjoint_to(out)`.\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":389592,"byte_end":389647,"line_start":1081,"line_end":1081,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":389652,"byte_end":389661,"line_start":1082,"line_end":1082,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3049},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":390074,"byte_end":390093,"line_start":1096,"line_end":1096,"column_start":12,"column_end":31},"name":"conjugate_transpose","qualname":"<Matrix<N, R, C, S>>::conjugate_transpose","value":"fn (&self) -> MatrixMN<N, C, R>","parent":null,"children":[],"decl_id":null,"docs":" The conjugate transposition of `self`.\n","sig":null,"attributes":[{"value":"/ The conjugate transposition of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":389952,"byte_end":389994,"line_start":1093,"line_end":1093,"column_start":5,"column_end":47}},{"value":"deprecated(note = \"Renamed `self.adjoint()`.\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":389999,"byte_end":390048,"line_start":1094,"line_end":1094,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":390053,"byte_end":390062,"line_start":1095,"line_end":1095,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3050},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":390329,"byte_end":390338,"line_start":1106,"line_end":1106,"column_start":12,"column_end":21},"name":"conjugate","qualname":"<Matrix<N, R, C, S>>::conjugate","value":"fn (&self) -> MatrixMN<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" The conjugate of `self`.\n","sig":null,"attributes":[{"value":"/ The conjugate of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":390218,"byte_end":390246,"line_start":1103,"line_end":1103,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":390251,"byte_end":390260,"line_start":1104,"line_end":1104,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use conjugate_mut()?\"","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":390265,"byte_end":390317,"line_start":1105,"line_end":1105,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3052},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":390636,"byte_end":390643,"line_start":1116,"line_end":1116,"column_start":12,"column_end":19},"name":"unscale","qualname":"<Matrix<N, R, C, S>>::unscale","value":"fn (&self, real: N::SimdRealField) -> MatrixMN<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Divides each component of the complex matrix `self` by the given real.\n","sig":null,"attributes":[{"value":"/ Divides each component of the complex matrix `self` by the given real.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":390481,"byte_end":390555,"line_start":1113,"line_end":1113,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":390560,"byte_end":390569,"line_start":1114,"line_end":1114,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use unscale_mut()?\"","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":390574,"byte_end":390624,"line_start":1115,"line_end":1115,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3054},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":390968,"byte_end":390973,"line_start":1126,"line_end":1126,"column_start":12,"column_end":17},"name":"scale","qualname":"<Matrix<N, R, C, S>>::scale","value":"fn (&self, real: N::SimdRealField) -> MatrixMN<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Multiplies each component of the complex matrix `self` by the given real.\n","sig":null,"attributes":[{"value":"/ Multiplies each component of the complex matrix `self` by the given real.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":390812,"byte_end":390889,"line_start":1123,"line_end":1123,"column_start":5,"column_end":82}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":390894,"byte_end":390903,"line_start":1124,"line_end":1124,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use scale_mut()?\"","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":390908,"byte_end":390956,"line_start":1125,"line_end":1125,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":3061},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":391320,"byte_end":391333,"line_start":1137,"line_end":1137,"column_start":12,"column_end":25},"name":"conjugate_mut","qualname":"<Matrix<N, R, C, S>>::conjugate_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The conjugate of the complex matrix `self` computed in-place.\n","sig":null,"attributes":[{"value":"/ The conjugate of the complex matrix `self` computed in-place.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":391229,"byte_end":391294,"line_start":1135,"line_end":1135,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":391299,"byte_end":391308,"line_start":1136,"line_end":1136,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3063},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":391501,"byte_end":391512,"line_start":1143,"line_end":1143,"column_start":12,"column_end":23},"name":"unscale_mut","qualname":"<Matrix<N, R, C, S>>::unscale_mut","value":"fn (&mut self, real: N::SimdRealField) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Divides each component of the complex matrix `self` by the given real.\n","sig":null,"attributes":[{"value":"/ Divides each component of the complex matrix `self` by the given real.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":391401,"byte_end":391475,"line_start":1141,"line_end":1141,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":391480,"byte_end":391489,"line_start":1142,"line_end":1142,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3065},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":391709,"byte_end":391718,"line_start":1149,"line_end":1149,"column_start":12,"column_end":21},"name":"scale_mut","qualname":"<Matrix<N, R, C, S>>::scale_mut","value":"fn (&mut self, real: N::SimdRealField) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Multiplies each component of the complex matrix `self` by the given real.\n","sig":null,"attributes":[{"value":"/ Multiplies each component of the complex matrix `self` by the given real.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":391606,"byte_end":391683,"line_start":1147,"line_end":1147,"column_start":5,"column_end":82}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":391688,"byte_end":391697,"line_start":1148,"line_end":1148,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3071},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":391995,"byte_end":392018,"line_start":1157,"line_end":1157,"column_start":12,"column_end":35},"name":"conjugate_transform_mut","qualname":"<Matrix<N, D, D, S>>::conjugate_transform_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets `self` to its adjoint.\n","sig":null,"attributes":[{"value":"/ Sets `self` to its adjoint.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":391891,"byte_end":391922,"line_start":1155,"line_end":1155,"column_start":5,"column_end":36}},{"value":"deprecated(note = \"Renamed to `self.adjoint_mut()`.\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":391927,"byte_end":391983,"line_start":1156,"line_end":1156,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3072},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":392140,"byte_end":392151,"line_start":1162,"line_end":1162,"column_start":12,"column_end":23},"name":"adjoint_mut","qualname":"<Matrix<N, D, D, S>>::adjoint_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets `self` to its adjoint (aka. conjugate-transpose).\n","sig":null,"attributes":[{"value":"/ Sets `self` to its adjoint (aka. conjugate-transpose).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":392070,"byte_end":392128,"line_start":1161,"line_end":1161,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3077},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":393082,"byte_end":393090,"line_start":1193,"line_end":1193,"column_start":12,"column_end":20},"name":"diagonal","qualname":"<SquareMatrix<N, D, S>>::diagonal","value":"fn (&self) -> VectorN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" The diagonal of this matrix.\n","sig":null,"attributes":[{"value":"/ The diagonal of this matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":393024,"byte_end":393056,"line_start":1191,"line_end":1191,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":393061,"byte_end":393070,"line_start":1192,"line_end":1192,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3079},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":393417,"byte_end":393429,"line_start":1204,"line_end":1204,"column_start":12,"column_end":24},"name":"map_diagonal","qualname":"<SquareMatrix<N, D, S>>::map_diagonal","value":"fn <N2> (&self, mut f: impl FnMut(N) -> N2) -> VectorN<N2, D>","parent":null,"children":[],"decl_id":null,"docs":" Apply the given function to this matrix's diagonal and returns it.","sig":null,"attributes":[{"value":"/ Apply the given function to this matrix's diagonal and returns it.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":393218,"byte_end":393288,"line_start":1200,"line_end":1200,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":393293,"byte_end":393296,"line_start":1201,"line_end":1201,"column_start":5,"column_end":8}},{"value":"/ This is a more efficient version of `self.diagonal().map(f)` since this","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":393301,"byte_end":393376,"line_start":1202,"line_end":1202,"column_start":5,"column_end":80}},{"value":"/ allocates only once.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":393381,"byte_end":393405,"line_start":1203,"line_end":1203,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3082},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":394098,"byte_end":394103,"line_start":1227,"line_end":1227,"column_start":12,"column_end":17},"name":"trace","qualname":"<SquareMatrix<N, D, S>>::trace","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" Computes a trace of a square matrix, i.e., the sum of its diagonal elements.\n","sig":null,"attributes":[{"value":"/ Computes a trace of a square matrix, i.e., the sum of its diagonal elements.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":393992,"byte_end":394072,"line_start":1225,"line_end":1225,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":394077,"byte_end":394086,"line_start":1226,"line_end":1226,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3087},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":394686,"byte_end":394700,"line_start":1250,"line_end":1250,"column_start":12,"column_end":26},"name":"symmetric_part","qualname":"<SquareMatrix<N, D, S>>::symmetric_part","value":"fn (&self) -> MatrixMN<N, D, D>","parent":null,"children":[],"decl_id":null,"docs":" The symmetric part of `self`, i.e., `0.5 * (self + self.transpose())`.\n","sig":null,"attributes":[{"value":"/ The symmetric part of `self`, i.e., `0.5 * (self + self.transpose())`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":394586,"byte_end":394660,"line_start":1248,"line_end":1248,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":394665,"byte_end":394674,"line_start":1249,"line_end":1249,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3088},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":395143,"byte_end":395157,"line_start":1266,"line_end":1266,"column_start":12,"column_end":26},"name":"hermitian_part","qualname":"<SquareMatrix<N, D, S>>::hermitian_part","value":"fn (&self) -> MatrixMN<N, D, D>","parent":null,"children":[],"decl_id":null,"docs":" The hermitian part of `self`, i.e., `0.5 * (self + self.adjoint())`.\n","sig":null,"attributes":[{"value":"/ The hermitian part of `self`, i.e., `0.5 * (self + self.adjoint())`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":395045,"byte_end":395117,"line_start":1264,"line_end":1264,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":395122,"byte_end":395131,"line_start":1265,"line_end":1265,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3093},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":395779,"byte_end":395793,"line_start":1288,"line_end":1288,"column_start":12,"column_end":26},"name":"to_homogeneous","qualname":"<Matrix<N, D, D, S>>::to_homogeneous","value":"fn (&self) -> MatrixN<N, DimSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Yields the homogeneous matrix for this matrix, i.e., appending an additional dimension and\n and setting the diagonal element to `1`.\n","sig":null,"attributes":[{"value":"/ Yields the homogeneous matrix for this matrix, i.e., appending an additional dimension and","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":395610,"byte_end":395704,"line_start":1285,"line_end":1285,"column_start":5,"column_end":99}},{"value":"/ and setting the diagonal element to `1`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":395709,"byte_end":395753,"line_start":1286,"line_end":1286,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":395758,"byte_end":395767,"line_start":1287,"line_end":1287,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3098},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":396523,"byte_end":396537,"line_start":1308,"line_end":1308,"column_start":12,"column_end":26},"name":"to_homogeneous","qualname":"<Vector<N, D, S>>::to_homogeneous","value":"fn (&self) -> VectorN<N, DimSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the coordinates in projective space of this vector, i.e., appends a `0` to its\n coordinates.\n","sig":null,"attributes":[{"value":"/ Computes the coordinates in projective space of this vector, i.e., appends a `0` to its","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":396385,"byte_end":396476,"line_start":1305,"line_end":1305,"column_start":5,"column_end":96}},{"value":"/ coordinates.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":396481,"byte_end":396497,"line_start":1306,"line_end":1306,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":396502,"byte_end":396511,"line_start":1307,"line_end":1307,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3099},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":396873,"byte_end":396889,"line_start":1318,"line_end":1318,"column_start":12,"column_end":28},"name":"from_homogeneous","qualname":"<Vector<N, D, S>>::from_homogeneous","value":"fn <SB> (v: Vector<N, DimSum<D, U1>, SB>) -> Option<VectorN<N, D>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a vector from coordinates in projective space, i.e., removes a `0` at the end of\n `self`. Returns `None` if this last component is not zero.\n","sig":null,"attributes":[{"value":"/ Constructs a vector from coordinates in projective space, i.e., removes a `0` at the end of","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":396685,"byte_end":396780,"line_start":1315,"line_end":1315,"column_start":5,"column_end":100}},{"value":"/ `self`. Returns `None` if this last component is not zero.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":396785,"byte_end":396847,"line_start":1316,"line_end":1316,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":396852,"byte_end":396861,"line_start":1317,"line_end":1317,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3105},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":397457,"byte_end":397461,"line_start":1335,"line_end":1335,"column_start":12,"column_end":16},"name":"push","qualname":"<Vector<N, D, S>>::push","value":"fn (&self, element: N) -> VectorN<N, DimSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new vector of higher dimension by appending `element` to the end of `self`.\n","sig":null,"attributes":[{"value":"/ Constructs a new vector of higher dimension by appending `element` to the end of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":397339,"byte_end":397431,"line_start":1333,"line_end":1333,"column_start":5,"column_end":97}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":397436,"byte_end":397445,"line_start":1334,"line_end":1334,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3165},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":406302,"byte_end":406306,"line_start":1635,"line_end":1635,"column_start":12,"column_end":16},"name":"perp","qualname":"<Matrix<N, R, C, S>>::perp","value":"fn <R2, C2, SB> (&self, b: &Matrix<N, R2, C2, SB>) -> N","parent":null,"children":[],"decl_id":null,"docs":" The perpendicular product between two 2D column vectors, i.e. `a.x * b.y - a.y * b.x`.\n","sig":null,"attributes":[{"value":"/ The perpendicular product between two 2D column vectors, i.e. `a.x * b.y - a.y * b.x`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":406186,"byte_end":406276,"line_start":1633,"line_end":1633,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":406281,"byte_end":406290,"line_start":1634,"line_end":1634,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3169},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":407339,"byte_end":407344,"line_start":1664,"line_end":1664,"column_start":12,"column_end":17},"name":"cross","qualname":"<Matrix<N, R, C, S>>::cross","value":"fn <R2, C2, SB> (&self, b: &Matrix<N, R2, C2, SB>) -> MatrixCross<N, R, C, R2, C2>","parent":null,"children":[],"decl_id":null,"docs":" The 3D cross product between two vectors.","sig":null,"attributes":[{"value":"/ The 3D cross product between two vectors.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":407096,"byte_end":407141,"line_start":1659,"line_end":1659,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":407146,"byte_end":407149,"line_start":1660,"line_end":1660,"column_start":5,"column_end":8}},{"value":"/ Panics if the shape is not 3D vector. In the future, this will be implemented only for","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":407154,"byte_end":407244,"line_start":1661,"line_end":1661,"column_start":5,"column_end":95}},{"value":"/ dynamically-sized matrices and statically-sized 3D matrices.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":407249,"byte_end":407313,"line_start":1662,"line_end":1662,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":407318,"byte_end":407327,"line_start":1663,"line_end":1663,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3176},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":410408,"byte_end":410420,"line_start":1738,"line_end":1738,"column_start":12,"column_end":24},"name":"cross_matrix","qualname":"<Vector<N, U3, S>>::cross_matrix","value":"fn (&self) -> MatrixN<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" Computes the matrix `M` such that for all vector `v` we have `M * v == self.cross(&v)`.\n","sig":null,"attributes":[{"value":"/ Computes the matrix `M` such that for all vector `v` we have `M * v == self.cross(&v)`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":410291,"byte_end":410382,"line_start":1736,"line_end":1736,"column_start":5,"column_end":96}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":410387,"byte_end":410396,"line_start":1737,"line_end":1737,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3182},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":410949,"byte_end":410954,"line_start":1756,"line_end":1756,"column_start":12,"column_end":17},"name":"angle","qualname":"<Matrix<N, R, C, S>>::angle","value":"fn <R2, C2, SB> (&self, other: &Matrix<N, R2, C2, SB>) -> N::SimdRealField","parent":null,"children":[],"decl_id":null,"docs":" The smallest angle between two vectors.\n","sig":null,"attributes":[{"value":"/ The smallest angle between two vectors.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":410880,"byte_end":410923,"line_start":1754,"line_end":1754,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":410928,"byte_end":410937,"line_start":1755,"line_end":1755,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3190},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":412079,"byte_end":412083,"line_start":1790,"line_end":1790,"column_start":12,"column_end":16},"name":"lerp","qualname":"<Vector<N, D, S>>::lerp","value":"fn <S2> (&self, rhs: &Vector<N, D, S2>, t: N) -> VectorN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Returns `self * (1.0 - t) + rhs * t`, i.e., the linear blend of the vectors x and y using the scalar value a.","sig":null,"attributes":[{"value":"/ Returns `self * (1.0 - t) + rhs * t`, i.e., the linear blend of the vectors x and y using the scalar value a.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":411629,"byte_end":411742,"line_start":1778,"line_end":1778,"column_start":5,"column_end":118}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":411747,"byte_end":411750,"line_start":1779,"line_end":1779,"column_start":5,"column_end":8}},{"value":"/ The value for a is not restricted to the range `[0, 1]`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":411755,"byte_end":411815,"line_start":1780,"line_end":1780,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":411820,"byte_end":411823,"line_start":1781,"line_end":1781,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":411828,"byte_end":411843,"line_start":1782,"line_end":1782,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":411848,"byte_end":411851,"line_start":1783,"line_end":1783,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":411856,"byte_end":411863,"line_start":1784,"line_end":1784,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":411868,"byte_end":411896,"line_start":1785,"line_end":1785,"column_start":5,"column_end":33}},{"value":"/ let x = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":411901,"byte_end":411941,"line_start":1786,"line_end":1786,"column_start":5,"column_end":45}},{"value":"/ let y = Vector3::new(10.0, 20.0, 30.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":411946,"byte_end":411989,"line_start":1787,"line_end":1787,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(x.lerp(&y, 0.1), Vector3::new(1.9, 3.8, 5.7));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":411994,"byte_end":412055,"line_start":1788,"line_end":1788,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":412060,"byte_end":412067,"line_start":1789,"line_end":1789,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3196},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":412806,"byte_end":412811,"line_start":1815,"line_end":1815,"column_start":12,"column_end":17},"name":"slerp","qualname":"<Unit<Vector<N, D, S>>>::slerp","value":"fn <S2> (&self, rhs: &Unit<Vector<N, D, S2>>, t: N) -> Unit<VectorN<N, D>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the spherical linear interpolation between two unit vectors.","sig":null,"attributes":[{"value":"/ Computes the spherical linear interpolation between two unit vectors.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":412408,"byte_end":412481,"line_start":1801,"line_end":1801,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":412486,"byte_end":412489,"line_start":1802,"line_end":1802,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":412494,"byte_end":412509,"line_start":1803,"line_end":1803,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":412514,"byte_end":412517,"line_start":1804,"line_end":1804,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":412522,"byte_end":412529,"line_start":1805,"line_end":1805,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Unit, Vector2};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":412534,"byte_end":412570,"line_start":1806,"line_end":1806,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":412575,"byte_end":412578,"line_start":1807,"line_end":1807,"column_start":5,"column_end":8}},{"value":"/ let v1 = Unit::new_normalize(Vector2::new(1.0, 2.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":412583,"byte_end":412640,"line_start":1808,"line_end":1808,"column_start":5,"column_end":62}},{"value":"/ let v2 = Unit::new_normalize(Vector2::new(2.0, -3.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":412645,"byte_end":412703,"line_start":1809,"line_end":1809,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":412708,"byte_end":412711,"line_start":1810,"line_end":1810,"column_start":5,"column_end":8}},{"value":"/ let v = v1.slerp(&v2, 1.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":412716,"byte_end":412747,"line_start":1811,"line_end":1811,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":412752,"byte_end":412755,"line_start":1812,"line_end":1812,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(v, v2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":412760,"byte_end":412782,"line_start":1813,"line_end":1813,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":412787,"byte_end":412794,"line_start":1814,"line_end":1814,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3198},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":413460,"byte_end":413469,"line_start":1832,"line_end":1832,"column_start":12,"column_end":21},"name":"try_slerp","qualname":"<Unit<Vector<N, D, S>>>::try_slerp","value":"fn <S2> (&self, rhs: &Unit<Vector<N, D, S2>>, t: N, epsilon: N) -> Option<Unit<VectorN<N, D>>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the spherical linear interpolation between two unit vectors.","sig":null,"attributes":[{"value":"/ Computes the spherical linear interpolation between two unit vectors.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":413210,"byte_end":413283,"line_start":1828,"line_end":1828,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":413288,"byte_end":413291,"line_start":1829,"line_end":1829,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the two vectors are almost collinear and with opposite direction","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":413296,"byte_end":413382,"line_start":1830,"line_end":1830,"column_start":5,"column_end":91}},{"value":"/ (in this case, there is an infinity of possible results).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":413387,"byte_end":413448,"line_start":1831,"line_end":1831,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":17120},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":421284,"byte_end":421296,"line_start":85,"line_end":85,"column_start":23,"column_end":35},"name":"SliceStorage","qualname":"::base::matrix_slice::SliceStorage","value":"SliceStorage {  }","parent":null,"children":[{"krate":0,"index":17127},{"krate":0,"index":17128},{"krate":0,"index":17129},{"krate":0,"index":17130}],"decl_id":null,"docs":"A matrix data storage for a matrix slice. Only contains an internal reference to another matrix data storage.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":17176},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":421548,"byte_end":421563,"line_start":89,"line_end":89,"column_start":30,"column_end":45},"name":"SliceStorageMut","qualname":"::base::matrix_slice::SliceStorageMut","value":"SliceStorageMut {  }","parent":null,"children":[{"krate":0,"index":17183},{"krate":0,"index":17184},{"krate":0,"index":17185},{"krate":0,"index":17186}],"decl_id":null,"docs":"A mutable matrix data storage for mutable matrix slice. Only contains an internal mutable reference to another matrix data storage.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":17227},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":443537,"byte_end":443548,"line_start":638,"line_end":638,"column_start":19,"column_end":30},"name":"MatrixSlice","qualname":"::base::matrix_slice::MatrixSlice","value":"Matrix<N, R, C, SliceStorage<'a, N, R, C, RStride, CStride>>","parent":null,"children":[],"decl_id":null,"docs":" A matrix slice.\n","sig":null,"attributes":[{"value":"/ A matrix slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":427459,"byte_end":427478,"line_start":277,"line_end":277,"column_start":9,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":17239},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":443614,"byte_end":443617,"line_start":639,"line_end":639,"column_start":6,"column_end":9},"name":"row","qualname":"<Matrix<N, R, C, S>>::row","value":"fn (self: &Self, i: usize) -> MatrixSlice<N, U1, C, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice containing the i-th row of this matrix.\n","sig":null,"attributes":[{"value":"/ Returns a slice containing the i-th row of this matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":427798,"byte_end":427857,"line_start":287,"line_end":287,"column_start":13,"column_end":72}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":427870,"byte_end":427879,"line_start":288,"line_end":288,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17240},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":443624,"byte_end":443632,"line_start":640,"line_end":640,"column_start":6,"column_end":14},"name":"row_part","qualname":"<Matrix<N, R, C, S>>::row_part","value":"fn (self: &Self, i: usize, n: usize) -> MatrixSlice<N, U1, Dynamic, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice containing the `n` first elements of the i-th row of this matrix.\n","sig":null,"attributes":[{"value":"/ Returns a slice containing the `n` first elements of the i-th row of this matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":428044,"byte_end":428129,"line_start":293,"line_end":293,"column_start":13,"column_end":98}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":428142,"byte_end":428151,"line_start":294,"line_end":294,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17241},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":443639,"byte_end":443643,"line_start":641,"line_end":641,"column_start":6,"column_end":10},"name":"rows","qualname":"<Matrix<N, R, C, S>>::rows","value":"fn (self: &Self, first_row: usize, nrows: usize) -> MatrixSlice<N, Dynamic, C, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix a set of consecutive rows.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix a set of consecutive rows.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":428362,"byte_end":428418,"line_start":299,"line_end":299,"column_start":13,"column_end":69}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":428431,"byte_end":428440,"line_start":300,"line_end":300,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17242},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":443650,"byte_end":443664,"line_start":642,"line_end":642,"column_start":6,"column_end":20},"name":"rows_with_step","qualname":"<Matrix<N, R, C, S>>::rows_with_step","value":"fn (self: &Self, first_row: usize, nrows: usize, step: usize) -> MatrixSlice<N, Dynamic, C, Dynamic, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix a set of consecutive rows regularly skipping `step` rows.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix a set of consecutive rows regularly skipping `step` rows.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":428675,"byte_end":428762,"line_start":307,"line_end":307,"column_start":13,"column_end":100}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":428775,"byte_end":428784,"line_start":308,"line_end":308,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17243},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":443671,"byte_end":443681,"line_start":643,"line_end":643,"column_start":6,"column_end":16},"name":"fixed_rows","qualname":"<Matrix<N, R, C, S>>::fixed_rows","value":"fn <RSlice> (self: &Self, first_row: usize) -> MatrixSlice<N, RSlice, C, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts a compile-time number of consecutive rows from this matrix.\n","sig":null,"attributes":[{"value":"/ Extracts a compile-time number of consecutive rows from this matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":429055,"byte_end":429127,"line_start":315,"line_end":315,"column_start":13,"column_end":85}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":429140,"byte_end":429149,"line_start":316,"line_end":316,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17245},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":443688,"byte_end":443708,"line_start":644,"line_end":644,"column_start":6,"column_end":26},"name":"fixed_rows_with_step","qualname":"<Matrix<N, R, C, S>>::fixed_rows_with_step","value":"fn <RSlice> (self: &Self, first_row: usize, step: usize) -> MatrixSlice<N, RSlice, C, Dynamic, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix a compile-time number of rows regularly skipping `step`\n rows.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix a compile-time number of rows regularly skipping `step`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":429387,"byte_end":429472,"line_start":323,"line_end":323,"column_start":13,"column_end":98}},{"value":"/ rows.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":429485,"byte_end":429494,"line_start":324,"line_end":324,"column_start":13,"column_end":22}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":429507,"byte_end":429516,"line_start":325,"line_end":325,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17247},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":443715,"byte_end":443727,"line_start":645,"line_end":645,"column_start":6,"column_end":18},"name":"rows_generic","qualname":"<Matrix<N, R, C, S>>::rows_generic","value":"fn <RSlice> (self: &Self, row_start: usize, nrows: RSlice) -> MatrixSlice<N, RSlice, C, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix `nrows` rows regularly skipping `step` rows. Both\n argument may or may not be values known at compile-time.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix `nrows` rows regularly skipping `step` rows. Both","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":429790,"byte_end":429869,"line_start":332,"line_end":332,"column_start":13,"column_end":92}},{"value":"/ argument may or may not be values known at compile-time.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":429882,"byte_end":429942,"line_start":333,"line_end":333,"column_start":13,"column_end":73}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":429955,"byte_end":429964,"line_start":334,"line_end":334,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17249},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":443734,"byte_end":443756,"line_start":646,"line_end":646,"column_start":6,"column_end":28},"name":"rows_generic_with_step","qualname":"<Matrix<N, R, C, S>>::rows_generic_with_step","value":"fn <RSlice> (self: &Self, row_start: usize, nrows: RSlice, step: usize) -> MatrixSlice<N, RSlice, C, Dynamic, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix `nrows` rows regularly skipping `step` rows. Both\n argument may or may not be values known at compile-time.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix `nrows` rows regularly skipping `step` rows. Both","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":430556,"byte_end":430635,"line_start":349,"line_end":349,"column_start":13,"column_end":92}},{"value":"/ argument may or may not be values known at compile-time.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":430648,"byte_end":430708,"line_start":350,"line_end":350,"column_start":13,"column_end":73}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":430721,"byte_end":430730,"line_start":351,"line_end":351,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17251},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":443763,"byte_end":443769,"line_start":647,"line_end":647,"column_start":6,"column_end":12},"name":"column","qualname":"<Matrix<N, R, C, S>>::column","value":"fn (self: &Self, i: usize) -> MatrixSlice<N, R, U1, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice containing the i-th column of this matrix.\n","sig":null,"attributes":[{"value":"/ Returns a slice containing the i-th column of this matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":431638,"byte_end":431700,"line_start":374,"line_end":374,"column_start":13,"column_end":75}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":431713,"byte_end":431722,"line_start":375,"line_end":375,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17252},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":443776,"byte_end":443787,"line_start":648,"line_end":648,"column_start":6,"column_end":17},"name":"column_part","qualname":"<Matrix<N, R, C, S>>::column_part","value":"fn (self: &Self, i: usize, n: usize) -> MatrixSlice<N, Dynamic, U1, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice containing the `n` first elements of the i-th column of this matrix.\n","sig":null,"attributes":[{"value":"/ Returns a slice containing the `n` first elements of the i-th column of this matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":431893,"byte_end":431981,"line_start":380,"line_end":380,"column_start":13,"column_end":101}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":431994,"byte_end":432003,"line_start":381,"line_end":381,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17253},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":443794,"byte_end":443801,"line_start":649,"line_end":649,"column_start":6,"column_end":13},"name":"columns","qualname":"<Matrix<N, R, C, S>>::columns","value":"fn (self: &Self, first_col: usize, ncols: usize) -> MatrixSlice<N, R, Dynamic, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix a set of consecutive columns.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix a set of consecutive columns.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":432217,"byte_end":432276,"line_start":386,"line_end":386,"column_start":13,"column_end":72}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":432289,"byte_end":432298,"line_start":387,"line_end":387,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17254},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":443808,"byte_end":443825,"line_start":650,"line_end":650,"column_start":6,"column_end":23},"name":"columns_with_step","qualname":"<Matrix<N, R, C, S>>::columns_with_step","value":"fn (self: &Self, first_col: usize, ncols: usize, step: usize) -> MatrixSlice<N, R, Dynamic, S::RStride, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix a set of consecutive columns regularly skipping `step`\n columns.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix a set of consecutive columns regularly skipping `step`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":432539,"byte_end":432623,"line_start":394,"line_end":394,"column_start":13,"column_end":97}},{"value":"/ columns.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":432636,"byte_end":432648,"line_start":395,"line_end":395,"column_start":13,"column_end":25}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":432661,"byte_end":432670,"line_start":396,"line_end":396,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17255},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":443832,"byte_end":443845,"line_start":651,"line_end":651,"column_start":6,"column_end":19},"name":"fixed_columns","qualname":"<Matrix<N, R, C, S>>::fixed_columns","value":"fn <CSlice> (self: &Self, first_col: usize) -> MatrixSlice<N, R, CSlice, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts a compile-time number of consecutive columns from this matrix.\n","sig":null,"attributes":[{"value":"/ Extracts a compile-time number of consecutive columns from this matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":432947,"byte_end":433022,"line_start":403,"line_end":403,"column_start":13,"column_end":88}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":433035,"byte_end":433044,"line_start":404,"line_end":404,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17257},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":443852,"byte_end":443875,"line_start":652,"line_end":652,"column_start":6,"column_end":29},"name":"fixed_columns_with_step","qualname":"<Matrix<N, R, C, S>>::fixed_columns_with_step","value":"fn <CSlice> (self: &Self, first_col: usize, step: usize) -> MatrixSlice<N, R, CSlice, S::RStride, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix a compile-time number of columns regularly skipping\n `step` columns.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix a compile-time number of columns regularly skipping","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":433288,"byte_end":433369,"line_start":411,"line_end":411,"column_start":13,"column_end":94}},{"value":"/ `step` columns.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":433382,"byte_end":433401,"line_start":412,"line_end":412,"column_start":13,"column_end":32}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":433414,"byte_end":433423,"line_start":413,"line_end":413,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17259},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":443882,"byte_end":443897,"line_start":653,"line_end":653,"column_start":6,"column_end":21},"name":"columns_generic","qualname":"<Matrix<N, R, C, S>>::columns_generic","value":"fn <CSlice> (self: &Self, first_col: usize, ncols: CSlice) -> MatrixSlice<N, R, CSlice, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix `ncols` columns. The number of columns may or may not be\n known at compile-time.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix `ncols` columns. The number of columns may or may not be","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":433703,"byte_end":433789,"line_start":420,"line_end":420,"column_start":13,"column_end":99}},{"value":"/ known at compile-time.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":433802,"byte_end":433828,"line_start":421,"line_end":421,"column_start":13,"column_end":39}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":433841,"byte_end":433850,"line_start":422,"line_end":422,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17261},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":443904,"byte_end":443929,"line_start":654,"line_end":654,"column_start":6,"column_end":31},"name":"columns_generic_with_step","qualname":"<Matrix<N, R, C, S>>::columns_generic_with_step","value":"fn <CSlice> (self: &Self, first_col: usize, ncols: CSlice, step: usize) -> MatrixSlice<N, R, CSlice, S::RStride, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix `ncols` columns skipping `step` columns. Both argument may\n or may not be values known at compile-time.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix `ncols` columns skipping `step` columns. Both argument may","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":434443,"byte_end":434531,"line_start":437,"line_end":437,"column_start":13,"column_end":101}},{"value":"/ or may not be values known at compile-time.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":434544,"byte_end":434591,"line_start":438,"line_end":438,"column_start":13,"column_end":60}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":434604,"byte_end":434613,"line_start":439,"line_end":439,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17263},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":443936,"byte_end":443941,"line_start":655,"line_end":655,"column_start":6,"column_end":11},"name":"slice","qualname":"<Matrix<N, R, C, S>>::slice","value":"fn (self: &Self, start: (usize, usize), shape: (usize, usize)) -> MatrixSlice<N, Dynamic, Dynamic, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Slices this matrix starting at its component `(irow, icol)` and with `(nrows, ncols)`\n consecutive elements.\n","sig":null,"attributes":[{"value":"/ Slices this matrix starting at its component `(irow, icol)` and with `(nrows, ncols)`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":435497,"byte_end":435586,"line_start":462,"line_end":462,"column_start":13,"column_end":102}},{"value":"/ consecutive elements.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":435599,"byte_end":435624,"line_start":463,"line_end":463,"column_start":13,"column_end":38}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":435637,"byte_end":435646,"line_start":464,"line_end":464,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17264},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":443948,"byte_end":443964,"line_start":656,"line_end":656,"column_start":6,"column_end":22},"name":"slice_with_steps","qualname":"<Matrix<N, R, C, S>>::slice_with_steps","value":"fn (self: &Self, start: (usize, usize), shape: (usize, usize), steps: (usize, usize)) -> MatrixSlice<N, Dynamic, Dynamic, Dynamic, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Slices this matrix starting at its component `(start.0, start.1)` and with\n `(shape.0, shape.1)` components. Each row (resp. column) of the sliced matrix is\n separated by `steps.0` (resp. `steps.1`) ignored rows (resp. columns) of the\n original matrix.\n","sig":null,"attributes":[{"value":"/ Slices this matrix starting at its component `(start.0, start.1)` and with","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":436166,"byte_end":436244,"line_start":478,"line_end":478,"column_start":13,"column_end":91}},{"value":"/ `(shape.0, shape.1)` components. Each row (resp. column) of the sliced matrix is","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":436257,"byte_end":436341,"line_start":479,"line_end":479,"column_start":13,"column_end":97}},{"value":"/ separated by `steps.0` (resp. `steps.1`) ignored rows (resp. columns) of the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":436354,"byte_end":436434,"line_start":480,"line_end":480,"column_start":13,"column_end":93}},{"value":"/ original matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":436447,"byte_end":436467,"line_start":481,"line_end":481,"column_start":13,"column_end":33}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":436480,"byte_end":436489,"line_start":482,"line_end":482,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17265},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":443971,"byte_end":443982,"line_start":657,"line_end":657,"column_start":6,"column_end":17},"name":"fixed_slice","qualname":"<Matrix<N, R, C, S>>::fixed_slice","value":"fn <RSlice, CSlice> (self: &Self, irow: usize, icol: usize) -> MatrixSlice<N, RSlice, CSlice, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Slices this matrix starting at its component `(irow, icol)` and with `(R::dim(),\n CSlice::dim())` consecutive components.\n","sig":null,"attributes":[{"value":"/ Slices this matrix starting at its component `(irow, icol)` and with `(R::dim(),","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":436850,"byte_end":436934,"line_start":490,"line_end":490,"column_start":13,"column_end":97}},{"value":"/ CSlice::dim())` consecutive components.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":436947,"byte_end":436990,"line_start":491,"line_end":491,"column_start":13,"column_end":56}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":437003,"byte_end":437012,"line_start":492,"line_end":492,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17268},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":443989,"byte_end":444011,"line_start":658,"line_end":658,"column_start":6,"column_end":28},"name":"fixed_slice_with_steps","qualname":"<Matrix<N, R, C, S>>::fixed_slice_with_steps","value":"fn <RSlice, CSlice> (self: &Self, start: (usize, usize), steps: (usize, usize)) -> MatrixSlice<N, RSlice, CSlice, Dynamic, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Slices this matrix starting at its component `(start.0, start.1)` and with\n `(R::dim(), CSlice::dim())` components. Each row (resp. column) of the sliced\n matrix is separated by `steps.0` (resp. `steps.1`) ignored rows (resp. columns) of\n the original matrix.\n","sig":null,"attributes":[{"value":"/ Slices this matrix starting at its component `(start.0, start.1)` and with","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":437633,"byte_end":437711,"line_start":507,"line_end":507,"column_start":13,"column_end":91}},{"value":"/ `(R::dim(), CSlice::dim())` components. Each row (resp. column) of the sliced","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":437724,"byte_end":437805,"line_start":508,"line_end":508,"column_start":13,"column_end":94}},{"value":"/ matrix is separated by `steps.0` (resp. `steps.1`) ignored rows (resp. columns) of","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":437818,"byte_end":437904,"line_start":509,"line_end":509,"column_start":13,"column_end":99}},{"value":"/ the original matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":437917,"byte_end":437941,"line_start":510,"line_end":510,"column_start":13,"column_end":37}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":437954,"byte_end":437963,"line_start":511,"line_end":511,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17271},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":444018,"byte_end":444031,"line_start":659,"line_end":659,"column_start":6,"column_end":19},"name":"generic_slice","qualname":"<Matrix<N, R, C, S>>::generic_slice","value":"fn <RSlice, CSlice> (self: &Self, start: (usize, usize), shape: (RSlice, CSlice)) -> MatrixSlice<N, RSlice, CSlice, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Creates a slice that may or may not have a fixed size and stride.\n","sig":null,"attributes":[{"value":"/ Creates a slice that may or may not have a fixed size and stride.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":438383,"byte_end":438452,"line_start":520,"line_end":520,"column_start":13,"column_end":82}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":438465,"byte_end":438474,"line_start":521,"line_end":521,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17274},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":444038,"byte_end":444062,"line_start":660,"line_end":660,"column_start":6,"column_end":30},"name":"generic_slice_with_steps","qualname":"<Matrix<N, R, C, S>>::generic_slice_with_steps","value":"fn <RSlice, CSlice> (self: &Self, start: (usize, usize), shape: (RSlice, CSlice), steps: (usize, usize)) -> MatrixSlice<N, RSlice, CSlice, Dynamic, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Creates a slice that may or may not have a fixed size and stride.\n","sig":null,"attributes":[{"value":"/ Creates a slice that may or may not have a fixed size and stride.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":439039,"byte_end":439108,"line_start":535,"line_end":535,"column_start":13,"column_end":82}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":439121,"byte_end":439130,"line_start":536,"line_end":536,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17277},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":444069,"byte_end":444084,"line_start":661,"line_end":661,"column_start":6,"column_end":21},"name":"rows_range_pair","qualname":"<Matrix<N, R, C, S>>::rows_range_pair","value":"fn <Range1, Range2> (self: &Self, r1: Range1, r2: Range2) -> (MatrixSlice<N, Range1::Size, C, S::RStride, S::CStride>,\n MatrixSlice<N, Range2::Size, C, S::RStride, S::CStride>)","parent":null,"children":[],"decl_id":null,"docs":" Splits this NxM matrix into two parts delimited by two ranges.","sig":null,"attributes":[{"value":"/ Splits this NxM matrix into two parts delimited by two ranges.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":440241,"byte_end":440307,"line_start":562,"line_end":562,"column_start":13,"column_end":79}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":440320,"byte_end":440323,"line_start":563,"line_end":563,"column_start":13,"column_end":16}},{"value":"/ Panics if the ranges overlap or if the first range is empty.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":440336,"byte_end":440400,"line_start":564,"line_end":564,"column_start":13,"column_end":77}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":440413,"byte_end":440422,"line_start":565,"line_end":565,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17280},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":444091,"byte_end":444109,"line_start":662,"line_end":662,"column_start":6,"column_end":24},"name":"columns_range_pair","qualname":"<Matrix<N, R, C, S>>::columns_range_pair","value":"fn <Range1, Range2> (self: &Self, r1: Range1, r2: Range2) -> (MatrixSlice<N, R, Range1::Size, S::RStride, S::CStride>,\n MatrixSlice<N, R, Range2::Size, S::RStride, S::CStride>)","parent":null,"children":[],"decl_id":null,"docs":" Splits this NxM matrix into two parts delimited by two ranges.","sig":null,"attributes":[{"value":"/ Splits this NxM matrix into two parts delimited by two ranges.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":441862,"byte_end":441928,"line_start":598,"line_end":598,"column_start":13,"column_end":79}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":441941,"byte_end":441944,"line_start":599,"line_end":599,"column_start":13,"column_end":16}},{"value":"/ Panics if the ranges overlap or if the first range is empty.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":441957,"byte_end":442021,"line_start":600,"line_end":600,"column_start":13,"column_end":77}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":442034,"byte_end":442043,"line_start":601,"line_end":601,"column_start":13,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":17283},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":444155,"byte_end":444169,"line_start":665,"line_end":665,"column_start":23,"column_end":37},"name":"MatrixSliceMut","qualname":"::base::matrix_slice::MatrixSliceMut","value":"Matrix<N, R, C, SliceStorageMut<'a, N, R, C, RStride, CStride>>","parent":null,"children":[],"decl_id":null,"docs":" A matrix slice.\n","sig":null,"attributes":[{"value":"/ A matrix slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":427459,"byte_end":427478,"line_start":277,"line_end":277,"column_start":9,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":17295},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":444249,"byte_end":444256,"line_start":666,"line_end":666,"column_start":6,"column_end":13},"name":"row_mut","qualname":"<Matrix<N, R, C, S>>::row_mut","value":"fn (self: &mut Self, i: usize) -> MatrixSliceMut<N, U1, C, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice containing the i-th row of this matrix.\n","sig":null,"attributes":[{"value":"/ Returns a slice containing the i-th row of this matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":427798,"byte_end":427857,"line_start":287,"line_end":287,"column_start":13,"column_end":72}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":427870,"byte_end":427879,"line_start":288,"line_end":288,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17296},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":444263,"byte_end":444275,"line_start":667,"line_end":667,"column_start":6,"column_end":18},"name":"row_part_mut","qualname":"<Matrix<N, R, C, S>>::row_part_mut","value":"fn (self: &mut Self, i: usize, n: usize) -> MatrixSliceMut<N, U1, Dynamic, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice containing the `n` first elements of the i-th row of this matrix.\n","sig":null,"attributes":[{"value":"/ Returns a slice containing the `n` first elements of the i-th row of this matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":428044,"byte_end":428129,"line_start":293,"line_end":293,"column_start":13,"column_end":98}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":428142,"byte_end":428151,"line_start":294,"line_end":294,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17297},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":444282,"byte_end":444290,"line_start":668,"line_end":668,"column_start":6,"column_end":14},"name":"rows_mut","qualname":"<Matrix<N, R, C, S>>::rows_mut","value":"fn (self: &mut Self, first_row: usize, nrows: usize) -> MatrixSliceMut<N, Dynamic, C, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix a set of consecutive rows.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix a set of consecutive rows.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":428362,"byte_end":428418,"line_start":299,"line_end":299,"column_start":13,"column_end":69}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":428431,"byte_end":428440,"line_start":300,"line_end":300,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17298},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":444297,"byte_end":444315,"line_start":669,"line_end":669,"column_start":6,"column_end":24},"name":"rows_with_step_mut","qualname":"<Matrix<N, R, C, S>>::rows_with_step_mut","value":"fn (self: &mut Self, first_row: usize, nrows: usize, step: usize) -> MatrixSliceMut<N, Dynamic, C, Dynamic, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix a set of consecutive rows regularly skipping `step` rows.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix a set of consecutive rows regularly skipping `step` rows.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":428675,"byte_end":428762,"line_start":307,"line_end":307,"column_start":13,"column_end":100}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":428775,"byte_end":428784,"line_start":308,"line_end":308,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17299},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":444322,"byte_end":444336,"line_start":670,"line_end":670,"column_start":6,"column_end":20},"name":"fixed_rows_mut","qualname":"<Matrix<N, R, C, S>>::fixed_rows_mut","value":"fn <RSlice> (self: &mut Self, first_row: usize) -> MatrixSliceMut<N, RSlice, C, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts a compile-time number of consecutive rows from this matrix.\n","sig":null,"attributes":[{"value":"/ Extracts a compile-time number of consecutive rows from this matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":429055,"byte_end":429127,"line_start":315,"line_end":315,"column_start":13,"column_end":85}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":429140,"byte_end":429149,"line_start":316,"line_end":316,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17301},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":444343,"byte_end":444367,"line_start":671,"line_end":671,"column_start":6,"column_end":30},"name":"fixed_rows_with_step_mut","qualname":"<Matrix<N, R, C, S>>::fixed_rows_with_step_mut","value":"fn <RSlice> (self: &mut Self, first_row: usize, step: usize) -> MatrixSliceMut<N, RSlice, C, Dynamic, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix a compile-time number of rows regularly skipping `step`\n rows.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix a compile-time number of rows regularly skipping `step`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":429387,"byte_end":429472,"line_start":323,"line_end":323,"column_start":13,"column_end":98}},{"value":"/ rows.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":429485,"byte_end":429494,"line_start":324,"line_end":324,"column_start":13,"column_end":22}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":429507,"byte_end":429516,"line_start":325,"line_end":325,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17303},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":444374,"byte_end":444390,"line_start":672,"line_end":672,"column_start":6,"column_end":22},"name":"rows_generic_mut","qualname":"<Matrix<N, R, C, S>>::rows_generic_mut","value":"fn <RSlice> (self: &mut Self, row_start: usize, nrows: RSlice) -> MatrixSliceMut<N, RSlice, C, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix `nrows` rows regularly skipping `step` rows. Both\n argument may or may not be values known at compile-time.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix `nrows` rows regularly skipping `step` rows. Both","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":429790,"byte_end":429869,"line_start":332,"line_end":332,"column_start":13,"column_end":92}},{"value":"/ argument may or may not be values known at compile-time.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":429882,"byte_end":429942,"line_start":333,"line_end":333,"column_start":13,"column_end":73}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":429955,"byte_end":429964,"line_start":334,"line_end":334,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17305},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":444397,"byte_end":444423,"line_start":673,"line_end":673,"column_start":6,"column_end":32},"name":"rows_generic_with_step_mut","qualname":"<Matrix<N, R, C, S>>::rows_generic_with_step_mut","value":"fn <RSlice> (self: &mut Self, row_start: usize, nrows: RSlice, step: usize) -> MatrixSliceMut<N, RSlice, C, Dynamic, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix `nrows` rows regularly skipping `step` rows. Both\n argument may or may not be values known at compile-time.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix `nrows` rows regularly skipping `step` rows. Both","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":430556,"byte_end":430635,"line_start":349,"line_end":349,"column_start":13,"column_end":92}},{"value":"/ argument may or may not be values known at compile-time.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":430648,"byte_end":430708,"line_start":350,"line_end":350,"column_start":13,"column_end":73}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":430721,"byte_end":430730,"line_start":351,"line_end":351,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17307},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":444430,"byte_end":444440,"line_start":674,"line_end":674,"column_start":6,"column_end":16},"name":"column_mut","qualname":"<Matrix<N, R, C, S>>::column_mut","value":"fn (self: &mut Self, i: usize) -> MatrixSliceMut<N, R, U1, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice containing the i-th column of this matrix.\n","sig":null,"attributes":[{"value":"/ Returns a slice containing the i-th column of this matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":431638,"byte_end":431700,"line_start":374,"line_end":374,"column_start":13,"column_end":75}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":431713,"byte_end":431722,"line_start":375,"line_end":375,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17308},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":444447,"byte_end":444462,"line_start":675,"line_end":675,"column_start":6,"column_end":21},"name":"column_part_mut","qualname":"<Matrix<N, R, C, S>>::column_part_mut","value":"fn (self: &mut Self, i: usize, n: usize) -> MatrixSliceMut<N, Dynamic, U1, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice containing the `n` first elements of the i-th column of this matrix.\n","sig":null,"attributes":[{"value":"/ Returns a slice containing the `n` first elements of the i-th column of this matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":431893,"byte_end":431981,"line_start":380,"line_end":380,"column_start":13,"column_end":101}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":431994,"byte_end":432003,"line_start":381,"line_end":381,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17309},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":444469,"byte_end":444480,"line_start":676,"line_end":676,"column_start":6,"column_end":17},"name":"columns_mut","qualname":"<Matrix<N, R, C, S>>::columns_mut","value":"fn (self: &mut Self, first_col: usize, ncols: usize) -> MatrixSliceMut<N, R, Dynamic, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix a set of consecutive columns.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix a set of consecutive columns.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":432217,"byte_end":432276,"line_start":386,"line_end":386,"column_start":13,"column_end":72}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":432289,"byte_end":432298,"line_start":387,"line_end":387,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17310},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":444487,"byte_end":444508,"line_start":677,"line_end":677,"column_start":6,"column_end":27},"name":"columns_with_step_mut","qualname":"<Matrix<N, R, C, S>>::columns_with_step_mut","value":"fn (self: &mut Self, first_col: usize, ncols: usize, step: usize) -> MatrixSliceMut<N, R, Dynamic, S::RStride, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix a set of consecutive columns regularly skipping `step`\n columns.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix a set of consecutive columns regularly skipping `step`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":432539,"byte_end":432623,"line_start":394,"line_end":394,"column_start":13,"column_end":97}},{"value":"/ columns.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":432636,"byte_end":432648,"line_start":395,"line_end":395,"column_start":13,"column_end":25}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":432661,"byte_end":432670,"line_start":396,"line_end":396,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17311},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":444515,"byte_end":444532,"line_start":678,"line_end":678,"column_start":6,"column_end":23},"name":"fixed_columns_mut","qualname":"<Matrix<N, R, C, S>>::fixed_columns_mut","value":"fn <CSlice> (self: &mut Self, first_col: usize) -> MatrixSliceMut<N, R, CSlice, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts a compile-time number of consecutive columns from this matrix.\n","sig":null,"attributes":[{"value":"/ Extracts a compile-time number of consecutive columns from this matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":432947,"byte_end":433022,"line_start":403,"line_end":403,"column_start":13,"column_end":88}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":433035,"byte_end":433044,"line_start":404,"line_end":404,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17313},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":444539,"byte_end":444566,"line_start":679,"line_end":679,"column_start":6,"column_end":33},"name":"fixed_columns_with_step_mut","qualname":"<Matrix<N, R, C, S>>::fixed_columns_with_step_mut","value":"fn <CSlice> (self: &mut Self, first_col: usize, step: usize) -> MatrixSliceMut<N, R, CSlice, S::RStride, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix a compile-time number of columns regularly skipping\n `step` columns.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix a compile-time number of columns regularly skipping","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":433288,"byte_end":433369,"line_start":411,"line_end":411,"column_start":13,"column_end":94}},{"value":"/ `step` columns.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":433382,"byte_end":433401,"line_start":412,"line_end":412,"column_start":13,"column_end":32}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":433414,"byte_end":433423,"line_start":413,"line_end":413,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17315},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":444573,"byte_end":444592,"line_start":680,"line_end":680,"column_start":6,"column_end":25},"name":"columns_generic_mut","qualname":"<Matrix<N, R, C, S>>::columns_generic_mut","value":"fn <CSlice> (self: &mut Self, first_col: usize, ncols: CSlice) -> MatrixSliceMut<N, R, CSlice, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix `ncols` columns. The number of columns may or may not be\n known at compile-time.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix `ncols` columns. The number of columns may or may not be","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":433703,"byte_end":433789,"line_start":420,"line_end":420,"column_start":13,"column_end":99}},{"value":"/ known at compile-time.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":433802,"byte_end":433828,"line_start":421,"line_end":421,"column_start":13,"column_end":39}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":433841,"byte_end":433850,"line_start":422,"line_end":422,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17317},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":444599,"byte_end":444628,"line_start":681,"line_end":681,"column_start":6,"column_end":35},"name":"columns_generic_with_step_mut","qualname":"<Matrix<N, R, C, S>>::columns_generic_with_step_mut","value":"fn <CSlice> (self: &mut Self, first_col: usize, ncols: CSlice, step: usize) -> MatrixSliceMut<N, R, CSlice, S::RStride, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix `ncols` columns skipping `step` columns. Both argument may\n or may not be values known at compile-time.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix `ncols` columns skipping `step` columns. Both argument may","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":434443,"byte_end":434531,"line_start":437,"line_end":437,"column_start":13,"column_end":101}},{"value":"/ or may not be values known at compile-time.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":434544,"byte_end":434591,"line_start":438,"line_end":438,"column_start":13,"column_end":60}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":434604,"byte_end":434613,"line_start":439,"line_end":439,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17319},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":444635,"byte_end":444644,"line_start":682,"line_end":682,"column_start":6,"column_end":15},"name":"slice_mut","qualname":"<Matrix<N, R, C, S>>::slice_mut","value":"fn (self: &mut Self, start: (usize, usize), shape: (usize, usize)) -> MatrixSliceMut<N, Dynamic, Dynamic, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Slices this matrix starting at its component `(irow, icol)` and with `(nrows, ncols)`\n consecutive elements.\n","sig":null,"attributes":[{"value":"/ Slices this matrix starting at its component `(irow, icol)` and with `(nrows, ncols)`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":435497,"byte_end":435586,"line_start":462,"line_end":462,"column_start":13,"column_end":102}},{"value":"/ consecutive elements.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":435599,"byte_end":435624,"line_start":463,"line_end":463,"column_start":13,"column_end":38}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":435637,"byte_end":435646,"line_start":464,"line_end":464,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17320},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":444651,"byte_end":444671,"line_start":683,"line_end":683,"column_start":6,"column_end":26},"name":"slice_with_steps_mut","qualname":"<Matrix<N, R, C, S>>::slice_with_steps_mut","value":"fn (self: &mut Self, start: (usize, usize), shape: (usize, usize), steps: (usize, usize)) -> MatrixSliceMut<N, Dynamic, Dynamic, Dynamic, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Slices this matrix starting at its component `(start.0, start.1)` and with\n `(shape.0, shape.1)` components. Each row (resp. column) of the sliced matrix is\n separated by `steps.0` (resp. `steps.1`) ignored rows (resp. columns) of the\n original matrix.\n","sig":null,"attributes":[{"value":"/ Slices this matrix starting at its component `(start.0, start.1)` and with","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":436166,"byte_end":436244,"line_start":478,"line_end":478,"column_start":13,"column_end":91}},{"value":"/ `(shape.0, shape.1)` components. Each row (resp. column) of the sliced matrix is","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":436257,"byte_end":436341,"line_start":479,"line_end":479,"column_start":13,"column_end":97}},{"value":"/ separated by `steps.0` (resp. `steps.1`) ignored rows (resp. columns) of the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":436354,"byte_end":436434,"line_start":480,"line_end":480,"column_start":13,"column_end":93}},{"value":"/ original matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":436447,"byte_end":436467,"line_start":481,"line_end":481,"column_start":13,"column_end":33}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":436480,"byte_end":436489,"line_start":482,"line_end":482,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17321},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":444678,"byte_end":444693,"line_start":684,"line_end":684,"column_start":6,"column_end":21},"name":"fixed_slice_mut","qualname":"<Matrix<N, R, C, S>>::fixed_slice_mut","value":"fn <RSlice, CSlice> (self: &mut Self, irow: usize, icol: usize) -> MatrixSliceMut<N, RSlice, CSlice, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Slices this matrix starting at its component `(irow, icol)` and with `(R::dim(),\n CSlice::dim())` consecutive components.\n","sig":null,"attributes":[{"value":"/ Slices this matrix starting at its component `(irow, icol)` and with `(R::dim(),","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":436850,"byte_end":436934,"line_start":490,"line_end":490,"column_start":13,"column_end":97}},{"value":"/ CSlice::dim())` consecutive components.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":436947,"byte_end":436990,"line_start":491,"line_end":491,"column_start":13,"column_end":56}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":437003,"byte_end":437012,"line_start":492,"line_end":492,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17324},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":444700,"byte_end":444726,"line_start":685,"line_end":685,"column_start":6,"column_end":32},"name":"fixed_slice_with_steps_mut","qualname":"<Matrix<N, R, C, S>>::fixed_slice_with_steps_mut","value":"fn <RSlice, CSlice> (self: &mut Self, start: (usize, usize), steps: (usize, usize)) -> MatrixSliceMut<N, RSlice, CSlice, Dynamic, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Slices this matrix starting at its component `(start.0, start.1)` and with\n `(R::dim(), CSlice::dim())` components. Each row (resp. column) of the sliced\n matrix is separated by `steps.0` (resp. `steps.1`) ignored rows (resp. columns) of\n the original matrix.\n","sig":null,"attributes":[{"value":"/ Slices this matrix starting at its component `(start.0, start.1)` and with","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":437633,"byte_end":437711,"line_start":507,"line_end":507,"column_start":13,"column_end":91}},{"value":"/ `(R::dim(), CSlice::dim())` components. Each row (resp. column) of the sliced","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":437724,"byte_end":437805,"line_start":508,"line_end":508,"column_start":13,"column_end":94}},{"value":"/ matrix is separated by `steps.0` (resp. `steps.1`) ignored rows (resp. columns) of","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":437818,"byte_end":437904,"line_start":509,"line_end":509,"column_start":13,"column_end":99}},{"value":"/ the original matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":437917,"byte_end":437941,"line_start":510,"line_end":510,"column_start":13,"column_end":37}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":437954,"byte_end":437963,"line_start":511,"line_end":511,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17327},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":444733,"byte_end":444750,"line_start":686,"line_end":686,"column_start":6,"column_end":23},"name":"generic_slice_mut","qualname":"<Matrix<N, R, C, S>>::generic_slice_mut","value":"fn <RSlice, CSlice> (self: &mut Self, start: (usize, usize), shape: (RSlice, CSlice)) -> MatrixSliceMut<N, RSlice, CSlice, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Creates a slice that may or may not have a fixed size and stride.\n","sig":null,"attributes":[{"value":"/ Creates a slice that may or may not have a fixed size and stride.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":438383,"byte_end":438452,"line_start":520,"line_end":520,"column_start":13,"column_end":82}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":438465,"byte_end":438474,"line_start":521,"line_end":521,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17330},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":444757,"byte_end":444785,"line_start":687,"line_end":687,"column_start":6,"column_end":34},"name":"generic_slice_with_steps_mut","qualname":"<Matrix<N, R, C, S>>::generic_slice_with_steps_mut","value":"fn <RSlice, CSlice> (self: &mut Self, start: (usize, usize), shape: (RSlice, CSlice), steps: (usize, usize)) -> MatrixSliceMut<N, RSlice, CSlice, Dynamic, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Creates a slice that may or may not have a fixed size and stride.\n","sig":null,"attributes":[{"value":"/ Creates a slice that may or may not have a fixed size and stride.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":439039,"byte_end":439108,"line_start":535,"line_end":535,"column_start":13,"column_end":82}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":439121,"byte_end":439130,"line_start":536,"line_end":536,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17333},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":444792,"byte_end":444811,"line_start":688,"line_end":688,"column_start":6,"column_end":25},"name":"rows_range_pair_mut","qualname":"<Matrix<N, R, C, S>>::rows_range_pair_mut","value":"fn <Range1, Range2> (self: &mut Self, r1: Range1, r2: Range2) -> (MatrixSliceMut<N, Range1::Size, C, S::RStride, S::CStride>,\n MatrixSliceMut<N, Range2::Size, C, S::RStride, S::CStride>)","parent":null,"children":[],"decl_id":null,"docs":" Splits this NxM matrix into two parts delimited by two ranges.","sig":null,"attributes":[{"value":"/ Splits this NxM matrix into two parts delimited by two ranges.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":440241,"byte_end":440307,"line_start":562,"line_end":562,"column_start":13,"column_end":79}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":440320,"byte_end":440323,"line_start":563,"line_end":563,"column_start":13,"column_end":16}},{"value":"/ Panics if the ranges overlap or if the first range is empty.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":440336,"byte_end":440400,"line_start":564,"line_end":564,"column_start":13,"column_end":77}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":440413,"byte_end":440422,"line_start":565,"line_end":565,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17336},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":444818,"byte_end":444840,"line_start":689,"line_end":689,"column_start":6,"column_end":28},"name":"columns_range_pair_mut","qualname":"<Matrix<N, R, C, S>>::columns_range_pair_mut","value":"fn <Range1, Range2> (self: &mut Self, r1: Range1, r2: Range2) -> (MatrixSliceMut<N, R, Range1::Size, S::RStride, S::CStride>,\n MatrixSliceMut<N, R, Range2::Size, S::RStride, S::CStride>)","parent":null,"children":[],"decl_id":null,"docs":" Splits this NxM matrix into two parts delimited by two ranges.","sig":null,"attributes":[{"value":"/ Splits this NxM matrix into two parts delimited by two ranges.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":441862,"byte_end":441928,"line_start":598,"line_end":598,"column_start":13,"column_end":79}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":441941,"byte_end":441944,"line_start":599,"line_end":599,"column_start":13,"column_end":16}},{"value":"/ Panics if the ranges overlap or if the first range is empty.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":441957,"byte_end":442021,"line_start":600,"line_end":600,"column_start":13,"column_end":77}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":442034,"byte_end":442043,"line_start":601,"line_end":601,"column_start":13,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":3344},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":445146,"byte_end":445156,"line_start":698,"line_end":698,"column_start":11,"column_end":21},"name":"SliceRange","qualname":"::base::matrix_slice::SliceRange","value":"SliceRange<D: Dim>","parent":null,"children":[{"krate":0,"index":3346},{"krate":0,"index":3347},{"krate":0,"index":3348},{"krate":0,"index":3349}],"decl_id":null,"docs":" A range with a size that may be known at compile-time.","sig":null,"attributes":[{"value":"/ A range with a size that may be known at compile-time.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":444844,"byte_end":444902,"line_start":691,"line_end":691,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":444903,"byte_end":444906,"line_start":692,"line_end":692,"column_start":1,"column_end":4}},{"value":"/ This may be:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":444907,"byte_end":444923,"line_start":693,"line_end":693,"column_start":1,"column_end":17}},{"value":"/ * A single `usize` index, e.g., `4`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":444924,"byte_end":444963,"line_start":694,"line_end":694,"column_start":1,"column_end":40}},{"value":"/ * A left-open range `std::ops::RangeTo`, e.g., `.. 4`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":444964,"byte_end":445021,"line_start":695,"line_end":695,"column_start":1,"column_end":58}},{"value":"/ * A right-open range `std::ops::RangeFrom`, e.g., `4 ..`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":445022,"byte_end":445082,"line_start":696,"line_end":696,"column_start":1,"column_end":61}},{"value":"/ * A full range `std::ops::RangeFull`, e.g., `..`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":445083,"byte_end":445135,"line_start":697,"line_end":697,"column_start":1,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":3346},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":445237,"byte_end":445241,"line_start":700,"line_end":700,"column_start":10,"column_end":14},"name":"Size","qualname":"::base::matrix_slice::SliceRange::Size","value":"type Size: Dim;","parent":{"krate":0,"index":3344},"children":[],"decl_id":null,"docs":" Type of the range size. May be a type-level integer.\n","sig":null,"attributes":[{"value":"/ Type of the range size. May be a type-level integer.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":445171,"byte_end":445227,"line_start":699,"line_end":699,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3347},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":445294,"byte_end":445299,"line_start":703,"line_end":703,"column_start":8,"column_end":13},"name":"begin","qualname":"::base::matrix_slice::SliceRange::begin","value":"fn (&self, shape: D) -> usize","parent":{"krate":0,"index":3344},"children":[],"decl_id":null,"docs":" The start index of the range.\n","sig":null,"attributes":[{"value":"/ The start index of the range.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":445253,"byte_end":445286,"line_start":702,"line_end":702,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3348},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":445471,"byte_end":445474,"line_start":706,"line_end":706,"column_start":8,"column_end":11},"name":"end","qualname":"::base::matrix_slice::SliceRange::end","value":"fn (&self, shape: D) -> usize","parent":{"krate":0,"index":3344},"children":[],"decl_id":null,"docs":" The index immediately after the last index inside of the range.\n","sig":null,"attributes":[{"value":"/ The index immediately after the last index inside of the range.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":445396,"byte_end":445463,"line_start":705,"line_end":705,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":3349},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":445585,"byte_end":445589,"line_start":708,"line_end":708,"column_start":8,"column_end":12},"name":"size","qualname":"::base::matrix_slice::SliceRange::size","value":"fn (&self, shape: D) -> Self::Size","parent":{"krate":0,"index":3344},"children":[],"decl_id":null,"docs":" The number of elements of the range, i.e., `self.end - self.begin`.\n","sig":null,"attributes":[{"value":"/ The number of elements of the range, i.e., `self.end - self.begin`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":445506,"byte_end":445577,"line_start":707,"line_end":707,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":3385},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":447525,"byte_end":447536,"line_start":810,"line_end":810,"column_start":12,"column_end":23},"name":"slice_range","qualname":"<Matrix<N, R, C, S>>::slice_range","value":"fn <RowRange, ColRange> (&self, rows: RowRange, cols: ColRange) -> MatrixSlice<N, RowRange::Size, ColRange::Size, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Slices a sub-matrix containing the rows indexed by the range `rows` and the columns indexed\n by the range `cols`.\n","sig":null,"attributes":[{"value":"/ Slices a sub-matrix containing the rows indexed by the range `rows` and the columns indexed","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":447375,"byte_end":447470,"line_start":807,"line_end":807,"column_start":5,"column_end":100}},{"value":"/ by the range `cols`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":447475,"byte_end":447499,"line_start":808,"line_end":808,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":447504,"byte_end":447513,"line_start":809,"line_end":809,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3388},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":448070,"byte_end":448080,"line_start":828,"line_end":828,"column_start":12,"column_end":22},"name":"rows_range","qualname":"<Matrix<N, R, C, S>>::rows_range","value":"fn <RowRange> (&self, rows: RowRange) -> MatrixSlice<N, RowRange::Size, C, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Slice containing all the rows indexed by the range `rows`.\n","sig":null,"attributes":[{"value":"/ Slice containing all the rows indexed by the range `rows`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":447982,"byte_end":448044,"line_start":826,"line_end":826,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":448049,"byte_end":448058,"line_start":827,"line_end":827,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3390},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":448352,"byte_end":448365,"line_start":837,"line_end":837,"column_start":12,"column_end":25},"name":"columns_range","qualname":"<Matrix<N, R, C, S>>::columns_range","value":"fn <ColRange> (&self, cols: ColRange) -> MatrixSlice<N, R, ColRange::Size, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Slice containing all the columns indexed by the range `rows`.\n","sig":null,"attributes":[{"value":"/ Slice containing all the columns indexed by the range `rows`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":448261,"byte_end":448326,"line_start":835,"line_end":835,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":448331,"byte_end":448340,"line_start":836,"line_end":836,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3397},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":448769,"byte_end":448784,"line_start":848,"line_end":848,"column_start":12,"column_end":27},"name":"slice_range_mut","qualname":"<Matrix<N, R, C, S>>::slice_range_mut","value":"fn <RowRange, ColRange> (&mut self, rows: RowRange, cols: ColRange) -> MatrixSliceMut<N, RowRange::Size, ColRange::Size, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Slices a mutable sub-matrix containing the rows indexed by the range `rows` and the columns\n indexed by the range `cols`.\n","sig":null,"attributes":[{"value":"/ Slices a mutable sub-matrix containing the rows indexed by the range `rows` and the columns","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":448625,"byte_end":448720,"line_start":846,"line_end":846,"column_start":5,"column_end":100}},{"value":"/ indexed by the range `cols`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":448725,"byte_end":448757,"line_start":847,"line_end":847,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3400},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":449329,"byte_end":449343,"line_start":866,"line_end":866,"column_start":12,"column_end":26},"name":"rows_range_mut","qualname":"<Matrix<N, R, C, S>>::rows_range_mut","value":"fn <RowRange> (&mut self, rows: RowRange) -> MatrixSliceMut<N, RowRange::Size, C, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Slice containing all the rows indexed by the range `rows`.\n","sig":null,"attributes":[{"value":"/ Slice containing all the rows indexed by the range `rows`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":449241,"byte_end":449303,"line_start":864,"line_end":864,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":449308,"byte_end":449317,"line_start":865,"line_end":865,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3402},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":449626,"byte_end":449643,"line_start":875,"line_end":875,"column_start":12,"column_end":29},"name":"columns_range_mut","qualname":"<Matrix<N, R, C, S>>::columns_range_mut","value":"fn <ColRange> (&mut self, cols: ColRange) -> MatrixSliceMut<N, R, ColRange::Size, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Slice containing all the columns indexed by the range `cols`.\n","sig":null,"attributes":[{"value":"/ Slice containing all the columns indexed by the range `cols`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":449535,"byte_end":449600,"line_start":873,"line_end":873,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":449605,"byte_end":449614,"line_start":874,"line_end":874,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":3440},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":451056,"byte_end":451060,"line_start":19,"line_end":19,"column_start":11,"column_end":15},"name":"Norm","qualname":"::base::norm::Norm","value":"Norm<N: SimdComplexField>","parent":null,"children":[{"krate":0,"index":3442},{"krate":0,"index":3446}],"decl_id":null,"docs":" A trait for abstract matrix norms.","sig":null,"attributes":[{"value":"/ A trait for abstract matrix norms.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":450948,"byte_end":450986,"line_start":16,"line_end":16,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":450987,"byte_end":450990,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This may be moved to the alga crate in the future.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":450991,"byte_end":451045,"line_start":18,"line_end":18,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3442},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":451136,"byte_end":451140,"line_start":21,"line_end":21,"column_start":8,"column_end":12},"name":"norm","qualname":"::base::norm::Norm::norm","value":"fn <R, C, S> (&self, m: &Matrix<N, R, C, S>) -> N::SimdRealField","parent":{"krate":0,"index":3440},"children":[],"decl_id":null,"docs":" Apply this norm to the given matrix.\n","sig":null,"attributes":[{"value":"/ Apply this norm to the given matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":451088,"byte_end":451128,"line_start":20,"line_end":20,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3446},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":451386,"byte_end":451401,"line_start":27,"line_end":27,"column_start":8,"column_end":23},"name":"metric_distance","qualname":"::base::norm::Norm::metric_distance","value":"fn <R1, C1, S1, R2, C2, S2> (&self, m1: &Matrix<N, R1, C1, S1>, m2: &Matrix<N, R2, C2, S2>) -> N::SimdRealField","parent":{"krate":0,"index":3440},"children":[],"decl_id":null,"docs":" Use the metric induced by this norm to compute the metric distance between the two given matrices.\n","sig":null,"attributes":[{"value":"/ Use the metric induced by this norm to compute the metric distance between the two given matrices.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":451276,"byte_end":451378,"line_start":26,"line_end":26,"column_start":5,"column_end":107}}]},{"kind":"Struct","id":{"krate":0,"index":3453},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":451797,"byte_end":451810,"line_start":43,"line_end":43,"column_start":12,"column_end":25},"name":"EuclideanNorm","qualname":"::base::norm::EuclideanNorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" Euclidean norm.\n","sig":null,"attributes":[{"value":"/ Euclidean norm.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":451766,"byte_end":451785,"line_start":42,"line_end":42,"column_start":1,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3455},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":451836,"byte_end":451842,"line_start":45,"line_end":45,"column_start":12,"column_end":18},"name":"LpNorm","qualname":"::base::norm::LpNorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" Lp norm.\n","sig":null,"attributes":[{"value":"/ Lp norm.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":451812,"byte_end":451824,"line_start":44,"line_end":44,"column_start":1,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":3458},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":451944,"byte_end":451955,"line_start":47,"line_end":47,"column_start":12,"column_end":23},"name":"UniformNorm","qualname":"::base::norm::UniformNorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" L-infinite norm aka. Chebytchev norm aka. uniform norm aka. suppremum norm.\n","sig":null,"attributes":[{"value":"/ L-infinite norm aka. Chebytchev norm aka. uniform norm aka. suppremum norm.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":451853,"byte_end":451932,"line_start":46,"line_end":46,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":3509},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":455012,"byte_end":455024,"line_start":160,"line_end":160,"column_start":12,"column_end":24},"name":"norm_squared","qualname":"<Matrix<N, R, C, S>>::norm_squared","value":"fn (&self) -> N::SimdRealField","parent":null,"children":[],"decl_id":null,"docs":" The squared L2 norm of this vector.\n","sig":null,"attributes":[{"value":"/ The squared L2 norm of this vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":454947,"byte_end":454986,"line_start":158,"line_end":158,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":454991,"byte_end":455000,"line_start":159,"line_end":159,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3510},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":455371,"byte_end":455375,"line_start":175,"line_end":175,"column_start":12,"column_end":16},"name":"norm","qualname":"<Matrix<N, R, C, S>>::norm","value":"fn (&self) -> N::SimdRealField","parent":null,"children":[],"decl_id":null,"docs":" The L2 norm of this matrix.","sig":null,"attributes":[{"value":"/ The L2 norm of this matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":455256,"byte_end":455287,"line_start":171,"line_end":171,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":455292,"byte_end":455295,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ Use `.apply_norm` to apply a custom norm.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":455300,"byte_end":455345,"line_start":173,"line_end":173,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":455350,"byte_end":455359,"line_start":174,"line_end":174,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3511},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":455648,"byte_end":455663,"line_start":183,"line_end":183,"column_start":12,"column_end":27},"name":"metric_distance","qualname":"<Matrix<N, R, C, S>>::metric_distance","value":"fn <R2, C2, S2> (&self, rhs: &Matrix<N, R2, C2, S2>) -> N::SimdRealField","parent":null,"children":[],"decl_id":null,"docs":" Compute the distance between `self` and `rhs` using the metric induced by the euclidean norm.","sig":null,"attributes":[{"value":"/ Compute the distance between `self` and `rhs` using the metric induced by the euclidean norm.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":455456,"byte_end":455553,"line_start":179,"line_end":179,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":455558,"byte_end":455561,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ Use `.apply_metric_distance` to apply a custom norm.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":455566,"byte_end":455622,"line_start":181,"line_end":181,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":455627,"byte_end":455636,"line_start":182,"line_end":182,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3515},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":456388,"byte_end":456398,"line_start":206,"line_end":206,"column_start":12,"column_end":22},"name":"apply_norm","qualname":"<Matrix<N, R, C, S>>::apply_norm","value":"fn (&self, norm: &impl Norm<N>) -> N::SimdRealField","parent":null,"children":[],"decl_id":null,"docs":" Uses the given `norm` to compute the norm of `self`.","sig":null,"attributes":[{"value":"/ Uses the given `norm` to compute the norm of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":455960,"byte_end":456016,"line_start":193,"line_end":193,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":456021,"byte_end":456024,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":456029,"byte_end":456042,"line_start":195,"line_end":195,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":456047,"byte_end":456050,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":456055,"byte_end":456062,"line_start":197,"line_end":197,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Vector3, UniformNorm, LpNorm, EuclideanNorm};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":456067,"byte_end":456133,"line_start":198,"line_end":198,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":456138,"byte_end":456141,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ let v = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":456146,"byte_end":456186,"line_start":200,"line_end":200,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(v.apply_norm(&UniformNorm), 3.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":456191,"byte_end":456239,"line_start":201,"line_end":201,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(v.apply_norm(&LpNorm(1)), 6.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":456244,"byte_end":456290,"line_start":202,"line_end":202,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(v.apply_norm(&EuclideanNorm), v.norm());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":456295,"byte_end":456350,"line_start":203,"line_end":203,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":456355,"byte_end":456362,"line_start":204,"line_end":204,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":456367,"byte_end":456376,"line_start":205,"line_end":205,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3517},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":457092,"byte_end":457113,"line_start":225,"line_end":225,"column_start":12,"column_end":33},"name":"apply_metric_distance","qualname":"<Matrix<N, R, C, S>>::apply_metric_distance","value":"fn <R2, C2, S2> (&self, rhs: &Matrix<N, R2, C2, S2>, norm: &impl Norm<N>) -> N::SimdRealField","parent":null,"children":[],"decl_id":null,"docs":" Uses the metric induced by the given `norm` to compute the metric distance between `self` and `rhs`.","sig":null,"attributes":[{"value":"/ Uses the metric induced by the given `norm` to compute the metric distance between `self` and `rhs`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":456484,"byte_end":456588,"line_start":210,"line_end":210,"column_start":5,"column_end":109}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":456593,"byte_end":456596,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":456601,"byte_end":456614,"line_start":212,"line_end":212,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":456619,"byte_end":456622,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":456627,"byte_end":456634,"line_start":214,"line_end":214,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Vector3, UniformNorm, LpNorm, EuclideanNorm};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":456639,"byte_end":456705,"line_start":215,"line_end":215,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":456710,"byte_end":456713,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ let v1 = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":456718,"byte_end":456759,"line_start":217,"line_end":217,"column_start":5,"column_end":46}},{"value":"/ let v2 = Vector3::new(10.0, 20.0, 30.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":456764,"byte_end":456808,"line_start":218,"line_end":218,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":456813,"byte_end":456816,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(v1.apply_metric_distance(&v2, &UniformNorm), 27.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":456821,"byte_end":456887,"line_start":220,"line_end":220,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(v1.apply_metric_distance(&v2, &LpNorm(1)), 27.0 + 18.0 + 9.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":456892,"byte_end":456969,"line_start":221,"line_end":221,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(v1.apply_metric_distance(&v2, &EuclideanNorm), (v1 - v2).norm());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":456974,"byte_end":457054,"line_start":222,"line_end":222,"column_start":5,"column_end":85}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":457059,"byte_end":457066,"line_start":223,"line_end":223,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":457071,"byte_end":457080,"line_start":224,"line_end":224,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3522},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":457620,"byte_end":457629,"line_start":245,"line_end":245,"column_start":12,"column_end":21},"name":"magnitude","qualname":"<Matrix<N, R, C, S>>::magnitude","value":"fn (&self) -> N::SimdRealField","parent":null,"children":[],"decl_id":null,"docs":" A synonym for the norm of this matrix.","sig":null,"attributes":[{"value":"/ A synonym for the norm of this matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":457446,"byte_end":457488,"line_start":239,"line_end":239,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":457493,"byte_end":457496,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ Aka the length.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":457501,"byte_end":457520,"line_start":241,"line_end":241,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":457525,"byte_end":457528,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ This function is simply implemented as a call to `norm()`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":457533,"byte_end":457594,"line_start":243,"line_end":243,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":457599,"byte_end":457608,"line_start":244,"line_end":244,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3523},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":457888,"byte_end":457905,"line_start":255,"line_end":255,"column_start":12,"column_end":29},"name":"magnitude_squared","qualname":"<Matrix<N, R, C, S>>::magnitude_squared","value":"fn (&self) -> N::SimdRealField","parent":null,"children":[],"decl_id":null,"docs":" A synonym for the squared norm of this matrix.","sig":null,"attributes":[{"value":"/ A synonym for the squared norm of this matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":457690,"byte_end":457740,"line_start":249,"line_end":249,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":457745,"byte_end":457748,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ Aka the squared length.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":457753,"byte_end":457780,"line_start":251,"line_end":251,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":457785,"byte_end":457788,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ This function is simply implemented as a call to `norm_squared()`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":457793,"byte_end":457862,"line_start":253,"line_end":253,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":457867,"byte_end":457876,"line_start":254,"line_end":254,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3524},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":458038,"byte_end":458051,"line_start":261,"line_end":261,"column_start":12,"column_end":25},"name":"set_magnitude","qualname":"<Matrix<N, R, C, S>>::set_magnitude","value":"fn (&mut self, magnitude: N::SimdRealField) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the magnitude of this vector.\n","sig":null,"attributes":[{"value":"/ Sets the magnitude of this vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":457974,"byte_end":458012,"line_start":259,"line_end":259,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":458017,"byte_end":458026,"line_start":260,"line_end":260,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3525},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":458349,"byte_end":458358,"line_start":272,"line_end":272,"column_start":12,"column_end":21},"name":"normalize","qualname":"<Matrix<N, R, C, S>>::normalize","value":"fn (&self) -> MatrixMN<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Returns a normalized version of this matrix.\n","sig":null,"attributes":[{"value":"/ Returns a normalized version of this matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":458218,"byte_end":458266,"line_start":269,"line_end":269,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":458271,"byte_end":458280,"line_start":270,"line_end":270,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use normalize_mut()?\"","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":458285,"byte_end":458337,"line_start":271,"line_end":271,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3526},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":458551,"byte_end":458558,"line_start":281,"line_end":281,"column_start":12,"column_end":19},"name":"lp_norm","qualname":"<Matrix<N, R, C, S>>::lp_norm","value":"fn (&self, p: i32) -> N::SimdRealField","parent":null,"children":[],"decl_id":null,"docs":" The Lp norm of this matrix.\n","sig":null,"attributes":[{"value":"/ The Lp norm of this matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":458494,"byte_end":458525,"line_start":279,"line_end":279,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":458530,"byte_end":458539,"line_start":280,"line_end":280,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3527},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":458833,"byte_end":458851,"line_start":290,"line_end":290,"column_start":12,"column_end":30},"name":"simd_try_normalize","qualname":"<Matrix<N, R, C, S>>::simd_try_normalize","value":"fn (&self, min_norm: N::SimdRealField) -> SimdOption<MatrixMN<N, R, C>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to normalize `self`.","sig":null,"attributes":[{"value":"/ Attempts to normalize `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":458643,"byte_end":458676,"line_start":285,"line_end":285,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":458681,"byte_end":458684,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ The components of this matrix can be SIMD types.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":458689,"byte_end":458741,"line_start":287,"line_end":287,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":458746,"byte_end":458755,"line_start":288,"line_end":288,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use simd_try_normalize_mut()?\"","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":458760,"byte_end":458821,"line_start":289,"line_end":289,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3533},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":459552,"byte_end":459569,"line_start":308,"line_end":308,"column_start":12,"column_end":29},"name":"try_set_magnitude","qualname":"<Matrix<N, R, C, S>>::try_set_magnitude","value":"fn (&mut self, magnitude: N::RealField, min_magnitude: N::RealField) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the magnitude of this vector unless it is smaller than `min_magnitude`.","sig":null,"attributes":[{"value":"/ Sets the magnitude of this vector unless it is smaller than `min_magnitude`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":459268,"byte_end":459348,"line_start":303,"line_end":303,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":459353,"byte_end":459356,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ If `self.magnitude()` is smaller than `min_magnitude`, it will be left unchanged.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":459361,"byte_end":459446,"line_start":305,"line_end":305,"column_start":5,"column_end":90}},{"value":"/ Otherwise this is equivalent to: `*self = self.normalize() * magnitude.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":459451,"byte_end":459526,"line_start":306,"line_end":306,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":459531,"byte_end":459540,"line_start":307,"line_end":307,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3534},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":460091,"byte_end":460104,"line_start":324,"line_end":324,"column_start":12,"column_end":25},"name":"try_normalize","qualname":"<Matrix<N, R, C, S>>::try_normalize","value":"fn (&self, min_norm: N::RealField) -> Option<MatrixMN<N, R, C>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a normalized version of this matrix unless its norm as smaller or equal to `eps`.","sig":null,"attributes":[{"value":"/ Returns a normalized version of this matrix unless its norm as smaller or equal to `eps`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":459808,"byte_end":459901,"line_start":319,"line_end":319,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":459906,"byte_end":459909,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ The components of this matrix cannot be SIMD types (see `simd_try_normalize`) instead.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":459914,"byte_end":460004,"line_start":321,"line_end":321,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":460009,"byte_end":460018,"line_start":322,"line_end":322,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use try_normalize_mut()?\"","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":460023,"byte_end":460079,"line_start":323,"line_end":323,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3540},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":460651,"byte_end":460664,"line_start":343,"line_end":343,"column_start":12,"column_end":25},"name":"normalize_mut","qualname":"<Matrix<N, R, C, S>>::normalize_mut","value":"fn (&mut self) -> N::SimdRealField","parent":null,"children":[],"decl_id":null,"docs":" Normalizes this matrix in-place and returns its norm.","sig":null,"attributes":[{"value":"/ Normalizes this matrix in-place and returns its norm.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":460462,"byte_end":460519,"line_start":339,"line_end":339,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":460524,"byte_end":460527,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ The components of the matrix cannot be SIMD types (see `simd_try_normalize_mut` instead).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":460532,"byte_end":460625,"line_start":341,"line_end":341,"column_start":5,"column_end":98}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":460630,"byte_end":460639,"line_start":342,"line_end":342,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3541},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":460990,"byte_end":461012,"line_start":355,"line_end":355,"column_start":12,"column_end":34},"name":"simd_try_normalize_mut","qualname":"<Matrix<N, R, C, S>>::simd_try_normalize_mut","value":"fn (&mut self, min_norm: N::SimdRealField) -> SimdOption<N::SimdRealField>","parent":null,"children":[],"decl_id":null,"docs":" Normalizes this matrix in-place and return its norm.","sig":null,"attributes":[{"value":"/ Normalizes this matrix in-place and return its norm.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":460778,"byte_end":460834,"line_start":350,"line_end":350,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":460839,"byte_end":460842,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ The components of the matrix can be SIMD types.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":460847,"byte_end":460898,"line_start":352,"line_end":352,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":460903,"byte_end":460912,"line_start":353,"line_end":353,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use simd_try_normalize_mut()?\"","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":460917,"byte_end":460978,"line_start":354,"line_end":354,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3548},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":461682,"byte_end":461699,"line_start":375,"line_end":375,"column_start":12,"column_end":29},"name":"try_normalize_mut","qualname":"<Matrix<N, R, C, S>>::try_normalize_mut","value":"fn (&mut self, min_norm: N::RealField) -> Option<N::RealField>","parent":null,"children":[],"decl_id":null,"docs":" Normalizes this matrix in-place or does nothing if its norm is smaller or equal to `eps`.","sig":null,"attributes":[{"value":"/ Normalizes this matrix in-place or does nothing if its norm is smaller or equal to `eps`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":461478,"byte_end":461571,"line_start":371,"line_end":371,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":461576,"byte_end":461579,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ If the normalization succeeded, returns the old norm of this matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":461584,"byte_end":461656,"line_start":373,"line_end":373,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":461661,"byte_end":461670,"line_start":374,"line_end":374,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3568},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":463622,"byte_end":463636,"line_start":451,"line_end":451,"column_start":12,"column_end":26},"name":"orthonormalize","qualname":"<VectorN<N, D>>::orthonormalize","value":"fn (vs: &mut [Self]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Orthonormalizes the given family of vectors. The largest free family of vectors is moved at\n the beginning of the array and its size is returned. Vectors at an indices larger or equal to\n this length can be modified to an arbitrary value.\n","sig":null,"attributes":[{"value":"/ Orthonormalizes the given family of vectors. The largest free family of vectors is moved at","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":463340,"byte_end":463435,"line_start":447,"line_end":447,"column_start":5,"column_end":100}},{"value":"/ the beginning of the array and its size is returned. Vectors at an indices larger or equal to","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":463440,"byte_end":463537,"line_start":448,"line_end":448,"column_start":5,"column_end":102}},{"value":"/ this length can be modified to an arbitrary value.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":463542,"byte_end":463596,"line_start":449,"line_end":449,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":463601,"byte_end":463610,"line_start":450,"line_end":450,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3569},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":464848,"byte_end":464874,"line_start":484,"line_end":484,"column_start":12,"column_end":38},"name":"orthonormal_subspace_basis","qualname":"<VectorN<N, D>>::orthonormal_subspace_basis","value":"fn <F> (vs: &[Self], mut f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Applies the given closure to each element of the orthonormal basis of the subspace\n orthogonal to free family of vectors `vs`. If `vs` is not a free family, the result is\n unspecified.\n","sig":null,"attributes":[{"value":"/ Applies the given closure to each element of the orthonormal basis of the subspace","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":464528,"byte_end":464614,"line_start":479,"line_end":479,"column_start":5,"column_end":91}},{"value":"/ orthogonal to free family of vectors `vs`. If `vs` is not a free family, the result is","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":464619,"byte_end":464709,"line_start":480,"line_end":480,"column_start":5,"column_end":95}},{"value":"/ unspecified.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":464714,"byte_end":464730,"line_start":481,"line_end":481,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":464827,"byte_end":464836,"line_start":483,"line_end":483,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3596},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/properties.rs","byte_start":468421,"byte_end":468429,"line_start":15,"line_end":15,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Matrix<N, R, C, S>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates if this is an empty matrix.\n","sig":null,"attributes":[{"value":"/ Indicates if this is an empty matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/properties.rs","byte_start":468354,"byte_end":468395,"line_start":13,"line_end":13,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/properties.rs","byte_start":468400,"byte_end":468409,"line_start":14,"line_end":14,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3597},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/properties.rs","byte_start":468601,"byte_end":468610,"line_start":22,"line_end":22,"column_start":12,"column_end":21},"name":"is_square","qualname":"<Matrix<N, R, C, S>>::is_square","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates if this is a square matrix.\n","sig":null,"attributes":[{"value":"/ Indicates if this is a square matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/properties.rs","byte_start":468534,"byte_end":468575,"line_start":20,"line_end":20,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/properties.rs","byte_start":468580,"byte_end":468589,"line_start":21,"line_end":21,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3598},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/properties.rs","byte_start":469094,"byte_end":469105,"line_start":33,"line_end":33,"column_start":12,"column_end":23},"name":"is_identity","qualname":"<Matrix<N, R, C, S>>::is_identity","value":"fn (&self, eps: N::Epsilon) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicated if this is the identity matrix within a relative error of `eps`.","sig":null,"attributes":[{"value":"/ Indicated if this is the identity matrix within a relative error of `eps`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/properties.rs","byte_start":468790,"byte_end":468868,"line_start":28,"line_end":28,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/properties.rs","byte_start":468873,"byte_end":468876,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ If the matrix is diagonal, this checks that diagonal elements (i.e. at coordinates `(i, i)`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/properties.rs","byte_start":468881,"byte_end":468976,"line_start":30,"line_end":30,"column_start":5,"column_end":100}},{"value":"/ for i from `0` to `min(R, C)`) are equal one; and that all other elements are zero.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/properties.rs","byte_start":468981,"byte_end":469068,"line_start":31,"line_end":31,"column_start":5,"column_end":92}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/properties.rs","byte_start":469073,"byte_end":469082,"line_start":32,"line_end":32,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3604},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/properties.rs","byte_start":470790,"byte_end":470803,"line_start":93,"line_end":93,"column_start":12,"column_end":25},"name":"is_orthogonal","qualname":"<Matrix<N, R, C, S>>::is_orthogonal","value":"fn (&self, eps: N::Epsilon) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks that `Mᵀ × M = Id`.","sig":null,"attributes":[{"value":"/ Checks that `Mᵀ × M = Id`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/properties.rs","byte_start":470599,"byte_end":470632,"line_start":88,"line_end":88,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/properties.rs","byte_start":470637,"byte_end":470640,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ In this definition `Id` is approximately equal to the identity matrix with a relative error","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/properties.rs","byte_start":470645,"byte_end":470740,"line_start":90,"line_end":90,"column_start":5,"column_end":100}},{"value":"/ equal to `eps`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/properties.rs","byte_start":470745,"byte_end":470764,"line_start":91,"line_end":91,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/properties.rs","byte_start":470769,"byte_end":470778,"line_start":92,"line_end":92,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3609},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/properties.rs","byte_start":471313,"byte_end":471334,"line_start":110,"line_end":110,"column_start":12,"column_end":33},"name":"is_special_orthogonal","qualname":"<SquareMatrix<N, D, S>>::is_special_orthogonal","value":"fn (&self, eps: N) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks that this matrix is orthogonal and has a determinant equal to 1.\n","sig":null,"attributes":[{"value":"/ Checks that this matrix is orthogonal and has a determinant equal to 1.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/properties.rs","byte_start":471212,"byte_end":471287,"line_start":108,"line_end":108,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/properties.rs","byte_start":471292,"byte_end":471301,"line_start":109,"line_end":109,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3610},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/properties.rs","byte_start":471635,"byte_end":471648,"line_start":120,"line_end":120,"column_start":12,"column_end":25},"name":"is_invertible","qualname":"<SquareMatrix<N, D, S>>::is_invertible","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this matrix is invertible.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this matrix is invertible.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/properties.rs","byte_start":471561,"byte_end":471609,"line_start":118,"line_end":118,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/properties.rs","byte_start":471614,"byte_end":471623,"line_start":119,"line_end":119,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":3615},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/scalar.rs","byte_start":471972,"byte_end":471978,"line_start":8,"line_end":8,"column_start":11,"column_end":17},"name":"Scalar","qualname":"::base::scalar::Scalar","value":"Scalar: Clone + PartialEq + Debug + Any","parent":null,"children":[{"krate":0,"index":3616},{"krate":0,"index":3618}],"decl_id":null,"docs":" The basic scalar type for all structures of `nalgebra`.","sig":null,"attributes":[{"value":"/ The basic scalar type for all structures of `nalgebra`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/scalar.rs","byte_start":471821,"byte_end":471880,"line_start":5,"line_end":5,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/scalar.rs","byte_start":471881,"byte_end":471884,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This does not make any assumption on the algebraic properties of `Self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/scalar.rs","byte_start":471885,"byte_end":471961,"line_start":7,"line_end":7,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":3616},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/scalar.rs","byte_start":472174,"byte_end":472176,"line_start":13,"line_end":13,"column_start":8,"column_end":10},"name":"is","qualname":"::base::scalar::Scalar::is","value":"fn <T> () -> bool","parent":{"krate":0,"index":3615},"children":[],"decl_id":null,"docs":" Tests if `Self` the same as the type `T`","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/scalar.rs","byte_start":472018,"byte_end":472027,"line_start":9,"line_end":9,"column_start":5,"column_end":14}},{"value":"/ Tests if `Self` the same as the type `T`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/scalar.rs","byte_start":472032,"byte_end":472076,"line_start":10,"line_end":10,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/scalar.rs","byte_start":472081,"byte_end":472084,"line_start":11,"line_end":11,"column_start":5,"column_end":8}},{"value":"/ Typically used to test of `Self` is a f32 or a f64 with `N::is::<f32>()`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/scalar.rs","byte_start":472089,"byte_end":472166,"line_start":12,"line_end":12,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":3618},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/scalar.rs","byte_start":472394,"byte_end":472407,"line_start":19,"line_end":19,"column_start":8,"column_end":21},"name":"inlined_clone","qualname":"::base::scalar::Scalar::inlined_clone","value":"fn (&self) -> Self","parent":{"krate":0,"index":3615},"children":[],"decl_id":null,"docs":" Performance hack: Clone doesn't get inlined for Copy types in debug mode, so make it inline anyway.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/scalar.rs","byte_start":472261,"byte_end":472278,"line_start":17,"line_end":17,"column_start":5,"column_end":22}},{"value":"/ Performance hack: Clone doesn't get inlined for Copy types in debug mode, so make it inline anyway.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/scalar.rs","byte_start":472283,"byte_end":472386,"line_start":18,"line_end":18,"column_start":5,"column_end":108}}]},{"kind":"Method","id":{"krate":0,"index":3644},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":473057,"byte_end":473070,"line_start":11,"line_end":11,"column_start":12,"column_end":25},"name":"compress_rows","qualname":"<Matrix<N, R, C, S>>::compress_rows","value":"fn (&self, f: impl Fn(VectorSliceN<N, R, S::RStride, S::CStride>) -> N) -> RowVectorN<N, C>","parent":null,"children":[],"decl_id":null,"docs":" Returns a row vector where each element is the result of the application of `f` on the\n corresponding column of the original matrix.\n","sig":null,"attributes":[{"value":"/ Returns a row vector where each element is the result of the application of `f` on the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":472888,"byte_end":472978,"line_start":8,"line_end":8,"column_start":5,"column_end":95}},{"value":"/ corresponding column of the original matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":472983,"byte_end":473031,"line_start":9,"line_end":9,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":473036,"byte_end":473045,"line_start":10,"line_end":10,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3646},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":473842,"byte_end":473858,"line_start":36,"line_end":36,"column_start":12,"column_end":28},"name":"compress_rows_tr","qualname":"<Matrix<N, R, C, S>>::compress_rows_tr","value":"fn (&self, f: impl Fn(VectorSliceN<N, R, S::RStride, S::CStride>) -> N) -> VectorN<N, C>","parent":null,"children":[],"decl_id":null,"docs":" Returns a column vector where each element is the result of the application of `f` on the\n corresponding column of the original matrix.","sig":null,"attributes":[{"value":"/ Returns a column vector where each element is the result of the application of `f` on the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":473597,"byte_end":473690,"line_start":31,"line_end":31,"column_start":5,"column_end":98}},{"value":"/ corresponding column of the original matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":473695,"byte_end":473743,"line_start":32,"line_end":32,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":473748,"byte_end":473751,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ This is the same as `self.compress_rows(f).transpose()`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":473756,"byte_end":473816,"line_start":34,"line_end":34,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":473821,"byte_end":473830,"line_start":35,"line_end":35,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3648},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":474489,"byte_end":474505,"line_start":58,"line_end":58,"column_start":12,"column_end":28},"name":"compress_columns","qualname":"<Matrix<N, R, C, S>>::compress_columns","value":"fn (&self, init: VectorN<N, R>, f: impl Fn(&mut VectorN<N, R>, VectorSliceN<N, R, S::RStride, S::CStride>)) -> VectorN<N, R>","parent":null,"children":[],"decl_id":null,"docs":" Returns a column vector resulting from the folding of `f` on each column of this matrix.\n","sig":null,"attributes":[{"value":"/ Returns a column vector resulting from the folding of `f` on each column of this matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":474371,"byte_end":474463,"line_start":56,"line_end":56,"column_start":5,"column_end":97}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":474468,"byte_end":474477,"line_start":57,"line_end":57,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3655},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":475305,"byte_end":475308,"line_start":94,"line_end":94,"column_start":12,"column_end":15},"name":"sum","qualname":"<Matrix<N, R, C, S>>::sum","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The sum of all the elements of this matrix.","sig":null,"attributes":[{"value":"/ The sum of all the elements of this matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":475003,"byte_end":475050,"line_start":82,"line_end":82,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":475055,"byte_end":475058,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":475063,"byte_end":475076,"line_start":84,"line_end":84,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":475081,"byte_end":475084,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":475089,"byte_end":475096,"line_start":86,"line_end":86,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix2x3;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":475101,"byte_end":475131,"line_start":87,"line_end":87,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":475136,"byte_end":475139,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":475144,"byte_end":475185,"line_start":89,"line_end":89,"column_start":5,"column_end":46}},{"value":"/                        4.0, 5.0, 6.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":475190,"byte_end":475232,"line_start":90,"line_end":90,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(m.sum(), 21.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":475237,"byte_end":475267,"line_start":91,"line_end":91,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":475272,"byte_end":475279,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":475284,"byte_end":475293,"line_start":93,"line_end":93,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3657},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":475989,"byte_end":475996,"line_start":116,"line_end":116,"column_start":12,"column_end":19},"name":"row_sum","qualname":"<Matrix<N, R, C, S>>::row_sum","value":"fn (&self) -> RowVectorN<N, C>","parent":null,"children":[],"decl_id":null,"docs":" The sum of all the rows of this matrix.","sig":null,"attributes":[{"value":"/ The sum of all the rows of this matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":475393,"byte_end":475436,"line_start":98,"line_end":98,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":475441,"byte_end":475444,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ Use `.row_variance_tr` if you need the result in a column vector instead.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":475449,"byte_end":475526,"line_start":100,"line_end":100,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":475531,"byte_end":475534,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":475539,"byte_end":475552,"line_start":102,"line_end":102,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":475557,"byte_end":475560,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":475565,"byte_end":475572,"line_start":104,"line_end":104,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2x3, Matrix3x2};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":475577,"byte_end":475620,"line_start":105,"line_end":105,"column_start":5,"column_end":48}},{"value":"/ # use nalgebra::{RowVector2, RowVector3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":475625,"byte_end":475670,"line_start":106,"line_end":106,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":475675,"byte_end":475678,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":475683,"byte_end":475724,"line_start":108,"line_end":108,"column_start":5,"column_end":46}},{"value":"/                        4.0, 5.0, 6.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":475729,"byte_end":475771,"line_start":109,"line_end":109,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(m.row_sum(), RowVector3::new(5.0, 7.0, 9.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":475776,"byte_end":475836,"line_start":110,"line_end":110,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":475841,"byte_end":475844,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ let mint = Matrix3x2::new(1,2,3,4,5,6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":475849,"byte_end":475892,"line_start":112,"line_end":112,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(mint.row_sum(), RowVector2::new(9,12));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":475897,"byte_end":475951,"line_start":113,"line_end":113,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":475956,"byte_end":475963,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":475968,"byte_end":475977,"line_start":115,"line_end":115,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3659},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":476700,"byte_end":476710,"line_start":139,"line_end":139,"column_start":12,"column_end":22},"name":"row_sum_tr","qualname":"<Matrix<N, R, C, S>>::row_sum_tr","value":"fn (&self) -> VectorN<N, C>","parent":null,"children":[],"decl_id":null,"docs":" The sum of all the rows of this matrix. The result is transposed and returned as a column vector.","sig":null,"attributes":[{"value":"/ The sum of all the rows of this matrix. The result is transposed and returned as a column vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":476142,"byte_end":476243,"line_start":123,"line_end":123,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":476248,"byte_end":476251,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":476256,"byte_end":476269,"line_start":125,"line_end":125,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":476274,"byte_end":476277,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":476282,"byte_end":476289,"line_start":127,"line_end":127,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2x3, Matrix3x2};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":476294,"byte_end":476337,"line_start":128,"line_end":128,"column_start":5,"column_end":48}},{"value":"/ # use nalgebra::{Vector2, Vector3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":476342,"byte_end":476381,"line_start":129,"line_end":129,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":476386,"byte_end":476389,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":476394,"byte_end":476435,"line_start":131,"line_end":131,"column_start":5,"column_end":46}},{"value":"/                        4.0, 5.0, 6.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":476440,"byte_end":476482,"line_start":132,"line_end":132,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(m.row_sum_tr(), Vector3::new(5.0, 7.0, 9.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":476487,"byte_end":476547,"line_start":133,"line_end":133,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":476552,"byte_end":476555,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ let mint = Matrix3x2::new(1,2,3,4,5,6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":476560,"byte_end":476603,"line_start":135,"line_end":135,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(mint.row_sum_tr(), Vector2::new(9,12));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":476608,"byte_end":476662,"line_start":136,"line_end":136,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":476667,"byte_end":476674,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":476679,"byte_end":476688,"line_start":138,"line_end":138,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3661},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":477353,"byte_end":477363,"line_start":162,"line_end":162,"column_start":12,"column_end":22},"name":"column_sum","qualname":"<Matrix<N, R, C, S>>::column_sum","value":"fn (&self) -> VectorN<N, R>","parent":null,"children":[],"decl_id":null,"docs":" The sum of all the columns of this matrix.","sig":null,"attributes":[{"value":"/ The sum of all the columns of this matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":476852,"byte_end":476898,"line_start":146,"line_end":146,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":476903,"byte_end":476906,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":476911,"byte_end":476924,"line_start":148,"line_end":148,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":476929,"byte_end":476932,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":476937,"byte_end":476944,"line_start":150,"line_end":150,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2x3, Matrix3x2};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":476949,"byte_end":476992,"line_start":151,"line_end":151,"column_start":5,"column_end":48}},{"value":"/ # use nalgebra::{Vector2, Vector3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":476997,"byte_end":477036,"line_start":152,"line_end":152,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":477041,"byte_end":477044,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":477049,"byte_end":477090,"line_start":154,"line_end":154,"column_start":5,"column_end":46}},{"value":"/                        4.0, 5.0, 6.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":477095,"byte_end":477137,"line_start":155,"line_end":155,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(m.column_sum(), Vector2::new(6.0, 15.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":477142,"byte_end":477198,"line_start":156,"line_end":156,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":477203,"byte_end":477206,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ let mint = Matrix3x2::new(1,2,3,4,5,6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":477211,"byte_end":477254,"line_start":158,"line_end":158,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(mint.column_sum(), Vector3::new(3,7,11));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":477259,"byte_end":477315,"line_start":159,"line_end":159,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":477320,"byte_end":477327,"line_start":160,"line_end":160,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":477332,"byte_end":477341,"line_start":161,"line_end":161,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3668},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":478163,"byte_end":478171,"line_start":192,"line_end":192,"column_start":12,"column_end":20},"name":"variance","qualname":"<Matrix<N, R, C, S>>::variance","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The variance of all the elements of this matrix.","sig":null,"attributes":[{"value":"/ The variance of all the elements of this matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":477773,"byte_end":477825,"line_start":179,"line_end":179,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":477830,"byte_end":477833,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":477838,"byte_end":477851,"line_start":181,"line_end":181,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":477856,"byte_end":477859,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":477864,"byte_end":477871,"line_start":183,"line_end":183,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":477876,"byte_end":477915,"line_start":184,"line_end":184,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Matrix2x3;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":477920,"byte_end":477950,"line_start":185,"line_end":185,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":477955,"byte_end":477958,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":477963,"byte_end":478004,"line_start":187,"line_end":187,"column_start":5,"column_end":46}},{"value":"/                        4.0, 5.0, 6.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":478009,"byte_end":478051,"line_start":188,"line_end":188,"column_start":5,"column_end":47}},{"value":"/ assert_relative_eq!(m.variance(), 35.0 / 12.0, epsilon = 1.0e-8);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":478056,"byte_end":478125,"line_start":189,"line_end":189,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":478130,"byte_end":478137,"line_start":190,"line_end":190,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":478142,"byte_end":478151,"line_start":191,"line_end":191,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3670},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":479062,"byte_end":479074,"line_start":218,"line_end":218,"column_start":12,"column_end":24},"name":"row_variance","qualname":"<Matrix<N, R, C, S>>::row_variance","value":"fn (&self) -> RowVectorN<N, C>","parent":null,"children":[],"decl_id":null,"docs":" The variance of all the rows of this matrix.","sig":null,"attributes":[{"value":"/ The variance of all the rows of this matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":478625,"byte_end":478673,"line_start":205,"line_end":205,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":478678,"byte_end":478681,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ Use `.row_variance_tr` if you need the result in a column vector instead.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":478686,"byte_end":478763,"line_start":207,"line_end":207,"column_start":5,"column_end":82}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":478768,"byte_end":478781,"line_start":208,"line_end":208,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":478786,"byte_end":478789,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":478794,"byte_end":478801,"line_start":210,"line_end":210,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2x3, RowVector3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":478806,"byte_end":478850,"line_start":211,"line_end":211,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":478855,"byte_end":478858,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":478863,"byte_end":478904,"line_start":213,"line_end":213,"column_start":5,"column_end":46}},{"value":"/                        4.0, 5.0, 6.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":478909,"byte_end":478951,"line_start":214,"line_end":214,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(m.row_variance(), RowVector3::new(2.25, 2.25, 2.25));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":478956,"byte_end":479024,"line_start":215,"line_end":215,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":479029,"byte_end":479036,"line_start":216,"line_end":216,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":479041,"byte_end":479050,"line_start":217,"line_end":217,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3672},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":479635,"byte_end":479650,"line_start":237,"line_end":237,"column_start":12,"column_end":27},"name":"row_variance_tr","qualname":"<Matrix<N, R, C, S>>::row_variance_tr","value":"fn (&self) -> VectorN<N, C>","parent":null,"children":[],"decl_id":null,"docs":" The variance of all the rows of this matrix. The result is transposed and returned as a column vector.","sig":null,"attributes":[{"value":"/ The variance of all the rows of this matrix. The result is transposed and returned as a column vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":479225,"byte_end":479331,"line_start":225,"line_end":225,"column_start":5,"column_end":111}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":479336,"byte_end":479339,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":479344,"byte_end":479357,"line_start":227,"line_end":227,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":479362,"byte_end":479365,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":479370,"byte_end":479377,"line_start":229,"line_end":229,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2x3, Vector3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":479382,"byte_end":479423,"line_start":230,"line_end":230,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":479428,"byte_end":479431,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":479436,"byte_end":479477,"line_start":232,"line_end":232,"column_start":5,"column_end":46}},{"value":"/                        4.0, 5.0, 6.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":479482,"byte_end":479524,"line_start":233,"line_end":233,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(m.row_variance_tr(), Vector3::new(2.25, 2.25, 2.25));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":479529,"byte_end":479597,"line_start":234,"line_end":234,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":479602,"byte_end":479609,"line_start":235,"line_end":235,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":479614,"byte_end":479623,"line_start":236,"line_end":236,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3674},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":480227,"byte_end":480242,"line_start":257,"line_end":257,"column_start":12,"column_end":27},"name":"column_variance","qualname":"<Matrix<N, R, C, S>>::column_variance","value":"fn (&self) -> VectorN<N, R>","parent":null,"children":[],"decl_id":null,"docs":" The variance of all the columns of this matrix.","sig":null,"attributes":[{"value":"/ The variance of all the columns of this matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":479797,"byte_end":479848,"line_start":244,"line_end":244,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":479853,"byte_end":479856,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":479861,"byte_end":479874,"line_start":246,"line_end":246,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":479879,"byte_end":479882,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":479887,"byte_end":479894,"line_start":248,"line_end":248,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":479899,"byte_end":479938,"line_start":249,"line_end":249,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Matrix2x3, Vector2};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":479943,"byte_end":479984,"line_start":250,"line_end":250,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":479989,"byte_end":479992,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":479997,"byte_end":480038,"line_start":252,"line_end":252,"column_start":5,"column_end":46}},{"value":"/                        4.0, 5.0, 6.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":480043,"byte_end":480085,"line_start":253,"line_end":253,"column_start":5,"column_end":47}},{"value":"/ assert_relative_eq!(m.column_variance(), Vector2::new(2.0 / 3.0, 2.0 / 3.0), epsilon = 1.0e-8);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":480090,"byte_end":480189,"line_start":254,"line_end":254,"column_start":5,"column_end":104}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":480194,"byte_end":480201,"line_start":255,"line_end":255,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":480206,"byte_end":480215,"line_start":256,"line_end":256,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3677},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":481264,"byte_end":481268,"line_start":295,"line_end":295,"column_start":12,"column_end":16},"name":"mean","qualname":"<Matrix<N, R, C, S>>::mean","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The mean of all the elements of this matrix.","sig":null,"attributes":[{"value":"/ The mean of all the elements of this matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":480961,"byte_end":481009,"line_start":283,"line_end":283,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":481014,"byte_end":481017,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":481022,"byte_end":481035,"line_start":285,"line_end":285,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":481040,"byte_end":481043,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":481048,"byte_end":481055,"line_start":287,"line_end":287,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix2x3;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":481060,"byte_end":481090,"line_start":288,"line_end":288,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":481095,"byte_end":481098,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":481103,"byte_end":481144,"line_start":290,"line_end":290,"column_start":5,"column_end":46}},{"value":"/                        4.0, 5.0, 6.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":481149,"byte_end":481191,"line_start":291,"line_end":291,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(m.mean(), 3.5);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":481196,"byte_end":481226,"line_start":292,"line_end":292,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":481231,"byte_end":481238,"line_start":293,"line_end":293,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":481243,"byte_end":481252,"line_start":294,"line_end":294,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3678},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":481861,"byte_end":481869,"line_start":317,"line_end":317,"column_start":12,"column_end":20},"name":"row_mean","qualname":"<Matrix<N, R, C, S>>::row_mean","value":"fn (&self) -> RowVectorN<N, C>","parent":null,"children":[],"decl_id":null,"docs":" The mean of all the rows of this matrix.","sig":null,"attributes":[{"value":"/ The mean of all the rows of this matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":481431,"byte_end":481475,"line_start":303,"line_end":303,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":481480,"byte_end":481483,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ Use `.row_mean_tr` if you need the result in a column vector instead.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":481488,"byte_end":481561,"line_start":305,"line_end":305,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":481566,"byte_end":481569,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":481574,"byte_end":481587,"line_start":307,"line_end":307,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":481592,"byte_end":481595,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":481600,"byte_end":481607,"line_start":309,"line_end":309,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2x3, RowVector3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":481612,"byte_end":481656,"line_start":310,"line_end":310,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":481661,"byte_end":481664,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":481669,"byte_end":481710,"line_start":312,"line_end":312,"column_start":5,"column_end":46}},{"value":"/                        4.0, 5.0, 6.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":481715,"byte_end":481757,"line_start":313,"line_end":313,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(m.row_mean(), RowVector3::new(2.5, 3.5, 4.5));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":481762,"byte_end":481823,"line_start":314,"line_end":314,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":481828,"byte_end":481835,"line_start":315,"line_end":315,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":481840,"byte_end":481849,"line_start":316,"line_end":316,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3680},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":482415,"byte_end":482426,"line_start":336,"line_end":336,"column_start":12,"column_end":23},"name":"row_mean_tr","qualname":"<Matrix<N, R, C, S>>::row_mean_tr","value":"fn (&self) -> VectorN<N, C>","parent":null,"children":[],"decl_id":null,"docs":" The mean of all the rows of this matrix. The result is transposed and returned as a column vector.","sig":null,"attributes":[{"value":"/ The mean of all the rows of this matrix. The result is transposed and returned as a column vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":482016,"byte_end":482118,"line_start":324,"line_end":324,"column_start":5,"column_end":107}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":482123,"byte_end":482126,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":482131,"byte_end":482144,"line_start":326,"line_end":326,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":482149,"byte_end":482152,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":482157,"byte_end":482164,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2x3, Vector3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":482169,"byte_end":482210,"line_start":329,"line_end":329,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":482215,"byte_end":482218,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":482223,"byte_end":482264,"line_start":331,"line_end":331,"column_start":5,"column_end":46}},{"value":"/                        4.0, 5.0, 6.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":482269,"byte_end":482311,"line_start":332,"line_end":332,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(m.row_mean_tr(), Vector3::new(2.5, 3.5, 4.5));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":482316,"byte_end":482377,"line_start":333,"line_end":333,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":482382,"byte_end":482389,"line_start":334,"line_end":334,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":482394,"byte_end":482403,"line_start":335,"line_end":335,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3682},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":482908,"byte_end":482919,"line_start":355,"line_end":355,"column_start":12,"column_end":23},"name":"column_mean","qualname":"<Matrix<N, R, C, S>>::column_mean","value":"fn (&self) -> VectorN<N, R>","parent":null,"children":[],"decl_id":null,"docs":" The mean of all the columns of this matrix.","sig":null,"attributes":[{"value":"/ The mean of all the columns of this matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":482569,"byte_end":482616,"line_start":343,"line_end":343,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":482621,"byte_end":482624,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":482629,"byte_end":482642,"line_start":345,"line_end":345,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":482647,"byte_end":482650,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":482655,"byte_end":482662,"line_start":347,"line_end":347,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2x3, Vector2};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":482667,"byte_end":482708,"line_start":348,"line_end":348,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":482713,"byte_end":482716,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":482721,"byte_end":482762,"line_start":350,"line_end":350,"column_start":5,"column_end":46}},{"value":"/                        4.0, 5.0, 6.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":482767,"byte_end":482809,"line_start":351,"line_end":351,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(m.column_mean(), Vector2::new(2.0, 5.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":482814,"byte_end":482870,"line_start":352,"line_end":352,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":482875,"byte_end":482882,"line_start":353,"line_end":353,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":482887,"byte_end":482896,"line_start":354,"line_end":354,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":17343},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":484052,"byte_end":484054,"line_start":24,"line_end":24,"column_start":15,"column_end":17},"name":"xx","qualname":"<Vector<N, D, S>>::xx","value":"fn (&self) -> Vector2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":483743,"byte_end":483793,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":483814,"byte_end":483823,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17344},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":484090,"byte_end":484093,"line_start":25,"line_end":25,"column_start":15,"column_end":18},"name":"xxx","qualname":"<Vector<N, D, S>>::xxx","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":483743,"byte_end":483793,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":483814,"byte_end":483823,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17349},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":484132,"byte_end":484134,"line_start":27,"line_end":27,"column_start":15,"column_end":17},"name":"xy","qualname":"<Vector<N, D, S>>::xy","value":"fn (&self) -> Vector2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":483743,"byte_end":483793,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":483814,"byte_end":483823,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17350},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":484170,"byte_end":484172,"line_start":28,"line_end":28,"column_start":15,"column_end":17},"name":"yx","qualname":"<Vector<N, D, S>>::yx","value":"fn (&self) -> Vector2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":483743,"byte_end":483793,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":483814,"byte_end":483823,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17351},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":484208,"byte_end":484210,"line_start":29,"line_end":29,"column_start":15,"column_end":17},"name":"yy","qualname":"<Vector<N, D, S>>::yy","value":"fn (&self) -> Vector2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":483743,"byte_end":483793,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":483814,"byte_end":483823,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17352},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":484246,"byte_end":484249,"line_start":30,"line_end":30,"column_start":15,"column_end":18},"name":"xxy","qualname":"<Vector<N, D, S>>::xxy","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":483743,"byte_end":483793,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":483814,"byte_end":483823,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17353},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":484287,"byte_end":484290,"line_start":31,"line_end":31,"column_start":15,"column_end":18},"name":"xyx","qualname":"<Vector<N, D, S>>::xyx","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":483743,"byte_end":483793,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":483814,"byte_end":483823,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17354},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":484328,"byte_end":484331,"line_start":32,"line_end":32,"column_start":15,"column_end":18},"name":"xyy","qualname":"<Vector<N, D, S>>::xyy","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":483743,"byte_end":483793,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":483814,"byte_end":483823,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17355},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":484369,"byte_end":484372,"line_start":33,"line_end":33,"column_start":15,"column_end":18},"name":"yxx","qualname":"<Vector<N, D, S>>::yxx","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":483743,"byte_end":483793,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":483814,"byte_end":483823,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17356},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":484410,"byte_end":484413,"line_start":34,"line_end":34,"column_start":15,"column_end":18},"name":"yxy","qualname":"<Vector<N, D, S>>::yxy","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":483743,"byte_end":483793,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":483814,"byte_end":483823,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17357},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":484451,"byte_end":484454,"line_start":35,"line_end":35,"column_start":15,"column_end":18},"name":"yyx","qualname":"<Vector<N, D, S>>::yyx","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":483743,"byte_end":483793,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":483814,"byte_end":483823,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17358},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":484492,"byte_end":484495,"line_start":36,"line_end":36,"column_start":15,"column_end":18},"name":"yyy","qualname":"<Vector<N, D, S>>::yyy","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":483743,"byte_end":483793,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":483814,"byte_end":483823,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17363},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":484534,"byte_end":484536,"line_start":38,"line_end":38,"column_start":15,"column_end":17},"name":"xz","qualname":"<Vector<N, D, S>>::xz","value":"fn (&self) -> Vector2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":483743,"byte_end":483793,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":483814,"byte_end":483823,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17364},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":484572,"byte_end":484574,"line_start":39,"line_end":39,"column_start":15,"column_end":17},"name":"yz","qualname":"<Vector<N, D, S>>::yz","value":"fn (&self) -> Vector2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":483743,"byte_end":483793,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":483814,"byte_end":483823,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17365},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":484610,"byte_end":484612,"line_start":40,"line_end":40,"column_start":15,"column_end":17},"name":"zx","qualname":"<Vector<N, D, S>>::zx","value":"fn (&self) -> Vector2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":483743,"byte_end":483793,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":483814,"byte_end":483823,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17366},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":484648,"byte_end":484650,"line_start":41,"line_end":41,"column_start":15,"column_end":17},"name":"zy","qualname":"<Vector<N, D, S>>::zy","value":"fn (&self) -> Vector2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":483743,"byte_end":483793,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":483814,"byte_end":483823,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17367},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":484686,"byte_end":484688,"line_start":42,"line_end":42,"column_start":15,"column_end":17},"name":"zz","qualname":"<Vector<N, D, S>>::zz","value":"fn (&self) -> Vector2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":483743,"byte_end":483793,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":483814,"byte_end":483823,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17368},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":484724,"byte_end":484727,"line_start":43,"line_end":43,"column_start":15,"column_end":18},"name":"xxz","qualname":"<Vector<N, D, S>>::xxz","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":483743,"byte_end":483793,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":483814,"byte_end":483823,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17369},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":484765,"byte_end":484768,"line_start":44,"line_end":44,"column_start":15,"column_end":18},"name":"xyz","qualname":"<Vector<N, D, S>>::xyz","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":483743,"byte_end":483793,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":483814,"byte_end":483823,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17370},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":484806,"byte_end":484809,"line_start":45,"line_end":45,"column_start":15,"column_end":18},"name":"xzx","qualname":"<Vector<N, D, S>>::xzx","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":483743,"byte_end":483793,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":483814,"byte_end":483823,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17371},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":484847,"byte_end":484850,"line_start":46,"line_end":46,"column_start":15,"column_end":18},"name":"xzy","qualname":"<Vector<N, D, S>>::xzy","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":483743,"byte_end":483793,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":483814,"byte_end":483823,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17372},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":484888,"byte_end":484891,"line_start":47,"line_end":47,"column_start":15,"column_end":18},"name":"xzz","qualname":"<Vector<N, D, S>>::xzz","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":483743,"byte_end":483793,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":483814,"byte_end":483823,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17373},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":484929,"byte_end":484932,"line_start":48,"line_end":48,"column_start":15,"column_end":18},"name":"yxz","qualname":"<Vector<N, D, S>>::yxz","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":483743,"byte_end":483793,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":483814,"byte_end":483823,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17374},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":484970,"byte_end":484973,"line_start":49,"line_end":49,"column_start":15,"column_end":18},"name":"yyz","qualname":"<Vector<N, D, S>>::yyz","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":483743,"byte_end":483793,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":483814,"byte_end":483823,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17375},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":485011,"byte_end":485014,"line_start":50,"line_end":50,"column_start":15,"column_end":18},"name":"yzx","qualname":"<Vector<N, D, S>>::yzx","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":483743,"byte_end":483793,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":483814,"byte_end":483823,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17376},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":485052,"byte_end":485055,"line_start":51,"line_end":51,"column_start":15,"column_end":18},"name":"yzy","qualname":"<Vector<N, D, S>>::yzy","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":483743,"byte_end":483793,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":483814,"byte_end":483823,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17377},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":485093,"byte_end":485096,"line_start":52,"line_end":52,"column_start":15,"column_end":18},"name":"yzz","qualname":"<Vector<N, D, S>>::yzz","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":483743,"byte_end":483793,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":483814,"byte_end":483823,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17378},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":485134,"byte_end":485137,"line_start":53,"line_end":53,"column_start":15,"column_end":18},"name":"zxx","qualname":"<Vector<N, D, S>>::zxx","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":483743,"byte_end":483793,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":483814,"byte_end":483823,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17379},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":485175,"byte_end":485178,"line_start":54,"line_end":54,"column_start":15,"column_end":18},"name":"zxy","qualname":"<Vector<N, D, S>>::zxy","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":483743,"byte_end":483793,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":483814,"byte_end":483823,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17380},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":485216,"byte_end":485219,"line_start":55,"line_end":55,"column_start":15,"column_end":18},"name":"zxz","qualname":"<Vector<N, D, S>>::zxz","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":483743,"byte_end":483793,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":483814,"byte_end":483823,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17381},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":485257,"byte_end":485260,"line_start":56,"line_end":56,"column_start":15,"column_end":18},"name":"zyx","qualname":"<Vector<N, D, S>>::zyx","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":483743,"byte_end":483793,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":483814,"byte_end":483823,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17382},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":485298,"byte_end":485301,"line_start":57,"line_end":57,"column_start":15,"column_end":18},"name":"zyy","qualname":"<Vector<N, D, S>>::zyy","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":483743,"byte_end":483793,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":483814,"byte_end":483823,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17383},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":485339,"byte_end":485342,"line_start":58,"line_end":58,"column_start":15,"column_end":18},"name":"zyz","qualname":"<Vector<N, D, S>>::zyz","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":483743,"byte_end":483793,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":483814,"byte_end":483823,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17384},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":485380,"byte_end":485383,"line_start":59,"line_end":59,"column_start":15,"column_end":18},"name":"zzx","qualname":"<Vector<N, D, S>>::zzx","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":483743,"byte_end":483793,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":483814,"byte_end":483823,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17385},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":485421,"byte_end":485424,"line_start":60,"line_end":60,"column_start":15,"column_end":18},"name":"zzy","qualname":"<Vector<N, D, S>>::zzy","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":483743,"byte_end":483793,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":483814,"byte_end":483823,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":17386},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":485462,"byte_end":485465,"line_start":61,"line_end":61,"column_start":15,"column_end":18},"name":"zzz","qualname":"<Vector<N, D, S>>::zzz","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":483743,"byte_end":483793,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/swizzle.rs","byte_start":483814,"byte_end":483823,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":17387},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":486193,"byte_end":486197,"line_start":21,"line_end":21,"column_start":12,"column_end":16},"name":"Unit","qualname":"::base::unit::Unit","value":"Unit {  }","parent":null,"children":[{"krate":0,"index":17389}],"decl_id":null,"docs":" A wrapper that ensures the underlying algebraic entity has a unit norm.","sig":null,"attributes":[{"value":"/ A wrapper that ensures the underlying algebraic entity has a unit norm.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":485935,"byte_end":486010,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":486011,"byte_end":486014,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Use `.as_ref()` or `.into_inner()` to obtain the underlying value by-reference or by-move.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":486015,"byte_end":486109,"line_start":18,"line_end":18,"column_start":1,"column_end":95}},{"value":"repr(transparent)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":486110,"byte_end":486130,"line_start":19,"line_end":19,"column_start":1,"column_end":21}}]},{"kind":"Trait","id":{"krate":0,"index":3709},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":487246,"byte_end":487252,"line_start":61,"line_end":61,"column_start":11,"column_end":17},"name":"Normed","qualname":"::base::unit::Normed","value":"Normed","parent":null,"children":[{"krate":0,"index":3710},{"krate":0,"index":3711},{"krate":0,"index":3712},{"krate":0,"index":3713},{"krate":0,"index":3714}],"decl_id":null,"docs":" Trait implemented by entities scan be be normalized and put in an `Unit` struct.\n","sig":null,"attributes":[{"value":"/ Trait implemented by entities scan be be normalized and put in an `Unit` struct.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":487151,"byte_end":487235,"line_start":60,"line_end":60,"column_start":1,"column_end":85}}]},{"kind":"Type","id":{"krate":0,"index":3710},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":487294,"byte_end":487298,"line_start":63,"line_end":63,"column_start":10,"column_end":14},"name":"Norm","qualname":"::base::unit::Normed::Norm","value":"type Norm: SimdRealField;","parent":{"krate":0,"index":3709},"children":[],"decl_id":null,"docs":" The type of the norm.\n","sig":null,"attributes":[{"value":"/ The type of the norm.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":487259,"byte_end":487284,"line_start":62,"line_end":62,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3711},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":487349,"byte_end":487353,"line_start":65,"line_end":65,"column_start":8,"column_end":12},"name":"norm","qualname":"::base::unit::Normed::norm","value":"fn (&self) -> Self::Norm","parent":{"krate":0,"index":3709},"children":[],"decl_id":null,"docs":" Computes the norm.\n","sig":null,"attributes":[{"value":"/ Computes the norm.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":487319,"byte_end":487341,"line_start":64,"line_end":64,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":3712},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":487418,"byte_end":487430,"line_start":67,"line_end":67,"column_start":8,"column_end":20},"name":"norm_squared","qualname":"::base::unit::Normed::norm_squared","value":"fn (&self) -> Self::Norm","parent":{"krate":0,"index":3709},"children":[],"decl_id":null,"docs":" Computes the squared norm.\n","sig":null,"attributes":[{"value":"/ Computes the squared norm.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":487380,"byte_end":487410,"line_start":66,"line_end":66,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":3713},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":487490,"byte_end":487499,"line_start":69,"line_end":69,"column_start":8,"column_end":17},"name":"scale_mut","qualname":"::base::unit::Normed::scale_mut","value":"fn (&mut self, n: Self::Norm) -> ()","parent":{"krate":0,"index":3709},"children":[],"decl_id":null,"docs":" Multiply `self` by n.\n","sig":null,"attributes":[{"value":"/ Multiply `self` by n.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":487457,"byte_end":487482,"line_start":68,"line_end":68,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3714},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":487563,"byte_end":487574,"line_start":71,"line_end":71,"column_start":8,"column_end":19},"name":"unscale_mut","qualname":"::base::unit::Normed::unscale_mut","value":"fn (&mut self, n: Self::Norm) -> ()","parent":{"krate":0,"index":3709},"children":[],"decl_id":null,"docs":" Divides `self` by n.\n","sig":null,"attributes":[{"value":"/ Divides `self` by n.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":487531,"byte_end":487555,"line_start":70,"line_end":70,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3717},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":487736,"byte_end":487749,"line_start":77,"line_end":77,"column_start":12,"column_end":25},"name":"new_normalize","qualname":"<Unit<T>>::new_normalize","value":"fn (value: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Normalize the given vector and return it wrapped on a `Unit` structure.\n","sig":null,"attributes":[{"value":"/ Normalize the given vector and return it wrapped on a `Unit` structure.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":487635,"byte_end":487710,"line_start":75,"line_end":75,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":487715,"byte_end":487724,"line_start":76,"line_end":76,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3718},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":488008,"byte_end":488015,"line_start":85,"line_end":85,"column_start":12,"column_end":19},"name":"try_new","qualname":"<Unit<T>>::try_new","value":"fn (value: T, min_norm: T::Norm) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to normalize the given vector and return it wrapped on a `Unit` structure.","sig":null,"attributes":[{"value":"/ Attempts to normalize the given vector and return it wrapped on a `Unit` structure.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":487816,"byte_end":487903,"line_start":81,"line_end":81,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":487908,"byte_end":487911,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the norm was smaller or equal to `min_norm`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":487916,"byte_end":487982,"line_start":83,"line_end":83,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":487987,"byte_end":487996,"line_start":84,"line_end":84,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3720},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":488294,"byte_end":488305,"line_start":94,"line_end":94,"column_start":12,"column_end":23},"name":"new_and_get","qualname":"<Unit<T>>::new_and_get","value":"fn (mut value: T) -> (Self, T::Norm)","parent":null,"children":[],"decl_id":null,"docs":" Normalize the given vector and return it wrapped on a `Unit` structure and its norm.\n","sig":null,"attributes":[{"value":"/ Normalize the given vector and return it wrapped on a `Unit` structure and its norm.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":488180,"byte_end":488268,"line_start":92,"line_end":92,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":488273,"byte_end":488282,"line_start":93,"line_end":93,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3721},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":488633,"byte_end":488648,"line_start":104,"line_end":104,"column_start":12,"column_end":27},"name":"try_new_and_get","qualname":"<Unit<T>>::try_new_and_get","value":"fn (mut value: T, min_norm: T::Norm) -> Option<(Self, T::Norm)>","parent":null,"children":[],"decl_id":null,"docs":" Normalize the given vector and return it wrapped on a `Unit` structure and its norm.","sig":null,"attributes":[{"value":"/ Normalize the given vector and return it wrapped on a `Unit` structure and its norm.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":488440,"byte_end":488528,"line_start":100,"line_end":100,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":488533,"byte_end":488536,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the norm was smaller or equal to `min_norm`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":488541,"byte_end":488607,"line_start":102,"line_end":102,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":488612,"byte_end":488621,"line_start":103,"line_end":103,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3722},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":489390,"byte_end":489401,"line_start":125,"line_end":125,"column_start":12,"column_end":23},"name":"renormalize","qualname":"<Unit<T>>::renormalize","value":"fn (&mut self) -> T::Norm","parent":null,"children":[],"decl_id":null,"docs":" Normalizes this vector again. This is useful when repeated computations\n might cause a drift in the norm because of float inaccuracies.","sig":null,"attributes":[{"value":"/ Normalizes this vector again. This is useful when repeated computations","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":489009,"byte_end":489084,"line_start":119,"line_end":119,"column_start":5,"column_end":80}},{"value":"/ might cause a drift in the norm because of float inaccuracies.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":489089,"byte_end":489155,"line_start":120,"line_end":120,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":489160,"byte_end":489163,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ Returns the norm before re-normalization. See `.renormalize_fast` for a faster alternative","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":489168,"byte_end":489262,"line_start":122,"line_end":122,"column_start":5,"column_end":99}},{"value":"/ that may be slightly less accurate if `self` drifted significantly from having a unit length.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":489267,"byte_end":489364,"line_start":123,"line_end":123,"column_start":5,"column_end":102}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":489369,"byte_end":489378,"line_start":124,"line_end":124,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3723},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":489732,"byte_end":489748,"line_start":135,"line_end":135,"column_start":12,"column_end":28},"name":"renormalize_fast","qualname":"<Unit<T>>::renormalize_fast","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Normalizes this vector again using a first-order Taylor approximation.\n This is useful when repeated computations might cause a drift in the norm\n because of float inaccuracies.\n","sig":null,"attributes":[{"value":"/ Normalizes this vector again using a first-order Taylor approximation.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":489511,"byte_end":489585,"line_start":131,"line_end":131,"column_start":5,"column_end":79}},{"value":"/ This is useful when repeated computations might cause a drift in the norm","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":489590,"byte_end":489667,"line_start":132,"line_end":132,"column_start":5,"column_end":82}},{"value":"/ because of float inaccuracies.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":489672,"byte_end":489706,"line_start":133,"line_end":133,"column_start":5,"column_end":39}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":489711,"byte_end":489720,"line_start":134,"line_end":134,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3726},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":490078,"byte_end":490091,"line_start":146,"line_end":146,"column_start":12,"column_end":25},"name":"new_unchecked","qualname":"<Unit<T>>::new_unchecked","value":"fn (value: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps the given value, assuming it is already normalized.\n","sig":null,"attributes":[{"value":"/ Wraps the given value, assuming it is already normalized.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":489991,"byte_end":490052,"line_start":144,"line_end":144,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":490057,"byte_end":490066,"line_start":145,"line_end":145,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3727},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":490237,"byte_end":490255,"line_start":152,"line_end":152,"column_start":12,"column_end":30},"name":"from_ref_unchecked","qualname":"<Unit<T>>::from_ref_unchecked","value":"fn <'a> (value: &'a T) -> &'a Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps the given reference, assuming it is already normalized.\n","sig":null,"attributes":[{"value":"/ Wraps the given reference, assuming it is already normalized.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":490146,"byte_end":490211,"line_start":150,"line_end":150,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":490216,"byte_end":490225,"line_start":151,"line_end":151,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3729},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":490401,"byte_end":490411,"line_start":158,"line_end":158,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Unit<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the underlying value.\n","sig":null,"attributes":[{"value":"/ Retrieves the underlying value.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":490340,"byte_end":490375,"line_start":156,"line_end":156,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":490380,"byte_end":490389,"line_start":157,"line_end":157,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3730},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":490624,"byte_end":490630,"line_start":166,"line_end":166,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<Unit<T>>::unwrap","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the underlying value.\n Deprecated: use [Unit::into_inner] instead.\n","sig":null,"attributes":[{"value":"/ Retrieves the underlying value.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":490455,"byte_end":490490,"line_start":162,"line_end":162,"column_start":5,"column_end":40}},{"value":"/ Deprecated: use [Unit::into_inner] instead.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":490495,"byte_end":490542,"line_start":163,"line_end":163,"column_start":5,"column_end":52}},{"value":"deprecated(note = \"use `.into_inner()` instead\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":490547,"byte_end":490598,"line_start":164,"line_end":164,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":490603,"byte_end":490612,"line_start":165,"line_end":165,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3731},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":490912,"byte_end":490928,"line_start":174,"line_end":174,"column_start":12,"column_end":28},"name":"as_mut_unchecked","qualname":"<Unit<T>>::as_mut_unchecked","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying value. This is `_unchecked` because modifying\n the underlying value in such a way that it no longer has unit length may lead to unexpected\n results.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying value. This is `_unchecked` because modifying","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":490674,"byte_end":490769,"line_start":170,"line_end":170,"column_start":5,"column_end":100}},{"value":"/ the underlying value in such a way that it no longer has unit length may lead to unexpected","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":490774,"byte_end":490869,"line_start":171,"line_end":171,"column_start":5,"column_end":100}},{"value":"/ results.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":490874,"byte_end":490886,"line_start":172,"line_end":172,"column_start":5,"column_end":17}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":490891,"byte_end":490900,"line_start":173,"line_end":173,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":17413},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/vec_storage.rs","byte_start":496934,"byte_end":496944,"line_start":26,"line_end":26,"column_start":12,"column_end":22},"name":"VecStorage","qualname":"::base::vec_storage::VecStorage","value":"VecStorage {  }","parent":null,"children":[{"krate":0,"index":17417},{"krate":0,"index":17418},{"krate":0,"index":17419}],"decl_id":null,"docs":" A Vec-based matrix data storage. It may be dynamically-sized.\n","sig":null,"attributes":[{"value":"/ A Vec-based matrix data storage. It may be dynamically-sized.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/vec_storage.rs","byte_start":496734,"byte_end":496799,"line_start":22,"line_end":22,"column_start":1,"column_end":66}},{"value":"repr(C)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/vec_storage.rs","byte_start":496800,"byte_end":496810,"line_start":23,"line_end":23,"column_start":1,"column_end":11}}]},{"kind":"Type","id":{"krate":0,"index":3791},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/vec_storage.rs","byte_start":497101,"byte_end":497110,"line_start":34,"line_end":34,"column_start":10,"column_end":19},"name":"MatrixVec","qualname":"::base::vec_storage::MatrixVec","value":"VecStorage<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Renamed to [VecStorage].\n","sig":null,"attributes":[{"value":"deprecated(note = \"renamed to `VecStorage`\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/vec_storage.rs","byte_start":497015,"byte_end":497062,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/ Renamed to [VecStorage].","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/vec_storage.rs","byte_start":497063,"byte_end":497091,"line_start":33,"line_end":33,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3799},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/vec_storage.rs","byte_start":497298,"byte_end":497301,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<VecStorage<N, R, C>>::new","value":"fn (nrows: R, ncols: C, data: Vec<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new dynamic matrix data storage from the given vector and shape.\n","sig":null,"attributes":[{"value":"/ Creates a new dynamic matrix data storage from the given vector and shape.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/vec_storage.rs","byte_start":497194,"byte_end":497272,"line_start":37,"line_end":37,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/vec_storage.rs","byte_start":497277,"byte_end":497286,"line_start":38,"line_end":38,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3800},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/vec_storage.rs","byte_start":497655,"byte_end":497661,"line_start":53,"line_end":53,"column_start":12,"column_end":18},"name":"as_vec","qualname":"<VecStorage<N, R, C>>::as_vec","value":"fn (&self) -> &Vec<N>","parent":null,"children":[],"decl_id":null,"docs":" The underlying data storage.\n","sig":null,"attributes":[{"value":"/ The underlying data storage.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/vec_storage.rs","byte_start":497597,"byte_end":497629,"line_start":51,"line_end":51,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/vec_storage.rs","byte_start":497634,"byte_end":497643,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3801},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/vec_storage.rs","byte_start":497900,"byte_end":497910,"line_start":62,"line_end":62,"column_start":19,"column_end":29},"name":"as_vec_mut","qualname":"<VecStorage<N, R, C>>::as_vec_mut","value":"fn (&mut self) -> &mut Vec<N>","parent":null,"children":[],"decl_id":null,"docs":" The underlying mutable data storage.","sig":null,"attributes":[{"value":"/ The underlying mutable data storage.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/vec_storage.rs","byte_start":497712,"byte_end":497752,"line_start":57,"line_end":57,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/vec_storage.rs","byte_start":497757,"byte_end":497760,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ This is unsafe because this may cause UB if the size of the vector is changed","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/vec_storage.rs","byte_start":497765,"byte_end":497846,"line_start":59,"line_end":59,"column_start":5,"column_end":86}},{"value":"/ by the user.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/vec_storage.rs","byte_start":497851,"byte_end":497867,"line_start":60,"line_end":60,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/vec_storage.rs","byte_start":497872,"byte_end":497881,"line_start":61,"line_end":61,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3802},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/vec_storage.rs","byte_start":498250,"byte_end":498256,"line_start":71,"line_end":71,"column_start":19,"column_end":25},"name":"resize","qualname":"<VecStorage<N, R, C>>::resize","value":"fn (mut self, sz: usize) -> Vec<N>","parent":null,"children":[],"decl_id":null,"docs":" Resizes the underlying mutable data storage and unwraps it.","sig":null,"attributes":[{"value":"/ Resizes the underlying mutable data storage and unwraps it.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/vec_storage.rs","byte_start":497973,"byte_end":498036,"line_start":66,"line_end":66,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/vec_storage.rs","byte_start":498041,"byte_end":498044,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ If `sz` is larger than the current size, additional elements are uninitialized.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/vec_storage.rs","byte_start":498049,"byte_end":498132,"line_start":68,"line_end":68,"column_start":5,"column_end":88}},{"value":"/ If `sz` is smaller than the current size, additional elements are truncated.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/vec_storage.rs","byte_start":498137,"byte_end":498217,"line_start":69,"line_end":69,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/vec_storage.rs","byte_start":498222,"byte_end":498231,"line_start":70,"line_end":70,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3803},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/vec_storage.rs","byte_start":498634,"byte_end":498637,"line_start":87,"line_end":87,"column_start":12,"column_end":15},"name":"len","qualname":"<VecStorage<N, R, C>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The number of elements on the underlying vector.\n","sig":null,"attributes":[{"value":"/ The number of elements on the underlying vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/vec_storage.rs","byte_start":498556,"byte_end":498608,"line_start":85,"line_end":85,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/vec_storage.rs","byte_start":498613,"byte_end":498622,"line_start":86,"line_end":86,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":3877},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/helper.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"helper","qualname":"::base::helper","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/helper.rs","parent":null,"children":[{"krate":0,"index":3878},{"krate":0,"index":3881},{"krate":0,"index":3882}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3882},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/helper.rs","byte_start":505539,"byte_end":505550,"line_start":20,"line_end":20,"column_start":8,"column_end":19},"name":"reject_rand","qualname":"::base::helper::reject_rand","value":"fn <G, F, T> (g: &mut G, f: F) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/helper.rs","byte_start":505522,"byte_end":505531,"line_start":19,"line_end":19,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":3899},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"geometry","qualname":"::geometry","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/mod.rs","parent":null,"children":[{"krate":0,"index":3900},{"krate":0,"index":3907},{"krate":0,"index":3961},{"krate":0,"index":4045},{"krate":0,"index":4066},{"krate":0,"index":4112},{"krate":0,"index":4184},{"krate":0,"index":4209},{"krate":0,"index":4274},{"krate":0,"index":4295},{"krate":0,"index":4379},{"krate":0,"index":4388},{"krate":0,"index":4410},{"krate":0,"index":4538},{"krate":0,"index":4576},{"krate":0,"index":4597},{"krate":0,"index":4698},{"krate":0,"index":4886},{"krate":0,"index":5002},{"krate":0,"index":5138},{"krate":0,"index":5154},{"krate":0,"index":5204},{"krate":0,"index":5233},{"krate":0,"index":5298},{"krate":0,"index":5352},{"krate":0,"index":5452},{"krate":0,"index":5560},{"krate":0,"index":5578},{"krate":0,"index":5659},{"krate":0,"index":5680},{"krate":0,"index":5718},{"krate":0,"index":5821},{"krate":0,"index":5846},{"krate":0,"index":5871},{"krate":0,"index":5892},{"krate":0,"index":5991},{"krate":0,"index":6009},{"krate":0,"index":6068},{"krate":0,"index":6174},{"krate":0,"index":6212},{"krate":0,"index":6235},{"krate":0,"index":6348},{"krate":0,"index":6366},{"krate":0,"index":6423},{"krate":0,"index":6521},{"krate":0,"index":6559},{"krate":0,"index":6583},{"krate":0,"index":6598},{"krate":0,"index":6725},{"krate":0,"index":6746},{"krate":0,"index":6770},{"krate":0,"index":6809},{"krate":0,"index":6863},{"krate":0,"index":6891},{"krate":0,"index":6944},{"krate":0,"index":7017},{"krate":0,"index":7084},{"krate":0,"index":7085},{"krate":0,"index":7086},{"krate":0,"index":7087},{"krate":0,"index":7088},{"krate":0,"index":7089},{"krate":0,"index":7090},{"krate":0,"index":7091},{"krate":0,"index":7092},{"krate":0,"index":7093},{"krate":0,"index":7094},{"krate":0,"index":7095},{"krate":0,"index":7096},{"krate":0,"index":7097},{"krate":0,"index":7098},{"krate":0,"index":7099},{"krate":0,"index":7100},{"krate":0,"index":7101}],"decl_id":null,"docs":" [Reexported at the root of this crate.] Data structures for points and usual transformations\n (rotations, isometries, etc.)\n","sig":null,"attributes":[{"value":"! [Reexported at the root of this crate.] Data structures for points and usual transformations","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/mod.rs","byte_start":505731,"byte_end":505827,"line_start":1,"line_end":1,"column_start":1,"column_end":97}},{"value":"! (rotations, isometries, etc.)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/mod.rs","byte_start":505828,"byte_end":505861,"line_start":2,"line_end":2,"column_start":1,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":3923},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/abstract_rotation.rs","byte_start":517170,"byte_end":517186,"line_start":8,"line_end":8,"column_start":11,"column_end":27},"name":"AbstractRotation","qualname":"::geometry::abstract_rotation::AbstractRotation","value":"AbstractRotation<N: Scalar, D: DimName>: PartialEq + ClosedMul + Clone","parent":null,"children":[{"krate":0,"index":3926},{"krate":0,"index":3927},{"krate":0,"index":3928},{"krate":0,"index":3929},{"krate":0,"index":3930},{"krate":0,"index":3931},{"krate":0,"index":3932}],"decl_id":null,"docs":" Trait implemented by rotations that can be used inside of an `Isometry` or `Similarity`.\n","sig":null,"attributes":[{"value":"/ Trait implemented by rotations that can be used inside of an `Isometry` or `Similarity`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/abstract_rotation.rs","byte_start":517067,"byte_end":517159,"line_start":7,"line_end":7,"column_start":1,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":3926},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/abstract_rotation.rs","byte_start":517281,"byte_end":517289,"line_start":10,"line_end":10,"column_start":8,"column_end":16},"name":"identity","qualname":"::geometry::abstract_rotation::AbstractRotation::identity","value":"fn () -> Self","parent":{"krate":0,"index":3923},"children":[],"decl_id":null,"docs":" The rotation identity.\n","sig":null,"attributes":[{"value":"/ The rotation identity.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/abstract_rotation.rs","byte_start":517247,"byte_end":517273,"line_start":9,"line_end":9,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3927},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/abstract_rotation.rs","byte_start":517338,"byte_end":517345,"line_start":12,"line_end":12,"column_start":8,"column_end":15},"name":"inverse","qualname":"::geometry::abstract_rotation::AbstractRotation::inverse","value":"fn (&self) -> Self","parent":{"krate":0,"index":3923},"children":[],"decl_id":null,"docs":" The rotation inverse.\n","sig":null,"attributes":[{"value":"/ The rotation inverse.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/abstract_rotation.rs","byte_start":517305,"byte_end":517330,"line_start":11,"line_end":11,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3928},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/abstract_rotation.rs","byte_start":517407,"byte_end":517418,"line_start":14,"line_end":14,"column_start":8,"column_end":19},"name":"inverse_mut","qualname":"::geometry::abstract_rotation::AbstractRotation::inverse_mut","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":3923},"children":[],"decl_id":null,"docs":" Change `self` to its inverse.\n","sig":null,"attributes":[{"value":"/ Change `self` to its inverse.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/abstract_rotation.rs","byte_start":517366,"byte_end":517399,"line_start":13,"line_end":13,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3929},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/abstract_rotation.rs","byte_start":517486,"byte_end":517502,"line_start":16,"line_end":16,"column_start":8,"column_end":24},"name":"transform_vector","qualname":"::geometry::abstract_rotation::AbstractRotation::transform_vector","value":"fn (&self, v: &VectorN<N, D>) -> VectorN<N, D>","parent":{"krate":0,"index":3923},"children":[],"decl_id":null,"docs":" Apply the rotation to the given vector.\n","sig":null,"attributes":[{"value":"/ Apply the rotation to the given vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/abstract_rotation.rs","byte_start":517435,"byte_end":517478,"line_start":15,"line_end":15,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3930},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/abstract_rotation.rs","byte_start":517653,"byte_end":517668,"line_start":20,"line_end":20,"column_start":8,"column_end":23},"name":"transform_point","qualname":"::geometry::abstract_rotation::AbstractRotation::transform_point","value":"fn (&self, p: &Point<N, D>) -> Point<N, D>","parent":{"krate":0,"index":3923},"children":[],"decl_id":null,"docs":" Apply the rotation to the given point.\n","sig":null,"attributes":[{"value":"/ Apply the rotation to the given point.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/abstract_rotation.rs","byte_start":517603,"byte_end":517645,"line_start":19,"line_end":19,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3931},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/abstract_rotation.rs","byte_start":517824,"byte_end":517848,"line_start":24,"line_end":24,"column_start":8,"column_end":32},"name":"inverse_transform_vector","qualname":"::geometry::abstract_rotation::AbstractRotation::inverse_transform_vector","value":"fn (&self, v: &VectorN<N, D>) -> VectorN<N, D>","parent":{"krate":0,"index":3923},"children":[],"decl_id":null,"docs":" Apply the inverse rotation to the given vector.\n","sig":null,"attributes":[{"value":"/ Apply the inverse rotation to the given vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/abstract_rotation.rs","byte_start":517765,"byte_end":517816,"line_start":23,"line_end":23,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3932},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/abstract_rotation.rs","byte_start":518007,"byte_end":518030,"line_start":28,"line_end":28,"column_start":8,"column_end":31},"name":"inverse_transform_point","qualname":"::geometry::abstract_rotation::AbstractRotation::inverse_transform_point","value":"fn (&self, p: &Point<N, D>) -> Point<N, D>","parent":{"krate":0,"index":3923},"children":[],"decl_id":null,"docs":" Apply the inverse rotation to the given point.\n","sig":null,"attributes":[{"value":"/ Apply the inverse rotation to the given point.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/abstract_rotation.rs","byte_start":517949,"byte_end":517999,"line_start":27,"line_end":27,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":17449},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":521591,"byte_end":521596,"line_start":25,"line_end":25,"column_start":12,"column_end":17},"name":"Point","qualname":"::geometry::point::Point","value":"Point { coords }","parent":null,"children":[{"krate":0,"index":17452}],"decl_id":null,"docs":" A point in a n-dimensional euclidean space.\n","sig":null,"attributes":[{"value":"/ A point in a n-dimensional euclidean space.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":521497,"byte_end":521544,"line_start":22,"line_end":22,"column_start":1,"column_end":48}},{"value":"repr(C)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":521545,"byte_end":521555,"line_start":23,"line_end":23,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":17452},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":521747,"byte_end":521753,"line_start":30,"line_end":30,"column_start":9,"column_end":15},"name":"coords","qualname":"::geometry::point::Point::coords","value":"base::matrix::Matrix<N, D, base::dimension::U1, <base::default_allocator::DefaultAllocator as base::allocator::Allocator<N, D>>::Buffer>","parent":{"krate":0,"index":17449},"children":[],"decl_id":null,"docs":" The coordinates of this point, i.e., the shift from the origin.\n","sig":null,"attributes":[{"value":"/ The coordinates of this point, i.e., the shift from the origin.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":521671,"byte_end":521738,"line_start":29,"line_end":29,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":3995},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":524194,"byte_end":524208,"line_start":121,"line_end":121,"column_start":12,"column_end":26},"name":"to_homogeneous","qualname":"<Point<N, D>>::to_homogeneous","value":"fn (&self) -> VectorN<N, DimNameSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Converts this point into a vector in homogeneous coordinates, i.e., appends a `1` at the\n end of it.","sig":null,"attributes":[{"value":"/ Converts this point into a vector in homogeneous coordinates, i.e., appends a `1` at the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":523616,"byte_end":523708,"line_start":105,"line_end":105,"column_start":5,"column_end":97}},{"value":"/ end of it.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":523713,"byte_end":523727,"line_start":106,"line_end":106,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":523732,"byte_end":523735,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ This is the same as `.into()`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":523740,"byte_end":523774,"line_start":108,"line_end":108,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":523779,"byte_end":523782,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":523787,"byte_end":523800,"line_start":110,"line_end":110,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":523805,"byte_end":523812,"line_start":111,"line_end":111,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Point2, Point3, Vector3, Vector4};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":523817,"byte_end":523872,"line_start":112,"line_end":112,"column_start":5,"column_end":60}},{"value":"/ let p = Point2::new(10.0, 20.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":523877,"byte_end":523913,"line_start":113,"line_end":113,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(p.to_homogeneous(), Vector3::new(10.0, 20.0, 1.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":523918,"byte_end":523984,"line_start":114,"line_end":114,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":523989,"byte_end":523992,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ // This works in any dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":523997,"byte_end":524032,"line_start":116,"line_end":116,"column_start":5,"column_end":40}},{"value":"/ let p = Point3::new(10.0, 20.0, 30.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":524037,"byte_end":524079,"line_start":117,"line_end":117,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(p.to_homogeneous(), Vector4::new(10.0, 20.0, 30.0, 1.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":524084,"byte_end":524156,"line_start":118,"line_end":118,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":524161,"byte_end":524168,"line_start":119,"line_end":119,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":524173,"byte_end":524182,"line_start":120,"line_end":120,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3996},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":524723,"byte_end":524739,"line_start":137,"line_end":137,"column_start":12,"column_end":28},"name":"from_coordinates","qualname":"<Point<N, D>>::from_coordinates","value":"fn (coords: VectorN<N, D>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new point with the given coordinates.\n","sig":null,"attributes":[{"value":"/ Creates a new point with the given coordinates.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":524585,"byte_end":524636,"line_start":134,"line_end":134,"column_start":5,"column_end":56}},{"value":"deprecated(note = \"Use Point::from(vector) instead.\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":524641,"byte_end":524697,"line_start":135,"line_end":135,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":524702,"byte_end":524711,"line_start":136,"line_end":136,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3997},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":525164,"byte_end":525167,"line_start":154,"line_end":154,"column_start":12,"column_end":15},"name":"len","qualname":"<Point<N, D>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The dimension of this point.","sig":null,"attributes":[{"value":"/ The dimension of this point.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":524816,"byte_end":524848,"line_start":141,"line_end":141,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":524853,"byte_end":524856,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":524861,"byte_end":524874,"line_start":143,"line_end":143,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":524879,"byte_end":524886,"line_start":144,"line_end":144,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Point2, Point3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":524891,"byte_end":524928,"line_start":145,"line_end":145,"column_start":5,"column_end":42}},{"value":"/ let p = Point2::new(1.0, 2.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":524933,"byte_end":524967,"line_start":146,"line_end":146,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(p.len(), 2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":524972,"byte_end":524999,"line_start":147,"line_end":147,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":525004,"byte_end":525007,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ // This works in any dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":525012,"byte_end":525047,"line_start":149,"line_end":149,"column_start":5,"column_end":40}},{"value":"/ let p = Point3::new(10.0, 20.0, 30.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":525052,"byte_end":525094,"line_start":150,"line_end":150,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(p.len(), 3);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":525099,"byte_end":525126,"line_start":151,"line_end":151,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":525131,"byte_end":525138,"line_start":152,"line_end":152,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":525143,"byte_end":525152,"line_start":153,"line_end":153,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3998},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":525456,"byte_end":525462,"line_start":162,"line_end":162,"column_start":12,"column_end":18},"name":"stride","qualname":"<Point<N, D>>::stride","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The stride of this point. This is the number of buffer element separating each component of\n this point.\n","sig":null,"attributes":[{"value":"/ The stride of this point. This is the number of buffer element separating each component of","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":525223,"byte_end":525318,"line_start":158,"line_end":158,"column_start":5,"column_end":100}},{"value":"/ this point.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":525323,"byte_end":525338,"line_start":159,"line_end":159,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":525343,"byte_end":525352,"line_start":160,"line_end":160,"column_start":5,"column_end":14}},{"value":"deprecated(note =\n             \"This methods is no longer significant and will always return 1.\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":525357,"byte_end":525444,"line_start":161,"line_end":161,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":3999},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":525919,"byte_end":525923,"line_start":179,"line_end":179,"column_start":12,"column_end":16},"name":"iter","qualname":"<Point<N, D>>::iter","value":"fn (&self) -> MatrixIter<N, D, U1, <DefaultAllocator as Allocator<N, D>>::Buffer>","parent":null,"children":[],"decl_id":null,"docs":" Iterates through this point coordinates.","sig":null,"attributes":[{"value":"/ Iterates through this point coordinates.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":525524,"byte_end":525568,"line_start":166,"line_end":166,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":525573,"byte_end":525576,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":525581,"byte_end":525594,"line_start":168,"line_end":168,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":525599,"byte_end":525606,"line_start":169,"line_end":169,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Point3;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":525611,"byte_end":525638,"line_start":170,"line_end":170,"column_start":5,"column_end":32}},{"value":"/ let p = Point3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":525643,"byte_end":525682,"line_start":171,"line_end":171,"column_start":5,"column_end":44}},{"value":"/ let mut it = p.iter().cloned();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":525687,"byte_end":525722,"line_start":172,"line_end":172,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":525727,"byte_end":525730,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(it.next(), Some(1.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":525735,"byte_end":525772,"line_start":174,"line_end":174,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(it.next(), Some(2.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":525777,"byte_end":525814,"line_start":175,"line_end":175,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(it.next(), Some(3.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":525819,"byte_end":525856,"line_start":176,"line_end":176,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(it.next(), None);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":525861,"byte_end":525893,"line_start":177,"line_end":177,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":525898,"byte_end":525907,"line_start":178,"line_end":178,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4000},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":526149,"byte_end":526162,"line_start":185,"line_end":185,"column_start":19,"column_end":32},"name":"get_unchecked","qualname":"<Point<N, D>>::get_unchecked","value":"fn (&self, i: usize) -> &N","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to i-th element of this point without bound-checking.\n","sig":null,"attributes":[{"value":"/ Gets a reference to i-th element of this point without bound-checking.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":526042,"byte_end":526116,"line_start":183,"line_end":183,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":526121,"byte_end":526130,"line_start":184,"line_end":184,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4001},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":526569,"byte_end":526577,"line_start":202,"line_end":202,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<Point<N, D>>::iter_mut","value":"fn (&mut self) -> MatrixIterMut<N, D, U1, <DefaultAllocator as Allocator<N, D>>::Buffer>","parent":null,"children":[],"decl_id":null,"docs":" Mutably iterates through this point coordinates.","sig":null,"attributes":[{"value":"/ Mutably iterates through this point coordinates.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":526237,"byte_end":526289,"line_start":189,"line_end":189,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":526294,"byte_end":526297,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":526302,"byte_end":526315,"line_start":191,"line_end":191,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":526320,"byte_end":526327,"line_start":192,"line_end":192,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Point3;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":526332,"byte_end":526359,"line_start":193,"line_end":193,"column_start":5,"column_end":32}},{"value":"/ let mut p = Point3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":526364,"byte_end":526407,"line_start":194,"line_end":194,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":526412,"byte_end":526415,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ for e in p.iter_mut() {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":526420,"byte_end":526447,"line_start":196,"line_end":196,"column_start":5,"column_end":32}},{"value":"/     *e *= 10.0;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":526452,"byte_end":526471,"line_start":197,"line_end":197,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":526476,"byte_end":526481,"line_start":198,"line_end":198,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":526486,"byte_end":526489,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(p, Point3::new(10.0, 20.0, 30.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":526494,"byte_end":526543,"line_start":200,"line_end":200,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":526548,"byte_end":526557,"line_start":201,"line_end":201,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4002},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":526837,"byte_end":526854,"line_start":210,"line_end":210,"column_start":19,"column_end":36},"name":"get_unchecked_mut","qualname":"<Point<N, D>>::get_unchecked_mut","value":"fn (&mut self, i: usize) -> &mut N","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to i-th element of this point without bound-checking.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to i-th element of this point without bound-checking.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":526722,"byte_end":526804,"line_start":208,"line_end":208,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":526809,"byte_end":526818,"line_start":209,"line_end":209,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4003},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":527019,"byte_end":527033,"line_start":216,"line_end":216,"column_start":19,"column_end":33},"name":"swap_unchecked","qualname":"<Point<N, D>>::swap_unchecked","value":"fn (&mut self, i1: usize, i2: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Swaps two entries without bound-checking.\n","sig":null,"attributes":[{"value":"/ Swaps two entries without bound-checking.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":526941,"byte_end":526986,"line_start":214,"line_end":214,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":526991,"byte_end":527000,"line_start":215,"line_end":215,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4038},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":529579,"byte_end":529582,"line_start":328,"line_end":328,"column_start":12,"column_end":15},"name":"inf","qualname":"<Point<N, D>>::inf","value":"fn (&self, other: &Self) -> Point<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the infimum (aka. componentwise min) of two points.\n","sig":null,"attributes":[{"value":"/ Computes the infimum (aka. componentwise min) of two points.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":529489,"byte_end":529553,"line_start":326,"line_end":326,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":529558,"byte_end":529567,"line_start":327,"line_end":327,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4039},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":529769,"byte_end":529772,"line_start":334,"line_end":334,"column_start":12,"column_end":15},"name":"sup","qualname":"<Point<N, D>>::sup","value":"fn (&self, other: &Self) -> Point<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the supremum (aka. componentwise max) of two points.\n","sig":null,"attributes":[{"value":"/ Computes the supremum (aka. componentwise max) of two points.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":529678,"byte_end":529743,"line_start":332,"line_end":332,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":529748,"byte_end":529757,"line_start":333,"line_end":333,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4040},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":529945,"byte_end":529952,"line_start":340,"line_end":340,"column_start":12,"column_end":19},"name":"inf_sup","qualname":"<Point<N, D>>::inf_sup","value":"fn (&self, other: &Self) -> (Point<N, D>, Point<N, D>)","parent":null,"children":[],"decl_id":null,"docs":" Computes the (infimum, supremum) of two points.\n","sig":null,"attributes":[{"value":"/ Computes the (infimum, supremum) of two points.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":529868,"byte_end":529919,"line_start":338,"line_end":338,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":529924,"byte_end":529933,"line_start":339,"line_end":339,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":4054},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_alias.rs","byte_start":530680,"byte_end":530686,"line_start":6,"line_end":6,"column_start":10,"column_end":16},"name":"Point1","qualname":"::geometry::point_alias::Point1","value":"Point<N, U1>","parent":null,"children":[],"decl_id":null,"docs":" A statically sized 1-dimensional column point.\n","sig":null,"attributes":[{"value":"/ A statically sized 1-dimensional column point.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_alias.rs","byte_start":530620,"byte_end":530670,"line_start":5,"line_end":5,"column_start":1,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":4056},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_alias.rs","byte_start":530766,"byte_end":530772,"line_start":8,"line_end":8,"column_start":10,"column_end":16},"name":"Point2","qualname":"::geometry::point_alias::Point2","value":"Point<N, U2>","parent":null,"children":[],"decl_id":null,"docs":" A statically sized 2-dimensional column point.\n","sig":null,"attributes":[{"value":"/ A statically sized 2-dimensional column point.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_alias.rs","byte_start":530706,"byte_end":530756,"line_start":7,"line_end":7,"column_start":1,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":4058},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_alias.rs","byte_start":530852,"byte_end":530858,"line_start":10,"line_end":10,"column_start":10,"column_end":16},"name":"Point3","qualname":"::geometry::point_alias::Point3","value":"Point<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" A statically sized 3-dimensional column point.\n","sig":null,"attributes":[{"value":"/ A statically sized 3-dimensional column point.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_alias.rs","byte_start":530792,"byte_end":530842,"line_start":9,"line_end":9,"column_start":1,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":4060},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_alias.rs","byte_start":530938,"byte_end":530944,"line_start":12,"line_end":12,"column_start":10,"column_end":16},"name":"Point4","qualname":"::geometry::point_alias::Point4","value":"Point<N, U4>","parent":null,"children":[],"decl_id":null,"docs":" A statically sized 4-dimensional column point.\n","sig":null,"attributes":[{"value":"/ A statically sized 4-dimensional column point.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_alias.rs","byte_start":530878,"byte_end":530928,"line_start":11,"line_end":11,"column_start":1,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":4062},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_alias.rs","byte_start":531024,"byte_end":531030,"line_start":14,"line_end":14,"column_start":10,"column_end":16},"name":"Point5","qualname":"::geometry::point_alias::Point5","value":"Point<N, U5>","parent":null,"children":[],"decl_id":null,"docs":" A statically sized 5-dimensional column point.\n","sig":null,"attributes":[{"value":"/ A statically sized 5-dimensional column point.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_alias.rs","byte_start":530964,"byte_end":531014,"line_start":13,"line_end":13,"column_start":1,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":4064},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_alias.rs","byte_start":531110,"byte_end":531116,"line_start":16,"line_end":16,"column_start":10,"column_end":16},"name":"Point6","qualname":"::geometry::point_alias::Point6","value":"Point<N, U6>","parent":null,"children":[],"decl_id":null,"docs":" A statically sized 6-dimensional column point.\n","sig":null,"attributes":[{"value":"/ A statically sized 6-dimensional column point.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_alias.rs","byte_start":531050,"byte_end":531100,"line_start":15,"line_end":15,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":4095},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_construction.rs","byte_start":531719,"byte_end":531736,"line_start":21,"line_end":21,"column_start":19,"column_end":36},"name":"new_uninitialized","qualname":"<Point<N, D>>::new_uninitialized","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new point with uninitialized coordinates.\n","sig":null,"attributes":[{"value":"/ Creates a new point with uninitialized coordinates.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_construction.rs","byte_start":531631,"byte_end":531686,"line_start":19,"line_end":19,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_construction.rs","byte_start":531691,"byte_end":531700,"line_start":20,"line_end":20,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4096},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_construction.rs","byte_start":532365,"byte_end":532371,"line_start":41,"line_end":41,"column_start":12,"column_end":18},"name":"origin","qualname":"<Point<N, D>>::origin","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new point with all coordinates equal to zero.","sig":null,"attributes":[{"value":"/ Creates a new point with all coordinates equal to zero.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_construction.rs","byte_start":531809,"byte_end":531868,"line_start":25,"line_end":25,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_construction.rs","byte_start":531873,"byte_end":531876,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_construction.rs","byte_start":531881,"byte_end":531894,"line_start":27,"line_end":27,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_construction.rs","byte_start":531899,"byte_end":531902,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_construction.rs","byte_start":531907,"byte_end":531914,"line_start":29,"line_end":29,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Point2, Point3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_construction.rs","byte_start":531919,"byte_end":531956,"line_start":30,"line_end":30,"column_start":5,"column_end":42}},{"value":"/ // This works in any dimension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_construction.rs","byte_start":531961,"byte_end":531996,"line_start":31,"line_end":31,"column_start":5,"column_end":40}},{"value":"/ // The explicit crate::<f32> type annotation may not always be needed,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_construction.rs","byte_start":532001,"byte_end":532075,"line_start":32,"line_end":32,"column_start":5,"column_end":79}},{"value":"/ // depending on the context of type inference.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_construction.rs","byte_start":532080,"byte_end":532130,"line_start":33,"line_end":33,"column_start":5,"column_end":55}},{"value":"/ let pt = Point2::<f32>::origin();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_construction.rs","byte_start":532135,"byte_end":532172,"line_start":34,"line_end":34,"column_start":5,"column_end":42}},{"value":"/ assert!(pt.x == 0.0 && pt.y == 0.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_construction.rs","byte_start":532177,"byte_end":532217,"line_start":35,"line_end":35,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_construction.rs","byte_start":532222,"byte_end":532225,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ let pt = Point3::<f32>::origin();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_construction.rs","byte_start":532230,"byte_end":532267,"line_start":37,"line_end":37,"column_start":5,"column_end":42}},{"value":"/ assert!(pt.x == 0.0 && pt.y == 0.0 && pt.z == 0.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_construction.rs","byte_start":532272,"byte_end":532327,"line_start":38,"line_end":38,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_construction.rs","byte_start":532332,"byte_end":532339,"line_start":39,"line_end":39,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_construction.rs","byte_start":532344,"byte_end":532353,"line_start":40,"line_end":40,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4097},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_construction.rs","byte_start":532888,"byte_end":532898,"line_start":63,"line_end":63,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<Point<N, D>>::from_slice","value":"fn (components: &[N]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new point from a slice.","sig":null,"attributes":[{"value":"/ Creates a new point from a slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_construction.rs","byte_start":532479,"byte_end":532516,"line_start":48,"line_end":48,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_construction.rs","byte_start":532521,"byte_end":532524,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_construction.rs","byte_start":532529,"byte_end":532542,"line_start":50,"line_end":50,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_construction.rs","byte_start":532547,"byte_end":532550,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_construction.rs","byte_start":532555,"byte_end":532562,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Point2, Point3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_construction.rs","byte_start":532567,"byte_end":532604,"line_start":53,"line_end":53,"column_start":5,"column_end":42}},{"value":"/ let data = [ 1.0, 2.0, 3.0 ];","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_construction.rs","byte_start":532609,"byte_end":532642,"line_start":54,"line_end":54,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_construction.rs","byte_start":532647,"byte_end":532650,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ let pt = Point2::from_slice(&data[..2]);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_construction.rs","byte_start":532655,"byte_end":532699,"line_start":56,"line_end":56,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(pt, Point2::new(1.0, 2.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_construction.rs","byte_start":532704,"byte_end":532746,"line_start":57,"line_end":57,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_construction.rs","byte_start":532751,"byte_end":532754,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ let pt = Point3::from_slice(&data);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_construction.rs","byte_start":532759,"byte_end":532798,"line_start":59,"line_end":59,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(pt, Point3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_construction.rs","byte_start":532803,"byte_end":532850,"line_start":60,"line_end":60,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_construction.rs","byte_start":532855,"byte_end":532862,"line_start":61,"line_end":61,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_construction.rs","byte_start":532867,"byte_end":532876,"line_start":62,"line_end":62,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4098},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_construction.rs","byte_start":534255,"byte_end":534271,"line_start":98,"line_end":98,"column_start":12,"column_end":28},"name":"from_homogeneous","qualname":"<Point<N, D>>::from_homogeneous","value":"fn (v: VectorN<N, DimNameSum<D, U1>>) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new point from its homogeneous vector representation.","sig":null,"attributes":[{"value":"/ Creates a new point from its homogeneous vector representation.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_construction.rs","byte_start":532994,"byte_end":533061,"line_start":67,"line_end":67,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_construction.rs","byte_start":533066,"byte_end":533069,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ In practice, this builds a D-dimensional points with the same first D component as `v`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_construction.rs","byte_start":533074,"byte_end":533164,"line_start":69,"line_end":69,"column_start":5,"column_end":95}},{"value":"/ divided by the last component of `v`. Returns `None` if this divisor is zero.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_construction.rs","byte_start":533169,"byte_end":533250,"line_start":70,"line_end":70,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_construction.rs","byte_start":533255,"byte_end":533258,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_construction.rs","byte_start":533263,"byte_end":533276,"line_start":72,"line_end":72,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_construction.rs","byte_start":533281,"byte_end":533284,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_construction.rs","byte_start":533289,"byte_end":533296,"line_start":74,"line_end":74,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Point2, Point3, Vector3, Vector4};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_construction.rs","byte_start":533301,"byte_end":533356,"line_start":75,"line_end":75,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_construction.rs","byte_start":533361,"byte_end":533364,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ let coords = Vector4::new(1.0, 2.0, 3.0, 1.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_construction.rs","byte_start":533369,"byte_end":533419,"line_start":77,"line_end":77,"column_start":5,"column_end":55}},{"value":"/ let pt = Point3::from_homogeneous(coords);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_construction.rs","byte_start":533424,"byte_end":533470,"line_start":78,"line_end":78,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(pt, Some(Point3::new(1.0, 2.0, 3.0)));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_construction.rs","byte_start":533475,"byte_end":533528,"line_start":79,"line_end":79,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_construction.rs","byte_start":533533,"byte_end":533536,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ // All component of the result will be divided by the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_construction.rs","byte_start":533541,"byte_end":533598,"line_start":81,"line_end":81,"column_start":5,"column_end":62}},{"value":"/ // last component of the vector, here 2.0.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_construction.rs","byte_start":533603,"byte_end":533650,"line_start":82,"line_end":82,"column_start":5,"column_end":51}},{"value":"/ let coords = Vector4::new(1.0, 2.0, 3.0, 2.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_construction.rs","byte_start":533655,"byte_end":533705,"line_start":83,"line_end":83,"column_start":5,"column_end":55}},{"value":"/ let pt = Point3::from_homogeneous(coords);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_construction.rs","byte_start":533710,"byte_end":533756,"line_start":84,"line_end":84,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(pt, Some(Point3::new(0.5, 1.0, 1.5)));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_construction.rs","byte_start":533761,"byte_end":533814,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_construction.rs","byte_start":533819,"byte_end":533822,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ // Fails because the last component is zero.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_construction.rs","byte_start":533827,"byte_end":533875,"line_start":87,"line_end":87,"column_start":5,"column_end":53}},{"value":"/ let coords = Vector4::new(1.0, 2.0, 3.0, 0.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_construction.rs","byte_start":533880,"byte_end":533930,"line_start":88,"line_end":88,"column_start":5,"column_end":55}},{"value":"/ let pt = Point3::from_homogeneous(coords);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_construction.rs","byte_start":533935,"byte_end":533981,"line_start":89,"line_end":89,"column_start":5,"column_end":51}},{"value":"/ assert!(pt.is_none());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_construction.rs","byte_start":533986,"byte_end":534012,"line_start":90,"line_end":90,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_construction.rs","byte_start":534017,"byte_end":534020,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ // Works also in other dimensions.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_construction.rs","byte_start":534025,"byte_end":534063,"line_start":92,"line_end":92,"column_start":5,"column_end":43}},{"value":"/ let coords = Vector3::new(1.0, 2.0, 1.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_construction.rs","byte_start":534068,"byte_end":534113,"line_start":93,"line_end":93,"column_start":5,"column_end":50}},{"value":"/ let pt = Point2::from_homogeneous(coords);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_construction.rs","byte_start":534118,"byte_end":534164,"line_start":94,"line_end":94,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(pt, Some(Point2::new(1.0, 2.0)));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_construction.rs","byte_start":534169,"byte_end":534217,"line_start":95,"line_end":95,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_construction.rs","byte_start":534222,"byte_end":534229,"line_start":96,"line_end":96,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_construction.rs","byte_start":534234,"byte_end":534243,"line_start":97,"line_end":97,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":17839},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":555882,"byte_end":555890,"line_start":28,"line_end":28,"column_start":12,"column_end":20},"name":"Rotation","qualname":"::geometry::rotation::Rotation","value":"Rotation {  }","parent":null,"children":[{"krate":0,"index":17842}],"decl_id":null,"docs":" A rotation matrix.\n","sig":null,"attributes":[{"value":"/ A rotation matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":555820,"byte_end":555842,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"repr(C)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":555843,"byte_end":555853,"line_start":26,"line_end":26,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":4334},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":558912,"byte_end":558918,"line_start":137,"line_end":137,"column_start":12,"column_end":18},"name":"matrix","qualname":"<Rotation<N, D>>::matrix","value":"fn (&self) -> &MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" A reference to the underlying matrix representation of this rotation.","sig":null,"attributes":[{"value":"/ A reference to the underlying matrix representation of this rotation.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":558108,"byte_end":558181,"line_start":118,"line_end":118,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":558186,"byte_end":558189,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":558194,"byte_end":558207,"line_start":120,"line_end":120,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":558212,"byte_end":558219,"line_start":121,"line_end":121,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Rotation2, Rotation3, Vector3, Matrix2, Matrix3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":558224,"byte_end":558294,"line_start":122,"line_end":122,"column_start":5,"column_end":75}},{"value":"/ # use std::f32;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":558299,"byte_end":558318,"line_start":123,"line_end":123,"column_start":5,"column_end":24}},{"value":"/ let rot = Rotation3::from_axis_angle(&Vector3::z_axis(), f32::consts::FRAC_PI_6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":558323,"byte_end":558408,"line_start":124,"line_end":124,"column_start":5,"column_end":90}},{"value":"/ let expected = Matrix3::new(0.8660254, -0.5,      0.0,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":558413,"byte_end":558471,"line_start":125,"line_end":125,"column_start":5,"column_end":63}},{"value":"/                             0.5,       0.8660254, 0.0,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":558476,"byte_end":558534,"line_start":126,"line_end":126,"column_start":5,"column_end":63}},{"value":"/                             0.0,       0.0,       1.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":558539,"byte_end":558598,"line_start":127,"line_end":127,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(*rot.matrix(), expected);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":558603,"byte_end":558643,"line_start":128,"line_end":128,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":558648,"byte_end":558651,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":558656,"byte_end":558659,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ let rot = Rotation2::new(f32::consts::FRAC_PI_6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":558664,"byte_end":558717,"line_start":131,"line_end":131,"column_start":5,"column_end":58}},{"value":"/ let expected = Matrix2::new(0.8660254, -0.5,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":558722,"byte_end":558770,"line_start":132,"line_end":132,"column_start":5,"column_end":53}},{"value":"/                             0.5,       0.8660254);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":558775,"byte_end":558829,"line_start":133,"line_end":133,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(*rot.matrix(), expected);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":558834,"byte_end":558874,"line_start":134,"line_end":134,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":558879,"byte_end":558886,"line_start":135,"line_end":135,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":558891,"byte_end":558900,"line_start":136,"line_end":136,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4335},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":559159,"byte_end":559169,"line_start":144,"line_end":144,"column_start":19,"column_end":29},"name":"matrix_mut","qualname":"<Rotation<N, D>>::matrix_mut","value":"fn (&mut self) -> &mut MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" A mutable reference to the underlying matrix representation of this rotation.\n","sig":null,"attributes":[{"value":"/ A mutable reference to the underlying matrix representation of this rotation.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":558978,"byte_end":559059,"line_start":141,"line_end":141,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":559064,"byte_end":559073,"line_start":142,"line_end":142,"column_start":5,"column_end":14}},{"value":"deprecated(note = \"Use `.matrix_mut_unchecked()` instead.\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":559078,"byte_end":559140,"line_start":143,"line_end":143,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":4336},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":559608,"byte_end":559628,"line_start":154,"line_end":154,"column_start":12,"column_end":32},"name":"matrix_mut_unchecked","qualname":"<Rotation<N, D>>::matrix_mut_unchecked","value":"fn (&mut self) -> &mut MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" A mutable reference to the underlying matrix representation of this rotation.","sig":null,"attributes":[{"value":"/ A mutable reference to the underlying matrix representation of this rotation.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":559241,"byte_end":559322,"line_start":148,"line_end":148,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":559327,"byte_end":559330,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ This is suffixed by \"_unchecked\" because this allows the user to replace the matrix by another one that is","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":559335,"byte_end":559445,"line_start":150,"line_end":150,"column_start":5,"column_end":115}},{"value":"/ non-square, non-inversible, or non-orthonormal. If one of those properties is broken,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":559450,"byte_end":559539,"line_start":151,"line_end":151,"column_start":5,"column_end":94}},{"value":"/ subsequent method calls may be UB.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":559544,"byte_end":559582,"line_start":152,"line_end":152,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":559587,"byte_end":559596,"line_start":153,"line_end":153,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4337},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":560517,"byte_end":560527,"line_start":179,"line_end":179,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Rotation<N, D>>::into_inner","value":"fn (self) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the underlying matrix.","sig":null,"attributes":[{"value":"/ Unwraps the underlying matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":559700,"byte_end":559734,"line_start":158,"line_end":158,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":559739,"byte_end":559742,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":559747,"byte_end":559760,"line_start":160,"line_end":160,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":559765,"byte_end":559772,"line_start":161,"line_end":161,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Rotation2, Rotation3, Vector3, Matrix2, Matrix3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":559777,"byte_end":559847,"line_start":162,"line_end":162,"column_start":5,"column_end":75}},{"value":"/ # use std::f32;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":559852,"byte_end":559871,"line_start":163,"line_end":163,"column_start":5,"column_end":24}},{"value":"/ let rot = Rotation3::from_axis_angle(&Vector3::z_axis(), f32::consts::FRAC_PI_6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":559876,"byte_end":559961,"line_start":164,"line_end":164,"column_start":5,"column_end":90}},{"value":"/ let mat = rot.into_inner();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":559966,"byte_end":559997,"line_start":165,"line_end":165,"column_start":5,"column_end":36}},{"value":"/ let expected = Matrix3::new(0.8660254, -0.5,      0.0,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":560002,"byte_end":560060,"line_start":166,"line_end":166,"column_start":5,"column_end":63}},{"value":"/                             0.5,       0.8660254, 0.0,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":560065,"byte_end":560123,"line_start":167,"line_end":167,"column_start":5,"column_end":63}},{"value":"/                             0.0,       0.0,       1.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":560128,"byte_end":560187,"line_start":168,"line_end":168,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(mat, expected);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":560192,"byte_end":560222,"line_start":169,"line_end":169,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":560227,"byte_end":560230,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":560235,"byte_end":560238,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ let rot = Rotation2::new(f32::consts::FRAC_PI_6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":560243,"byte_end":560296,"line_start":172,"line_end":172,"column_start":5,"column_end":58}},{"value":"/ let mat = rot.into_inner();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":560301,"byte_end":560332,"line_start":173,"line_end":173,"column_start":5,"column_end":36}},{"value":"/ let expected = Matrix2::new(0.8660254, -0.5,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":560337,"byte_end":560385,"line_start":174,"line_end":174,"column_start":5,"column_end":53}},{"value":"/                             0.5,       0.8660254);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":560390,"byte_end":560444,"line_start":175,"line_end":175,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(mat, expected);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":560449,"byte_end":560479,"line_start":176,"line_end":176,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":560484,"byte_end":560491,"line_start":177,"line_end":177,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":560496,"byte_end":560505,"line_start":178,"line_end":178,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4338},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":560756,"byte_end":560762,"line_start":187,"line_end":187,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<Rotation<N, D>>::unwrap","value":"fn (self) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the underlying matrix.\n Deprecated: Use [Rotation::into_inner] instead.\n","sig":null,"attributes":[{"value":"/ Unwraps the underlying matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":560584,"byte_end":560618,"line_start":183,"line_end":183,"column_start":5,"column_end":39}},{"value":"/ Deprecated: Use [Rotation::into_inner] instead.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":560623,"byte_end":560674,"line_start":184,"line_end":184,"column_start":5,"column_end":56}},{"value":"deprecated(note = \"use `.into_inner()` instead\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":560679,"byte_end":560730,"line_start":185,"line_end":185,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":560735,"byte_end":560744,"line_start":186,"line_end":186,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4339},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":561857,"byte_end":561871,"line_start":214,"line_end":214,"column_start":12,"column_end":26},"name":"to_homogeneous","qualname":"<Rotation<N, D>>::to_homogeneous","value":"fn (&self) -> MatrixN<N, DimNameSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Converts this rotation into its equivalent homogeneous transformation matrix.","sig":null,"attributes":[{"value":"/ Converts this rotation into its equivalent homogeneous transformation matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":560819,"byte_end":560900,"line_start":191,"line_end":191,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":560905,"byte_end":560908,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ This is the same as `self.into()`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":560913,"byte_end":560951,"line_start":193,"line_end":193,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":560956,"byte_end":560959,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":560964,"byte_end":560977,"line_start":195,"line_end":195,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":560982,"byte_end":560989,"line_start":196,"line_end":196,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Rotation2, Rotation3, Vector3, Matrix3, Matrix4};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":560994,"byte_end":561064,"line_start":197,"line_end":197,"column_start":5,"column_end":75}},{"value":"/ # use std::f32;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":561069,"byte_end":561088,"line_start":198,"line_end":198,"column_start":5,"column_end":24}},{"value":"/ let rot = Rotation3::from_axis_angle(&Vector3::z_axis(), f32::consts::FRAC_PI_6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":561093,"byte_end":561178,"line_start":199,"line_end":199,"column_start":5,"column_end":90}},{"value":"/ let expected = Matrix4::new(0.8660254, -0.5,      0.0, 0.0,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":561183,"byte_end":561246,"line_start":200,"line_end":200,"column_start":5,"column_end":68}},{"value":"/                             0.5,       0.8660254, 0.0, 0.0,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":561251,"byte_end":561314,"line_start":201,"line_end":201,"column_start":5,"column_end":68}},{"value":"/                             0.0,       0.0,       1.0, 0.0,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":561319,"byte_end":561382,"line_start":202,"line_end":202,"column_start":5,"column_end":68}},{"value":"/                             0.0,       0.0,       0.0, 1.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":561387,"byte_end":561451,"line_start":203,"line_end":203,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(rot.to_homogeneous(), expected);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":561456,"byte_end":561503,"line_start":204,"line_end":204,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":561508,"byte_end":561511,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":561516,"byte_end":561519,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ let rot = Rotation2::new(f32::consts::FRAC_PI_6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":561524,"byte_end":561577,"line_start":207,"line_end":207,"column_start":5,"column_end":58}},{"value":"/ let expected = Matrix3::new(0.8660254, -0.5,      0.0,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":561582,"byte_end":561640,"line_start":208,"line_end":208,"column_start":5,"column_end":63}},{"value":"/                             0.5,       0.8660254, 0.0,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":561645,"byte_end":561703,"line_start":209,"line_end":209,"column_start":5,"column_end":63}},{"value":"/                             0.0,       0.0,       1.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":561708,"byte_end":561767,"line_start":210,"line_end":210,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(rot.to_homogeneous(), expected);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":561772,"byte_end":561819,"line_start":211,"line_end":211,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":561824,"byte_end":561831,"line_start":212,"line_end":212,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":561836,"byte_end":561845,"line_start":213,"line_end":213,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4340},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":563246,"byte_end":563267,"line_start":252,"line_end":252,"column_start":12,"column_end":33},"name":"from_matrix_unchecked","qualname":"<Rotation<N, D>>::from_matrix_unchecked","value":"fn (matrix: MatrixN<N, D>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new rotation from the given square matrix.","sig":null,"attributes":[{"value":"/ Creates a new rotation from the given square matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":562444,"byte_end":562500,"line_start":229,"line_end":229,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":562505,"byte_end":562508,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ The matrix squareness is checked but not its orthonormality.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":562513,"byte_end":562577,"line_start":231,"line_end":231,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":562582,"byte_end":562585,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":562590,"byte_end":562603,"line_start":233,"line_end":233,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":562608,"byte_end":562615,"line_start":234,"line_end":234,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Rotation2, Rotation3, Matrix2, Matrix3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":562620,"byte_end":562681,"line_start":235,"line_end":235,"column_start":5,"column_end":66}},{"value":"/ # use std::f32;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":562686,"byte_end":562705,"line_start":236,"line_end":236,"column_start":5,"column_end":24}},{"value":"/ let mat = Matrix3::new(0.8660254, -0.5,      0.0,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":562710,"byte_end":562763,"line_start":237,"line_end":237,"column_start":5,"column_end":58}},{"value":"/                        0.5,       0.8660254, 0.0,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":562768,"byte_end":562821,"line_start":238,"line_end":238,"column_start":5,"column_end":58}},{"value":"/                        0.0,       0.0,       1.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":562826,"byte_end":562880,"line_start":239,"line_end":239,"column_start":5,"column_end":59}},{"value":"/ let rot = Rotation3::from_matrix_unchecked(mat);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":562885,"byte_end":562937,"line_start":240,"line_end":240,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":562942,"byte_end":562945,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(*rot.matrix(), mat);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":562950,"byte_end":562985,"line_start":242,"line_end":242,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":562990,"byte_end":562993,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":562998,"byte_end":563001,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ let mat = Matrix2::new(0.8660254, -0.5,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":563006,"byte_end":563049,"line_start":245,"line_end":245,"column_start":5,"column_end":48}},{"value":"/                        0.5,       0.8660254);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":563054,"byte_end":563103,"line_start":246,"line_end":246,"column_start":5,"column_end":54}},{"value":"/ let rot = Rotation2::from_matrix_unchecked(mat);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":563108,"byte_end":563160,"line_start":247,"line_end":247,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":563165,"byte_end":563168,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(*rot.matrix(), mat);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":563173,"byte_end":563208,"line_start":249,"line_end":249,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":563213,"byte_end":563220,"line_start":250,"line_end":250,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":563225,"byte_end":563234,"line_start":251,"line_end":251,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4341},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":564347,"byte_end":564356,"line_start":281,"line_end":281,"column_start":12,"column_end":21},"name":"transpose","qualname":"<Rotation<N, D>>::transpose","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Transposes `self`.","sig":null,"attributes":[{"value":"/ Transposes `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":563473,"byte_end":563495,"line_start":261,"line_end":261,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":563500,"byte_end":563503,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ Same as `.inverse()` because the inverse of a rotation matrix is its transform.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":563508,"byte_end":563591,"line_start":263,"line_end":263,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":563596,"byte_end":563599,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":563604,"byte_end":563617,"line_start":265,"line_end":265,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":563622,"byte_end":563629,"line_start":266,"line_end":266,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":563634,"byte_end":563673,"line_start":267,"line_end":267,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Rotation2, Rotation3, Vector3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":563678,"byte_end":563730,"line_start":268,"line_end":268,"column_start":5,"column_end":57}},{"value":"/ let rot = Rotation3::new(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":563735,"byte_end":563793,"line_start":269,"line_end":269,"column_start":5,"column_end":63}},{"value":"/ let tr_rot = rot.transpose();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":563798,"byte_end":563831,"line_start":270,"line_end":270,"column_start":5,"column_end":38}},{"value":"/ assert_relative_eq!(rot * tr_rot, Rotation3::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":563836,"byte_end":563915,"line_start":271,"line_end":271,"column_start":5,"column_end":84}},{"value":"/ assert_relative_eq!(tr_rot * rot, Rotation3::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":563920,"byte_end":563999,"line_start":272,"line_end":272,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":564004,"byte_end":564007,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ let rot = Rotation2::new(1.2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":564012,"byte_end":564046,"line_start":274,"line_end":274,"column_start":5,"column_end":39}},{"value":"/ let tr_rot = rot.transpose();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":564051,"byte_end":564084,"line_start":275,"line_end":275,"column_start":5,"column_end":38}},{"value":"/ assert_relative_eq!(rot * tr_rot, Rotation2::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":564089,"byte_end":564168,"line_start":276,"line_end":276,"column_start":5,"column_end":84}},{"value":"/ assert_relative_eq!(tr_rot * rot, Rotation2::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":564173,"byte_end":564252,"line_start":277,"line_end":277,"column_start":5,"column_end":84}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":564257,"byte_end":564264,"line_start":278,"line_end":278,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":564269,"byte_end":564278,"line_start":279,"line_end":279,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use transpose_mut()?\"","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":564283,"byte_end":564335,"line_start":280,"line_end":280,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":4342},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":565295,"byte_end":565302,"line_start":305,"line_end":305,"column_start":12,"column_end":19},"name":"inverse","qualname":"<Rotation<N, D>>::inverse","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Inverts `self`.","sig":null,"attributes":[{"value":"/ Inverts `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":564446,"byte_end":564465,"line_start":285,"line_end":285,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":564470,"byte_end":564473,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ Same as `.transpose()` because the inverse of a rotation matrix is its transform.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":564478,"byte_end":564563,"line_start":287,"line_end":287,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":564568,"byte_end":564571,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":564576,"byte_end":564589,"line_start":289,"line_end":289,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":564594,"byte_end":564601,"line_start":290,"line_end":290,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":564606,"byte_end":564645,"line_start":291,"line_end":291,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Rotation2, Rotation3, Vector3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":564650,"byte_end":564702,"line_start":292,"line_end":292,"column_start":5,"column_end":57}},{"value":"/ let rot = Rotation3::new(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":564707,"byte_end":564765,"line_start":293,"line_end":293,"column_start":5,"column_end":63}},{"value":"/ let inv = rot.inverse();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":564770,"byte_end":564798,"line_start":294,"line_end":294,"column_start":5,"column_end":33}},{"value":"/ assert_relative_eq!(rot * inv, Rotation3::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":564803,"byte_end":564879,"line_start":295,"line_end":295,"column_start":5,"column_end":81}},{"value":"/ assert_relative_eq!(inv * rot, Rotation3::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":564884,"byte_end":564960,"line_start":296,"line_end":296,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":564965,"byte_end":564968,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ let rot = Rotation2::new(1.2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":564973,"byte_end":565007,"line_start":298,"line_end":298,"column_start":5,"column_end":39}},{"value":"/ let inv = rot.inverse();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":565012,"byte_end":565040,"line_start":299,"line_end":299,"column_start":5,"column_end":33}},{"value":"/ assert_relative_eq!(rot * inv, Rotation2::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":565045,"byte_end":565121,"line_start":300,"line_end":300,"column_start":5,"column_end":81}},{"value":"/ assert_relative_eq!(inv * rot, Rotation2::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":565126,"byte_end":565202,"line_start":301,"line_end":301,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":565207,"byte_end":565214,"line_start":302,"line_end":302,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":565219,"byte_end":565228,"line_start":303,"line_end":303,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use inverse_mut()?\"","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":565233,"byte_end":565283,"line_start":304,"line_end":304,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":4343},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":566306,"byte_end":566319,"line_start":332,"line_end":332,"column_start":12,"column_end":25},"name":"transpose_mut","qualname":"<Rotation<N, D>>::transpose_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Transposes `self` in-place.","sig":null,"attributes":[{"value":"/ Transposes `self` in-place.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":565356,"byte_end":565387,"line_start":309,"line_end":309,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":565392,"byte_end":565395,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ Same as `.inverse_mut()` because the inverse of a rotation matrix is its transform.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":565400,"byte_end":565487,"line_start":311,"line_end":311,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":565492,"byte_end":565495,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":565500,"byte_end":565513,"line_start":313,"line_end":313,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":565518,"byte_end":565525,"line_start":314,"line_end":314,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":565530,"byte_end":565569,"line_start":315,"line_end":315,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Rotation2, Rotation3, Vector3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":565574,"byte_end":565626,"line_start":316,"line_end":316,"column_start":5,"column_end":57}},{"value":"/ let rot = Rotation3::new(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":565631,"byte_end":565689,"line_start":317,"line_end":317,"column_start":5,"column_end":63}},{"value":"/ let mut tr_rot = Rotation3::new(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":565694,"byte_end":565759,"line_start":318,"line_end":318,"column_start":5,"column_end":70}},{"value":"/ tr_rot.transpose_mut();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":565764,"byte_end":565791,"line_start":319,"line_end":319,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":565796,"byte_end":565799,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot * tr_rot, Rotation3::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":565804,"byte_end":565883,"line_start":321,"line_end":321,"column_start":5,"column_end":84}},{"value":"/ assert_relative_eq!(tr_rot * rot, Rotation3::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":565888,"byte_end":565967,"line_start":322,"line_end":322,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":565972,"byte_end":565975,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ let rot = Rotation2::new(1.2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":565980,"byte_end":566014,"line_start":324,"line_end":324,"column_start":5,"column_end":39}},{"value":"/ let mut tr_rot = Rotation2::new(1.2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":566019,"byte_end":566060,"line_start":325,"line_end":325,"column_start":5,"column_end":46}},{"value":"/ tr_rot.transpose_mut();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":566065,"byte_end":566092,"line_start":326,"line_end":326,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":566097,"byte_end":566100,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot * tr_rot, Rotation2::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":566105,"byte_end":566184,"line_start":328,"line_end":328,"column_start":5,"column_end":84}},{"value":"/ assert_relative_eq!(tr_rot * rot, Rotation2::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":566189,"byte_end":566268,"line_start":329,"line_end":329,"column_start":5,"column_end":84}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":566273,"byte_end":566280,"line_start":330,"line_end":330,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":566285,"byte_end":566294,"line_start":331,"line_end":331,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4344},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":567301,"byte_end":567312,"line_start":359,"line_end":359,"column_start":12,"column_end":23},"name":"inverse_mut","qualname":"<Rotation<N, D>>::inverse_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Inverts `self` in-place.","sig":null,"attributes":[{"value":"/ Inverts `self` in-place.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":566380,"byte_end":566408,"line_start":336,"line_end":336,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":566413,"byte_end":566416,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ Same as `.transpose_mut()` because the inverse of a rotation matrix is its transform.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":566421,"byte_end":566510,"line_start":338,"line_end":338,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":566515,"byte_end":566518,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":566523,"byte_end":566536,"line_start":340,"line_end":340,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":566541,"byte_end":566548,"line_start":341,"line_end":341,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":566553,"byte_end":566592,"line_start":342,"line_end":342,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Rotation2, Rotation3, Vector3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":566597,"byte_end":566649,"line_start":343,"line_end":343,"column_start":5,"column_end":57}},{"value":"/ let rot = Rotation3::new(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":566654,"byte_end":566712,"line_start":344,"line_end":344,"column_start":5,"column_end":63}},{"value":"/ let mut inv = Rotation3::new(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":566717,"byte_end":566779,"line_start":345,"line_end":345,"column_start":5,"column_end":67}},{"value":"/ inv.inverse_mut();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":566784,"byte_end":566806,"line_start":346,"line_end":346,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":566811,"byte_end":566814,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot * inv, Rotation3::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":566819,"byte_end":566895,"line_start":348,"line_end":348,"column_start":5,"column_end":81}},{"value":"/ assert_relative_eq!(inv * rot, Rotation3::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":566900,"byte_end":566976,"line_start":349,"line_end":349,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":566981,"byte_end":566984,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ let rot = Rotation2::new(1.2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":566989,"byte_end":567023,"line_start":351,"line_end":351,"column_start":5,"column_end":39}},{"value":"/ let mut inv = Rotation2::new(1.2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":567028,"byte_end":567066,"line_start":352,"line_end":352,"column_start":5,"column_end":43}},{"value":"/ inv.inverse_mut();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":567071,"byte_end":567093,"line_start":353,"line_end":353,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":567098,"byte_end":567101,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot * inv, Rotation2::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":567106,"byte_end":567182,"line_start":355,"line_end":355,"column_start":5,"column_end":81}},{"value":"/ assert_relative_eq!(inv * rot, Rotation2::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":567187,"byte_end":567263,"line_start":356,"line_end":356,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":567268,"byte_end":567275,"line_start":357,"line_end":357,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":567280,"byte_end":567289,"line_start":358,"line_end":358,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4348},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":568095,"byte_end":568110,"line_start":384,"line_end":384,"column_start":12,"column_end":27},"name":"transform_point","qualname":"<Rotation<N, D>>::transform_point","value":"fn (&self, pt: &Point<N, D>) -> Point<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Rotate the given point.","sig":null,"attributes":[{"value":"/ Rotate the given point.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":567517,"byte_end":567544,"line_start":369,"line_end":369,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":567549,"byte_end":567552,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * pt`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":567557,"byte_end":567612,"line_start":371,"line_end":371,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":567617,"byte_end":567620,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":567625,"byte_end":567638,"line_start":373,"line_end":373,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":567643,"byte_end":567650,"line_start":374,"line_end":374,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":567655,"byte_end":567694,"line_start":375,"line_end":375,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":567699,"byte_end":567718,"line_start":376,"line_end":376,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Point3, Rotation2, Rotation3, UnitQuaternion, Vector3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":567723,"byte_end":567799,"line_start":377,"line_end":377,"column_start":5,"column_end":81}},{"value":"/ let rot = Rotation3::new(Vector3::y() * f32::consts::FRAC_PI_2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":567804,"byte_end":567872,"line_start":378,"line_end":378,"column_start":5,"column_end":73}},{"value":"/ let transformed_point = rot.transform_point(&Point3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":567877,"byte_end":567954,"line_start":379,"line_end":379,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":567959,"byte_end":567962,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(transformed_point, Point3::new(3.0, 2.0, -1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":567967,"byte_end":568057,"line_start":381,"line_end":381,"column_start":5,"column_end":95}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":568062,"byte_end":568069,"line_start":382,"line_end":382,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":568074,"byte_end":568083,"line_start":383,"line_end":383,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4349},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":568757,"byte_end":568773,"line_start":403,"line_end":403,"column_start":12,"column_end":28},"name":"transform_vector","qualname":"<Rotation<N, D>>::transform_vector","value":"fn (&self, v: &VectorN<N, D>) -> VectorN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Rotate the given vector.","sig":null,"attributes":[{"value":"/ Rotate the given vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":568182,"byte_end":568210,"line_start":388,"line_end":388,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":568215,"byte_end":568218,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * v`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":568223,"byte_end":568277,"line_start":390,"line_end":390,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":568282,"byte_end":568285,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":568290,"byte_end":568303,"line_start":392,"line_end":392,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":568308,"byte_end":568315,"line_start":393,"line_end":393,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":568320,"byte_end":568359,"line_start":394,"line_end":394,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":568364,"byte_end":568383,"line_start":395,"line_end":395,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Rotation2, Rotation3, UnitQuaternion, Vector3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":568388,"byte_end":568456,"line_start":396,"line_end":396,"column_start":5,"column_end":73}},{"value":"/ let rot = Rotation3::new(Vector3::y() * f32::consts::FRAC_PI_2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":568461,"byte_end":568529,"line_start":397,"line_end":397,"column_start":5,"column_end":73}},{"value":"/ let transformed_vector = rot.transform_vector(&Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":568534,"byte_end":568614,"line_start":398,"line_end":398,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":568619,"byte_end":568622,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(transformed_vector, Vector3::new(3.0, 2.0, -1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":568627,"byte_end":568719,"line_start":400,"line_end":400,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":568724,"byte_end":568731,"line_start":401,"line_end":401,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":568736,"byte_end":568745,"line_start":402,"line_end":402,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4350},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":569500,"byte_end":569523,"line_start":422,"line_end":422,"column_start":12,"column_end":35},"name":"inverse_transform_point","qualname":"<Rotation<N, D>>::inverse_transform_point","value":"fn (&self, pt: &Point<N, D>) -> Point<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Rotate the given point by the inverse of this rotation. This may be\n cheaper than inverting the rotation and then transforming the given\n point.","sig":null,"attributes":[{"value":"/ Rotate the given point by the inverse of this rotation. This may be","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":568847,"byte_end":568918,"line_start":407,"line_end":407,"column_start":5,"column_end":76}},{"value":"/ cheaper than inverting the rotation and then transforming the given","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":568923,"byte_end":568994,"line_start":408,"line_end":408,"column_start":5,"column_end":76}},{"value":"/ point.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":568999,"byte_end":569009,"line_start":409,"line_end":409,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":569014,"byte_end":569017,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":569022,"byte_end":569035,"line_start":411,"line_end":411,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":569040,"byte_end":569047,"line_start":412,"line_end":412,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":569052,"byte_end":569091,"line_start":413,"line_end":413,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":569096,"byte_end":569115,"line_start":414,"line_end":414,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Point3, Rotation2, Rotation3, UnitQuaternion, Vector3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":569120,"byte_end":569196,"line_start":415,"line_end":415,"column_start":5,"column_end":81}},{"value":"/ let rot = Rotation3::new(Vector3::y() * f32::consts::FRAC_PI_2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":569201,"byte_end":569269,"line_start":416,"line_end":416,"column_start":5,"column_end":73}},{"value":"/ let transformed_point = rot.inverse_transform_point(&Point3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":569274,"byte_end":569359,"line_start":417,"line_end":417,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":569364,"byte_end":569367,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(transformed_point, Point3::new(-3.0, 2.0, 1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":569372,"byte_end":569462,"line_start":419,"line_end":419,"column_start":5,"column_end":95}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":569467,"byte_end":569474,"line_start":420,"line_end":420,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":569479,"byte_end":569488,"line_start":421,"line_end":421,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4351},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":570292,"byte_end":570316,"line_start":441,"line_end":441,"column_start":12,"column_end":36},"name":"inverse_transform_vector","qualname":"<Rotation<N, D>>::inverse_transform_vector","value":"fn (&self, v: &VectorN<N, D>) -> VectorN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Rotate the given vector by the inverse of this rotation. This may be\n cheaper than inverting the rotation and then transforming the given\n vector.","sig":null,"attributes":[{"value":"/ Rotate the given vector by the inverse of this rotation. This may be","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":569640,"byte_end":569712,"line_start":426,"line_end":426,"column_start":5,"column_end":77}},{"value":"/ cheaper than inverting the rotation and then transforming the given","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":569717,"byte_end":569788,"line_start":427,"line_end":427,"column_start":5,"column_end":76}},{"value":"/ vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":569793,"byte_end":569804,"line_start":428,"line_end":428,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":569809,"byte_end":569812,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":569817,"byte_end":569830,"line_start":430,"line_end":430,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":569835,"byte_end":569842,"line_start":431,"line_end":431,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":569847,"byte_end":569886,"line_start":432,"line_end":432,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":569891,"byte_end":569910,"line_start":433,"line_end":433,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Rotation2, Rotation3, UnitQuaternion, Vector3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":569915,"byte_end":569983,"line_start":434,"line_end":434,"column_start":5,"column_end":73}},{"value":"/ let rot = Rotation3::new(Vector3::y() * f32::consts::FRAC_PI_2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":569988,"byte_end":570056,"line_start":435,"line_end":435,"column_start":5,"column_end":73}},{"value":"/ let transformed_vector = rot.inverse_transform_vector(&Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":570061,"byte_end":570149,"line_start":436,"line_end":436,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":570154,"byte_end":570157,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(transformed_vector, Vector3::new(-3.0, 2.0, 1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":570162,"byte_end":570254,"line_start":438,"line_end":438,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":570259,"byte_end":570266,"line_start":439,"line_end":439,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":570271,"byte_end":570280,"line_start":440,"line_end":440,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":4384},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_alias.rs","byte_start":573121,"byte_end":573130,"line_start":6,"line_end":6,"column_start":10,"column_end":19},"name":"Rotation2","qualname":"::geometry::rotation_alias::Rotation2","value":"Rotation<N, U2>","parent":null,"children":[],"decl_id":null,"docs":" A 2-dimensional rotation matrix.\n","sig":null,"attributes":[{"value":"/ A 2-dimensional rotation matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_alias.rs","byte_start":573075,"byte_end":573111,"line_start":5,"line_end":5,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":4386},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_alias.rs","byte_start":573200,"byte_end":573209,"line_start":9,"line_end":9,"column_start":10,"column_end":19},"name":"Rotation3","qualname":"::geometry::rotation_alias::Rotation3","value":"Rotation<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" A 3-dimensional rotation matrix.\n","sig":null,"attributes":[{"value":"/ A 3-dimensional rotation matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_alias.rs","byte_start":573154,"byte_end":573190,"line_start":8,"line_end":8,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":4405},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_construction.rs","byte_start":573945,"byte_end":573953,"line_start":28,"line_end":28,"column_start":12,"column_end":20},"name":"identity","qualname":"<Rotation<N, D>>::identity","value":"fn () -> Rotation<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new square identity rotation of the given `dimension`.","sig":null,"attributes":[{"value":"/ Creates a new square identity rotation of the given `dimension`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_construction.rs","byte_start":573580,"byte_end":573648,"line_start":16,"line_end":16,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_construction.rs","byte_start":573653,"byte_end":573656,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_construction.rs","byte_start":573661,"byte_end":573674,"line_start":18,"line_end":18,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_construction.rs","byte_start":573679,"byte_end":573686,"line_start":19,"line_end":19,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_construction.rs","byte_start":573691,"byte_end":573722,"line_start":20,"line_end":20,"column_start":5,"column_end":36}},{"value":"/ let rot1 = Quaternion::identity();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_construction.rs","byte_start":573727,"byte_end":573765,"line_start":21,"line_end":21,"column_start":5,"column_end":43}},{"value":"/ let rot2 = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_construction.rs","byte_start":573770,"byte_end":573821,"line_start":22,"line_end":22,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_construction.rs","byte_start":573826,"byte_end":573829,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(rot1 * rot2, rot2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_construction.rs","byte_start":573834,"byte_end":573868,"line_start":24,"line_end":24,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(rot2 * rot1, rot2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_construction.rs","byte_start":573873,"byte_end":573907,"line_start":25,"line_end":25,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_construction.rs","byte_start":573912,"byte_end":573919,"line_start":26,"line_end":26,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_construction.rs","byte_start":573924,"byte_end":573933,"line_start":27,"line_end":27,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4630},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":592952,"byte_end":592955,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"new","qualname":"<Rotation2<N>>::new","value":"fn (angle: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a 2 dimensional rotation matrix from an angle in radian.","sig":null,"attributes":[{"value":"/ Builds a 2 dimensional rotation matrix from an angle in radian.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":592554,"byte_end":592621,"line_start":25,"line_end":25,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":592626,"byte_end":592629,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":592634,"byte_end":592647,"line_start":27,"line_end":27,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":592652,"byte_end":592655,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":592660,"byte_end":592667,"line_start":29,"line_end":29,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":592672,"byte_end":592711,"line_start":30,"line_end":30,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":592716,"byte_end":592735,"line_start":31,"line_end":31,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Rotation2, Point2};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":592740,"byte_end":592780,"line_start":32,"line_end":32,"column_start":5,"column_end":45}},{"value":"/ let rot = Rotation2::new(f32::consts::FRAC_PI_2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":592785,"byte_end":592838,"line_start":33,"line_end":33,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":592843,"byte_end":592846,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot * Point2::new(3.0, 4.0), Point2::new(-4.0, 3.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":592851,"byte_end":592928,"line_start":35,"line_end":35,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":592933,"byte_end":592940,"line_start":36,"line_end":36,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4631},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":593382,"byte_end":593398,"line_start":48,"line_end":48,"column_start":12,"column_end":28},"name":"from_scaled_axis","qualname":"<Rotation2<N>>::from_scaled_axis","value":"fn <SB> (axisangle: Vector<N, U1, SB>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a 2 dimensional rotation matrix from an angle in radian wrapped in a 1-dimensional vector.","sig":null,"attributes":[{"value":"/ Builds a 2 dimensional rotation matrix from an angle in radian wrapped in a 1-dimensional vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":593105,"byte_end":593206,"line_start":42,"line_end":42,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":593211,"byte_end":593214,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":593219,"byte_end":593222,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ This is generally used in the context of generic programming. Using","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":593227,"byte_end":593298,"line_start":45,"line_end":45,"column_start":5,"column_end":76}},{"value":"/ the `::new(angle)` method instead is more common.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":593303,"byte_end":593356,"line_start":46,"line_end":46,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":593361,"byte_end":593370,"line_start":47,"line_end":47,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4633},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":593853,"byte_end":593864,"line_start":57,"line_end":57,"column_start":12,"column_end":23},"name":"from_matrix","qualname":"<Rotation2<N>>::from_matrix","value":"fn (m: &Matrix2<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a rotation matrix by extracting the rotation part of the given transformation `m`.","sig":null,"attributes":[{"value":"/ Builds a rotation matrix by extracting the rotation part of the given transformation `m`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":593502,"byte_end":593595,"line_start":52,"line_end":52,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":593600,"byte_end":593603,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ This is an iterative method. See `.from_matrix_eps` to provide mover","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":593608,"byte_end":593680,"line_start":54,"line_end":54,"column_start":5,"column_end":77}},{"value":"/ convergence parameters and starting solution.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":593685,"byte_end":593734,"line_start":55,"line_end":55,"column_start":5,"column_end":54}},{"value":"/ This implements \"A Robust Method to Extract the Rotational Part of Deformations\" by Müller et al.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":593739,"byte_end":593841,"line_start":56,"line_end":56,"column_start":5,"column_end":106}}]},{"kind":"Method","id":{"krate":0,"index":4634},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":594814,"byte_end":594829,"line_start":76,"line_end":76,"column_start":12,"column_end":27},"name":"from_matrix_eps","qualname":"<Rotation2<N>>::from_matrix_eps","value":"fn (m: &Matrix2<N>, eps: N, mut max_iter: usize, guess: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a rotation matrix by extracting the rotation part of the given transformation `m`.","sig":null,"attributes":[{"value":"/ Builds a rotation matrix by extracting the rotation part of the given transformation `m`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":594014,"byte_end":594107,"line_start":64,"line_end":64,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":594112,"byte_end":594115,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ This implements \"A Robust Method to Extract the Rotational Part of Deformations\" by Müller et al.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":594120,"byte_end":594222,"line_start":66,"line_end":66,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":594227,"byte_end":594230,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":594235,"byte_end":594251,"line_start":68,"line_end":68,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":594256,"byte_end":594259,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ * `m`: the matrix from which the rotational part is to be extracted.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":594264,"byte_end":594336,"line_start":70,"line_end":70,"column_start":5,"column_end":77}},{"value":"/ * `eps`: the angular errors tolerated between the current rotation and the optimal one.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":594341,"byte_end":594432,"line_start":71,"line_end":71,"column_start":5,"column_end":96}},{"value":"/ * `max_iter`: the maximum number of iterations. Loops indefinitely until convergence if set to `0`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":594437,"byte_end":594540,"line_start":72,"line_end":72,"column_start":5,"column_end":108}},{"value":"/ * `guess`: an estimate of the solution. Convergence will be significantly faster if an initial solution close","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":594545,"byte_end":594658,"line_start":73,"line_end":73,"column_start":5,"column_end":118}},{"value":"/           to the actual solution is provided. Can be set to `Rotation2::identity()` if no other","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":594663,"byte_end":594762,"line_start":74,"line_end":74,"column_start":5,"column_end":104}},{"value":"/           guesses come to mind.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":594767,"byte_end":594802,"line_start":75,"line_end":75,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":4635},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":596118,"byte_end":596134,"line_start":116,"line_end":116,"column_start":12,"column_end":28},"name":"rotation_between","qualname":"<Rotation2<N>>::rotation_between","value":"fn <SB, SC> (a: &Vector<N, U2, SB>, b: &Vector<N, U2, SC>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The rotation matrix required to align `a` and `b` but with its angle.","sig":null,"attributes":[{"value":"/ The rotation matrix required to align `a` and `b` but with its angle.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":595544,"byte_end":595617,"line_start":101,"line_end":101,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":595622,"byte_end":595625,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ This is the rotation `R` such that `(R * a).angle(b) == 0 && (R * a).dot(b).is_positive()`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":595630,"byte_end":595725,"line_start":103,"line_end":103,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":595730,"byte_end":595733,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":595738,"byte_end":595751,"line_start":105,"line_end":105,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":595756,"byte_end":595763,"line_start":106,"line_end":106,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":595768,"byte_end":595807,"line_start":107,"line_end":107,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Vector2, Rotation2};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":595812,"byte_end":595853,"line_start":108,"line_end":108,"column_start":5,"column_end":46}},{"value":"/ let a = Vector2::new(1.0, 2.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":595858,"byte_end":595893,"line_start":109,"line_end":109,"column_start":5,"column_end":40}},{"value":"/ let b = Vector2::new(2.0, 1.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":595898,"byte_end":595933,"line_start":110,"line_end":110,"column_start":5,"column_end":40}},{"value":"/ let rot = Rotation2::rotation_between(&a, &b);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":595938,"byte_end":595988,"line_start":111,"line_end":111,"column_start":5,"column_end":55}},{"value":"/ assert_relative_eq!(rot * a, b);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":595993,"byte_end":596029,"line_start":112,"line_end":112,"column_start":5,"column_end":41}},{"value":"/ assert_relative_eq!(rot.inverse() * b, a);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":596034,"byte_end":596080,"line_start":113,"line_end":113,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":596085,"byte_end":596092,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":596097,"byte_end":596106,"line_start":115,"line_end":115,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4638},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":597052,"byte_end":597075,"line_start":140,"line_end":140,"column_start":12,"column_end":35},"name":"scaled_rotation_between","qualname":"<Rotation2<N>>::scaled_rotation_between","value":"fn <SB, SC> (a: &Vector<N, U2, SB>, b: &Vector<N, U2, SC>, s: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The smallest rotation needed to make `a` and `b` collinear and point toward the same\n direction, raised to the power `s`.","sig":null,"attributes":[{"value":"/ The smallest rotation needed to make `a` and `b` collinear and point toward the same","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":596383,"byte_end":596471,"line_start":125,"line_end":125,"column_start":5,"column_end":93}},{"value":"/ direction, raised to the power `s`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":596476,"byte_end":596515,"line_start":126,"line_end":126,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":596520,"byte_end":596523,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":596528,"byte_end":596541,"line_start":128,"line_end":128,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":596546,"byte_end":596553,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":596558,"byte_end":596597,"line_start":130,"line_end":130,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Vector2, Rotation2};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":596602,"byte_end":596643,"line_start":131,"line_end":131,"column_start":5,"column_end":46}},{"value":"/ let a = Vector2::new(1.0, 2.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":596648,"byte_end":596683,"line_start":132,"line_end":132,"column_start":5,"column_end":40}},{"value":"/ let b = Vector2::new(2.0, 1.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":596688,"byte_end":596723,"line_start":133,"line_end":133,"column_start":5,"column_end":40}},{"value":"/ let rot2 = Rotation2::scaled_rotation_between(&a, &b, 0.2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":596728,"byte_end":596791,"line_start":134,"line_end":134,"column_start":5,"column_end":68}},{"value":"/ let rot5 = Rotation2::scaled_rotation_between(&a, &b, 0.5);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":596796,"byte_end":596859,"line_start":135,"line_end":135,"column_start":5,"column_end":68}},{"value":"/ assert_relative_eq!(rot2 * rot2 * rot2 * rot2 * rot2 * a, b, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":596864,"byte_end":596947,"line_start":136,"line_end":136,"column_start":5,"column_end":88}},{"value":"/ assert_relative_eq!(rot5 * rot5 * a, b, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":596952,"byte_end":597014,"line_start":137,"line_end":137,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":597019,"byte_end":597026,"line_start":138,"line_end":138,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":597031,"byte_end":597040,"line_start":139,"line_end":139,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4641},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":597637,"byte_end":597642,"line_start":163,"line_end":163,"column_start":12,"column_end":17},"name":"angle","qualname":"<Rotation2<N>>::angle","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The rotation angle.","sig":null,"attributes":[{"value":"/ The rotation angle.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":597371,"byte_end":597394,"line_start":153,"line_end":153,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":597399,"byte_end":597402,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":597407,"byte_end":597420,"line_start":155,"line_end":155,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":597425,"byte_end":597432,"line_start":156,"line_end":156,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":597437,"byte_end":597476,"line_start":157,"line_end":157,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Rotation2;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":597481,"byte_end":597511,"line_start":158,"line_end":158,"column_start":5,"column_end":35}},{"value":"/ let rot = Rotation2::new(1.78);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":597516,"byte_end":597551,"line_start":159,"line_end":159,"column_start":5,"column_end":40}},{"value":"/ assert_relative_eq!(rot.angle(), 1.78);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":597556,"byte_end":597599,"line_start":160,"line_end":160,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":597604,"byte_end":597611,"line_start":161,"line_end":161,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":597616,"byte_end":597625,"line_start":162,"line_end":162,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4642},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":598089,"byte_end":598097,"line_start":178,"line_end":178,"column_start":12,"column_end":20},"name":"angle_to","qualname":"<Rotation2<N>>::angle_to","value":"fn (&self, other: &Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The rotation angle needed to make `self` and `other` coincide.","sig":null,"attributes":[{"value":"/ The rotation angle needed to make `self` and `other` coincide.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":597732,"byte_end":597798,"line_start":167,"line_end":167,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":597803,"byte_end":597806,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":597811,"byte_end":597824,"line_start":169,"line_end":169,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":597829,"byte_end":597836,"line_start":170,"line_end":170,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":597841,"byte_end":597880,"line_start":171,"line_end":171,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Rotation2;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":597885,"byte_end":597915,"line_start":172,"line_end":172,"column_start":5,"column_end":35}},{"value":"/ let rot1 = Rotation2::new(0.1);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":597920,"byte_end":597955,"line_start":173,"line_end":173,"column_start":5,"column_end":40}},{"value":"/ let rot2 = Rotation2::new(1.7);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":597960,"byte_end":597995,"line_start":174,"line_end":174,"column_start":5,"column_end":40}},{"value":"/ assert_relative_eq!(rot1.angle_to(&rot2), 1.6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":598000,"byte_end":598051,"line_start":175,"line_end":175,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":598056,"byte_end":598063,"line_start":176,"line_end":176,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":598068,"byte_end":598077,"line_start":177,"line_end":177,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4643},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":598727,"byte_end":598738,"line_start":198,"line_end":198,"column_start":12,"column_end":23},"name":"rotation_to","qualname":"<Rotation2<N>>::rotation_to","value":"fn (&self, other: &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The rotation matrix needed to make `self` and `other` coincide.","sig":null,"attributes":[{"value":"/ The rotation matrix needed to make `self` and `other` coincide.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":598177,"byte_end":598244,"line_start":182,"line_end":182,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":598249,"byte_end":598252,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ The result is such that: `self.rotation_to(other) * self == other`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":598257,"byte_end":598328,"line_start":184,"line_end":184,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":598333,"byte_end":598336,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":598341,"byte_end":598354,"line_start":186,"line_end":186,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":598359,"byte_end":598366,"line_start":187,"line_end":187,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":598371,"byte_end":598410,"line_start":188,"line_end":188,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Rotation2;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":598415,"byte_end":598445,"line_start":189,"line_end":189,"column_start":5,"column_end":35}},{"value":"/ let rot1 = Rotation2::new(0.1);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":598450,"byte_end":598485,"line_start":190,"line_end":190,"column_start":5,"column_end":40}},{"value":"/ let rot2 = Rotation2::new(1.7);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":598490,"byte_end":598525,"line_start":191,"line_end":191,"column_start":5,"column_end":40}},{"value":"/ let rot_to = rot1.rotation_to(&rot2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":598530,"byte_end":598571,"line_start":192,"line_end":192,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":598576,"byte_end":598579,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot_to * rot1, rot2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":598584,"byte_end":598629,"line_start":194,"line_end":194,"column_start":5,"column_end":50}},{"value":"/ assert_relative_eq!(rot_to.inverse() * rot2, rot1);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":598634,"byte_end":598689,"line_start":195,"line_end":195,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":598694,"byte_end":598701,"line_start":196,"line_end":196,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":598706,"byte_end":598715,"line_start":197,"line_end":197,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4644},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":599020,"byte_end":599031,"line_start":205,"line_end":205,"column_start":12,"column_end":23},"name":"renormalize","qualname":"<Rotation2<N>>::renormalize","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Ensure this rotation is an orthonormal rotation matrix. This is useful when repeated\n computations might cause the matrix from progressively not being orthonormal anymore.\n","sig":null,"attributes":[{"value":"/ Ensure this rotation is an orthonormal rotation matrix. This is useful when repeated","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":598812,"byte_end":598900,"line_start":202,"line_end":202,"column_start":5,"column_end":93}},{"value":"/ computations might cause the matrix from progressively not being orthonormal anymore.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":598905,"byte_end":598994,"line_start":203,"line_end":203,"column_start":5,"column_end":94}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":598999,"byte_end":599008,"line_start":204,"line_end":204,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4645},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":599672,"byte_end":599676,"line_start":227,"line_end":227,"column_start":12,"column_end":16},"name":"powf","qualname":"<Rotation2<N>>::powf","value":"fn (&self, n: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Raise the quaternion to a given floating power, i.e., returns the rotation with the angle\n of `self` multiplied by `n`.","sig":null,"attributes":[{"value":"/ Raise the quaternion to a given floating power, i.e., returns the rotation with the angle","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":599260,"byte_end":599353,"line_start":215,"line_end":215,"column_start":5,"column_end":98}},{"value":"/ of `self` multiplied by `n`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":599358,"byte_end":599390,"line_start":216,"line_end":216,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":599395,"byte_end":599398,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":599403,"byte_end":599416,"line_start":218,"line_end":218,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":599421,"byte_end":599428,"line_start":219,"line_end":219,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":599433,"byte_end":599472,"line_start":220,"line_end":220,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Rotation2;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":599477,"byte_end":599507,"line_start":221,"line_end":221,"column_start":5,"column_end":35}},{"value":"/ let rot = Rotation2::new(0.78);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":599512,"byte_end":599547,"line_start":222,"line_end":222,"column_start":5,"column_end":40}},{"value":"/ let pow = rot.powf(2.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":599552,"byte_end":599580,"line_start":223,"line_end":223,"column_start":5,"column_end":33}},{"value":"/ assert_relative_eq!(pow.angle(), 2.0 * 0.78);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":599585,"byte_end":599634,"line_start":224,"line_end":224,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":599639,"byte_end":599646,"line_start":225,"line_end":225,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":599651,"byte_end":599660,"line_start":226,"line_end":226,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4646},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":599969,"byte_end":599980,"line_start":236,"line_end":236,"column_start":12,"column_end":23},"name":"scaled_axis","qualname":"<Rotation2<N>>::scaled_axis","value":"fn (&self) -> VectorN<N, U1>","parent":null,"children":[],"decl_id":null,"docs":" The rotation angle returned as a 1-dimensional vector.","sig":null,"attributes":[{"value":"/ The rotation angle returned as a 1-dimensional vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":599747,"byte_end":599805,"line_start":231,"line_end":231,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":599810,"byte_end":599813,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ This is generally used in the context of generic programming. Using","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":599818,"byte_end":599889,"line_start":233,"line_end":233,"column_start":5,"column_end":76}},{"value":"/ the `.angle()` method instead is more common.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":599894,"byte_end":599943,"line_start":234,"line_end":234,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":599948,"byte_end":599957,"line_start":235,"line_end":235,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4654},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":601814,"byte_end":601817,"line_start":297,"line_end":297,"column_start":12,"column_end":15},"name":"new","qualname":"<Rotation3<N>>::new","value":"fn <SB> (axisangle: Vector<N, U3, SB>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a 3 dimensional rotation matrix from an axis and an angle.","sig":null,"attributes":[{"value":"/ Builds a 3 dimensional rotation matrix from an axis and an angle.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":600792,"byte_end":600861,"line_start":274,"line_end":274,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":600866,"byte_end":600869,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":600874,"byte_end":600889,"line_start":276,"line_end":276,"column_start":5,"column_end":20}},{"value":"/   * `axisangle` - A vector representing the rotation. Its magnitude is the amount of rotation","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":600894,"byte_end":600991,"line_start":277,"line_end":277,"column_start":5,"column_end":102}},{"value":"/   in radian. Its direction is the axis of rotation.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":600996,"byte_end":601051,"line_start":278,"line_end":278,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":601056,"byte_end":601059,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":601064,"byte_end":601077,"line_start":280,"line_end":280,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":601082,"byte_end":601089,"line_start":281,"line_end":281,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":601094,"byte_end":601133,"line_start":282,"line_end":282,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":601138,"byte_end":601157,"line_start":283,"line_end":283,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Rotation3, Point3, Vector3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":601162,"byte_end":601211,"line_start":284,"line_end":284,"column_start":5,"column_end":54}},{"value":"/ let axisangle = Vector3::y() * f32::consts::FRAC_PI_2;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":601216,"byte_end":601274,"line_start":285,"line_end":285,"column_start":5,"column_end":63}},{"value":"/ // Point and vector being transformed in the tests.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":601279,"byte_end":601334,"line_start":286,"line_end":286,"column_start":5,"column_end":60}},{"value":"/ let pt = Point3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":601339,"byte_end":601379,"line_start":287,"line_end":287,"column_start":5,"column_end":45}},{"value":"/ let vec = Vector3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":601384,"byte_end":601426,"line_start":288,"line_end":288,"column_start":5,"column_end":47}},{"value":"/ let rot = Rotation3::new(axisangle);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":601431,"byte_end":601471,"line_start":289,"line_end":289,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":601476,"byte_end":601479,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot * pt, Point3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":601484,"byte_end":601565,"line_start":291,"line_end":291,"column_start":5,"column_end":86}},{"value":"/ assert_relative_eq!(rot * vec, Vector3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":601570,"byte_end":601653,"line_start":292,"line_end":292,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":601658,"byte_end":601661,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ // A zero vector yields an identity.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":601666,"byte_end":601706,"line_start":294,"line_end":294,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(Rotation3::new(Vector3::<f32>::zeros()), Rotation3::identity());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":601711,"byte_end":601790,"line_start":295,"line_end":295,"column_start":5,"column_end":84}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":601795,"byte_end":601802,"line_start":296,"line_end":296,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4656},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":602390,"byte_end":602401,"line_start":308,"line_end":308,"column_start":12,"column_end":23},"name":"from_matrix","qualname":"<Rotation3<N>>::from_matrix","value":"fn (m: &Matrix3<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a rotation matrix by extracting the rotation part of the given transformation `m`.","sig":null,"attributes":[{"value":"/ Builds a rotation matrix by extracting the rotation part of the given transformation `m`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":602039,"byte_end":602132,"line_start":303,"line_end":303,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":602137,"byte_end":602140,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ This is an iterative method. See `.from_matrix_eps` to provide mover","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":602145,"byte_end":602217,"line_start":305,"line_end":305,"column_start":5,"column_end":77}},{"value":"/ convergence parameters and starting solution.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":602222,"byte_end":602271,"line_start":306,"line_end":306,"column_start":5,"column_end":54}},{"value":"/ This implements \"A Robust Method to Extract the Rotational Part of Deformations\" by Müller et al.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":602276,"byte_end":602378,"line_start":307,"line_end":307,"column_start":5,"column_end":106}}]},{"kind":"Method","id":{"krate":0,"index":4657},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":603347,"byte_end":603362,"line_start":327,"line_end":327,"column_start":12,"column_end":27},"name":"from_matrix_eps","qualname":"<Rotation3<N>>::from_matrix_eps","value":"fn (m: &Matrix3<N>, eps: N, mut max_iter: usize, guess: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a rotation matrix by extracting the rotation part of the given transformation `m`.","sig":null,"attributes":[{"value":"/ Builds a rotation matrix by extracting the rotation part of the given transformation `m`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":602551,"byte_end":602644,"line_start":315,"line_end":315,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":602649,"byte_end":602652,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ This implements \"A Robust Method to Extract the Rotational Part of Deformations\" by Müller et al.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":602657,"byte_end":602759,"line_start":317,"line_end":317,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":602764,"byte_end":602767,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":602772,"byte_end":602788,"line_start":319,"line_end":319,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":602793,"byte_end":602796,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ * `m`: the matrix from which the rotational part is to be extracted.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":602801,"byte_end":602873,"line_start":321,"line_end":321,"column_start":5,"column_end":77}},{"value":"/ * `eps`: the angular errors tolerated between the current rotation and the optimal one.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":602878,"byte_end":602969,"line_start":322,"line_end":322,"column_start":5,"column_end":96}},{"value":"/ * `max_iter`: the maximum number of iterations. Loops indefinitely until convergence if set to `0`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":602974,"byte_end":603077,"line_start":323,"line_end":323,"column_start":5,"column_end":108}},{"value":"/ * `guess`: a guess of the solution. Convergence will be significantly faster if an initial solution close","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":603082,"byte_end":603191,"line_start":324,"line_end":324,"column_start":5,"column_end":114}},{"value":"/           to the actual solution is provided. Can be set to `Rotation3::identity()` if no other","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":603196,"byte_end":603295,"line_start":325,"line_end":325,"column_start":5,"column_end":104}},{"value":"/           guesses come to mind.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":603300,"byte_end":603335,"line_start":326,"line_end":326,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":4658},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":605198,"byte_end":605214,"line_start":378,"line_end":378,"column_start":12,"column_end":28},"name":"from_scaled_axis","qualname":"<Rotation3<N>>::from_scaled_axis","value":"fn <SB> (axisangle: Vector<N, U3, SB>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a 3D rotation matrix from an axis scaled by the rotation angle.","sig":null,"attributes":[{"value":"/ Builds a 3D rotation matrix from an axis scaled by the rotation angle.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":604288,"byte_end":604362,"line_start":357,"line_end":357,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":604367,"byte_end":604370,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ This is the same as `Self::new(axisangle)`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":604375,"byte_end":604422,"line_start":359,"line_end":359,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":604427,"byte_end":604430,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":604435,"byte_end":604448,"line_start":361,"line_end":361,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":604453,"byte_end":604460,"line_start":362,"line_end":362,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":604465,"byte_end":604504,"line_start":363,"line_end":363,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":604509,"byte_end":604528,"line_start":364,"line_end":364,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Rotation3, Point3, Vector3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":604533,"byte_end":604582,"line_start":365,"line_end":365,"column_start":5,"column_end":54}},{"value":"/ let axisangle = Vector3::y() * f32::consts::FRAC_PI_2;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":604587,"byte_end":604645,"line_start":366,"line_end":366,"column_start":5,"column_end":63}},{"value":"/ // Point and vector being transformed in the tests.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":604650,"byte_end":604705,"line_start":367,"line_end":367,"column_start":5,"column_end":60}},{"value":"/ let pt = Point3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":604710,"byte_end":604750,"line_start":368,"line_end":368,"column_start":5,"column_end":45}},{"value":"/ let vec = Vector3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":604755,"byte_end":604797,"line_start":369,"line_end":369,"column_start":5,"column_end":47}},{"value":"/ let rot = Rotation3::new(axisangle);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":604802,"byte_end":604842,"line_start":370,"line_end":370,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":604847,"byte_end":604850,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot * pt, Point3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":604855,"byte_end":604936,"line_start":372,"line_end":372,"column_start":5,"column_end":86}},{"value":"/ assert_relative_eq!(rot * vec, Vector3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":604941,"byte_end":605024,"line_start":373,"line_end":373,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":605029,"byte_end":605032,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ // A zero vector yields an identity.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":605037,"byte_end":605077,"line_start":375,"line_end":375,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(Rotation3::from_scaled_axis(Vector3::<f32>::zeros()), Rotation3::identity());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":605082,"byte_end":605174,"line_start":376,"line_end":376,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":605179,"byte_end":605186,"line_start":377,"line_end":377,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4660},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":606278,"byte_end":606293,"line_start":404,"line_end":404,"column_start":12,"column_end":27},"name":"from_axis_angle","qualname":"<Rotation3<N>>::from_axis_angle","value":"fn <SB> (axis: &Unit<Vector<N, U3, SB>>, angle: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a 3D rotation matrix from an axis and a rotation angle.","sig":null,"attributes":[{"value":"/ Builds a 3D rotation matrix from an axis and a rotation angle.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":605315,"byte_end":605381,"line_start":382,"line_end":382,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":605386,"byte_end":605389,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":605394,"byte_end":605407,"line_start":384,"line_end":384,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":605412,"byte_end":605419,"line_start":385,"line_end":385,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":605424,"byte_end":605463,"line_start":386,"line_end":386,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":605468,"byte_end":605487,"line_start":387,"line_end":387,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Rotation3, Point3, Vector3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":605492,"byte_end":605541,"line_start":388,"line_end":388,"column_start":5,"column_end":54}},{"value":"/ let axis = Vector3::y_axis();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":605546,"byte_end":605579,"line_start":389,"line_end":389,"column_start":5,"column_end":38}},{"value":"/ let angle = f32::consts::FRAC_PI_2;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":605584,"byte_end":605623,"line_start":390,"line_end":390,"column_start":5,"column_end":44}},{"value":"/ // Point and vector being transformed in the tests.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":605628,"byte_end":605683,"line_start":391,"line_end":391,"column_start":5,"column_end":60}},{"value":"/ let pt = Point3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":605688,"byte_end":605728,"line_start":392,"line_end":392,"column_start":5,"column_end":45}},{"value":"/ let vec = Vector3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":605733,"byte_end":605775,"line_start":393,"line_end":393,"column_start":5,"column_end":47}},{"value":"/ let rot = Rotation3::from_axis_angle(&axis, angle);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":605780,"byte_end":605835,"line_start":394,"line_end":394,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":605840,"byte_end":605843,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(rot.axis().unwrap(), axis);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":605848,"byte_end":605890,"line_start":396,"line_end":396,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(rot.angle(), angle);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":605895,"byte_end":605930,"line_start":397,"line_end":397,"column_start":5,"column_end":40}},{"value":"/ assert_relative_eq!(rot * pt, Point3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":605935,"byte_end":606016,"line_start":398,"line_end":398,"column_start":5,"column_end":86}},{"value":"/ assert_relative_eq!(rot * vec, Vector3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":606021,"byte_end":606104,"line_start":399,"line_end":399,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":606109,"byte_end":606112,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ // A zero vector yields an identity.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":606117,"byte_end":606157,"line_start":401,"line_end":401,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(Rotation3::from_scaled_axis(Vector3::<f32>::zeros()), Rotation3::identity());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":606162,"byte_end":606254,"line_start":402,"line_end":402,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":606259,"byte_end":606266,"line_start":403,"line_end":403,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4664},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":607970,"byte_end":607987,"line_start":449,"line_end":449,"column_start":12,"column_end":29},"name":"from_euler_angles","qualname":"<Rotation3<N>>::from_euler_angles","value":"fn (roll: N, pitch: N, yaw: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new rotation from Euler angles.","sig":null,"attributes":[{"value":"/ Creates a new rotation from Euler angles.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":607406,"byte_end":607451,"line_start":435,"line_end":435,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":607456,"byte_end":607459,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ The primitive rotations are applied in order: 1 roll − 2 pitch − 3 yaw.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":607464,"byte_end":607543,"line_start":437,"line_end":437,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":607548,"byte_end":607551,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":607556,"byte_end":607569,"line_start":439,"line_end":439,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":607574,"byte_end":607581,"line_start":440,"line_end":440,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":607586,"byte_end":607625,"line_start":441,"line_end":441,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Rotation3;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":607630,"byte_end":607660,"line_start":442,"line_end":442,"column_start":5,"column_end":35}},{"value":"/ let rot = Rotation3::from_euler_angles(0.1, 0.2, 0.3);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":607665,"byte_end":607723,"line_start":443,"line_end":443,"column_start":5,"column_end":63}},{"value":"/ let euler = rot.euler_angles();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":607728,"byte_end":607763,"line_start":444,"line_end":444,"column_start":5,"column_end":40}},{"value":"/ assert_relative_eq!(euler.0, 0.1, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":607768,"byte_end":607824,"line_start":445,"line_end":445,"column_start":5,"column_end":61}},{"value":"/ assert_relative_eq!(euler.1, 0.2, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":607829,"byte_end":607885,"line_start":446,"line_end":446,"column_start":5,"column_end":61}},{"value":"/ assert_relative_eq!(euler.2, 0.3, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":607890,"byte_end":607946,"line_start":447,"line_end":447,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":607951,"byte_end":607958,"line_start":448,"line_end":448,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4665},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":608679,"byte_end":608694,"line_start":471,"line_end":471,"column_start":12,"column_end":27},"name":"to_euler_angles","qualname":"<Rotation3<N>>::to_euler_angles","value":"fn (&self) -> (N, N, N)","parent":null,"children":[],"decl_id":null,"docs":" Creates Euler angles from a rotation.","sig":null,"attributes":[{"value":"/ Creates Euler angles from a rotation.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":608484,"byte_end":608525,"line_start":467,"line_end":467,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":608530,"byte_end":608533,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ The angles are produced in the form (roll, pitch, yaw).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":608538,"byte_end":608597,"line_start":469,"line_end":469,"column_start":5,"column_end":64}},{"value":"deprecated(note = \"This is renamed to use `.euler_angles()`.\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":608602,"byte_end":608667,"line_start":470,"line_end":470,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":4666},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":609355,"byte_end":609367,"line_start":492,"line_end":492,"column_start":12,"column_end":24},"name":"euler_angles","qualname":"<Rotation3<N>>::euler_angles","value":"fn (&self) -> (N, N, N)","parent":null,"children":[],"decl_id":null,"docs":" Euler angles corresponding to this rotation from a rotation.","sig":null,"attributes":[{"value":"/ Euler angles corresponding to this rotation from a rotation.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":608792,"byte_end":608856,"line_start":478,"line_end":478,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":608861,"byte_end":608864,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ The angles are produced in the form (roll, pitch, yaw).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":608869,"byte_end":608928,"line_start":480,"line_end":480,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":608933,"byte_end":608936,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":608941,"byte_end":608954,"line_start":482,"line_end":482,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":608959,"byte_end":608966,"line_start":483,"line_end":483,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":608971,"byte_end":609010,"line_start":484,"line_end":484,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Rotation3;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":609015,"byte_end":609045,"line_start":485,"line_end":485,"column_start":5,"column_end":35}},{"value":"/ let rot = Rotation3::from_euler_angles(0.1, 0.2, 0.3);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":609050,"byte_end":609108,"line_start":486,"line_end":486,"column_start":5,"column_end":63}},{"value":"/ let euler = rot.euler_angles();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":609113,"byte_end":609148,"line_start":487,"line_end":487,"column_start":5,"column_end":40}},{"value":"/ assert_relative_eq!(euler.0, 0.1, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":609153,"byte_end":609209,"line_start":488,"line_end":488,"column_start":5,"column_end":61}},{"value":"/ assert_relative_eq!(euler.1, 0.2, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":609214,"byte_end":609270,"line_start":489,"line_end":489,"column_start":5,"column_end":61}},{"value":"/ assert_relative_eq!(euler.2, 0.3, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":609275,"byte_end":609331,"line_start":490,"line_end":490,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":609336,"byte_end":609343,"line_start":491,"line_end":491,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4667},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":610405,"byte_end":610416,"line_start":517,"line_end":517,"column_start":12,"column_end":23},"name":"renormalize","qualname":"<Rotation3<N>>::renormalize","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Ensure this rotation is an orthonormal rotation matrix. This is useful when repeated\n computations might cause the matrix from progressively not being orthonormal anymore.\n","sig":null,"attributes":[{"value":"/ Ensure this rotation is an orthonormal rotation matrix. This is useful when repeated","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":610197,"byte_end":610285,"line_start":514,"line_end":514,"column_start":5,"column_end":93}},{"value":"/ computations might cause the matrix from progressively not being orthonormal anymore.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":610290,"byte_end":610379,"line_start":515,"line_end":515,"column_start":5,"column_end":94}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":610384,"byte_end":610393,"line_start":516,"line_end":516,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4668},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":611518,"byte_end":611530,"line_start":549,"line_end":549,"column_start":12,"column_end":24},"name":"face_towards","qualname":"<Rotation3<N>>::face_towards","value":"fn <SB, SC> (dir: &Vector<N, U3, SB>, up: &Vector<N, U3, SC>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a rotation that corresponds to the local frame of an observer standing at the\n origin and looking toward `dir`.","sig":null,"attributes":[{"value":"/ Creates a rotation that corresponds to the local frame of an observer standing at the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":610648,"byte_end":610737,"line_start":527,"line_end":527,"column_start":5,"column_end":94}},{"value":"/ origin and looking toward `dir`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":610742,"byte_end":610778,"line_start":528,"line_end":528,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":610783,"byte_end":610786,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ It maps the `z` axis to the direction `dir`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":610791,"byte_end":610839,"line_start":530,"line_end":530,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":610844,"byte_end":610847,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":610852,"byte_end":610867,"line_start":532,"line_end":532,"column_start":5,"column_end":20}},{"value":"/   * dir - The look direction, that is, direction the matrix `z` axis will be aligned with.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":610872,"byte_end":610966,"line_start":533,"line_end":533,"column_start":5,"column_end":99}},{"value":"/   * up - The vertical direction. The only requirement of this parameter is to not be","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":610971,"byte_end":611059,"line_start":534,"line_end":534,"column_start":5,"column_end":93}},{"value":"/   collinear to `dir`. Non-collinearity is not checked.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":611064,"byte_end":611122,"line_start":535,"line_end":535,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":611127,"byte_end":611130,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":611135,"byte_end":611148,"line_start":537,"line_end":537,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":611153,"byte_end":611160,"line_start":538,"line_end":538,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":611165,"byte_end":611204,"line_start":539,"line_end":539,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":611209,"byte_end":611228,"line_start":540,"line_end":540,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Rotation3, Vector3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":611233,"byte_end":611274,"line_start":541,"line_end":541,"column_start":5,"column_end":46}},{"value":"/ let dir = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":611279,"byte_end":611321,"line_start":542,"line_end":542,"column_start":5,"column_end":47}},{"value":"/ let up = Vector3::y();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":611326,"byte_end":611352,"line_start":543,"line_end":543,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":611357,"byte_end":611360,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ let rot = Rotation3::face_towards(&dir, &up);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":611365,"byte_end":611414,"line_start":545,"line_end":545,"column_start":5,"column_end":54}},{"value":"/ assert_relative_eq!(rot * Vector3::z(), dir.normalize());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":611419,"byte_end":611480,"line_start":546,"line_end":546,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":611485,"byte_end":611492,"line_start":547,"line_end":547,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":611497,"byte_end":611506,"line_start":548,"line_end":548,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4671},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":612103,"byte_end":612122,"line_start":565,"line_end":565,"column_start":12,"column_end":31},"name":"new_observer_frames","qualname":"<Rotation3<N>>::new_observer_frames","value":"fn <SB, SC> (dir: &Vector<N, U3, SB>, up: &Vector<N, U3, SC>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Deprecated: Use [Rotation3::face_towards] instead.\n","sig":null,"attributes":[{"value":"/ Deprecated: Use [Rotation3::face_towards] instead.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":611983,"byte_end":612037,"line_start":563,"line_end":563,"column_start":5,"column_end":59}},{"value":"deprecated(note = \"renamed to `face_towards`\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":612042,"byte_end":612091,"line_start":564,"line_end":564,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":4674},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":613221,"byte_end":613231,"line_start":596,"line_end":596,"column_start":12,"column_end":22},"name":"look_at_rh","qualname":"<Rotation3<N>>::look_at_rh","value":"fn <SB, SC> (dir: &Vector<N, U3, SB>, up: &Vector<N, U3, SC>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a right-handed look-at view matrix without translation.","sig":null,"attributes":[{"value":"/ Builds a right-handed look-at view matrix without translation.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":612307,"byte_end":612373,"line_start":573,"line_end":573,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":612378,"byte_end":612381,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ It maps the view direction `dir` to the **negative** `z` axis.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":612386,"byte_end":612452,"line_start":575,"line_end":575,"column_start":5,"column_end":71}},{"value":"/ This conforms to the common notion of right handed look-at matrix from the computer","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":612457,"byte_end":612544,"line_start":576,"line_end":576,"column_start":5,"column_end":92}},{"value":"/ graphics community.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":612549,"byte_end":612572,"line_start":577,"line_end":577,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":612577,"byte_end":612580,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":612585,"byte_end":612600,"line_start":579,"line_end":579,"column_start":5,"column_end":20}},{"value":"/   * dir - The direction toward which the camera looks.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":612605,"byte_end":612663,"line_start":580,"line_end":580,"column_start":5,"column_end":63}},{"value":"/   * up - A vector approximately aligned with required the vertical axis. The only","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":612668,"byte_end":612753,"line_start":581,"line_end":581,"column_start":5,"column_end":90}},{"value":"/   requirement of this parameter is to not be collinear to `dir`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":612758,"byte_end":612826,"line_start":582,"line_end":582,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":612831,"byte_end":612834,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":612839,"byte_end":612852,"line_start":584,"line_end":584,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":612857,"byte_end":612864,"line_start":585,"line_end":585,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":612869,"byte_end":612908,"line_start":586,"line_end":586,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":612913,"byte_end":612932,"line_start":587,"line_end":587,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Rotation3, Vector3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":612937,"byte_end":612978,"line_start":588,"line_end":588,"column_start":5,"column_end":46}},{"value":"/ let dir = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":612983,"byte_end":613025,"line_start":589,"line_end":589,"column_start":5,"column_end":47}},{"value":"/ let up = Vector3::y();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":613030,"byte_end":613056,"line_start":590,"line_end":590,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":613061,"byte_end":613064,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ let rot = Rotation3::look_at_rh(&dir, &up);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":613069,"byte_end":613116,"line_start":592,"line_end":592,"column_start":5,"column_end":52}},{"value":"/ assert_relative_eq!(rot * dir.normalize(), -Vector3::z());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":613121,"byte_end":613183,"line_start":593,"line_end":593,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":613188,"byte_end":613195,"line_start":594,"line_end":594,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":613200,"byte_end":613209,"line_start":595,"line_end":595,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4677},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":614344,"byte_end":614354,"line_start":627,"line_end":627,"column_start":12,"column_end":22},"name":"look_at_lh","qualname":"<Rotation3<N>>::look_at_lh","value":"fn <SB, SC> (dir: &Vector<N, U3, SB>, up: &Vector<N, U3, SC>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a left-handed look-at view matrix without translation.","sig":null,"attributes":[{"value":"/ Builds a left-handed look-at view matrix without translation.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":613433,"byte_end":613498,"line_start":604,"line_end":604,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":613503,"byte_end":613506,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ It maps the view direction `dir` to the **positive** `z` axis.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":613511,"byte_end":613577,"line_start":606,"line_end":606,"column_start":5,"column_end":71}},{"value":"/ This conforms to the common notion of left handed look-at matrix from the computer","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":613582,"byte_end":613668,"line_start":607,"line_end":607,"column_start":5,"column_end":91}},{"value":"/ graphics community.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":613673,"byte_end":613696,"line_start":608,"line_end":608,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":613701,"byte_end":613704,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":613709,"byte_end":613724,"line_start":610,"line_end":610,"column_start":5,"column_end":20}},{"value":"/   * dir - The direction toward which the camera looks.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":613729,"byte_end":613787,"line_start":611,"line_end":611,"column_start":5,"column_end":63}},{"value":"/   * up - A vector approximately aligned with required the vertical axis. The only","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":613792,"byte_end":613877,"line_start":612,"line_end":612,"column_start":5,"column_end":90}},{"value":"/   requirement of this parameter is to not be collinear to `dir`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":613882,"byte_end":613950,"line_start":613,"line_end":613,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":613955,"byte_end":613958,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":613963,"byte_end":613976,"line_start":615,"line_end":615,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":613981,"byte_end":613988,"line_start":616,"line_end":616,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":613993,"byte_end":614032,"line_start":617,"line_end":617,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":614037,"byte_end":614056,"line_start":618,"line_end":618,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Rotation3, Vector3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":614061,"byte_end":614102,"line_start":619,"line_end":619,"column_start":5,"column_end":46}},{"value":"/ let dir = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":614107,"byte_end":614149,"line_start":620,"line_end":620,"column_start":5,"column_end":47}},{"value":"/ let up = Vector3::y();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":614154,"byte_end":614180,"line_start":621,"line_end":621,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":614185,"byte_end":614188,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ let rot = Rotation3::look_at_lh(&dir, &up);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":614193,"byte_end":614240,"line_start":623,"line_end":623,"column_start":5,"column_end":52}},{"value":"/ assert_relative_eq!(rot * dir.normalize(), Vector3::z());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":614245,"byte_end":614306,"line_start":624,"line_end":624,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":614311,"byte_end":614318,"line_start":625,"line_end":625,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":614323,"byte_end":614332,"line_start":626,"line_end":626,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4680},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":615178,"byte_end":615194,"line_start":650,"line_end":650,"column_start":12,"column_end":28},"name":"rotation_between","qualname":"<Rotation3<N>>::rotation_between","value":"fn <SB, SC> (a: &Vector<N, U3, SB>, b: &Vector<N, U3, SC>) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" The rotation matrix required to align `a` and `b` but with its angle.","sig":null,"attributes":[{"value":"/ The rotation matrix required to align `a` and `b` but with its angle.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":614549,"byte_end":614622,"line_start":635,"line_end":635,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":614627,"byte_end":614630,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ This is the rotation `R` such that `(R * a).angle(b) == 0 && (R * a).dot(b).is_positive()`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":614635,"byte_end":614730,"line_start":637,"line_end":637,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":614735,"byte_end":614738,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":614743,"byte_end":614756,"line_start":639,"line_end":639,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":614761,"byte_end":614768,"line_start":640,"line_end":640,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":614773,"byte_end":614812,"line_start":641,"line_end":641,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Vector3, Rotation3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":614817,"byte_end":614858,"line_start":642,"line_end":642,"column_start":5,"column_end":46}},{"value":"/ let a = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":614863,"byte_end":614903,"line_start":643,"line_end":643,"column_start":5,"column_end":45}},{"value":"/ let b = Vector3::new(3.0, 1.0, 2.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":614908,"byte_end":614948,"line_start":644,"line_end":644,"column_start":5,"column_end":45}},{"value":"/ let rot = Rotation3::rotation_between(&a, &b).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":614953,"byte_end":615012,"line_start":645,"line_end":645,"column_start":5,"column_end":64}},{"value":"/ assert_relative_eq!(rot * a, b, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":615017,"byte_end":615071,"line_start":646,"line_end":646,"column_start":5,"column_end":59}},{"value":"/ assert_relative_eq!(rot.inverse() * b, a, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":615076,"byte_end":615140,"line_start":647,"line_end":647,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":615145,"byte_end":615152,"line_start":648,"line_end":648,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":615157,"byte_end":615166,"line_start":649,"line_end":649,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4683},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":616121,"byte_end":616144,"line_start":674,"line_end":674,"column_start":12,"column_end":35},"name":"scaled_rotation_between","qualname":"<Rotation3<N>>::scaled_rotation_between","value":"fn <SB, SC> (a: &Vector<N, U3, SB>, b: &Vector<N, U3, SC>, n: N) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" The smallest rotation needed to make `a` and `b` collinear and point toward the same\n direction, raised to the power `s`.","sig":null,"attributes":[{"value":"/ The smallest rotation needed to make `a` and `b` collinear and point toward the same","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":615424,"byte_end":615512,"line_start":659,"line_end":659,"column_start":5,"column_end":93}},{"value":"/ direction, raised to the power `s`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":615517,"byte_end":615556,"line_start":660,"line_end":660,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":615561,"byte_end":615564,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":615569,"byte_end":615582,"line_start":662,"line_end":662,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":615587,"byte_end":615594,"line_start":663,"line_end":663,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":615599,"byte_end":615638,"line_start":664,"line_end":664,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Vector3, Rotation3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":615643,"byte_end":615684,"line_start":665,"line_end":665,"column_start":5,"column_end":46}},{"value":"/ let a = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":615689,"byte_end":615729,"line_start":666,"line_end":666,"column_start":5,"column_end":45}},{"value":"/ let b = Vector3::new(3.0, 1.0, 2.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":615734,"byte_end":615774,"line_start":667,"line_end":667,"column_start":5,"column_end":45}},{"value":"/ let rot2 = Rotation3::scaled_rotation_between(&a, &b, 0.2).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":615779,"byte_end":615851,"line_start":668,"line_end":668,"column_start":5,"column_end":77}},{"value":"/ let rot5 = Rotation3::scaled_rotation_between(&a, &b, 0.5).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":615856,"byte_end":615928,"line_start":669,"line_end":669,"column_start":5,"column_end":77}},{"value":"/ assert_relative_eq!(rot2 * rot2 * rot2 * rot2 * rot2 * a, b, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":615933,"byte_end":616016,"line_start":670,"line_end":670,"column_start":5,"column_end":88}},{"value":"/ assert_relative_eq!(rot5 * rot5 * a, b, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":616021,"byte_end":616083,"line_start":671,"line_end":671,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":616088,"byte_end":616095,"line_start":672,"line_end":672,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":616100,"byte_end":616109,"line_start":673,"line_end":673,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4686},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":617411,"byte_end":617416,"line_start":716,"line_end":716,"column_start":12,"column_end":17},"name":"angle","qualname":"<Rotation3<N>>::angle","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The rotation angle in [0; pi].","sig":null,"attributes":[{"value":"/ The rotation angle in [0; pi].","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":617029,"byte_end":617063,"line_start":705,"line_end":705,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":617068,"byte_end":617071,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":617076,"byte_end":617089,"line_start":707,"line_end":707,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":617094,"byte_end":617101,"line_start":708,"line_end":708,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":617106,"byte_end":617145,"line_start":709,"line_end":709,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Unit, Rotation3, Vector3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":617150,"byte_end":617197,"line_start":710,"line_end":710,"column_start":5,"column_end":52}},{"value":"/ let axis = Unit::new_normalize(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":617202,"byte_end":617266,"line_start":711,"line_end":711,"column_start":5,"column_end":69}},{"value":"/ let rot = Rotation3::from_axis_angle(&axis, 1.78);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":617271,"byte_end":617325,"line_start":712,"line_end":712,"column_start":5,"column_end":59}},{"value":"/ assert_relative_eq!(rot.angle(), 1.78);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":617330,"byte_end":617373,"line_start":713,"line_end":713,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":617378,"byte_end":617385,"line_start":714,"line_end":714,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":617390,"byte_end":617399,"line_start":715,"line_end":715,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4687},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":618186,"byte_end":618190,"line_start":738,"line_end":738,"column_start":12,"column_end":16},"name":"axis","qualname":"<Rotation3<N>>::axis","value":"fn (&self) -> Option<Unit<Vector3<N>>>","parent":null,"children":[],"decl_id":null,"docs":" The rotation axis. Returns `None` if the rotation angle is zero or PI.","sig":null,"attributes":[{"value":"/ The rotation axis. Returns `None` if the rotation angle is zero or PI.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":617590,"byte_end":617664,"line_start":722,"line_end":722,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":617669,"byte_end":617672,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":617677,"byte_end":617690,"line_start":724,"line_end":724,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":617695,"byte_end":617702,"line_start":725,"line_end":725,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":617707,"byte_end":617746,"line_start":726,"line_end":726,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Rotation3, Vector3, Unit};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":617751,"byte_end":617798,"line_start":727,"line_end":727,"column_start":5,"column_end":52}},{"value":"/ let axis = Unit::new_normalize(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":617803,"byte_end":617867,"line_start":728,"line_end":728,"column_start":5,"column_end":69}},{"value":"/ let angle = 1.2;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":617872,"byte_end":617892,"line_start":729,"line_end":729,"column_start":5,"column_end":25}},{"value":"/ let rot = Rotation3::from_axis_angle(&axis, angle);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":617897,"byte_end":617952,"line_start":730,"line_end":730,"column_start":5,"column_end":60}},{"value":"/ assert_relative_eq!(rot.axis().unwrap(), axis);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":617957,"byte_end":618008,"line_start":731,"line_end":731,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":618013,"byte_end":618016,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ // Case with a zero angle.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":618021,"byte_end":618051,"line_start":733,"line_end":733,"column_start":5,"column_end":35}},{"value":"/ let rot = Rotation3::from_axis_angle(&axis, 0.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":618056,"byte_end":618109,"line_start":734,"line_end":734,"column_start":5,"column_end":58}},{"value":"/ assert!(rot.axis().is_none());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":618114,"byte_end":618148,"line_start":735,"line_end":735,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":618153,"byte_end":618160,"line_start":736,"line_end":736,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":618165,"byte_end":618174,"line_start":737,"line_end":737,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4688},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":618958,"byte_end":618969,"line_start":762,"line_end":762,"column_start":12,"column_end":23},"name":"scaled_axis","qualname":"<Rotation3<N>>::scaled_axis","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" The rotation axis multiplied by the rotation angle.","sig":null,"attributes":[{"value":"/ The rotation axis multiplied by the rotation angle.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":618556,"byte_end":618611,"line_start":751,"line_end":751,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":618616,"byte_end":618619,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":618624,"byte_end":618637,"line_start":753,"line_end":753,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":618642,"byte_end":618649,"line_start":754,"line_end":754,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":618654,"byte_end":618693,"line_start":755,"line_end":755,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Rotation3, Vector3, Unit};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":618698,"byte_end":618745,"line_start":756,"line_end":756,"column_start":5,"column_end":52}},{"value":"/ let axisangle = Vector3::new(0.1, 0.2, 0.3);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":618750,"byte_end":618798,"line_start":757,"line_end":757,"column_start":5,"column_end":53}},{"value":"/ let rot = Rotation3::new(axisangle);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":618803,"byte_end":618843,"line_start":758,"line_end":758,"column_start":5,"column_end":45}},{"value":"/ assert_relative_eq!(rot.scaled_axis(), axisangle, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":618848,"byte_end":618920,"line_start":759,"line_end":759,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":618925,"byte_end":618932,"line_start":760,"line_end":760,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":618937,"byte_end":618946,"line_start":761,"line_end":761,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4689},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":619924,"byte_end":619934,"line_start":793,"line_end":793,"column_start":12,"column_end":22},"name":"axis_angle","qualname":"<Rotation3<N>>::axis_angle","value":"fn (&self) -> Option<(Unit<Vector3<N>>, N)>","parent":null,"children":[],"decl_id":null,"docs":" The rotation axis and angle in ]0, pi] of this unit quaternion.","sig":null,"attributes":[{"value":"/ The rotation axis and angle in ]0, pi] of this unit quaternion.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":619181,"byte_end":619248,"line_start":773,"line_end":773,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":619253,"byte_end":619256,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the angle is zero.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":619261,"byte_end":619301,"line_start":775,"line_end":775,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":619306,"byte_end":619309,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":619314,"byte_end":619327,"line_start":777,"line_end":777,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":619332,"byte_end":619339,"line_start":778,"line_end":778,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":619344,"byte_end":619383,"line_start":779,"line_end":779,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Rotation3, Vector3, Unit};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":619388,"byte_end":619435,"line_start":780,"line_end":780,"column_start":5,"column_end":52}},{"value":"/ let axis = Unit::new_normalize(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":619440,"byte_end":619504,"line_start":781,"line_end":781,"column_start":5,"column_end":69}},{"value":"/ let angle = 1.2;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":619509,"byte_end":619529,"line_start":782,"line_end":782,"column_start":5,"column_end":25}},{"value":"/ let rot = Rotation3::from_axis_angle(&axis, angle);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":619534,"byte_end":619589,"line_start":783,"line_end":783,"column_start":5,"column_end":60}},{"value":"/ let axis_angle = rot.axis_angle().unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":619594,"byte_end":619641,"line_start":784,"line_end":784,"column_start":5,"column_end":52}},{"value":"/ assert_relative_eq!(axis_angle.0, axis);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":619646,"byte_end":619690,"line_start":785,"line_end":785,"column_start":5,"column_end":49}},{"value":"/ assert_relative_eq!(axis_angle.1, angle);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":619695,"byte_end":619740,"line_start":786,"line_end":786,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":619745,"byte_end":619748,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ // Case with a zero angle.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":619753,"byte_end":619783,"line_start":788,"line_end":788,"column_start":5,"column_end":35}},{"value":"/ let rot = Rotation3::from_axis_angle(&axis, 0.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":619788,"byte_end":619841,"line_start":789,"line_end":789,"column_start":5,"column_end":58}},{"value":"/ assert!(rot.axis_angle().is_none());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":619846,"byte_end":619886,"line_start":790,"line_end":790,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":619891,"byte_end":619898,"line_start":791,"line_end":791,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":619903,"byte_end":619912,"line_start":792,"line_end":792,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4690},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":620605,"byte_end":620613,"line_start":815,"line_end":815,"column_start":12,"column_end":20},"name":"angle_to","qualname":"<Rotation3<N>>::angle_to","value":"fn (&self, other: &Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The rotation angle needed to make `self` and `other` coincide.","sig":null,"attributes":[{"value":"/ The rotation angle needed to make `self` and `other` coincide.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":620149,"byte_end":620215,"line_start":804,"line_end":804,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":620220,"byte_end":620223,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":620228,"byte_end":620241,"line_start":806,"line_end":806,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":620246,"byte_end":620253,"line_start":807,"line_end":807,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":620258,"byte_end":620297,"line_start":808,"line_end":808,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Rotation3, Vector3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":620302,"byte_end":620343,"line_start":809,"line_end":809,"column_start":5,"column_end":46}},{"value":"/ let rot1 = Rotation3::from_axis_angle(&Vector3::y_axis(), 1.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":620348,"byte_end":620415,"line_start":810,"line_end":810,"column_start":5,"column_end":72}},{"value":"/ let rot2 = Rotation3::from_axis_angle(&Vector3::x_axis(), 0.1);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":620420,"byte_end":620487,"line_start":811,"line_end":811,"column_start":5,"column_end":72}},{"value":"/ assert_relative_eq!(rot1.angle_to(&rot2), 1.0045657, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":620492,"byte_end":620567,"line_start":812,"line_end":812,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":620572,"byte_end":620579,"line_start":813,"line_end":813,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":620584,"byte_end":620593,"line_start":814,"line_end":814,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4691},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":621268,"byte_end":621279,"line_start":833,"line_end":833,"column_start":12,"column_end":23},"name":"rotation_to","qualname":"<Rotation3<N>>::rotation_to","value":"fn (&self, other: &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The rotation matrix needed to make `self` and `other` coincide.","sig":null,"attributes":[{"value":"/ The rotation matrix needed to make `self` and `other` coincide.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":620693,"byte_end":620760,"line_start":819,"line_end":819,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":620765,"byte_end":620768,"line_start":820,"line_end":820,"column_start":5,"column_end":8}},{"value":"/ The result is such that: `self.rotation_to(other) * self == other`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":620773,"byte_end":620844,"line_start":821,"line_end":821,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":620849,"byte_end":620852,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":620857,"byte_end":620870,"line_start":823,"line_end":823,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":620875,"byte_end":620882,"line_start":824,"line_end":824,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":620887,"byte_end":620926,"line_start":825,"line_end":825,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Rotation3, Vector3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":620931,"byte_end":620972,"line_start":826,"line_end":826,"column_start":5,"column_end":46}},{"value":"/ let rot1 = Rotation3::from_axis_angle(&Vector3::y_axis(), 1.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":620977,"byte_end":621044,"line_start":827,"line_end":827,"column_start":5,"column_end":72}},{"value":"/ let rot2 = Rotation3::from_axis_angle(&Vector3::x_axis(), 0.1);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":621049,"byte_end":621116,"line_start":828,"line_end":828,"column_start":5,"column_end":72}},{"value":"/ let rot_to = rot1.rotation_to(&rot2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":621121,"byte_end":621162,"line_start":829,"line_end":829,"column_start":5,"column_end":46}},{"value":"/ assert_relative_eq!(rot_to * rot1, rot2, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":621167,"byte_end":621230,"line_start":830,"line_end":830,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":621235,"byte_end":621242,"line_start":831,"line_end":831,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":621247,"byte_end":621256,"line_start":832,"line_end":832,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4692},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":621995,"byte_end":621999,"line_start":852,"line_end":852,"column_start":12,"column_end":16},"name":"powf","qualname":"<Rotation3<N>>::powf","value":"fn (&self, n: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Raise the quaternion to a given floating power, i.e., returns the rotation with the same\n axis as `self` and an angle equal to `self.angle()` multiplied by `n`.","sig":null,"attributes":[{"value":"/ Raise the quaternion to a given floating power, i.e., returns the rotation with the same","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":621353,"byte_end":621445,"line_start":837,"line_end":837,"column_start":5,"column_end":97}},{"value":"/ axis as `self` and an angle equal to `self.angle()` multiplied by `n`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":621450,"byte_end":621524,"line_start":838,"line_end":838,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":621529,"byte_end":621532,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":621537,"byte_end":621550,"line_start":840,"line_end":840,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":621555,"byte_end":621562,"line_start":841,"line_end":841,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":621567,"byte_end":621606,"line_start":842,"line_end":842,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Rotation3, Vector3, Unit};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":621611,"byte_end":621658,"line_start":843,"line_end":843,"column_start":5,"column_end":52}},{"value":"/ let axis = Unit::new_normalize(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":621663,"byte_end":621727,"line_start":844,"line_end":844,"column_start":5,"column_end":69}},{"value":"/ let angle = 1.2;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":621732,"byte_end":621752,"line_start":845,"line_end":845,"column_start":5,"column_end":25}},{"value":"/ let rot = Rotation3::from_axis_angle(&axis, angle);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":621757,"byte_end":621812,"line_start":846,"line_end":846,"column_start":5,"column_end":60}},{"value":"/ let pow = rot.powf(2.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":621817,"byte_end":621845,"line_start":847,"line_end":847,"column_start":5,"column_end":33}},{"value":"/ assert_relative_eq!(pow.axis().unwrap(), axis, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":621850,"byte_end":621919,"line_start":848,"line_end":848,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(pow.angle(), 2.4);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":621924,"byte_end":621957,"line_start":849,"line_end":849,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":621962,"byte_end":621969,"line_start":850,"line_end":850,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":621974,"byte_end":621983,"line_start":851,"line_end":851,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":18095},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":624917,"byte_end":624927,"line_start":31,"line_end":31,"column_start":12,"column_end":22},"name":"Quaternion","qualname":"::geometry::quaternion::Quaternion","value":"Quaternion { coords }","parent":null,"children":[{"krate":0,"index":18097}],"decl_id":null,"docs":" A quaternion. See the type alias `UnitQuaternion = Unit<Quaternion>` for a quaternion\n that may be used as a rotation.\n","sig":null,"attributes":[{"value":"/ A quaternion. See the type alias `UnitQuaternion = Unit<Quaternion>` for a quaternion","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":624752,"byte_end":624841,"line_start":27,"line_end":27,"column_start":1,"column_end":90}},{"value":"/ that may be used as a rotation.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":624842,"byte_end":624877,"line_start":28,"line_end":28,"column_start":1,"column_end":36}},{"value":"repr(C)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":624878,"byte_end":624888,"line_start":29,"line_end":29,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":18097},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":625054,"byte_end":625060,"line_start":33,"line_end":33,"column_start":9,"column_end":15},"name":"coords","qualname":"::geometry::quaternion::Quaternion::coords","value":"base::matrix::Matrix<N, base::dimension::U4, base::dimension::U1, <base::default_allocator::DefaultAllocator as base::allocator::Allocator<N, base::dimension::U4>>::Buffer>","parent":{"krate":0,"index":18095},"children":[],"decl_id":null,"docs":" This quaternion as a 4D vector of coordinates in the `[ x, y, z, w ]` storage order.\n","sig":null,"attributes":[{"value":"/ This quaternion as a 4D vector of coordinates in the `[ x, y, z, w ]` storage order.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":624957,"byte_end":625045,"line_start":32,"line_end":32,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":4752},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":627355,"byte_end":627365,"line_start":125,"line_end":125,"column_start":12,"column_end":22},"name":"into_owned","qualname":"<Quaternion<N>>::into_owned","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Moves this unit quaternion into one that owns its data.\n","sig":null,"attributes":[{"value":"/ Moves this unit quaternion into one that owns its data.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":627178,"byte_end":627237,"line_start":122,"line_end":122,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":627242,"byte_end":627251,"line_start":123,"line_end":123,"column_start":5,"column_end":14}},{"value":"deprecated(note =\n             \"This method is a no-op and will be removed in a future release.\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":627256,"byte_end":627343,"line_start":124,"line_end":124,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":4753},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":627584,"byte_end":627595,"line_start":132,"line_end":132,"column_start":12,"column_end":23},"name":"clone_owned","qualname":"<Quaternion<N>>::clone_owned","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Clones this unit quaternion into one that owns its data.\n","sig":null,"attributes":[{"value":"/ Clones this unit quaternion into one that owns its data.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":627406,"byte_end":627466,"line_start":129,"line_end":129,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":627471,"byte_end":627480,"line_start":130,"line_end":130,"column_start":5,"column_end":14}},{"value":"deprecated(note =\n             \"This method is a no-op and will be removed in a future release.\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":627485,"byte_end":627572,"line_start":131,"line_end":131,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":4754},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":628057,"byte_end":628066,"line_start":148,"line_end":148,"column_start":12,"column_end":21},"name":"normalize","qualname":"<Quaternion<N>>::normalize","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Normalizes this quaternion.","sig":null,"attributes":[{"value":"/ Normalizes this quaternion.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":627670,"byte_end":627701,"line_start":136,"line_end":136,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":627706,"byte_end":627709,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":627714,"byte_end":627727,"line_start":138,"line_end":138,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":627732,"byte_end":627739,"line_start":139,"line_end":139,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":627744,"byte_end":627783,"line_start":140,"line_end":140,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":627788,"byte_end":627819,"line_start":141,"line_end":141,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":627824,"byte_end":627872,"line_start":142,"line_end":142,"column_start":5,"column_end":53}},{"value":"/ let q_normalized = q.normalize();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":627877,"byte_end":627914,"line_start":143,"line_end":143,"column_start":5,"column_end":42}},{"value":"/ relative_eq!(q_normalized.norm(), 1.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":627919,"byte_end":627962,"line_start":144,"line_end":144,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":627967,"byte_end":627974,"line_start":145,"line_end":145,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":627979,"byte_end":627988,"line_start":146,"line_end":146,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use normalize_mut()?\"","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":627993,"byte_end":628045,"line_start":147,"line_end":147,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":4755},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":628207,"byte_end":628211,"line_start":154,"line_end":154,"column_start":12,"column_end":16},"name":"imag","qualname":"<Quaternion<N>>::imag","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" The imaginary part of this quaternion.\n","sig":null,"attributes":[{"value":"/ The imaginary part of this quaternion.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":628139,"byte_end":628181,"line_start":152,"line_end":152,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":628186,"byte_end":628195,"line_start":153,"line_end":153,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4756},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":628651,"byte_end":628660,"line_start":169,"line_end":169,"column_start":12,"column_end":21},"name":"conjugate","qualname":"<Quaternion<N>>::conjugate","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The conjugate of this quaternion.","sig":null,"attributes":[{"value":"/ The conjugate of this quaternion.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":628272,"byte_end":628309,"line_start":158,"line_end":158,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":628314,"byte_end":628317,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":628322,"byte_end":628335,"line_start":160,"line_end":160,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":628340,"byte_end":628347,"line_start":161,"line_end":161,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":628352,"byte_end":628383,"line_start":162,"line_end":162,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":628388,"byte_end":628436,"line_start":163,"line_end":163,"column_start":5,"column_end":53}},{"value":"/ let conj = q.conjugate();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":628441,"byte_end":628470,"line_start":164,"line_end":164,"column_start":5,"column_end":34}},{"value":"/ assert!(conj.i == -2.0 && conj.j == -3.0 && conj.k == -4.0 && conj.w == 1.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":628475,"byte_end":628556,"line_start":165,"line_end":165,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":628561,"byte_end":628568,"line_start":166,"line_end":166,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":628573,"byte_end":628582,"line_start":167,"line_end":167,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use conjugate_mut()?\"","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":628587,"byte_end":628639,"line_start":168,"line_end":168,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":4757},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":629147,"byte_end":629151,"line_start":186,"line_end":186,"column_start":12,"column_end":16},"name":"lerp","qualname":"<Quaternion<N>>::lerp","value":"fn (&self, other: &Self, t: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Linear interpolation between two quaternion.","sig":null,"attributes":[{"value":"/ Linear interpolation between two quaternion.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":628736,"byte_end":628784,"line_start":173,"line_end":173,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":628789,"byte_end":628792,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ Computes `self * (1 - t) + other * t`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":628797,"byte_end":628839,"line_start":175,"line_end":175,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":628844,"byte_end":628847,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":628852,"byte_end":628865,"line_start":177,"line_end":177,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":628870,"byte_end":628877,"line_start":178,"line_end":178,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":628882,"byte_end":628913,"line_start":179,"line_end":179,"column_start":5,"column_end":36}},{"value":"/ let q1 = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":628918,"byte_end":628967,"line_start":180,"line_end":180,"column_start":5,"column_end":54}},{"value":"/ let q2 = Quaternion::new(10.0, 20.0, 30.0, 40.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":628972,"byte_end":629025,"line_start":181,"line_end":181,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":629030,"byte_end":629033,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(q1.lerp(&q2, 0.1), Quaternion::new(1.9, 3.8, 5.7, 7.6));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":629038,"byte_end":629109,"line_start":183,"line_end":183,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":629114,"byte_end":629121,"line_start":184,"line_end":184,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":629126,"byte_end":629135,"line_start":185,"line_end":185,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4758},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":629578,"byte_end":629584,"line_start":201,"line_end":201,"column_start":12,"column_end":18},"name":"vector","qualname":"<Quaternion<N>>::vector","value":"fn (&self) -> MatrixSlice<N, U3, U1, RStride<N, U4, U1>, CStride<N, U4, U1>>","parent":null,"children":[],"decl_id":null,"docs":" The vector part `(i, j, k)` of this quaternion.","sig":null,"attributes":[{"value":"/ The vector part `(i, j, k)` of this quaternion.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":629242,"byte_end":629293,"line_start":190,"line_end":190,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":629298,"byte_end":629301,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":629306,"byte_end":629319,"line_start":192,"line_end":192,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":629324,"byte_end":629331,"line_start":193,"line_end":193,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":629336,"byte_end":629367,"line_start":194,"line_end":194,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":629372,"byte_end":629420,"line_start":195,"line_end":195,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(q.vector()[0], 2.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":629425,"byte_end":629460,"line_start":196,"line_end":196,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(q.vector()[1], 3.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":629465,"byte_end":629500,"line_start":197,"line_end":197,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(q.vector()[2], 4.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":629505,"byte_end":629540,"line_start":198,"line_end":198,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":629545,"byte_end":629552,"line_start":199,"line_end":199,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":629557,"byte_end":629566,"line_start":200,"line_end":200,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4759},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":629956,"byte_end":629962,"line_start":214,"line_end":214,"column_start":12,"column_end":18},"name":"scalar","qualname":"<Quaternion<N>>::scalar","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The scalar part `w` of this quaternion.","sig":null,"attributes":[{"value":"/ The scalar part `w` of this quaternion.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":629711,"byte_end":629754,"line_start":205,"line_end":205,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":629759,"byte_end":629762,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":629767,"byte_end":629780,"line_start":207,"line_end":207,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":629785,"byte_end":629792,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":629797,"byte_end":629828,"line_start":209,"line_end":209,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":629833,"byte_end":629881,"line_start":210,"line_end":210,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(q.scalar(), 1.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":629886,"byte_end":629918,"line_start":211,"line_end":211,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":629923,"byte_end":629930,"line_start":212,"line_end":212,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":629935,"byte_end":629944,"line_start":213,"line_end":213,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4760},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":630461,"byte_end":630470,"line_start":229,"line_end":229,"column_start":12,"column_end":21},"name":"as_vector","qualname":"<Quaternion<N>>::as_vector","value":"fn (&self) -> &Vector4<N>","parent":null,"children":[],"decl_id":null,"docs":" Reinterprets this quaternion as a 4D vector.","sig":null,"attributes":[{"value":"/ Reinterprets this quaternion as a 4D vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":630011,"byte_end":630059,"line_start":218,"line_end":218,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":630064,"byte_end":630067,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":630072,"byte_end":630085,"line_start":220,"line_end":220,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":630090,"byte_end":630097,"line_start":221,"line_end":221,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Vector4, Quaternion};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":630102,"byte_end":630144,"line_start":222,"line_end":222,"column_start":5,"column_end":47}},{"value":"/ let q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":630149,"byte_end":630197,"line_start":223,"line_end":223,"column_start":5,"column_end":53}},{"value":"/ // Recall that the quaternion is stored internally as (i, j, k, w)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":630202,"byte_end":630272,"line_start":224,"line_end":224,"column_start":5,"column_end":75}},{"value":"/ // while the crate::new constructor takes the arguments as (w, i, j, k).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":630277,"byte_end":630353,"line_start":225,"line_end":225,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(*q.as_vector(), Vector4::new(2.0, 3.0, 4.0, 1.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":630358,"byte_end":630423,"line_start":226,"line_end":226,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":630428,"byte_end":630435,"line_start":227,"line_end":227,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":630440,"byte_end":630449,"line_start":228,"line_end":228,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4761},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":630837,"byte_end":630841,"line_start":243,"line_end":243,"column_start":12,"column_end":16},"name":"norm","qualname":"<Quaternion<N>>::norm","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The norm of this quaternion.","sig":null,"attributes":[{"value":"/ The norm of this quaternion.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":630527,"byte_end":630559,"line_start":233,"line_end":233,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":630564,"byte_end":630567,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":630572,"byte_end":630585,"line_start":235,"line_end":235,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":630590,"byte_end":630597,"line_start":236,"line_end":236,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":630602,"byte_end":630641,"line_start":237,"line_end":237,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":630646,"byte_end":630677,"line_start":238,"line_end":238,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":630682,"byte_end":630730,"line_start":239,"line_end":239,"column_start":5,"column_end":53}},{"value":"/ assert_relative_eq!(q.norm(), 5.47722557, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":630735,"byte_end":630799,"line_start":240,"line_end":240,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":630804,"byte_end":630811,"line_start":241,"line_end":241,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":630816,"byte_end":630825,"line_start":242,"line_end":242,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4762},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":631293,"byte_end":631302,"line_start":260,"line_end":260,"column_start":12,"column_end":21},"name":"magnitude","qualname":"<Quaternion<N>>::magnitude","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" A synonym for the norm of this quaternion.","sig":null,"attributes":[{"value":"/ A synonym for the norm of this quaternion.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":630894,"byte_end":630940,"line_start":247,"line_end":247,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":630945,"byte_end":630948,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ Aka the length.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":630953,"byte_end":630972,"line_start":249,"line_end":249,"column_start":5,"column_end":24}},{"value":"/ This is the same as `.norm()`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":630977,"byte_end":631010,"line_start":250,"line_end":250,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":631015,"byte_end":631018,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":631023,"byte_end":631036,"line_start":252,"line_end":252,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":631041,"byte_end":631048,"line_start":253,"line_end":253,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":631053,"byte_end":631092,"line_start":254,"line_end":254,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":631097,"byte_end":631128,"line_start":255,"line_end":255,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":631133,"byte_end":631181,"line_start":256,"line_end":256,"column_start":5,"column_end":53}},{"value":"/ assert_relative_eq!(q.magnitude(), 5.47722557, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":631186,"byte_end":631255,"line_start":257,"line_end":257,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":631260,"byte_end":631267,"line_start":258,"line_end":258,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":631272,"byte_end":631281,"line_start":259,"line_end":259,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4763},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":631602,"byte_end":631614,"line_start":273,"line_end":273,"column_start":12,"column_end":24},"name":"norm_squared","qualname":"<Quaternion<N>>::norm_squared","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The squared norm of this quaternion.","sig":null,"attributes":[{"value":"/ The squared norm of this quaternion.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":631348,"byte_end":631388,"line_start":264,"line_end":264,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":631393,"byte_end":631396,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":631401,"byte_end":631414,"line_start":266,"line_end":266,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":631419,"byte_end":631426,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":631431,"byte_end":631462,"line_start":268,"line_end":268,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":631467,"byte_end":631515,"line_start":269,"line_end":269,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(q.magnitude_squared(), 30.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":631520,"byte_end":631564,"line_start":270,"line_end":270,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":631569,"byte_end":631576,"line_start":271,"line_end":271,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":631581,"byte_end":631590,"line_start":272,"line_end":272,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4764},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":632029,"byte_end":632046,"line_start":289,"line_end":289,"column_start":12,"column_end":29},"name":"magnitude_squared","qualname":"<Quaternion<N>>::magnitude_squared","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" A synonym for the squared norm of this quaternion.","sig":null,"attributes":[{"value":"/ A synonym for the squared norm of this quaternion.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":631675,"byte_end":631729,"line_start":277,"line_end":277,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":631734,"byte_end":631737,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ Aka the squared length.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":631742,"byte_end":631769,"line_start":279,"line_end":279,"column_start":5,"column_end":32}},{"value":"/ This is the same as `.norm_squared()`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":631774,"byte_end":631815,"line_start":280,"line_end":280,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":631820,"byte_end":631823,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":631828,"byte_end":631841,"line_start":282,"line_end":282,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":631846,"byte_end":631853,"line_start":283,"line_end":283,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":631858,"byte_end":631889,"line_start":284,"line_end":284,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":631894,"byte_end":631942,"line_start":285,"line_end":285,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(q.magnitude_squared(), 30.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":631947,"byte_end":631991,"line_start":286,"line_end":286,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":631996,"byte_end":632003,"line_start":287,"line_end":287,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":632008,"byte_end":632017,"line_start":288,"line_end":288,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4765},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":632398,"byte_end":632401,"line_start":303,"line_end":303,"column_start":12,"column_end":15},"name":"dot","qualname":"<Quaternion<N>>::dot","value":"fn (&self, rhs: &Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The dot product of two quaternions.","sig":null,"attributes":[{"value":"/ The dot product of two quaternions.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":632100,"byte_end":632139,"line_start":293,"line_end":293,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":632144,"byte_end":632147,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":632152,"byte_end":632165,"line_start":295,"line_end":295,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":632170,"byte_end":632177,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":632182,"byte_end":632213,"line_start":297,"line_end":297,"column_start":5,"column_end":36}},{"value":"/ let q1 = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":632218,"byte_end":632267,"line_start":298,"line_end":298,"column_start":5,"column_end":54}},{"value":"/ let q2 = Quaternion::new(5.0, 6.0, 7.0, 8.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":632272,"byte_end":632321,"line_start":299,"line_end":299,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(q1.dot(&q2), 70.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":632326,"byte_end":632360,"line_start":300,"line_end":300,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":632365,"byte_end":632372,"line_start":301,"line_end":301,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":632377,"byte_end":632386,"line_start":302,"line_end":302,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4768},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":633293,"byte_end":633304,"line_start":334,"line_end":334,"column_start":12,"column_end":23},"name":"try_inverse","qualname":"<Quaternion<N>>::try_inverse","value":"fn (&self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Inverts this quaternion if it is not zero.","sig":null,"attributes":[{"value":"/ Inverts this quaternion if it is not zero.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":632554,"byte_end":632600,"line_start":312,"line_end":312,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":632605,"byte_end":632608,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ This method also does not works with SIMD components (see `simd_try_inverse` instead).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":632613,"byte_end":632703,"line_start":314,"line_end":314,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":632708,"byte_end":632711,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":632716,"byte_end":632729,"line_start":316,"line_end":316,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":632734,"byte_end":632741,"line_start":317,"line_end":317,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":632746,"byte_end":632785,"line_start":318,"line_end":318,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":632790,"byte_end":632821,"line_start":319,"line_end":319,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":632826,"byte_end":632874,"line_start":320,"line_end":320,"column_start":5,"column_end":53}},{"value":"/ let inv_q = q.try_inverse();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":632879,"byte_end":632911,"line_start":321,"line_end":321,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":632916,"byte_end":632919,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ assert!(inv_q.is_some());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":632924,"byte_end":632953,"line_start":323,"line_end":323,"column_start":5,"column_end":34}},{"value":"/ assert_relative_eq!(inv_q.unwrap() * q, Quaternion::identity());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":632958,"byte_end":633026,"line_start":324,"line_end":324,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":633031,"byte_end":633034,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ //Non-invertible case","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":633039,"byte_end":633064,"line_start":326,"line_end":326,"column_start":5,"column_end":30}},{"value":"/ let q = Quaternion::new(0.0, 0.0, 0.0, 0.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":633069,"byte_end":633117,"line_start":327,"line_end":327,"column_start":5,"column_end":53}},{"value":"/ let inv_q = q.try_inverse();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":633122,"byte_end":633154,"line_start":328,"line_end":328,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":633159,"byte_end":633162,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ assert!(inv_q.is_none());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":633167,"byte_end":633196,"line_start":330,"line_end":330,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":633201,"byte_end":633208,"line_start":331,"line_end":331,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":633213,"byte_end":633222,"line_start":332,"line_end":332,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use try_inverse_mut()?\"","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":633227,"byte_end":633281,"line_start":333,"line_end":333,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":4769},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":633700,"byte_end":633716,"line_start":352,"line_end":352,"column_start":12,"column_end":28},"name":"simd_try_inverse","qualname":"<Quaternion<N>>::simd_try_inverse","value":"fn (&self) -> SimdOption<Self>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to inverse this quaternion.","sig":null,"attributes":[{"value":"/ Attempt to inverse this quaternion.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":633515,"byte_end":633554,"line_start":347,"line_end":347,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":633559,"byte_end":633562,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ This method also works with SIMD components.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":633567,"byte_end":633615,"line_start":349,"line_end":349,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":633620,"byte_end":633629,"line_start":350,"line_end":350,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use try_inverse_mut()?\"","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":633634,"byte_end":633688,"line_start":351,"line_end":351,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":4770},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":634517,"byte_end":634522,"line_start":372,"line_end":372,"column_start":12,"column_end":17},"name":"inner","qualname":"<Quaternion<N>>::inner","value":"fn (&self, other: &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the inner product (also known as the dot product).\n See \"Foundations of Game Engine Development, Volume 1: Mathematics\" by Lengyel\n Formula 4.89.","sig":null,"attributes":[{"value":"/ Calculates the inner product (also known as the dot product).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":633932,"byte_end":633997,"line_start":358,"line_end":358,"column_start":5,"column_end":70}},{"value":"/ See \"Foundations of Game Engine Development, Volume 1: Mathematics\" by Lengyel","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":634002,"byte_end":634084,"line_start":359,"line_end":359,"column_start":5,"column_end":87}},{"value":"/ Formula 4.89.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":634089,"byte_end":634106,"line_start":360,"line_end":360,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":634111,"byte_end":634114,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":634119,"byte_end":634132,"line_start":362,"line_end":362,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":634137,"byte_end":634144,"line_start":363,"line_end":363,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":634149,"byte_end":634188,"line_start":364,"line_end":364,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":634193,"byte_end":634224,"line_start":365,"line_end":365,"column_start":5,"column_end":36}},{"value":"/ let a = Quaternion::new(0.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":634229,"byte_end":634277,"line_start":366,"line_end":366,"column_start":5,"column_end":53}},{"value":"/ let b = Quaternion::new(0.0, 5.0, 2.0, 1.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":634282,"byte_end":634330,"line_start":367,"line_end":367,"column_start":5,"column_end":53}},{"value":"/ let expected = Quaternion::new(-20.0, 0.0, 0.0, 0.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":634335,"byte_end":634392,"line_start":368,"line_end":368,"column_start":5,"column_end":62}},{"value":"/ let result = a.inner(&b);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":634397,"byte_end":634426,"line_start":369,"line_end":369,"column_start":5,"column_end":34}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-5);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":634431,"byte_end":634491,"line_start":370,"line_end":370,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":634496,"byte_end":634505,"line_start":371,"line_end":371,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4771},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":635211,"byte_end":635216,"line_start":391,"line_end":391,"column_start":12,"column_end":17},"name":"outer","qualname":"<Quaternion<N>>::outer","value":"fn (&self, other: &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the outer product (also known as the wedge product).\n See \"Foundations of Game Engine Development, Volume 1: Mathematics\" by Lengyel\n Formula 4.89.","sig":null,"attributes":[{"value":"/ Calculates the outer product (also known as the wedge product).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":634610,"byte_end":634677,"line_start":376,"line_end":376,"column_start":5,"column_end":72}},{"value":"/ See \"Foundations of Game Engine Development, Volume 1: Mathematics\" by Lengyel","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":634682,"byte_end":634764,"line_start":377,"line_end":377,"column_start":5,"column_end":87}},{"value":"/ Formula 4.89.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":634769,"byte_end":634786,"line_start":378,"line_end":378,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":634791,"byte_end":634794,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":634799,"byte_end":634812,"line_start":380,"line_end":380,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":634817,"byte_end":634824,"line_start":381,"line_end":381,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":634829,"byte_end":634868,"line_start":382,"line_end":382,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":634873,"byte_end":634904,"line_start":383,"line_end":383,"column_start":5,"column_end":36}},{"value":"/ let a = Quaternion::new(0.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":634909,"byte_end":634957,"line_start":384,"line_end":384,"column_start":5,"column_end":53}},{"value":"/ let b = Quaternion::new(0.0, 5.0, 2.0, 1.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":634962,"byte_end":635010,"line_start":385,"line_end":385,"column_start":5,"column_end":53}},{"value":"/ let expected = Quaternion::new(0.0, -5.0, 18.0, -11.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":635015,"byte_end":635074,"line_start":386,"line_end":386,"column_start":5,"column_end":64}},{"value":"/ let result = a.outer(&b);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":635079,"byte_end":635108,"line_start":387,"line_end":387,"column_start":5,"column_end":34}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-5);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":635113,"byte_end":635173,"line_start":388,"line_end":388,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":635178,"byte_end":635185,"line_start":389,"line_end":389,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":635190,"byte_end":635199,"line_start":390,"line_end":390,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4772},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":635971,"byte_end":635978,"line_start":410,"line_end":410,"column_start":12,"column_end":19},"name":"project","qualname":"<Quaternion<N>>::project","value":"fn (&self, other: &Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Calculates the projection of `self` onto `other` (also known as the parallel).\n See \"Foundations of Game Engine Development, Volume 1: Mathematics\" by Lengyel\n Formula 4.94.","sig":null,"attributes":[{"value":"/ Calculates the projection of `self` onto `other` (also known as the parallel).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":635304,"byte_end":635386,"line_start":395,"line_end":395,"column_start":5,"column_end":87}},{"value":"/ See \"Foundations of Game Engine Development, Volume 1: Mathematics\" by Lengyel","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":635391,"byte_end":635473,"line_start":396,"line_end":396,"column_start":5,"column_end":87}},{"value":"/ Formula 4.94.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":635478,"byte_end":635495,"line_start":397,"line_end":397,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":635500,"byte_end":635503,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":635508,"byte_end":635521,"line_start":399,"line_end":399,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":635526,"byte_end":635533,"line_start":400,"line_end":400,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":635538,"byte_end":635577,"line_start":401,"line_end":401,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":635582,"byte_end":635613,"line_start":402,"line_end":402,"column_start":5,"column_end":36}},{"value":"/ let a = Quaternion::new(0.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":635618,"byte_end":635666,"line_start":403,"line_end":403,"column_start":5,"column_end":53}},{"value":"/ let b = Quaternion::new(0.0, 5.0, 2.0, 1.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":635671,"byte_end":635719,"line_start":404,"line_end":404,"column_start":5,"column_end":53}},{"value":"/ let expected = Quaternion::new(0.0, 3.333333333333333, 1.3333333333333333, 0.6666666666666666);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":635724,"byte_end":635823,"line_start":405,"line_end":405,"column_start":5,"column_end":104}},{"value":"/ let result = a.project(&b).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":635828,"byte_end":635868,"line_start":406,"line_end":406,"column_start":5,"column_end":45}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-5);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":635873,"byte_end":635933,"line_start":407,"line_end":407,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":635938,"byte_end":635945,"line_start":408,"line_end":408,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":635950,"byte_end":635959,"line_start":409,"line_end":409,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4773},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":636780,"byte_end":636786,"line_start":432,"line_end":432,"column_start":12,"column_end":18},"name":"reject","qualname":"<Quaternion<N>>::reject","value":"fn (&self, other: &Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Calculates the rejection of `self` from `other` (also known as the perpendicular).\n See \"Foundations of Game Engine Development, Volume 1: Mathematics\" by Lengyel\n Formula 4.94.","sig":null,"attributes":[{"value":"/ Calculates the rejection of `self` from `other` (also known as the perpendicular).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":636108,"byte_end":636194,"line_start":417,"line_end":417,"column_start":5,"column_end":91}},{"value":"/ See \"Foundations of Game Engine Development, Volume 1: Mathematics\" by Lengyel","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":636199,"byte_end":636281,"line_start":418,"line_end":418,"column_start":5,"column_end":87}},{"value":"/ Formula 4.94.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":636286,"byte_end":636303,"line_start":419,"line_end":419,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":636308,"byte_end":636311,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":636316,"byte_end":636329,"line_start":421,"line_end":421,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":636334,"byte_end":636341,"line_start":422,"line_end":422,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":636346,"byte_end":636385,"line_start":423,"line_end":423,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":636390,"byte_end":636421,"line_start":424,"line_end":424,"column_start":5,"column_end":36}},{"value":"/ let a = Quaternion::new(0.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":636426,"byte_end":636474,"line_start":425,"line_end":425,"column_start":5,"column_end":53}},{"value":"/ let b = Quaternion::new(0.0, 5.0, 2.0, 1.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":636479,"byte_end":636527,"line_start":426,"line_end":426,"column_start":5,"column_end":53}},{"value":"/ let expected = Quaternion::new(0.0, -1.3333333333333333, 1.6666666666666665, 3.3333333333333335);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":636532,"byte_end":636633,"line_start":427,"line_end":427,"column_start":5,"column_end":106}},{"value":"/ let result = a.reject(&b).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":636638,"byte_end":636677,"line_start":428,"line_end":428,"column_start":5,"column_end":44}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-5);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":636682,"byte_end":636742,"line_start":429,"line_end":429,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":636747,"byte_end":636754,"line_start":430,"line_end":430,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":636759,"byte_end":636768,"line_start":431,"line_end":431,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4774},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":637532,"byte_end":637551,"line_start":454,"line_end":454,"column_start":12,"column_end":31},"name":"polar_decomposition","qualname":"<Quaternion<N>>::polar_decomposition","value":"fn (&self) -> (N, N, Option<Unit<Vector3<N>>>)","parent":null,"children":[],"decl_id":null,"docs":" The polar decomposition of this quaternion.","sig":null,"attributes":[{"value":"/ The polar decomposition of this quaternion.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":636916,"byte_end":636963,"line_start":439,"line_end":439,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":636968,"byte_end":636971,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ Returns, from left to right: the quaternion norm, the half rotation angle, the rotation","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":636976,"byte_end":637067,"line_start":441,"line_end":441,"column_start":5,"column_end":96}},{"value":"/ axis. If the rotation angle is zero, the rotation axis is set to `None`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":637072,"byte_end":637148,"line_start":442,"line_end":442,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":637153,"byte_end":637156,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":637161,"byte_end":637174,"line_start":444,"line_end":444,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":637179,"byte_end":637186,"line_start":445,"line_end":445,"column_start":5,"column_end":12}},{"value":"/ # use std::f32;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":637191,"byte_end":637210,"line_start":446,"line_end":446,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Vector3, Quaternion};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":637215,"byte_end":637257,"line_start":447,"line_end":447,"column_start":5,"column_end":47}},{"value":"/ let q = Quaternion::new(0.0, 5.0, 0.0, 0.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":637262,"byte_end":637310,"line_start":448,"line_end":448,"column_start":5,"column_end":53}},{"value":"/ let (norm, half_ang, axis) = q.polar_decomposition();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":637315,"byte_end":637372,"line_start":449,"line_end":449,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(norm, 5.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":637377,"byte_end":637403,"line_start":450,"line_end":450,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(half_ang, f32::consts::FRAC_PI_2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":637408,"byte_end":637457,"line_start":451,"line_end":451,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(axis, Some(Vector3::x_axis()));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":637462,"byte_end":637508,"line_start":452,"line_end":452,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":637513,"byte_end":637520,"line_start":453,"line_end":453,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4775},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":638408,"byte_end":638410,"line_start":481,"line_end":481,"column_start":12,"column_end":14},"name":"ln","qualname":"<Quaternion<N>>::ln","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Compute the natural logarithm of a quaternion.","sig":null,"attributes":[{"value":"/ Compute the natural logarithm of a quaternion.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":638048,"byte_end":638098,"line_start":471,"line_end":471,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":638103,"byte_end":638106,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":638111,"byte_end":638124,"line_start":473,"line_end":473,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":638129,"byte_end":638136,"line_start":474,"line_end":474,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":638141,"byte_end":638180,"line_start":475,"line_end":475,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":638185,"byte_end":638216,"line_start":476,"line_end":476,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(2.0, 5.0, 0.0, 0.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":638221,"byte_end":638269,"line_start":477,"line_end":477,"column_start":5,"column_end":53}},{"value":"/ assert_relative_eq!(q.ln(), Quaternion::new(1.683647, 1.190289, 0.0, 0.0), epsilon = 1.0e-6)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":638274,"byte_end":638370,"line_start":478,"line_end":478,"column_start":5,"column_end":101}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":638375,"byte_end":638382,"line_start":479,"line_end":479,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":638387,"byte_end":638396,"line_start":480,"line_end":480,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4776},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":638961,"byte_end":638964,"line_start":499,"line_end":499,"column_start":12,"column_end":15},"name":"exp","qualname":"<Quaternion<N>>::exp","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Compute the exponential of a quaternion.","sig":null,"attributes":[{"value":"/ Compute the exponential of a quaternion.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":638606,"byte_end":638650,"line_start":489,"line_end":489,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":638655,"byte_end":638658,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":638663,"byte_end":638676,"line_start":491,"line_end":491,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":638681,"byte_end":638688,"line_start":492,"line_end":492,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":638693,"byte_end":638732,"line_start":493,"line_end":493,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":638737,"byte_end":638768,"line_start":494,"line_end":494,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(1.683647, 1.190289, 0.0, 0.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":638773,"byte_end":638831,"line_start":495,"line_end":495,"column_start":5,"column_end":63}},{"value":"/ assert_relative_eq!(q.exp(), Quaternion::new(2.0, 5.0, 0.0, 0.0), epsilon = 1.0e-5)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":638836,"byte_end":638923,"line_start":496,"line_end":496,"column_start":5,"column_end":92}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":638928,"byte_end":638935,"line_start":497,"line_end":497,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":638940,"byte_end":638949,"line_start":498,"line_end":498,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4777},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":639661,"byte_end":639668,"line_start":518,"line_end":518,"column_start":12,"column_end":19},"name":"exp_eps","qualname":"<Quaternion<N>>::exp_eps","value":"fn (&self, eps: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Compute the exponential of a quaternion. Returns the identity if the vector part of this quaternion\n has a norm smaller than `eps`.","sig":null,"attributes":[{"value":"/ Compute the exponential of a quaternion. Returns the identity if the vector part of this quaternion","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":639041,"byte_end":639144,"line_start":503,"line_end":503,"column_start":5,"column_end":108}},{"value":"/ has a norm smaller than `eps`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":639149,"byte_end":639183,"line_start":504,"line_end":504,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":639188,"byte_end":639191,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":639196,"byte_end":639209,"line_start":506,"line_end":506,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":639214,"byte_end":639221,"line_start":507,"line_end":507,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":639226,"byte_end":639265,"line_start":508,"line_end":508,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":639270,"byte_end":639301,"line_start":509,"line_end":509,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(1.683647, 1.190289, 0.0, 0.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":639306,"byte_end":639364,"line_start":510,"line_end":510,"column_start":5,"column_end":63}},{"value":"/ assert_relative_eq!(q.exp_eps(1.0e-6), Quaternion::new(2.0, 5.0, 0.0, 0.0), epsilon = 1.0e-5);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":639369,"byte_end":639467,"line_start":511,"line_end":511,"column_start":5,"column_end":103}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":639472,"byte_end":639475,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ // Singular case.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":639480,"byte_end":639501,"line_start":513,"line_end":513,"column_start":5,"column_end":26}},{"value":"/ let q = Quaternion::new(0.0000001, 0.0, 0.0, 0.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":639506,"byte_end":639560,"line_start":514,"line_end":514,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(q.exp_eps(1.0e-6), Quaternion::identity());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":639565,"byte_end":639623,"line_start":515,"line_end":515,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":639628,"byte_end":639635,"line_start":516,"line_end":516,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":639640,"byte_end":639649,"line_start":517,"line_end":517,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4780},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":640500,"byte_end":640504,"line_start":544,"line_end":544,"column_start":12,"column_end":16},"name":"powf","qualname":"<Quaternion<N>>::powf","value":"fn (&self, n: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Raise the quaternion to a given floating power.","sig":null,"attributes":[{"value":"/ Raise the quaternion to a given floating power.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":640117,"byte_end":640168,"line_start":534,"line_end":534,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":640173,"byte_end":640176,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":640181,"byte_end":640194,"line_start":536,"line_end":536,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":640199,"byte_end":640206,"line_start":537,"line_end":537,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":640211,"byte_end":640250,"line_start":538,"line_end":538,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":640255,"byte_end":640286,"line_start":539,"line_end":539,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":640291,"byte_end":640339,"line_start":540,"line_end":540,"column_start":5,"column_end":53}},{"value":"/ assert_relative_eq!(q.powf(1.5), Quaternion::new( -6.2576659, 4.1549037, 6.2323556, 8.3098075), epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":640344,"byte_end":640462,"line_start":541,"line_end":541,"column_start":5,"column_end":123}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":640467,"byte_end":640474,"line_start":542,"line_end":542,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":640479,"byte_end":640488,"line_start":543,"line_end":543,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4781},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":640952,"byte_end":640965,"line_start":558,"line_end":558,"column_start":12,"column_end":25},"name":"as_vector_mut","qualname":"<Quaternion<N>>::as_vector_mut","value":"fn (&mut self) -> &mut Vector4<N>","parent":null,"children":[],"decl_id":null,"docs":" Transforms this quaternion into its 4D vector form (Vector part, Scalar part).","sig":null,"attributes":[{"value":"/ Transforms this quaternion into its 4D vector form (Vector part, Scalar part).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":640569,"byte_end":640651,"line_start":548,"line_end":548,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":640656,"byte_end":640659,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":640664,"byte_end":640677,"line_start":550,"line_end":550,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":640682,"byte_end":640689,"line_start":551,"line_end":551,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Quaternion, Vector4};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":640694,"byte_end":640736,"line_start":552,"line_end":552,"column_start":5,"column_end":47}},{"value":"/ let mut q = Quaternion::identity();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":640741,"byte_end":640780,"line_start":553,"line_end":553,"column_start":5,"column_end":44}},{"value":"/ *q.as_vector_mut() = Vector4::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":640785,"byte_end":640843,"line_start":554,"line_end":554,"column_start":5,"column_end":63}},{"value":"/ assert!(q.i == 1.0 && q.j == 2.0 && q.k == 3.0 && q.w == 4.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":640848,"byte_end":640914,"line_start":555,"line_end":555,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":640919,"byte_end":640926,"line_start":556,"line_end":556,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":640931,"byte_end":640940,"line_start":557,"line_end":557,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4782},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":641463,"byte_end":641473,"line_start":577,"line_end":577,"column_start":12,"column_end":22},"name":"vector_mut","qualname":"<Quaternion<N>>::vector_mut","value":"fn (&mut self) -> MatrixSliceMut<N, U3, U1, RStride<N, U4, U1>, CStride<N, U4, U1>>","parent":null,"children":[],"decl_id":null,"docs":" The mutable vector part `(i, j, k)` of this quaternion.","sig":null,"attributes":[{"value":"/ The mutable vector part `(i, j, k)` of this quaternion.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":641034,"byte_end":641093,"line_start":562,"line_end":562,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":641098,"byte_end":641101,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":641106,"byte_end":641119,"line_start":564,"line_end":564,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":641124,"byte_end":641131,"line_start":565,"line_end":565,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Quaternion, Vector4};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":641136,"byte_end":641178,"line_start":566,"line_end":566,"column_start":5,"column_end":47}},{"value":"/ let mut q = Quaternion::identity();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":641183,"byte_end":641222,"line_start":567,"line_end":567,"column_start":5,"column_end":44}},{"value":"/ {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":641227,"byte_end":641232,"line_start":568,"line_end":568,"column_start":5,"column_end":10}},{"value":"/     let mut v = q.vector_mut();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":641237,"byte_end":641272,"line_start":569,"line_end":569,"column_start":5,"column_end":40}},{"value":"/     v[0] = 2.0;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":641277,"byte_end":641296,"line_start":570,"line_end":570,"column_start":5,"column_end":24}},{"value":"/     v[1] = 3.0;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":641301,"byte_end":641320,"line_start":571,"line_end":571,"column_start":5,"column_end":24}},{"value":"/     v[2] = 4.0;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":641325,"byte_end":641344,"line_start":572,"line_end":572,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":641349,"byte_end":641354,"line_start":573,"line_end":573,"column_start":5,"column_end":10}},{"value":"/ assert!(q.i == 2.0 && q.j == 3.0 && q.k == 4.0 && q.w == 1.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":641359,"byte_end":641425,"line_start":574,"line_end":574,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":641430,"byte_end":641437,"line_start":575,"line_end":575,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":641442,"byte_end":641451,"line_start":576,"line_end":576,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4783},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":641942,"byte_end":641955,"line_start":593,"line_end":593,"column_start":12,"column_end":25},"name":"conjugate_mut","qualname":"<Quaternion<N>>::conjugate_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Replaces this quaternion by its conjugate.","sig":null,"attributes":[{"value":"/ Replaces this quaternion by its conjugate.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":641626,"byte_end":641672,"line_start":583,"line_end":583,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":641677,"byte_end":641680,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":641685,"byte_end":641698,"line_start":585,"line_end":585,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":641703,"byte_end":641710,"line_start":586,"line_end":586,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":641715,"byte_end":641746,"line_start":587,"line_end":587,"column_start":5,"column_end":36}},{"value":"/ let mut q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":641751,"byte_end":641803,"line_start":588,"line_end":588,"column_start":5,"column_end":57}},{"value":"/ q.conjugate_mut();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":641808,"byte_end":641830,"line_start":589,"line_end":589,"column_start":5,"column_end":27}},{"value":"/ assert!(q.i == -2.0 && q.j == -3.0 && q.k == -4.0 && q.w == 1.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":641835,"byte_end":641904,"line_start":590,"line_end":590,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":641909,"byte_end":641916,"line_start":591,"line_end":591,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":641921,"byte_end":641930,"line_start":592,"line_end":592,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4784},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":642654,"byte_end":642669,"line_start":615,"line_end":615,"column_start":12,"column_end":27},"name":"try_inverse_mut","qualname":"<Quaternion<N>>::try_inverse_mut","value":"fn (&mut self) -> N::SimdBool","parent":null,"children":[],"decl_id":null,"docs":" Inverts this quaternion in-place if it is not zero.","sig":null,"attributes":[{"value":"/ Inverts this quaternion in-place if it is not zero.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":642106,"byte_end":642161,"line_start":599,"line_end":599,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":642166,"byte_end":642169,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":642174,"byte_end":642187,"line_start":601,"line_end":601,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":642192,"byte_end":642199,"line_start":602,"line_end":602,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":642204,"byte_end":642243,"line_start":603,"line_end":603,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":642248,"byte_end":642279,"line_start":604,"line_end":604,"column_start":5,"column_end":36}},{"value":"/ let mut q = Quaternion::new(1.0f32, 2.0, 3.0, 4.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":642284,"byte_end":642339,"line_start":605,"line_end":605,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":642344,"byte_end":642347,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ assert!(q.try_inverse_mut());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":642352,"byte_end":642385,"line_start":607,"line_end":607,"column_start":5,"column_end":38}},{"value":"/ assert_relative_eq!(q * Quaternion::new(1.0, 2.0, 3.0, 4.0), Quaternion::identity());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":642390,"byte_end":642479,"line_start":608,"line_end":608,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":642484,"byte_end":642487,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ //Non-invertible case","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":642492,"byte_end":642517,"line_start":610,"line_end":610,"column_start":5,"column_end":30}},{"value":"/ let mut q = Quaternion::new(0.0f32, 0.0, 0.0, 0.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":642522,"byte_end":642577,"line_start":611,"line_end":611,"column_start":5,"column_end":60}},{"value":"/ assert!(!q.try_inverse_mut());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":642582,"byte_end":642616,"line_start":612,"line_end":612,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":642621,"byte_end":642628,"line_start":613,"line_end":613,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":642633,"byte_end":642642,"line_start":614,"line_end":614,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4787},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":643223,"byte_end":643236,"line_start":633,"line_end":633,"column_start":12,"column_end":25},"name":"normalize_mut","qualname":"<Quaternion<N>>::normalize_mut","value":"fn (&mut self) -> N","parent":null,"children":[],"decl_id":null,"docs":" Normalizes this quaternion.","sig":null,"attributes":[{"value":"/ Normalizes this quaternion.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":642908,"byte_end":642939,"line_start":622,"line_end":622,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":642944,"byte_end":642947,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":642952,"byte_end":642965,"line_start":624,"line_end":624,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":642970,"byte_end":642977,"line_start":625,"line_end":625,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":642982,"byte_end":643021,"line_start":626,"line_end":626,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":643026,"byte_end":643057,"line_start":627,"line_end":627,"column_start":5,"column_end":36}},{"value":"/ let mut q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":643062,"byte_end":643114,"line_start":628,"line_end":628,"column_start":5,"column_end":57}},{"value":"/ q.normalize_mut();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":643119,"byte_end":643141,"line_start":629,"line_end":629,"column_start":5,"column_end":27}},{"value":"/ assert_relative_eq!(q.norm(), 1.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":643146,"byte_end":643185,"line_start":630,"line_end":630,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":643190,"byte_end":643197,"line_start":631,"line_end":631,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":643202,"byte_end":643211,"line_start":632,"line_end":632,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4788},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":643366,"byte_end":643373,"line_start":639,"line_end":639,"column_start":12,"column_end":19},"name":"squared","qualname":"<Quaternion<N>>::squared","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates square of a quaternion.\n","sig":null,"attributes":[{"value":"/ Calculates square of a quaternion.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":643302,"byte_end":643340,"line_start":637,"line_end":637,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":643345,"byte_end":643354,"line_start":638,"line_end":638,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4789},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":643480,"byte_end":643484,"line_start":645,"line_end":645,"column_start":12,"column_end":16},"name":"half","qualname":"<Quaternion<N>>::half","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Divides quaternion into two.\n","sig":null,"attributes":[{"value":"/ Divides quaternion into two.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":643422,"byte_end":643454,"line_start":643,"line_end":643,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":643459,"byte_end":643468,"line_start":644,"line_end":644,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4790},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":643604,"byte_end":643608,"line_start":651,"line_end":651,"column_start":12,"column_end":16},"name":"sqrt","qualname":"<Quaternion<N>>::sqrt","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates square root.\n","sig":null,"attributes":[{"value":"/ Calculates square root.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":643551,"byte_end":643578,"line_start":649,"line_end":649,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":643583,"byte_end":643592,"line_start":650,"line_end":650,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4791},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":643817,"byte_end":643824,"line_start":659,"line_end":659,"column_start":12,"column_end":19},"name":"is_pure","qualname":"<Quaternion<N>>::is_pure","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the quaternion is pure.","sig":null,"attributes":[{"value":"/ Check if the quaternion is pure.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":643676,"byte_end":643712,"line_start":655,"line_end":655,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":643717,"byte_end":643720,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ A quaternion is pure if it has no real part (`self.w == 0.0`).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":643725,"byte_end":643791,"line_start":657,"line_end":657,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":643796,"byte_end":643805,"line_start":658,"line_end":658,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4792},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":643946,"byte_end":643950,"line_start":665,"line_end":665,"column_start":12,"column_end":16},"name":"pure","qualname":"<Quaternion<N>>::pure","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert quaternion to pure quaternion.\n","sig":null,"attributes":[{"value":"/ Convert quaternion to pure quaternion.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":643878,"byte_end":643920,"line_start":663,"line_end":663,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":643925,"byte_end":643934,"line_start":664,"line_end":664,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4793},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":644146,"byte_end":644154,"line_start":673,"line_end":673,"column_start":12,"column_end":20},"name":"left_div","qualname":"<Quaternion<N>>::left_div","value":"fn (&self, other: &Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Left quaternionic division.","sig":null,"attributes":[{"value":"/ Left quaternionic division.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":644016,"byte_end":644047,"line_start":669,"line_end":669,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":644052,"byte_end":644055,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ Calculates B<sup>-1</sup> * A where A = self, B = other.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":644060,"byte_end":644120,"line_start":671,"line_end":671,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":644125,"byte_end":644134,"line_start":672,"line_end":672,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4795},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":644878,"byte_end":644887,"line_start":695,"line_end":695,"column_start":12,"column_end":21},"name":"right_div","qualname":"<Quaternion<N>>::right_div","value":"fn (&self, other: &Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Right quaternionic division.","sig":null,"attributes":[{"value":"/ Right quaternionic division.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":644291,"byte_end":644323,"line_start":680,"line_end":680,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":644328,"byte_end":644331,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ Calculates A * B<sup>-1</sup> where A = self, B = other.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":644336,"byte_end":644396,"line_start":682,"line_end":682,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":644401,"byte_end":644404,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":644409,"byte_end":644422,"line_start":684,"line_end":684,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":644427,"byte_end":644434,"line_start":685,"line_end":685,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":644439,"byte_end":644478,"line_start":686,"line_end":686,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":644483,"byte_end":644514,"line_start":687,"line_end":687,"column_start":5,"column_end":36}},{"value":"/ let a = Quaternion::new(0.0, 1.0, 2.0, 3.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":644519,"byte_end":644567,"line_start":688,"line_end":688,"column_start":5,"column_end":53}},{"value":"/ let b = Quaternion::new(0.0, 5.0, 2.0, 1.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":644572,"byte_end":644620,"line_start":689,"line_end":689,"column_start":5,"column_end":53}},{"value":"/ let result = a.right_div(&b).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":644625,"byte_end":644667,"line_start":690,"line_end":690,"column_start":5,"column_end":47}},{"value":"/ let expected = Quaternion::new(0.4, 0.13333333333333336, -0.4666666666666667, 0.26666666666666666);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":644672,"byte_end":644775,"line_start":691,"line_end":691,"column_start":5,"column_end":108}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-7);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":644780,"byte_end":644840,"line_start":692,"line_end":692,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":644845,"byte_end":644852,"line_start":693,"line_end":693,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":644857,"byte_end":644866,"line_start":694,"line_end":694,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4797},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":645495,"byte_end":645498,"line_start":714,"line_end":714,"column_start":12,"column_end":15},"name":"cos","qualname":"<Quaternion<N>>::cos","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the quaternionic cosinus.","sig":null,"attributes":[{"value":"/ Calculates the quaternionic cosinus.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":645024,"byte_end":645064,"line_start":702,"line_end":702,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":645069,"byte_end":645072,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":645077,"byte_end":645090,"line_start":704,"line_end":704,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":645095,"byte_end":645102,"line_start":705,"line_end":705,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":645107,"byte_end":645146,"line_start":706,"line_end":706,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":645151,"byte_end":645182,"line_start":707,"line_end":707,"column_start":5,"column_end":36}},{"value":"/ let input = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":645187,"byte_end":645239,"line_start":708,"line_end":708,"column_start":5,"column_end":57}},{"value":"/ let expected = Quaternion::new(58.93364616794395, -34.086183690465596, -51.1292755356984, -68.17236738093119);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":645244,"byte_end":645358,"line_start":709,"line_end":709,"column_start":5,"column_end":119}},{"value":"/ let result = input.cos();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":645363,"byte_end":645392,"line_start":710,"line_end":710,"column_start":5,"column_end":34}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-7);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":645397,"byte_end":645457,"line_start":711,"line_end":711,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":645462,"byte_end":645469,"line_start":712,"line_end":712,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":645474,"byte_end":645483,"line_start":713,"line_end":713,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4798},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":646057,"byte_end":646061,"line_start":731,"line_end":731,"column_start":12,"column_end":16},"name":"acos","qualname":"<Quaternion<N>>::acos","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the quaternionic arccosinus.","sig":null,"attributes":[{"value":"/ Calculates the quaternionic arccosinus.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":645698,"byte_end":645741,"line_start":720,"line_end":720,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":645746,"byte_end":645749,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":645754,"byte_end":645767,"line_start":722,"line_end":722,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":645772,"byte_end":645779,"line_start":723,"line_end":723,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":645784,"byte_end":645823,"line_start":724,"line_end":724,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":645828,"byte_end":645859,"line_start":725,"line_end":725,"column_start":5,"column_end":36}},{"value":"/ let input = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":645864,"byte_end":645916,"line_start":726,"line_end":726,"column_start":5,"column_end":57}},{"value":"/ let result = input.cos().acos();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":645921,"byte_end":645957,"line_start":727,"line_end":727,"column_start":5,"column_end":41}},{"value":"/ assert_relative_eq!(input, result, epsilon = 1.0e-7);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":645962,"byte_end":646019,"line_start":728,"line_end":728,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":646024,"byte_end":646031,"line_start":729,"line_end":729,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":646036,"byte_end":646045,"line_start":730,"line_end":730,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4799},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":646741,"byte_end":646744,"line_start":752,"line_end":752,"column_start":12,"column_end":15},"name":"sin","qualname":"<Quaternion<N>>::sin","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the quaternionic sinus.","sig":null,"attributes":[{"value":"/ Calculates the quaternionic sinus.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":646274,"byte_end":646312,"line_start":740,"line_end":740,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":646317,"byte_end":646320,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":646325,"byte_end":646338,"line_start":742,"line_end":742,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":646343,"byte_end":646350,"line_start":743,"line_end":743,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":646355,"byte_end":646394,"line_start":744,"line_end":744,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":646399,"byte_end":646430,"line_start":745,"line_end":745,"column_start":5,"column_end":36}},{"value":"/ let input = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":646435,"byte_end":646487,"line_start":746,"line_end":746,"column_start":5,"column_end":57}},{"value":"/ let expected = Quaternion::new(91.78371578403467, 21.886486853029176, 32.82973027954377, 43.77297370605835);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":646492,"byte_end":646604,"line_start":747,"line_end":747,"column_start":5,"column_end":117}},{"value":"/ let result = input.sin();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":646609,"byte_end":646638,"line_start":748,"line_end":748,"column_start":5,"column_end":34}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-7);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":646643,"byte_end":646703,"line_start":749,"line_end":749,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":646708,"byte_end":646715,"line_start":750,"line_end":750,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":646720,"byte_end":646729,"line_start":751,"line_end":751,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4800},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":647300,"byte_end":647304,"line_start":769,"line_end":769,"column_start":12,"column_end":16},"name":"asin","qualname":"<Quaternion<N>>::asin","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the quaternionic arcsinus.","sig":null,"attributes":[{"value":"/ Calculates the quaternionic arcsinus.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":646943,"byte_end":646984,"line_start":758,"line_end":758,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":646989,"byte_end":646992,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":646997,"byte_end":647010,"line_start":760,"line_end":760,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":647015,"byte_end":647022,"line_start":761,"line_end":761,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":647027,"byte_end":647066,"line_start":762,"line_end":762,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":647071,"byte_end":647102,"line_start":763,"line_end":763,"column_start":5,"column_end":36}},{"value":"/ let input = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":647107,"byte_end":647159,"line_start":764,"line_end":764,"column_start":5,"column_end":57}},{"value":"/ let result = input.sin().asin();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":647164,"byte_end":647200,"line_start":765,"line_end":765,"column_start":5,"column_end":41}},{"value":"/ assert_relative_eq!(input, result, epsilon = 1.0e-7);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":647205,"byte_end":647262,"line_start":766,"line_end":766,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":647267,"byte_end":647274,"line_start":767,"line_end":767,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":647279,"byte_end":647288,"line_start":768,"line_end":768,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4801},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":647999,"byte_end":648002,"line_start":790,"line_end":790,"column_start":12,"column_end":15},"name":"tan","qualname":"<Quaternion<N>>::tan","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the quaternionic tangent.","sig":null,"attributes":[{"value":"/ Calculates the quaternionic tangent.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":647523,"byte_end":647563,"line_start":778,"line_end":778,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":647568,"byte_end":647571,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":647576,"byte_end":647589,"line_start":780,"line_end":780,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":647594,"byte_end":647601,"line_start":781,"line_end":781,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":647606,"byte_end":647645,"line_start":782,"line_end":782,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":647650,"byte_end":647681,"line_start":783,"line_end":783,"column_start":5,"column_end":36}},{"value":"/ let input = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":647686,"byte_end":647738,"line_start":784,"line_end":784,"column_start":5,"column_end":57}},{"value":"/ let expected = Quaternion::new(0.00003821631725009489, 0.3713971716439371, 0.5570957574659058, 0.7427943432878743);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":647743,"byte_end":647862,"line_start":785,"line_end":785,"column_start":5,"column_end":124}},{"value":"/ let result = input.tan();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":647867,"byte_end":647896,"line_start":786,"line_end":786,"column_start":5,"column_end":34}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-7);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":647901,"byte_end":647961,"line_start":787,"line_end":787,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":647966,"byte_end":647973,"line_start":788,"line_end":788,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":647978,"byte_end":647987,"line_start":789,"line_end":789,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4802},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":648477,"byte_end":648481,"line_start":808,"line_end":808,"column_start":12,"column_end":16},"name":"atan","qualname":"<Quaternion<N>>::atan","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the quaternionic arctangent.","sig":null,"attributes":[{"value":"/ Calculates the quaternionic arctangent.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":648118,"byte_end":648161,"line_start":797,"line_end":797,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":648166,"byte_end":648169,"line_start":798,"line_end":798,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":648174,"byte_end":648187,"line_start":799,"line_end":799,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":648192,"byte_end":648199,"line_start":800,"line_end":800,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":648204,"byte_end":648243,"line_start":801,"line_end":801,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":648248,"byte_end":648279,"line_start":802,"line_end":802,"column_start":5,"column_end":36}},{"value":"/ let input = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":648284,"byte_end":648336,"line_start":803,"line_end":803,"column_start":5,"column_end":57}},{"value":"/ let result = input.tan().atan();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":648341,"byte_end":648377,"line_start":804,"line_end":804,"column_start":5,"column_end":41}},{"value":"/ assert_relative_eq!(input, result, epsilon = 1.0e-7);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":648382,"byte_end":648439,"line_start":805,"line_end":805,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":648444,"byte_end":648451,"line_start":806,"line_end":806,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":648456,"byte_end":648465,"line_start":807,"line_end":807,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4803},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":649242,"byte_end":649246,"line_start":832,"line_end":832,"column_start":12,"column_end":16},"name":"sinh","qualname":"<Quaternion<N>>::sinh","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the hyperbolic quaternionic sinus.","sig":null,"attributes":[{"value":"/ Calculates the hyperbolic quaternionic sinus.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":648757,"byte_end":648806,"line_start":820,"line_end":820,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":648811,"byte_end":648814,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":648819,"byte_end":648832,"line_start":822,"line_end":822,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":648837,"byte_end":648844,"line_start":823,"line_end":823,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":648849,"byte_end":648888,"line_start":824,"line_end":824,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":648893,"byte_end":648924,"line_start":825,"line_end":825,"column_start":5,"column_end":36}},{"value":"/ let input = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":648929,"byte_end":648981,"line_start":826,"line_end":826,"column_start":5,"column_end":57}},{"value":"/ let expected = Quaternion::new(0.7323376060463428, -0.4482074499805421, -0.6723111749708133, -0.8964148999610843);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":648986,"byte_end":649104,"line_start":827,"line_end":827,"column_start":5,"column_end":123}},{"value":"/ let result = input.sinh();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":649109,"byte_end":649139,"line_start":828,"line_end":828,"column_start":5,"column_end":35}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-7);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":649144,"byte_end":649204,"line_start":829,"line_end":829,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":649209,"byte_end":649216,"line_start":830,"line_end":830,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":649221,"byte_end":649230,"line_start":831,"line_end":831,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4804},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":649802,"byte_end":649807,"line_start":848,"line_end":848,"column_start":12,"column_end":17},"name":"asinh","qualname":"<Quaternion<N>>::asinh","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the hyperbolic quaternionic arcsinus.","sig":null,"attributes":[{"value":"/ Calculates the hyperbolic quaternionic arcsinus.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":649319,"byte_end":649371,"line_start":836,"line_end":836,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":649376,"byte_end":649379,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":649384,"byte_end":649397,"line_start":838,"line_end":838,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":649402,"byte_end":649409,"line_start":839,"line_end":839,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":649414,"byte_end":649453,"line_start":840,"line_end":840,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":649458,"byte_end":649489,"line_start":841,"line_end":841,"column_start":5,"column_end":36}},{"value":"/ let input = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":649494,"byte_end":649546,"line_start":842,"line_end":842,"column_start":5,"column_end":57}},{"value":"/ let expected = Quaternion::new(2.385889902585242, 0.514052600662788, 0.7710789009941821, 1.028105201325576);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":649551,"byte_end":649663,"line_start":843,"line_end":843,"column_start":5,"column_end":117}},{"value":"/ let result = input.asinh();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":649668,"byte_end":649699,"line_start":844,"line_end":844,"column_start":5,"column_end":36}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-7);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":649704,"byte_end":649764,"line_start":845,"line_end":845,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":649769,"byte_end":649776,"line_start":846,"line_end":846,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":649781,"byte_end":649790,"line_start":847,"line_end":847,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4805},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":650421,"byte_end":650425,"line_start":865,"line_end":865,"column_start":12,"column_end":16},"name":"cosh","qualname":"<Quaternion<N>>::cosh","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the hyperbolic quaternionic cosinus.","sig":null,"attributes":[{"value":"/ Calculates the hyperbolic quaternionic cosinus.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":649934,"byte_end":649985,"line_start":853,"line_end":853,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":649990,"byte_end":649993,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":649998,"byte_end":650011,"line_start":855,"line_end":855,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":650016,"byte_end":650023,"line_start":856,"line_end":856,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":650028,"byte_end":650067,"line_start":857,"line_end":857,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":650072,"byte_end":650103,"line_start":858,"line_end":858,"column_start":5,"column_end":36}},{"value":"/ let input = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":650108,"byte_end":650160,"line_start":859,"line_end":859,"column_start":5,"column_end":57}},{"value":"/ let expected = Quaternion::new(0.9615851176369566, -0.3413521745610167, -0.5120282618415251, -0.6827043491220334);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":650165,"byte_end":650283,"line_start":860,"line_end":860,"column_start":5,"column_end":123}},{"value":"/ let result = input.cosh();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":650288,"byte_end":650318,"line_start":861,"line_end":861,"column_start":5,"column_end":35}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-7);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":650323,"byte_end":650383,"line_start":862,"line_end":862,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":650388,"byte_end":650395,"line_start":863,"line_end":863,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":650400,"byte_end":650409,"line_start":864,"line_end":864,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4806},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":650986,"byte_end":650991,"line_start":881,"line_end":881,"column_start":12,"column_end":17},"name":"acosh","qualname":"<Quaternion<N>>::acosh","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the hyperbolic quaternionic arccosinus.","sig":null,"attributes":[{"value":"/ Calculates the hyperbolic quaternionic arccosinus.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":650498,"byte_end":650552,"line_start":869,"line_end":869,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":650557,"byte_end":650560,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":650565,"byte_end":650578,"line_start":871,"line_end":871,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":650583,"byte_end":650590,"line_start":872,"line_end":872,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":650595,"byte_end":650634,"line_start":873,"line_end":873,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":650639,"byte_end":650670,"line_start":874,"line_end":874,"column_start":5,"column_end":36}},{"value":"/ let input = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":650675,"byte_end":650727,"line_start":875,"line_end":875,"column_start":5,"column_end":57}},{"value":"/ let expected = Quaternion::new(2.4014472020074007, 0.5162761016176176, 0.7744141524264264, 1.0325522032352352);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":650732,"byte_end":650847,"line_start":876,"line_end":876,"column_start":5,"column_end":120}},{"value":"/ let result = input.acosh();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":650852,"byte_end":650883,"line_start":877,"line_end":877,"column_start":5,"column_end":36}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-7);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":650888,"byte_end":650948,"line_start":878,"line_end":878,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":650953,"byte_end":650960,"line_start":879,"line_end":879,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":650965,"byte_end":650974,"line_start":880,"line_end":880,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4807},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":651624,"byte_end":651628,"line_start":898,"line_end":898,"column_start":12,"column_end":16},"name":"tanh","qualname":"<Quaternion<N>>::tanh","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the hyperbolic quaternionic tangent.","sig":null,"attributes":[{"value":"/ Calculates the hyperbolic quaternionic tangent.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":651135,"byte_end":651186,"line_start":886,"line_end":886,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":651191,"byte_end":651194,"line_start":887,"line_end":887,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":651199,"byte_end":651212,"line_start":888,"line_end":888,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":651217,"byte_end":651224,"line_start":889,"line_end":889,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":651229,"byte_end":651268,"line_start":890,"line_end":890,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":651273,"byte_end":651304,"line_start":891,"line_end":891,"column_start":5,"column_end":36}},{"value":"/ let input = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":651309,"byte_end":651361,"line_start":892,"line_end":892,"column_start":5,"column_end":57}},{"value":"/ let expected = Quaternion::new(1.0248695360556623, -0.10229568178876419, -0.1534435226831464, -0.20459136357752844);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":651366,"byte_end":651486,"line_start":893,"line_end":893,"column_start":5,"column_end":125}},{"value":"/ let result = input.tanh();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":651491,"byte_end":651521,"line_start":894,"line_end":894,"column_start":5,"column_end":35}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-7);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":651526,"byte_end":651586,"line_start":895,"line_end":895,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":651591,"byte_end":651598,"line_start":896,"line_end":896,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":651603,"byte_end":651612,"line_start":897,"line_end":897,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4808},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":652235,"byte_end":652240,"line_start":917,"line_end":917,"column_start":12,"column_end":17},"name":"atanh","qualname":"<Quaternion<N>>::atanh","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the hyperbolic quaternionic arctangent.","sig":null,"attributes":[{"value":"/ Calculates the hyperbolic quaternionic arctangent.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":651746,"byte_end":651800,"line_start":905,"line_end":905,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":651805,"byte_end":651808,"line_start":906,"line_end":906,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":651813,"byte_end":651826,"line_start":907,"line_end":907,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":651831,"byte_end":651838,"line_start":908,"line_end":908,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":651843,"byte_end":651882,"line_start":909,"line_end":909,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":651887,"byte_end":651918,"line_start":910,"line_end":910,"column_start":5,"column_end":36}},{"value":"/ let input = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":651923,"byte_end":651975,"line_start":911,"line_end":911,"column_start":5,"column_end":57}},{"value":"/ let expected = Quaternion::new(0.03230293287000163, 0.5173453683196951, 0.7760180524795426, 1.0346907366393903);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":651980,"byte_end":652096,"line_start":912,"line_end":912,"column_start":5,"column_end":121}},{"value":"/ let result = input.atanh();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":652101,"byte_end":652132,"line_start":913,"line_end":913,"column_start":5,"column_end":36}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-7);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":652137,"byte_end":652197,"line_start":914,"line_end":914,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":652202,"byte_end":652209,"line_start":915,"line_end":915,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":652214,"byte_end":652223,"line_start":916,"line_end":916,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":4828},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":654356,"byte_end":654370,"line_start":983,"line_end":983,"column_start":10,"column_end":24},"name":"UnitQuaternion","qualname":"::geometry::quaternion::UnitQuaternion","value":"Unit<Quaternion<N>>","parent":null,"children":[],"decl_id":null,"docs":" A unit quaternions. May be used to represent a rotation.\n","sig":null,"attributes":[{"value":"/ A unit quaternions. May be used to represent a rotation.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":654286,"byte_end":654346,"line_start":982,"line_end":982,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":4839},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":655328,"byte_end":655333,"line_start":1023,"line_end":1023,"column_start":12,"column_end":17},"name":"angle","qualname":"<UnitQuaternion<N>>::angle","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The rotation angle in [0; pi] of this unit quaternion.","sig":null,"attributes":[{"value":"/ The rotation angle in [0; pi] of this unit quaternion.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":654965,"byte_end":655023,"line_start":1013,"line_end":1013,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":655028,"byte_end":655031,"line_start":1014,"line_end":1014,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":655036,"byte_end":655049,"line_start":1015,"line_end":1015,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":655054,"byte_end":655061,"line_start":1016,"line_end":1016,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Unit, UnitQuaternion, Vector3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":655066,"byte_end":655118,"line_start":1017,"line_end":1017,"column_start":5,"column_end":57}},{"value":"/ let axis = Unit::new_normalize(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":655123,"byte_end":655187,"line_start":1018,"line_end":1018,"column_start":5,"column_end":69}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&axis, 1.78);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":655192,"byte_end":655251,"line_start":1019,"line_end":1019,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(rot.angle(), 1.78);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":655256,"byte_end":655290,"line_start":1020,"line_end":1020,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":655295,"byte_end":655302,"line_start":1021,"line_end":1021,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":655307,"byte_end":655316,"line_start":1022,"line_end":1022,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4840},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":655818,"byte_end":655828,"line_start":1039,"line_end":1039,"column_start":12,"column_end":22},"name":"quaternion","qualname":"<UnitQuaternion<N>>::quaternion","value":"fn (&self) -> &Quaternion<N>","parent":null,"children":[],"decl_id":null,"docs":" The underlying quaternion.","sig":null,"attributes":[{"value":"/ The underlying quaternion.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":655493,"byte_end":655523,"line_start":1028,"line_end":1028,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":655528,"byte_end":655531,"line_start":1029,"line_end":1029,"column_start":5,"column_end":8}},{"value":"/ Same as `self.as_ref()`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":655536,"byte_end":655564,"line_start":1030,"line_end":1030,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":655569,"byte_end":655572,"line_start":1031,"line_end":1031,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":655577,"byte_end":655590,"line_start":1032,"line_end":1032,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":655595,"byte_end":655602,"line_start":1033,"line_end":1033,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{UnitQuaternion, Quaternion};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":655607,"byte_end":655656,"line_start":1034,"line_end":1034,"column_start":5,"column_end":54}},{"value":"/ let axis = UnitQuaternion::identity();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":655661,"byte_end":655703,"line_start":1035,"line_end":1035,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(*axis.quaternion(), Quaternion::new(1.0, 0.0, 0.0, 0.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":655708,"byte_end":655780,"line_start":1036,"line_end":1036,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":655785,"byte_end":655792,"line_start":1037,"line_end":1037,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":655797,"byte_end":655806,"line_start":1038,"line_end":1038,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4841},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":656371,"byte_end":656380,"line_start":1055,"line_end":1055,"column_start":12,"column_end":21},"name":"conjugate","qualname":"<UnitQuaternion<N>>::conjugate","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Compute the conjugate of this unit quaternion.","sig":null,"attributes":[{"value":"/ Compute the conjugate of this unit quaternion.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":655889,"byte_end":655939,"line_start":1043,"line_end":1043,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":655944,"byte_end":655947,"line_start":1044,"line_end":1044,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":655952,"byte_end":655965,"line_start":1045,"line_end":1045,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":655970,"byte_end":655977,"line_start":1046,"line_end":1046,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Unit, UnitQuaternion, Vector3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":655982,"byte_end":656034,"line_start":1047,"line_end":1047,"column_start":5,"column_end":57}},{"value":"/ let axis = Unit::new_normalize(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":656039,"byte_end":656103,"line_start":1048,"line_end":1048,"column_start":5,"column_end":69}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&axis, 1.78);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":656108,"byte_end":656167,"line_start":1049,"line_end":1049,"column_start":5,"column_end":64}},{"value":"/ let conj = rot.conjugate();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":656172,"byte_end":656203,"line_start":1050,"line_end":1050,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(conj, UnitQuaternion::from_axis_angle(&-axis, 1.78));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":656208,"byte_end":656276,"line_start":1051,"line_end":1051,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":656281,"byte_end":656288,"line_start":1052,"line_end":1052,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":656293,"byte_end":656302,"line_start":1053,"line_end":1053,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use conjugate_mut()?\"","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":656307,"byte_end":656359,"line_start":1054,"line_end":1054,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":4842},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":656982,"byte_end":656989,"line_start":1072,"line_end":1072,"column_start":12,"column_end":19},"name":"inverse","qualname":"<UnitQuaternion<N>>::inverse","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Inverts this quaternion if it is not zero.","sig":null,"attributes":[{"value":"/ Inverts this quaternion if it is not zero.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":656464,"byte_end":656510,"line_start":1059,"line_end":1059,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":656515,"byte_end":656518,"line_start":1060,"line_end":1060,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":656523,"byte_end":656536,"line_start":1061,"line_end":1061,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":656541,"byte_end":656548,"line_start":1062,"line_end":1062,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Unit, UnitQuaternion, Vector3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":656553,"byte_end":656605,"line_start":1063,"line_end":1063,"column_start":5,"column_end":57}},{"value":"/ let axis = Unit::new_normalize(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":656610,"byte_end":656674,"line_start":1064,"line_end":1064,"column_start":5,"column_end":69}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&axis, 1.78);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":656679,"byte_end":656738,"line_start":1065,"line_end":1065,"column_start":5,"column_end":64}},{"value":"/ let inv = rot.inverse();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":656743,"byte_end":656771,"line_start":1066,"line_end":1066,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(rot * inv, UnitQuaternion::identity());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":656776,"byte_end":656830,"line_start":1067,"line_end":1067,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(inv * rot, UnitQuaternion::identity());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":656835,"byte_end":656889,"line_start":1068,"line_end":1068,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":656894,"byte_end":656901,"line_start":1069,"line_end":1069,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":656906,"byte_end":656915,"line_start":1070,"line_end":1070,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use inverse_mut()?\"","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":656920,"byte_end":656970,"line_start":1071,"line_end":1071,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":4843},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":657514,"byte_end":657522,"line_start":1087,"line_end":1087,"column_start":12,"column_end":20},"name":"angle_to","qualname":"<UnitQuaternion<N>>::angle_to","value":"fn (&self, other: &Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The rotation angle needed to make `self` and `other` coincide.","sig":null,"attributes":[{"value":"/ The rotation angle needed to make `self` and `other` coincide.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":657043,"byte_end":657109,"line_start":1076,"line_end":1076,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":657114,"byte_end":657117,"line_start":1077,"line_end":1077,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":657122,"byte_end":657135,"line_start":1078,"line_end":1078,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":657140,"byte_end":657147,"line_start":1079,"line_end":1079,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":657152,"byte_end":657191,"line_start":1080,"line_end":1080,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":657196,"byte_end":657242,"line_start":1081,"line_end":1081,"column_start":5,"column_end":51}},{"value":"/ let rot1 = UnitQuaternion::from_axis_angle(&Vector3::y_axis(), 1.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":657247,"byte_end":657319,"line_start":1082,"line_end":1082,"column_start":5,"column_end":77}},{"value":"/ let rot2 = UnitQuaternion::from_axis_angle(&Vector3::x_axis(), 0.1);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":657324,"byte_end":657396,"line_start":1083,"line_end":1083,"column_start":5,"column_end":77}},{"value":"/ assert_relative_eq!(rot1.angle_to(&rot2), 1.0045657, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":657401,"byte_end":657476,"line_start":1084,"line_end":1084,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":657481,"byte_end":657488,"line_start":1085,"line_end":1085,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":657493,"byte_end":657502,"line_start":1086,"line_end":1086,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4844},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":658219,"byte_end":658230,"line_start":1106,"line_end":1106,"column_start":12,"column_end":23},"name":"rotation_to","qualname":"<UnitQuaternion<N>>::rotation_to","value":"fn (&self, other: &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The unit quaternion needed to make `self` and `other` coincide.","sig":null,"attributes":[{"value":"/ The unit quaternion needed to make `self` and `other` coincide.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":657629,"byte_end":657696,"line_start":1092,"line_end":1092,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":657701,"byte_end":657704,"line_start":1093,"line_end":1093,"column_start":5,"column_end":8}},{"value":"/ The result is such that: `self.rotation_to(other) * self == other`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":657709,"byte_end":657780,"line_start":1094,"line_end":1094,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":657785,"byte_end":657788,"line_start":1095,"line_end":1095,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":657793,"byte_end":657806,"line_start":1096,"line_end":1096,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":657811,"byte_end":657818,"line_start":1097,"line_end":1097,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":657823,"byte_end":657862,"line_start":1098,"line_end":1098,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":657867,"byte_end":657913,"line_start":1099,"line_end":1099,"column_start":5,"column_end":51}},{"value":"/ let rot1 = UnitQuaternion::from_axis_angle(&Vector3::y_axis(), 1.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":657918,"byte_end":657990,"line_start":1100,"line_end":1100,"column_start":5,"column_end":77}},{"value":"/ let rot2 = UnitQuaternion::from_axis_angle(&Vector3::x_axis(), 0.1);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":657995,"byte_end":658067,"line_start":1101,"line_end":1101,"column_start":5,"column_end":77}},{"value":"/ let rot_to = rot1.rotation_to(&rot2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":658072,"byte_end":658113,"line_start":1102,"line_end":1102,"column_start":5,"column_end":46}},{"value":"/ assert_relative_eq!(rot_to * rot1, rot2, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":658118,"byte_end":658181,"line_start":1103,"line_end":1103,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":658186,"byte_end":658193,"line_start":1104,"line_end":1104,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":658198,"byte_end":658207,"line_start":1105,"line_end":1105,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4845},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":658770,"byte_end":658774,"line_start":1122,"line_end":1122,"column_start":12,"column_end":16},"name":"lerp","qualname":"<UnitQuaternion<N>>::lerp","value":"fn (&self, other: &Self, t: N) -> Quaternion<N>","parent":null,"children":[],"decl_id":null,"docs":" Linear interpolation between two unit quaternions.","sig":null,"attributes":[{"value":"/ Linear interpolation between two unit quaternions.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":658294,"byte_end":658348,"line_start":1110,"line_end":1110,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":658353,"byte_end":658356,"line_start":1111,"line_end":1111,"column_start":5,"column_end":8}},{"value":"/ The result is not normalized.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":658361,"byte_end":658394,"line_start":1112,"line_end":1112,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":658399,"byte_end":658402,"line_start":1113,"line_end":1113,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":658407,"byte_end":658420,"line_start":1114,"line_end":1114,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":658425,"byte_end":658432,"line_start":1115,"line_end":1115,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{UnitQuaternion, Quaternion};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":658437,"byte_end":658486,"line_start":1116,"line_end":1116,"column_start":5,"column_end":54}},{"value":"/ let q1 = UnitQuaternion::new_normalize(Quaternion::new(1.0, 0.0, 0.0, 0.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":658491,"byte_end":658571,"line_start":1117,"line_end":1117,"column_start":5,"column_end":85}},{"value":"/ let q2 = UnitQuaternion::new_normalize(Quaternion::new(0.0, 1.0, 0.0, 0.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":658576,"byte_end":658656,"line_start":1118,"line_end":1118,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(q1.lerp(&q2, 0.1), Quaternion::new(0.9, 0.1, 0.0, 0.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":658661,"byte_end":658732,"line_start":1119,"line_end":1119,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":658737,"byte_end":658744,"line_start":1120,"line_end":1120,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":658749,"byte_end":658758,"line_start":1121,"line_end":1121,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4846},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":659437,"byte_end":659442,"line_start":1138,"line_end":1138,"column_start":12,"column_end":17},"name":"nlerp","qualname":"<UnitQuaternion<N>>::nlerp","value":"fn (&self, other: &Self, t: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Normalized linear interpolation between two unit quaternions.","sig":null,"attributes":[{"value":"/ Normalized linear interpolation between two unit quaternions.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":658878,"byte_end":658943,"line_start":1126,"line_end":1126,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":658948,"byte_end":658951,"line_start":1127,"line_end":1127,"column_start":5,"column_end":8}},{"value":"/ This is the same as `self.lerp` except that the result is normalized.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":658956,"byte_end":659029,"line_start":1128,"line_end":1128,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":659034,"byte_end":659037,"line_start":1129,"line_end":1129,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":659042,"byte_end":659055,"line_start":1130,"line_end":1130,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":659060,"byte_end":659067,"line_start":1131,"line_end":1131,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{UnitQuaternion, Quaternion};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":659072,"byte_end":659121,"line_start":1132,"line_end":1132,"column_start":5,"column_end":54}},{"value":"/ let q1 = UnitQuaternion::new_normalize(Quaternion::new(1.0, 0.0, 0.0, 0.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":659126,"byte_end":659206,"line_start":1133,"line_end":1133,"column_start":5,"column_end":85}},{"value":"/ let q2 = UnitQuaternion::new_normalize(Quaternion::new(0.0, 1.0, 0.0, 0.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":659211,"byte_end":659291,"line_start":1134,"line_end":1134,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(q1.nlerp(&q2, 0.1), UnitQuaternion::new_normalize(Quaternion::new(0.9, 0.1, 0.0, 0.0)));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":659296,"byte_end":659399,"line_start":1135,"line_end":1135,"column_start":5,"column_end":108}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":659404,"byte_end":659411,"line_start":1136,"line_end":1136,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":659416,"byte_end":659425,"line_start":1137,"line_end":1137,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4847},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":660309,"byte_end":660314,"line_start":1163,"line_end":1163,"column_start":12,"column_end":17},"name":"slerp","qualname":"<UnitQuaternion<N>>::slerp","value":"fn (&self, other: &Self, t: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Spherical linear interpolation between two unit quaternions.","sig":null,"attributes":[{"value":"/ Spherical linear interpolation between two unit quaternions.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":659605,"byte_end":659669,"line_start":1145,"line_end":1145,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":659674,"byte_end":659677,"line_start":1146,"line_end":1146,"column_start":5,"column_end":8}},{"value":"/ Panics if the angle between both quaternion is 180 degrees (in which case the interpolation","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":659682,"byte_end":659777,"line_start":1147,"line_end":1147,"column_start":5,"column_end":100}},{"value":"/ is not well-defined). Use `.try_slerp` instead to avoid the panic.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":659782,"byte_end":659852,"line_start":1148,"line_end":1148,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":659857,"byte_end":659860,"line_start":1149,"line_end":1149,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":659865,"byte_end":659880,"line_start":1150,"line_end":1150,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":659885,"byte_end":659888,"line_start":1151,"line_end":1151,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":659893,"byte_end":659900,"line_start":1152,"line_end":1152,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::geometry::UnitQuaternion;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":659905,"byte_end":659950,"line_start":1153,"line_end":1153,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":659955,"byte_end":659958,"line_start":1154,"line_end":1154,"column_start":5,"column_end":8}},{"value":"/ let q1 = UnitQuaternion::from_euler_angles(std::f32::consts::FRAC_PI_4, 0.0, 0.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":659963,"byte_end":660049,"line_start":1155,"line_end":1155,"column_start":5,"column_end":91}},{"value":"/ let q2 = UnitQuaternion::from_euler_angles(-std::f32::consts::PI, 0.0, 0.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":660054,"byte_end":660134,"line_start":1156,"line_end":1156,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":660139,"byte_end":660142,"line_start":1157,"line_end":1157,"column_start":5,"column_end":8}},{"value":"/ let q = q1.slerp(&q2, 1.0 / 3.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":660147,"byte_end":660184,"line_start":1158,"line_end":1158,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":660189,"byte_end":660192,"line_start":1159,"line_end":1159,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(q.euler_angles(), (std::f32::consts::FRAC_PI_2, 0.0, 0.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":660197,"byte_end":660271,"line_start":1160,"line_end":1160,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":660276,"byte_end":660283,"line_start":1161,"line_end":1161,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":660288,"byte_end":660297,"line_start":1162,"line_end":1162,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4848},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":661117,"byte_end":661126,"line_start":1182,"line_end":1182,"column_start":12,"column_end":21},"name":"try_slerp","qualname":"<UnitQuaternion<N>>::try_slerp","value":"fn (&self, other: &Self, t: N, epsilon: N) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes the spherical linear interpolation between two unit quaternions or returns `None`\n if both quaternions are approximately 180 degrees apart (in which case the interpolation is\n not well-defined).","sig":null,"attributes":[{"value":"/ Computes the spherical linear interpolation between two unit quaternions or returns `None`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":660520,"byte_end":660614,"line_start":1171,"line_end":1171,"column_start":5,"column_end":99}},{"value":"/ if both quaternions are approximately 180 degrees apart (in which case the interpolation is","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":660619,"byte_end":660714,"line_start":1172,"line_end":1172,"column_start":5,"column_end":100}},{"value":"/ not well-defined).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":660719,"byte_end":660741,"line_start":1173,"line_end":1173,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":660746,"byte_end":660749,"line_start":1174,"line_end":1174,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":660754,"byte_end":660769,"line_start":1175,"line_end":1175,"column_start":5,"column_end":20}},{"value":"/ * `self`: the first quaternion to interpolate from.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":660774,"byte_end":660829,"line_start":1176,"line_end":1176,"column_start":5,"column_end":60}},{"value":"/ * `other`: the second quaternion to interpolate toward.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":660834,"byte_end":660893,"line_start":1177,"line_end":1177,"column_start":5,"column_end":64}},{"value":"/ * `t`: the interpolation parameter. Should be between 0 and 1.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":660898,"byte_end":660964,"line_start":1178,"line_end":1178,"column_start":5,"column_end":71}},{"value":"/ * `epsilon`: the value below which the sinus of the angle separating both quaternion","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":660969,"byte_end":661057,"line_start":1179,"line_end":1179,"column_start":5,"column_end":93}},{"value":"/ must be to return `None`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":661062,"byte_end":661091,"line_start":1180,"line_end":1180,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":661096,"byte_end":661105,"line_start":1181,"line_end":1181,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4850},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":661825,"byte_end":661838,"line_start":1205,"line_end":1205,"column_start":12,"column_end":25},"name":"conjugate_mut","qualname":"<UnitQuaternion<N>>::conjugate_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Compute the conjugate of this unit quaternion in-place.\n","sig":null,"attributes":[{"value":"/ Compute the conjugate of this unit quaternion in-place.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":661740,"byte_end":661799,"line_start":1203,"line_end":1203,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":661804,"byte_end":661813,"line_start":1204,"line_end":1204,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4851},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":662458,"byte_end":662469,"line_start":1222,"line_end":1222,"column_start":12,"column_end":23},"name":"inverse_mut","qualname":"<UnitQuaternion<N>>::inverse_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Inverts this quaternion if it is not zero.","sig":null,"attributes":[{"value":"/ Inverts this quaternion if it is not zero.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":661911,"byte_end":661957,"line_start":1209,"line_end":1209,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":661962,"byte_end":661965,"line_start":1210,"line_end":1210,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":661970,"byte_end":661983,"line_start":1211,"line_end":1211,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":661988,"byte_end":661995,"line_start":1212,"line_end":1212,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":662000,"byte_end":662039,"line_start":1213,"line_end":1213,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3, Unit};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":662044,"byte_end":662096,"line_start":1214,"line_end":1214,"column_start":5,"column_end":57}},{"value":"/ let axisangle = Vector3::new(0.1, 0.2, 0.3);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":662101,"byte_end":662149,"line_start":1215,"line_end":1215,"column_start":5,"column_end":53}},{"value":"/ let mut rot = UnitQuaternion::new(axisangle);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":662154,"byte_end":662203,"line_start":1216,"line_end":1216,"column_start":5,"column_end":54}},{"value":"/ rot.inverse_mut();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":662208,"byte_end":662230,"line_start":1217,"line_end":1217,"column_start":5,"column_end":27}},{"value":"/ assert_relative_eq!(rot * UnitQuaternion::new(axisangle), UnitQuaternion::identity());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":662235,"byte_end":662325,"line_start":1218,"line_end":1218,"column_start":5,"column_end":95}},{"value":"/ assert_relative_eq!(UnitQuaternion::new(axisangle) * rot, UnitQuaternion::identity());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":662330,"byte_end":662420,"line_start":1219,"line_end":1219,"column_start":5,"column_end":95}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":662425,"byte_end":662432,"line_start":1220,"line_end":1220,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":662437,"byte_end":662446,"line_start":1221,"line_end":1221,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4852},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":663103,"byte_end":663107,"line_start":1241,"line_end":1241,"column_start":12,"column_end":16},"name":"axis","qualname":"<UnitQuaternion<N>>::axis","value":"fn (&self) -> Option<Unit<Vector3<N>>>","parent":null,"children":[],"decl_id":null,"docs":" The rotation axis of this unit quaternion or `None` if the rotation is zero.","sig":null,"attributes":[{"value":"/ The rotation axis of this unit quaternion or `None` if the rotation is zero.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":662542,"byte_end":662622,"line_start":1226,"line_end":1226,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":662627,"byte_end":662630,"line_start":1227,"line_end":1227,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":662635,"byte_end":662648,"line_start":1228,"line_end":1228,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":662653,"byte_end":662660,"line_start":1229,"line_end":1229,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3, Unit};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":662665,"byte_end":662717,"line_start":1230,"line_end":1230,"column_start":5,"column_end":57}},{"value":"/ let axis = Unit::new_normalize(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":662722,"byte_end":662786,"line_start":1231,"line_end":1231,"column_start":5,"column_end":69}},{"value":"/ let angle = 1.2;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":662791,"byte_end":662811,"line_start":1232,"line_end":1232,"column_start":5,"column_end":25}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&axis, angle);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":662816,"byte_end":662876,"line_start":1233,"line_end":1233,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(rot.axis(), Some(axis));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":662881,"byte_end":662920,"line_start":1234,"line_end":1234,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":662925,"byte_end":662928,"line_start":1235,"line_end":1235,"column_start":5,"column_end":8}},{"value":"/ // Case with a zero angle.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":662933,"byte_end":662963,"line_start":1236,"line_end":1236,"column_start":5,"column_end":35}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&axis, 0.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":662968,"byte_end":663026,"line_start":1237,"line_end":1237,"column_start":5,"column_end":63}},{"value":"/ assert!(rot.axis().is_none());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":663031,"byte_end":663065,"line_start":1238,"line_end":1238,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":663070,"byte_end":663077,"line_start":1239,"line_end":1239,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":663082,"byte_end":663091,"line_start":1240,"line_end":1240,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4853},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":663839,"byte_end":663850,"line_start":1265,"line_end":1265,"column_start":12,"column_end":23},"name":"scaled_axis","qualname":"<UnitQuaternion<N>>::scaled_axis","value":"fn (&self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" The rotation axis of this unit quaternion multiplied by the rotation angle.","sig":null,"attributes":[{"value":"/ The rotation axis of this unit quaternion multiplied by the rotation angle.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":663403,"byte_end":663482,"line_start":1254,"line_end":1254,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":663487,"byte_end":663490,"line_start":1255,"line_end":1255,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":663495,"byte_end":663508,"line_start":1256,"line_end":1256,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":663513,"byte_end":663520,"line_start":1257,"line_end":1257,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":663525,"byte_end":663564,"line_start":1258,"line_end":1258,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3, Unit};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":663569,"byte_end":663621,"line_start":1259,"line_end":1259,"column_start":5,"column_end":57}},{"value":"/ let axisangle = Vector3::new(0.1, 0.2, 0.3);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":663626,"byte_end":663674,"line_start":1260,"line_end":1260,"column_start":5,"column_end":53}},{"value":"/ let rot = UnitQuaternion::new(axisangle);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":663679,"byte_end":663724,"line_start":1261,"line_end":1261,"column_start":5,"column_end":50}},{"value":"/ assert_relative_eq!(rot.scaled_axis(), axisangle, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":663729,"byte_end":663801,"line_start":1262,"line_end":1262,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":663806,"byte_end":663813,"line_start":1263,"line_end":1263,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":663818,"byte_end":663827,"line_start":1264,"line_end":1264,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4854},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":664685,"byte_end":664695,"line_start":1293,"line_end":1293,"column_start":12,"column_end":22},"name":"axis_angle","qualname":"<UnitQuaternion<N>>::axis_angle","value":"fn (&self) -> Option<(Unit<Vector3<N>>, N)>","parent":null,"children":[],"decl_id":null,"docs":" The rotation axis and angle in ]0, pi] of this unit quaternion.","sig":null,"attributes":[{"value":"/ The rotation axis and angle in ]0, pi] of this unit quaternion.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":664063,"byte_end":664130,"line_start":1276,"line_end":1276,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":664135,"byte_end":664138,"line_start":1277,"line_end":1277,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the angle is zero.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":664143,"byte_end":664183,"line_start":1278,"line_end":1278,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":664188,"byte_end":664191,"line_start":1279,"line_end":1279,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":664196,"byte_end":664209,"line_start":1280,"line_end":1280,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":664214,"byte_end":664221,"line_start":1281,"line_end":1281,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3, Unit};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":664226,"byte_end":664278,"line_start":1282,"line_end":1282,"column_start":5,"column_end":57}},{"value":"/ let axis = Unit::new_normalize(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":664283,"byte_end":664347,"line_start":1283,"line_end":1283,"column_start":5,"column_end":69}},{"value":"/ let angle = 1.2;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":664352,"byte_end":664372,"line_start":1284,"line_end":1284,"column_start":5,"column_end":25}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&axis, angle);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":664377,"byte_end":664437,"line_start":1285,"line_end":1285,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(rot.axis_angle(), Some((axis, angle)));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":664442,"byte_end":664496,"line_start":1286,"line_end":1286,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":664501,"byte_end":664504,"line_start":1287,"line_end":1287,"column_start":5,"column_end":8}},{"value":"/ // Case with a zero angle.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":664509,"byte_end":664539,"line_start":1288,"line_end":1288,"column_start":5,"column_end":35}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&axis, 0.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":664544,"byte_end":664602,"line_start":1289,"line_end":1289,"column_start":5,"column_end":63}},{"value":"/ assert!(rot.axis_angle().is_none());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":664607,"byte_end":664647,"line_start":1290,"line_end":1290,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":664652,"byte_end":664659,"line_start":1291,"line_end":1291,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":664664,"byte_end":664673,"line_start":1292,"line_end":1292,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4856},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":665009,"byte_end":665012,"line_start":1304,"line_end":1304,"column_start":12,"column_end":15},"name":"exp","qualname":"<UnitQuaternion<N>>::exp","value":"fn (&self) -> Quaternion<N>","parent":null,"children":[],"decl_id":null,"docs":" Compute the exponential of a quaternion.","sig":null,"attributes":[{"value":"/ Compute the exponential of a quaternion.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":664838,"byte_end":664882,"line_start":1300,"line_end":1300,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":664887,"byte_end":664890,"line_start":1301,"line_end":1301,"column_start":5,"column_end":8}},{"value":"/ Note that this function yields a `Quaternion<N>` because it loses the unit property.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":664895,"byte_end":664983,"line_start":1302,"line_end":1302,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":664988,"byte_end":664997,"line_start":1303,"line_end":1303,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4857},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":665728,"byte_end":665730,"line_start":1323,"line_end":1323,"column_start":12,"column_end":14},"name":"ln","qualname":"<UnitQuaternion<N>>::ln","value":"fn (&self) -> Quaternion<N>","parent":null,"children":[],"decl_id":null,"docs":" Compute the natural logarithm of a quaternion.","sig":null,"attributes":[{"value":"/ Compute the natural logarithm of a quaternion.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":665078,"byte_end":665128,"line_start":1308,"line_end":1308,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":665133,"byte_end":665136,"line_start":1309,"line_end":1309,"column_start":5,"column_end":8}},{"value":"/ Note that this function yields a `Quaternion<N>` because it loses the unit property.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":665141,"byte_end":665229,"line_start":1310,"line_end":1310,"column_start":5,"column_end":93}},{"value":"/ The vector part of the return value corresponds to the axis-angle representation (divided","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":665234,"byte_end":665327,"line_start":1311,"line_end":1311,"column_start":5,"column_end":98}},{"value":"/ by 2.0) of this unit quaternion.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":665332,"byte_end":665368,"line_start":1312,"line_end":1312,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":665373,"byte_end":665376,"line_start":1313,"line_end":1313,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":665381,"byte_end":665394,"line_start":1314,"line_end":1314,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":665399,"byte_end":665406,"line_start":1315,"line_end":1315,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":665411,"byte_end":665450,"line_start":1316,"line_end":1316,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Vector3, UnitQuaternion};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":665455,"byte_end":665501,"line_start":1317,"line_end":1317,"column_start":5,"column_end":51}},{"value":"/ let axisangle = Vector3::new(0.1, 0.2, 0.3);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":665506,"byte_end":665554,"line_start":1318,"line_end":1318,"column_start":5,"column_end":53}},{"value":"/ let q = UnitQuaternion::new(axisangle);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":665559,"byte_end":665602,"line_start":1319,"line_end":1319,"column_start":5,"column_end":48}},{"value":"/ assert_relative_eq!(q.ln().vector().into_owned(), axisangle, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":665607,"byte_end":665690,"line_start":1320,"line_end":1320,"column_start":5,"column_end":88}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":665695,"byte_end":665702,"line_start":1321,"line_end":1321,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":665707,"byte_end":665716,"line_start":1322,"line_end":1322,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4858},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":666637,"byte_end":666641,"line_start":1351,"line_end":1351,"column_start":12,"column_end":16},"name":"powf","qualname":"<UnitQuaternion<N>>::powf","value":"fn (&self, n: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Raise the quaternion to a given floating power.","sig":null,"attributes":[{"value":"/ Raise the quaternion to a given floating power.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":665966,"byte_end":666017,"line_start":1334,"line_end":1334,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":666022,"byte_end":666025,"line_start":1335,"line_end":1335,"column_start":5,"column_end":8}},{"value":"/ This returns the unit quaternion that identifies a rotation with axis `self.axis()` and","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":666030,"byte_end":666121,"line_start":1336,"line_end":1336,"column_start":5,"column_end":96}},{"value":"/ angle `self.angle() × n`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":666126,"byte_end":666156,"line_start":1337,"line_end":1337,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":666161,"byte_end":666164,"line_start":1338,"line_end":1338,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":666169,"byte_end":666182,"line_start":1339,"line_end":1339,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":666187,"byte_end":666194,"line_start":1340,"line_end":1340,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":666199,"byte_end":666238,"line_start":1341,"line_end":1341,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3, Unit};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":666243,"byte_end":666295,"line_start":1342,"line_end":1342,"column_start":5,"column_end":57}},{"value":"/ let axis = Unit::new_normalize(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":666300,"byte_end":666364,"line_start":1343,"line_end":1343,"column_start":5,"column_end":69}},{"value":"/ let angle = 1.2;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":666369,"byte_end":666389,"line_start":1344,"line_end":1344,"column_start":5,"column_end":25}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&axis, angle);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":666394,"byte_end":666454,"line_start":1345,"line_end":1345,"column_start":5,"column_end":65}},{"value":"/ let pow = rot.powf(2.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":666459,"byte_end":666487,"line_start":1346,"line_end":1346,"column_start":5,"column_end":33}},{"value":"/ assert_relative_eq!(pow.axis().unwrap(), axis, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":666492,"byte_end":666561,"line_start":1347,"line_end":1347,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(pow.angle(), 2.4);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":666566,"byte_end":666599,"line_start":1348,"line_end":1348,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":666604,"byte_end":666611,"line_start":1349,"line_end":1349,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":666616,"byte_end":666625,"line_start":1350,"line_end":1350,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4859},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":667535,"byte_end":667553,"line_start":1379,"line_end":1379,"column_start":12,"column_end":30},"name":"to_rotation_matrix","qualname":"<UnitQuaternion<N>>::to_rotation_matrix","value":"fn (&self) -> Rotation<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" Builds a rotation matrix from this unit quaternion.","sig":null,"attributes":[{"value":"/ Builds a rotation matrix from this unit quaternion.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":666863,"byte_end":666918,"line_start":1362,"line_end":1362,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":666923,"byte_end":666926,"line_start":1363,"line_end":1363,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":666931,"byte_end":666944,"line_start":1364,"line_end":1364,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":666949,"byte_end":666952,"line_start":1365,"line_end":1365,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":666957,"byte_end":666964,"line_start":1366,"line_end":1366,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":666969,"byte_end":667008,"line_start":1367,"line_end":1367,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":667013,"byte_end":667032,"line_start":1368,"line_end":1368,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3, Matrix3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":667037,"byte_end":667092,"line_start":1369,"line_end":1369,"column_start":5,"column_end":60}},{"value":"/ let q = UnitQuaternion::from_axis_angle(&Vector3::z_axis(), f32::consts::FRAC_PI_6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":667097,"byte_end":667185,"line_start":1370,"line_end":1370,"column_start":5,"column_end":93}},{"value":"/ let rot = q.to_rotation_matrix();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":667190,"byte_end":667227,"line_start":1371,"line_end":1371,"column_start":5,"column_end":42}},{"value":"/ let expected = Matrix3::new(0.8660254, -0.5,      0.0,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":667232,"byte_end":667290,"line_start":1372,"line_end":1372,"column_start":5,"column_end":63}},{"value":"/                             0.5,       0.8660254, 0.0,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":667295,"byte_end":667353,"line_start":1373,"line_end":1373,"column_start":5,"column_end":63}},{"value":"/                             0.0,       0.0,       1.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":667358,"byte_end":667417,"line_start":1374,"line_end":1374,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":667422,"byte_end":667425,"line_start":1375,"line_end":1375,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(*rot.matrix(), expected, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":667430,"byte_end":667497,"line_start":1376,"line_end":1376,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":667502,"byte_end":667509,"line_start":1377,"line_end":1377,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":667514,"byte_end":667523,"line_start":1378,"line_end":1378,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4860},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":668640,"byte_end":668655,"line_start":1414,"line_end":1414,"column_start":12,"column_end":27},"name":"to_euler_angles","qualname":"<UnitQuaternion<N>>::to_euler_angles","value":"fn (&self) -> (N, N, N)","parent":null,"children":[],"decl_id":null,"docs":" Converts this unit quaternion into its equivalent Euler angles.","sig":null,"attributes":[{"value":"/ Converts this unit quaternion into its equivalent Euler angles.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":668405,"byte_end":668472,"line_start":1409,"line_end":1409,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":668477,"byte_end":668480,"line_start":1410,"line_end":1410,"column_start":5,"column_end":8}},{"value":"/ The angles are produced in the form (roll, pitch, yaw).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":668485,"byte_end":668544,"line_start":1411,"line_end":1411,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":668549,"byte_end":668558,"line_start":1412,"line_end":1412,"column_start":5,"column_end":14}},{"value":"deprecated(note = \"This is renamed to use `.euler_angles()`.\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":668563,"byte_end":668628,"line_start":1413,"line_end":1413,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":4861},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":669345,"byte_end":669357,"line_start":1436,"line_end":1436,"column_start":12,"column_end":24},"name":"euler_angles","qualname":"<UnitQuaternion<N>>::euler_angles","value":"fn (&self) -> (N, N, N)","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the euler angles corresponding to this unit quaternion.","sig":null,"attributes":[{"value":"/ Retrieves the euler angles corresponding to this unit quaternion.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":668753,"byte_end":668822,"line_start":1421,"line_end":1421,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":668827,"byte_end":668830,"line_start":1422,"line_end":1422,"column_start":5,"column_end":8}},{"value":"/ The angles are produced in the form (roll, pitch, yaw).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":668835,"byte_end":668894,"line_start":1423,"line_end":1423,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":668899,"byte_end":668902,"line_start":1424,"line_end":1424,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":668907,"byte_end":668920,"line_start":1425,"line_end":1425,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":668925,"byte_end":668932,"line_start":1426,"line_end":1426,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":668937,"byte_end":668976,"line_start":1427,"line_end":1427,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::UnitQuaternion;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":668981,"byte_end":669016,"line_start":1428,"line_end":1428,"column_start":5,"column_end":40}},{"value":"/ let rot = UnitQuaternion::from_euler_angles(0.1, 0.2, 0.3);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":669021,"byte_end":669084,"line_start":1429,"line_end":1429,"column_start":5,"column_end":68}},{"value":"/ let euler = rot.euler_angles();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":669089,"byte_end":669124,"line_start":1430,"line_end":1430,"column_start":5,"column_end":40}},{"value":"/ assert_relative_eq!(euler.0, 0.1, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":669129,"byte_end":669185,"line_start":1431,"line_end":1431,"column_start":5,"column_end":61}},{"value":"/ assert_relative_eq!(euler.1, 0.2, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":669190,"byte_end":669246,"line_start":1432,"line_end":1432,"column_start":5,"column_end":61}},{"value":"/ assert_relative_eq!(euler.2, 0.3, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":669251,"byte_end":669307,"line_start":1433,"line_end":1433,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":669312,"byte_end":669319,"line_start":1434,"line_end":1434,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":669324,"byte_end":669333,"line_start":1435,"line_end":1435,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4862},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":670231,"byte_end":670245,"line_start":1460,"line_end":1460,"column_start":12,"column_end":26},"name":"to_homogeneous","qualname":"<UnitQuaternion<N>>::to_homogeneous","value":"fn (&self) -> Matrix4<N>","parent":null,"children":[],"decl_id":null,"docs":" Converts this unit quaternion into its equivalent homogeneous transformation matrix.","sig":null,"attributes":[{"value":"/ Converts this unit quaternion into its equivalent homogeneous transformation matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":669476,"byte_end":669564,"line_start":1443,"line_end":1443,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":669569,"byte_end":669572,"line_start":1444,"line_end":1444,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":669577,"byte_end":669590,"line_start":1445,"line_end":1445,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":669595,"byte_end":669598,"line_start":1446,"line_end":1446,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":669603,"byte_end":669610,"line_start":1447,"line_end":1447,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":669615,"byte_end":669654,"line_start":1448,"line_end":1448,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":669659,"byte_end":669678,"line_start":1449,"line_end":1449,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3, Matrix4};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":669683,"byte_end":669738,"line_start":1450,"line_end":1450,"column_start":5,"column_end":60}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&Vector3::z_axis(), f32::consts::FRAC_PI_6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":669743,"byte_end":669833,"line_start":1451,"line_end":1451,"column_start":5,"column_end":95}},{"value":"/ let expected = Matrix4::new(0.8660254, -0.5,      0.0, 0.0,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":669838,"byte_end":669901,"line_start":1452,"line_end":1452,"column_start":5,"column_end":68}},{"value":"/                             0.5,       0.8660254, 0.0, 0.0,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":669906,"byte_end":669969,"line_start":1453,"line_end":1453,"column_start":5,"column_end":68}},{"value":"/                             0.0,       0.0,       1.0, 0.0,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":669974,"byte_end":670037,"line_start":1454,"line_end":1454,"column_start":5,"column_end":68}},{"value":"/                             0.0,       0.0,       0.0, 1.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":670042,"byte_end":670106,"line_start":1455,"line_end":1455,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":670111,"byte_end":670114,"line_start":1456,"line_end":1456,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot.to_homogeneous(), expected, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":670119,"byte_end":670193,"line_start":1457,"line_end":1457,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":670198,"byte_end":670205,"line_start":1458,"line_end":1458,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":670210,"byte_end":670219,"line_start":1459,"line_end":1459,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4863},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":670933,"byte_end":670948,"line_start":1480,"line_end":1480,"column_start":12,"column_end":27},"name":"transform_point","qualname":"<UnitQuaternion<N>>::transform_point","value":"fn (&self, pt: &Point3<N>) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Rotate a point by this unit quaternion.","sig":null,"attributes":[{"value":"/ Rotate a point by this unit quaternion.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":670331,"byte_end":670374,"line_start":1464,"line_end":1464,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":670379,"byte_end":670382,"line_start":1465,"line_end":1465,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * pt`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":670387,"byte_end":670442,"line_start":1466,"line_end":1466,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":670447,"byte_end":670450,"line_start":1467,"line_end":1467,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":670455,"byte_end":670468,"line_start":1468,"line_end":1468,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":670473,"byte_end":670476,"line_start":1469,"line_end":1469,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":670481,"byte_end":670488,"line_start":1470,"line_end":1470,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":670493,"byte_end":670532,"line_start":1471,"line_end":1471,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":670537,"byte_end":670556,"line_start":1472,"line_end":1472,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3, Point3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":670561,"byte_end":670615,"line_start":1473,"line_end":1473,"column_start":5,"column_end":59}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&Vector3::y_axis(), f32::consts::FRAC_PI_2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":670620,"byte_end":670710,"line_start":1474,"line_end":1474,"column_start":5,"column_end":95}},{"value":"/ let transformed_point = rot.transform_point(&Point3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":670715,"byte_end":670792,"line_start":1475,"line_end":1475,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":670797,"byte_end":670800,"line_start":1476,"line_end":1476,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(transformed_point, Point3::new(3.0, 2.0, -1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":670805,"byte_end":670895,"line_start":1477,"line_end":1477,"column_start":5,"column_end":95}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":670900,"byte_end":670907,"line_start":1478,"line_end":1478,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":670912,"byte_end":670921,"line_start":1479,"line_end":1479,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4864},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":671615,"byte_end":671631,"line_start":1500,"line_end":1500,"column_start":12,"column_end":28},"name":"transform_vector","qualname":"<UnitQuaternion<N>>::transform_vector","value":"fn (&self, v: &Vector3<N>) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Rotate a vector by this unit quaternion.","sig":null,"attributes":[{"value":"/ Rotate a vector by this unit quaternion.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":671016,"byte_end":671060,"line_start":1484,"line_end":1484,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":671065,"byte_end":671068,"line_start":1485,"line_end":1485,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * v`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":671073,"byte_end":671127,"line_start":1486,"line_end":1486,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":671132,"byte_end":671135,"line_start":1487,"line_end":1487,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":671140,"byte_end":671153,"line_start":1488,"line_end":1488,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":671158,"byte_end":671161,"line_start":1489,"line_end":1489,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":671166,"byte_end":671173,"line_start":1490,"line_end":1490,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":671178,"byte_end":671217,"line_start":1491,"line_end":1491,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":671222,"byte_end":671241,"line_start":1492,"line_end":1492,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":671246,"byte_end":671292,"line_start":1493,"line_end":1493,"column_start":5,"column_end":51}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&Vector3::y_axis(), f32::consts::FRAC_PI_2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":671297,"byte_end":671387,"line_start":1494,"line_end":1494,"column_start":5,"column_end":95}},{"value":"/ let transformed_vector = rot.transform_vector(&Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":671392,"byte_end":671472,"line_start":1495,"line_end":1495,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":671477,"byte_end":671480,"line_start":1496,"line_end":1496,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(transformed_vector, Vector3::new(3.0, 2.0, -1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":671485,"byte_end":671577,"line_start":1497,"line_end":1497,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":671582,"byte_end":671589,"line_start":1498,"line_end":1498,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":671594,"byte_end":671603,"line_start":1499,"line_end":1499,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4865},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":672355,"byte_end":672378,"line_start":1520,"line_end":1520,"column_start":12,"column_end":35},"name":"inverse_transform_point","qualname":"<UnitQuaternion<N>>::inverse_transform_point","value":"fn (&self, pt: &Point3<N>) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Rotate a point by the inverse of this unit quaternion. This may be\n cheaper than inverting the unit quaternion and transforming the\n point.","sig":null,"attributes":[{"value":"/ Rotate a point by the inverse of this unit quaternion. This may be","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":671699,"byte_end":671769,"line_start":1504,"line_end":1504,"column_start":5,"column_end":75}},{"value":"/ cheaper than inverting the unit quaternion and transforming the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":671774,"byte_end":671841,"line_start":1505,"line_end":1505,"column_start":5,"column_end":72}},{"value":"/ point.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":671846,"byte_end":671856,"line_start":1506,"line_end":1506,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":671861,"byte_end":671864,"line_start":1507,"line_end":1507,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":671869,"byte_end":671882,"line_start":1508,"line_end":1508,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":671887,"byte_end":671890,"line_start":1509,"line_end":1509,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":671895,"byte_end":671902,"line_start":1510,"line_end":1510,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":671907,"byte_end":671946,"line_start":1511,"line_end":1511,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":671951,"byte_end":671970,"line_start":1512,"line_end":1512,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3, Point3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":671975,"byte_end":672029,"line_start":1513,"line_end":1513,"column_start":5,"column_end":59}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&Vector3::y_axis(), f32::consts::FRAC_PI_2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":672034,"byte_end":672124,"line_start":1514,"line_end":1514,"column_start":5,"column_end":95}},{"value":"/ let transformed_point = rot.inverse_transform_point(&Point3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":672129,"byte_end":672214,"line_start":1515,"line_end":1515,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":672219,"byte_end":672222,"line_start":1516,"line_end":1516,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(transformed_point, Point3::new(-3.0, 2.0, 1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":672227,"byte_end":672317,"line_start":1517,"line_end":1517,"column_start":5,"column_end":95}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":672322,"byte_end":672329,"line_start":1518,"line_end":1518,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":672334,"byte_end":672343,"line_start":1519,"line_end":1519,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4866},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":673268,"byte_end":673292,"line_start":1542,"line_end":1542,"column_start":12,"column_end":36},"name":"inverse_transform_vector","qualname":"<UnitQuaternion<N>>::inverse_transform_vector","value":"fn (&self, v: &Vector3<N>) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Rotate a vector by the inverse of this unit quaternion. This may be\n cheaper than inverting the unit quaternion and transforming the\n vector.","sig":null,"attributes":[{"value":"/ Rotate a vector by the inverse of this unit quaternion. This may be","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":672613,"byte_end":672684,"line_start":1526,"line_end":1526,"column_start":5,"column_end":76}},{"value":"/ cheaper than inverting the unit quaternion and transforming the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":672689,"byte_end":672756,"line_start":1527,"line_end":1527,"column_start":5,"column_end":72}},{"value":"/ vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":672761,"byte_end":672772,"line_start":1528,"line_end":1528,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":672777,"byte_end":672780,"line_start":1529,"line_end":1529,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":672785,"byte_end":672798,"line_start":1530,"line_end":1530,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":672803,"byte_end":672806,"line_start":1531,"line_end":1531,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":672811,"byte_end":672818,"line_start":1532,"line_end":1532,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":672823,"byte_end":672862,"line_start":1533,"line_end":1533,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":672867,"byte_end":672886,"line_start":1534,"line_end":1534,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":672891,"byte_end":672937,"line_start":1535,"line_end":1535,"column_start":5,"column_end":51}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&Vector3::y_axis(), f32::consts::FRAC_PI_2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":672942,"byte_end":673032,"line_start":1536,"line_end":1536,"column_start":5,"column_end":95}},{"value":"/ let transformed_vector = rot.inverse_transform_vector(&Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":673037,"byte_end":673125,"line_start":1537,"line_end":1537,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":673130,"byte_end":673133,"line_start":1538,"line_end":1538,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(transformed_vector, Vector3::new(-3.0, 2.0, 1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":673138,"byte_end":673230,"line_start":1539,"line_end":1539,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":673235,"byte_end":673242,"line_start":1540,"line_end":1540,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":673247,"byte_end":673256,"line_start":1541,"line_end":1541,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4917},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":676061,"byte_end":676072,"line_start":27,"line_end":27,"column_start":12,"column_end":23},"name":"from_vector","qualname":"<Quaternion<N>>::from_vector","value":"fn (vector: Vector4<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a quaternion from a 4D vector. The quaternion scalar part corresponds to the `w`\n vector component.\n","sig":null,"attributes":[{"value":"/ Creates a quaternion from a 4D vector. The quaternion scalar part corresponds to the `w`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":675867,"byte_end":675959,"line_start":23,"line_end":23,"column_start":5,"column_end":97}},{"value":"/ vector component.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":675964,"byte_end":675985,"line_start":24,"line_end":24,"column_start":5,"column_end":26}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":675990,"byte_end":675999,"line_start":25,"line_end":25,"column_start":5,"column_end":14}},{"value":"deprecated(note = \"Use `::from` instead.\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":676004,"byte_end":676049,"line_start":26,"line_end":26,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":4918},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":676734,"byte_end":676737,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<Quaternion<N>>::new","value":"fn (w: N, i: N, j: N, k: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new quaternion from its individual components. Note that the arguments order does\n **not** follow the storage order.","sig":null,"attributes":[{"value":"/ Creates a new quaternion from its individual components. Note that the arguments order does","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":676146,"byte_end":676241,"line_start":31,"line_end":31,"column_start":5,"column_end":100}},{"value":"/ **not** follow the storage order.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":676246,"byte_end":676283,"line_start":32,"line_end":32,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":676288,"byte_end":676291,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ The storage order is `[ i, j, k, w ]` while the arguments for this functions are in the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":676296,"byte_end":676387,"line_start":34,"line_end":34,"column_start":5,"column_end":96}},{"value":"/ order `(w, i, j, k)`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":676392,"byte_end":676417,"line_start":35,"line_end":35,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":676422,"byte_end":676425,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":676430,"byte_end":676443,"line_start":37,"line_end":37,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":676448,"byte_end":676455,"line_start":38,"line_end":38,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Quaternion, Vector4};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":676460,"byte_end":676502,"line_start":39,"line_end":39,"column_start":5,"column_end":47}},{"value":"/ let q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":676507,"byte_end":676555,"line_start":40,"line_end":40,"column_start":5,"column_end":53}},{"value":"/ assert!(q.i == 2.0 && q.j == 3.0 && q.k == 4.0 && q.w == 1.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":676560,"byte_end":676626,"line_start":41,"line_end":41,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(*q.as_vector(), Vector4::new(2.0, 3.0, 4.0, 1.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":676631,"byte_end":676696,"line_start":42,"line_end":42,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":676701,"byte_end":676708,"line_start":43,"line_end":43,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":676713,"byte_end":676722,"line_start":44,"line_end":44,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4921},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":676928,"byte_end":676937,"line_start":53,"line_end":53,"column_start":12,"column_end":21},"name":"from_imag","qualname":"<Quaternion<N>>::from_imag","value":"fn (vector: Vector3<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a pure quaternion.\n","sig":null,"attributes":[{"value":"/ Constructs a pure quaternion.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":676869,"byte_end":676902,"line_start":51,"line_end":51,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":676907,"byte_end":676916,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4922},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":677652,"byte_end":677662,"line_start":73,"line_end":73,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Quaternion<N>>::from_parts","value":"fn <SB> (scalar: N, vector: Vector<N, U3, SB>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new quaternion from its scalar and vector parts. Note that the arguments order does\n **not** follow the storage order.","sig":null,"attributes":[{"value":"/ Creates a new quaternion from its scalar and vector parts. Note that the arguments order does","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":677023,"byte_end":677120,"line_start":57,"line_end":57,"column_start":5,"column_end":102}},{"value":"/ **not** follow the storage order.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":677125,"byte_end":677162,"line_start":58,"line_end":58,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":677167,"byte_end":677170,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ The storage order is [ vector, scalar ].","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":677175,"byte_end":677219,"line_start":60,"line_end":60,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":677224,"byte_end":677227,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":677232,"byte_end":677245,"line_start":62,"line_end":62,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":677250,"byte_end":677257,"line_start":63,"line_end":63,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Quaternion, Vector3, Vector4};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":677262,"byte_end":677313,"line_start":64,"line_end":64,"column_start":5,"column_end":56}},{"value":"/ let w = 1.0;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":677318,"byte_end":677334,"line_start":65,"line_end":65,"column_start":5,"column_end":21}},{"value":"/ let ijk = Vector3::new(2.0, 3.0, 4.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":677339,"byte_end":677381,"line_start":66,"line_end":66,"column_start":5,"column_end":47}},{"value":"/ let q = Quaternion::from_parts(w, ijk);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":677386,"byte_end":677429,"line_start":67,"line_end":67,"column_start":5,"column_end":48}},{"value":"/ assert!(q.i == 2.0 && q.j == 3.0 && q.k == 4.0 && q.w == 1.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":677434,"byte_end":677500,"line_start":68,"line_end":68,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(*q.as_vector(), Vector4::new(2.0, 3.0, 4.0, 1.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":677505,"byte_end":677570,"line_start":69,"line_end":69,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":677575,"byte_end":677582,"line_start":70,"line_end":70,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":677587,"byte_end":677596,"line_start":71,"line_end":71,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4924},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":677886,"byte_end":677895,"line_start":82,"line_end":82,"column_start":12,"column_end":21},"name":"from_real","qualname":"<Quaternion<N>>::from_real","value":"fn (r: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a real quaternion.\n","sig":null,"attributes":[{"value":"/ Constructs a real quaternion.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":677827,"byte_end":677860,"line_start":80,"line_end":80,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":677865,"byte_end":677874,"line_start":81,"line_end":81,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4925},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":678289,"byte_end":678297,"line_start":98,"line_end":98,"column_start":12,"column_end":20},"name":"identity","qualname":"<Quaternion<N>>::identity","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" The quaternion multiplicative identity.","sig":null,"attributes":[{"value":"/ The quaternion multiplicative identity.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":677968,"byte_end":678011,"line_start":86,"line_end":86,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":678016,"byte_end":678019,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":678024,"byte_end":678037,"line_start":88,"line_end":88,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":678042,"byte_end":678049,"line_start":89,"line_end":89,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":678054,"byte_end":678085,"line_start":90,"line_end":90,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::identity();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":678090,"byte_end":678125,"line_start":91,"line_end":91,"column_start":5,"column_end":40}},{"value":"/ let q2 = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":678130,"byte_end":678179,"line_start":92,"line_end":92,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":678184,"byte_end":678187,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(q * q2, q2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":678192,"byte_end":678219,"line_start":94,"line_end":94,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(q2 * q, q2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":678224,"byte_end":678251,"line_start":95,"line_end":95,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":678256,"byte_end":678263,"line_start":96,"line_end":96,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":678268,"byte_end":678277,"line_start":97,"line_end":97,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4928},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":678651,"byte_end":678675,"line_start":112,"line_end":112,"column_start":12,"column_end":36},"name":"from_polar_decomposition","qualname":"<Quaternion<N>>::from_polar_decomposition","value":"fn <SB> (scale: N, theta: N, axis: Unit<Vector<N, U3, SB>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new quaternion from its polar decomposition.","sig":null,"attributes":[{"value":"/ Creates a new quaternion from its polar decomposition.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":678474,"byte_end":678532,"line_start":108,"line_end":108,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":678537,"byte_end":678540,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ Note that `axis` is assumed to be a unit vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":678545,"byte_end":678597,"line_start":110,"line_end":110,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":4944},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":680497,"byte_end":680505,"line_start":193,"line_end":193,"column_start":12,"column_end":20},"name":"identity","qualname":"<UnitQuaternion<N>>::identity","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" The rotation identity.","sig":null,"attributes":[{"value":"/ The rotation identity.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":680021,"byte_end":680047,"line_start":177,"line_end":177,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":680052,"byte_end":680055,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":680060,"byte_end":680073,"line_start":179,"line_end":179,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":680078,"byte_end":680085,"line_start":180,"line_end":180,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3, Point3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":680090,"byte_end":680144,"line_start":181,"line_end":181,"column_start":5,"column_end":59}},{"value":"/ let q = UnitQuaternion::identity();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":680149,"byte_end":680188,"line_start":182,"line_end":182,"column_start":5,"column_end":44}},{"value":"/ let q2 = UnitQuaternion::new(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":680193,"byte_end":680255,"line_start":183,"line_end":183,"column_start":5,"column_end":67}},{"value":"/ let v = Vector3::new_random();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":680260,"byte_end":680294,"line_start":184,"line_end":184,"column_start":5,"column_end":39}},{"value":"/ let p = Point3::from(v);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":680299,"byte_end":680327,"line_start":185,"line_end":185,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":680332,"byte_end":680335,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(q * q2, q2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":680340,"byte_end":680367,"line_start":187,"line_end":187,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(q2 * q, q2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":680372,"byte_end":680399,"line_start":188,"line_end":188,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(q * v, v);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":680404,"byte_end":680429,"line_start":189,"line_end":189,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(q * p, p);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":680434,"byte_end":680459,"line_start":190,"line_end":190,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":680464,"byte_end":680471,"line_start":191,"line_end":191,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":680476,"byte_end":680485,"line_start":192,"line_end":192,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4945},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":681612,"byte_end":681627,"line_start":221,"line_end":221,"column_start":12,"column_end":27},"name":"from_axis_angle","qualname":"<UnitQuaternion<N>>::from_axis_angle","value":"fn <SB> (axis: &Unit<Vector<N, U3, SB>>, angle: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new quaternion from a unit vector (the rotation axis) and an angle\n (the rotation angle).","sig":null,"attributes":[{"value":"/ Creates a new quaternion from a unit vector (the rotation axis) and an angle","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":680581,"byte_end":680661,"line_start":197,"line_end":197,"column_start":5,"column_end":85}},{"value":"/ (the rotation angle).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":680666,"byte_end":680691,"line_start":198,"line_end":198,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":680696,"byte_end":680699,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":680704,"byte_end":680717,"line_start":200,"line_end":200,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":680722,"byte_end":680729,"line_start":201,"line_end":201,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":680734,"byte_end":680773,"line_start":202,"line_end":202,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":680778,"byte_end":680797,"line_start":203,"line_end":203,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Point3, Vector3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":680802,"byte_end":680856,"line_start":204,"line_end":204,"column_start":5,"column_end":59}},{"value":"/ let axis = Vector3::y_axis();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":680861,"byte_end":680894,"line_start":205,"line_end":205,"column_start":5,"column_end":38}},{"value":"/ let angle = f32::consts::FRAC_PI_2;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":680899,"byte_end":680938,"line_start":206,"line_end":206,"column_start":5,"column_end":44}},{"value":"/ // Point and vector being transformed in the tests.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":680943,"byte_end":680998,"line_start":207,"line_end":207,"column_start":5,"column_end":60}},{"value":"/ let pt = Point3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":681003,"byte_end":681043,"line_start":208,"line_end":208,"column_start":5,"column_end":45}},{"value":"/ let vec = Vector3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":681048,"byte_end":681090,"line_start":209,"line_end":209,"column_start":5,"column_end":47}},{"value":"/ let q = UnitQuaternion::from_axis_angle(&axis, angle);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":681095,"byte_end":681153,"line_start":210,"line_end":210,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":681158,"byte_end":681161,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(q.axis().unwrap(), axis);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":681166,"byte_end":681206,"line_start":212,"line_end":212,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(q.angle(), angle);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":681211,"byte_end":681244,"line_start":213,"line_end":213,"column_start":5,"column_end":38}},{"value":"/ assert_relative_eq!(q * pt, Point3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":681249,"byte_end":681328,"line_start":214,"line_end":214,"column_start":5,"column_end":84}},{"value":"/ assert_relative_eq!(q * vec, Vector3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":681333,"byte_end":681414,"line_start":215,"line_end":215,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":681419,"byte_end":681422,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ // A zero vector yields an identity.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":681427,"byte_end":681467,"line_start":217,"line_end":217,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(UnitQuaternion::from_scaled_axis(Vector3::<f32>::zeros()), UnitQuaternion::identity());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":681472,"byte_end":681574,"line_start":218,"line_end":218,"column_start":5,"column_end":107}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":681579,"byte_end":681586,"line_start":219,"line_end":219,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":681591,"byte_end":681600,"line_start":220,"line_end":220,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4947},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":682048,"byte_end":682063,"line_start":235,"line_end":235,"column_start":12,"column_end":27},"name":"from_quaternion","qualname":"<UnitQuaternion<N>>::from_quaternion","value":"fn (q: Quaternion<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unit quaternion from a quaternion.","sig":null,"attributes":[{"value":"/ Creates a new unit quaternion from a quaternion.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":681913,"byte_end":681965,"line_start":231,"line_end":231,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":681970,"byte_end":681973,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ The input quaternion will be normalized.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":681978,"byte_end":682022,"line_start":233,"line_end":233,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":682027,"byte_end":682036,"line_start":234,"line_end":234,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4948},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":682729,"byte_end":682746,"line_start":254,"line_end":254,"column_start":12,"column_end":29},"name":"from_euler_angles","qualname":"<UnitQuaternion<N>>::from_euler_angles","value":"fn (roll: N, pitch: N, yaw: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unit quaternion from Euler angles.","sig":null,"attributes":[{"value":"/ Creates a new unit quaternion from Euler angles.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":682134,"byte_end":682186,"line_start":239,"line_end":239,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":682191,"byte_end":682194,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ The primitive rotations are applied in order: 1 roll − 2 pitch − 3 yaw.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":682199,"byte_end":682278,"line_start":241,"line_end":241,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":682283,"byte_end":682286,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":682291,"byte_end":682304,"line_start":243,"line_end":243,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":682309,"byte_end":682316,"line_start":244,"line_end":244,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":682321,"byte_end":682360,"line_start":245,"line_end":245,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::UnitQuaternion;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":682365,"byte_end":682400,"line_start":246,"line_end":246,"column_start":5,"column_end":40}},{"value":"/ let rot = UnitQuaternion::from_euler_angles(0.1, 0.2, 0.3);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":682405,"byte_end":682468,"line_start":247,"line_end":247,"column_start":5,"column_end":68}},{"value":"/ let euler = rot.euler_angles();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":682473,"byte_end":682508,"line_start":248,"line_end":248,"column_start":5,"column_end":40}},{"value":"/ assert_relative_eq!(euler.0, 0.1, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":682513,"byte_end":682569,"line_start":249,"line_end":249,"column_start":5,"column_end":61}},{"value":"/ assert_relative_eq!(euler.1, 0.2, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":682574,"byte_end":682630,"line_start":250,"line_end":250,"column_start":5,"column_end":61}},{"value":"/ assert_relative_eq!(euler.2, 0.3, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":682635,"byte_end":682691,"line_start":251,"line_end":251,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":682696,"byte_end":682703,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":682708,"byte_end":682717,"line_start":253,"line_end":253,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4949},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":683901,"byte_end":683921,"line_start":284,"line_end":284,"column_start":12,"column_end":32},"name":"from_rotation_matrix","qualname":"<UnitQuaternion<N>>::from_rotation_matrix","value":"fn (rotmat: &Rotation3<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds an unit quaternion from a rotation matrix.","sig":null,"attributes":[{"value":"/ Builds an unit quaternion from a rotation matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":683249,"byte_end":683302,"line_start":269,"line_end":269,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":683307,"byte_end":683310,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":683315,"byte_end":683328,"line_start":271,"line_end":271,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":683333,"byte_end":683340,"line_start":272,"line_end":272,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":683345,"byte_end":683384,"line_start":273,"line_end":273,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Rotation3, UnitQuaternion, Vector3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":683389,"byte_end":683446,"line_start":274,"line_end":274,"column_start":5,"column_end":62}},{"value":"/ let axis = Vector3::y_axis();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":683451,"byte_end":683484,"line_start":275,"line_end":275,"column_start":5,"column_end":38}},{"value":"/ let angle = 0.1;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":683489,"byte_end":683509,"line_start":276,"line_end":276,"column_start":5,"column_end":25}},{"value":"/ let rot = Rotation3::from_axis_angle(&axis, angle);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":683514,"byte_end":683569,"line_start":277,"line_end":277,"column_start":5,"column_end":60}},{"value":"/ let q = UnitQuaternion::from_rotation_matrix(&rot);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":683574,"byte_end":683629,"line_start":278,"line_end":278,"column_start":5,"column_end":60}},{"value":"/ assert_relative_eq!(q.to_rotation_matrix(), rot, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":683634,"byte_end":683705,"line_start":279,"line_end":279,"column_start":5,"column_end":76}},{"value":"/ assert_relative_eq!(q.axis().unwrap(), rot.axis().unwrap(), epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":683710,"byte_end":683792,"line_start":280,"line_end":280,"column_start":5,"column_end":87}},{"value":"/ assert_relative_eq!(q.angle(), rot.angle(), epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":683797,"byte_end":683863,"line_start":281,"line_end":281,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":683868,"byte_end":683875,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":683880,"byte_end":683889,"line_start":283,"line_end":283,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4956},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":686793,"byte_end":686804,"line_start":349,"line_end":349,"column_start":12,"column_end":23},"name":"from_matrix","qualname":"<UnitQuaternion<N>>::from_matrix","value":"fn (m: &Matrix3<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds an unit quaternion by extracting the rotation part of the given transformation `m`.","sig":null,"attributes":[{"value":"/ Builds an unit quaternion by extracting the rotation part of the given transformation `m`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":686441,"byte_end":686535,"line_start":344,"line_end":344,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":686540,"byte_end":686543,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ This is an iterative method. See `.from_matrix_eps` to provide mover","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":686548,"byte_end":686620,"line_start":346,"line_end":346,"column_start":5,"column_end":77}},{"value":"/ convergence parameters and starting solution.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":686625,"byte_end":686674,"line_start":347,"line_end":347,"column_start":5,"column_end":54}},{"value":"/ This implements \"A Robust Method to Extract the Rotational Part of Deformations\" by Müller et al.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":686679,"byte_end":686781,"line_start":348,"line_end":348,"column_start":5,"column_end":106}}]},{"kind":"Method","id":{"krate":0,"index":4957},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":687725,"byte_end":687740,"line_start":368,"line_end":368,"column_start":12,"column_end":27},"name":"from_matrix_eps","qualname":"<UnitQuaternion<N>>::from_matrix_eps","value":"fn (m: &Matrix3<N>, eps: N, max_iter: usize, guess: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds an unit quaternion by extracting the rotation part of the given transformation `m`.","sig":null,"attributes":[{"value":"/ Builds an unit quaternion by extracting the rotation part of the given transformation `m`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":686919,"byte_end":687013,"line_start":356,"line_end":356,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":687018,"byte_end":687021,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ This implements \"A Robust Method to Extract the Rotational Part of Deformations\" by Müller et al.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":687026,"byte_end":687128,"line_start":358,"line_end":358,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":687133,"byte_end":687136,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":687141,"byte_end":687157,"line_start":360,"line_end":360,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":687162,"byte_end":687165,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ * `m`: the matrix from which the rotational part is to be extracted.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":687170,"byte_end":687242,"line_start":362,"line_end":362,"column_start":5,"column_end":77}},{"value":"/ * `eps`: the angular errors tolerated between the current rotation and the optimal one.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":687247,"byte_end":687338,"line_start":363,"line_end":363,"column_start":5,"column_end":96}},{"value":"/ * `max_iter`: the maximum number of iterations. Loops indefinitely until convergence if set to `0`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":687343,"byte_end":687446,"line_start":364,"line_end":364,"column_start":5,"column_end":108}},{"value":"/ * `guess`: an estimate of the solution. Convergence will be significantly faster if an initial solution close","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":687451,"byte_end":687564,"line_start":365,"line_end":365,"column_start":5,"column_end":118}},{"value":"/           to the actual solution is provided. Can be set to `UnitQuaternion::identity()` if no other","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":687569,"byte_end":687673,"line_start":366,"line_end":366,"column_start":5,"column_end":109}},{"value":"/           guesses come to mind.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":687678,"byte_end":687713,"line_start":367,"line_end":367,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":4958},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":688622,"byte_end":688638,"line_start":391,"line_end":391,"column_start":12,"column_end":28},"name":"rotation_between","qualname":"<UnitQuaternion<N>>::rotation_between","value":"fn <SB, SC> (a: &Vector<N, U3, SB>, b: &Vector<N, U3, SC>) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" The unit quaternion needed to make `a` and `b` be collinear and point toward the same\n direction. Returns `None` if both `a` and `b` are collinear and point to opposite directions, as then the\n rotation desired is not unique.","sig":null,"attributes":[{"value":"/ The unit quaternion needed to make `a` and `b` be collinear and point toward the same","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":687963,"byte_end":688052,"line_start":376,"line_end":376,"column_start":5,"column_end":94}},{"value":"/ direction. Returns `None` if both `a` and `b` are collinear and point to opposite directions, as then the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":688057,"byte_end":688166,"line_start":377,"line_end":377,"column_start":5,"column_end":114}},{"value":"/ rotation desired is not unique.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":688171,"byte_end":688206,"line_start":378,"line_end":378,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":688211,"byte_end":688214,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":688219,"byte_end":688232,"line_start":380,"line_end":380,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":688237,"byte_end":688244,"line_start":381,"line_end":381,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":688249,"byte_end":688288,"line_start":382,"line_end":382,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Vector3, UnitQuaternion};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":688293,"byte_end":688339,"line_start":383,"line_end":383,"column_start":5,"column_end":51}},{"value":"/ let a = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":688344,"byte_end":688384,"line_start":384,"line_end":384,"column_start":5,"column_end":45}},{"value":"/ let b = Vector3::new(3.0, 1.0, 2.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":688389,"byte_end":688429,"line_start":385,"line_end":385,"column_start":5,"column_end":45}},{"value":"/ let q = UnitQuaternion::rotation_between(&a, &b).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":688434,"byte_end":688496,"line_start":386,"line_end":386,"column_start":5,"column_end":67}},{"value":"/ assert_relative_eq!(q * a, b);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":688501,"byte_end":688535,"line_start":387,"line_end":387,"column_start":5,"column_end":39}},{"value":"/ assert_relative_eq!(q.inverse() * b, a);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":688540,"byte_end":688584,"line_start":388,"line_end":388,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":688589,"byte_end":688596,"line_start":389,"line_end":389,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":688601,"byte_end":688610,"line_start":390,"line_end":390,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4961},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":689562,"byte_end":689585,"line_start":415,"line_end":415,"column_start":12,"column_end":35},"name":"scaled_rotation_between","qualname":"<UnitQuaternion<N>>::scaled_rotation_between","value":"fn <SB, SC> (a: &Vector<N, U3, SB>, b: &Vector<N, U3, SC>, s: N) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" The smallest rotation needed to make `a` and `b` collinear and point toward the same\n direction, raised to the power `s`.","sig":null,"attributes":[{"value":"/ The smallest rotation needed to make `a` and `b` collinear and point toward the same","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":688868,"byte_end":688956,"line_start":400,"line_end":400,"column_start":5,"column_end":93}},{"value":"/ direction, raised to the power `s`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":688961,"byte_end":689000,"line_start":401,"line_end":401,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":689005,"byte_end":689008,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":689013,"byte_end":689026,"line_start":403,"line_end":403,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":689031,"byte_end":689038,"line_start":404,"line_end":404,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":689043,"byte_end":689082,"line_start":405,"line_end":405,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Vector3, UnitQuaternion};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":689087,"byte_end":689133,"line_start":406,"line_end":406,"column_start":5,"column_end":51}},{"value":"/ let a = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":689138,"byte_end":689178,"line_start":407,"line_end":407,"column_start":5,"column_end":45}},{"value":"/ let b = Vector3::new(3.0, 1.0, 2.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":689183,"byte_end":689223,"line_start":408,"line_end":408,"column_start":5,"column_end":45}},{"value":"/ let q2 = UnitQuaternion::scaled_rotation_between(&a, &b, 0.2).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":689228,"byte_end":689303,"line_start":409,"line_end":409,"column_start":5,"column_end":80}},{"value":"/ let q5 = UnitQuaternion::scaled_rotation_between(&a, &b, 0.5).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":689308,"byte_end":689383,"line_start":410,"line_end":410,"column_start":5,"column_end":80}},{"value":"/ assert_relative_eq!(q2 * q2 * q2 * q2 * q2 * a, b, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":689388,"byte_end":689461,"line_start":411,"line_end":411,"column_start":5,"column_end":78}},{"value":"/ assert_relative_eq!(q5 * q5 * a, b, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":689466,"byte_end":689524,"line_start":412,"line_end":412,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":689529,"byte_end":689536,"line_start":413,"line_end":413,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":689541,"byte_end":689550,"line_start":414,"line_end":414,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4964},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":690704,"byte_end":690725,"line_start":450,"line_end":450,"column_start":12,"column_end":33},"name":"rotation_between_axis","qualname":"<UnitQuaternion<N>>::rotation_between_axis","value":"fn <SB, SC> (a: &Unit<Vector<N, U3, SB>>, b: &Unit<Vector<N, U3, SC>>) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" The unit quaternion needed to make `a` and `b` be collinear and point toward the same\n direction.","sig":null,"attributes":[{"value":"/ The unit quaternion needed to make `a` and `b` be collinear and point toward the same","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":690132,"byte_end":690221,"line_start":436,"line_end":436,"column_start":5,"column_end":94}},{"value":"/ direction.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":690226,"byte_end":690240,"line_start":437,"line_end":437,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":690245,"byte_end":690248,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":690253,"byte_end":690266,"line_start":439,"line_end":439,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":690271,"byte_end":690278,"line_start":440,"line_end":440,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":690283,"byte_end":690322,"line_start":441,"line_end":441,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Unit, Vector3, UnitQuaternion};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":690327,"byte_end":690379,"line_start":442,"line_end":442,"column_start":5,"column_end":57}},{"value":"/ let a = Unit::new_normalize(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":690384,"byte_end":690445,"line_start":443,"line_end":443,"column_start":5,"column_end":66}},{"value":"/ let b = Unit::new_normalize(Vector3::new(3.0, 1.0, 2.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":690450,"byte_end":690511,"line_start":444,"line_end":444,"column_start":5,"column_end":66}},{"value":"/ let q = UnitQuaternion::rotation_between(&a, &b).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":690516,"byte_end":690578,"line_start":445,"line_end":445,"column_start":5,"column_end":67}},{"value":"/ assert_relative_eq!(q * a, b);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":690583,"byte_end":690617,"line_start":446,"line_end":446,"column_start":5,"column_end":39}},{"value":"/ assert_relative_eq!(q.inverse() * b, a);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":690622,"byte_end":690666,"line_start":447,"line_end":447,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":690671,"byte_end":690678,"line_start":448,"line_end":448,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":690683,"byte_end":690692,"line_start":449,"line_end":449,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4967},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":691737,"byte_end":691765,"line_start":477,"line_end":477,"column_start":12,"column_end":40},"name":"scaled_rotation_between_axis","qualname":"<UnitQuaternion<N>>::scaled_rotation_between_axis","value":"fn <SB, SC> (na: &Unit<Vector<N, U3, SB>>, nb: &Unit<Vector<N, U3, SC>>, s: N) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" The smallest rotation needed to make `a` and `b` collinear and point toward the same\n direction, raised to the power `s`.","sig":null,"attributes":[{"value":"/ The smallest rotation needed to make `a` and `b` collinear and point toward the same","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":690995,"byte_end":691083,"line_start":462,"line_end":462,"column_start":5,"column_end":93}},{"value":"/ direction, raised to the power `s`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":691088,"byte_end":691127,"line_start":463,"line_end":463,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":691132,"byte_end":691135,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":691140,"byte_end":691153,"line_start":465,"line_end":465,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":691158,"byte_end":691165,"line_start":466,"line_end":466,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":691170,"byte_end":691209,"line_start":467,"line_end":467,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Unit, Vector3, UnitQuaternion};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":691214,"byte_end":691266,"line_start":468,"line_end":468,"column_start":5,"column_end":57}},{"value":"/ let a = Unit::new_normalize(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":691271,"byte_end":691332,"line_start":469,"line_end":469,"column_start":5,"column_end":66}},{"value":"/ let b = Unit::new_normalize(Vector3::new(3.0, 1.0, 2.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":691337,"byte_end":691398,"line_start":470,"line_end":470,"column_start":5,"column_end":66}},{"value":"/ let q2 = UnitQuaternion::scaled_rotation_between(&a, &b, 0.2).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":691403,"byte_end":691478,"line_start":471,"line_end":471,"column_start":5,"column_end":80}},{"value":"/ let q5 = UnitQuaternion::scaled_rotation_between(&a, &b, 0.5).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":691483,"byte_end":691558,"line_start":472,"line_end":472,"column_start":5,"column_end":80}},{"value":"/ assert_relative_eq!(q2 * q2 * q2 * q2 * q2 * a, b, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":691563,"byte_end":691636,"line_start":473,"line_end":473,"column_start":5,"column_end":78}},{"value":"/ assert_relative_eq!(q5 * q5 * a, b, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":691641,"byte_end":691699,"line_start":474,"line_end":474,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":691704,"byte_end":691711,"line_start":475,"line_end":475,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":691716,"byte_end":691725,"line_start":476,"line_end":476,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4970},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":693716,"byte_end":693728,"line_start":536,"line_end":536,"column_start":12,"column_end":24},"name":"face_towards","qualname":"<UnitQuaternion<N>>::face_towards","value":"fn <SB, SC> (dir: &Vector<N, U3, SB>, up: &Vector<N, U3, SC>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an unit quaternion that corresponds to the local frame of an observer standing at the\n origin and looking toward `dir`.","sig":null,"attributes":[{"value":"/ Creates an unit quaternion that corresponds to the local frame of an observer standing at the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":692813,"byte_end":692910,"line_start":513,"line_end":513,"column_start":5,"column_end":102}},{"value":"/ origin and looking toward `dir`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":692915,"byte_end":692951,"line_start":514,"line_end":514,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":692956,"byte_end":692959,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ It maps the `z` axis to the direction `dir`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":692964,"byte_end":693012,"line_start":516,"line_end":516,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":693017,"byte_end":693020,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":693025,"byte_end":693040,"line_start":518,"line_end":518,"column_start":5,"column_end":20}},{"value":"/   * dir - The look direction. It does not need to be normalized.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":693045,"byte_end":693113,"line_start":519,"line_end":519,"column_start":5,"column_end":73}},{"value":"/   * up - The vertical direction. It does not need to be normalized.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":693118,"byte_end":693189,"line_start":520,"line_end":520,"column_start":5,"column_end":76}},{"value":"/   The only requirement of this parameter is to not be collinear to `dir`. Non-collinearity","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":693194,"byte_end":693288,"line_start":521,"line_end":521,"column_start":5,"column_end":99}},{"value":"/   is not checked.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":693293,"byte_end":693314,"line_start":522,"line_end":522,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":693319,"byte_end":693322,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":693327,"byte_end":693340,"line_start":524,"line_end":524,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":693345,"byte_end":693352,"line_start":525,"line_end":525,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":693357,"byte_end":693396,"line_start":526,"line_end":526,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":693401,"byte_end":693420,"line_start":527,"line_end":527,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":693425,"byte_end":693471,"line_start":528,"line_end":528,"column_start":5,"column_end":51}},{"value":"/ let dir = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":693476,"byte_end":693518,"line_start":529,"line_end":529,"column_start":5,"column_end":47}},{"value":"/ let up = Vector3::y();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":693523,"byte_end":693549,"line_start":530,"line_end":530,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":693554,"byte_end":693557,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ let q = UnitQuaternion::face_towards(&dir, &up);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":693562,"byte_end":693614,"line_start":532,"line_end":532,"column_start":5,"column_end":57}},{"value":"/ assert_relative_eq!(q * Vector3::z(), dir.normalize());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":693619,"byte_end":693678,"line_start":533,"line_end":533,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":693683,"byte_end":693690,"line_start":534,"line_end":534,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":693695,"byte_end":693704,"line_start":535,"line_end":535,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4973},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":694072,"byte_end":694091,"line_start":546,"line_end":546,"column_start":12,"column_end":31},"name":"new_observer_frames","qualname":"<UnitQuaternion<N>>::new_observer_frames","value":"fn <SB, SC> (dir: &Vector<N, U3, SB>, up: &Vector<N, U3, SC>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Deprecated: Use [UnitQuaternion::face_towards] instead.\n","sig":null,"attributes":[{"value":"/ Deprecated: Use [UnitQuaternion::face_towards] instead.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":693947,"byte_end":694006,"line_start":544,"line_end":544,"column_start":5,"column_end":64}},{"value":"deprecated(note = \"renamed to `face_towards`\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":694011,"byte_end":694060,"line_start":545,"line_end":545,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":4976},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":695243,"byte_end":695253,"line_start":577,"line_end":577,"column_start":12,"column_end":22},"name":"look_at_rh","qualname":"<UnitQuaternion<N>>::look_at_rh","value":"fn <SB, SC> (dir: &Vector<N, U3, SB>, up: &Vector<N, U3, SC>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a right-handed look-at view matrix without translation.","sig":null,"attributes":[{"value":"/ Builds a right-handed look-at view matrix without translation.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":694276,"byte_end":694342,"line_start":554,"line_end":554,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":694347,"byte_end":694350,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ It maps the view direction `dir` to the **negative** `z` axis.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":694355,"byte_end":694421,"line_start":556,"line_end":556,"column_start":5,"column_end":71}},{"value":"/ This conforms to the common notion of right handed look-at matrix from the computer","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":694426,"byte_end":694513,"line_start":557,"line_end":557,"column_start":5,"column_end":92}},{"value":"/ graphics community.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":694518,"byte_end":694541,"line_start":558,"line_end":558,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":694546,"byte_end":694549,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":694554,"byte_end":694569,"line_start":560,"line_end":560,"column_start":5,"column_end":20}},{"value":"/   * dir − The view direction. It does not need to be normalized.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":694574,"byte_end":694644,"line_start":561,"line_end":561,"column_start":5,"column_end":73}},{"value":"/   * up - A vector approximately aligned with required the vertical axis. It does not need","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":694649,"byte_end":694742,"line_start":562,"line_end":562,"column_start":5,"column_end":98}},{"value":"/   to be normalized. The only requirement of this parameter is to not be collinear to `dir`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":694747,"byte_end":694842,"line_start":563,"line_end":563,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":694847,"byte_end":694850,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":694855,"byte_end":694868,"line_start":565,"line_end":565,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":694873,"byte_end":694880,"line_start":566,"line_end":566,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":694885,"byte_end":694924,"line_start":567,"line_end":567,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":694929,"byte_end":694948,"line_start":568,"line_end":568,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":694953,"byte_end":694999,"line_start":569,"line_end":569,"column_start":5,"column_end":51}},{"value":"/ let dir = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":695004,"byte_end":695046,"line_start":570,"line_end":570,"column_start":5,"column_end":47}},{"value":"/ let up = Vector3::y();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":695051,"byte_end":695077,"line_start":571,"line_end":571,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":695082,"byte_end":695085,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ let q = UnitQuaternion::look_at_rh(&dir, &up);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":695090,"byte_end":695140,"line_start":573,"line_end":573,"column_start":5,"column_end":55}},{"value":"/ assert_relative_eq!(q * dir.normalize(), -Vector3::z());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":695145,"byte_end":695205,"line_start":574,"line_end":574,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":695210,"byte_end":695217,"line_start":575,"line_end":575,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":695222,"byte_end":695231,"line_start":576,"line_end":576,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4979},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":696379,"byte_end":696389,"line_start":608,"line_end":608,"column_start":12,"column_end":22},"name":"look_at_lh","qualname":"<UnitQuaternion<N>>::look_at_lh","value":"fn <SB, SC> (dir: &Vector<N, U3, SB>, up: &Vector<N, U3, SC>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a left-handed look-at view matrix without translation.","sig":null,"attributes":[{"value":"/ Builds a left-handed look-at view matrix without translation.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":695450,"byte_end":695515,"line_start":585,"line_end":585,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":695520,"byte_end":695523,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ It maps the view direction `dir` to the **positive** `z` axis.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":695528,"byte_end":695594,"line_start":587,"line_end":587,"column_start":5,"column_end":71}},{"value":"/ This conforms to the common notion of left handed look-at matrix from the computer","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":695599,"byte_end":695685,"line_start":588,"line_end":588,"column_start":5,"column_end":91}},{"value":"/ graphics community.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":695690,"byte_end":695713,"line_start":589,"line_end":589,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":695718,"byte_end":695721,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":695726,"byte_end":695741,"line_start":591,"line_end":591,"column_start":5,"column_end":20}},{"value":"/   * dir − The view direction. It does not need to be normalized.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":695746,"byte_end":695816,"line_start":592,"line_end":592,"column_start":5,"column_end":73}},{"value":"/   * up - A vector approximately aligned with required the vertical axis. The only","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":695821,"byte_end":695906,"line_start":593,"line_end":593,"column_start":5,"column_end":90}},{"value":"/   requirement of this parameter is to not be collinear to `dir`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":695911,"byte_end":695979,"line_start":594,"line_end":594,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":695984,"byte_end":695987,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":695992,"byte_end":696005,"line_start":596,"line_end":596,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":696010,"byte_end":696017,"line_start":597,"line_end":597,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":696022,"byte_end":696061,"line_start":598,"line_end":598,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":696066,"byte_end":696085,"line_start":599,"line_end":599,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":696090,"byte_end":696136,"line_start":600,"line_end":600,"column_start":5,"column_end":51}},{"value":"/ let dir = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":696141,"byte_end":696183,"line_start":601,"line_end":601,"column_start":5,"column_end":47}},{"value":"/ let up = Vector3::y();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":696188,"byte_end":696214,"line_start":602,"line_end":602,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":696219,"byte_end":696222,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ let q = UnitQuaternion::look_at_lh(&dir, &up);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":696227,"byte_end":696277,"line_start":604,"line_end":604,"column_start":5,"column_end":55}},{"value":"/ assert_relative_eq!(q * dir.normalize(), Vector3::z());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":696282,"byte_end":696341,"line_start":605,"line_end":605,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":696346,"byte_end":696353,"line_start":606,"line_end":606,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":696358,"byte_end":696367,"line_start":607,"line_end":607,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4982},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":697588,"byte_end":697591,"line_start":638,"line_end":638,"column_start":12,"column_end":15},"name":"new","qualname":"<UnitQuaternion<N>>::new","value":"fn <SB> (axisangle: Vector<N, U3, SB>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unit quaternion rotation from a rotation axis scaled by the rotation angle.","sig":null,"attributes":[{"value":"/ Creates a new unit quaternion rotation from a rotation axis scaled by the rotation angle.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":696584,"byte_end":696677,"line_start":616,"line_end":616,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":696682,"byte_end":696685,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ If `axisangle` has a magnitude smaller than `N::default_epsilon()`, this returns the identity rotation.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":696690,"byte_end":696797,"line_start":618,"line_end":618,"column_start":5,"column_end":112}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":696802,"byte_end":696805,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":696810,"byte_end":696823,"line_start":620,"line_end":620,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":696828,"byte_end":696835,"line_start":621,"line_end":621,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":696840,"byte_end":696879,"line_start":622,"line_end":622,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":696884,"byte_end":696903,"line_start":623,"line_end":623,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Point3, Vector3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":696908,"byte_end":696962,"line_start":624,"line_end":624,"column_start":5,"column_end":59}},{"value":"/ let axisangle = Vector3::y() * f32::consts::FRAC_PI_2;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":696967,"byte_end":697025,"line_start":625,"line_end":625,"column_start":5,"column_end":63}},{"value":"/ // Point and vector being transformed in the tests.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":697030,"byte_end":697085,"line_start":626,"line_end":626,"column_start":5,"column_end":60}},{"value":"/ let pt = Point3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":697090,"byte_end":697130,"line_start":627,"line_end":627,"column_start":5,"column_end":45}},{"value":"/ let vec = Vector3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":697135,"byte_end":697177,"line_start":628,"line_end":628,"column_start":5,"column_end":47}},{"value":"/ let q = UnitQuaternion::new(axisangle);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":697182,"byte_end":697225,"line_start":629,"line_end":629,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":697230,"byte_end":697233,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(q * pt, Point3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":697238,"byte_end":697317,"line_start":631,"line_end":631,"column_start":5,"column_end":84}},{"value":"/ assert_relative_eq!(q * vec, Vector3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":697322,"byte_end":697403,"line_start":632,"line_end":632,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":697408,"byte_end":697411,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ // A zero vector yields an identity.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":697416,"byte_end":697456,"line_start":634,"line_end":634,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(UnitQuaternion::new(Vector3::<f32>::zeros()), UnitQuaternion::identity());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":697461,"byte_end":697550,"line_start":635,"line_end":635,"column_start":5,"column_end":94}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":697555,"byte_end":697562,"line_start":636,"line_end":636,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":697567,"byte_end":697576,"line_start":637,"line_end":637,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4984},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":698864,"byte_end":698871,"line_start":669,"line_end":669,"column_start":12,"column_end":19},"name":"new_eps","qualname":"<UnitQuaternion<N>>::new_eps","value":"fn <SB> (axisangle: Vector<N, U3, SB>, eps: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unit quaternion rotation from a rotation axis scaled by the rotation angle.","sig":null,"attributes":[{"value":"/ Creates a new unit quaternion rotation from a rotation axis scaled by the rotation angle.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":697832,"byte_end":697925,"line_start":647,"line_end":647,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":697930,"byte_end":697933,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ If `axisangle` has a magnitude smaller than `eps`, this returns the identity rotation.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":697938,"byte_end":698028,"line_start":649,"line_end":649,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":698033,"byte_end":698036,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":698041,"byte_end":698054,"line_start":651,"line_end":651,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":698059,"byte_end":698066,"line_start":652,"line_end":652,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":698071,"byte_end":698110,"line_start":653,"line_end":653,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":698115,"byte_end":698134,"line_start":654,"line_end":654,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Point3, Vector3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":698139,"byte_end":698193,"line_start":655,"line_end":655,"column_start":5,"column_end":59}},{"value":"/ let axisangle = Vector3::y() * f32::consts::FRAC_PI_2;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":698198,"byte_end":698256,"line_start":656,"line_end":656,"column_start":5,"column_end":63}},{"value":"/ // Point and vector being transformed in the tests.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":698261,"byte_end":698316,"line_start":657,"line_end":657,"column_start":5,"column_end":60}},{"value":"/ let pt = Point3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":698321,"byte_end":698361,"line_start":658,"line_end":658,"column_start":5,"column_end":45}},{"value":"/ let vec = Vector3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":698366,"byte_end":698408,"line_start":659,"line_end":659,"column_start":5,"column_end":47}},{"value":"/ let q = UnitQuaternion::new_eps(axisangle, 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":698413,"byte_end":698468,"line_start":660,"line_end":660,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":698473,"byte_end":698476,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(q * pt, Point3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":698481,"byte_end":698560,"line_start":662,"line_end":662,"column_start":5,"column_end":84}},{"value":"/ assert_relative_eq!(q * vec, Vector3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":698565,"byte_end":698646,"line_start":663,"line_end":663,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":698651,"byte_end":698654,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ // An almost zero vector yields an identity.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":698659,"byte_end":698707,"line_start":665,"line_end":665,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(UnitQuaternion::new_eps(Vector3::new(1.0e-8, 1.0e-9, 1.0e-7), 1.0e-6), UnitQuaternion::identity());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":698712,"byte_end":698826,"line_start":666,"line_end":666,"column_start":5,"column_end":119}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":698831,"byte_end":698838,"line_start":667,"line_end":667,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":698843,"byte_end":698852,"line_start":668,"line_end":668,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4986},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":700197,"byte_end":700213,"line_start":701,"line_end":701,"column_start":12,"column_end":28},"name":"from_scaled_axis","qualname":"<UnitQuaternion<N>>::from_scaled_axis","value":"fn <SB> (axisangle: Vector<N, U3, SB>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unit quaternion rotation from a rotation axis scaled by the rotation angle.","sig":null,"attributes":[{"value":"/ Creates a new unit quaternion rotation from a rotation axis scaled by the rotation angle.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":699127,"byte_end":699220,"line_start":678,"line_end":678,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":699225,"byte_end":699228,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ If `axisangle` has a magnitude smaller than `N::default_epsilon()`, this returns the identity rotation.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":699233,"byte_end":699340,"line_start":680,"line_end":680,"column_start":5,"column_end":112}},{"value":"/ Same as `Self::new(axisangle)`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":699345,"byte_end":699380,"line_start":681,"line_end":681,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":699385,"byte_end":699388,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":699393,"byte_end":699406,"line_start":683,"line_end":683,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":699411,"byte_end":699418,"line_start":684,"line_end":684,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":699423,"byte_end":699462,"line_start":685,"line_end":685,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":699467,"byte_end":699486,"line_start":686,"line_end":686,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Point3, Vector3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":699491,"byte_end":699545,"line_start":687,"line_end":687,"column_start":5,"column_end":59}},{"value":"/ let axisangle = Vector3::y() * f32::consts::FRAC_PI_2;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":699550,"byte_end":699608,"line_start":688,"line_end":688,"column_start":5,"column_end":63}},{"value":"/ // Point and vector being transformed in the tests.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":699613,"byte_end":699668,"line_start":689,"line_end":689,"column_start":5,"column_end":60}},{"value":"/ let pt = Point3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":699673,"byte_end":699713,"line_start":690,"line_end":690,"column_start":5,"column_end":45}},{"value":"/ let vec = Vector3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":699718,"byte_end":699760,"line_start":691,"line_end":691,"column_start":5,"column_end":47}},{"value":"/ let q = UnitQuaternion::from_scaled_axis(axisangle);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":699765,"byte_end":699821,"line_start":692,"line_end":692,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":699826,"byte_end":699829,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(q * pt, Point3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":699834,"byte_end":699913,"line_start":694,"line_end":694,"column_start":5,"column_end":84}},{"value":"/ assert_relative_eq!(q * vec, Vector3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":699918,"byte_end":699999,"line_start":695,"line_end":695,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":700004,"byte_end":700007,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ // A zero vector yields an identity.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":700012,"byte_end":700052,"line_start":697,"line_end":697,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(UnitQuaternion::from_scaled_axis(Vector3::<f32>::zeros()), UnitQuaternion::identity());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":700057,"byte_end":700159,"line_start":698,"line_end":698,"column_start":5,"column_end":107}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":700164,"byte_end":700171,"line_start":699,"line_end":699,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":700176,"byte_end":700185,"line_start":700,"line_end":700,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4988},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":701447,"byte_end":701467,"line_start":731,"line_end":731,"column_start":12,"column_end":32},"name":"from_scaled_axis_eps","qualname":"<UnitQuaternion<N>>::from_scaled_axis_eps","value":"fn <SB> (axisangle: Vector<N, U3, SB>, eps: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unit quaternion rotation from a rotation axis scaled by the rotation angle.","sig":null,"attributes":[{"value":"/ Creates a new unit quaternion rotation from a rotation axis scaled by the rotation angle.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":700340,"byte_end":700433,"line_start":708,"line_end":708,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":700438,"byte_end":700441,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ If `axisangle` has a magnitude smaller than `eps`, this returns the identity rotation.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":700446,"byte_end":700536,"line_start":710,"line_end":710,"column_start":5,"column_end":95}},{"value":"/ Same as `Self::new_eps(axisangle, eps)`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":700541,"byte_end":700585,"line_start":711,"line_end":711,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":700590,"byte_end":700593,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":700598,"byte_end":700611,"line_start":713,"line_end":713,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":700616,"byte_end":700623,"line_start":714,"line_end":714,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":700628,"byte_end":700667,"line_start":715,"line_end":715,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":700672,"byte_end":700691,"line_start":716,"line_end":716,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Point3, Vector3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":700696,"byte_end":700750,"line_start":717,"line_end":717,"column_start":5,"column_end":59}},{"value":"/ let axisangle = Vector3::y() * f32::consts::FRAC_PI_2;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":700755,"byte_end":700813,"line_start":718,"line_end":718,"column_start":5,"column_end":63}},{"value":"/ // Point and vector being transformed in the tests.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":700818,"byte_end":700873,"line_start":719,"line_end":719,"column_start":5,"column_end":60}},{"value":"/ let pt = Point3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":700878,"byte_end":700918,"line_start":720,"line_end":720,"column_start":5,"column_end":45}},{"value":"/ let vec = Vector3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":700923,"byte_end":700965,"line_start":721,"line_end":721,"column_start":5,"column_end":47}},{"value":"/ let q = UnitQuaternion::from_scaled_axis_eps(axisangle, 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":700970,"byte_end":701038,"line_start":722,"line_end":722,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":701043,"byte_end":701046,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(q * pt, Point3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":701051,"byte_end":701130,"line_start":724,"line_end":724,"column_start":5,"column_end":84}},{"value":"/ assert_relative_eq!(q * vec, Vector3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":701135,"byte_end":701216,"line_start":725,"line_end":725,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":701221,"byte_end":701224,"line_start":726,"line_end":726,"column_start":5,"column_end":8}},{"value":"/ // An almost zero vector yields an identity.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":701229,"byte_end":701277,"line_start":727,"line_end":727,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(UnitQuaternion::from_scaled_axis_eps(Vector3::new(1.0e-8, 1.0e-9, 1.0e-7), 1.0e-6), UnitQuaternion::identity());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":701282,"byte_end":701409,"line_start":728,"line_end":728,"column_start":5,"column_end":132}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":701414,"byte_end":701421,"line_start":729,"line_end":729,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":701426,"byte_end":701435,"line_start":730,"line_end":730,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4990},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":702702,"byte_end":702709,"line_start":763,"line_end":763,"column_start":12,"column_end":19},"name":"mean_of","qualname":"<UnitQuaternion<N>>::mean_of","value":"fn (unit_quaternions: impl IntoIterator<Item = Self>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create the mean unit quaternion from a data structure implementing IntoIterator\n returning unit quaternions.","sig":null,"attributes":[{"value":"/ Create the mean unit quaternion from a data structure implementing IntoIterator","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":701611,"byte_end":701694,"line_start":738,"line_end":738,"column_start":5,"column_end":88}},{"value":"/ returning unit quaternions.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":701699,"byte_end":701730,"line_start":739,"line_end":739,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":701735,"byte_end":701738,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ The method will panic if the iterator does not return any quaternions.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":701743,"byte_end":701817,"line_start":741,"line_end":741,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":701822,"byte_end":701825,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/ Algorithm from: Oshman, Yaakov, and Avishy Carmi. \"Attitude estimation from vector","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":701830,"byte_end":701916,"line_start":743,"line_end":743,"column_start":5,"column_end":91}},{"value":"/ observations using a genetic-algorithm-embedded quaternion particle filter.\" Journal of","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":701921,"byte_end":702012,"line_start":744,"line_end":744,"column_start":5,"column_end":96}},{"value":"/ Guidance, Control, and Dynamics 29.4 (2006): 879-891.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":702017,"byte_end":702074,"line_start":745,"line_end":745,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":702079,"byte_end":702082,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":702087,"byte_end":702100,"line_start":747,"line_end":747,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":702105,"byte_end":702112,"line_start":748,"line_end":748,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":702117,"byte_end":702156,"line_start":749,"line_end":749,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":702161,"byte_end":702180,"line_start":750,"line_end":750,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":702185,"byte_end":702222,"line_start":751,"line_end":751,"column_start":5,"column_end":42}},{"value":"/ let q1 = UnitQuaternion::from_euler_angles(0.0, 0.0, 0.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":702227,"byte_end":702289,"line_start":752,"line_end":752,"column_start":5,"column_end":67}},{"value":"/ let q2 = UnitQuaternion::from_euler_angles(-0.1, 0.0, 0.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":702294,"byte_end":702357,"line_start":753,"line_end":753,"column_start":5,"column_end":68}},{"value":"/ let q3 = UnitQuaternion::from_euler_angles(0.1, 0.0, 0.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":702362,"byte_end":702424,"line_start":754,"line_end":754,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":702429,"byte_end":702432,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ let quat_vec = vec![q1, q2, q3];","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":702437,"byte_end":702473,"line_start":756,"line_end":756,"column_start":5,"column_end":41}},{"value":"/ let q_mean = UnitQuaternion::mean_of(quat_vec);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":702478,"byte_end":702529,"line_start":757,"line_end":757,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":702534,"byte_end":702537,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ let euler_angles_mean = q_mean.euler_angles();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":702542,"byte_end":702592,"line_start":759,"line_end":759,"column_start":5,"column_end":55}},{"value":"/ assert_relative_eq!(euler_angles_mean.0, 0.0, epsilon = 1.0e-7)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":702597,"byte_end":702664,"line_start":760,"line_end":760,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":702669,"byte_end":702676,"line_start":761,"line_end":761,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":702681,"byte_end":702690,"line_start":762,"line_end":762,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":5252},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":738936,"byte_end":738947,"line_start":11,"line_end":11,"column_start":10,"column_end":21},"name":"UnitComplex","qualname":"::geometry::unit_complex::UnitComplex","value":"Unit<Complex<N>>","parent":null,"children":[],"decl_id":null,"docs":" A complex number with a norm equal to 1.\n","sig":null,"attributes":[{"value":"/ A complex number with a norm equal to 1.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":738882,"byte_end":738926,"line_start":10,"line_end":10,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":5263},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":740077,"byte_end":740082,"line_start":56,"line_end":56,"column_start":12,"column_end":17},"name":"angle","qualname":"<UnitComplex<N>>::angle","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The rotation angle in `]-pi; pi]` of this unit complex number.","sig":null,"attributes":[{"value":"/ The rotation angle in `]-pi; pi]` of this unit complex number.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":739817,"byte_end":739883,"line_start":47,"line_end":47,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":739888,"byte_end":739891,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":739896,"byte_end":739909,"line_start":49,"line_end":49,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":739914,"byte_end":739921,"line_start":50,"line_end":50,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::UnitComplex;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":739926,"byte_end":739958,"line_start":51,"line_end":51,"column_start":5,"column_end":37}},{"value":"/ let rot = UnitComplex::new(1.78);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":739963,"byte_end":740000,"line_start":52,"line_end":52,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(rot.angle(), 1.78);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":740005,"byte_end":740039,"line_start":53,"line_end":53,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":740044,"byte_end":740051,"line_start":54,"line_end":54,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":740056,"byte_end":740065,"line_start":55,"line_end":55,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5264},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":740414,"byte_end":740423,"line_start":70,"line_end":70,"column_start":12,"column_end":21},"name":"sin_angle","qualname":"<UnitComplex<N>>::sin_angle","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The sine of the rotation angle.","sig":null,"attributes":[{"value":"/ The sine of the rotation angle.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":740144,"byte_end":740179,"line_start":60,"line_end":60,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":740184,"byte_end":740187,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":740192,"byte_end":740205,"line_start":62,"line_end":62,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":740210,"byte_end":740217,"line_start":63,"line_end":63,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::UnitComplex;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":740222,"byte_end":740254,"line_start":64,"line_end":64,"column_start":5,"column_end":37}},{"value":"/ let angle = 1.78f32;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":740259,"byte_end":740283,"line_start":65,"line_end":65,"column_start":5,"column_end":29}},{"value":"/ let rot = UnitComplex::new(angle);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":740288,"byte_end":740326,"line_start":66,"line_end":66,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(rot.sin_angle(), angle.sin());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":740331,"byte_end":740376,"line_start":67,"line_end":67,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":740381,"byte_end":740388,"line_start":68,"line_end":68,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":740393,"byte_end":740402,"line_start":69,"line_end":69,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5265},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":740736,"byte_end":740745,"line_start":84,"line_end":84,"column_start":12,"column_end":21},"name":"cos_angle","qualname":"<UnitComplex<N>>::cos_angle","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The cosine of the rotation angle.","sig":null,"attributes":[{"value":"/ The cosine of the rotation angle.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":740465,"byte_end":740502,"line_start":74,"line_end":74,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":740507,"byte_end":740510,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":740515,"byte_end":740528,"line_start":76,"line_end":76,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":740533,"byte_end":740540,"line_start":77,"line_end":77,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::UnitComplex;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":740545,"byte_end":740577,"line_start":78,"line_end":78,"column_start":5,"column_end":37}},{"value":"/ let angle = 1.78f32;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":740582,"byte_end":740606,"line_start":79,"line_end":79,"column_start":5,"column_end":29}},{"value":"/ let rot = UnitComplex::new(angle);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":740611,"byte_end":740649,"line_start":80,"line_end":80,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(rot.cos_angle(),angle.cos());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":740654,"byte_end":740698,"line_start":81,"line_end":81,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":740703,"byte_end":740710,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":740715,"byte_end":740724,"line_start":83,"line_end":83,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5266},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":741009,"byte_end":741020,"line_start":93,"line_end":93,"column_start":12,"column_end":23},"name":"scaled_axis","qualname":"<UnitComplex<N>>::scaled_axis","value":"fn (&self) -> Vector1<N>","parent":null,"children":[],"decl_id":null,"docs":" The rotation angle returned as a 1-dimensional vector.","sig":null,"attributes":[{"value":"/ The rotation angle returned as a 1-dimensional vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":740787,"byte_end":740845,"line_start":88,"line_end":88,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":740850,"byte_end":740853,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ This is generally used in the context of generic programming. Using","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":740858,"byte_end":740929,"line_start":90,"line_end":90,"column_start":5,"column_end":76}},{"value":"/ the `.angle()` method instead is more common.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":740934,"byte_end":740983,"line_start":91,"line_end":91,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":740988,"byte_end":740997,"line_start":92,"line_end":92,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5267},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":741365,"byte_end":741375,"line_start":103,"line_end":103,"column_start":12,"column_end":22},"name":"axis_angle","qualname":"<UnitComplex<N>>::axis_angle","value":"fn (&self) -> Option<(Unit<Vector1<N>>, N)>","parent":null,"children":[],"decl_id":null,"docs":" The rotation axis and angle in ]0, pi] of this complex number.","sig":null,"attributes":[{"value":"/ The rotation axis and angle in ]0, pi] of this complex number.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":741090,"byte_end":741156,"line_start":97,"line_end":97,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":741161,"byte_end":741164,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ This is generally used in the context of generic programming. Using","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":741169,"byte_end":741240,"line_start":99,"line_end":99,"column_start":5,"column_end":76}},{"value":"/ the `.angle()` method instead is more common.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":741245,"byte_end":741294,"line_start":100,"line_end":100,"column_start":5,"column_end":54}},{"value":"/ Returns `None` if the angle is zero.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":741299,"byte_end":741339,"line_start":101,"line_end":101,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":741344,"byte_end":741353,"line_start":102,"line_end":102,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5268},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":742145,"byte_end":742152,"line_start":132,"line_end":132,"column_start":12,"column_end":19},"name":"complex","qualname":"<UnitComplex<N>>::complex","value":"fn (&self) -> &Complex<N>","parent":null,"children":[],"decl_id":null,"docs":" The underlying complex number.","sig":null,"attributes":[{"value":"/ The underlying complex number.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":741737,"byte_end":741771,"line_start":118,"line_end":118,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":741776,"byte_end":741779,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ Same as `self.as_ref()`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":741784,"byte_end":741812,"line_start":120,"line_end":120,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":741817,"byte_end":741820,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":741825,"byte_end":741838,"line_start":122,"line_end":122,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":741843,"byte_end":741850,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ # extern crate num_complex;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":741855,"byte_end":741886,"line_start":124,"line_end":124,"column_start":5,"column_end":36}},{"value":"/ # use num_complex::Complex;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":741891,"byte_end":741922,"line_start":125,"line_end":125,"column_start":5,"column_end":36}},{"value":"/ # use nalgebra::UnitComplex;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":741927,"byte_end":741959,"line_start":126,"line_end":126,"column_start":5,"column_end":37}},{"value":"/ let angle = 1.78f32;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":741964,"byte_end":741988,"line_start":127,"line_end":127,"column_start":5,"column_end":29}},{"value":"/ let rot = UnitComplex::new(angle);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":741993,"byte_end":742031,"line_start":128,"line_end":128,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(*rot.complex(), Complex::new(angle.cos(), angle.sin()));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":742036,"byte_end":742107,"line_start":129,"line_end":129,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":742112,"byte_end":742119,"line_start":130,"line_end":130,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":742124,"byte_end":742133,"line_start":131,"line_end":131,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5269},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":742627,"byte_end":742636,"line_start":148,"line_end":148,"column_start":12,"column_end":21},"name":"conjugate","qualname":"<UnitComplex<N>>::conjugate","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Compute the conjugate of this unit complex number.","sig":null,"attributes":[{"value":"/ Compute the conjugate of this unit complex number.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":742210,"byte_end":742264,"line_start":136,"line_end":136,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":742269,"byte_end":742272,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":742277,"byte_end":742290,"line_start":138,"line_end":138,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":742295,"byte_end":742302,"line_start":139,"line_end":139,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::UnitComplex;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":742307,"byte_end":742339,"line_start":140,"line_end":140,"column_start":5,"column_end":37}},{"value":"/ let rot = UnitComplex::new(1.78);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":742344,"byte_end":742381,"line_start":141,"line_end":141,"column_start":5,"column_end":42}},{"value":"/ let conj = rot.conjugate();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":742386,"byte_end":742417,"line_start":142,"line_end":142,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(rot.complex().im, -conj.complex().im);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":742422,"byte_end":742475,"line_start":143,"line_end":143,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(rot.complex().re, conj.complex().re);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":742480,"byte_end":742532,"line_start":144,"line_end":144,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":742537,"byte_end":742544,"line_start":145,"line_end":145,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":742549,"byte_end":742558,"line_start":146,"line_end":146,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use conjugate_mut()?\"","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":742563,"byte_end":742615,"line_start":147,"line_end":147,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":5270},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":743208,"byte_end":743215,"line_start":165,"line_end":165,"column_start":12,"column_end":19},"name":"inverse","qualname":"<UnitComplex<N>>::inverse","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Inverts this complex number if it is not zero.","sig":null,"attributes":[{"value":"/ Inverts this complex number if it is not zero.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":742706,"byte_end":742756,"line_start":152,"line_end":152,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":742761,"byte_end":742764,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":742769,"byte_end":742782,"line_start":154,"line_end":154,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":742787,"byte_end":742794,"line_start":155,"line_end":155,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":742799,"byte_end":742838,"line_start":156,"line_end":156,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::UnitComplex;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":742843,"byte_end":742875,"line_start":157,"line_end":157,"column_start":5,"column_end":37}},{"value":"/ let rot = UnitComplex::new(1.2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":742880,"byte_end":742916,"line_start":158,"line_end":158,"column_start":5,"column_end":41}},{"value":"/ let inv = rot.inverse();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":742921,"byte_end":742949,"line_start":159,"line_end":159,"column_start":5,"column_end":33}},{"value":"/ assert_relative_eq!(rot * inv, UnitComplex::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":742954,"byte_end":743032,"line_start":160,"line_end":160,"column_start":5,"column_end":83}},{"value":"/ assert_relative_eq!(inv * rot, UnitComplex::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":743037,"byte_end":743115,"line_start":161,"line_end":161,"column_start":5,"column_end":83}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":743120,"byte_end":743127,"line_start":162,"line_end":162,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":743132,"byte_end":743141,"line_start":163,"line_end":163,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use inverse_mut()?\"","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":743146,"byte_end":743196,"line_start":164,"line_end":164,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":5271},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":743632,"byte_end":743640,"line_start":180,"line_end":180,"column_start":12,"column_end":20},"name":"angle_to","qualname":"<UnitComplex<N>>::angle_to","value":"fn (&self, other: &Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The rotation angle needed to make `self` and `other` coincide.","sig":null,"attributes":[{"value":"/ The rotation angle needed to make `self` and `other` coincide.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":743269,"byte_end":743335,"line_start":169,"line_end":169,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":743340,"byte_end":743343,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":743348,"byte_end":743361,"line_start":171,"line_end":171,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":743366,"byte_end":743373,"line_start":172,"line_end":172,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":743378,"byte_end":743417,"line_start":173,"line_end":173,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::UnitComplex;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":743422,"byte_end":743454,"line_start":174,"line_end":174,"column_start":5,"column_end":37}},{"value":"/ let rot1 = UnitComplex::new(0.1);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":743459,"byte_end":743496,"line_start":175,"line_end":175,"column_start":5,"column_end":42}},{"value":"/ let rot2 = UnitComplex::new(1.7);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":743501,"byte_end":743538,"line_start":176,"line_end":176,"column_start":5,"column_end":42}},{"value":"/ assert_relative_eq!(rot1.angle_to(&rot2), 1.6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":743543,"byte_end":743594,"line_start":177,"line_end":177,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":743599,"byte_end":743606,"line_start":178,"line_end":178,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":743611,"byte_end":743620,"line_start":179,"line_end":179,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5272},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":744307,"byte_end":744318,"line_start":201,"line_end":201,"column_start":12,"column_end":23},"name":"rotation_to","qualname":"<UnitComplex<N>>::rotation_to","value":"fn (&self, other: &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The unit complex number needed to make `self` and `other` coincide.","sig":null,"attributes":[{"value":"/ The unit complex number needed to make `self` and `other` coincide.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":743747,"byte_end":743818,"line_start":185,"line_end":185,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":743823,"byte_end":743826,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ The result is such that: `self.rotation_to(other) * self == other`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":743831,"byte_end":743902,"line_start":187,"line_end":187,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":743907,"byte_end":743910,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":743915,"byte_end":743928,"line_start":189,"line_end":189,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":743933,"byte_end":743940,"line_start":190,"line_end":190,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":743945,"byte_end":743984,"line_start":191,"line_end":191,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::UnitComplex;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":743989,"byte_end":744021,"line_start":192,"line_end":192,"column_start":5,"column_end":37}},{"value":"/ let rot1 = UnitComplex::new(0.1);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":744026,"byte_end":744063,"line_start":193,"line_end":193,"column_start":5,"column_end":42}},{"value":"/ let rot2 = UnitComplex::new(1.7);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":744068,"byte_end":744105,"line_start":194,"line_end":194,"column_start":5,"column_end":42}},{"value":"/ let rot_to = rot1.rotation_to(&rot2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":744110,"byte_end":744151,"line_start":195,"line_end":195,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":744156,"byte_end":744159,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot_to * rot1, rot2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":744164,"byte_end":744209,"line_start":197,"line_end":197,"column_start":5,"column_end":50}},{"value":"/ assert_relative_eq!(rot_to.inverse() * rot2, rot1);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":744214,"byte_end":744269,"line_start":198,"line_end":198,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":744274,"byte_end":744281,"line_start":199,"line_end":199,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":744286,"byte_end":744295,"line_start":200,"line_end":200,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5273},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":744863,"byte_end":744876,"line_start":219,"line_end":219,"column_start":12,"column_end":25},"name":"conjugate_mut","qualname":"<UnitComplex<N>>::conjugate_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Compute in-place the conjugate of this unit complex number.","sig":null,"attributes":[{"value":"/ Compute in-place the conjugate of this unit complex number.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":744382,"byte_end":744445,"line_start":205,"line_end":205,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":744450,"byte_end":744453,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":744458,"byte_end":744471,"line_start":207,"line_end":207,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":744476,"byte_end":744483,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":744488,"byte_end":744527,"line_start":209,"line_end":209,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::UnitComplex;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":744532,"byte_end":744564,"line_start":210,"line_end":210,"column_start":5,"column_end":37}},{"value":"/ let angle = 1.7;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":744569,"byte_end":744589,"line_start":211,"line_end":211,"column_start":5,"column_end":25}},{"value":"/ let rot = UnitComplex::new(angle);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":744594,"byte_end":744632,"line_start":212,"line_end":212,"column_start":5,"column_end":43}},{"value":"/ let mut conj = UnitComplex::new(angle);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":744637,"byte_end":744680,"line_start":213,"line_end":213,"column_start":5,"column_end":48}},{"value":"/ conj.conjugate_mut();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":744685,"byte_end":744710,"line_start":214,"line_end":214,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(rot.complex().im, -conj.complex().im);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":744715,"byte_end":744768,"line_start":215,"line_end":215,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(rot.complex().re, conj.complex().re);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":744773,"byte_end":744825,"line_start":216,"line_end":216,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":744830,"byte_end":744837,"line_start":217,"line_end":217,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":744842,"byte_end":744851,"line_start":218,"line_end":218,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5274},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":745439,"byte_end":745450,"line_start":237,"line_end":237,"column_start":12,"column_end":23},"name":"inverse_mut","qualname":"<UnitComplex<N>>::inverse_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Inverts in-place this unit complex number.","sig":null,"attributes":[{"value":"/ Inverts in-place this unit complex number.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":744967,"byte_end":745013,"line_start":224,"line_end":224,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":745018,"byte_end":745021,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":745026,"byte_end":745039,"line_start":226,"line_end":226,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":745044,"byte_end":745051,"line_start":227,"line_end":227,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":745056,"byte_end":745095,"line_start":228,"line_end":228,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::UnitComplex;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":745100,"byte_end":745132,"line_start":229,"line_end":229,"column_start":5,"column_end":37}},{"value":"/ let angle = 1.7;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":745137,"byte_end":745157,"line_start":230,"line_end":230,"column_start":5,"column_end":25}},{"value":"/ let mut rot = UnitComplex::new(angle);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":745162,"byte_end":745204,"line_start":231,"line_end":231,"column_start":5,"column_end":47}},{"value":"/ rot.inverse_mut();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":745209,"byte_end":745231,"line_start":232,"line_end":232,"column_start":5,"column_end":27}},{"value":"/ assert_relative_eq!(rot * UnitComplex::new(angle), UnitComplex::identity());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":745236,"byte_end":745316,"line_start":233,"line_end":233,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(UnitComplex::new(angle) * rot, UnitComplex::identity());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":745321,"byte_end":745401,"line_start":234,"line_end":234,"column_start":5,"column_end":85}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":745406,"byte_end":745413,"line_start":235,"line_end":235,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":745418,"byte_end":745427,"line_start":236,"line_end":236,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5275},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":745975,"byte_end":745979,"line_start":255,"line_end":255,"column_start":12,"column_end":16},"name":"powf","qualname":"<UnitComplex<N>>::powf","value":"fn (&self, n: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Raise this unit complex number to a given floating power.","sig":null,"attributes":[{"value":"/ Raise this unit complex number to a given floating power.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":745504,"byte_end":745565,"line_start":241,"line_end":241,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":745570,"byte_end":745573,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ This returns the unit complex number that identifies a rotation angle equal to","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":745578,"byte_end":745660,"line_start":243,"line_end":243,"column_start":5,"column_end":87}},{"value":"/ `self.angle() × n`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":745665,"byte_end":745689,"line_start":244,"line_end":244,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":745694,"byte_end":745697,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":745702,"byte_end":745715,"line_start":246,"line_end":246,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":745720,"byte_end":745727,"line_start":247,"line_end":247,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":745732,"byte_end":745771,"line_start":248,"line_end":248,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::UnitComplex;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":745776,"byte_end":745808,"line_start":249,"line_end":249,"column_start":5,"column_end":37}},{"value":"/ let rot = UnitComplex::new(0.78);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":745813,"byte_end":745850,"line_start":250,"line_end":250,"column_start":5,"column_end":42}},{"value":"/ let pow = rot.powf(2.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":745855,"byte_end":745883,"line_start":251,"line_end":251,"column_start":5,"column_end":33}},{"value":"/ assert_relative_eq!(pow.angle(), 2.0 * 0.78);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":745888,"byte_end":745937,"line_start":252,"line_end":252,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":745942,"byte_end":745949,"line_start":253,"line_end":253,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":745954,"byte_end":745963,"line_start":254,"line_end":254,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5276},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":746459,"byte_end":746477,"line_start":270,"line_end":270,"column_start":12,"column_end":30},"name":"to_rotation_matrix","qualname":"<UnitComplex<N>>::to_rotation_matrix","value":"fn (&self) -> Rotation2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds the rotation matrix corresponding to this unit complex number.","sig":null,"attributes":[{"value":"/ Builds the rotation matrix corresponding to this unit complex number.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":746057,"byte_end":746130,"line_start":259,"line_end":259,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":746135,"byte_end":746138,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":746143,"byte_end":746156,"line_start":261,"line_end":261,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":746161,"byte_end":746168,"line_start":262,"line_end":262,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{UnitComplex, Rotation2};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":746173,"byte_end":746218,"line_start":263,"line_end":263,"column_start":5,"column_end":50}},{"value":"/ # use std::f32;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":746223,"byte_end":746242,"line_start":264,"line_end":264,"column_start":5,"column_end":24}},{"value":"/ let rot = UnitComplex::new(f32::consts::FRAC_PI_6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":746247,"byte_end":746302,"line_start":265,"line_end":265,"column_start":5,"column_end":60}},{"value":"/ let expected = Rotation2::new(f32::consts::FRAC_PI_6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":746307,"byte_end":746365,"line_start":266,"line_end":266,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(rot.to_rotation_matrix(), expected);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":746370,"byte_end":746421,"line_start":267,"line_end":267,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":746426,"byte_end":746433,"line_start":268,"line_end":268,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":746438,"byte_end":746447,"line_start":269,"line_end":269,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5277},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":747175,"byte_end":747189,"line_start":290,"line_end":290,"column_start":12,"column_end":26},"name":"to_homogeneous","qualname":"<UnitComplex<N>>::to_homogeneous","value":"fn (&self) -> Matrix3<N>","parent":null,"children":[],"decl_id":null,"docs":" Converts this unit complex number into its equivalent homogeneous transformation matrix.","sig":null,"attributes":[{"value":"/ Converts this unit complex number into its equivalent homogeneous transformation matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":746633,"byte_end":746725,"line_start":277,"line_end":277,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":746730,"byte_end":746733,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":746738,"byte_end":746751,"line_start":279,"line_end":279,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":746756,"byte_end":746763,"line_start":280,"line_end":280,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{UnitComplex, Matrix3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":746768,"byte_end":746811,"line_start":281,"line_end":281,"column_start":5,"column_end":48}},{"value":"/ # use std::f32;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":746816,"byte_end":746835,"line_start":282,"line_end":282,"column_start":5,"column_end":24}},{"value":"/ let rot = UnitComplex::new(f32::consts::FRAC_PI_6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":746840,"byte_end":746895,"line_start":283,"line_end":283,"column_start":5,"column_end":60}},{"value":"/ let expected = Matrix3::new(0.8660254, -0.5,      0.0,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":746900,"byte_end":746958,"line_start":284,"line_end":284,"column_start":5,"column_end":63}},{"value":"/                             0.5,       0.8660254, 0.0,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":746963,"byte_end":747021,"line_start":285,"line_end":285,"column_start":5,"column_end":63}},{"value":"/                             0.0,       0.0,       1.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":747026,"byte_end":747085,"line_start":286,"line_end":286,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(rot.to_homogeneous(), expected);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":747090,"byte_end":747137,"line_start":287,"line_end":287,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":747142,"byte_end":747149,"line_start":288,"line_end":288,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":747154,"byte_end":747163,"line_start":289,"line_end":289,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5278},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":747816,"byte_end":747831,"line_start":308,"line_end":308,"column_start":12,"column_end":27},"name":"transform_point","qualname":"<UnitComplex<N>>::transform_point","value":"fn (&self, pt: &Point2<N>) -> Point2<N>","parent":null,"children":[],"decl_id":null,"docs":" Rotate the given point by this unit complex number.","sig":null,"attributes":[{"value":"/ Rotate the given point by this unit complex number.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":747275,"byte_end":747330,"line_start":294,"line_end":294,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":747335,"byte_end":747338,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * pt`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":747343,"byte_end":747398,"line_start":296,"line_end":296,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":747403,"byte_end":747406,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":747411,"byte_end":747424,"line_start":298,"line_end":298,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":747429,"byte_end":747436,"line_start":299,"line_end":299,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":747441,"byte_end":747480,"line_start":300,"line_end":300,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{UnitComplex, Point2};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":747485,"byte_end":747527,"line_start":301,"line_end":301,"column_start":5,"column_end":47}},{"value":"/ # use std::f32;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":747532,"byte_end":747551,"line_start":302,"line_end":302,"column_start":5,"column_end":24}},{"value":"/ let rot = UnitComplex::new(f32::consts::FRAC_PI_2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":747556,"byte_end":747611,"line_start":303,"line_end":303,"column_start":5,"column_end":60}},{"value":"/ let transformed_point = rot.transform_point(&Point2::new(1.0, 2.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":747616,"byte_end":747688,"line_start":304,"line_end":304,"column_start":5,"column_end":77}},{"value":"/ assert_relative_eq!(transformed_point, Point2::new(-2.0, 1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":747693,"byte_end":747778,"line_start":305,"line_end":305,"column_start":5,"column_end":90}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":747783,"byte_end":747790,"line_start":306,"line_end":306,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":747795,"byte_end":747804,"line_start":307,"line_end":307,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5279},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":748446,"byte_end":748462,"line_start":326,"line_end":326,"column_start":12,"column_end":28},"name":"transform_vector","qualname":"<UnitComplex<N>>::transform_vector","value":"fn (&self, v: &Vector2<N>) -> Vector2<N>","parent":null,"children":[],"decl_id":null,"docs":" Rotate the given vector by this unit complex number.","sig":null,"attributes":[{"value":"/ Rotate the given vector by this unit complex number.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":747899,"byte_end":747955,"line_start":312,"line_end":312,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":747960,"byte_end":747963,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * v`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":747968,"byte_end":748022,"line_start":314,"line_end":314,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":748027,"byte_end":748030,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":748035,"byte_end":748048,"line_start":316,"line_end":316,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":748053,"byte_end":748060,"line_start":317,"line_end":317,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":748065,"byte_end":748104,"line_start":318,"line_end":318,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{UnitComplex, Vector2};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":748109,"byte_end":748152,"line_start":319,"line_end":319,"column_start":5,"column_end":48}},{"value":"/ # use std::f32;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":748157,"byte_end":748176,"line_start":320,"line_end":320,"column_start":5,"column_end":24}},{"value":"/ let rot = UnitComplex::new(f32::consts::FRAC_PI_2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":748181,"byte_end":748236,"line_start":321,"line_end":321,"column_start":5,"column_end":60}},{"value":"/ let transformed_vector = rot.transform_vector(&Vector2::new(1.0, 2.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":748241,"byte_end":748316,"line_start":322,"line_end":322,"column_start":5,"column_end":80}},{"value":"/ assert_relative_eq!(transformed_vector, Vector2::new(-2.0, 1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":748321,"byte_end":748408,"line_start":323,"line_end":323,"column_start":5,"column_end":92}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":748413,"byte_end":748420,"line_start":324,"line_end":324,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":748425,"byte_end":748434,"line_start":325,"line_end":325,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5280},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":749026,"byte_end":749049,"line_start":342,"line_end":342,"column_start":12,"column_end":35},"name":"inverse_transform_point","qualname":"<UnitComplex<N>>::inverse_transform_point","value":"fn (&self, pt: &Point2<N>) -> Point2<N>","parent":null,"children":[],"decl_id":null,"docs":" Rotate the given point by the inverse of this unit complex number.","sig":null,"attributes":[{"value":"/ Rotate the given point by the inverse of this unit complex number.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":748530,"byte_end":748600,"line_start":330,"line_end":330,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":748605,"byte_end":748608,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":748613,"byte_end":748626,"line_start":332,"line_end":332,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":748631,"byte_end":748638,"line_start":333,"line_end":333,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":748643,"byte_end":748682,"line_start":334,"line_end":334,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{UnitComplex, Point2};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":748687,"byte_end":748729,"line_start":335,"line_end":335,"column_start":5,"column_end":47}},{"value":"/ # use std::f32;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":748734,"byte_end":748753,"line_start":336,"line_end":336,"column_start":5,"column_end":24}},{"value":"/ let rot = UnitComplex::new(f32::consts::FRAC_PI_2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":748758,"byte_end":748813,"line_start":337,"line_end":337,"column_start":5,"column_end":60}},{"value":"/ let transformed_point = rot.inverse_transform_point(&Point2::new(1.0, 2.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":748818,"byte_end":748898,"line_start":338,"line_end":338,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(transformed_point, Point2::new(2.0, -1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":748903,"byte_end":748988,"line_start":339,"line_end":339,"column_start":5,"column_end":90}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":748993,"byte_end":749000,"line_start":340,"line_end":340,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":749005,"byte_end":749014,"line_start":341,"line_end":341,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5281},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":749787,"byte_end":749811,"line_start":360,"line_end":360,"column_start":12,"column_end":36},"name":"inverse_transform_vector","qualname":"<UnitComplex<N>>::inverse_transform_vector","value":"fn (&self, v: &Vector2<N>) -> Vector2<N>","parent":null,"children":[],"decl_id":null,"docs":" Rotate the given vector by the inverse of this unit complex number.","sig":null,"attributes":[{"value":"/ Rotate the given vector by the inverse of this unit complex number.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":749284,"byte_end":749355,"line_start":348,"line_end":348,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":749360,"byte_end":749363,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":749368,"byte_end":749381,"line_start":350,"line_end":350,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":749386,"byte_end":749393,"line_start":351,"line_end":351,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":749398,"byte_end":749437,"line_start":352,"line_end":352,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{UnitComplex, Vector2};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":749442,"byte_end":749485,"line_start":353,"line_end":353,"column_start":5,"column_end":48}},{"value":"/ # use std::f32;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":749490,"byte_end":749509,"line_start":354,"line_end":354,"column_start":5,"column_end":24}},{"value":"/ let rot = UnitComplex::new(f32::consts::FRAC_PI_2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":749514,"byte_end":749569,"line_start":355,"line_end":355,"column_start":5,"column_end":60}},{"value":"/ let transformed_vector = rot.inverse_transform_vector(&Vector2::new(1.0, 2.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":749574,"byte_end":749657,"line_start":356,"line_end":356,"column_start":5,"column_end":88}},{"value":"/ assert_relative_eq!(transformed_vector, Vector2::new(2.0, -1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":749662,"byte_end":749749,"line_start":357,"line_end":357,"column_start":5,"column_end":92}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":749754,"byte_end":749761,"line_start":358,"line_end":358,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":749766,"byte_end":749775,"line_start":359,"line_end":359,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5321},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":752071,"byte_end":752079,"line_start":32,"line_end":32,"column_start":12,"column_end":20},"name":"identity","qualname":"<UnitComplex<N>>::identity","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" The unit complex number multiplicative identity.","sig":null,"attributes":[{"value":"/ The unit complex number multiplicative identity.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":751734,"byte_end":751786,"line_start":20,"line_end":20,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":751791,"byte_end":751794,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":751799,"byte_end":751812,"line_start":22,"line_end":22,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":751817,"byte_end":751824,"line_start":23,"line_end":23,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::UnitComplex;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":751829,"byte_end":751861,"line_start":24,"line_end":24,"column_start":5,"column_end":37}},{"value":"/ let rot1 = UnitComplex::identity();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":751866,"byte_end":751905,"line_start":25,"line_end":25,"column_start":5,"column_end":44}},{"value":"/ let rot2 = UnitComplex::new(1.7);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":751910,"byte_end":751947,"line_start":26,"line_end":26,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":751952,"byte_end":751955,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(rot1 * rot2, rot2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":751960,"byte_end":751994,"line_start":28,"line_end":28,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(rot2 * rot1, rot2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":751999,"byte_end":752033,"line_start":29,"line_end":29,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":752038,"byte_end":752045,"line_start":30,"line_end":30,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":752050,"byte_end":752059,"line_start":31,"line_end":31,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5322},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":752601,"byte_end":752604,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<UnitComplex<N>>::new","value":"fn (angle: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds the unit complex number corresponding to the rotation with the given angle.","sig":null,"attributes":[{"value":"/ Builds the unit complex number corresponding to the rotation with the given angle.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":752166,"byte_end":752252,"line_start":36,"line_end":36,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":752257,"byte_end":752260,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":752265,"byte_end":752278,"line_start":38,"line_end":38,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":752283,"byte_end":752286,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":752291,"byte_end":752298,"line_start":40,"line_end":40,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":752303,"byte_end":752342,"line_start":41,"line_end":41,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":752347,"byte_end":752366,"line_start":42,"line_end":42,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitComplex, Point2};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":752371,"byte_end":752413,"line_start":43,"line_end":43,"column_start":5,"column_end":47}},{"value":"/ let rot = UnitComplex::new(f32::consts::FRAC_PI_2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":752418,"byte_end":752473,"line_start":44,"line_end":44,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":752478,"byte_end":752481,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot * Point2::new(3.0, 4.0), Point2::new(-4.0, 3.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":752486,"byte_end":752563,"line_start":46,"line_end":46,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":752568,"byte_end":752575,"line_start":47,"line_end":47,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":752580,"byte_end":752589,"line_start":48,"line_end":48,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5323},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":753240,"byte_end":753250,"line_start":70,"line_end":70,"column_start":12,"column_end":22},"name":"from_angle","qualname":"<UnitComplex<N>>::from_angle","value":"fn (angle: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds the unit complex number corresponding to the rotation with the angle.","sig":null,"attributes":[{"value":"/ Builds the unit complex number corresponding to the rotation with the angle.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":752730,"byte_end":752810,"line_start":54,"line_end":54,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":752815,"byte_end":752818,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Same as `Self::new(angle)`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":752823,"byte_end":752854,"line_start":56,"line_end":56,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":752859,"byte_end":752862,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":752867,"byte_end":752880,"line_start":58,"line_end":58,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":752885,"byte_end":752888,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":752893,"byte_end":752900,"line_start":60,"line_end":60,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":752905,"byte_end":752944,"line_start":61,"line_end":61,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":752949,"byte_end":752968,"line_start":62,"line_end":62,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitComplex, Point2};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":752973,"byte_end":753015,"line_start":63,"line_end":63,"column_start":5,"column_end":47}},{"value":"/ let rot = UnitComplex::from_angle(f32::consts::FRAC_PI_2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":753020,"byte_end":753082,"line_start":64,"line_end":64,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":753087,"byte_end":753090,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot * Point2::new(3.0, 4.0), Point2::new(-4.0, 3.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":753095,"byte_end":753172,"line_start":66,"line_end":66,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":753177,"byte_end":753184,"line_start":67,"line_end":67,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":753219,"byte_end":753228,"line_start":69,"line_end":69,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5324},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":753996,"byte_end":754018,"line_start":91,"line_end":91,"column_start":12,"column_end":34},"name":"from_cos_sin_unchecked","qualname":"<UnitComplex<N>>::from_cos_sin_unchecked","value":"fn (cos: N, sin: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds the unit complex number from the sinus and cosinus of the rotation angle.","sig":null,"attributes":[{"value":"/ Builds the unit complex number from the sinus and cosinus of the rotation angle.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":753307,"byte_end":753391,"line_start":74,"line_end":74,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":753396,"byte_end":753399,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ The input values are not checked to actually be cosines and sine of the same value.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":753404,"byte_end":753491,"line_start":76,"line_end":76,"column_start":5,"column_end":92}},{"value":"/ Is is generally preferable to use the `::new(angle)` constructor instead.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":753496,"byte_end":753573,"line_start":77,"line_end":77,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":753578,"byte_end":753581,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":753586,"byte_end":753599,"line_start":79,"line_end":79,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":753604,"byte_end":753607,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":753612,"byte_end":753619,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":753624,"byte_end":753663,"line_start":82,"line_end":82,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":753668,"byte_end":753687,"line_start":83,"line_end":83,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitComplex, Vector2, Point2};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":753692,"byte_end":753743,"line_start":84,"line_end":84,"column_start":5,"column_end":56}},{"value":"/ let angle = f32::consts::FRAC_PI_2;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":753748,"byte_end":753787,"line_start":85,"line_end":85,"column_start":5,"column_end":44}},{"value":"/ let rot = UnitComplex::from_cos_sin_unchecked(angle.cos(), angle.sin());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":753792,"byte_end":753868,"line_start":86,"line_end":86,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":753873,"byte_end":753876,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot * Point2::new(3.0, 4.0), Point2::new(-4.0, 3.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":753881,"byte_end":753958,"line_start":88,"line_end":88,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":753963,"byte_end":753970,"line_start":89,"line_end":89,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":753975,"byte_end":753984,"line_start":90,"line_end":90,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5325},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":754369,"byte_end":754385,"line_start":100,"line_end":100,"column_start":12,"column_end":28},"name":"from_scaled_axis","qualname":"<UnitComplex<N>>::from_scaled_axis","value":"fn <SB> (axisangle: Vector<N, U1, SB>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a unit complex rotation from an angle in radian wrapped in a 1-dimensional vector.","sig":null,"attributes":[{"value":"/ Builds a unit complex rotation from an angle in radian wrapped in a 1-dimensional vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":754108,"byte_end":754201,"line_start":95,"line_end":95,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":754206,"byte_end":754209,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ This is generally used in the context of generic programming. Using","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":754214,"byte_end":754285,"line_start":97,"line_end":97,"column_start":5,"column_end":76}},{"value":"/ the `::new(angle)` method instead is more common.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":754290,"byte_end":754343,"line_start":98,"line_end":98,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":754348,"byte_end":754357,"line_start":99,"line_end":99,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5327},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":754643,"byte_end":754655,"line_start":108,"line_end":108,"column_start":12,"column_end":24},"name":"from_complex","qualname":"<UnitComplex<N>>::from_complex","value":"fn (q: Complex<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unit complex number from a complex number.","sig":null,"attributes":[{"value":"/ Creates a new unit complex number from a complex number.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":754496,"byte_end":754556,"line_start":104,"line_end":104,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":754561,"byte_end":754564,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ The input complex number will be normalized.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":754569,"byte_end":754617,"line_start":106,"line_end":106,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":754622,"byte_end":754631,"line_start":107,"line_end":107,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5328},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":754927,"byte_end":754947,"line_start":116,"line_end":116,"column_start":12,"column_end":32},"name":"from_complex_and_get","qualname":"<UnitComplex<N>>::from_complex_and_get","value":"fn (q: Complex<N>) -> (Self, N)","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unit complex number from a complex number.","sig":null,"attributes":[{"value":"/ Creates a new unit complex number from a complex number.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":754732,"byte_end":754792,"line_start":112,"line_end":112,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":754797,"byte_end":754800,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ The input complex number will be normalized. Returns the norm of the complex number as well.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":754805,"byte_end":754901,"line_start":114,"line_end":114,"column_start":5,"column_end":101}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":754906,"byte_end":754915,"line_start":115,"line_end":115,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5329},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":755502,"byte_end":755522,"line_start":132,"line_end":132,"column_start":12,"column_end":32},"name":"from_rotation_matrix","qualname":"<UnitComplex<N>>::from_rotation_matrix","value":"fn (rotmat: &Rotation2<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds the unit complex number from the corresponding 2D rotation matrix.","sig":null,"attributes":[{"value":"/ Builds the unit complex number from the corresponding 2D rotation matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":755095,"byte_end":755172,"line_start":121,"line_end":121,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":755177,"byte_end":755180,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":755185,"byte_end":755198,"line_start":123,"line_end":123,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":755203,"byte_end":755210,"line_start":124,"line_end":124,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Rotation2, UnitComplex};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":755215,"byte_end":755260,"line_start":125,"line_end":125,"column_start":5,"column_end":50}},{"value":"/ let rot = Rotation2::new(1.7);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":755265,"byte_end":755299,"line_start":126,"line_end":126,"column_start":5,"column_end":39}},{"value":"/ let complex = UnitComplex::from_rotation_matrix(&rot);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":755304,"byte_end":755362,"line_start":127,"line_end":127,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(complex, UnitComplex::new(1.7));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":755367,"byte_end":755414,"line_start":128,"line_end":128,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":755419,"byte_end":755426,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":755481,"byte_end":755490,"line_start":131,"line_end":131,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5330},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":755990,"byte_end":756001,"line_start":141,"line_end":141,"column_start":12,"column_end":23},"name":"from_matrix","qualname":"<UnitComplex<N>>::from_matrix","value":"fn (m: &Matrix2<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds an unit complex by extracting the rotation part of the given transformation `m`.","sig":null,"attributes":[{"value":"/ Builds an unit complex by extracting the rotation part of the given transformation `m`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":755641,"byte_end":755732,"line_start":136,"line_end":136,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":755737,"byte_end":755740,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ This is an iterative method. See `.from_matrix_eps` to provide mover","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":755745,"byte_end":755817,"line_start":138,"line_end":138,"column_start":5,"column_end":77}},{"value":"/ convergence parameters and starting solution.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":755822,"byte_end":755871,"line_start":139,"line_end":139,"column_start":5,"column_end":54}},{"value":"/ This implements \"A Robust Method to Extract the Rotational Part of Deformations\" by Müller et al.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":755876,"byte_end":755978,"line_start":140,"line_end":140,"column_start":5,"column_end":106}}]},{"kind":"Method","id":{"krate":0,"index":5331},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":756919,"byte_end":756934,"line_start":160,"line_end":160,"column_start":12,"column_end":27},"name":"from_matrix_eps","qualname":"<UnitComplex<N>>::from_matrix_eps","value":"fn (m: &Matrix2<N>, eps: N, max_iter: usize, guess: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds an unit complex by extracting the rotation part of the given transformation `m`.","sig":null,"attributes":[{"value":"/ Builds an unit complex by extracting the rotation part of the given transformation `m`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":756116,"byte_end":756207,"line_start":148,"line_end":148,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":756212,"byte_end":756215,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ This implements \"A Robust Method to Extract the Rotational Part of Deformations\" by Müller et al.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":756220,"byte_end":756322,"line_start":150,"line_end":150,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":756327,"byte_end":756330,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":756335,"byte_end":756351,"line_start":152,"line_end":152,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":756356,"byte_end":756359,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ * `m`: the matrix from which the rotational part is to be extracted.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":756364,"byte_end":756436,"line_start":154,"line_end":154,"column_start":5,"column_end":77}},{"value":"/ * `eps`: the angular errors tolerated between the current rotation and the optimal one.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":756441,"byte_end":756532,"line_start":155,"line_end":155,"column_start":5,"column_end":96}},{"value":"/ * `max_iter`: the maximum number of iterations. Loops indefinitely until convergence if set to `0`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":756537,"byte_end":756640,"line_start":156,"line_end":156,"column_start":5,"column_end":108}},{"value":"/ * `guess`: an estimate of the solution. Convergence will be significantly faster if an initial solution close","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":756645,"byte_end":756758,"line_start":157,"line_end":157,"column_start":5,"column_end":118}},{"value":"/           to the actual solution is provided. Can be set to `UnitQuaternion::identity()` if no other","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":756763,"byte_end":756867,"line_start":158,"line_end":158,"column_start":5,"column_end":109}},{"value":"/           guesses come to mind.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":756872,"byte_end":756907,"line_start":159,"line_end":159,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":5332},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":757659,"byte_end":757675,"line_start":182,"line_end":182,"column_start":12,"column_end":28},"name":"rotation_between","qualname":"<UnitComplex<N>>::rotation_between","value":"fn <SB, SC> (a: &Vector<N, U2, SB>, b: &Vector<N, U2, SC>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The unit complex needed to make `a` and `b` be collinear and point toward the same\n direction.","sig":null,"attributes":[{"value":"/ The unit complex needed to make `a` and `b` be collinear and point toward the same","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":757157,"byte_end":757243,"line_start":168,"line_end":168,"column_start":5,"column_end":91}},{"value":"/ direction.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":757248,"byte_end":757262,"line_start":169,"line_end":169,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":757267,"byte_end":757270,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":757275,"byte_end":757288,"line_start":171,"line_end":171,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":757293,"byte_end":757300,"line_start":172,"line_end":172,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":757305,"byte_end":757344,"line_start":173,"line_end":173,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Vector2, UnitComplex};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":757349,"byte_end":757392,"line_start":174,"line_end":174,"column_start":5,"column_end":48}},{"value":"/ let a = Vector2::new(1.0, 2.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":757397,"byte_end":757432,"line_start":175,"line_end":175,"column_start":5,"column_end":40}},{"value":"/ let b = Vector2::new(2.0, 1.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":757437,"byte_end":757472,"line_start":176,"line_end":176,"column_start":5,"column_end":40}},{"value":"/ let rot = UnitComplex::rotation_between(&a, &b);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":757477,"byte_end":757529,"line_start":177,"line_end":177,"column_start":5,"column_end":57}},{"value":"/ assert_relative_eq!(rot * a, b);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":757534,"byte_end":757570,"line_start":178,"line_end":178,"column_start":5,"column_end":41}},{"value":"/ assert_relative_eq!(rot.inverse() * b, a);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":757575,"byte_end":757621,"line_start":179,"line_end":179,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":757626,"byte_end":757633,"line_start":180,"line_end":180,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":757638,"byte_end":757647,"line_start":181,"line_end":181,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5335},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":758572,"byte_end":758595,"line_start":206,"line_end":206,"column_start":12,"column_end":35},"name":"scaled_rotation_between","qualname":"<UnitComplex<N>>::scaled_rotation_between","value":"fn <SB, SC> (a: &Vector<N, U2, SB>, b: &Vector<N, U2, SC>, s: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The smallest rotation needed to make `a` and `b` collinear and point toward the same\n direction, raised to the power `s`.","sig":null,"attributes":[{"value":"/ The smallest rotation needed to make `a` and `b` collinear and point toward the same","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":757897,"byte_end":757985,"line_start":191,"line_end":191,"column_start":5,"column_end":93}},{"value":"/ direction, raised to the power `s`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":757990,"byte_end":758029,"line_start":192,"line_end":192,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":758034,"byte_end":758037,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":758042,"byte_end":758055,"line_start":194,"line_end":194,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":758060,"byte_end":758067,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":758072,"byte_end":758111,"line_start":196,"line_end":196,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Vector2, UnitComplex};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":758116,"byte_end":758159,"line_start":197,"line_end":197,"column_start":5,"column_end":48}},{"value":"/ let a = Vector2::new(1.0, 2.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":758164,"byte_end":758199,"line_start":198,"line_end":198,"column_start":5,"column_end":40}},{"value":"/ let b = Vector2::new(2.0, 1.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":758204,"byte_end":758239,"line_start":199,"line_end":199,"column_start":5,"column_end":40}},{"value":"/ let rot2 = UnitComplex::scaled_rotation_between(&a, &b, 0.2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":758244,"byte_end":758309,"line_start":200,"line_end":200,"column_start":5,"column_end":70}},{"value":"/ let rot5 = UnitComplex::scaled_rotation_between(&a, &b, 0.5);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":758314,"byte_end":758379,"line_start":201,"line_end":201,"column_start":5,"column_end":70}},{"value":"/ assert_relative_eq!(rot2 * rot2 * rot2 * rot2 * rot2 * a, b, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":758384,"byte_end":758467,"line_start":202,"line_end":202,"column_start":5,"column_end":88}},{"value":"/ assert_relative_eq!(rot5 * rot5 * a, b, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":758472,"byte_end":758534,"line_start":203,"line_end":203,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":758539,"byte_end":758546,"line_start":204,"line_end":204,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":758551,"byte_end":758560,"line_start":205,"line_end":205,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5338},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":759683,"byte_end":759704,"line_start":241,"line_end":241,"column_start":12,"column_end":33},"name":"rotation_between_axis","qualname":"<UnitComplex<N>>::rotation_between_axis","value":"fn <SB, SC> (a: &Unit<Vector<N, U2, SB>>, b: &Unit<Vector<N, U2, SC>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The unit complex needed to make `a` and `b` be collinear and point toward the same\n direction.","sig":null,"attributes":[{"value":"/ The unit complex needed to make `a` and `b` be collinear and point toward the same","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":759128,"byte_end":759214,"line_start":227,"line_end":227,"column_start":5,"column_end":91}},{"value":"/ direction.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":759219,"byte_end":759233,"line_start":228,"line_end":228,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":759238,"byte_end":759241,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":759246,"byte_end":759259,"line_start":230,"line_end":230,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":759264,"byte_end":759271,"line_start":231,"line_end":231,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":759276,"byte_end":759315,"line_start":232,"line_end":232,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Unit, Vector2, UnitComplex};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":759320,"byte_end":759369,"line_start":233,"line_end":233,"column_start":5,"column_end":54}},{"value":"/ let a = Unit::new_normalize(Vector2::new(1.0, 2.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":759374,"byte_end":759430,"line_start":234,"line_end":234,"column_start":5,"column_end":61}},{"value":"/ let b = Unit::new_normalize(Vector2::new(2.0, 1.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":759435,"byte_end":759491,"line_start":235,"line_end":235,"column_start":5,"column_end":61}},{"value":"/ let rot = UnitComplex::rotation_between_axis(&a, &b);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":759496,"byte_end":759553,"line_start":236,"line_end":236,"column_start":5,"column_end":62}},{"value":"/ assert_relative_eq!(rot * a, b);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":759558,"byte_end":759594,"line_start":237,"line_end":237,"column_start":5,"column_end":41}},{"value":"/ assert_relative_eq!(rot.inverse() * b, a);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":759599,"byte_end":759645,"line_start":238,"line_end":238,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":759650,"byte_end":759657,"line_start":239,"line_end":239,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":759662,"byte_end":759671,"line_start":240,"line_end":240,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5341},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":760677,"byte_end":760705,"line_start":267,"line_end":267,"column_start":12,"column_end":40},"name":"scaled_rotation_between_axis","qualname":"<UnitComplex<N>>::scaled_rotation_between_axis","value":"fn <SB, SC> (na: &Unit<Vector<N, U2, SB>>, nb: &Unit<Vector<N, U2, SC>>, s: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The smallest rotation needed to make `a` and `b` collinear and point toward the same\n direction, raised to the power `s`.","sig":null,"attributes":[{"value":"/ The smallest rotation needed to make `a` and `b` collinear and point toward the same","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":759944,"byte_end":760032,"line_start":252,"line_end":252,"column_start":5,"column_end":93}},{"value":"/ direction, raised to the power `s`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":760037,"byte_end":760076,"line_start":253,"line_end":253,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":760081,"byte_end":760084,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":760089,"byte_end":760102,"line_start":255,"line_end":255,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":760107,"byte_end":760114,"line_start":256,"line_end":256,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":760119,"byte_end":760158,"line_start":257,"line_end":257,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Unit, Vector2, UnitComplex};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":760163,"byte_end":760212,"line_start":258,"line_end":258,"column_start":5,"column_end":54}},{"value":"/ let a = Unit::new_normalize(Vector2::new(1.0, 2.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":760217,"byte_end":760273,"line_start":259,"line_end":259,"column_start":5,"column_end":61}},{"value":"/ let b = Unit::new_normalize(Vector2::new(2.0, 1.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":760278,"byte_end":760334,"line_start":260,"line_end":260,"column_start":5,"column_end":61}},{"value":"/ let rot2 = UnitComplex::scaled_rotation_between_axis(&a, &b, 0.2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":760339,"byte_end":760409,"line_start":261,"line_end":261,"column_start":5,"column_end":75}},{"value":"/ let rot5 = UnitComplex::scaled_rotation_between_axis(&a, &b, 0.5);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":760414,"byte_end":760484,"line_start":262,"line_end":262,"column_start":5,"column_end":75}},{"value":"/ assert_relative_eq!(rot2 * rot2 * rot2 * rot2 * rot2 * a, b, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":760489,"byte_end":760572,"line_start":263,"line_end":263,"column_start":5,"column_end":88}},{"value":"/ assert_relative_eq!(rot5 * rot5 * a, b, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":760577,"byte_end":760639,"line_start":264,"line_end":264,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":760644,"byte_end":760651,"line_start":265,"line_end":265,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":760656,"byte_end":760665,"line_start":266,"line_end":266,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":18664},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":783986,"byte_end":783997,"line_start":26,"line_end":26,"column_start":12,"column_end":23},"name":"Translation","qualname":"::geometry::translation::Translation","value":"Translation { vector }","parent":null,"children":[{"krate":0,"index":18667}],"decl_id":null,"docs":" A translation.\n","sig":null,"attributes":[{"value":"/ A translation.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":783928,"byte_end":783946,"line_start":23,"line_end":23,"column_start":1,"column_end":19}},{"value":"repr(C)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":783947,"byte_end":783957,"line_start":24,"line_end":24,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":18667},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":784193,"byte_end":784199,"line_start":32,"line_end":32,"column_start":9,"column_end":15},"name":"vector","qualname":"::geometry::translation::Translation::vector","value":"base::matrix::Matrix<N, D, base::dimension::U1, <base::default_allocator::DefaultAllocator as base::allocator::Allocator<N, D>>::Buffer>","parent":{"krate":0,"index":18664},"children":[],"decl_id":null,"docs":" The translation coordinates, i.e., how much is added to a point's coordinates when it is\n translated.\n","sig":null,"attributes":[{"value":"/ The translation coordinates, i.e., how much is added to a point's coordinates when it is","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":784072,"byte_end":784164,"line_start":30,"line_end":30,"column_start":5,"column_end":97}},{"value":"/ translated.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":784169,"byte_end":784184,"line_start":31,"line_end":31,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5620},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":786324,"byte_end":786335,"line_start":121,"line_end":121,"column_start":12,"column_end":23},"name":"from_vector","qualname":"<Translation<N, D>>::from_vector","value":"fn (vector: VectorN<N, D>) -> Translation<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new translation from the given vector.\n","sig":null,"attributes":[{"value":"/ Creates a new translation from the given vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":786196,"byte_end":786248,"line_start":118,"line_end":118,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":786253,"byte_end":786262,"line_start":119,"line_end":119,"column_start":5,"column_end":14}},{"value":"deprecated(note = \"Use `::from` instead.\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":786267,"byte_end":786312,"line_start":120,"line_end":120,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":5621},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":787026,"byte_end":787033,"line_start":141,"line_end":141,"column_start":12,"column_end":19},"name":"inverse","qualname":"<Translation<N, D>>::inverse","value":"fn (&self) -> Translation<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Inverts `self`.","sig":null,"attributes":[{"value":"/ Inverts `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":786432,"byte_end":786451,"line_start":125,"line_end":125,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":786456,"byte_end":786459,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":786464,"byte_end":786477,"line_start":127,"line_end":127,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":786482,"byte_end":786489,"line_start":128,"line_end":128,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Translation2, Translation3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":786494,"byte_end":786543,"line_start":129,"line_end":129,"column_start":5,"column_end":54}},{"value":"/ let t = Translation3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":786548,"byte_end":786593,"line_start":130,"line_end":130,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(t * t.inverse(), Translation3::identity());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":786598,"byte_end":786656,"line_start":131,"line_end":131,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(t.inverse() * t, Translation3::identity());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":786661,"byte_end":786719,"line_start":132,"line_end":132,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":786724,"byte_end":786727,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ // Work in all dimensions.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":786732,"byte_end":786762,"line_start":134,"line_end":134,"column_start":5,"column_end":35}},{"value":"/ let t = Translation2::new(1.0, 2.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":786767,"byte_end":786807,"line_start":135,"line_end":135,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(t * t.inverse(), Translation2::identity());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":786812,"byte_end":786870,"line_start":136,"line_end":136,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(t.inverse() * t, Translation2::identity());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":786875,"byte_end":786933,"line_start":137,"line_end":137,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":786938,"byte_end":786945,"line_start":138,"line_end":138,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":786950,"byte_end":786959,"line_start":139,"line_end":139,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use inverse_mut()?\"","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":786964,"byte_end":787014,"line_start":140,"line_end":140,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":5622},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":787976,"byte_end":787990,"line_start":167,"line_end":167,"column_start":12,"column_end":26},"name":"to_homogeneous","qualname":"<Translation<N, D>>::to_homogeneous","value":"fn (&self) -> MatrixN<N, DimNameSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Converts this translation into its equivalent homogeneous transformation matrix.","sig":null,"attributes":[{"value":"/ Converts this translation into its equivalent homogeneous transformation matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":787152,"byte_end":787236,"line_start":148,"line_end":148,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":787241,"byte_end":787244,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":787249,"byte_end":787262,"line_start":150,"line_end":150,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":787267,"byte_end":787274,"line_start":151,"line_end":151,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Translation2, Translation3, Matrix3, Matrix4};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":787279,"byte_end":787346,"line_start":152,"line_end":152,"column_start":5,"column_end":72}},{"value":"/ let t = Translation3::new(10.0, 20.0, 30.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":787351,"byte_end":787399,"line_start":153,"line_end":153,"column_start":5,"column_end":53}},{"value":"/ let expected = Matrix4::new(1.0, 0.0, 0.0, 10.0,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":787404,"byte_end":787456,"line_start":154,"line_end":154,"column_start":5,"column_end":57}},{"value":"/                             0.0, 1.0, 0.0, 20.0,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":787461,"byte_end":787513,"line_start":155,"line_end":155,"column_start":5,"column_end":57}},{"value":"/                             0.0, 0.0, 1.0, 30.0,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":787518,"byte_end":787570,"line_start":156,"line_end":156,"column_start":5,"column_end":57}},{"value":"/                             0.0, 0.0, 0.0, 1.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":787575,"byte_end":787627,"line_start":157,"line_end":157,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(t.to_homogeneous(), expected);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":787632,"byte_end":787677,"line_start":158,"line_end":158,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":787682,"byte_end":787685,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ let t = Translation2::new(10.0, 20.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":787690,"byte_end":787732,"line_start":160,"line_end":160,"column_start":5,"column_end":47}},{"value":"/ let expected = Matrix3::new(1.0, 0.0, 10.0,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":787737,"byte_end":787784,"line_start":161,"line_end":161,"column_start":5,"column_end":52}},{"value":"/                             0.0, 1.0, 20.0,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":787789,"byte_end":787836,"line_start":162,"line_end":162,"column_start":5,"column_end":52}},{"value":"/                             0.0, 0.0, 1.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":787841,"byte_end":787888,"line_start":163,"line_end":163,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(t.to_homogeneous(), expected);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":787893,"byte_end":787938,"line_start":164,"line_end":164,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":787943,"byte_end":787950,"line_start":165,"line_end":165,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":787955,"byte_end":787964,"line_start":166,"line_end":166,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5623},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":789047,"byte_end":789058,"line_start":199,"line_end":199,"column_start":12,"column_end":23},"name":"inverse_mut","qualname":"<Translation<N, D>>::inverse_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Inverts `self` in-place.","sig":null,"attributes":[{"value":"/ Inverts `self` in-place.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":788354,"byte_end":788382,"line_start":180,"line_end":180,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":788387,"byte_end":788390,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":788395,"byte_end":788408,"line_start":182,"line_end":182,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":788413,"byte_end":788420,"line_start":183,"line_end":183,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Translation2, Translation3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":788425,"byte_end":788474,"line_start":184,"line_end":184,"column_start":5,"column_end":54}},{"value":"/ let t = Translation3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":788479,"byte_end":788524,"line_start":185,"line_end":185,"column_start":5,"column_end":50}},{"value":"/ let mut inv_t = Translation3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":788529,"byte_end":788582,"line_start":186,"line_end":186,"column_start":5,"column_end":58}},{"value":"/ inv_t.inverse_mut();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":788587,"byte_end":788611,"line_start":187,"line_end":187,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(t * inv_t, Translation3::identity());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":788616,"byte_end":788668,"line_start":188,"line_end":188,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(inv_t * t, Translation3::identity());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":788673,"byte_end":788725,"line_start":189,"line_end":189,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":788730,"byte_end":788733,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ // Work in all dimensions.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":788738,"byte_end":788768,"line_start":191,"line_end":191,"column_start":5,"column_end":35}},{"value":"/ let t = Translation2::new(1.0, 2.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":788773,"byte_end":788813,"line_start":192,"line_end":192,"column_start":5,"column_end":45}},{"value":"/ let mut inv_t = Translation2::new(1.0, 2.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":788818,"byte_end":788866,"line_start":193,"line_end":193,"column_start":5,"column_end":53}},{"value":"/ inv_t.inverse_mut();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":788871,"byte_end":788895,"line_start":194,"line_end":194,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(t * inv_t, Translation2::identity());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":788900,"byte_end":788952,"line_start":195,"line_end":195,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(inv_t * t, Translation2::identity());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":788957,"byte_end":789009,"line_start":196,"line_end":196,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":789014,"byte_end":789021,"line_start":197,"line_end":197,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":789026,"byte_end":789035,"line_start":198,"line_end":198,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5627},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":789663,"byte_end":789678,"line_start":222,"line_end":222,"column_start":12,"column_end":27},"name":"transform_point","qualname":"<Translation<N, D>>::transform_point","value":"fn (&self, pt: &Point<N, D>) -> Point<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Translate the given point.","sig":null,"attributes":[{"value":"/ Translate the given point.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":789256,"byte_end":789286,"line_start":211,"line_end":211,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":789291,"byte_end":789294,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * pt`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":789299,"byte_end":789354,"line_start":213,"line_end":213,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":789359,"byte_end":789362,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":789367,"byte_end":789380,"line_start":215,"line_end":215,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":789385,"byte_end":789392,"line_start":216,"line_end":216,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Translation3, Point3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":789397,"byte_end":789440,"line_start":217,"line_end":217,"column_start":5,"column_end":48}},{"value":"/ let t = Translation3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":789445,"byte_end":789490,"line_start":218,"line_end":218,"column_start":5,"column_end":50}},{"value":"/ let transformed_point = t.transform_point(&Point3::new(4.0, 5.0, 6.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":789495,"byte_end":789570,"line_start":219,"line_end":219,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(transformed_point, Point3::new(5.0, 7.0, 9.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":789575,"byte_end":789637,"line_start":220,"line_end":220,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":789642,"byte_end":789651,"line_start":221,"line_end":221,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5631},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":790247,"byte_end":790270,"line_start":240,"line_end":240,"column_start":12,"column_end":35},"name":"inverse_transform_point","qualname":"<Translation<N, D>>::inverse_transform_point","value":"fn (&self, pt: &Point<N, D>) -> Point<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Translate the given point by the inverse of this translation.","sig":null,"attributes":[{"value":"/ Translate the given point by the inverse of this translation.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":789865,"byte_end":789930,"line_start":231,"line_end":231,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":789935,"byte_end":789938,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":789943,"byte_end":789956,"line_start":233,"line_end":233,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":789961,"byte_end":789968,"line_start":234,"line_end":234,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Translation3, Point3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":789973,"byte_end":790016,"line_start":235,"line_end":235,"column_start":5,"column_end":48}},{"value":"/ let t = Translation3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":790021,"byte_end":790066,"line_start":236,"line_end":236,"column_start":5,"column_end":50}},{"value":"/ let transformed_point = t.inverse_transform_point(&Point3::new(4.0, 5.0, 6.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":790071,"byte_end":790154,"line_start":237,"line_end":237,"column_start":5,"column_end":88}},{"value":"/ assert_eq!(transformed_point, Point3::new(3.0, 3.0, 3.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":790159,"byte_end":790221,"line_start":238,"line_end":238,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":790226,"byte_end":790235,"line_start":239,"line_end":239,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":5668},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation_alias.rs","byte_start":792531,"byte_end":792543,"line_start":6,"line_end":6,"column_start":10,"column_end":22},"name":"Translation1","qualname":"::geometry::translation_alias::Translation1","value":"Translation<N, U1>","parent":null,"children":[],"decl_id":null,"docs":" A 1-dimensional translation.\n","sig":null,"attributes":[{"value":"/ A 1-dimensional translation.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation_alias.rs","byte_start":792489,"byte_end":792521,"line_start":5,"line_end":5,"column_start":1,"column_end":33}}]},{"kind":"Type","id":{"krate":0,"index":5670},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation_alias.rs","byte_start":792612,"byte_end":792624,"line_start":9,"line_end":9,"column_start":10,"column_end":22},"name":"Translation2","qualname":"::geometry::translation_alias::Translation2","value":"Translation<N, U2>","parent":null,"children":[],"decl_id":null,"docs":" A 2-dimensional translation.\n","sig":null,"attributes":[{"value":"/ A 2-dimensional translation.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation_alias.rs","byte_start":792570,"byte_end":792602,"line_start":8,"line_end":8,"column_start":1,"column_end":33}}]},{"kind":"Type","id":{"krate":0,"index":5672},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation_alias.rs","byte_start":792693,"byte_end":792705,"line_start":12,"line_end":12,"column_start":10,"column_end":22},"name":"Translation3","qualname":"::geometry::translation_alias::Translation3","value":"Translation<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" A 3-dimensional translation.\n","sig":null,"attributes":[{"value":"/ A 3-dimensional translation.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation_alias.rs","byte_start":792651,"byte_end":792683,"line_start":11,"line_end":11,"column_start":1,"column_end":33}}]},{"kind":"Type","id":{"krate":0,"index":5674},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation_alias.rs","byte_start":792774,"byte_end":792786,"line_start":15,"line_end":15,"column_start":10,"column_end":22},"name":"Translation4","qualname":"::geometry::translation_alias::Translation4","value":"Translation<N, U4>","parent":null,"children":[],"decl_id":null,"docs":" A 4-dimensional translation.\n","sig":null,"attributes":[{"value":"/ A 4-dimensional translation.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation_alias.rs","byte_start":792732,"byte_end":792764,"line_start":14,"line_end":14,"column_start":1,"column_end":33}}]},{"kind":"Type","id":{"krate":0,"index":5676},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation_alias.rs","byte_start":792855,"byte_end":792867,"line_start":18,"line_end":18,"column_start":10,"column_end":22},"name":"Translation5","qualname":"::geometry::translation_alias::Translation5","value":"Translation<N, U5>","parent":null,"children":[],"decl_id":null,"docs":" A 5-dimensional translation.\n","sig":null,"attributes":[{"value":"/ A 5-dimensional translation.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation_alias.rs","byte_start":792813,"byte_end":792845,"line_start":17,"line_end":17,"column_start":1,"column_end":33}}]},{"kind":"Type","id":{"krate":0,"index":5678},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation_alias.rs","byte_start":792936,"byte_end":792948,"line_start":21,"line_end":21,"column_start":10,"column_end":22},"name":"Translation6","qualname":"::geometry::translation_alias::Translation6","value":"Translation<N, U6>","parent":null,"children":[],"decl_id":null,"docs":" A 6-dimensional translation.\n","sig":null,"attributes":[{"value":"/ A 6-dimensional translation.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation_alias.rs","byte_start":792894,"byte_end":792926,"line_start":20,"line_end":20,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":5706},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation_construction.rs","byte_start":793975,"byte_end":793983,"line_start":37,"line_end":37,"column_start":12,"column_end":20},"name":"identity","qualname":"<Translation<N, D>>::identity","value":"fn () -> Translation<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new identity translation.","sig":null,"attributes":[{"value":"/ Creates a new identity translation.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation_construction.rs","byte_start":793519,"byte_end":793558,"line_start":22,"line_end":22,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation_construction.rs","byte_start":793563,"byte_end":793566,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation_construction.rs","byte_start":793571,"byte_end":793584,"line_start":24,"line_end":24,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation_construction.rs","byte_start":793589,"byte_end":793596,"line_start":25,"line_end":25,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Point2, Point3, Translation2, Translation3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation_construction.rs","byte_start":793601,"byte_end":793666,"line_start":26,"line_end":26,"column_start":5,"column_end":70}},{"value":"/ let t = Translation2::identity();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation_construction.rs","byte_start":793671,"byte_end":793708,"line_start":27,"line_end":27,"column_start":5,"column_end":42}},{"value":"/ let p = Point2::new(1.0, 2.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation_construction.rs","byte_start":793713,"byte_end":793747,"line_start":28,"line_end":28,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(t * p, p);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation_construction.rs","byte_start":793752,"byte_end":793777,"line_start":29,"line_end":29,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation_construction.rs","byte_start":793782,"byte_end":793785,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ // Works in all dimensions.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation_construction.rs","byte_start":793790,"byte_end":793821,"line_start":31,"line_end":31,"column_start":5,"column_end":36}},{"value":"/ let t = Translation3::identity();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation_construction.rs","byte_start":793826,"byte_end":793863,"line_start":32,"line_end":32,"column_start":5,"column_end":42}},{"value":"/ let p = Point3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation_construction.rs","byte_start":793868,"byte_end":793907,"line_start":33,"line_end":33,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(t * p, p);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation_construction.rs","byte_start":793912,"byte_end":793937,"line_start":34,"line_end":34,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation_construction.rs","byte_start":793942,"byte_end":793949,"line_start":35,"line_end":35,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation_construction.rs","byte_start":793954,"byte_end":793963,"line_start":36,"line_end":36,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":18822},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":814770,"byte_end":814778,"line_start":38,"line_end":38,"column_start":12,"column_end":20},"name":"Isometry","qualname":"::geometry::isometry::Isometry","value":"Isometry { rotation, translation }","parent":null,"children":[{"krate":0,"index":18826},{"krate":0,"index":18827}],"decl_id":null,"docs":" A direct isometry, i.e., a rotation followed by a translation, aka. a rigid-body motion, aka. an element of a Special Euclidean (SE) group.\n","sig":null,"attributes":[{"value":"/ A direct isometry, i.e., a rotation followed by a translation, aka. a rigid-body motion, aka. an element of a Special Euclidean (SE) group.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":814106,"byte_end":814249,"line_start":22,"line_end":22,"column_start":1,"column_end":144}},{"value":"repr(C)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":814250,"byte_end":814260,"line_start":23,"line_end":23,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":18826},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":814911,"byte_end":814919,"line_start":43,"line_end":43,"column_start":9,"column_end":17},"name":"rotation","qualname":"::geometry::isometry::Isometry::rotation","value":"R","parent":{"krate":0,"index":18822},"children":[],"decl_id":null,"docs":" The pure rotational part of this isometry.\n","sig":null,"attributes":[{"value":"/ The pure rotational part of this isometry.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":814856,"byte_end":814902,"line_start":42,"line_end":42,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":18827},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":814986,"byte_end":814997,"line_start":45,"line_end":45,"column_start":9,"column_end":20},"name":"translation","qualname":"::geometry::isometry::Isometry::translation","value":"geometry::translation::Translation<N, D>","parent":{"krate":0,"index":18822},"children":[],"decl_id":null,"docs":" The pure translational part of this isometry.\n","sig":null,"attributes":[{"value":"/ The pure translational part of this isometry.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":814928,"byte_end":814977,"line_start":44,"line_end":44,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":5938},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":817216,"byte_end":817226,"line_start":122,"line_end":122,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Isometry<N, D, R>>::from_parts","value":"fn (translation: Translation<N, D>, rotation: R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new isometry from its rotational and translational parts.","sig":null,"attributes":[{"value":"/ Creates a new isometry from its rotational and translational parts.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":816604,"byte_end":816675,"line_start":107,"line_end":107,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":816680,"byte_end":816683,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":816688,"byte_end":816701,"line_start":109,"line_end":109,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":816706,"byte_end":816709,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":816714,"byte_end":816721,"line_start":111,"line_end":111,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":816726,"byte_end":816765,"line_start":112,"line_end":112,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":816770,"byte_end":816789,"line_start":113,"line_end":113,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry3, Translation3, UnitQuaternion, Vector3, Point3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":816794,"byte_end":816873,"line_start":114,"line_end":114,"column_start":5,"column_end":84}},{"value":"/ let tra = Translation3::new(0.0, 0.0, 3.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":816878,"byte_end":816925,"line_start":115,"line_end":115,"column_start":5,"column_end":52}},{"value":"/ let rot = UnitQuaternion::from_scaled_axis(Vector3::y() * f32::consts::PI);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":816930,"byte_end":817009,"line_start":116,"line_end":116,"column_start":5,"column_end":84}},{"value":"/ let iso = Isometry3::from_parts(tra, rot);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":817014,"byte_end":817060,"line_start":117,"line_end":117,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":817065,"byte_end":817068,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(iso * Point3::new(1.0, 2.0, 3.0), Point3::new(-1.0, 2.0, 0.0), epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":817073,"byte_end":817178,"line_start":119,"line_end":119,"column_start":5,"column_end":110}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":817183,"byte_end":817190,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":817195,"byte_end":817204,"line_start":121,"line_end":121,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5943},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":817966,"byte_end":817973,"line_start":150,"line_end":150,"column_start":12,"column_end":19},"name":"inverse","qualname":"<Isometry<N, D, R>>::inverse","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Inverts `self`.","sig":null,"attributes":[{"value":"/ Inverts `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":817525,"byte_end":817544,"line_start":135,"line_end":135,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":817549,"byte_end":817552,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":817557,"byte_end":817570,"line_start":137,"line_end":137,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":817575,"byte_end":817578,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":817583,"byte_end":817590,"line_start":139,"line_end":139,"column_start":5,"column_end":12}},{"value":"/ # use std::f32;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":817595,"byte_end":817614,"line_start":140,"line_end":140,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry2, Point2, Vector2};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":817619,"byte_end":817668,"line_start":141,"line_end":141,"column_start":5,"column_end":54}},{"value":"/ let iso = Isometry2::new(Vector2::new(1.0, 2.0), f32::consts::FRAC_PI_2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":817673,"byte_end":817750,"line_start":142,"line_end":142,"column_start":5,"column_end":82}},{"value":"/ let inv = iso.inverse();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":817755,"byte_end":817783,"line_start":143,"line_end":143,"column_start":5,"column_end":33}},{"value":"/ let pt = Point2::new(1.0, 2.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":817788,"byte_end":817823,"line_start":144,"line_end":144,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":817828,"byte_end":817831,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(inv * (iso * pt), pt);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":817836,"byte_end":817873,"line_start":146,"line_end":146,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":817878,"byte_end":817885,"line_start":147,"line_end":147,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":817890,"byte_end":817899,"line_start":148,"line_end":148,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use inverse_mut()?\"","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":817904,"byte_end":817954,"line_start":149,"line_end":149,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":5944},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":818513,"byte_end":818524,"line_start":171,"line_end":171,"column_start":12,"column_end":23},"name":"inverse_mut","qualname":"<Isometry<N, D, R>>::inverse_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Inverts `self` in-place.","sig":null,"attributes":[{"value":"/ Inverts `self` in-place.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":818077,"byte_end":818105,"line_start":156,"line_end":156,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":818110,"byte_end":818113,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":818118,"byte_end":818131,"line_start":158,"line_end":158,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":818136,"byte_end":818139,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":818144,"byte_end":818151,"line_start":160,"line_end":160,"column_start":5,"column_end":12}},{"value":"/ # use std::f32;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":818156,"byte_end":818175,"line_start":161,"line_end":161,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry2, Point2, Vector2};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":818180,"byte_end":818229,"line_start":162,"line_end":162,"column_start":5,"column_end":54}},{"value":"/ let mut iso = Isometry2::new(Vector2::new(1.0, 2.0), f32::consts::FRAC_PI_2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":818234,"byte_end":818315,"line_start":163,"line_end":163,"column_start":5,"column_end":86}},{"value":"/ let pt = Point2::new(1.0, 2.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":818320,"byte_end":818355,"line_start":164,"line_end":164,"column_start":5,"column_end":40}},{"value":"/ let transformed_pt = iso * pt;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":818360,"byte_end":818394,"line_start":165,"line_end":165,"column_start":5,"column_end":39}},{"value":"/ iso.inverse_mut();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":818399,"byte_end":818421,"line_start":166,"line_end":166,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":818426,"byte_end":818429,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(iso * transformed_pt, pt);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":818434,"byte_end":818475,"line_start":168,"line_end":168,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":818480,"byte_end":818487,"line_start":169,"line_end":169,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":818492,"byte_end":818501,"line_start":170,"line_end":170,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5945},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":819226,"byte_end":819248,"line_start":192,"line_end":192,"column_start":12,"column_end":34},"name":"append_translation_mut","qualname":"<Isometry<N, D, R>>::append_translation_mut","value":"fn (&mut self, t: &Translation<N, D>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Appends to `self` the given translation in-place.","sig":null,"attributes":[{"value":"/ Appends to `self` the given translation in-place.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":818718,"byte_end":818771,"line_start":177,"line_end":177,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":818776,"byte_end":818779,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":818784,"byte_end":818797,"line_start":179,"line_end":179,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":818802,"byte_end":818805,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":818810,"byte_end":818817,"line_start":181,"line_end":181,"column_start":5,"column_end":12}},{"value":"/ # use std::f32;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":818822,"byte_end":818841,"line_start":182,"line_end":182,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry2, Translation2, Vector2};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":818846,"byte_end":818901,"line_start":183,"line_end":183,"column_start":5,"column_end":60}},{"value":"/ let mut iso = Isometry2::new(Vector2::new(1.0, 2.0), f32::consts::FRAC_PI_2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":818906,"byte_end":818987,"line_start":184,"line_end":184,"column_start":5,"column_end":86}},{"value":"/ let tra = Translation2::new(3.0, 4.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":818992,"byte_end":819034,"line_start":185,"line_end":185,"column_start":5,"column_end":47}},{"value":"/ // Same as `iso = tra * iso`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":819039,"byte_end":819072,"line_start":186,"line_end":186,"column_start":5,"column_end":38}},{"value":"/ iso.append_translation_mut(&tra);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":819077,"byte_end":819114,"line_start":187,"line_end":187,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":819119,"byte_end":819122,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(iso.translation, Translation2::new(4.0, 6.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":819127,"byte_end":819188,"line_start":189,"line_end":189,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":819193,"byte_end":819200,"line_start":190,"line_end":190,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":819205,"byte_end":819214,"line_start":191,"line_end":191,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5946},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":819967,"byte_end":819986,"line_start":212,"line_end":212,"column_start":12,"column_end":31},"name":"append_rotation_mut","qualname":"<Isometry<N, D, R>>::append_rotation_mut","value":"fn (&mut self, r: &R) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Appends to `self` the given rotation in-place.","sig":null,"attributes":[{"value":"/ Appends to `self` the given rotation in-place.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":819341,"byte_end":819391,"line_start":196,"line_end":196,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":819396,"byte_end":819399,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":819404,"byte_end":819417,"line_start":198,"line_end":198,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":819422,"byte_end":819425,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":819430,"byte_end":819437,"line_start":200,"line_end":200,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":819442,"byte_end":819481,"line_start":201,"line_end":201,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":819486,"byte_end":819505,"line_start":202,"line_end":202,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry2, Translation2, UnitComplex, Vector2};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":819510,"byte_end":819578,"line_start":203,"line_end":203,"column_start":5,"column_end":73}},{"value":"/ let mut iso = Isometry2::new(Vector2::new(1.0, 2.0), f32::consts::PI / 6.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":819583,"byte_end":819663,"line_start":204,"line_end":204,"column_start":5,"column_end":85}},{"value":"/ let rot = UnitComplex::new(f32::consts::PI / 2.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":819668,"byte_end":819722,"line_start":205,"line_end":205,"column_start":5,"column_end":59}},{"value":"/ // Same as `iso = rot * iso`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":819727,"byte_end":819760,"line_start":206,"line_end":206,"column_start":5,"column_end":38}},{"value":"/ iso.append_rotation_mut(&rot);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":819765,"byte_end":819799,"line_start":207,"line_end":207,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":819804,"byte_end":819807,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(iso, Isometry2::new(Vector2::new(-2.0, 1.0), f32::consts::PI * 2.0 / 3.0), epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":819812,"byte_end":819929,"line_start":209,"line_end":209,"column_start":5,"column_end":122}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":819934,"byte_end":819941,"line_start":210,"line_end":210,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":819946,"byte_end":819955,"line_start":211,"line_end":211,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5947},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":820839,"byte_end":820868,"line_start":234,"line_end":234,"column_start":12,"column_end":41},"name":"append_rotation_wrt_point_mut","qualname":"<Isometry<N, D, R>>::append_rotation_wrt_point_mut","value":"fn (&mut self, r: &R, p: &Point<N, D>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Appends in-place to `self` a rotation centered at the point `p`, i.e., the rotation that\n lets `p` invariant.","sig":null,"attributes":[{"value":"/ Appends in-place to `self` a rotation centered at the point `p`, i.e., the rotation that","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":820157,"byte_end":820249,"line_start":217,"line_end":217,"column_start":5,"column_end":97}},{"value":"/ lets `p` invariant.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":820254,"byte_end":820277,"line_start":218,"line_end":218,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":820282,"byte_end":820285,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":820290,"byte_end":820303,"line_start":220,"line_end":220,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":820308,"byte_end":820311,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":820316,"byte_end":820323,"line_start":222,"line_end":222,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":820328,"byte_end":820367,"line_start":223,"line_end":223,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":820372,"byte_end":820391,"line_start":224,"line_end":224,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry2, Translation2, UnitComplex, Vector2, Point2};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":820396,"byte_end":820472,"line_start":225,"line_end":225,"column_start":5,"column_end":81}},{"value":"/ let mut iso = Isometry2::new(Vector2::new(1.0, 2.0), f32::consts::FRAC_PI_2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":820477,"byte_end":820558,"line_start":226,"line_end":226,"column_start":5,"column_end":86}},{"value":"/ let rot = UnitComplex::new(f32::consts::FRAC_PI_2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":820563,"byte_end":820618,"line_start":227,"line_end":227,"column_start":5,"column_end":60}},{"value":"/ let pt = Point2::new(1.0, 0.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":820623,"byte_end":820658,"line_start":228,"line_end":228,"column_start":5,"column_end":40}},{"value":"/ iso.append_rotation_wrt_point_mut(&rot, &pt);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":820663,"byte_end":820712,"line_start":229,"line_end":229,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":820717,"byte_end":820720,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(iso * pt, Point2::new(-2.0, 0.0), epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":820725,"byte_end":820801,"line_start":231,"line_end":231,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":820806,"byte_end":820813,"line_start":232,"line_end":232,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":820818,"byte_end":820827,"line_start":233,"line_end":233,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5948},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":821741,"byte_end":821771,"line_start":257,"line_end":257,"column_start":12,"column_end":42},"name":"append_rotation_wrt_center_mut","qualname":"<Isometry<N, D, R>>::append_rotation_wrt_center_mut","value":"fn (&mut self, r: &R) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Appends in-place to `self` a rotation centered at the point with coordinates\n `self.translation`.","sig":null,"attributes":[{"value":"/ Appends in-place to `self` a rotation centered at the point with coordinates","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":821046,"byte_end":821126,"line_start":240,"line_end":240,"column_start":5,"column_end":85}},{"value":"/ `self.translation`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":821131,"byte_end":821154,"line_start":241,"line_end":241,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":821159,"byte_end":821162,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":821167,"byte_end":821180,"line_start":243,"line_end":243,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":821185,"byte_end":821188,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":821193,"byte_end":821200,"line_start":245,"line_end":245,"column_start":5,"column_end":12}},{"value":"/ # use std::f32;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":821205,"byte_end":821224,"line_start":246,"line_end":246,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry2, Translation2, UnitComplex, Vector2, Point2};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":821229,"byte_end":821305,"line_start":247,"line_end":247,"column_start":5,"column_end":81}},{"value":"/ let mut iso = Isometry2::new(Vector2::new(1.0, 2.0), f32::consts::FRAC_PI_2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":821310,"byte_end":821391,"line_start":248,"line_end":248,"column_start":5,"column_end":86}},{"value":"/ let rot = UnitComplex::new(f32::consts::FRAC_PI_2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":821396,"byte_end":821451,"line_start":249,"line_end":249,"column_start":5,"column_end":60}},{"value":"/ iso.append_rotation_wrt_center_mut(&rot);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":821456,"byte_end":821501,"line_start":250,"line_end":250,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":821506,"byte_end":821509,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ // The translation part should not have changed.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":821514,"byte_end":821566,"line_start":252,"line_end":252,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(iso.translation.vector, Vector2::new(1.0, 2.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":821571,"byte_end":821634,"line_start":253,"line_end":253,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(iso.rotation, UnitComplex::new(f32::consts::PI));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":821639,"byte_end":821703,"line_start":254,"line_end":254,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":821708,"byte_end":821715,"line_start":255,"line_end":255,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":821720,"byte_end":821729,"line_start":256,"line_end":256,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5949},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":822591,"byte_end":822606,"line_start":279,"line_end":279,"column_start":12,"column_end":27},"name":"transform_point","qualname":"<Isometry<N, D, R>>::transform_point","value":"fn (&self, pt: &Point<N, D>) -> Point<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Transform the given point by this isometry.","sig":null,"attributes":[{"value":"/ Transform the given point by this isometry.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":821862,"byte_end":821909,"line_start":261,"line_end":261,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":821914,"byte_end":821917,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * pt`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":821922,"byte_end":821977,"line_start":263,"line_end":263,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":821982,"byte_end":821985,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":821990,"byte_end":822003,"line_start":265,"line_end":265,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":822008,"byte_end":822011,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":822016,"byte_end":822023,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":822028,"byte_end":822067,"line_start":268,"line_end":268,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":822072,"byte_end":822091,"line_start":269,"line_end":269,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry3, Translation3, UnitQuaternion, Vector3, Point3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":822096,"byte_end":822175,"line_start":270,"line_end":270,"column_start":5,"column_end":84}},{"value":"/ let tra = Translation3::new(0.0, 0.0, 3.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":822180,"byte_end":822227,"line_start":271,"line_end":271,"column_start":5,"column_end":52}},{"value":"/ let rot = UnitQuaternion::from_scaled_axis(Vector3::y() * f32::consts::FRAC_PI_2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":822232,"byte_end":822318,"line_start":272,"line_end":272,"column_start":5,"column_end":91}},{"value":"/ let iso = Isometry3::from_parts(tra, rot);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":822323,"byte_end":822369,"line_start":273,"line_end":273,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":822374,"byte_end":822377,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ let transformed_point = iso.transform_point(&Point3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":822382,"byte_end":822459,"line_start":275,"line_end":275,"column_start":5,"column_end":82}},{"value":"/ assert_relative_eq!(transformed_point, Point3::new(3.0, 2.0, 2.0), epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":822464,"byte_end":822553,"line_start":276,"line_end":276,"column_start":5,"column_end":94}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":822558,"byte_end":822565,"line_start":277,"line_end":277,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":822570,"byte_end":822579,"line_start":278,"line_end":278,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5950},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":823463,"byte_end":823479,"line_start":302,"line_end":302,"column_start":12,"column_end":28},"name":"transform_vector","qualname":"<Isometry<N, D, R>>::transform_vector","value":"fn (&self, v: &VectorN<N, D>) -> VectorN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Transform the given vector by this isometry, ignoring the translation\n component of the isometry.","sig":null,"attributes":[{"value":"/ Transform the given vector by this isometry, ignoring the translation","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":822678,"byte_end":822751,"line_start":283,"line_end":283,"column_start":5,"column_end":78}},{"value":"/ component of the isometry.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":822756,"byte_end":822786,"line_start":284,"line_end":284,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":822791,"byte_end":822794,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * v`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":822799,"byte_end":822853,"line_start":286,"line_end":286,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":822858,"byte_end":822861,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":822866,"byte_end":822879,"line_start":288,"line_end":288,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":822884,"byte_end":822887,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":822892,"byte_end":822899,"line_start":290,"line_end":290,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":822904,"byte_end":822943,"line_start":291,"line_end":291,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":822948,"byte_end":822967,"line_start":292,"line_end":292,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry3, Translation3, UnitQuaternion, Vector3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":822972,"byte_end":823043,"line_start":293,"line_end":293,"column_start":5,"column_end":76}},{"value":"/ let tra = Translation3::new(0.0, 0.0, 3.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":823048,"byte_end":823095,"line_start":294,"line_end":294,"column_start":5,"column_end":52}},{"value":"/ let rot = UnitQuaternion::from_scaled_axis(Vector3::y() * f32::consts::FRAC_PI_2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":823100,"byte_end":823186,"line_start":295,"line_end":295,"column_start":5,"column_end":91}},{"value":"/ let iso = Isometry3::from_parts(tra, rot);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":823191,"byte_end":823237,"line_start":296,"line_end":296,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":823242,"byte_end":823245,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ let transformed_point = iso.transform_vector(&Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":823250,"byte_end":823329,"line_start":298,"line_end":298,"column_start":5,"column_end":84}},{"value":"/ assert_relative_eq!(transformed_point, Vector3::new(3.0, 2.0, -1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":823334,"byte_end":823425,"line_start":299,"line_end":299,"column_start":5,"column_end":96}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":823430,"byte_end":823437,"line_start":300,"line_end":300,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":823442,"byte_end":823451,"line_start":301,"line_end":301,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5951},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":824356,"byte_end":824379,"line_start":324,"line_end":324,"column_start":12,"column_end":35},"name":"inverse_transform_point","qualname":"<Isometry<N, D, R>>::inverse_transform_point","value":"fn (&self, pt: &Point<N, D>) -> Point<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Transform the given point by the inverse of this isometry. This may be\n less expensive than computing the entire isometry inverse and then\n transforming the point.","sig":null,"attributes":[{"value":"/ Transform the given point by the inverse of this isometry. This may be","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":823553,"byte_end":823627,"line_start":306,"line_end":306,"column_start":5,"column_end":79}},{"value":"/ less expensive than computing the entire isometry inverse and then","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":823632,"byte_end":823702,"line_start":307,"line_end":307,"column_start":5,"column_end":75}},{"value":"/ transforming the point.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":823707,"byte_end":823734,"line_start":308,"line_end":308,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":823739,"byte_end":823742,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":823747,"byte_end":823760,"line_start":310,"line_end":310,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":823765,"byte_end":823768,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":823773,"byte_end":823780,"line_start":312,"line_end":312,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":823785,"byte_end":823824,"line_start":313,"line_end":313,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":823829,"byte_end":823848,"line_start":314,"line_end":314,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry3, Translation3, UnitQuaternion, Vector3, Point3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":823853,"byte_end":823932,"line_start":315,"line_end":315,"column_start":5,"column_end":84}},{"value":"/ let tra = Translation3::new(0.0, 0.0, 3.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":823937,"byte_end":823984,"line_start":316,"line_end":316,"column_start":5,"column_end":52}},{"value":"/ let rot = UnitQuaternion::from_scaled_axis(Vector3::y() * f32::consts::FRAC_PI_2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":823989,"byte_end":824075,"line_start":317,"line_end":317,"column_start":5,"column_end":91}},{"value":"/ let iso = Isometry3::from_parts(tra, rot);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":824080,"byte_end":824126,"line_start":318,"line_end":318,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":824131,"byte_end":824134,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ let transformed_point = iso.inverse_transform_point(&Point3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":824139,"byte_end":824224,"line_start":320,"line_end":320,"column_start":5,"column_end":90}},{"value":"/ assert_relative_eq!(transformed_point, Point3::new(0.0, 2.0, 1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":824229,"byte_end":824318,"line_start":321,"line_end":321,"column_start":5,"column_end":94}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":824323,"byte_end":824330,"line_start":322,"line_end":322,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":824335,"byte_end":824344,"line_start":323,"line_end":323,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5952},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":825386,"byte_end":825410,"line_start":348,"line_end":348,"column_start":12,"column_end":36},"name":"inverse_transform_vector","qualname":"<Isometry<N, D, R>>::inverse_transform_vector","value":"fn (&self, v: &VectorN<N, D>) -> VectorN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Transform the given vector by the inverse of this isometry, ignoring the\n translation component of the isometry. This may be\n less expensive than computing the entire isometry inverse and then\n transforming the point.","sig":null,"attributes":[{"value":"/ Transform the given vector by the inverse of this isometry, ignoring the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":824526,"byte_end":824602,"line_start":329,"line_end":329,"column_start":5,"column_end":81}},{"value":"/ translation component of the isometry. This may be","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":824607,"byte_end":824661,"line_start":330,"line_end":330,"column_start":5,"column_end":59}},{"value":"/ less expensive than computing the entire isometry inverse and then","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":824666,"byte_end":824736,"line_start":331,"line_end":331,"column_start":5,"column_end":75}},{"value":"/ transforming the point.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":824741,"byte_end":824768,"line_start":332,"line_end":332,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":824773,"byte_end":824776,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":824781,"byte_end":824794,"line_start":334,"line_end":334,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":824799,"byte_end":824802,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":824807,"byte_end":824814,"line_start":336,"line_end":336,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":824819,"byte_end":824858,"line_start":337,"line_end":337,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":824863,"byte_end":824882,"line_start":338,"line_end":338,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry3, Translation3, UnitQuaternion, Vector3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":824887,"byte_end":824958,"line_start":339,"line_end":339,"column_start":5,"column_end":76}},{"value":"/ let tra = Translation3::new(0.0, 0.0, 3.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":824963,"byte_end":825010,"line_start":340,"line_end":340,"column_start":5,"column_end":52}},{"value":"/ let rot = UnitQuaternion::from_scaled_axis(Vector3::y() * f32::consts::FRAC_PI_2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":825015,"byte_end":825101,"line_start":341,"line_end":341,"column_start":5,"column_end":91}},{"value":"/ let iso = Isometry3::from_parts(tra, rot);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":825106,"byte_end":825152,"line_start":342,"line_end":342,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":825157,"byte_end":825160,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ let transformed_point = iso.inverse_transform_vector(&Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":825165,"byte_end":825252,"line_start":344,"line_end":344,"column_start":5,"column_end":92}},{"value":"/ assert_relative_eq!(transformed_point, Vector3::new(-3.0, 2.0, 1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":825257,"byte_end":825348,"line_start":345,"line_end":345,"column_start":5,"column_end":96}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":825353,"byte_end":825360,"line_start":346,"line_end":346,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":825365,"byte_end":825374,"line_start":347,"line_end":347,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5957},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":826616,"byte_end":826630,"line_start":377,"line_end":377,"column_start":12,"column_end":26},"name":"to_homogeneous","qualname":"<Isometry<N, D, R>>::to_homogeneous","value":"fn (&self) -> MatrixN<N, DimNameSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Converts this isometry into its equivalent homogeneous transformation matrix.","sig":null,"attributes":[{"value":"/ Converts this isometry into its equivalent homogeneous transformation matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":825965,"byte_end":826046,"line_start":361,"line_end":361,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":826051,"byte_end":826054,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":826059,"byte_end":826072,"line_start":363,"line_end":363,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":826077,"byte_end":826080,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":826085,"byte_end":826092,"line_start":365,"line_end":365,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":826097,"byte_end":826136,"line_start":366,"line_end":366,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":826141,"byte_end":826160,"line_start":367,"line_end":367,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry2, Vector2, Matrix3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":826165,"byte_end":826215,"line_start":368,"line_end":368,"column_start":5,"column_end":55}},{"value":"/ let iso = Isometry2::new(Vector2::new(10.0, 20.0), f32::consts::FRAC_PI_6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":826220,"byte_end":826299,"line_start":369,"line_end":369,"column_start":5,"column_end":84}},{"value":"/ let expected = Matrix3::new(0.8660254, -0.5,      10.0,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":826304,"byte_end":826363,"line_start":370,"line_end":370,"column_start":5,"column_end":64}},{"value":"/                             0.5,       0.8660254, 20.0,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":826368,"byte_end":826427,"line_start":371,"line_end":371,"column_start":5,"column_end":64}},{"value":"/                             0.0,       0.0,       1.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":826432,"byte_end":826491,"line_start":372,"line_end":372,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":826496,"byte_end":826499,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(iso.to_homogeneous(), expected, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":826504,"byte_end":826578,"line_start":374,"line_end":374,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":826583,"byte_end":826590,"line_start":375,"line_end":375,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":826595,"byte_end":826604,"line_start":376,"line_end":376,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":6001},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_alias.rs","byte_start":830053,"byte_end":830062,"line_start":6,"line_end":6,"column_start":10,"column_end":19},"name":"Isometry2","qualname":"::geometry::isometry_alias::Isometry2","value":"Isometry<N, U2, UnitComplex<N>>","parent":null,"children":[],"decl_id":null,"docs":" A 2-dimensional direct isometry using a unit complex number for its rotational part. Also known as a rigid-body motion, or as an element of SE(2).\n","sig":null,"attributes":[{"value":"/ A 2-dimensional direct isometry using a unit complex number for its rotational part. Also known as a rigid-body motion, or as an element of SE(2).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_alias.rs","byte_start":829893,"byte_end":830043,"line_start":5,"line_end":5,"column_start":1,"column_end":151}}]},{"kind":"Type","id":{"krate":0,"index":6003},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_alias.rs","byte_start":830258,"byte_end":830267,"line_start":9,"line_end":9,"column_start":10,"column_end":19},"name":"Isometry3","qualname":"::geometry::isometry_alias::Isometry3","value":"Isometry<N, U3, UnitQuaternion<N>>","parent":null,"children":[],"decl_id":null,"docs":" A 3-dimensional direct isometry using a unit quaternion for its rotational part. Also known as a rigid-body motion, or as an element of SE(3).\n","sig":null,"attributes":[{"value":"/ A 3-dimensional direct isometry using a unit quaternion for its rotational part. Also known as a rigid-body motion, or as an element of SE(3).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_alias.rs","byte_start":830102,"byte_end":830248,"line_start":8,"line_end":8,"column_start":1,"column_end":147}}]},{"kind":"Type","id":{"krate":0,"index":6005},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_alias.rs","byte_start":830466,"byte_end":830481,"line_start":12,"line_end":12,"column_start":10,"column_end":25},"name":"IsometryMatrix2","qualname":"::geometry::isometry_alias::IsometryMatrix2","value":"Isometry<N, U2, Rotation2<N>>","parent":null,"children":[],"decl_id":null,"docs":" A 2-dimensional direct isometry using a rotation matrix for its rotational part. Also known as a rigid-body motion, or as an element of SE(2).\n","sig":null,"attributes":[{"value":"/ A 2-dimensional direct isometry using a rotation matrix for its rotational part. Also known as a rigid-body motion, or as an element of SE(2).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_alias.rs","byte_start":830310,"byte_end":830456,"line_start":11,"line_end":11,"column_start":1,"column_end":147}}]},{"kind":"Type","id":{"krate":0,"index":6007},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_alias.rs","byte_start":830675,"byte_end":830690,"line_start":15,"line_end":15,"column_start":10,"column_end":25},"name":"IsometryMatrix3","qualname":"::geometry::isometry_alias::IsometryMatrix3","value":"Isometry<N, U3, Rotation3<N>>","parent":null,"children":[],"decl_id":null,"docs":" A 3-dimensional direct isometry using a rotation matrix for its rotational part. Also known as a rigid-body motion, or as an element of SE(3).\n","sig":null,"attributes":[{"value":"/ A 3-dimensional direct isometry using a rotation matrix for its rotational part. Also known as a rigid-body motion, or as an element of SE(3).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_alias.rs","byte_start":830519,"byte_end":830665,"line_start":14,"line_end":14,"column_start":1,"column_end":147}}]},{"kind":"Method","id":{"krate":0,"index":6043},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":831919,"byte_end":831927,"line_start":43,"line_end":43,"column_start":12,"column_end":20},"name":"identity","qualname":"<Isometry<N, D, R>>::identity","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new identity isometry.","sig":null,"attributes":[{"value":"/ Creates a new identity isometry.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":831484,"byte_end":831520,"line_start":27,"line_end":27,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":831525,"byte_end":831528,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":831533,"byte_end":831546,"line_start":29,"line_end":29,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":831551,"byte_end":831554,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":831559,"byte_end":831566,"line_start":31,"line_end":31,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Isometry2, Point2, Isometry3, Point3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":831571,"byte_end":831630,"line_start":32,"line_end":32,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":831635,"byte_end":831638,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ let iso = Isometry2::identity();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":831643,"byte_end":831679,"line_start":34,"line_end":34,"column_start":5,"column_end":41}},{"value":"/ let pt = Point2::new(1.0, 2.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":831684,"byte_end":831719,"line_start":35,"line_end":35,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(iso * pt, pt);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":831724,"byte_end":831753,"line_start":36,"line_end":36,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":831758,"byte_end":831761,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ let iso = Isometry3::identity();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":831766,"byte_end":831802,"line_start":38,"line_end":38,"column_start":5,"column_end":41}},{"value":"/ let pt = Point3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":831807,"byte_end":831847,"line_start":39,"line_end":39,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(iso * pt, pt);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":831852,"byte_end":831881,"line_start":40,"line_end":40,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":831886,"byte_end":831893,"line_start":41,"line_end":41,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":831898,"byte_end":831907,"line_start":42,"line_end":42,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6044},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":832695,"byte_end":832713,"line_start":64,"line_end":64,"column_start":12,"column_end":30},"name":"rotation_wrt_point","qualname":"<Isometry<N, D, R>>::rotation_wrt_point","value":"fn (r: R, p: Point<N, D>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The isometry that applies the rotation `r` with its axis passing through the point `p`.\n This effectively lets `p` invariant.","sig":null,"attributes":[{"value":"/ The isometry that applies the rotation `r` with its axis passing through the point `p`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":832016,"byte_end":832107,"line_start":47,"line_end":47,"column_start":5,"column_end":96}},{"value":"/ This effectively lets `p` invariant.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":832112,"byte_end":832152,"line_start":48,"line_end":48,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":832157,"byte_end":832160,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":832165,"byte_end":832178,"line_start":50,"line_end":50,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":832183,"byte_end":832186,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":832191,"byte_end":832198,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":832203,"byte_end":832242,"line_start":53,"line_end":53,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":832247,"byte_end":832266,"line_start":54,"line_end":54,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry2, Point2, UnitComplex};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":832271,"byte_end":832324,"line_start":55,"line_end":55,"column_start":5,"column_end":58}},{"value":"/ let rot = UnitComplex::new(f32::consts::PI);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":832329,"byte_end":832377,"line_start":56,"line_end":56,"column_start":5,"column_end":53}},{"value":"/ let pt = Point2::new(1.0, 0.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":832382,"byte_end":832417,"line_start":57,"line_end":57,"column_start":5,"column_end":40}},{"value":"/ let iso = Isometry2::rotation_wrt_point(rot, pt);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":832422,"byte_end":832475,"line_start":58,"line_end":58,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":832480,"byte_end":832483,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(iso * pt, pt); // The rotation center is not affected.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":832488,"byte_end":832557,"line_start":60,"line_end":60,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(iso * Point2::new(1.0, 2.0), Point2::new(1.0, -2.0), epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":832562,"byte_end":832657,"line_start":61,"line_end":61,"column_start":5,"column_end":100}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":832662,"byte_end":832669,"line_start":62,"line_end":62,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":832674,"byte_end":832683,"line_start":63,"line_end":63,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6059},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":834584,"byte_end":834587,"line_start":134,"line_end":134,"column_start":12,"column_end":15},"name":"new","qualname":"<Isometry<N, U2, Rotation2<N>>>::new","value":"fn (translation: Vector2<N>, angle: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new 2D isometry from a translation and a rotation angle.","sig":null,"attributes":[{"value":"/ Creates a new 2D isometry from a translation and a rotation angle.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":834112,"byte_end":834182,"line_start":120,"line_end":120,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":834187,"byte_end":834190,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ Its rotational part is represented as a 2x2 rotation matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":834195,"byte_end":834259,"line_start":122,"line_end":122,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":834264,"byte_end":834267,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":834272,"byte_end":834285,"line_start":124,"line_end":124,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":834290,"byte_end":834293,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":834298,"byte_end":834305,"line_start":126,"line_end":126,"column_start":5,"column_end":12}},{"value":"/ # use std::f32;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":834310,"byte_end":834329,"line_start":127,"line_end":127,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry2, Vector2, Point2};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":834334,"byte_end":834383,"line_start":128,"line_end":128,"column_start":5,"column_end":54}},{"value":"/ let iso = Isometry2::new(Vector2::new(1.0, 2.0), f32::consts::FRAC_PI_2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":834388,"byte_end":834465,"line_start":129,"line_end":129,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":834470,"byte_end":834473,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(iso * Point2::new(3.0, 4.0), Point2::new(-3.0, 5.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":834478,"byte_end":834546,"line_start":131,"line_end":131,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":834551,"byte_end":834558,"line_start":132,"line_end":132,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":834563,"byte_end":834572,"line_start":133,"line_end":133,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6060},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":834859,"byte_end":834870,"line_start":143,"line_end":143,"column_start":12,"column_end":23},"name":"translation","qualname":"<Isometry<N, U2, Rotation2<N>>>::translation","value":"fn (x: N, y: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new isometry from the given translation coordinates.\n","sig":null,"attributes":[{"value":"/ Creates a new isometry from the given translation coordinates.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":834767,"byte_end":834833,"line_start":141,"line_end":141,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":834838,"byte_end":834847,"line_start":142,"line_end":142,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6061},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":835036,"byte_end":835044,"line_start":149,"line_end":149,"column_start":12,"column_end":20},"name":"rotation","qualname":"<Isometry<N, U2, Rotation2<N>>>::rotation","value":"fn (angle: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new isometry from the given rotation angle.\n","sig":null,"attributes":[{"value":"/ Creates a new isometry from the given rotation angle.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":834953,"byte_end":835010,"line_start":147,"line_end":147,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":835015,"byte_end":835024,"line_start":148,"line_end":148,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6064},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":835700,"byte_end":835703,"line_start":172,"line_end":172,"column_start":12,"column_end":15},"name":"new","qualname":"<Isometry<N, U2, UnitComplex<N>>>::new","value":"fn (translation: Vector2<N>, angle: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new 2D isometry from a translation and a rotation angle.","sig":null,"attributes":[{"value":"/ Creates a new 2D isometry from a translation and a rotation angle.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":835215,"byte_end":835285,"line_start":158,"line_end":158,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":835290,"byte_end":835293,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ Its rotational part is represented as an unit complex number.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":835298,"byte_end":835363,"line_start":160,"line_end":160,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":835368,"byte_end":835371,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":835376,"byte_end":835389,"line_start":162,"line_end":162,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":835394,"byte_end":835397,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":835402,"byte_end":835409,"line_start":164,"line_end":164,"column_start":5,"column_end":12}},{"value":"/ # use std::f32;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":835414,"byte_end":835433,"line_start":165,"line_end":165,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{IsometryMatrix2, Point2, Vector2};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":835438,"byte_end":835493,"line_start":166,"line_end":166,"column_start":5,"column_end":60}},{"value":"/ let iso = IsometryMatrix2::new(Vector2::new(1.0, 2.0), f32::consts::FRAC_PI_2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":835498,"byte_end":835581,"line_start":167,"line_end":167,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":835586,"byte_end":835589,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(iso * Point2::new(3.0, 4.0), Point2::new(-3.0, 5.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":835594,"byte_end":835662,"line_start":169,"line_end":169,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":835667,"byte_end":835674,"line_start":170,"line_end":170,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":835679,"byte_end":835688,"line_start":171,"line_end":171,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6065},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":835976,"byte_end":835987,"line_start":181,"line_end":181,"column_start":12,"column_end":23},"name":"translation","qualname":"<Isometry<N, U2, UnitComplex<N>>>::translation","value":"fn (x: N, y: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new isometry from the given translation coordinates.\n","sig":null,"attributes":[{"value":"/ Creates a new isometry from the given translation coordinates.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":835884,"byte_end":835950,"line_start":179,"line_end":179,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":835955,"byte_end":835964,"line_start":180,"line_end":180,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6066},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":836179,"byte_end":836187,"line_start":187,"line_end":187,"column_start":12,"column_end":20},"name":"rotation","qualname":"<Isometry<N, U2, UnitComplex<N>>>::rotation","value":"fn (angle: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new isometry from the given rotation angle.\n","sig":null,"attributes":[{"value":"/ Creates a new isometry from the given rotation angle.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":836096,"byte_end":836153,"line_start":185,"line_end":185,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":836158,"byte_end":836167,"line_start":186,"line_end":186,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":19430},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":878813,"byte_end":878823,"line_start":42,"line_end":42,"column_start":12,"column_end":22},"name":"Similarity","qualname":"::geometry::similarity::Similarity","value":"Similarity { isometry }","parent":null,"children":[{"krate":0,"index":19434},{"krate":0,"index":19435}],"decl_id":null,"docs":" A similarity, i.e., an uniform scaling, followed by a rotation, followed by a translation.\n","sig":null,"attributes":[{"value":"/ A similarity, i.e., an uniform scaling, followed by a rotation, followed by a translation.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":878119,"byte_end":878213,"line_start":24,"line_end":24,"column_start":1,"column_end":95}},{"value":"repr(C)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":878214,"byte_end":878224,"line_start":25,"line_end":25,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":19434},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":878983,"byte_end":878991,"line_start":47,"line_end":47,"column_start":9,"column_end":17},"name":"isometry","qualname":"::geometry::similarity::Similarity::isometry","value":"geometry::isometry::Isometry<N, D, R>","parent":{"krate":0,"index":19430},"children":[],"decl_id":null,"docs":" The part of this similarity that does not include the scaling factor.\n","sig":null,"attributes":[{"value":"/ The part of this similarity that does not include the scaling factor.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":878901,"byte_end":878974,"line_start":46,"line_end":46,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":6283},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":880566,"byte_end":880576,"line_start":107,"line_end":107,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Similarity<N, D, R>>::from_parts","value":"fn (translation: Translation<N, D>, rotation: R, scaling: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new similarity from its rotational and translational parts.\n","sig":null,"attributes":[{"value":"/ Creates a new similarity from its rotational and translational parts.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":880467,"byte_end":880540,"line_start":105,"line_end":105,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":880545,"byte_end":880554,"line_start":106,"line_end":106,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6284},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":880836,"byte_end":880849,"line_start":113,"line_end":113,"column_start":12,"column_end":25},"name":"from_isometry","qualname":"<Similarity<N, D, R>>::from_isometry","value":"fn (isometry: Isometry<N, D, R>, scaling: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new similarity from its rotational and translational parts.\n","sig":null,"attributes":[{"value":"/ Creates a new similarity from its rotational and translational parts.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":880737,"byte_end":880810,"line_start":111,"line_end":111,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":880815,"byte_end":880824,"line_start":112,"line_end":112,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6285},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":881108,"byte_end":881119,"line_start":121,"line_end":121,"column_start":12,"column_end":23},"name":"set_scaling","qualname":"<Similarity<N, D, R>>::set_scaling","value":"fn (&mut self, scaling: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" The scaling factor of this similarity transformation.\n","sig":null,"attributes":[{"value":"/ The scaling factor of this similarity transformation.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":881025,"byte_end":881082,"line_start":119,"line_end":119,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":881087,"byte_end":881096,"line_start":120,"line_end":120,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6290},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":881494,"byte_end":881501,"line_start":137,"line_end":137,"column_start":12,"column_end":19},"name":"scaling","qualname":"<Similarity<N, D, R>>::scaling","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The scaling factor of this similarity transformation.\n","sig":null,"attributes":[{"value":"/ The scaling factor of this similarity transformation.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":881411,"byte_end":881468,"line_start":135,"line_end":135,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":881473,"byte_end":881482,"line_start":136,"line_end":136,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6295},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":881823,"byte_end":881835,"line_start":150,"line_end":150,"column_start":12,"column_end":24},"name":"from_scaling","qualname":"<Similarity<N, D, R>>::from_scaling","value":"fn (scaling: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new similarity that applies only a scaling factor.\n","sig":null,"attributes":[{"value":"/ Creates a new similarity that applies only a scaling factor.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":881733,"byte_end":881797,"line_start":148,"line_end":148,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":881802,"byte_end":881811,"line_start":149,"line_end":149,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6296},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":882028,"byte_end":882035,"line_start":157,"line_end":157,"column_start":12,"column_end":19},"name":"inverse","qualname":"<Similarity<N, D, R>>::inverse","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Inverts `self`.\n","sig":null,"attributes":[{"value":"/ Inverts `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":881928,"byte_end":881947,"line_start":154,"line_end":154,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":881952,"byte_end":881961,"line_start":155,"line_end":155,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use inverse_mut()?\"","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":881966,"byte_end":882016,"line_start":156,"line_end":156,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":6297},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":882193,"byte_end":882204,"line_start":165,"line_end":165,"column_start":12,"column_end":23},"name":"inverse_mut","qualname":"<Similarity<N, D, R>>::inverse_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Inverts `self` in-place.\n","sig":null,"attributes":[{"value":"/ Inverts `self` in-place.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":882139,"byte_end":882167,"line_start":163,"line_end":163,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":882172,"byte_end":882181,"line_start":164,"line_end":164,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6298},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":882549,"byte_end":882564,"line_start":174,"line_end":174,"column_start":12,"column_end":27},"name":"prepend_scaling","qualname":"<Similarity<N, D, R>>::prepend_scaling","value":"fn (&self, scaling: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The similarity transformation that applies a scaling factor `scaling` before `self`.\n","sig":null,"attributes":[{"value":"/ The similarity transformation that applies a scaling factor `scaling` before `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":882372,"byte_end":882460,"line_start":171,"line_end":171,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":882465,"byte_end":882474,"line_start":172,"line_end":172,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use prepend_scaling_mut()?\"","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":882479,"byte_end":882537,"line_start":173,"line_end":173,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":6299},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":882978,"byte_end":882992,"line_start":186,"line_end":186,"column_start":12,"column_end":26},"name":"append_scaling","qualname":"<Similarity<N, D, R>>::append_scaling","value":"fn (&self, scaling: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The similarity transformation that applies a scaling factor `scaling` after `self`.\n","sig":null,"attributes":[{"value":"/ The similarity transformation that applies a scaling factor `scaling` after `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":882803,"byte_end":882890,"line_start":183,"line_end":183,"column_start":5,"column_end":92}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":882895,"byte_end":882904,"line_start":184,"line_end":184,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use append_scaling_mut()?\"","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":882909,"byte_end":882966,"line_start":185,"line_end":185,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":6300},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":883477,"byte_end":883496,"line_start":201,"line_end":201,"column_start":12,"column_end":31},"name":"prepend_scaling_mut","qualname":"<Similarity<N, D, R>>::prepend_scaling_mut","value":"fn (&mut self, scaling: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets `self` to the similarity transformation that applies a scaling factor `scaling` before `self`.\n","sig":null,"attributes":[{"value":"/ Sets `self` to the similarity transformation that applies a scaling factor `scaling` before `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":883348,"byte_end":883451,"line_start":199,"line_end":199,"column_start":5,"column_end":108}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":883456,"byte_end":883465,"line_start":200,"line_end":200,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6301},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":883816,"byte_end":883834,"line_start":212,"line_end":212,"column_start":12,"column_end":30},"name":"append_scaling_mut","qualname":"<Similarity<N, D, R>>::append_scaling_mut","value":"fn (&mut self, scaling: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets `self` to the similarity transformation that applies a scaling factor `scaling` after `self`.\n","sig":null,"attributes":[{"value":"/ Sets `self` to the similarity transformation that applies a scaling factor `scaling` after `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":883688,"byte_end":883790,"line_start":210,"line_end":210,"column_start":5,"column_end":107}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":883795,"byte_end":883804,"line_start":211,"line_end":211,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6302},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":884159,"byte_end":884181,"line_start":224,"line_end":224,"column_start":12,"column_end":34},"name":"append_translation_mut","qualname":"<Similarity<N, D, R>>::append_translation_mut","value":"fn (&mut self, t: &Translation<N, D>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Appends to `self` the given translation in-place.\n","sig":null,"attributes":[{"value":"/ Appends to `self` the given translation in-place.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":884080,"byte_end":884133,"line_start":222,"line_end":222,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":884138,"byte_end":884147,"line_start":223,"line_end":223,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6303},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":884353,"byte_end":884372,"line_start":230,"line_end":230,"column_start":12,"column_end":31},"name":"append_rotation_mut","qualname":"<Similarity<N, D, R>>::append_rotation_mut","value":"fn (&mut self, r: &R) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Appends to `self` the given rotation in-place.\n","sig":null,"attributes":[{"value":"/ Appends to `self` the given rotation in-place.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":884277,"byte_end":884327,"line_start":228,"line_end":228,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":884332,"byte_end":884341,"line_start":229,"line_end":229,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6304},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":884595,"byte_end":884624,"line_start":237,"line_end":237,"column_start":12,"column_end":41},"name":"append_rotation_wrt_point_mut","qualname":"<Similarity<N, D, R>>::append_rotation_wrt_point_mut","value":"fn (&mut self, r: &R, p: &Point<N, D>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Appends in-place to `self` a rotation centered at the point `p`, i.e., the rotation that\n lets `p` invariant.\n","sig":null,"attributes":[{"value":"/ Appends in-place to `self` a rotation centered at the point `p`, i.e., the rotation that","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":884449,"byte_end":884541,"line_start":234,"line_end":234,"column_start":5,"column_end":97}},{"value":"/ lets `p` invariant.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":884546,"byte_end":884569,"line_start":235,"line_end":235,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":884574,"byte_end":884583,"line_start":236,"line_end":236,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6305},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":884865,"byte_end":884895,"line_start":244,"line_end":244,"column_start":12,"column_end":42},"name":"append_rotation_wrt_center_mut","qualname":"<Similarity<N, D, R>>::append_rotation_wrt_center_mut","value":"fn (&mut self, r: &R) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Appends in-place to `self` a rotation centered at the point with coordinates\n `self.translation`.\n","sig":null,"attributes":[{"value":"/ Appends in-place to `self` a rotation centered at the point with coordinates","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":884731,"byte_end":884811,"line_start":241,"line_end":241,"column_start":5,"column_end":85}},{"value":"/ `self.translation`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":884816,"byte_end":884839,"line_start":242,"line_end":242,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":884844,"byte_end":884853,"line_start":243,"line_end":243,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6306},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":885662,"byte_end":885677,"line_start":264,"line_end":264,"column_start":12,"column_end":27},"name":"transform_point","qualname":"<Similarity<N, D, R>>::transform_point","value":"fn (&self, pt: &Point<N, D>) -> Point<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Transform the given point by this similarity.","sig":null,"attributes":[{"value":"/ Transform the given point by this similarity.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":884983,"byte_end":885032,"line_start":248,"line_end":248,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":885037,"byte_end":885040,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * pt`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":885045,"byte_end":885100,"line_start":250,"line_end":250,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":885105,"byte_end":885108,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":885113,"byte_end":885126,"line_start":252,"line_end":252,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":885131,"byte_end":885138,"line_start":253,"line_end":253,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":885143,"byte_end":885182,"line_start":254,"line_end":254,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":885187,"byte_end":885206,"line_start":255,"line_end":255,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Point3, Similarity3, Vector3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":885211,"byte_end":885262,"line_start":256,"line_end":256,"column_start":5,"column_end":56}},{"value":"/ let axisangle = Vector3::y() * f32::consts::FRAC_PI_2;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":885267,"byte_end":885325,"line_start":257,"line_end":257,"column_start":5,"column_end":63}},{"value":"/ let translation = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":885330,"byte_end":885380,"line_start":258,"line_end":258,"column_start":5,"column_end":55}},{"value":"/ let sim = Similarity3::new(translation, axisangle, 3.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":885385,"byte_end":885445,"line_start":259,"line_end":259,"column_start":5,"column_end":65}},{"value":"/ let transformed_point = sim.transform_point(&Point3::new(4.0, 5.0, 6.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":885450,"byte_end":885527,"line_start":260,"line_end":260,"column_start":5,"column_end":82}},{"value":"/ assert_relative_eq!(transformed_point, Point3::new(19.0, 17.0, -9.0), epsilon = 1.0e-5);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":885532,"byte_end":885624,"line_start":261,"line_end":261,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":885629,"byte_end":885636,"line_start":262,"line_end":262,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":885641,"byte_end":885650,"line_start":263,"line_end":263,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6307},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":886472,"byte_end":886488,"line_start":285,"line_end":285,"column_start":12,"column_end":28},"name":"transform_vector","qualname":"<Similarity<N, D, R>>::transform_vector","value":"fn (&self, v: &VectorN<N, D>) -> VectorN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Transform the given vector by this similarity, ignoring the translational\n component.","sig":null,"attributes":[{"value":"/ Transform the given vector by this similarity, ignoring the translational","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":885749,"byte_end":885826,"line_start":268,"line_end":268,"column_start":5,"column_end":82}},{"value":"/ component.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":885831,"byte_end":885845,"line_start":269,"line_end":269,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":885850,"byte_end":885853,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * t`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":885858,"byte_end":885912,"line_start":271,"line_end":271,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":885917,"byte_end":885920,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":885925,"byte_end":885938,"line_start":273,"line_end":273,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":885943,"byte_end":885950,"line_start":274,"line_end":274,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":885955,"byte_end":885994,"line_start":275,"line_end":275,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":885999,"byte_end":886018,"line_start":276,"line_end":276,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Similarity3, Vector3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":886023,"byte_end":886066,"line_start":277,"line_end":277,"column_start":5,"column_end":48}},{"value":"/ let axisangle = Vector3::y() * f32::consts::FRAC_PI_2;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":886071,"byte_end":886129,"line_start":278,"line_end":278,"column_start":5,"column_end":63}},{"value":"/ let translation = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":886134,"byte_end":886184,"line_start":279,"line_end":279,"column_start":5,"column_end":55}},{"value":"/ let sim = Similarity3::new(translation, axisangle, 3.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":886189,"byte_end":886249,"line_start":280,"line_end":280,"column_start":5,"column_end":65}},{"value":"/ let transformed_vector = sim.transform_vector(&Vector3::new(4.0, 5.0, 6.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":886254,"byte_end":886334,"line_start":281,"line_end":281,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(transformed_vector, Vector3::new(18.0, 15.0, -12.0), epsilon = 1.0e-5);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":886339,"byte_end":886434,"line_start":282,"line_end":282,"column_start":5,"column_end":100}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":886439,"byte_end":886446,"line_start":283,"line_end":283,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":886451,"byte_end":886460,"line_start":284,"line_end":284,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6308},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":887299,"byte_end":887322,"line_start":305,"line_end":305,"column_start":12,"column_end":35},"name":"inverse_transform_point","qualname":"<Similarity<N, D, R>>::inverse_transform_point","value":"fn (&self, pt: &Point<N, D>) -> Point<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Transform the given point by the inverse of this similarity. This may\n be cheaper than inverting the similarity and then transforming the\n given point.","sig":null,"attributes":[{"value":"/ Transform the given point by the inverse of this similarity. This may","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":886562,"byte_end":886635,"line_start":289,"line_end":289,"column_start":5,"column_end":78}},{"value":"/ be cheaper than inverting the similarity and then transforming the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":886640,"byte_end":886710,"line_start":290,"line_end":290,"column_start":5,"column_end":75}},{"value":"/ given point.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":886715,"byte_end":886731,"line_start":291,"line_end":291,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":886736,"byte_end":886739,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":886744,"byte_end":886757,"line_start":293,"line_end":293,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":886762,"byte_end":886769,"line_start":294,"line_end":294,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":886774,"byte_end":886813,"line_start":295,"line_end":295,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":886818,"byte_end":886837,"line_start":296,"line_end":296,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Point3, Similarity3, Vector3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":886842,"byte_end":886893,"line_start":297,"line_end":297,"column_start":5,"column_end":56}},{"value":"/ let axisangle = Vector3::y() * f32::consts::FRAC_PI_2;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":886898,"byte_end":886956,"line_start":298,"line_end":298,"column_start":5,"column_end":63}},{"value":"/ let translation = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":886961,"byte_end":887011,"line_start":299,"line_end":299,"column_start":5,"column_end":55}},{"value":"/ let sim = Similarity3::new(translation, axisangle, 2.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":887016,"byte_end":887076,"line_start":300,"line_end":300,"column_start":5,"column_end":65}},{"value":"/ let transformed_point = sim.inverse_transform_point(&Point3::new(4.0, 5.0, 6.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":887081,"byte_end":887166,"line_start":301,"line_end":301,"column_start":5,"column_end":90}},{"value":"/ assert_relative_eq!(transformed_point, Point3::new(-1.5, 1.5, 1.5), epsilon = 1.0e-5);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":887171,"byte_end":887261,"line_start":302,"line_end":302,"column_start":5,"column_end":95}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":887266,"byte_end":887273,"line_start":303,"line_end":303,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":887278,"byte_end":887287,"line_start":304,"line_end":304,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6309},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":888217,"byte_end":888241,"line_start":325,"line_end":325,"column_start":12,"column_end":36},"name":"inverse_transform_vector","qualname":"<Similarity<N, D, R>>::inverse_transform_vector","value":"fn (&self, v: &VectorN<N, D>) -> VectorN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Transform the given vector by the inverse of this similarity,\n ignoring the translational component. This may be cheaper than\n inverting the similarity and then transforming the given vector.","sig":null,"attributes":[{"value":"/ Transform the given vector by the inverse of this similarity,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":887443,"byte_end":887508,"line_start":309,"line_end":309,"column_start":5,"column_end":70}},{"value":"/ ignoring the translational component. This may be cheaper than","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":887513,"byte_end":887579,"line_start":310,"line_end":310,"column_start":5,"column_end":71}},{"value":"/ inverting the similarity and then transforming the given vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":887584,"byte_end":887652,"line_start":311,"line_end":311,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":887657,"byte_end":887660,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":887665,"byte_end":887678,"line_start":313,"line_end":313,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":887683,"byte_end":887690,"line_start":314,"line_end":314,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":887695,"byte_end":887734,"line_start":315,"line_end":315,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":887739,"byte_end":887758,"line_start":316,"line_end":316,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Similarity3, Vector3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":887763,"byte_end":887806,"line_start":317,"line_end":317,"column_start":5,"column_end":48}},{"value":"/ let axisangle = Vector3::y() * f32::consts::FRAC_PI_2;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":887811,"byte_end":887869,"line_start":318,"line_end":318,"column_start":5,"column_end":63}},{"value":"/ let translation = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":887874,"byte_end":887924,"line_start":319,"line_end":319,"column_start":5,"column_end":55}},{"value":"/ let sim = Similarity3::new(translation, axisangle, 2.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":887929,"byte_end":887989,"line_start":320,"line_end":320,"column_start":5,"column_end":65}},{"value":"/ let transformed_vector = sim.inverse_transform_vector(&Vector3::new(4.0, 5.0, 6.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":887994,"byte_end":888082,"line_start":321,"line_end":321,"column_start":5,"column_end":93}},{"value":"/ assert_relative_eq!(transformed_vector, Vector3::new(-3.0, 2.5, 2.0), epsilon = 1.0e-5);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":888087,"byte_end":888179,"line_start":322,"line_end":322,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":888184,"byte_end":888191,"line_start":323,"line_end":323,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":888196,"byte_end":888205,"line_start":324,"line_end":324,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6314},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":888933,"byte_end":888947,"line_start":340,"line_end":340,"column_start":12,"column_end":26},"name":"to_homogeneous","qualname":"<Similarity<N, D, R>>::to_homogeneous","value":"fn (&self) -> MatrixN<N, DimNameSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Converts this similarity into its equivalent homogeneous transformation matrix.\n","sig":null,"attributes":[{"value":"/ Converts this similarity into its equivalent homogeneous transformation matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":888824,"byte_end":888907,"line_start":338,"line_end":338,"column_start":5,"column_end":88}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":888912,"byte_end":888921,"line_start":339,"line_end":339,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":6358},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_alias.rs","byte_start":892246,"byte_end":892257,"line_start":6,"line_end":6,"column_start":10,"column_end":21},"name":"Similarity2","qualname":"::geometry::similarity_alias::Similarity2","value":"Similarity<N, U2, UnitComplex<N>>","parent":null,"children":[],"decl_id":null,"docs":" A 2-dimensional similarity.\n","sig":null,"attributes":[{"value":"/ A 2-dimensional similarity.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_alias.rs","byte_start":892205,"byte_end":892236,"line_start":5,"line_end":5,"column_start":1,"column_end":32}}]},{"kind":"Type","id":{"krate":0,"index":6360},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_alias.rs","byte_start":892340,"byte_end":892351,"line_start":9,"line_end":9,"column_start":10,"column_end":21},"name":"Similarity3","qualname":"::geometry::similarity_alias::Similarity3","value":"Similarity<N, U3, UnitQuaternion<N>>","parent":null,"children":[],"decl_id":null,"docs":" A 3-dimensional similarity.\n","sig":null,"attributes":[{"value":"/ A 3-dimensional similarity.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_alias.rs","byte_start":892299,"byte_end":892330,"line_start":8,"line_end":8,"column_start":1,"column_end":32}}]},{"kind":"Type","id":{"krate":0,"index":6362},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_alias.rs","byte_start":892483,"byte_end":892500,"line_start":12,"line_end":12,"column_start":10,"column_end":27},"name":"SimilarityMatrix2","qualname":"::geometry::similarity_alias::SimilarityMatrix2","value":"Similarity<N, U2, Rotation2<N>>","parent":null,"children":[],"decl_id":null,"docs":" A 2-dimensional similarity using a rotation matrix for its rotation part.\n","sig":null,"attributes":[{"value":"/ A 2-dimensional similarity using a rotation matrix for its rotation part.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_alias.rs","byte_start":892396,"byte_end":892473,"line_start":11,"line_end":11,"column_start":1,"column_end":78}}]},{"kind":"Type","id":{"krate":0,"index":6364},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_alias.rs","byte_start":892627,"byte_end":892644,"line_start":15,"line_end":15,"column_start":10,"column_end":27},"name":"SimilarityMatrix3","qualname":"::geometry::similarity_alias::SimilarityMatrix3","value":"Similarity<N, U3, Rotation3<N>>","parent":null,"children":[],"decl_id":null,"docs":" A 3-dimensional similarity using a rotation matrix for its rotation part.\n","sig":null,"attributes":[{"value":"/ A 3-dimensional similarity using a rotation matrix for its rotation part.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_alias.rs","byte_start":892540,"byte_end":892617,"line_start":14,"line_end":14,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":6398},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_construction.rs","byte_start":893868,"byte_end":893876,"line_start":44,"line_end":44,"column_start":12,"column_end":20},"name":"identity","qualname":"<Similarity<N, D, R>>::identity","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new identity similarity.","sig":null,"attributes":[{"value":"/ Creates a new identity similarity.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_construction.rs","byte_start":893423,"byte_end":893461,"line_start":28,"line_end":28,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_construction.rs","byte_start":893466,"byte_end":893469,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_construction.rs","byte_start":893474,"byte_end":893487,"line_start":30,"line_end":30,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_construction.rs","byte_start":893492,"byte_end":893495,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_construction.rs","byte_start":893500,"byte_end":893507,"line_start":32,"line_end":32,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Similarity2, Point2, Similarity3, Point3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_construction.rs","byte_start":893512,"byte_end":893575,"line_start":33,"line_end":33,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_construction.rs","byte_start":893580,"byte_end":893583,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ let sim = Similarity2::identity();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_construction.rs","byte_start":893588,"byte_end":893626,"line_start":35,"line_end":35,"column_start":5,"column_end":43}},{"value":"/ let pt = Point2::new(1.0, 2.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_construction.rs","byte_start":893631,"byte_end":893666,"line_start":36,"line_end":36,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(sim * pt, pt);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_construction.rs","byte_start":893671,"byte_end":893700,"line_start":37,"line_end":37,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_construction.rs","byte_start":893705,"byte_end":893708,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ let sim = Similarity3::identity();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_construction.rs","byte_start":893713,"byte_end":893751,"line_start":39,"line_end":39,"column_start":5,"column_end":43}},{"value":"/ let pt = Point3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_construction.rs","byte_start":893756,"byte_end":893796,"line_start":40,"line_end":40,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(sim * pt, pt);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_construction.rs","byte_start":893801,"byte_end":893830,"line_start":41,"line_end":41,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_construction.rs","byte_start":893835,"byte_end":893842,"line_start":42,"line_end":42,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_construction.rs","byte_start":893847,"byte_end":893856,"line_start":43,"line_end":43,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6415},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_construction.rs","byte_start":895516,"byte_end":895534,"line_start":101,"line_end":101,"column_start":12,"column_end":30},"name":"rotation_wrt_point","qualname":"<Similarity<N, D, R>>::rotation_wrt_point","value":"fn (r: R, p: Point<N, D>, scaling: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The similarity that applies the scaling factor `scaling`, followed by the rotation `r` with\n its axis passing through the point `p`.","sig":null,"attributes":[{"value":"/ The similarity that applies the scaling factor `scaling`, followed by the rotation `r` with","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_construction.rs","byte_start":894888,"byte_end":894983,"line_start":85,"line_end":85,"column_start":5,"column_end":100}},{"value":"/ its axis passing through the point `p`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_construction.rs","byte_start":894988,"byte_end":895031,"line_start":86,"line_end":86,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_construction.rs","byte_start":895036,"byte_end":895039,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_construction.rs","byte_start":895044,"byte_end":895057,"line_start":88,"line_end":88,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_construction.rs","byte_start":895062,"byte_end":895065,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_construction.rs","byte_start":895070,"byte_end":895077,"line_start":90,"line_end":90,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_construction.rs","byte_start":895082,"byte_end":895121,"line_start":91,"line_end":91,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_construction.rs","byte_start":895126,"byte_end":895145,"line_start":92,"line_end":92,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Similarity2, Point2, UnitComplex};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_construction.rs","byte_start":895150,"byte_end":895205,"line_start":93,"line_end":93,"column_start":5,"column_end":60}},{"value":"/ let rot = UnitComplex::new(f32::consts::FRAC_PI_2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_construction.rs","byte_start":895210,"byte_end":895265,"line_start":94,"line_end":94,"column_start":5,"column_end":60}},{"value":"/ let pt = Point2::new(3.0, 2.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_construction.rs","byte_start":895270,"byte_end":895305,"line_start":95,"line_end":95,"column_start":5,"column_end":40}},{"value":"/ let sim = Similarity2::rotation_wrt_point(rot, pt, 4.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_construction.rs","byte_start":895310,"byte_end":895370,"line_start":96,"line_end":96,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_construction.rs","byte_start":895375,"byte_end":895378,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(sim * Point2::new(1.0, 2.0), Point2::new(-3.0, 3.0), epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_construction.rs","byte_start":895383,"byte_end":895478,"line_start":98,"line_end":98,"column_start":5,"column_end":100}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_construction.rs","byte_start":895483,"byte_end":895490,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_construction.rs","byte_start":895495,"byte_end":895504,"line_start":100,"line_end":100,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6418},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_construction.rs","byte_start":896932,"byte_end":896935,"line_start":151,"line_end":151,"column_start":12,"column_end":15},"name":"new","qualname":"<Similarity<N, U2, Rotation2<N>>>::new","value":"fn (translation: Vector2<N>, angle: N, scaling: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new similarity from a translation, a rotation, and an uniform scaling factor.","sig":null,"attributes":[{"value":"/ Creates a new similarity from a translation, a rotation, and an uniform scaling factor.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_construction.rs","byte_start":896423,"byte_end":896514,"line_start":138,"line_end":138,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_construction.rs","byte_start":896519,"byte_end":896522,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_construction.rs","byte_start":896527,"byte_end":896540,"line_start":140,"line_end":140,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_construction.rs","byte_start":896545,"byte_end":896548,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_construction.rs","byte_start":896553,"byte_end":896560,"line_start":142,"line_end":142,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_construction.rs","byte_start":896565,"byte_end":896604,"line_start":143,"line_end":143,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_construction.rs","byte_start":896609,"byte_end":896628,"line_start":144,"line_end":144,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{SimilarityMatrix2, Vector2, Point2};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_construction.rs","byte_start":896633,"byte_end":896690,"line_start":145,"line_end":145,"column_start":5,"column_end":62}},{"value":"/ let sim = SimilarityMatrix2::new(Vector2::new(1.0, 2.0), f32::consts::FRAC_PI_2, 3.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_construction.rs","byte_start":896695,"byte_end":896785,"line_start":146,"line_end":146,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_construction.rs","byte_start":896790,"byte_end":896793,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(sim * Point2::new(2.0, 4.0), Point2::new(-11.0, 8.0), epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_construction.rs","byte_start":896798,"byte_end":896894,"line_start":148,"line_end":148,"column_start":5,"column_end":101}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_construction.rs","byte_start":896899,"byte_end":896906,"line_start":149,"line_end":149,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_construction.rs","byte_start":896911,"byte_end":896920,"line_start":150,"line_end":150,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6421},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_construction.rs","byte_start":897713,"byte_end":897716,"line_start":177,"line_end":177,"column_start":12,"column_end":15},"name":"new","qualname":"<Similarity<N, U2, UnitComplex<N>>>::new","value":"fn (translation: Vector2<N>, angle: N, scaling: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new similarity from a translation and a rotation angle.","sig":null,"attributes":[{"value":"/ Creates a new similarity from a translation and a rotation angle.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_construction.rs","byte_start":897238,"byte_end":897307,"line_start":164,"line_end":164,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_construction.rs","byte_start":897312,"byte_end":897315,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_construction.rs","byte_start":897320,"byte_end":897333,"line_start":166,"line_end":166,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_construction.rs","byte_start":897338,"byte_end":897341,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_construction.rs","byte_start":897346,"byte_end":897353,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_construction.rs","byte_start":897358,"byte_end":897397,"line_start":169,"line_end":169,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_construction.rs","byte_start":897402,"byte_end":897421,"line_start":170,"line_end":170,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Similarity2, Vector2, Point2};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_construction.rs","byte_start":897426,"byte_end":897477,"line_start":171,"line_end":171,"column_start":5,"column_end":56}},{"value":"/ let sim = Similarity2::new(Vector2::new(1.0, 2.0), f32::consts::FRAC_PI_2, 3.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_construction.rs","byte_start":897482,"byte_end":897566,"line_start":172,"line_end":172,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_construction.rs","byte_start":897571,"byte_end":897574,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(sim * Point2::new(2.0, 4.0), Point2::new(-11.0, 8.0), epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_construction.rs","byte_start":897579,"byte_end":897675,"line_start":174,"line_end":174,"column_start":5,"column_end":101}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_construction.rs","byte_start":897680,"byte_end":897687,"line_start":175,"line_end":175,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_construction.rs","byte_start":897692,"byte_end":897701,"line_start":176,"line_end":176,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":20055},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940407,"byte_end":940409,"line_start":27,"line_end":27,"column_start":15,"column_end":17},"name":"xx","qualname":"<Point<N, D>>::xx","value":"fn (&self) -> Point2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940099,"byte_end":940148,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940169,"byte_end":940178,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":20056},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940444,"byte_end":940447,"line_start":28,"line_end":28,"column_start":15,"column_end":18},"name":"xxx","qualname":"<Point<N, D>>::xxx","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940099,"byte_end":940148,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940169,"byte_end":940178,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":20060},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940485,"byte_end":940487,"line_start":30,"line_end":30,"column_start":15,"column_end":17},"name":"xy","qualname":"<Point<N, D>>::xy","value":"fn (&self) -> Point2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940099,"byte_end":940148,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940169,"byte_end":940178,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":20061},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940522,"byte_end":940524,"line_start":31,"line_end":31,"column_start":15,"column_end":17},"name":"yx","qualname":"<Point<N, D>>::yx","value":"fn (&self) -> Point2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940099,"byte_end":940148,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940169,"byte_end":940178,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":20062},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940559,"byte_end":940561,"line_start":32,"line_end":32,"column_start":15,"column_end":17},"name":"yy","qualname":"<Point<N, D>>::yy","value":"fn (&self) -> Point2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940099,"byte_end":940148,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940169,"byte_end":940178,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":20063},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940596,"byte_end":940599,"line_start":33,"line_end":33,"column_start":15,"column_end":18},"name":"xxy","qualname":"<Point<N, D>>::xxy","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940099,"byte_end":940148,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940169,"byte_end":940178,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":20064},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940636,"byte_end":940639,"line_start":34,"line_end":34,"column_start":15,"column_end":18},"name":"xyx","qualname":"<Point<N, D>>::xyx","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940099,"byte_end":940148,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940169,"byte_end":940178,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":20065},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940676,"byte_end":940679,"line_start":35,"line_end":35,"column_start":15,"column_end":18},"name":"xyy","qualname":"<Point<N, D>>::xyy","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940099,"byte_end":940148,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940169,"byte_end":940178,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":20066},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940716,"byte_end":940719,"line_start":36,"line_end":36,"column_start":15,"column_end":18},"name":"yxx","qualname":"<Point<N, D>>::yxx","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940099,"byte_end":940148,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940169,"byte_end":940178,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":20067},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940756,"byte_end":940759,"line_start":37,"line_end":37,"column_start":15,"column_end":18},"name":"yxy","qualname":"<Point<N, D>>::yxy","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940099,"byte_end":940148,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940169,"byte_end":940178,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":20068},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940796,"byte_end":940799,"line_start":38,"line_end":38,"column_start":15,"column_end":18},"name":"yyx","qualname":"<Point<N, D>>::yyx","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940099,"byte_end":940148,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940169,"byte_end":940178,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":20069},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940836,"byte_end":940839,"line_start":39,"line_end":39,"column_start":15,"column_end":18},"name":"yyy","qualname":"<Point<N, D>>::yyy","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940099,"byte_end":940148,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940169,"byte_end":940178,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":20073},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940877,"byte_end":940879,"line_start":41,"line_end":41,"column_start":15,"column_end":17},"name":"xz","qualname":"<Point<N, D>>::xz","value":"fn (&self) -> Point2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940099,"byte_end":940148,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940169,"byte_end":940178,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":20074},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940914,"byte_end":940916,"line_start":42,"line_end":42,"column_start":15,"column_end":17},"name":"yz","qualname":"<Point<N, D>>::yz","value":"fn (&self) -> Point2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940099,"byte_end":940148,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940169,"byte_end":940178,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":20075},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940951,"byte_end":940953,"line_start":43,"line_end":43,"column_start":15,"column_end":17},"name":"zx","qualname":"<Point<N, D>>::zx","value":"fn (&self) -> Point2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940099,"byte_end":940148,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940169,"byte_end":940178,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":20076},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940988,"byte_end":940990,"line_start":44,"line_end":44,"column_start":15,"column_end":17},"name":"zy","qualname":"<Point<N, D>>::zy","value":"fn (&self) -> Point2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940099,"byte_end":940148,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940169,"byte_end":940178,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":20077},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":941025,"byte_end":941027,"line_start":45,"line_end":45,"column_start":15,"column_end":17},"name":"zz","qualname":"<Point<N, D>>::zz","value":"fn (&self) -> Point2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940099,"byte_end":940148,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940169,"byte_end":940178,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":20078},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":941062,"byte_end":941065,"line_start":46,"line_end":46,"column_start":15,"column_end":18},"name":"xxz","qualname":"<Point<N, D>>::xxz","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940099,"byte_end":940148,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940169,"byte_end":940178,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":20079},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":941102,"byte_end":941105,"line_start":47,"line_end":47,"column_start":15,"column_end":18},"name":"xyz","qualname":"<Point<N, D>>::xyz","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940099,"byte_end":940148,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940169,"byte_end":940178,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":20080},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":941142,"byte_end":941145,"line_start":48,"line_end":48,"column_start":15,"column_end":18},"name":"xzx","qualname":"<Point<N, D>>::xzx","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940099,"byte_end":940148,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940169,"byte_end":940178,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":20081},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":941182,"byte_end":941185,"line_start":49,"line_end":49,"column_start":15,"column_end":18},"name":"xzy","qualname":"<Point<N, D>>::xzy","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940099,"byte_end":940148,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940169,"byte_end":940178,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":20082},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":941222,"byte_end":941225,"line_start":50,"line_end":50,"column_start":15,"column_end":18},"name":"xzz","qualname":"<Point<N, D>>::xzz","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940099,"byte_end":940148,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940169,"byte_end":940178,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":20083},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":941262,"byte_end":941265,"line_start":51,"line_end":51,"column_start":15,"column_end":18},"name":"yxz","qualname":"<Point<N, D>>::yxz","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940099,"byte_end":940148,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940169,"byte_end":940178,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":20084},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":941302,"byte_end":941305,"line_start":52,"line_end":52,"column_start":15,"column_end":18},"name":"yyz","qualname":"<Point<N, D>>::yyz","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940099,"byte_end":940148,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940169,"byte_end":940178,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":20085},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":941342,"byte_end":941345,"line_start":53,"line_end":53,"column_start":15,"column_end":18},"name":"yzx","qualname":"<Point<N, D>>::yzx","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940099,"byte_end":940148,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940169,"byte_end":940178,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":20086},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":941382,"byte_end":941385,"line_start":54,"line_end":54,"column_start":15,"column_end":18},"name":"yzy","qualname":"<Point<N, D>>::yzy","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940099,"byte_end":940148,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940169,"byte_end":940178,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":20087},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":941422,"byte_end":941425,"line_start":55,"line_end":55,"column_start":15,"column_end":18},"name":"yzz","qualname":"<Point<N, D>>::yzz","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940099,"byte_end":940148,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940169,"byte_end":940178,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":20088},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":941462,"byte_end":941465,"line_start":56,"line_end":56,"column_start":15,"column_end":18},"name":"zxx","qualname":"<Point<N, D>>::zxx","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940099,"byte_end":940148,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940169,"byte_end":940178,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":20089},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":941502,"byte_end":941505,"line_start":57,"line_end":57,"column_start":15,"column_end":18},"name":"zxy","qualname":"<Point<N, D>>::zxy","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940099,"byte_end":940148,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940169,"byte_end":940178,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":20090},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":941542,"byte_end":941545,"line_start":58,"line_end":58,"column_start":15,"column_end":18},"name":"zxz","qualname":"<Point<N, D>>::zxz","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940099,"byte_end":940148,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940169,"byte_end":940178,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":20091},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":941582,"byte_end":941585,"line_start":59,"line_end":59,"column_start":15,"column_end":18},"name":"zyx","qualname":"<Point<N, D>>::zyx","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940099,"byte_end":940148,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940169,"byte_end":940178,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":20092},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":941622,"byte_end":941625,"line_start":60,"line_end":60,"column_start":15,"column_end":18},"name":"zyy","qualname":"<Point<N, D>>::zyy","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940099,"byte_end":940148,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940169,"byte_end":940178,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":20093},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":941662,"byte_end":941665,"line_start":61,"line_end":61,"column_start":15,"column_end":18},"name":"zyz","qualname":"<Point<N, D>>::zyz","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940099,"byte_end":940148,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940169,"byte_end":940178,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":20094},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":941702,"byte_end":941705,"line_start":62,"line_end":62,"column_start":15,"column_end":18},"name":"zzx","qualname":"<Point<N, D>>::zzx","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940099,"byte_end":940148,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940169,"byte_end":940178,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":20095},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":941742,"byte_end":941745,"line_start":63,"line_end":63,"column_start":15,"column_end":18},"name":"zzy","qualname":"<Point<N, D>>::zzy","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940099,"byte_end":940148,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940169,"byte_end":940178,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":20096},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":941782,"byte_end":941785,"line_start":64,"line_end":64,"column_start":15,"column_end":18},"name":"zzz","qualname":"<Point<N, D>>::zzz","value":"fn (&self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940099,"byte_end":940148,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/swizzle.rs","byte_start":940169,"byte_end":940178,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":6619},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":942472,"byte_end":942481,"line_start":21,"line_end":21,"column_start":11,"column_end":20},"name":"TCategory","qualname":"::geometry::transform::TCategory","value":"TCategory: Any + Debug + Copy + PartialEq + Send","parent":null,"children":[{"krate":0,"index":6620},{"krate":0,"index":6621}],"decl_id":null,"docs":" Trait implemented by phantom types identifying the projective transformation type.","sig":null,"attributes":[{"value":"/ Trait implemented by phantom types identifying the projective transformation type.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":942283,"byte_end":942369,"line_start":18,"line_end":18,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":942370,"byte_end":942373,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ NOTE: this trait is not intended to be implemented outside of the `nalgebra` crate.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":942374,"byte_end":942461,"line_start":20,"line_end":20,"column_start":1,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":6620},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":942661,"byte_end":942675,"line_start":25,"line_end":25,"column_start":8,"column_end":22},"name":"has_normalizer","qualname":"::geometry::transform::TCategory::has_normalizer","value":"fn () -> bool","parent":{"krate":0,"index":6619},"children":[],"decl_id":null,"docs":" Indicates whether a `Transform` with the category `Self` has a bottom-row different from\n `0 0 .. 1`.\n","sig":null,"attributes":[{"value":"/ Indicates whether a `Transform` with the category `Self` has a bottom-row different from","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":942527,"byte_end":942619,"line_start":22,"line_end":22,"column_start":5,"column_end":97}},{"value":"/ `0 0 .. 1`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":942624,"byte_end":942639,"line_start":23,"line_end":23,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":942644,"byte_end":942653,"line_start":24,"line_end":24,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6621},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":942836,"byte_end":942864,"line_start":31,"line_end":31,"column_start":8,"column_end":36},"name":"check_homogeneous_invariants","qualname":"::geometry::transform::TCategory::check_homogeneous_invariants","value":"fn <N, D> (mat: &MatrixN<N, D>) -> bool","parent":{"krate":0,"index":6619},"children":[],"decl_id":null,"docs":" Checks that the given matrix is a valid homogeneous representation of an element of the\n category `Self`.\n","sig":null,"attributes":[{"value":"/ Checks that the given matrix is a valid homogeneous representation of an element of the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":942712,"byte_end":942803,"line_start":29,"line_end":29,"column_start":5,"column_end":96}},{"value":"/ category `Self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":942808,"byte_end":942828,"line_start":30,"line_end":30,"column_start":5,"column_end":25}}]},{"kind":"Trait","id":{"krate":0,"index":6624},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":943178,"byte_end":943190,"line_start":39,"line_end":39,"column_start":11,"column_end":23},"name":"TCategoryMul","qualname":"::geometry::transform::TCategoryMul","value":"TCategoryMul<Other: TCategory>: TCategory","parent":null,"children":[{"krate":0,"index":6626}],"decl_id":null,"docs":" Traits that gives the `Transform` category that is compatible with the result of the\n multiplication of transformations with categories `Self` and `Other`.\n","sig":null,"attributes":[{"value":"/ Traits that gives the `Transform` category that is compatible with the result of the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":943005,"byte_end":943093,"line_start":37,"line_end":37,"column_start":1,"column_end":89}},{"value":"/ multiplication of transformations with categories `Self` and `Other`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":943094,"byte_end":943167,"line_start":38,"line_end":38,"column_start":1,"column_end":74}}]},{"kind":"Type","id":{"krate":0,"index":6626},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":943447,"byte_end":943461,"line_start":43,"line_end":43,"column_start":10,"column_end":24},"name":"Representative","qualname":"::geometry::transform::TCategoryMul::Representative","value":"type Representative: TCategory;","parent":{"krate":0,"index":6624},"children":[],"decl_id":null,"docs":" The transform category that results from the multiplication of a `Transform<Self>` to a\n `Transform<Other>`. This is usually equal to `Self` or `Other`, whichever is the most\n general category.\n","sig":null,"attributes":[{"value":"/ The transform category that results from the multiplication of a `Transform<Self>` to a","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":943226,"byte_end":943317,"line_start":40,"line_end":40,"column_start":5,"column_end":96}},{"value":"/ `Transform<Other>`. This is usually equal to `Self` or `Other`, whichever is the most","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":943322,"byte_end":943411,"line_start":41,"line_end":41,"column_start":5,"column_end":94}},{"value":"/ general category.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":943416,"byte_end":943437,"line_start":42,"line_end":42,"column_start":5,"column_end":26}}]},{"kind":"Trait","id":{"krate":0,"index":6627},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":943566,"byte_end":943582,"line_start":47,"line_end":47,"column_start":11,"column_end":27},"name":"SuperTCategoryOf","qualname":"::geometry::transform::SuperTCategoryOf","value":"SuperTCategoryOf<Other: TCategory>: TCategory","parent":null,"children":[],"decl_id":null,"docs":" Indicates that `Self` is a more general `Transform` category than `Other`.\n","sig":null,"attributes":[{"value":"/ Indicates that `Self` is a more general `Transform` category than `Other`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":943477,"byte_end":943555,"line_start":46,"line_end":46,"column_start":1,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":6629},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":943769,"byte_end":943783,"line_start":52,"line_end":52,"column_start":11,"column_end":25},"name":"SubTCategoryOf","qualname":"::geometry::transform::SubTCategoryOf","value":"SubTCategoryOf<Other: TCategory>: TCategory","parent":null,"children":[],"decl_id":null,"docs":" Indicates that `Self` is a more specific `Transform` category than `Other`.","sig":null,"attributes":[{"value":"/ Indicates that `Self` is a more specific `Transform` category than `Other`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":943616,"byte_end":943695,"line_start":49,"line_end":49,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":943696,"byte_end":943699,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Automatically implemented based on `SuperTCategoryOf`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":943700,"byte_end":943758,"line_start":51,"line_end":51,"column_start":1,"column_end":59}}]},{"kind":"Enum","id":{"krate":0,"index":20097},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":944060,"byte_end":944068,"line_start":62,"line_end":62,"column_start":10,"column_end":18},"name":"TGeneral","qualname":"::geometry::transform::TGeneral","value":"TGeneral::{}","parent":null,"children":[],"decl_id":null,"docs":" Tag representing the most general (not necessarily inversible) `Transform` type.\n","sig":null,"attributes":[{"value":"/ Tag representing the most general (not necessarily inversible) `Transform` type.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":943915,"byte_end":943999,"line_start":60,"line_end":60,"column_start":1,"column_end":85}}]},{"kind":"Enum","id":{"krate":0,"index":20112},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":944200,"byte_end":944211,"line_start":66,"line_end":66,"column_start":10,"column_end":21},"name":"TProjective","qualname":"::geometry::transform::TProjective","value":"TProjective::{}","parent":null,"children":[],"decl_id":null,"docs":" Tag representing the most general inversible `Transform` type.\n","sig":null,"attributes":[{"value":"/ Tag representing the most general inversible `Transform` type.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":944073,"byte_end":944139,"line_start":64,"line_end":64,"column_start":1,"column_end":67}}]},{"kind":"Enum","id":{"krate":0,"index":20127},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":944366,"byte_end":944373,"line_start":70,"line_end":70,"column_start":10,"column_end":17},"name":"TAffine","qualname":"::geometry::transform::TAffine","value":"TAffine::{}","parent":null,"children":[],"decl_id":null,"docs":" Tag representing an affine `Transform`. Its bottom-row is equal to `(0, 0 ... 0, 1)`.\n","sig":null,"attributes":[{"value":"/ Tag representing an affine `Transform`. Its bottom-row is equal to `(0, 0 ... 0, 1)`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":944216,"byte_end":944305,"line_start":68,"line_end":68,"column_start":1,"column_end":90}}]},{"kind":"Struct","id":{"krate":0,"index":20157},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":946580,"byte_end":946589,"line_start":160,"line_end":160,"column_start":12,"column_end":21},"name":"Transform","qualname":"::geometry::transform::Transform","value":"Transform {  }","parent":null,"children":[{"krate":0,"index":20161},{"krate":0,"index":20162}],"decl_id":null,"docs":" A transformation matrix in homogeneous coordinates.","sig":null,"attributes":[{"value":"/ A transformation matrix in homogeneous coordinates.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":946360,"byte_end":946415,"line_start":154,"line_end":154,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":946416,"byte_end":946419,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ It is stored as a matrix with dimensions `(D + 1, D + 1)`, e.g., it stores a 4x4 matrix for a","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":946420,"byte_end":946517,"line_start":156,"line_end":156,"column_start":1,"column_end":98}},{"value":"/ 3D transformation.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":946518,"byte_end":946540,"line_start":157,"line_end":157,"column_start":1,"column_end":23}},{"value":"repr(C)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":946541,"byte_end":946551,"line_start":158,"line_end":158,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":6677},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":949442,"byte_end":949463,"line_start":246,"line_end":246,"column_start":12,"column_end":33},"name":"from_matrix_unchecked","qualname":"<Transform<N, D, C>>::from_matrix_unchecked","value":"fn (matrix: MatrixN<N, DimNameSum<D, U1>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new transformation from the given homogeneous matrix. The transformation category\n of `Self` is not checked to be verified by the given matrix.\n","sig":null,"attributes":[{"value":"/ Creates a new transformation from the given homogeneous matrix. The transformation category","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":949252,"byte_end":949347,"line_start":243,"line_end":243,"column_start":5,"column_end":100}},{"value":"/ of `Self` is not checked to be verified by the given matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":949352,"byte_end":949416,"line_start":244,"line_end":244,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":949421,"byte_end":949430,"line_start":245,"line_end":245,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6678},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":950011,"byte_end":950021,"line_start":266,"line_end":266,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Transform<N, D, C>>::into_inner","value":"fn (self) -> MatrixN<N, DimNameSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the underlying matrix.","sig":null,"attributes":[{"value":"/ Retrieves the underlying matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":949617,"byte_end":949653,"line_start":253,"line_end":253,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":949658,"byte_end":949661,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":949666,"byte_end":949680,"line_start":255,"line_end":255,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":949685,"byte_end":949692,"line_start":256,"line_end":256,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix3, Transform2};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":949697,"byte_end":949739,"line_start":257,"line_end":257,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":949744,"byte_end":949747,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix3::new(1.0, 2.0, 0.0,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":949752,"byte_end":949791,"line_start":259,"line_end":259,"column_start":5,"column_end":44}},{"value":"/                      3.0, 4.0, 0.0,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":949796,"byte_end":949835,"line_start":260,"line_end":260,"column_start":5,"column_end":44}},{"value":"/                      0.0, 0.0, 1.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":949840,"byte_end":949880,"line_start":261,"line_end":261,"column_start":5,"column_end":45}},{"value":"/ let t = Transform2::from_matrix_unchecked(m);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":949885,"byte_end":949934,"line_start":262,"line_end":262,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(t.into_inner(), m);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":949939,"byte_end":949973,"line_start":263,"line_end":263,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":949978,"byte_end":949985,"line_start":264,"line_end":264,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":949990,"byte_end":949999,"line_start":265,"line_end":265,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6679},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":950269,"byte_end":950275,"line_start":274,"line_end":274,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<Transform<N, D, C>>::unwrap","value":"fn (self) -> MatrixN<N, DimNameSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the underlying matrix.\n Deprecated: Use [Transform::into_inner] instead.\n","sig":null,"attributes":[{"value":"/ Retrieves the underlying matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":950094,"byte_end":950130,"line_start":270,"line_end":270,"column_start":5,"column_end":41}},{"value":"/ Deprecated: Use [Transform::into_inner] instead.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":950135,"byte_end":950187,"line_start":271,"line_end":271,"column_start":5,"column_end":57}},{"value":"deprecated(note = \"use `.into_inner()` instead\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":950192,"byte_end":950243,"line_start":272,"line_end":272,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":950248,"byte_end":950257,"line_start":273,"line_end":273,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6680},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":950744,"byte_end":950750,"line_start":291,"line_end":291,"column_start":12,"column_end":18},"name":"matrix","qualname":"<Transform<N, D, C>>::matrix","value":"fn (&self) -> &MatrixN<N, DimNameSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" A reference to the underlying matrix.","sig":null,"attributes":[{"value":"/ A reference to the underlying matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":950348,"byte_end":950389,"line_start":278,"line_end":278,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":950394,"byte_end":950397,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":950402,"byte_end":950416,"line_start":280,"line_end":280,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":950421,"byte_end":950428,"line_start":281,"line_end":281,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix3, Transform2};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":950433,"byte_end":950475,"line_start":282,"line_end":282,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":950480,"byte_end":950483,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix3::new(1.0, 2.0, 0.0,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":950488,"byte_end":950527,"line_start":284,"line_end":284,"column_start":5,"column_end":44}},{"value":"/                      3.0, 4.0, 0.0,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":950532,"byte_end":950571,"line_start":285,"line_end":285,"column_start":5,"column_end":44}},{"value":"/                      0.0, 0.0, 1.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":950576,"byte_end":950616,"line_start":286,"line_end":286,"column_start":5,"column_end":45}},{"value":"/ let t = Transform2::from_matrix_unchecked(m);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":950621,"byte_end":950670,"line_start":287,"line_end":287,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(*t.matrix(), m);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":950675,"byte_end":950706,"line_start":288,"line_end":288,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":950711,"byte_end":950718,"line_start":289,"line_end":289,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":950723,"byte_end":950732,"line_start":290,"line_end":290,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6681},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":951657,"byte_end":951677,"line_start":318,"line_end":318,"column_start":12,"column_end":32},"name":"matrix_mut_unchecked","qualname":"<Transform<N, D, C>>::matrix_mut_unchecked","value":"fn (&mut self) -> &mut MatrixN<N, DimNameSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" A mutable reference to the underlying matrix.","sig":null,"attributes":[{"value":"/ A mutable reference to the underlying matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":950826,"byte_end":950875,"line_start":295,"line_end":295,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":950880,"byte_end":950883,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ It is `_unchecked` because direct modifications of this matrix may break invariants","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":950888,"byte_end":950975,"line_start":297,"line_end":297,"column_start":5,"column_end":92}},{"value":"/ identified by this transformation category.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":950980,"byte_end":951027,"line_start":298,"line_end":298,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":951032,"byte_end":951035,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":951040,"byte_end":951054,"line_start":300,"line_end":300,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":951059,"byte_end":951066,"line_start":301,"line_end":301,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix3, Transform2};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":951071,"byte_end":951113,"line_start":302,"line_end":302,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":951118,"byte_end":951121,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix3::new(1.0, 2.0, 0.0,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":951126,"byte_end":951165,"line_start":304,"line_end":304,"column_start":5,"column_end":44}},{"value":"/                      3.0, 4.0, 0.0,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":951170,"byte_end":951209,"line_start":305,"line_end":305,"column_start":5,"column_end":44}},{"value":"/                      0.0, 0.0, 1.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":951214,"byte_end":951254,"line_start":306,"line_end":306,"column_start":5,"column_end":45}},{"value":"/ let mut t = Transform2::from_matrix_unchecked(m);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":951259,"byte_end":951312,"line_start":307,"line_end":307,"column_start":5,"column_end":58}},{"value":"/ t.matrix_mut_unchecked().m12 = 42.0;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":951317,"byte_end":951357,"line_start":308,"line_end":308,"column_start":5,"column_end":45}},{"value":"/ t.matrix_mut_unchecked().m23 = 90.0;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":951362,"byte_end":951402,"line_start":309,"line_end":309,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":951407,"byte_end":951410,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":951415,"byte_end":951418,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ let expected = Matrix3::new(1.0, 42.0, 0.0,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":951423,"byte_end":951470,"line_start":312,"line_end":312,"column_start":5,"column_end":52}},{"value":"/                             3.0, 4.0,  90.0,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":951475,"byte_end":951523,"line_start":313,"line_end":313,"column_start":5,"column_end":53}},{"value":"/                             0.0, 0.0,  1.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":951528,"byte_end":951576,"line_start":314,"line_end":314,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(*t.matrix(), expected);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":951581,"byte_end":951619,"line_start":315,"line_end":315,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":951624,"byte_end":951631,"line_start":316,"line_end":316,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":951636,"byte_end":951645,"line_start":317,"line_end":317,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6682},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":952149,"byte_end":952161,"line_start":329,"line_end":329,"column_start":12,"column_end":24},"name":"set_category","qualname":"<Transform<N, D, C>>::set_category","value":"fn <CNew> (self) -> Transform<N, D, CNew>","parent":null,"children":[],"decl_id":null,"docs":" Sets the category of this transform.","sig":null,"attributes":[{"value":"/ Sets the category of this transform.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":951765,"byte_end":951805,"line_start":322,"line_end":322,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":951810,"byte_end":951813,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ This can be done only if the new category is more general than the current one, e.g., a","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":951818,"byte_end":951909,"line_start":324,"line_end":324,"column_start":5,"column_end":96}},{"value":"/ transform with category `TProjective` cannot be converted to a transform with category","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":951914,"byte_end":952004,"line_start":325,"line_end":325,"column_start":5,"column_end":95}},{"value":"/ `TAffine` because not all projective transformations are affine (the other way-round is","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":952009,"byte_end":952100,"line_start":326,"line_end":326,"column_start":5,"column_end":96}},{"value":"/ valid though).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":952105,"byte_end":952123,"line_start":327,"line_end":327,"column_start":5,"column_end":23}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":952128,"byte_end":952137,"line_start":328,"line_end":328,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6684},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":952523,"byte_end":952534,"line_start":338,"line_end":338,"column_start":12,"column_end":23},"name":"clone_owned","qualname":"<Transform<N, D, C>>::clone_owned","value":"fn (&self) -> Transform<N, D, C>","parent":null,"children":[],"decl_id":null,"docs":" Clones this transform into one that owns its data.\n","sig":null,"attributes":[{"value":"/ Clones this transform into one that owns its data.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":952287,"byte_end":952341,"line_start":333,"line_end":333,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":952346,"byte_end":952355,"line_start":334,"line_end":334,"column_start":5,"column_end":14}},{"value":"deprecated(note =\n             \"This method is redundant with automatic `Copy` and the `.clone()` method and will be removed in a future release.\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":952360,"byte_end":952511,"line_start":335,"line_end":337,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":6685},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":953085,"byte_end":953099,"line_start":355,"line_end":355,"column_start":12,"column_end":26},"name":"to_homogeneous","qualname":"<Transform<N, D, C>>::to_homogeneous","value":"fn (&self) -> MatrixN<N, DimNameSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Converts this transform into its equivalent homogeneous transformation matrix.","sig":null,"attributes":[{"value":"/ Converts this transform into its equivalent homogeneous transformation matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":952645,"byte_end":952727,"line_start":342,"line_end":342,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":952732,"byte_end":952735,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":952740,"byte_end":952754,"line_start":344,"line_end":344,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":952759,"byte_end":952766,"line_start":345,"line_end":345,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix3, Transform2};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":952771,"byte_end":952813,"line_start":346,"line_end":346,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":952818,"byte_end":952821,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix3::new(1.0, 2.0, 0.0,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":952826,"byte_end":952865,"line_start":348,"line_end":348,"column_start":5,"column_end":44}},{"value":"/                      3.0, 4.0, 0.0,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":952870,"byte_end":952909,"line_start":349,"line_end":349,"column_start":5,"column_end":44}},{"value":"/                      0.0, 0.0, 1.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":952914,"byte_end":952954,"line_start":350,"line_end":350,"column_start":5,"column_end":45}},{"value":"/ let t = Transform2::from_matrix_unchecked(m);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":952959,"byte_end":953008,"line_start":351,"line_end":351,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(t.into_inner(), m);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":953013,"byte_end":953047,"line_start":352,"line_end":352,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":953052,"byte_end":953059,"line_start":353,"line_end":353,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":953064,"byte_end":953073,"line_start":354,"line_end":354,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6686},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":954251,"byte_end":954262,"line_start":384,"line_end":384,"column_start":12,"column_end":23},"name":"try_inverse","qualname":"<Transform<N, D, C>>::try_inverse","value":"fn (self) -> Option<Transform<N, D, C>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to invert this transformation. You may use `.inverse` instead of this\n transformation has a subcategory of `TProjective` (i.e. if it is a `Projective{2,3}` or `Affine{2,3}`).","sig":null,"attributes":[{"value":"/ Attempts to invert this transformation. You may use `.inverse` instead of this","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":953189,"byte_end":953271,"line_start":359,"line_end":359,"column_start":5,"column_end":87}},{"value":"/ transformation has a subcategory of `TProjective` (i.e. if it is a `Projective{2,3}` or `Affine{2,3}`).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":953276,"byte_end":953383,"line_start":360,"line_end":360,"column_start":5,"column_end":112}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":953388,"byte_end":953391,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":953396,"byte_end":953410,"line_start":362,"line_end":362,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":953415,"byte_end":953422,"line_start":363,"line_end":363,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":953427,"byte_end":953466,"line_start":364,"line_end":364,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Matrix3, Transform2};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":953471,"byte_end":953513,"line_start":365,"line_end":365,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":953518,"byte_end":953521,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix3::new(2.0, 2.0, -0.3,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":953526,"byte_end":953566,"line_start":367,"line_end":367,"column_start":5,"column_end":45}},{"value":"/                      3.0, 4.0, 0.1,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":953571,"byte_end":953610,"line_start":368,"line_end":368,"column_start":5,"column_end":44}},{"value":"/                      0.0, 0.0, 1.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":953615,"byte_end":953655,"line_start":369,"line_end":369,"column_start":5,"column_end":45}},{"value":"/ let t = Transform2::from_matrix_unchecked(m);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":953660,"byte_end":953709,"line_start":370,"line_end":370,"column_start":5,"column_end":54}},{"value":"/ let inv_t = t.try_inverse().unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":953714,"byte_end":953755,"line_start":371,"line_end":371,"column_start":5,"column_end":46}},{"value":"/ assert_relative_eq!(t * inv_t, Transform2::identity());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":953760,"byte_end":953819,"line_start":372,"line_end":372,"column_start":5,"column_end":64}},{"value":"/ assert_relative_eq!(inv_t * t, Transform2::identity());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":953824,"byte_end":953883,"line_start":373,"line_end":373,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":953888,"byte_end":953891,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ // Non-invertible case.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":953896,"byte_end":953923,"line_start":375,"line_end":375,"column_start":5,"column_end":32}},{"value":"/ let m = Matrix3::new(0.0, 2.0, 1.0,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":953928,"byte_end":953967,"line_start":376,"line_end":376,"column_start":5,"column_end":44}},{"value":"/                      3.0, 0.0, 5.0,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":953972,"byte_end":954011,"line_start":377,"line_end":377,"column_start":5,"column_end":44}},{"value":"/                      0.0, 0.0, 0.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":954016,"byte_end":954056,"line_start":378,"line_end":378,"column_start":5,"column_end":45}},{"value":"/ let t = Transform2::from_matrix_unchecked(m);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":954061,"byte_end":954110,"line_start":379,"line_end":379,"column_start":5,"column_end":54}},{"value":"/ assert!(t.try_inverse().is_none());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":954115,"byte_end":954154,"line_start":380,"line_end":380,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":954159,"byte_end":954166,"line_start":381,"line_end":381,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":954171,"byte_end":954180,"line_start":382,"line_end":382,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use try_inverse_mut()?\"","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":954185,"byte_end":954239,"line_start":383,"line_end":383,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":6687},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":955214,"byte_end":955221,"line_start":410,"line_end":410,"column_start":12,"column_end":19},"name":"inverse","qualname":"<Transform<N, D, C>>::inverse","value":"fn (self) -> Transform<N, D, C>","parent":null,"children":[],"decl_id":null,"docs":" Inverts this transformation. Use `.try_inverse` if this transform has the `TGeneral`\n category (i.e., a `Transform{2,3}` may not be invertible).","sig":null,"attributes":[{"value":"/ Inverts this transformation. Use `.try_inverse` if this transform has the `TGeneral`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":954463,"byte_end":954551,"line_start":392,"line_end":392,"column_start":5,"column_end":93}},{"value":"/ category (i.e., a `Transform{2,3}` may not be invertible).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":954556,"byte_end":954618,"line_start":393,"line_end":393,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":954623,"byte_end":954626,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":954631,"byte_end":954645,"line_start":395,"line_end":395,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":954650,"byte_end":954657,"line_start":396,"line_end":396,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":954662,"byte_end":954701,"line_start":397,"line_end":397,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Matrix3, Projective2};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":954706,"byte_end":954749,"line_start":398,"line_end":398,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":954754,"byte_end":954757,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix3::new(2.0, 2.0, -0.3,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":954762,"byte_end":954802,"line_start":400,"line_end":400,"column_start":5,"column_end":45}},{"value":"/                      3.0, 4.0, 0.1,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":954807,"byte_end":954846,"line_start":401,"line_end":401,"column_start":5,"column_end":44}},{"value":"/                      0.0, 0.0, 1.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":954851,"byte_end":954891,"line_start":402,"line_end":402,"column_start":5,"column_end":45}},{"value":"/ let proj = Projective2::from_matrix_unchecked(m);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":954896,"byte_end":954949,"line_start":403,"line_end":403,"column_start":5,"column_end":58}},{"value":"/ let inv_t = proj.inverse();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":954954,"byte_end":954985,"line_start":404,"line_end":404,"column_start":5,"column_end":36}},{"value":"/ assert_relative_eq!(proj * inv_t, Projective2::identity());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":954990,"byte_end":955053,"line_start":405,"line_end":405,"column_start":5,"column_end":68}},{"value":"/ assert_relative_eq!(inv_t * proj, Projective2::identity());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":955058,"byte_end":955121,"line_start":406,"line_end":406,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":955126,"byte_end":955133,"line_start":407,"line_end":407,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":955138,"byte_end":955147,"line_start":408,"line_end":408,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use inverse_mut()?\"","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":955152,"byte_end":955202,"line_start":409,"line_end":409,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":6688},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":956421,"byte_end":956436,"line_start":443,"line_end":443,"column_start":12,"column_end":27},"name":"try_inverse_mut","qualname":"<Transform<N, D, C>>::try_inverse_mut","value":"fn (&mut self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Attempts to invert this transformation in-place. You may use `.inverse_mut` instead of this\n transformation has a subcategory of `TProjective`.","sig":null,"attributes":[{"value":"/ Attempts to invert this transformation in-place. You may use `.inverse_mut` instead of this","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":955436,"byte_end":955531,"line_start":418,"line_end":418,"column_start":5,"column_end":100}},{"value":"/ transformation has a subcategory of `TProjective`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":955536,"byte_end":955590,"line_start":419,"line_end":419,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":955595,"byte_end":955598,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":955603,"byte_end":955617,"line_start":421,"line_end":421,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":955622,"byte_end":955629,"line_start":422,"line_end":422,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":955634,"byte_end":955673,"line_start":423,"line_end":423,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Matrix3, Transform2};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":955678,"byte_end":955720,"line_start":424,"line_end":424,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":955725,"byte_end":955728,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix3::new(2.0, 2.0, -0.3,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":955733,"byte_end":955773,"line_start":426,"line_end":426,"column_start":5,"column_end":45}},{"value":"/                      3.0, 4.0, 0.1,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":955778,"byte_end":955817,"line_start":427,"line_end":427,"column_start":5,"column_end":44}},{"value":"/                      0.0, 0.0, 1.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":955822,"byte_end":955862,"line_start":428,"line_end":428,"column_start":5,"column_end":45}},{"value":"/ let t = Transform2::from_matrix_unchecked(m);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":955867,"byte_end":955916,"line_start":429,"line_end":429,"column_start":5,"column_end":54}},{"value":"/ let mut inv_t = t;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":955921,"byte_end":955943,"line_start":430,"line_end":430,"column_start":5,"column_end":27}},{"value":"/ assert!(inv_t.try_inverse_mut());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":955948,"byte_end":955985,"line_start":431,"line_end":431,"column_start":5,"column_end":42}},{"value":"/ assert_relative_eq!(t * inv_t, Transform2::identity());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":955990,"byte_end":956049,"line_start":432,"line_end":432,"column_start":5,"column_end":64}},{"value":"/ assert_relative_eq!(inv_t * t, Transform2::identity());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":956054,"byte_end":956113,"line_start":433,"line_end":433,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":956118,"byte_end":956121,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ // Non-invertible case.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":956126,"byte_end":956153,"line_start":435,"line_end":435,"column_start":5,"column_end":32}},{"value":"/ let m = Matrix3::new(0.0, 2.0, 1.0,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":956158,"byte_end":956197,"line_start":436,"line_end":436,"column_start":5,"column_end":44}},{"value":"/                      3.0, 0.0, 5.0,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":956202,"byte_end":956241,"line_start":437,"line_end":437,"column_start":5,"column_end":44}},{"value":"/                      0.0, 0.0, 0.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":956246,"byte_end":956286,"line_start":438,"line_end":438,"column_start":5,"column_end":45}},{"value":"/ let mut t = Transform2::from_matrix_unchecked(m);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":956291,"byte_end":956344,"line_start":439,"line_end":439,"column_start":5,"column_end":58}},{"value":"/ assert!(!t.try_inverse_mut());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":956349,"byte_end":956383,"line_start":440,"line_end":440,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":956388,"byte_end":956395,"line_start":441,"line_end":441,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":956400,"byte_end":956409,"line_start":442,"line_end":442,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6689},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":957217,"byte_end":957228,"line_start":465,"line_end":465,"column_start":12,"column_end":23},"name":"inverse_mut","qualname":"<Transform<N, D, C>>::inverse_mut","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Inverts this transformation in-place. Use `.try_inverse_mut` if this transform has the\n `TGeneral` category (it may not be invertible).","sig":null,"attributes":[{"value":"/ Inverts this transformation in-place. Use `.try_inverse_mut` if this transform has the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":956507,"byte_end":956597,"line_start":447,"line_end":447,"column_start":5,"column_end":95}},{"value":"/ `TGeneral` category (it may not be invertible).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":956602,"byte_end":956653,"line_start":448,"line_end":448,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":956658,"byte_end":956661,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":956666,"byte_end":956680,"line_start":450,"line_end":450,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":956685,"byte_end":956692,"line_start":451,"line_end":451,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":956697,"byte_end":956736,"line_start":452,"line_end":452,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Matrix3, Projective2};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":956741,"byte_end":956784,"line_start":453,"line_end":453,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":956789,"byte_end":956792,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix3::new(2.0, 2.0, -0.3,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":956797,"byte_end":956837,"line_start":455,"line_end":455,"column_start":5,"column_end":45}},{"value":"/                      3.0, 4.0, 0.1,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":956842,"byte_end":956881,"line_start":456,"line_end":456,"column_start":5,"column_end":44}},{"value":"/                      0.0, 0.0, 1.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":956886,"byte_end":956926,"line_start":457,"line_end":457,"column_start":5,"column_end":45}},{"value":"/ let proj = Projective2::from_matrix_unchecked(m);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":956931,"byte_end":956984,"line_start":458,"line_end":458,"column_start":5,"column_end":58}},{"value":"/ let mut inv_t = proj;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":956989,"byte_end":957014,"line_start":459,"line_end":459,"column_start":5,"column_end":30}},{"value":"/ inv_t.inverse_mut();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":957019,"byte_end":957043,"line_start":460,"line_end":460,"column_start":5,"column_end":29}},{"value":"/ assert_relative_eq!(proj * inv_t, Projective2::identity());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":957048,"byte_end":957111,"line_start":461,"line_end":461,"column_start":5,"column_end":68}},{"value":"/ assert_relative_eq!(inv_t * proj, Projective2::identity());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":957116,"byte_end":957179,"line_start":462,"line_end":462,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":957184,"byte_end":957191,"line_start":463,"line_end":463,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":957196,"byte_end":957205,"line_start":464,"line_end":464,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6694},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":957767,"byte_end":957782,"line_start":486,"line_end":486,"column_start":12,"column_end":27},"name":"transform_point","qualname":"<Transform<N, D, C>>::transform_point","value":"fn (&self, pt: &Point<N, D>) -> Point<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Transform the given point by this transformation.","sig":null,"attributes":[{"value":"/ Transform the given point by this transformation.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":957620,"byte_end":957673,"line_start":482,"line_end":482,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":957678,"byte_end":957681,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * pt`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":957686,"byte_end":957741,"line_start":484,"line_end":484,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":957746,"byte_end":957755,"line_start":485,"line_end":485,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6695},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":958069,"byte_end":958085,"line_start":495,"line_end":495,"column_start":12,"column_end":28},"name":"transform_vector","qualname":"<Transform<N, D, C>>::transform_vector","value":"fn (&self, v: &VectorN<N, D>) -> VectorN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Transform the given vector by this transformation, ignoring the\n translational component of the transformation.","sig":null,"attributes":[{"value":"/ Transform the given vector by this transformation, ignoring the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":957854,"byte_end":957921,"line_start":490,"line_end":490,"column_start":5,"column_end":72}},{"value":"/ translational component of the transformation.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":957926,"byte_end":957976,"line_start":491,"line_end":491,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":957981,"byte_end":957984,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * v`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":957989,"byte_end":958043,"line_start":493,"line_end":493,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":958048,"byte_end":958057,"line_start":494,"line_end":494,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6700},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":958639,"byte_end":958662,"line_start":512,"line_end":512,"column_start":12,"column_end":35},"name":"inverse_transform_point","qualname":"<Transform<N, D, C>>::inverse_transform_point","value":"fn (&self, pt: &Point<N, D>) -> Point<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Transform the given point by the inverse of this transformation.\n This may be cheaper than inverting the transformation and transforming\n the point.\n","sig":null,"attributes":[{"value":"/ Transform the given point by the inverse of this transformation.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":958447,"byte_end":958515,"line_start":508,"line_end":508,"column_start":5,"column_end":73}},{"value":"/ This may be cheaper than inverting the transformation and transforming","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":958520,"byte_end":958594,"line_start":509,"line_end":509,"column_start":5,"column_end":79}},{"value":"/ the point.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":958599,"byte_end":958613,"line_start":510,"line_end":510,"column_start":5,"column_end":19}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":958618,"byte_end":958627,"line_start":511,"line_end":511,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6701},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":958946,"byte_end":958970,"line_start":520,"line_end":520,"column_start":12,"column_end":36},"name":"inverse_transform_vector","qualname":"<Transform<N, D, C>>::inverse_transform_vector","value":"fn (&self, v: &VectorN<N, D>) -> VectorN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Transform the given vector by the inverse of this transformation.\n This may be cheaper than inverting the transformation and transforming\n the vector.\n","sig":null,"attributes":[{"value":"/ Transform the given vector by the inverse of this transformation.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":958752,"byte_end":958821,"line_start":516,"line_end":516,"column_start":5,"column_end":74}},{"value":"/ This may be cheaper than inverting the transformation and transforming","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":958826,"byte_end":958900,"line_start":517,"line_end":517,"column_start":5,"column_end":79}},{"value":"/ the vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":958905,"byte_end":958920,"line_start":518,"line_end":518,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":958925,"byte_end":958934,"line_start":519,"line_end":519,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6705},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":959376,"byte_end":959386,"line_start":532,"line_end":532,"column_start":12,"column_end":22},"name":"matrix_mut","qualname":"<Transform<N, D, TGeneral>>::matrix_mut","value":"fn (&mut self) -> &mut MatrixN<N, DimNameSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" A mutable reference to underlying matrix. Use `.matrix_mut_unchecked` instead if this\n transformation category is not `TGeneral`.\n","sig":null,"attributes":[{"value":"/ A mutable reference to underlying matrix. Use `.matrix_mut_unchecked` instead if this","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":959210,"byte_end":959299,"line_start":529,"line_end":529,"column_start":5,"column_end":94}},{"value":"/ transformation category is not `TGeneral`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":959304,"byte_end":959350,"line_start":530,"line_end":530,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":959355,"byte_end":959364,"line_start":531,"line_end":531,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":6734},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform_alias.rs","byte_start":961415,"byte_end":961425,"line_start":6,"line_end":6,"column_start":10,"column_end":20},"name":"Transform2","qualname":"::geometry::transform_alias::Transform2","value":"Transform<N, U2, TGeneral>","parent":null,"children":[],"decl_id":null,"docs":" A 2D general transformation that may not be invertible. Stored as a homogeneous 3x3 matrix.\n","sig":null,"attributes":[{"value":"/ A 2D general transformation that may not be invertible. Stored as a homogeneous 3x3 matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform_alias.rs","byte_start":961310,"byte_end":961405,"line_start":5,"line_end":5,"column_start":1,"column_end":96}}]},{"kind":"Type","id":{"krate":0,"index":6736},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform_alias.rs","byte_start":961549,"byte_end":961560,"line_start":8,"line_end":8,"column_start":10,"column_end":21},"name":"Projective2","qualname":"::geometry::transform_alias::Projective2","value":"Transform<N, U2, TProjective>","parent":null,"children":[],"decl_id":null,"docs":" An invertible 2D general transformation. Stored as a homogeneous 3x3 matrix.\n","sig":null,"attributes":[{"value":"/ An invertible 2D general transformation. Stored as a homogeneous 3x3 matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform_alias.rs","byte_start":961459,"byte_end":961539,"line_start":7,"line_end":7,"column_start":1,"column_end":81}}]},{"kind":"Type","id":{"krate":0,"index":6738},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform_alias.rs","byte_start":961674,"byte_end":961681,"line_start":10,"line_end":10,"column_start":10,"column_end":17},"name":"Affine2","qualname":"::geometry::transform_alias::Affine2","value":"Transform<N, U2, TAffine>","parent":null,"children":[],"decl_id":null,"docs":" A 2D affine transformation. Stored as a homogeneous 3x3 matrix.\n","sig":null,"attributes":[{"value":"/ A 2D affine transformation. Stored as a homogeneous 3x3 matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform_alias.rs","byte_start":961597,"byte_end":961664,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Type","id":{"krate":0,"index":6740},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform_alias.rs","byte_start":961820,"byte_end":961830,"line_start":13,"line_end":13,"column_start":10,"column_end":20},"name":"Transform3","qualname":"::geometry::transform_alias::Transform3","value":"Transform<N, U3, TGeneral>","parent":null,"children":[],"decl_id":null,"docs":" A 3D general transformation that may not be inversible. Stored as a homogeneous 4x4 matrix.\n","sig":null,"attributes":[{"value":"/ A 3D general transformation that may not be inversible. Stored as a homogeneous 4x4 matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform_alias.rs","byte_start":961715,"byte_end":961810,"line_start":12,"line_end":12,"column_start":1,"column_end":96}}]},{"kind":"Type","id":{"krate":0,"index":6742},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform_alias.rs","byte_start":961954,"byte_end":961965,"line_start":15,"line_end":15,"column_start":10,"column_end":21},"name":"Projective3","qualname":"::geometry::transform_alias::Projective3","value":"Transform<N, U3, TProjective>","parent":null,"children":[],"decl_id":null,"docs":" An invertible 3D general transformation. Stored as a homogeneous 4x4 matrix.\n","sig":null,"attributes":[{"value":"/ An invertible 3D general transformation. Stored as a homogeneous 4x4 matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform_alias.rs","byte_start":961864,"byte_end":961944,"line_start":14,"line_end":14,"column_start":1,"column_end":81}}]},{"kind":"Type","id":{"krate":0,"index":6744},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform_alias.rs","byte_start":962079,"byte_end":962086,"line_start":17,"line_end":17,"column_start":10,"column_end":17},"name":"Affine3","qualname":"::geometry::transform_alias::Affine3","value":"Transform<N, U3, TAffine>","parent":null,"children":[],"decl_id":null,"docs":" A 3D affine transformation. Stored as a homogeneous 4x4 matrix.\n","sig":null,"attributes":[{"value":"/ A 3D affine transformation. Stored as a homogeneous 4x4 matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform_alias.rs","byte_start":962002,"byte_end":962069,"line_start":16,"line_end":16,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":6764},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform_construction.rs","byte_start":963350,"byte_end":963358,"line_start":44,"line_end":44,"column_start":12,"column_end":20},"name":"identity","qualname":"<Transform<N, D, C>>::identity","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new identity transform.","sig":null,"attributes":[{"value":"/ Creates a new identity transform.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform_construction.rs","byte_start":962513,"byte_end":962550,"line_start":15,"line_end":15,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform_construction.rs","byte_start":962555,"byte_end":962558,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform_construction.rs","byte_start":962563,"byte_end":962576,"line_start":17,"line_end":17,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform_construction.rs","byte_start":962581,"byte_end":962584,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform_construction.rs","byte_start":962589,"byte_end":962596,"line_start":19,"line_end":19,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Transform2, Projective2, Affine2, Transform3, Projective3, Affine3, Point2, Point3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform_construction.rs","byte_start":962601,"byte_end":962706,"line_start":20,"line_end":20,"column_start":5,"column_end":110}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform_construction.rs","byte_start":962711,"byte_end":962714,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ let pt = Point2::new(1.0, 2.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform_construction.rs","byte_start":962719,"byte_end":962754,"line_start":22,"line_end":22,"column_start":5,"column_end":40}},{"value":"/ let t = Projective2::identity();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform_construction.rs","byte_start":962759,"byte_end":962795,"line_start":23,"line_end":23,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(t * pt, pt);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform_construction.rs","byte_start":962800,"byte_end":962827,"line_start":24,"line_end":24,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform_construction.rs","byte_start":962832,"byte_end":962835,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ let aff = Affine2::identity();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform_construction.rs","byte_start":962840,"byte_end":962874,"line_start":26,"line_end":26,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(aff * pt, pt);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform_construction.rs","byte_start":962879,"byte_end":962908,"line_start":27,"line_end":27,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform_construction.rs","byte_start":962913,"byte_end":962916,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ let aff = Transform2::identity();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform_construction.rs","byte_start":962921,"byte_end":962958,"line_start":29,"line_end":29,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(aff * pt, pt);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform_construction.rs","byte_start":962963,"byte_end":962992,"line_start":30,"line_end":30,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform_construction.rs","byte_start":962997,"byte_end":963000,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ // Also works in 3D.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform_construction.rs","byte_start":963005,"byte_end":963029,"line_start":32,"line_end":32,"column_start":5,"column_end":29}},{"value":"/ let pt = Point3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform_construction.rs","byte_start":963034,"byte_end":963074,"line_start":33,"line_end":33,"column_start":5,"column_end":45}},{"value":"/ let t = Projective3::identity();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform_construction.rs","byte_start":963079,"byte_end":963115,"line_start":34,"line_end":34,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(t * pt, pt);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform_construction.rs","byte_start":963120,"byte_end":963147,"line_start":35,"line_end":35,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform_construction.rs","byte_start":963152,"byte_end":963155,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ let aff = Affine3::identity();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform_construction.rs","byte_start":963160,"byte_end":963194,"line_start":37,"line_end":37,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(aff * pt, pt);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform_construction.rs","byte_start":963199,"byte_end":963228,"line_start":38,"line_end":38,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform_construction.rs","byte_start":963233,"byte_end":963236,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ let aff = Transform3::identity();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform_construction.rs","byte_start":963241,"byte_end":963278,"line_start":40,"line_end":40,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(aff * pt, pt);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform_construction.rs","byte_start":963283,"byte_end":963312,"line_start":41,"line_end":41,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform_construction.rs","byte_start":963317,"byte_end":963324,"line_start":42,"line_end":42,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform_construction.rs","byte_start":963329,"byte_end":963338,"line_start":43,"line_end":43,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":6913},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/reflection.rs","byte_start":991345,"byte_end":991355,"line_start":11,"line_end":11,"column_start":12,"column_end":22},"name":"Reflection","qualname":"::geometry::reflection::Reflection","value":"Reflection {  }","parent":null,"children":[{"krate":0,"index":6917},{"krate":0,"index":6918}],"decl_id":null,"docs":" A reflection wrt. a plane.\n","sig":null,"attributes":[{"value":"/ A reflection wrt. a plane.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/reflection.rs","byte_start":991303,"byte_end":991333,"line_start":10,"line_end":10,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":6923},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/reflection.rs","byte_start":991767,"byte_end":991770,"line_start":21,"line_end":21,"column_start":12,"column_end":15},"name":"new","qualname":"<Reflection<N, D, S>>::new","value":"fn (axis: Unit<Vector<N, D, S>>, bias: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new reflection wrt the plane orthogonal to the given axis and bias.","sig":null,"attributes":[{"value":"/ Creates a new reflection wrt the plane orthogonal to the given axis and bias.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/reflection.rs","byte_start":991512,"byte_end":991593,"line_start":17,"line_end":17,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/reflection.rs","byte_start":991598,"byte_end":991601,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ The bias is the position of the plane on the axis. In particular, a bias equal to zero","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/reflection.rs","byte_start":991606,"byte_end":991696,"line_start":19,"line_end":19,"column_start":5,"column_end":95}},{"value":"/ represents a plane that passes through the origin.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/reflection.rs","byte_start":991701,"byte_end":991755,"line_start":20,"line_end":20,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":6924},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/reflection.rs","byte_start":992036,"byte_end":992056,"line_start":30,"line_end":30,"column_start":12,"column_end":32},"name":"new_containing_point","qualname":"<Reflection<N, D, S>>::new_containing_point","value":"fn (axis: Unit<Vector<N, D, S>>, pt: &Point<N, D>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new reflection wrt. the plane orthogonal to the given axis and that contains the\n point `pt`.\n","sig":null,"attributes":[{"value":"/ Creates a new reflection wrt. the plane orthogonal to the given axis and that contains the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/reflection.rs","byte_start":991910,"byte_end":992004,"line_start":28,"line_end":28,"column_start":5,"column_end":99}},{"value":"/ point `pt`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/reflection.rs","byte_start":992009,"byte_end":992024,"line_start":29,"line_end":29,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":6925},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/reflection.rs","byte_start":992309,"byte_end":992313,"line_start":40,"line_end":40,"column_start":12,"column_end":16},"name":"axis","qualname":"<Reflection<N, D, S>>::axis","value":"fn (&self) -> &Vector<N, D, S>","parent":null,"children":[],"decl_id":null,"docs":" The reflexion axis.\n","sig":null,"attributes":[{"value":"/ The reflexion axis.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/reflection.rs","byte_start":992274,"byte_end":992297,"line_start":39,"line_end":39,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":6926},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/reflection.rs","byte_start":992498,"byte_end":992505,"line_start":46,"line_end":46,"column_start":12,"column_end":19},"name":"reflect","qualname":"<Reflection<N, D, S>>::reflect","value":"fn <R2, C2, S2> (&self, rhs: &mut Matrix<N, R2, C2, S2>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Applies the reflection to the columns of `rhs`.\n","sig":null,"attributes":[{"value":"/ Applies the reflection to the columns of `rhs`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/reflection.rs","byte_start":992435,"byte_end":992486,"line_start":45,"line_end":45,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":6930},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/reflection.rs","byte_start":993294,"byte_end":993311,"line_start":63,"line_end":63,"column_start":12,"column_end":29},"name":"reflect_with_sign","qualname":"<Reflection<N, D, S>>::reflect_with_sign","value":"fn <R2, C2, S2> (&self, rhs: &mut Matrix<N, R2, C2, S2>, sign: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Applies the reflection to the columns of `rhs`.\n","sig":null,"attributes":[{"value":"/ Applies the reflection to the columns of `rhs`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/reflection.rs","byte_start":993231,"byte_end":993282,"line_start":62,"line_end":62,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":6934},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/reflection.rs","byte_start":994049,"byte_end":994061,"line_start":79,"line_end":79,"column_start":12,"column_end":24},"name":"reflect_rows","qualname":"<Reflection<N, D, S>>::reflect_rows","value":"fn <R2, C2, S2, S3> (&self, lhs: &mut Matrix<N, R2, C2, S2>, work: &mut Vector<N, R2, S3>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Applies the reflection to the rows of `lhs`.\n","sig":null,"attributes":[{"value":"/ Applies the reflection to the rows of `lhs`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/reflection.rs","byte_start":993989,"byte_end":994037,"line_start":78,"line_end":78,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":6939},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/reflection.rs","byte_start":994641,"byte_end":994663,"line_start":99,"line_end":99,"column_start":12,"column_end":34},"name":"reflect_rows_with_sign","qualname":"<Reflection<N, D, S>>::reflect_rows_with_sign","value":"fn <R2, C2, S2, S3> (&self, lhs: &mut Matrix<N, R2, C2, S2>, work: &mut Vector<N, R2, S3>, sign: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Applies the reflection to the rows of `lhs`.\n","sig":null,"attributes":[{"value":"/ Applies the reflection to the rows of `lhs`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/reflection.rs","byte_start":994581,"byte_end":994629,"line_start":98,"line_end":98,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":6962},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":995755,"byte_end":995768,"line_start":20,"line_end":20,"column_start":12,"column_end":25},"name":"Orthographic3","qualname":"::geometry::orthographic::Orthographic3","value":"Orthographic3 {  }","parent":null,"children":[{"krate":0,"index":6964}],"decl_id":null,"docs":" A 3D orthographic projection stored as a homogeneous 4x4 matrix.\n","sig":null,"attributes":[{"value":"/ A 3D orthographic projection stored as a homogeneous 4x4 matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":995675,"byte_end":995743,"line_start":19,"line_end":19,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":6978},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":999541,"byte_end":999544,"line_start":112,"line_end":112,"column_start":12,"column_end":15},"name":"new","qualname":"<Orthographic3<N>>::new","value":"fn (left: N, right: N, bottom: N, top: N, znear: N, zfar: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new orthographic projection matrix.","sig":null,"attributes":[{"value":"/ Creates a new orthographic projection matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":996986,"byte_end":997035,"line_start":69,"line_end":69,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":997040,"byte_end":997043,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ This follows the OpenGL convention, so this will flip the `z` axis.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":997048,"byte_end":997119,"line_start":71,"line_end":71,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":997124,"byte_end":997127,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":997132,"byte_end":997145,"line_start":73,"line_end":73,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":997150,"byte_end":997157,"line_start":74,"line_end":74,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":997162,"byte_end":997201,"line_start":75,"line_end":75,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Orthographic3, Point3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":997206,"byte_end":997250,"line_start":76,"line_end":76,"column_start":5,"column_end":49}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":997255,"byte_end":997324,"line_start":77,"line_end":77,"column_start":5,"column_end":74}},{"value":"/ // Check this projection actually transforms the view cuboid into the double-unit cube.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":997329,"byte_end":997420,"line_start":78,"line_end":78,"column_start":5,"column_end":96}},{"value":"/ // See https://www.nalgebra.org/projections/#orthographic-projection for more details.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":997425,"byte_end":997515,"line_start":79,"line_end":79,"column_start":5,"column_end":95}},{"value":"/ let p1 = Point3::new(1.0, 2.0, -0.1);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":997520,"byte_end":997561,"line_start":80,"line_end":80,"column_start":5,"column_end":46}},{"value":"/ let p2 = Point3::new(1.0, 2.0, -1000.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":997566,"byte_end":997610,"line_start":81,"line_end":81,"column_start":5,"column_end":49}},{"value":"/ let p3 = Point3::new(1.0, 20.0, -0.1);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":997615,"byte_end":997657,"line_start":82,"line_end":82,"column_start":5,"column_end":47}},{"value":"/ let p4 = Point3::new(1.0, 20.0, -1000.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":997662,"byte_end":997707,"line_start":83,"line_end":83,"column_start":5,"column_end":50}},{"value":"/ let p5 = Point3::new(10.0, 2.0, -0.1);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":997712,"byte_end":997754,"line_start":84,"line_end":84,"column_start":5,"column_end":47}},{"value":"/ let p6 = Point3::new(10.0, 2.0, -1000.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":997759,"byte_end":997804,"line_start":85,"line_end":85,"column_start":5,"column_end":50}},{"value":"/ let p7 = Point3::new(10.0, 20.0, -0.1);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":997809,"byte_end":997852,"line_start":86,"line_end":86,"column_start":5,"column_end":48}},{"value":"/ let p8 = Point3::new(10.0, 20.0, -1000.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":997857,"byte_end":997903,"line_start":87,"line_end":87,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":997908,"byte_end":997911,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(proj.project_point(&p1), Point3::new(-1.0, -1.0, -1.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":997916,"byte_end":997996,"line_start":89,"line_end":89,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p2), Point3::new(-1.0, -1.0,  1.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":998001,"byte_end":998081,"line_start":90,"line_end":90,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p3), Point3::new(-1.0,  1.0, -1.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":998086,"byte_end":998166,"line_start":91,"line_end":91,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p4), Point3::new(-1.0,  1.0,  1.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":998171,"byte_end":998251,"line_start":92,"line_end":92,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p5), Point3::new( 1.0, -1.0, -1.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":998256,"byte_end":998336,"line_start":93,"line_end":93,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p6), Point3::new( 1.0, -1.0,  1.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":998341,"byte_end":998421,"line_start":94,"line_end":94,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p7), Point3::new( 1.0,  1.0, -1.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":998426,"byte_end":998506,"line_start":95,"line_end":95,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p8), Point3::new( 1.0,  1.0,  1.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":998511,"byte_end":998591,"line_start":96,"line_end":96,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":998596,"byte_end":998599,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ // This also works with flipped axis. In other words, we allow that","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":998604,"byte_end":998675,"line_start":98,"line_end":98,"column_start":5,"column_end":76}},{"value":"/ // `left > right`, `bottom > top`, and/or `znear > zfar`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":998680,"byte_end":998741,"line_start":99,"line_end":99,"column_start":5,"column_end":66}},{"value":"/ let proj = Orthographic3::new(10.0, 1.0, 20.0, 2.0, 1000.0, 0.1);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":998746,"byte_end":998815,"line_start":100,"line_end":100,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":998820,"byte_end":998823,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(proj.project_point(&p1), Point3::new( 1.0,  1.0,  1.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":998828,"byte_end":998908,"line_start":102,"line_end":102,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p2), Point3::new( 1.0,  1.0, -1.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":998913,"byte_end":998993,"line_start":103,"line_end":103,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p3), Point3::new( 1.0, -1.0,  1.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":998998,"byte_end":999078,"line_start":104,"line_end":104,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p4), Point3::new( 1.0, -1.0, -1.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":999083,"byte_end":999163,"line_start":105,"line_end":105,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p5), Point3::new(-1.0,  1.0,  1.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":999168,"byte_end":999248,"line_start":106,"line_end":106,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p6), Point3::new(-1.0,  1.0, -1.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":999253,"byte_end":999333,"line_start":107,"line_end":107,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p7), Point3::new(-1.0, -1.0,  1.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":999338,"byte_end":999418,"line_start":108,"line_end":108,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p8), Point3::new(-1.0, -1.0, -1.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":999423,"byte_end":999503,"line_start":109,"line_end":109,"column_start":5,"column_end":85}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":999508,"byte_end":999515,"line_start":110,"line_end":110,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":999520,"byte_end":999529,"line_start":111,"line_end":111,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6979},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1000631,"byte_end":1000652,"line_start":141,"line_end":141,"column_start":12,"column_end":33},"name":"from_matrix_unchecked","qualname":"<Orthographic3<N>>::from_matrix_unchecked","value":"fn (matrix: Matrix4<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps the given matrix to interpret it as a 3D orthographic matrix.","sig":null,"attributes":[{"value":"/ Wraps the given matrix to interpret it as a 3D orthographic matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":999878,"byte_end":999949,"line_start":123,"line_end":123,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":999954,"byte_end":999957,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ It is not checked whether or not the given matrix actually represents an orthographic","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":999962,"byte_end":1000051,"line_start":125,"line_end":125,"column_start":5,"column_end":94}},{"value":"/ projection.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1000056,"byte_end":1000071,"line_start":126,"line_end":126,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1000076,"byte_end":1000079,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1000084,"byte_end":1000097,"line_start":128,"line_end":128,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1000102,"byte_end":1000109,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Orthographic3, Point3, Matrix4};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1000114,"byte_end":1000167,"line_start":130,"line_end":130,"column_start":5,"column_end":58}},{"value":"/ let mat = Matrix4::new(","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1000172,"byte_end":1000199,"line_start":131,"line_end":131,"column_start":5,"column_end":32}},{"value":"/     2.0 / 9.0, 0.0,        0.0,         -11.0 / 9.0,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1000204,"byte_end":1000260,"line_start":132,"line_end":132,"column_start":5,"column_end":61}},{"value":"/     0.0,       2.0 / 18.0, 0.0,         -22.0 / 18.0,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1000265,"byte_end":1000322,"line_start":133,"line_end":133,"column_start":5,"column_end":62}},{"value":"/     0.0,       0.0,       -2.0 / 999.9, -1000.1 / 999.9,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1000327,"byte_end":1000387,"line_start":134,"line_end":134,"column_start":5,"column_end":65}},{"value":"/     0.0,       0.0,        0.0,         1.0","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1000392,"byte_end":1000439,"line_start":135,"line_end":135,"column_start":5,"column_end":52}},{"value":"/ );","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1000444,"byte_end":1000450,"line_start":136,"line_end":136,"column_start":5,"column_end":11}},{"value":"/ let proj = Orthographic3::from_matrix_unchecked(mat);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1000455,"byte_end":1000512,"line_start":137,"line_end":137,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(proj, Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1000517,"byte_end":1000593,"line_start":138,"line_end":138,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1000598,"byte_end":1000605,"line_start":139,"line_end":139,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1000610,"byte_end":1000619,"line_start":140,"line_end":140,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6980},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1000853,"byte_end":1000861,"line_start":147,"line_end":147,"column_start":12,"column_end":20},"name":"from_fov","qualname":"<Orthographic3<N>>::from_fov","value":"fn (aspect: N, vfov: N, znear: N, zfar: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new orthographic projection matrix from an aspect ratio and the vertical field of view.\n","sig":null,"attributes":[{"value":"/ Creates a new orthographic projection matrix from an aspect ratio and the vertical field of view.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1000726,"byte_end":1000827,"line_start":145,"line_end":145,"column_start":5,"column_end":106}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1000832,"byte_end":1000841,"line_start":146,"line_end":146,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6981},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1002238,"byte_end":1002245,"line_start":189,"line_end":189,"column_start":12,"column_end":19},"name":"inverse","qualname":"<Orthographic3<N>>::inverse","value":"fn (&self) -> Matrix4<N>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the inverse of the underlying homogeneous matrix.","sig":null,"attributes":[{"value":"/ Retrieves the inverse of the underlying homogeneous matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1001469,"byte_end":1001532,"line_start":171,"line_end":171,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1001537,"byte_end":1001540,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1001545,"byte_end":1001558,"line_start":173,"line_end":173,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1001563,"byte_end":1001570,"line_start":174,"line_end":174,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1001575,"byte_end":1001614,"line_start":175,"line_end":175,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Orthographic3, Point3, Matrix4};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1001619,"byte_end":1001672,"line_start":176,"line_end":176,"column_start":5,"column_end":58}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1001677,"byte_end":1001746,"line_start":177,"line_end":177,"column_start":5,"column_end":74}},{"value":"/ let inv = proj.inverse();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1001751,"byte_end":1001780,"line_start":178,"line_end":178,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1001785,"byte_end":1001788,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(inv * proj.as_matrix(), Matrix4::identity());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1001793,"byte_end":1001862,"line_start":180,"line_end":180,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.as_matrix() * inv, Matrix4::identity());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1001867,"byte_end":1001936,"line_start":181,"line_end":181,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1001941,"byte_end":1001944,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ let proj = Orthographic3::new(10.0, 1.0, 20.0, 2.0, 1000.0, 0.1);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1001949,"byte_end":1002018,"line_start":183,"line_end":183,"column_start":5,"column_end":74}},{"value":"/ let inv = proj.inverse();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1002023,"byte_end":1002052,"line_start":184,"line_end":184,"column_start":5,"column_end":34}},{"value":"/ assert_relative_eq!(inv * proj.as_matrix(), Matrix4::identity());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1002057,"byte_end":1002126,"line_start":185,"line_end":185,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.as_matrix() * inv, Matrix4::identity());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1002131,"byte_end":1002200,"line_start":186,"line_end":186,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1002205,"byte_end":1002212,"line_start":187,"line_end":187,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1002217,"byte_end":1002226,"line_start":188,"line_end":188,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6982},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1003357,"byte_end":1003371,"line_start":222,"line_end":222,"column_start":12,"column_end":26},"name":"to_homogeneous","qualname":"<Orthographic3<N>>::to_homogeneous","value":"fn (&self) -> Matrix4<N>","parent":null,"children":[],"decl_id":null,"docs":" Computes the corresponding homogeneous matrix.","sig":null,"attributes":[{"value":"/ Computes the corresponding homogeneous matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1002758,"byte_end":1002808,"line_start":207,"line_end":207,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1002813,"byte_end":1002816,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1002821,"byte_end":1002834,"line_start":209,"line_end":209,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1002839,"byte_end":1002846,"line_start":210,"line_end":210,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Orthographic3, Point3, Matrix4};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1002851,"byte_end":1002904,"line_start":211,"line_end":211,"column_start":5,"column_end":58}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1002909,"byte_end":1002978,"line_start":212,"line_end":212,"column_start":5,"column_end":74}},{"value":"/ let expected = Matrix4::new(","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1002983,"byte_end":1003015,"line_start":213,"line_end":213,"column_start":5,"column_end":37}},{"value":"/     2.0 / 9.0, 0.0,        0.0,         -11.0 / 9.0,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1003020,"byte_end":1003076,"line_start":214,"line_end":214,"column_start":5,"column_end":61}},{"value":"/     0.0,       2.0 / 18.0, 0.0,         -22.0 / 18.0,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1003081,"byte_end":1003138,"line_start":215,"line_end":215,"column_start":5,"column_end":62}},{"value":"/     0.0,       0.0,       -2.0 / 999.9, -1000.1 / 999.9,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1003143,"byte_end":1003203,"line_start":216,"line_end":216,"column_start":5,"column_end":65}},{"value":"/     0.0,       0.0,        0.0,         1.0","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1003208,"byte_end":1003255,"line_start":217,"line_end":217,"column_start":5,"column_end":52}},{"value":"/ );","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1003260,"byte_end":1003266,"line_start":218,"line_end":218,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(proj.to_homogeneous(), expected);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1003271,"byte_end":1003319,"line_start":219,"line_end":219,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1003324,"byte_end":1003331,"line_start":220,"line_end":220,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1003336,"byte_end":1003345,"line_start":221,"line_end":221,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6983},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1004039,"byte_end":1004048,"line_start":241,"line_end":241,"column_start":12,"column_end":21},"name":"as_matrix","qualname":"<Orthographic3<N>>::as_matrix","value":"fn (&self) -> &Matrix4<N>","parent":null,"children":[],"decl_id":null,"docs":" A reference to the underlying homogeneous transformation matrix.","sig":null,"attributes":[{"value":"/ A reference to the underlying homogeneous transformation matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1003426,"byte_end":1003494,"line_start":226,"line_end":226,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1003499,"byte_end":1003502,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1003507,"byte_end":1003520,"line_start":228,"line_end":228,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1003525,"byte_end":1003532,"line_start":229,"line_end":229,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Orthographic3, Point3, Matrix4};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1003537,"byte_end":1003590,"line_start":230,"line_end":230,"column_start":5,"column_end":58}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1003595,"byte_end":1003664,"line_start":231,"line_end":231,"column_start":5,"column_end":74}},{"value":"/ let expected = Matrix4::new(","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1003669,"byte_end":1003701,"line_start":232,"line_end":232,"column_start":5,"column_end":37}},{"value":"/     2.0 / 9.0, 0.0,        0.0,         -11.0 / 9.0,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1003706,"byte_end":1003762,"line_start":233,"line_end":233,"column_start":5,"column_end":61}},{"value":"/     0.0,       2.0 / 18.0, 0.0,         -22.0 / 18.0,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1003767,"byte_end":1003824,"line_start":234,"line_end":234,"column_start":5,"column_end":62}},{"value":"/     0.0,       0.0,       -2.0 / 999.9, -1000.1 / 999.9,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1003829,"byte_end":1003889,"line_start":235,"line_end":235,"column_start":5,"column_end":65}},{"value":"/     0.0,       0.0,        0.0,         1.0","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1003894,"byte_end":1003941,"line_start":236,"line_end":236,"column_start":5,"column_end":52}},{"value":"/ );","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1003946,"byte_end":1003952,"line_start":237,"line_end":237,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(*proj.as_matrix(), expected);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1003957,"byte_end":1004001,"line_start":238,"line_end":238,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1004006,"byte_end":1004013,"line_start":239,"line_end":239,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1004018,"byte_end":1004027,"line_start":240,"line_end":240,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6984},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1004439,"byte_end":1004452,"line_start":254,"line_end":254,"column_start":12,"column_end":25},"name":"as_projective","qualname":"<Orthographic3<N>>::as_projective","value":"fn (&self) -> &Projective3<N>","parent":null,"children":[],"decl_id":null,"docs":" A reference to this transformation seen as a `Projective3`.","sig":null,"attributes":[{"value":"/ A reference to this transformation seen as a `Projective3`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1004105,"byte_end":1004168,"line_start":245,"line_end":245,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1004173,"byte_end":1004176,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1004181,"byte_end":1004194,"line_start":247,"line_end":247,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1004199,"byte_end":1004206,"line_start":248,"line_end":248,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1004211,"byte_end":1004245,"line_start":249,"line_end":249,"column_start":5,"column_end":39}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1004250,"byte_end":1004319,"line_start":250,"line_end":250,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(proj.as_projective().to_homogeneous(), proj.to_homogeneous());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1004324,"byte_end":1004401,"line_start":251,"line_end":251,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1004406,"byte_end":1004413,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1004418,"byte_end":1004427,"line_start":253,"line_end":253,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6985},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1004851,"byte_end":1004864,"line_start":267,"line_end":267,"column_start":12,"column_end":25},"name":"to_projective","qualname":"<Orthographic3<N>>::to_projective","value":"fn (&self) -> Projective3<N>","parent":null,"children":[],"decl_id":null,"docs":" This transformation seen as a `Projective3`.","sig":null,"attributes":[{"value":"/ This transformation seen as a `Projective3`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1004532,"byte_end":1004580,"line_start":258,"line_end":258,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1004585,"byte_end":1004588,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1004593,"byte_end":1004606,"line_start":260,"line_end":260,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1004611,"byte_end":1004618,"line_start":261,"line_end":261,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1004623,"byte_end":1004657,"line_start":262,"line_end":262,"column_start":5,"column_end":39}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1004662,"byte_end":1004731,"line_start":263,"line_end":263,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(proj.to_projective().to_homogeneous(), proj.to_homogeneous());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1004736,"byte_end":1004813,"line_start":264,"line_end":264,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1004818,"byte_end":1004825,"line_start":265,"line_end":265,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1004830,"byte_end":1004839,"line_start":266,"line_end":266,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6986},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1005596,"byte_end":1005606,"line_start":287,"line_end":287,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Orthographic3<N>>::into_inner","value":"fn (self) -> Matrix4<N>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the underlying homogeneous matrix.","sig":null,"attributes":[{"value":"/ Retrieves the underlying homogeneous matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1004959,"byte_end":1005007,"line_start":271,"line_end":271,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1005012,"byte_end":1005015,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1005020,"byte_end":1005033,"line_start":273,"line_end":273,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1005038,"byte_end":1005045,"line_start":274,"line_end":274,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1005050,"byte_end":1005089,"line_start":275,"line_end":275,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Orthographic3, Point3, Matrix4};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1005094,"byte_end":1005147,"line_start":276,"line_end":276,"column_start":5,"column_end":58}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1005152,"byte_end":1005221,"line_start":277,"line_end":277,"column_start":5,"column_end":74}},{"value":"/ let expected = Matrix4::new(","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1005226,"byte_end":1005258,"line_start":278,"line_end":278,"column_start":5,"column_end":37}},{"value":"/     2.0 / 9.0, 0.0,        0.0,         -11.0 / 9.0,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1005263,"byte_end":1005319,"line_start":279,"line_end":279,"column_start":5,"column_end":61}},{"value":"/     0.0,       2.0 / 18.0, 0.0,         -22.0 / 18.0,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1005324,"byte_end":1005381,"line_start":280,"line_end":280,"column_start":5,"column_end":62}},{"value":"/     0.0,       0.0,       -2.0 / 999.9, -1000.1 / 999.9,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1005386,"byte_end":1005446,"line_start":281,"line_end":281,"column_start":5,"column_end":65}},{"value":"/     0.0,       0.0,        0.0,         1.0","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1005451,"byte_end":1005498,"line_start":282,"line_end":282,"column_start":5,"column_end":52}},{"value":"/ );","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1005503,"byte_end":1005509,"line_start":283,"line_end":283,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(proj.into_inner(), expected);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1005514,"byte_end":1005558,"line_start":284,"line_end":284,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1005563,"byte_end":1005570,"line_start":285,"line_end":285,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1005575,"byte_end":1005584,"line_start":286,"line_end":286,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6987},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1005851,"byte_end":1005857,"line_start":295,"line_end":295,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<Orthographic3<N>>::unwrap","value":"fn (self) -> Matrix4<N>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the underlying homogeneous matrix.\n Deprecated: Use [Orthographic3::into_inner] instead.\n","sig":null,"attributes":[{"value":"/ Retrieves the underlying homogeneous matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1005660,"byte_end":1005708,"line_start":291,"line_end":291,"column_start":5,"column_end":53}},{"value":"/ Deprecated: Use [Orthographic3::into_inner] instead.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1005713,"byte_end":1005769,"line_start":292,"line_end":292,"column_start":5,"column_end":61}},{"value":"deprecated(note = \"use `.into_inner()` instead\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1005774,"byte_end":1005825,"line_start":293,"line_end":293,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1005830,"byte_end":1005839,"line_start":294,"line_end":294,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6988},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1006378,"byte_end":1006382,"line_start":311,"line_end":311,"column_start":12,"column_end":16},"name":"left","qualname":"<Orthographic3<N>>::left","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The left offset of the view cuboid.","sig":null,"attributes":[{"value":"/ The left offset of the view cuboid.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1005911,"byte_end":1005950,"line_start":299,"line_end":299,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1005955,"byte_end":1005958,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1005963,"byte_end":1005970,"line_start":301,"line_end":301,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1005975,"byte_end":1006014,"line_start":302,"line_end":302,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1006019,"byte_end":1006053,"line_start":303,"line_end":303,"column_start":5,"column_end":39}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1006058,"byte_end":1006127,"line_start":304,"line_end":304,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.left(), 1.0, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1006132,"byte_end":1006192,"line_start":305,"line_end":305,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1006197,"byte_end":1006200,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ let proj = Orthographic3::new(10.0, 1.0, 20.0, 2.0, 1000.0, 0.1);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1006205,"byte_end":1006274,"line_start":307,"line_end":307,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.left(), 10.0, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1006279,"byte_end":1006340,"line_start":308,"line_end":308,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1006345,"byte_end":1006352,"line_start":309,"line_end":309,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1006357,"byte_end":1006366,"line_start":310,"line_end":310,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6989},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1006942,"byte_end":1006947,"line_start":327,"line_end":327,"column_start":12,"column_end":17},"name":"right","qualname":"<Orthographic3<N>>::right","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The right offset of the view cuboid.","sig":null,"attributes":[{"value":"/ The right offset of the view cuboid.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1006472,"byte_end":1006512,"line_start":315,"line_end":315,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1006517,"byte_end":1006520,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1006525,"byte_end":1006532,"line_start":317,"line_end":317,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1006537,"byte_end":1006576,"line_start":318,"line_end":318,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1006581,"byte_end":1006615,"line_start":319,"line_end":319,"column_start":5,"column_end":39}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1006620,"byte_end":1006689,"line_start":320,"line_end":320,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.right(), 10.0, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1006694,"byte_end":1006756,"line_start":321,"line_end":321,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1006761,"byte_end":1006764,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ let proj = Orthographic3::new(10.0, 1.0, 20.0, 2.0, 1000.0, 0.1);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1006769,"byte_end":1006838,"line_start":323,"line_end":323,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.right(), 1.0, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1006843,"byte_end":1006904,"line_start":324,"line_end":324,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1006909,"byte_end":1006916,"line_start":325,"line_end":325,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1006921,"byte_end":1006930,"line_start":326,"line_end":326,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6990},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1007509,"byte_end":1007515,"line_start":343,"line_end":343,"column_start":12,"column_end":18},"name":"bottom","qualname":"<Orthographic3<N>>::bottom","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The bottom offset of the view cuboid.","sig":null,"attributes":[{"value":"/ The bottom offset of the view cuboid.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1007036,"byte_end":1007077,"line_start":331,"line_end":331,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1007082,"byte_end":1007085,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1007090,"byte_end":1007097,"line_start":333,"line_end":333,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1007102,"byte_end":1007141,"line_start":334,"line_end":334,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1007146,"byte_end":1007180,"line_start":335,"line_end":335,"column_start":5,"column_end":39}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1007185,"byte_end":1007254,"line_start":336,"line_end":336,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.bottom(), 2.0, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1007259,"byte_end":1007321,"line_start":337,"line_end":337,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1007326,"byte_end":1007329,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ let proj = Orthographic3::new(10.0, 1.0, 20.0, 2.0, 1000.0, 0.1);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1007334,"byte_end":1007403,"line_start":339,"line_end":339,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.bottom(), 20.0, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1007408,"byte_end":1007471,"line_start":340,"line_end":340,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1007476,"byte_end":1007483,"line_start":341,"line_end":341,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1007488,"byte_end":1007497,"line_start":342,"line_end":342,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6991},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1008069,"byte_end":1008072,"line_start":359,"line_end":359,"column_start":12,"column_end":15},"name":"top","qualname":"<Orthographic3<N>>::top","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The top offset of the view cuboid.","sig":null,"attributes":[{"value":"/ The top offset of the view cuboid.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1007605,"byte_end":1007643,"line_start":347,"line_end":347,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1007648,"byte_end":1007651,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1007656,"byte_end":1007663,"line_start":349,"line_end":349,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1007668,"byte_end":1007707,"line_start":350,"line_end":350,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1007712,"byte_end":1007746,"line_start":351,"line_end":351,"column_start":5,"column_end":39}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1007751,"byte_end":1007820,"line_start":352,"line_end":352,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.top(), 20.0, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1007825,"byte_end":1007885,"line_start":353,"line_end":353,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1007890,"byte_end":1007893,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ let proj = Orthographic3::new(10.0, 1.0, 20.0, 2.0, 1000.0, 0.1);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1007898,"byte_end":1007967,"line_start":355,"line_end":355,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.top(), 2.0, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1007972,"byte_end":1008031,"line_start":356,"line_end":356,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1008036,"byte_end":1008043,"line_start":357,"line_end":357,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1008048,"byte_end":1008057,"line_start":358,"line_end":358,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6992},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1008638,"byte_end":1008643,"line_start":375,"line_end":375,"column_start":12,"column_end":17},"name":"znear","qualname":"<Orthographic3<N>>::znear","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The near plane offset of the view cuboid.","sig":null,"attributes":[{"value":"/ The near plane offset of the view cuboid.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1008161,"byte_end":1008206,"line_start":363,"line_end":363,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1008211,"byte_end":1008214,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1008219,"byte_end":1008226,"line_start":365,"line_end":365,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1008231,"byte_end":1008270,"line_start":366,"line_end":366,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1008275,"byte_end":1008309,"line_start":367,"line_end":367,"column_start":5,"column_end":39}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1008314,"byte_end":1008383,"line_start":368,"line_end":368,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.znear(), 0.1, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1008388,"byte_end":1008449,"line_start":369,"line_end":369,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1008454,"byte_end":1008457,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ let proj = Orthographic3::new(10.0, 1.0, 20.0, 2.0, 1000.0, 0.1);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1008462,"byte_end":1008531,"line_start":371,"line_end":371,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.znear(), 1000.0, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1008536,"byte_end":1008600,"line_start":372,"line_end":372,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1008605,"byte_end":1008612,"line_start":373,"line_end":373,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1008617,"byte_end":1008626,"line_start":374,"line_end":374,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6993},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1009206,"byte_end":1009210,"line_start":391,"line_end":391,"column_start":12,"column_end":16},"name":"zfar","qualname":"<Orthographic3<N>>::zfar","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The far plane offset of the view cuboid.","sig":null,"attributes":[{"value":"/ The far plane offset of the view cuboid.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1008732,"byte_end":1008776,"line_start":379,"line_end":379,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1008781,"byte_end":1008784,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1008789,"byte_end":1008796,"line_start":381,"line_end":381,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1008801,"byte_end":1008840,"line_start":382,"line_end":382,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1008845,"byte_end":1008879,"line_start":383,"line_end":383,"column_start":5,"column_end":39}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1008884,"byte_end":1008953,"line_start":384,"line_end":384,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.zfar(), 1000.0, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1008958,"byte_end":1009021,"line_start":385,"line_end":385,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1009026,"byte_end":1009029,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ let proj = Orthographic3::new(10.0, 1.0, 20.0, 2.0, 1000.0, 0.1);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1009034,"byte_end":1009103,"line_start":387,"line_end":387,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.zfar(), 0.1, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1009108,"byte_end":1009168,"line_start":388,"line_end":388,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1009173,"byte_end":1009180,"line_start":389,"line_end":389,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1009185,"byte_end":1009194,"line_start":390,"line_end":390,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6994},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1010758,"byte_end":1010771,"line_start":423,"line_end":423,"column_start":12,"column_end":25},"name":"project_point","qualname":"<Orthographic3<N>>::project_point","value":"fn (&self, p: &Point3<N>) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Projects a point. Faster than matrix multiplication.","sig":null,"attributes":[{"value":"/ Projects a point. Faster than matrix multiplication.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1009375,"byte_end":1009431,"line_start":396,"line_end":396,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1009436,"byte_end":1009439,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1009444,"byte_end":1009457,"line_start":398,"line_end":398,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1009462,"byte_end":1009469,"line_start":399,"line_end":399,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1009474,"byte_end":1009513,"line_start":400,"line_end":400,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Orthographic3, Point3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1009518,"byte_end":1009562,"line_start":401,"line_end":401,"column_start":5,"column_end":49}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1009567,"byte_end":1009636,"line_start":402,"line_end":402,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1009641,"byte_end":1009644,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ let p1 = Point3::new(1.0, 2.0, -0.1);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1009649,"byte_end":1009690,"line_start":404,"line_end":404,"column_start":5,"column_end":46}},{"value":"/ let p2 = Point3::new(1.0, 2.0, -1000.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1009695,"byte_end":1009739,"line_start":405,"line_end":405,"column_start":5,"column_end":49}},{"value":"/ let p3 = Point3::new(1.0, 20.0, -0.1);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1009744,"byte_end":1009786,"line_start":406,"line_end":406,"column_start":5,"column_end":47}},{"value":"/ let p4 = Point3::new(1.0, 20.0, -1000.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1009791,"byte_end":1009836,"line_start":407,"line_end":407,"column_start":5,"column_end":50}},{"value":"/ let p5 = Point3::new(10.0, 2.0, -0.1);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1009841,"byte_end":1009883,"line_start":408,"line_end":408,"column_start":5,"column_end":47}},{"value":"/ let p6 = Point3::new(10.0, 2.0, -1000.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1009888,"byte_end":1009933,"line_start":409,"line_end":409,"column_start":5,"column_end":50}},{"value":"/ let p7 = Point3::new(10.0, 20.0, -0.1);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1009938,"byte_end":1009981,"line_start":410,"line_end":410,"column_start":5,"column_end":48}},{"value":"/ let p8 = Point3::new(10.0, 20.0, -1000.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1009986,"byte_end":1010032,"line_start":411,"line_end":411,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1010037,"byte_end":1010040,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(proj.project_point(&p1), Point3::new(-1.0, -1.0, -1.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1010045,"byte_end":1010125,"line_start":413,"line_end":413,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p2), Point3::new(-1.0, -1.0,  1.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1010130,"byte_end":1010210,"line_start":414,"line_end":414,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p3), Point3::new(-1.0,  1.0, -1.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1010215,"byte_end":1010295,"line_start":415,"line_end":415,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p4), Point3::new(-1.0,  1.0,  1.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1010300,"byte_end":1010380,"line_start":416,"line_end":416,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p5), Point3::new( 1.0, -1.0, -1.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1010385,"byte_end":1010465,"line_start":417,"line_end":417,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p6), Point3::new( 1.0, -1.0,  1.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1010470,"byte_end":1010550,"line_start":418,"line_end":418,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p7), Point3::new( 1.0,  1.0, -1.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1010555,"byte_end":1010635,"line_start":419,"line_end":419,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p8), Point3::new( 1.0,  1.0,  1.0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1010640,"byte_end":1010720,"line_start":420,"line_end":420,"column_start":5,"column_end":85}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1010725,"byte_end":1010732,"line_start":421,"line_end":421,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1010737,"byte_end":1010746,"line_start":422,"line_end":422,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6995},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1012609,"byte_end":1012624,"line_start":458,"line_end":458,"column_start":12,"column_end":27},"name":"unproject_point","qualname":"<Orthographic3<N>>::unproject_point","value":"fn (&self, p: &Point3<N>) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Un-projects a point. Faster than multiplication by the underlying matrix inverse.","sig":null,"attributes":[{"value":"/ Un-projects a point. Faster than multiplication by the underlying matrix inverse.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1011037,"byte_end":1011122,"line_start":431,"line_end":431,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1011127,"byte_end":1011130,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1011135,"byte_end":1011148,"line_start":433,"line_end":433,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1011153,"byte_end":1011160,"line_start":434,"line_end":434,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1011165,"byte_end":1011204,"line_start":435,"line_end":435,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Orthographic3, Point3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1011209,"byte_end":1011253,"line_start":436,"line_end":436,"column_start":5,"column_end":49}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1011258,"byte_end":1011327,"line_start":437,"line_end":437,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1011332,"byte_end":1011335,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ let p1 = Point3::new(-1.0, -1.0, -1.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1011340,"byte_end":1011383,"line_start":439,"line_end":439,"column_start":5,"column_end":48}},{"value":"/ let p2 = Point3::new(-1.0, -1.0,  1.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1011388,"byte_end":1011431,"line_start":440,"line_end":440,"column_start":5,"column_end":48}},{"value":"/ let p3 = Point3::new(-1.0,  1.0, -1.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1011436,"byte_end":1011479,"line_start":441,"line_end":441,"column_start":5,"column_end":48}},{"value":"/ let p4 = Point3::new(-1.0,  1.0,  1.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1011484,"byte_end":1011527,"line_start":442,"line_end":442,"column_start":5,"column_end":48}},{"value":"/ let p5 = Point3::new( 1.0, -1.0, -1.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1011532,"byte_end":1011575,"line_start":443,"line_end":443,"column_start":5,"column_end":48}},{"value":"/ let p6 = Point3::new( 1.0, -1.0,  1.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1011580,"byte_end":1011623,"line_start":444,"line_end":444,"column_start":5,"column_end":48}},{"value":"/ let p7 = Point3::new( 1.0,  1.0, -1.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1011628,"byte_end":1011671,"line_start":445,"line_end":445,"column_start":5,"column_end":48}},{"value":"/ let p8 = Point3::new( 1.0,  1.0,  1.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1011676,"byte_end":1011719,"line_start":446,"line_end":446,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1011724,"byte_end":1011727,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(proj.unproject_point(&p1), Point3::new(1.0, 2.0, -0.1), epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1011732,"byte_end":1011830,"line_start":448,"line_end":448,"column_start":5,"column_end":103}},{"value":"/ assert_relative_eq!(proj.unproject_point(&p2), Point3::new(1.0, 2.0, -1000.0), epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1011835,"byte_end":1011936,"line_start":449,"line_end":449,"column_start":5,"column_end":106}},{"value":"/ assert_relative_eq!(proj.unproject_point(&p3), Point3::new(1.0, 20.0, -0.1), epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1011941,"byte_end":1012040,"line_start":450,"line_end":450,"column_start":5,"column_end":104}},{"value":"/ assert_relative_eq!(proj.unproject_point(&p4), Point3::new(1.0, 20.0, -1000.0), epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1012045,"byte_end":1012147,"line_start":451,"line_end":451,"column_start":5,"column_end":107}},{"value":"/ assert_relative_eq!(proj.unproject_point(&p5), Point3::new(10.0, 2.0, -0.1), epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1012152,"byte_end":1012251,"line_start":452,"line_end":452,"column_start":5,"column_end":104}},{"value":"/ assert_relative_eq!(proj.unproject_point(&p6), Point3::new(10.0, 2.0, -1000.0), epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1012256,"byte_end":1012358,"line_start":453,"line_end":453,"column_start":5,"column_end":107}},{"value":"/ assert_relative_eq!(proj.unproject_point(&p7), Point3::new(10.0, 20.0, -0.1), epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1012363,"byte_end":1012463,"line_start":454,"line_end":454,"column_start":5,"column_end":105}},{"value":"/ assert_relative_eq!(proj.unproject_point(&p8), Point3::new(10.0, 20.0, -1000.0), epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1012468,"byte_end":1012571,"line_start":455,"line_end":455,"column_start":5,"column_end":108}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1012576,"byte_end":1012583,"line_start":456,"line_end":456,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1012588,"byte_end":1012597,"line_start":457,"line_end":457,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6996},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1013712,"byte_end":1013726,"line_start":486,"line_end":486,"column_start":12,"column_end":26},"name":"project_vector","qualname":"<Orthographic3<N>>::project_vector","value":"fn <SB> (&self, p: &Vector<N, U3, SB>) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Projects a vector. Faster than matrix multiplication.","sig":null,"attributes":[{"value":"/ Projects a vector. Faster than matrix multiplication.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1012971,"byte_end":1013028,"line_start":467,"line_end":467,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1013033,"byte_end":1013036,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ Vectors are not affected by the translation part of the projection.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1013041,"byte_end":1013112,"line_start":469,"line_end":469,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1013117,"byte_end":1013120,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1013125,"byte_end":1013138,"line_start":471,"line_end":471,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1013143,"byte_end":1013150,"line_start":472,"line_end":472,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1013155,"byte_end":1013194,"line_start":473,"line_end":473,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Orthographic3, Vector3};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1013199,"byte_end":1013244,"line_start":474,"line_end":474,"column_start":5,"column_end":50}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1013249,"byte_end":1013318,"line_start":475,"line_end":475,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1013323,"byte_end":1013326,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ let v1 = Vector3::x();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1013331,"byte_end":1013357,"line_start":477,"line_end":477,"column_start":5,"column_end":31}},{"value":"/ let v2 = Vector3::y();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1013362,"byte_end":1013388,"line_start":478,"line_end":478,"column_start":5,"column_end":31}},{"value":"/ let v3 = Vector3::z();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1013393,"byte_end":1013419,"line_start":479,"line_end":479,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1013424,"byte_end":1013427,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(proj.project_vector(&v1), Vector3::x() * 2.0 / 9.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1013432,"byte_end":1013508,"line_start":481,"line_end":481,"column_start":5,"column_end":81}},{"value":"/ assert_relative_eq!(proj.project_vector(&v2), Vector3::y() * 2.0 / 18.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1013513,"byte_end":1013590,"line_start":482,"line_end":482,"column_start":5,"column_end":82}},{"value":"/ assert_relative_eq!(proj.project_vector(&v3), Vector3::z() * -2.0 / 999.9);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1013595,"byte_end":1013674,"line_start":483,"line_end":483,"column_start":5,"column_end":84}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1013679,"byte_end":1013686,"line_start":484,"line_end":484,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1013691,"byte_end":1013700,"line_start":485,"line_end":485,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6998},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1014521,"byte_end":1014529,"line_start":511,"line_end":511,"column_start":12,"column_end":20},"name":"set_left","qualname":"<Orthographic3<N>>::set_left","value":"fn (&mut self, left: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the left offset of the view cuboid.","sig":null,"attributes":[{"value":"/ Sets the left offset of the view cuboid.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1013982,"byte_end":1014026,"line_start":497,"line_end":497,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1014031,"byte_end":1014034,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1014039,"byte_end":1014046,"line_start":499,"line_end":499,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1014051,"byte_end":1014090,"line_start":500,"line_end":500,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1014095,"byte_end":1014129,"line_start":501,"line_end":501,"column_start":5,"column_end":39}},{"value":"/ let mut proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1014134,"byte_end":1014207,"line_start":502,"line_end":502,"column_start":5,"column_end":78}},{"value":"/ proj.set_left(2.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1014212,"byte_end":1014235,"line_start":503,"line_end":503,"column_start":5,"column_end":28}},{"value":"/ assert_relative_eq!(proj.left(), 2.0, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1014240,"byte_end":1014300,"line_start":504,"line_end":504,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1014305,"byte_end":1014308,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ // It is OK to set a left offset greater than the current right offset.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1014313,"byte_end":1014388,"line_start":506,"line_end":506,"column_start":5,"column_end":80}},{"value":"/ proj.set_left(20.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1014393,"byte_end":1014417,"line_start":507,"line_end":507,"column_start":5,"column_end":29}},{"value":"/ assert_relative_eq!(proj.left(), 20.0, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1014422,"byte_end":1014483,"line_start":508,"line_end":508,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1014488,"byte_end":1014495,"line_start":509,"line_end":509,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1014500,"byte_end":1014509,"line_start":510,"line_end":510,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6999},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1015189,"byte_end":1015198,"line_start":530,"line_end":530,"column_start":12,"column_end":21},"name":"set_right","qualname":"<Orthographic3<N>>::set_right","value":"fn (&mut self, right: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the right offset of the view cuboid.","sig":null,"attributes":[{"value":"/ Sets the right offset of the view cuboid.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1014643,"byte_end":1014688,"line_start":516,"line_end":516,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1014693,"byte_end":1014696,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1014701,"byte_end":1014708,"line_start":518,"line_end":518,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1014713,"byte_end":1014752,"line_start":519,"line_end":519,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1014757,"byte_end":1014791,"line_start":520,"line_end":520,"column_start":5,"column_end":39}},{"value":"/ let mut proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1014796,"byte_end":1014869,"line_start":521,"line_end":521,"column_start":5,"column_end":78}},{"value":"/ proj.set_right(15.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1014874,"byte_end":1014899,"line_start":522,"line_end":522,"column_start":5,"column_end":30}},{"value":"/ assert_relative_eq!(proj.right(), 15.0, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1014904,"byte_end":1014966,"line_start":523,"line_end":523,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1014971,"byte_end":1014974,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ // It is OK to set a right offset smaller than the current left offset.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1014979,"byte_end":1015054,"line_start":525,"line_end":525,"column_start":5,"column_end":80}},{"value":"/ proj.set_right(-3.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1015059,"byte_end":1015084,"line_start":526,"line_end":526,"column_start":5,"column_end":30}},{"value":"/ assert_relative_eq!(proj.right(), -3.0, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1015089,"byte_end":1015151,"line_start":527,"line_end":527,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1015156,"byte_end":1015163,"line_start":528,"line_end":528,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1015168,"byte_end":1015177,"line_start":529,"line_end":529,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7000},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1015860,"byte_end":1015870,"line_start":549,"line_end":549,"column_start":12,"column_end":22},"name":"set_bottom","qualname":"<Orthographic3<N>>::set_bottom","value":"fn (&mut self, bottom: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the bottom offset of the view cuboid.","sig":null,"attributes":[{"value":"/ Sets the bottom offset of the view cuboid.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1015311,"byte_end":1015357,"line_start":535,"line_end":535,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1015362,"byte_end":1015365,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1015370,"byte_end":1015377,"line_start":537,"line_end":537,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1015382,"byte_end":1015421,"line_start":538,"line_end":538,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1015426,"byte_end":1015460,"line_start":539,"line_end":539,"column_start":5,"column_end":39}},{"value":"/ let mut proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1015465,"byte_end":1015538,"line_start":540,"line_end":540,"column_start":5,"column_end":78}},{"value":"/ proj.set_bottom(8.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1015543,"byte_end":1015568,"line_start":541,"line_end":541,"column_start":5,"column_end":30}},{"value":"/ assert_relative_eq!(proj.bottom(), 8.0, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1015573,"byte_end":1015635,"line_start":542,"line_end":542,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1015640,"byte_end":1015643,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ // It is OK to set a bottom offset greater than the current top offset.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1015648,"byte_end":1015723,"line_start":544,"line_end":544,"column_start":5,"column_end":80}},{"value":"/ proj.set_bottom(50.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1015728,"byte_end":1015754,"line_start":545,"line_end":545,"column_start":5,"column_end":31}},{"value":"/ assert_relative_eq!(proj.bottom(), 50.0, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1015759,"byte_end":1015822,"line_start":546,"line_end":546,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1015827,"byte_end":1015834,"line_start":547,"line_end":547,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1015839,"byte_end":1015848,"line_start":548,"line_end":548,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7001},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1016518,"byte_end":1016525,"line_start":568,"line_end":568,"column_start":12,"column_end":19},"name":"set_top","qualname":"<Orthographic3<N>>::set_top","value":"fn (&mut self, top: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the top offset of the view cuboid.","sig":null,"attributes":[{"value":"/ Sets the top offset of the view cuboid.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1015982,"byte_end":1016025,"line_start":554,"line_end":554,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1016030,"byte_end":1016033,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1016038,"byte_end":1016045,"line_start":556,"line_end":556,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1016050,"byte_end":1016089,"line_start":557,"line_end":557,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1016094,"byte_end":1016128,"line_start":558,"line_end":558,"column_start":5,"column_end":39}},{"value":"/ let mut proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1016133,"byte_end":1016206,"line_start":559,"line_end":559,"column_start":5,"column_end":78}},{"value":"/ proj.set_top(15.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1016211,"byte_end":1016234,"line_start":560,"line_end":560,"column_start":5,"column_end":28}},{"value":"/ assert_relative_eq!(proj.top(), 15.0, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1016239,"byte_end":1016299,"line_start":561,"line_end":561,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1016304,"byte_end":1016307,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ // It is OK to set a top offset smaller than the current bottom offset.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1016312,"byte_end":1016387,"line_start":563,"line_end":563,"column_start":5,"column_end":80}},{"value":"/ proj.set_top(-3.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1016392,"byte_end":1016415,"line_start":564,"line_end":564,"column_start":5,"column_end":28}},{"value":"/ assert_relative_eq!(proj.top(), -3.0, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1016420,"byte_end":1016480,"line_start":565,"line_end":565,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1016485,"byte_end":1016492,"line_start":566,"line_end":566,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1016497,"byte_end":1016506,"line_start":567,"line_end":567,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7002},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1017179,"byte_end":1017188,"line_start":587,"line_end":587,"column_start":12,"column_end":21},"name":"set_znear","qualname":"<Orthographic3<N>>::set_znear","value":"fn (&mut self, znear: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the near plane offset of the view cuboid.","sig":null,"attributes":[{"value":"/ Sets the near plane offset of the view cuboid.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1016640,"byte_end":1016690,"line_start":573,"line_end":573,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1016695,"byte_end":1016698,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1016703,"byte_end":1016710,"line_start":575,"line_end":575,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1016715,"byte_end":1016754,"line_start":576,"line_end":576,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1016759,"byte_end":1016793,"line_start":577,"line_end":577,"column_start":5,"column_end":39}},{"value":"/ let mut proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1016798,"byte_end":1016871,"line_start":578,"line_end":578,"column_start":5,"column_end":78}},{"value":"/ proj.set_znear(8.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1016876,"byte_end":1016900,"line_start":579,"line_end":579,"column_start":5,"column_end":29}},{"value":"/ assert_relative_eq!(proj.znear(), 8.0, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1016905,"byte_end":1016966,"line_start":580,"line_end":580,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1016971,"byte_end":1016974,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ // It is OK to set a znear greater than the current zfar.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1016979,"byte_end":1017040,"line_start":582,"line_end":582,"column_start":5,"column_end":66}},{"value":"/ proj.set_znear(5000.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1017045,"byte_end":1017072,"line_start":583,"line_end":583,"column_start":5,"column_end":32}},{"value":"/ assert_relative_eq!(proj.znear(), 5000.0, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1017077,"byte_end":1017141,"line_start":584,"line_end":584,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1017146,"byte_end":1017153,"line_start":585,"line_end":585,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1017158,"byte_end":1017167,"line_start":586,"line_end":586,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7003},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1017833,"byte_end":1017841,"line_start":606,"line_end":606,"column_start":12,"column_end":20},"name":"set_zfar","qualname":"<Orthographic3<N>>::set_zfar","value":"fn (&mut self, zfar: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the far plane offset of the view cuboid.","sig":null,"attributes":[{"value":"/ Sets the far plane offset of the view cuboid.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1017301,"byte_end":1017350,"line_start":592,"line_end":592,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1017355,"byte_end":1017358,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1017363,"byte_end":1017370,"line_start":594,"line_end":594,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1017375,"byte_end":1017414,"line_start":595,"line_end":595,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1017419,"byte_end":1017453,"line_start":596,"line_end":596,"column_start":5,"column_end":39}},{"value":"/ let mut proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1017458,"byte_end":1017531,"line_start":597,"line_end":597,"column_start":5,"column_end":78}},{"value":"/ proj.set_zfar(15.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1017536,"byte_end":1017560,"line_start":598,"line_end":598,"column_start":5,"column_end":29}},{"value":"/ assert_relative_eq!(proj.zfar(), 15.0, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1017565,"byte_end":1017626,"line_start":599,"line_end":599,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1017631,"byte_end":1017634,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ // It is OK to set a zfar smaller than the current znear.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1017639,"byte_end":1017700,"line_start":601,"line_end":601,"column_start":5,"column_end":66}},{"value":"/ proj.set_zfar(-3.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1017705,"byte_end":1017729,"line_start":602,"line_end":602,"column_start":5,"column_end":29}},{"value":"/ assert_relative_eq!(proj.zfar(), -3.0, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1017734,"byte_end":1017795,"line_start":603,"line_end":603,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1017800,"byte_end":1017807,"line_start":604,"line_end":604,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1017812,"byte_end":1017821,"line_start":605,"line_end":605,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7004},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1018635,"byte_end":1018653,"line_start":627,"line_end":627,"column_start":12,"column_end":30},"name":"set_left_and_right","qualname":"<Orthographic3<N>>::set_left_and_right","value":"fn (&mut self, left: N, right: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the view cuboid offsets along the `x` axis.","sig":null,"attributes":[{"value":"/ Sets the view cuboid offsets along the `x` axis.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1017955,"byte_end":1018007,"line_start":611,"line_end":611,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1018012,"byte_end":1018015,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1018020,"byte_end":1018027,"line_start":613,"line_end":613,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1018032,"byte_end":1018071,"line_start":614,"line_end":614,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1018076,"byte_end":1018110,"line_start":615,"line_end":615,"column_start":5,"column_end":39}},{"value":"/ let mut proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1018115,"byte_end":1018188,"line_start":616,"line_end":616,"column_start":5,"column_end":78}},{"value":"/ proj.set_left_and_right(7.0, 70.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1018193,"byte_end":1018232,"line_start":617,"line_end":617,"column_start":5,"column_end":44}},{"value":"/ assert_relative_eq!(proj.left(), 7.0, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1018237,"byte_end":1018297,"line_start":618,"line_end":618,"column_start":5,"column_end":65}},{"value":"/ assert_relative_eq!(proj.right(), 70.0, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1018302,"byte_end":1018364,"line_start":619,"line_end":619,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1018369,"byte_end":1018372,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ // It is also OK to have `left > right`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1018377,"byte_end":1018421,"line_start":621,"line_end":621,"column_start":5,"column_end":49}},{"value":"/ proj.set_left_and_right(70.0, 7.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1018426,"byte_end":1018465,"line_start":622,"line_end":622,"column_start":5,"column_end":44}},{"value":"/ assert_relative_eq!(proj.left(), 70.0, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1018470,"byte_end":1018531,"line_start":623,"line_end":623,"column_start":5,"column_end":66}},{"value":"/ assert_relative_eq!(proj.right(), 7.0, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1018536,"byte_end":1018597,"line_start":624,"line_end":624,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1018602,"byte_end":1018609,"line_start":625,"line_end":625,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1018614,"byte_end":1018623,"line_start":626,"line_end":626,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7005},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1019641,"byte_end":1019659,"line_start":652,"line_end":652,"column_start":12,"column_end":30},"name":"set_bottom_and_top","qualname":"<Orthographic3<N>>::set_bottom_and_top","value":"fn (&mut self, bottom: N, top: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the view cuboid offsets along the `y` axis.","sig":null,"attributes":[{"value":"/ Sets the view cuboid offsets along the `y` axis.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1018961,"byte_end":1019013,"line_start":636,"line_end":636,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1019018,"byte_end":1019021,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1019026,"byte_end":1019033,"line_start":638,"line_end":638,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1019038,"byte_end":1019077,"line_start":639,"line_end":639,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1019082,"byte_end":1019116,"line_start":640,"line_end":640,"column_start":5,"column_end":39}},{"value":"/ let mut proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1019121,"byte_end":1019194,"line_start":641,"line_end":641,"column_start":5,"column_end":78}},{"value":"/ proj.set_bottom_and_top(7.0, 70.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1019199,"byte_end":1019238,"line_start":642,"line_end":642,"column_start":5,"column_end":44}},{"value":"/ assert_relative_eq!(proj.bottom(), 7.0, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1019243,"byte_end":1019305,"line_start":643,"line_end":643,"column_start":5,"column_end":67}},{"value":"/ assert_relative_eq!(proj.top(), 70.0, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1019310,"byte_end":1019370,"line_start":644,"line_end":644,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1019375,"byte_end":1019378,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ // It is also OK to have `bottom > top`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1019383,"byte_end":1019427,"line_start":646,"line_end":646,"column_start":5,"column_end":49}},{"value":"/ proj.set_bottom_and_top(70.0, 7.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1019432,"byte_end":1019471,"line_start":647,"line_end":647,"column_start":5,"column_end":44}},{"value":"/ assert_relative_eq!(proj.bottom(), 70.0, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1019476,"byte_end":1019539,"line_start":648,"line_end":648,"column_start":5,"column_end":68}},{"value":"/ assert_relative_eq!(proj.top(), 7.0, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1019544,"byte_end":1019603,"line_start":649,"line_end":649,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1019608,"byte_end":1019615,"line_start":650,"line_end":650,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1019620,"byte_end":1019629,"line_start":651,"line_end":651,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7006},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1020664,"byte_end":1020682,"line_start":677,"line_end":677,"column_start":12,"column_end":30},"name":"set_znear_and_zfar","qualname":"<Orthographic3<N>>::set_znear_and_zfar","value":"fn (&mut self, znear: N, zfar: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the near and far plane offsets of the view cuboid.","sig":null,"attributes":[{"value":"/ Sets the near and far plane offsets of the view cuboid.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1019967,"byte_end":1020026,"line_start":661,"line_end":661,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1020031,"byte_end":1020034,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1020039,"byte_end":1020046,"line_start":663,"line_end":663,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1020051,"byte_end":1020090,"line_start":664,"line_end":664,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1020095,"byte_end":1020129,"line_start":665,"line_end":665,"column_start":5,"column_end":39}},{"value":"/ let mut proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1020134,"byte_end":1020207,"line_start":666,"line_end":666,"column_start":5,"column_end":78}},{"value":"/ proj.set_znear_and_zfar(50.0, 5000.0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1020212,"byte_end":1020254,"line_start":667,"line_end":667,"column_start":5,"column_end":47}},{"value":"/ assert_relative_eq!(proj.znear(), 50.0, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1020259,"byte_end":1020321,"line_start":668,"line_end":668,"column_start":5,"column_end":67}},{"value":"/ assert_relative_eq!(proj.zfar(), 5000.0, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1020326,"byte_end":1020389,"line_start":669,"line_end":669,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1020394,"byte_end":1020397,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ // It is also OK to have `znear > zfar`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1020402,"byte_end":1020446,"line_start":671,"line_end":671,"column_start":5,"column_end":49}},{"value":"/ proj.set_znear_and_zfar(5000.0, 0.5);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1020451,"byte_end":1020492,"line_start":672,"line_end":672,"column_start":5,"column_end":46}},{"value":"/ assert_relative_eq!(proj.znear(), 5000.0, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1020497,"byte_end":1020561,"line_start":673,"line_end":673,"column_start":5,"column_end":69}},{"value":"/ assert_relative_eq!(proj.zfar(), 0.5, epsilon = 1.0e-6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1020566,"byte_end":1020626,"line_start":674,"line_end":674,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1020631,"byte_end":1020638,"line_start":675,"line_end":675,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1020643,"byte_end":1020652,"line_start":676,"line_end":676,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":7036},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1022772,"byte_end":1022784,"line_start":21,"line_end":21,"column_start":12,"column_end":24},"name":"Perspective3","qualname":"::geometry::perspective::Perspective3","value":"Perspective3 {  }","parent":null,"children":[{"krate":0,"index":7038}],"decl_id":null,"docs":" A 3D perspective projection stored as a homogeneous 4x4 matrix.\n","sig":null,"attributes":[{"value":"/ A 3D perspective projection stored as a homogeneous 4x4 matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1022693,"byte_end":1022760,"line_start":20,"line_end":20,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":7052},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1024101,"byte_end":1024104,"line_start":71,"line_end":71,"column_start":12,"column_end":15},"name":"new","qualname":"<Perspective3<N>>::new","value":"fn (aspect: N, fovy: N, znear: N, zfar: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new perspective matrix from the aspect ratio, y field of view, and near/far planes.\n","sig":null,"attributes":[{"value":"/ Creates a new perspective matrix from the aspect ratio, y field of view, and near/far planes.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1023992,"byte_end":1024089,"line_start":70,"line_end":70,"column_start":5,"column_end":102}}]},{"kind":"Method","id":{"krate":0,"index":7053},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1024955,"byte_end":1024976,"line_start":99,"line_end":99,"column_start":12,"column_end":33},"name":"from_matrix_unchecked","qualname":"<Perspective3<N>>::from_matrix_unchecked","value":"fn (matrix: Matrix4<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps the given matrix to interpret it as a 3D perspective matrix.","sig":null,"attributes":[{"value":"/ Wraps the given matrix to interpret it as a 3D perspective matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1024739,"byte_end":1024809,"line_start":94,"line_end":94,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1024814,"byte_end":1024817,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ It is not checked whether or not the given matrix actually represents a perspective","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1024822,"byte_end":1024909,"line_start":96,"line_end":96,"column_start":5,"column_end":92}},{"value":"/ projection.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1024914,"byte_end":1024929,"line_start":97,"line_end":97,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1024934,"byte_end":1024943,"line_start":98,"line_end":98,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7054},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1025139,"byte_end":1025146,"line_start":105,"line_end":105,"column_start":12,"column_end":19},"name":"inverse","qualname":"<Perspective3<N>>::inverse","value":"fn (&self) -> Matrix4<N>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the inverse of the underlying homogeneous matrix.\n","sig":null,"attributes":[{"value":"/ Retrieves the inverse of the underlying homogeneous matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1025050,"byte_end":1025113,"line_start":103,"line_end":103,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1025118,"byte_end":1025127,"line_start":104,"line_end":104,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7055},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1025671,"byte_end":1025685,"line_start":124,"line_end":124,"column_start":12,"column_end":26},"name":"to_homogeneous","qualname":"<Perspective3<N>>::to_homogeneous","value":"fn (&self) -> Matrix4<N>","parent":null,"children":[],"decl_id":null,"docs":" Computes the corresponding homogeneous matrix.\n","sig":null,"attributes":[{"value":"/ Computes the corresponding homogeneous matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1025595,"byte_end":1025645,"line_start":122,"line_end":122,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1025650,"byte_end":1025659,"line_start":123,"line_end":123,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7056},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1025848,"byte_end":1025857,"line_start":130,"line_end":130,"column_start":12,"column_end":21},"name":"as_matrix","qualname":"<Perspective3<N>>::as_matrix","value":"fn (&self) -> &Matrix4<N>","parent":null,"children":[],"decl_id":null,"docs":" A reference to the underlying homogeneous transformation matrix.\n","sig":null,"attributes":[{"value":"/ A reference to the underlying homogeneous transformation matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1025754,"byte_end":1025822,"line_start":128,"line_end":128,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1025827,"byte_end":1025836,"line_start":129,"line_end":129,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7057},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1026003,"byte_end":1026016,"line_start":136,"line_end":136,"column_start":12,"column_end":25},"name":"as_projective","qualname":"<Perspective3<N>>::as_projective","value":"fn (&self) -> &Projective3<N>","parent":null,"children":[],"decl_id":null,"docs":" A reference to this transformation seen as a `Projective3`.\n","sig":null,"attributes":[{"value":"/ A reference to this transformation seen as a `Projective3`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1025914,"byte_end":1025977,"line_start":134,"line_end":134,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1025982,"byte_end":1025991,"line_start":135,"line_end":135,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7058},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1026170,"byte_end":1026183,"line_start":142,"line_end":142,"column_start":12,"column_end":25},"name":"to_projective","qualname":"<Perspective3<N>>::to_projective","value":"fn (&self) -> Projective3<N>","parent":null,"children":[],"decl_id":null,"docs":" This transformation seen as a `Projective3`.\n","sig":null,"attributes":[{"value":"/ This transformation seen as a `Projective3`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1026096,"byte_end":1026144,"line_start":140,"line_end":140,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1026149,"byte_end":1026158,"line_start":141,"line_end":141,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7059},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1026352,"byte_end":1026362,"line_start":148,"line_end":148,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Perspective3<N>>::into_inner","value":"fn (self) -> Matrix4<N>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the underlying homogeneous matrix.\n","sig":null,"attributes":[{"value":"/ Retrieves the underlying homogeneous matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1026278,"byte_end":1026326,"line_start":146,"line_end":146,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1026331,"byte_end":1026340,"line_start":147,"line_end":147,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7060},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1026606,"byte_end":1026612,"line_start":156,"line_end":156,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<Perspective3<N>>::unwrap","value":"fn (self) -> Matrix4<N>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the underlying homogeneous matrix.\n Deprecated: Use [Perspective3::into_inner] instead.\n","sig":null,"attributes":[{"value":"/ Retrieves the underlying homogeneous matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1026416,"byte_end":1026464,"line_start":152,"line_end":152,"column_start":5,"column_end":53}},{"value":"/ Deprecated: Use [Perspective3::into_inner] instead.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1026469,"byte_end":1026524,"line_start":153,"line_end":153,"column_start":5,"column_end":60}},{"value":"deprecated(note = \"use `.into_inner()` instead\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1026529,"byte_end":1026580,"line_start":154,"line_end":154,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1026585,"byte_end":1026594,"line_start":155,"line_end":155,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7061},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1026755,"byte_end":1026761,"line_start":162,"line_end":162,"column_start":12,"column_end":18},"name":"aspect","qualname":"<Perspective3<N>>::aspect","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" Gets the `width / height` aspect ratio of the view frustum.\n","sig":null,"attributes":[{"value":"/ Gets the `width / height` aspect ratio of the view frustum.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1026666,"byte_end":1026729,"line_start":160,"line_end":160,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1026734,"byte_end":1026743,"line_start":161,"line_end":161,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7062},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1026912,"byte_end":1026916,"line_start":168,"line_end":168,"column_start":12,"column_end":16},"name":"fovy","qualname":"<Perspective3<N>>::fovy","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" Gets the y field of view of the view frustum.\n","sig":null,"attributes":[{"value":"/ Gets the y field of view of the view frustum.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1026837,"byte_end":1026886,"line_start":166,"line_end":166,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1026891,"byte_end":1026900,"line_start":167,"line_end":167,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7063},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1027089,"byte_end":1027094,"line_start":174,"line_end":174,"column_start":12,"column_end":17},"name":"znear","qualname":"<Perspective3<N>>::znear","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" Gets the near plane offset of the view frustum.\n","sig":null,"attributes":[{"value":"/ Gets the near plane offset of the view frustum.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1027012,"byte_end":1027063,"line_start":172,"line_end":172,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1027068,"byte_end":1027077,"line_start":173,"line_end":173,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7064},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1027404,"byte_end":1027408,"line_start":183,"line_end":183,"column_start":12,"column_end":16},"name":"zfar","qualname":"<Perspective3<N>>::zfar","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" Gets the far plane offset of the view frustum.\n","sig":null,"attributes":[{"value":"/ Gets the far plane offset of the view frustum.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1027328,"byte_end":1027378,"line_start":181,"line_end":181,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1027383,"byte_end":1027392,"line_start":182,"line_end":182,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7065},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1027836,"byte_end":1027849,"line_start":194,"line_end":194,"column_start":12,"column_end":25},"name":"project_point","qualname":"<Perspective3<N>>::project_point","value":"fn (&self, p: &Point3<N>) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Projects a point. Faster than matrix multiplication.\n","sig":null,"attributes":[{"value":"/ Projects a point. Faster than matrix multiplication.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1027754,"byte_end":1027810,"line_start":192,"line_end":192,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1027815,"byte_end":1027824,"line_start":193,"line_end":193,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7066},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1028267,"byte_end":1028282,"line_start":205,"line_end":205,"column_start":12,"column_end":27},"name":"unproject_point","qualname":"<Perspective3<N>>::unproject_point","value":"fn (&self, p: &Point3<N>) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Un-projects a point. Faster than multiplication by the matrix inverse.\n","sig":null,"attributes":[{"value":"/ Un-projects a point. Faster than multiplication by the matrix inverse.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1028167,"byte_end":1028241,"line_start":203,"line_end":203,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1028246,"byte_end":1028255,"line_start":204,"line_end":204,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7067},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1028741,"byte_end":1028755,"line_start":218,"line_end":218,"column_start":12,"column_end":26},"name":"project_vector","qualname":"<Perspective3<N>>::project_vector","value":"fn <SB> (&self, p: &Vector<N, U3, SB>) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Projects a vector. Faster than matrix multiplication.\n","sig":null,"attributes":[{"value":"/ Projects a vector. Faster than matrix multiplication.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1028658,"byte_end":1028715,"line_start":216,"line_end":216,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1028720,"byte_end":1028729,"line_start":217,"line_end":217,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7069},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1029213,"byte_end":1029223,"line_start":233,"line_end":233,"column_start":12,"column_end":22},"name":"set_aspect","qualname":"<Perspective3<N>>::set_aspect","value":"fn (&mut self, aspect: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Updates this perspective matrix with a new `width / height` aspect ratio of the view\n frustum.\n","sig":null,"attributes":[{"value":"/ Updates this perspective matrix with a new `width / height` aspect ratio of the view","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1029082,"byte_end":1029170,"line_start":230,"line_end":230,"column_start":5,"column_end":93}},{"value":"/ frustum.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1029175,"byte_end":1029187,"line_start":231,"line_end":231,"column_start":5,"column_end":17}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1029192,"byte_end":1029201,"line_start":232,"line_end":232,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7070},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1029544,"byte_end":1029552,"line_start":243,"line_end":243,"column_start":12,"column_end":20},"name":"set_fovy","qualname":"<Perspective3<N>>::set_fovy","value":"fn (&mut self, fovy: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Updates this perspective with a new y field of view of the view frustum.\n","sig":null,"attributes":[{"value":"/ Updates this perspective with a new y field of view of the view frustum.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1029442,"byte_end":1029518,"line_start":241,"line_end":241,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1029523,"byte_end":1029532,"line_start":242,"line_end":242,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7071},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1029902,"byte_end":1029911,"line_start":251,"line_end":251,"column_start":12,"column_end":21},"name":"set_znear","qualname":"<Perspective3<N>>::set_znear","value":"fn (&mut self, znear: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Updates this perspective matrix with a new near plane offset of the view frustum.\n","sig":null,"attributes":[{"value":"/ Updates this perspective matrix with a new near plane offset of the view frustum.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1029791,"byte_end":1029876,"line_start":249,"line_end":249,"column_start":5,"column_end":90}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1029881,"byte_end":1029890,"line_start":250,"line_end":250,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7072},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1030134,"byte_end":1030142,"line_start":258,"line_end":258,"column_start":12,"column_end":20},"name":"set_zfar","qualname":"<Perspective3<N>>::set_zfar","value":"fn (&mut self, zfar: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Updates this perspective matrix with a new far plane offset of the view frustum.\n","sig":null,"attributes":[{"value":"/ Updates this perspective matrix with a new far plane offset of the view frustum.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1030024,"byte_end":1030108,"line_start":256,"line_end":256,"column_start":5,"column_end":89}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1030113,"byte_end":1030122,"line_start":257,"line_end":257,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7073},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1030374,"byte_end":1030392,"line_start":265,"line_end":265,"column_start":12,"column_end":30},"name":"set_znear_and_zfar","qualname":"<Perspective3<N>>::set_znear_and_zfar","value":"fn (&mut self, znear: N, zfar: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Updates this perspective matrix with new near and far plane offsets of the view frustum.\n","sig":null,"attributes":[{"value":"/ Updates this perspective matrix with new near and far plane offsets of the view frustum.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1030256,"byte_end":1030348,"line_start":263,"line_end":263,"column_start":5,"column_end":97}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1030353,"byte_end":1030362,"line_start":264,"line_end":264,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":7102},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"linalg","qualname":"::linalg","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/mod.rs","parent":null,"children":[{"krate":0,"index":7103},{"krate":0,"index":7123},{"krate":0,"index":7171},{"krate":0,"index":7238},{"krate":0,"index":7268},{"krate":0,"index":7282},{"krate":0,"index":7365},{"krate":0,"index":7420},{"krate":0,"index":7459},{"krate":0,"index":7494},{"krate":0,"index":7525},{"krate":0,"index":7551},{"krate":0,"index":7628},{"krate":0,"index":7677},{"krate":0,"index":7746},{"krate":0,"index":7809},{"krate":0,"index":7989},{"krate":0,"index":8056},{"krate":0,"index":8098},{"krate":0,"index":8133},{"krate":0,"index":8134},{"krate":0,"index":8135},{"krate":0,"index":8136},{"krate":0,"index":8137},{"krate":0,"index":8138},{"krate":0,"index":8139},{"krate":0,"index":8140},{"krate":0,"index":8141},{"krate":0,"index":8142},{"krate":0,"index":8143},{"krate":0,"index":8144},{"krate":0,"index":8145}],"decl_id":null,"docs":" [Reexported at the root of this crate.] Factorization of real matrices.\n","sig":null,"attributes":[{"value":"! [Reexported at the root of this crate.] Factorization of real matrices.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/mod.rs","byte_start":1031541,"byte_end":1031616,"line_start":1,"line_end":1,"column_start":1,"column_end":76}}]},{"kind":"Mod","id":{"krate":0,"index":7103},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/balancing.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"balancing","qualname":"::linalg::balancing","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/balancing.rs","parent":null,"children":[{"krate":0,"index":7104},{"krate":0,"index":7105},{"krate":0,"index":7108},{"krate":0,"index":7109},{"krate":0,"index":7112},{"krate":0,"index":7113},{"krate":0,"index":7117},{"krate":0,"index":7120}],"decl_id":null,"docs":" Functions for balancing a matrix.\n","sig":null,"attributes":[{"value":"! Functions for balancing a matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/balancing.rs","byte_start":1032652,"byte_end":1032689,"line_start":1,"line_end":1,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":7117},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/balancing.rs","byte_start":1033136,"byte_end":1033159,"line_start":15,"line_end":15,"column_start":8,"column_end":31},"name":"balance_parlett_reinsch","qualname":"::linalg::balancing::balance_parlett_reinsch","value":"fn <N, D> (m: &mut MatrixN<N, D>) -> VectorN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Applies in-place a modified Parlett and Reinsch matrix balancing with 2-norm to the matrix `m` and returns\n the corresponding diagonal transformation.","sig":null,"attributes":[{"value":"/ Applies in-place a modified Parlett and Reinsch matrix balancing with 2-norm to the matrix `m` and returns","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/balancing.rs","byte_start":1032923,"byte_end":1033033,"line_start":11,"line_end":11,"column_start":1,"column_end":111}},{"value":"/ the corresponding diagonal transformation.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/balancing.rs","byte_start":1033034,"byte_end":1033080,"line_start":12,"line_end":12,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/balancing.rs","byte_start":1033081,"byte_end":1033084,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ See https://arxiv.org/pdf/1401.5766.pdf","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/balancing.rs","byte_start":1033085,"byte_end":1033128,"line_start":14,"line_end":14,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":7120},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/balancing.rs","byte_start":1034563,"byte_end":1034572,"line_start":69,"line_end":69,"column_start":8,"column_end":17},"name":"unbalance","qualname":"::linalg::balancing::unbalance","value":"fn <N, D> (m: &mut MatrixN<N, D>, d: &VectorN<N, D>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Computes in-place `D * m * D.inverse()`, where `D` is the matrix with diagonal `d`.\n","sig":null,"attributes":[{"value":"/ Computes in-place `D * m * D.inverse()`, where `D` is the matrix with diagonal `d`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/balancing.rs","byte_start":1034468,"byte_end":1034555,"line_start":68,"line_end":68,"column_start":1,"column_end":88}}]},{"kind":"Struct","id":{"krate":0,"index":20850},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/bidiagonal.rs","byte_start":1036510,"byte_end":1036520,"line_start":36,"line_end":36,"column_start":12,"column_end":22},"name":"Bidiagonal","qualname":"::linalg::bidiagonal::Bidiagonal","value":"Bidiagonal {  }","parent":null,"children":[{"krate":0,"index":20854},{"krate":0,"index":20855},{"krate":0,"index":20856},{"krate":0,"index":20857}],"decl_id":null,"docs":" The bidiagonalization of a general matrix.\n","sig":null,"attributes":[{"value":"/ The bidiagonalization of a general matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/bidiagonal.rs","byte_start":1035426,"byte_end":1035472,"line_start":13,"line_end":13,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":7151},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/bidiagonal.rs","byte_start":1037930,"byte_end":1037933,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<Bidiagonal<N, R, C>>::new","value":"fn (mut matrix: MatrixMN<N, R, C>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the Bidiagonal decomposition using householder reflections.\n","sig":null,"attributes":[{"value":"/ Computes the Bidiagonal decomposition using householder reflections.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/bidiagonal.rs","byte_start":1037846,"byte_end":1037918,"line_start":74,"line_end":74,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":7152},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/bidiagonal.rs","byte_start":1040367,"byte_end":1040384,"line_start":150,"line_end":150,"column_start":12,"column_end":29},"name":"is_upper_diagonal","qualname":"<Bidiagonal<N, R, C>>::is_upper_diagonal","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether this decomposition contains an upper-diagonal matrix.\n","sig":null,"attributes":[{"value":"/ Indicates whether this decomposition contains an upper-diagonal matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/bidiagonal.rs","byte_start":1040266,"byte_end":1040341,"line_start":148,"line_end":148,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/bidiagonal.rs","byte_start":1040346,"byte_end":1040355,"line_start":149,"line_end":149,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7154},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/bidiagonal.rs","byte_start":1040775,"byte_end":1040781,"line_start":167,"line_end":167,"column_start":12,"column_end":18},"name":"unpack","qualname":"<Bidiagonal<N, R, C>>::unpack","value":"fn (self) -> (MatrixMN<N, R, DimMinimum<R, C>>, MatrixN<N, DimMinimum<R, C>>,\n MatrixMN<N, DimMinimum<R, C>, C>)","parent":null,"children":[],"decl_id":null,"docs":" Unpacks this decomposition into its three matrix factors `(U, D, V^t)`.","sig":null,"attributes":[{"value":"/ Unpacks this decomposition into its three matrix factors `(U, D, V^t)`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/bidiagonal.rs","byte_start":1040605,"byte_end":1040680,"line_start":163,"line_end":163,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/bidiagonal.rs","byte_start":1040685,"byte_end":1040688,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ The decomposed matrix `M` is equal to `U * D * V^t`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/bidiagonal.rs","byte_start":1040693,"byte_end":1040749,"line_start":165,"line_end":165,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/bidiagonal.rs","byte_start":1040754,"byte_end":1040763,"line_start":166,"line_end":166,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7155},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/bidiagonal.rs","byte_start":1041327,"byte_end":1041328,"line_start":185,"line_end":185,"column_start":12,"column_end":13},"name":"d","qualname":"<Bidiagonal<N, R, C>>::d","value":"fn (&self) -> MatrixN<N, DimMinimum<R, C>>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the upper trapezoidal submatrix `R` of this decomposition.\n","sig":null,"attributes":[{"value":"/ Retrieves the upper trapezoidal submatrix `R` of this decomposition.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/bidiagonal.rs","byte_start":1041229,"byte_end":1041301,"line_start":183,"line_end":183,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/bidiagonal.rs","byte_start":1041306,"byte_end":1041315,"line_start":184,"line_end":184,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7158},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/bidiagonal.rs","byte_start":1042121,"byte_end":1042122,"line_start":204,"line_end":204,"column_start":12,"column_end":13},"name":"u","qualname":"<Bidiagonal<N, R, C>>::u","value":"fn (&self) -> MatrixMN<N, R, DimMinimum<R, C>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the orthogonal matrix `U` of this `U * D * V` decomposition.\n","sig":null,"attributes":[{"value":"/ Computes the orthogonal matrix `U` of this `U * D * V` decomposition.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/bidiagonal.rs","byte_start":1041912,"byte_end":1041985,"line_start":201,"line_end":201,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":7159},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/bidiagonal.rs","byte_start":1043125,"byte_end":1043128,"line_start":234,"line_end":234,"column_start":12,"column_end":15},"name":"v_t","qualname":"<Bidiagonal<N, R, C>>::v_t","value":"fn (&self) -> MatrixMN<N, DimMinimum<R, C>, C>","parent":null,"children":[],"decl_id":null,"docs":" Computes the orthogonal matrix `V_t` of this `U * D * V_t` decomposition.\n","sig":null,"attributes":[{"value":"/ Computes the orthogonal matrix `V_t` of this `U * D * V_t` decomposition.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/bidiagonal.rs","byte_start":1043036,"byte_end":1043113,"line_start":233,"line_end":233,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":7160},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/bidiagonal.rs","byte_start":1044475,"byte_end":1044483,"line_start":269,"line_end":269,"column_start":12,"column_end":20},"name":"diagonal","qualname":"<Bidiagonal<N, R, C>>::diagonal","value":"fn (&self) -> VectorN<N::RealField, DimMinimum<R, C>>","parent":null,"children":[],"decl_id":null,"docs":" The diagonal part of this decomposed matrix.\n","sig":null,"attributes":[{"value":"/ The diagonal part of this decomposed matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/bidiagonal.rs","byte_start":1044415,"byte_end":1044463,"line_start":268,"line_end":268,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":7162},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/bidiagonal.rs","byte_start":1044737,"byte_end":1044749,"line_start":277,"line_end":277,"column_start":12,"column_end":24},"name":"off_diagonal","qualname":"<Bidiagonal<N, R, C>>::off_diagonal","value":"fn (&self) -> VectorN<N::RealField, DimDiff<DimMinimum<R, C>, U1>>","parent":null,"children":[],"decl_id":null,"docs":" The off-diagonal part of this decomposed matrix.\n","sig":null,"attributes":[{"value":"/ The off-diagonal part of this decomposed matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/bidiagonal.rs","byte_start":1044673,"byte_end":1044725,"line_start":276,"line_end":276,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":7164},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/bidiagonal.rs","byte_start":1044995,"byte_end":1045006,"line_start":285,"line_end":285,"column_start":12,"column_end":23},"name":"uv_internal","qualname":"<Bidiagonal<N, R, C>>::uv_internal","value":"fn (&self) -> &MatrixMN<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7170},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/bidiagonal.rs","byte_start":1048475,"byte_end":1048488,"line_start":373,"line_end":373,"column_start":12,"column_end":25},"name":"bidiagonalize","qualname":"<Matrix<N, R, C, S>>::bidiagonalize","value":"fn (self) -> Bidiagonal<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Computes the bidiagonalization using householder reflections.\n","sig":null,"attributes":[{"value":"/ Computes the bidiagonalization using householder reflections.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/bidiagonal.rs","byte_start":1048398,"byte_end":1048463,"line_start":372,"line_end":372,"column_start":5,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":20868},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/cholesky.rs","byte_start":1049514,"byte_end":1049522,"line_start":27,"line_end":27,"column_start":12,"column_end":20},"name":"Cholesky","qualname":"::linalg::cholesky::Cholesky","value":"Cholesky {  }","parent":null,"children":[{"krate":0,"index":20871}],"decl_id":null,"docs":" The Cholesky decomposition of a symmetric-definite-positive matrix.\n","sig":null,"attributes":[{"value":"/ The Cholesky decomposition of a symmetric-definite-positive matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/cholesky.rs","byte_start":1049027,"byte_end":1049098,"line_start":14,"line_end":14,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":7203},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/cholesky.rs","byte_start":1050109,"byte_end":1050122,"line_start":48,"line_end":48,"column_start":12,"column_end":25},"name":"new_unchecked","qualname":"<Cholesky<N, D>>::new_unchecked","value":"fn (mut matrix: MatrixN<N, D>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the Cholesky decomposition of `matrix` without checking that the matrix is definite-positive.","sig":null,"attributes":[{"value":"/ Computes the Cholesky decomposition of `matrix` without checking that the matrix is definite-positive.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/cholesky.rs","byte_start":1049869,"byte_end":1049975,"line_start":45,"line_end":45,"column_start":5,"column_end":111}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/cholesky.rs","byte_start":1049980,"byte_end":1049983,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ If the input matrix is not definite-positive, the decomposition may contain trash values (Inf, NaN, etc.)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/cholesky.rs","byte_start":1049988,"byte_end":1050097,"line_start":47,"line_end":47,"column_start":5,"column_end":114}}]},{"kind":"Method","id":{"krate":0,"index":7204},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/cholesky.rs","byte_start":1051163,"byte_end":1051169,"line_start":79,"line_end":79,"column_start":12,"column_end":18},"name":"unpack","qualname":"<Cholesky<N, D>>::unpack","value":"fn (mut self) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the lower-triangular factor of the Cholesky decomposition with its strictly\n upper-triangular part filled with zeros.\n","sig":null,"attributes":[{"value":"/ Retrieves the lower-triangular factor of the Cholesky decomposition with its strictly","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/cholesky.rs","byte_start":1051013,"byte_end":1051102,"line_start":77,"line_end":77,"column_start":5,"column_end":94}},{"value":"/ upper-triangular part filled with zeros.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/cholesky.rs","byte_start":1051107,"byte_end":1051151,"line_start":78,"line_end":78,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":7205},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/cholesky.rs","byte_start":1051557,"byte_end":1051569,"line_start":89,"line_end":89,"column_start":12,"column_end":24},"name":"unpack_dirty","qualname":"<Cholesky<N, D>>::unpack_dirty","value":"fn (self) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the lower-triangular factor of the Cholesky decomposition, without zeroing-out\n its strict upper-triangular part.","sig":null,"attributes":[{"value":"/ Retrieves the lower-triangular factor of the Cholesky decomposition, without zeroing-out","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/cholesky.rs","byte_start":1051281,"byte_end":1051373,"line_start":84,"line_end":84,"column_start":5,"column_end":97}},{"value":"/ its strict upper-triangular part.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/cholesky.rs","byte_start":1051378,"byte_end":1051415,"line_start":85,"line_end":85,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/cholesky.rs","byte_start":1051420,"byte_end":1051423,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ The values of the strict upper-triangular part are garbage and should be ignored by further","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/cholesky.rs","byte_start":1051428,"byte_end":1051523,"line_start":87,"line_end":87,"column_start":5,"column_end":100}},{"value":"/ computations.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/cholesky.rs","byte_start":1051528,"byte_end":1051545,"line_start":88,"line_end":88,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":7206},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/cholesky.rs","byte_start":1051774,"byte_end":1051775,"line_start":95,"line_end":95,"column_start":12,"column_end":13},"name":"l","qualname":"<Cholesky<N, D>>::l","value":"fn (&self) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the lower-triangular factor of the Cholesky decomposition with its strictly\n uppen-triangular part filled with zeros.\n","sig":null,"attributes":[{"value":"/ Retrieves the lower-triangular factor of the Cholesky decomposition with its strictly","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/cholesky.rs","byte_start":1051624,"byte_end":1051713,"line_start":93,"line_end":93,"column_start":5,"column_end":94}},{"value":"/ uppen-triangular part filled with zeros.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/cholesky.rs","byte_start":1051718,"byte_end":1051762,"line_start":94,"line_end":94,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":7207},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/cholesky.rs","byte_start":1052174,"byte_end":1052181,"line_start":104,"line_end":104,"column_start":12,"column_end":19},"name":"l_dirty","qualname":"<Cholesky<N, D>>::l_dirty","value":"fn (&self) -> &MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the lower-triangular factor of the Cholesky decomposition, without zeroing-out\n its strict upper-triangular part.","sig":null,"attributes":[{"value":"/ Retrieves the lower-triangular factor of the Cholesky decomposition, without zeroing-out","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/cholesky.rs","byte_start":1051848,"byte_end":1051940,"line_start":99,"line_end":99,"column_start":5,"column_end":97}},{"value":"/ its strict upper-triangular part.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/cholesky.rs","byte_start":1051945,"byte_end":1051982,"line_start":100,"line_end":100,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/cholesky.rs","byte_start":1051987,"byte_end":1051990,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ This is an allocation-less version of `self.l()`. The values of the strict upper-triangular","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/cholesky.rs","byte_start":1051995,"byte_end":1052090,"line_start":102,"line_end":102,"column_start":5,"column_end":100}},{"value":"/ part are garbage and should be ignored by further computations.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/cholesky.rs","byte_start":1052095,"byte_end":1052162,"line_start":103,"line_end":103,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":7208},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/cholesky.rs","byte_start":1052391,"byte_end":1052400,"line_start":111,"line_end":111,"column_start":12,"column_end":21},"name":"solve_mut","qualname":"<Cholesky<N, D>>::solve_mut","value":"fn <R2, C2, S2> (&self, b: &mut Matrix<N, R2, C2, S2>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Solves the system `self * x = b` where `self` is the decomposed matrix and `x` the unknown.","sig":null,"attributes":[{"value":"/ Solves the system `self * x = b` where `self` is the decomposed matrix and `x` the unknown.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/cholesky.rs","byte_start":1052239,"byte_end":1052334,"line_start":108,"line_end":108,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/cholesky.rs","byte_start":1052339,"byte_end":1052342,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ The result is stored on `b`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/cholesky.rs","byte_start":1052347,"byte_end":1052379,"line_start":110,"line_end":110,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":7212},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/cholesky.rs","byte_start":1052826,"byte_end":1052831,"line_start":122,"line_end":122,"column_start":12,"column_end":17},"name":"solve","qualname":"<Cholesky<N, D>>::solve","value":"fn <R2, C2, S2> (&self, b: &Matrix<N, R2, C2, S2>) -> MatrixMN<N, R2, C2>","parent":null,"children":[],"decl_id":null,"docs":" Returns the solution of the system `self * x = b` where `self` is the decomposed matrix and\n `x` the unknown.\n","sig":null,"attributes":[{"value":"/ Returns the solution of the system `self * x = b` where `self` is the decomposed matrix and","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/cholesky.rs","byte_start":1052694,"byte_end":1052789,"line_start":120,"line_end":120,"column_start":5,"column_end":100}},{"value":"/ `x` the unknown.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/cholesky.rs","byte_start":1052794,"byte_end":1052814,"line_start":121,"line_end":121,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":7216},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/cholesky.rs","byte_start":1053215,"byte_end":1053222,"line_start":134,"line_end":134,"column_start":12,"column_end":19},"name":"inverse","qualname":"<Cholesky<N, D>>::inverse","value":"fn (&self) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the inverse of the decomposed matrix.\n","sig":null,"attributes":[{"value":"/ Computes the inverse of the decomposed matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/cholesky.rs","byte_start":1053153,"byte_end":1053203,"line_start":133,"line_end":133,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":7220},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/cholesky.rs","byte_start":1053763,"byte_end":1053766,"line_start":151,"line_end":151,"column_start":12,"column_end":15},"name":"new","qualname":"<Cholesky<N, D>>::new","value":"fn (mut matrix: MatrixN<N, D>) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to compute the Cholesky decomposition of `matrix`.","sig":null,"attributes":[{"value":"/ Attempts to compute the Cholesky decomposition of `matrix`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/cholesky.rs","byte_start":1053515,"byte_end":1053578,"line_start":147,"line_end":147,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/cholesky.rs","byte_start":1053583,"byte_end":1053586,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the input matrix is not definite-positive. The input matrix is assumed","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/cholesky.rs","byte_start":1053591,"byte_end":1053683,"line_start":149,"line_end":149,"column_start":5,"column_end":97}},{"value":"/ to be symmetric and only the lower-triangular part is read.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/cholesky.rs","byte_start":1053688,"byte_end":1053751,"line_start":150,"line_end":150,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":7221},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/cholesky.rs","byte_start":1055206,"byte_end":1055221,"line_start":191,"line_end":191,"column_start":12,"column_end":27},"name":"rank_one_update","qualname":"<Cholesky<N, D>>::rank_one_update","value":"fn <R2, S2> (&mut self, x: &Vector<N, R2, S2>, sigma: N::RealField) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Given the Cholesky decomposition of a matrix `M`, a scalar `sigma` and a vector `v`,\n performs a rank one update such that we end up with the decomposition of `M + sigma * (v * v.adjoint())`.\n","sig":null,"attributes":[{"value":"/ Given the Cholesky decomposition of a matrix `M`, a scalar `sigma` and a vector `v`,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/cholesky.rs","byte_start":1054978,"byte_end":1055066,"line_start":188,"line_end":188,"column_start":5,"column_end":93}},{"value":"/ performs a rank one update such that we end up with the decomposition of `M + sigma * (v * v.adjoint())`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/cholesky.rs","byte_start":1055071,"byte_end":1055180,"line_start":189,"line_end":189,"column_start":5,"column_end":114}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/cholesky.rs","byte_start":1055185,"byte_end":1055194,"line_start":190,"line_end":190,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7224},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/cholesky.rs","byte_start":1055749,"byte_end":1055762,"line_start":202,"line_end":202,"column_start":12,"column_end":25},"name":"insert_column","qualname":"<Cholesky<N, D>>::insert_column","value":"fn <R2, S2> (&self, j: usize, col: Vector<N, R2, S2>) -> Cholesky<N, DimSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Updates the decomposition such that we get the decomposition of a matrix with the given column `col` in the `j`th position.\n Since the matrix is square, an identical row will be added in the `j`th row.\n","sig":null,"attributes":[{"value":"/ Updates the decomposition such that we get the decomposition of a matrix with the given column `col` in the `j`th position.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/cholesky.rs","byte_start":1055525,"byte_end":1055652,"line_start":200,"line_end":200,"column_start":5,"column_end":132}},{"value":"/ Since the matrix is square, an identical row will be added in the `j`th row.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/cholesky.rs","byte_start":1055657,"byte_end":1055737,"line_start":201,"line_end":201,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":7227},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/cholesky.rs","byte_start":1058821,"byte_end":1058834,"line_start":280,"line_end":280,"column_start":12,"column_end":25},"name":"remove_column","qualname":"<Cholesky<N, D>>::remove_column","value":"fn (&self, j: usize) -> Cholesky<N, DimDiff<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Updates the decomposition such that we get the decomposition of the factored matrix with its `j`th column removed.\n Since the matrix is square, the `j`th row will also be removed.\n","sig":null,"attributes":[{"value":"/ Updates the decomposition such that we get the decomposition of the factored matrix with its `j`th column removed.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/cholesky.rs","byte_start":1058619,"byte_end":1058737,"line_start":278,"line_end":278,"column_start":5,"column_end":123}},{"value":"/ Since the matrix is square, the `j`th row will also be removed.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/cholesky.rs","byte_start":1058742,"byte_end":1058809,"line_start":279,"line_end":279,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":7237},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/cholesky.rs","byte_start":1062904,"byte_end":1062912,"line_start":375,"line_end":375,"column_start":12,"column_end":20},"name":"cholesky","qualname":"<SquareMatrix<N, D, S>>::cholesky","value":"fn (self) -> Option<Cholesky<N, D>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to compute the Cholesky decomposition of this matrix.","sig":null,"attributes":[{"value":"/ Attempts to compute the Cholesky decomposition of this matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/cholesky.rs","byte_start":1062653,"byte_end":1062719,"line_start":371,"line_end":371,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/cholesky.rs","byte_start":1062724,"byte_end":1062727,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the input matrix is not definite-positive. The input matrix is assumed","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/cholesky.rs","byte_start":1062732,"byte_end":1062824,"line_start":373,"line_end":373,"column_start":5,"column_end":97}},{"value":"/ to be symmetric and only the lower-triangular part is read.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/cholesky.rs","byte_start":1062829,"byte_end":1062892,"line_start":374,"line_end":374,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":7259},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/convolution.rs","byte_start":1063577,"byte_end":1063590,"line_start":19,"line_end":19,"column_start":12,"column_end":25},"name":"convolve_full","qualname":"<Vector<N, D1, S1>>::convolve_full","value":"fn <D2, S2> (&self, kernel: Vector<N, D2, S2>) -> VectorN<N, DimDiff<DimSum<D1, D2>, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the convolution of the target vector and a kernel.","sig":null,"attributes":[{"value":"/ Returns the convolution of the target vector and a kernel.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/convolution.rs","byte_start":1063326,"byte_end":1063388,"line_start":10,"line_end":10,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/convolution.rs","byte_start":1063393,"byte_end":1063396,"line_start":11,"line_end":11,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/convolution.rs","byte_start":1063401,"byte_end":1063416,"line_start":12,"line_end":12,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/convolution.rs","byte_start":1063421,"byte_end":1063424,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ * `kernel` - A Vector with size > 0","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/convolution.rs","byte_start":1063429,"byte_end":1063468,"line_start":14,"line_end":14,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/convolution.rs","byte_start":1063473,"byte_end":1063476,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/convolution.rs","byte_start":1063481,"byte_end":1063493,"line_start":16,"line_end":16,"column_start":5,"column_end":17}},{"value":"/ Inputs must satisfy `vector.len() >= kernel.len() > 0`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/convolution.rs","byte_start":1063498,"byte_end":1063557,"line_start":17,"line_end":17,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/convolution.rs","byte_start":1063562,"byte_end":1063565,"line_start":18,"line_end":18,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":7262},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/convolution.rs","byte_start":1065128,"byte_end":1065142,"line_start":67,"line_end":67,"column_start":12,"column_end":26},"name":"convolve_valid","qualname":"<Vector<N, D1, S1>>::convolve_valid","value":"fn <D2, S2> (&self, kernel: Vector<N, D2, S2>) -> VectorN<N, DimDiff<DimSum<D1, U1>, D2>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the convolution of the target vector and a kernel.","sig":null,"attributes":[{"value":"/ Returns the convolution of the target vector and a kernel.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/convolution.rs","byte_start":1064770,"byte_end":1064832,"line_start":56,"line_end":56,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/convolution.rs","byte_start":1064837,"byte_end":1064840,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ The output convolution consists only of those elements that do not rely on the zero-padding.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/convolution.rs","byte_start":1064845,"byte_end":1064941,"line_start":58,"line_end":58,"column_start":5,"column_end":101}},{"value":"/ # Arguments","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/convolution.rs","byte_start":1064946,"byte_end":1064961,"line_start":59,"line_end":59,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/convolution.rs","byte_start":1064966,"byte_end":1064969,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ * `kernel` - A Vector with size > 0","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/convolution.rs","byte_start":1064974,"byte_end":1065013,"line_start":61,"line_end":61,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/convolution.rs","byte_start":1065018,"byte_end":1065021,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/convolution.rs","byte_start":1065026,"byte_end":1065029,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/convolution.rs","byte_start":1065034,"byte_end":1065046,"line_start":64,"line_end":64,"column_start":5,"column_end":17}},{"value":"/ Inputs must satisfy `self.len() >= kernel.len() > 0`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/convolution.rs","byte_start":1065051,"byte_end":1065108,"line_start":65,"line_end":65,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/convolution.rs","byte_start":1065113,"byte_end":1065116,"line_start":66,"line_end":66,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":7265},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/convolution.rs","byte_start":1066342,"byte_end":1066355,"line_start":105,"line_end":105,"column_start":12,"column_end":25},"name":"convolve_same","qualname":"<Vector<N, D1, S1>>::convolve_same","value":"fn <D2, S2> (&self, kernel: Vector<N, D2, S2>) -> VectorN<N, D1>","parent":null,"children":[],"decl_id":null,"docs":" Returns the convolution of the target vector and a kernel.","sig":null,"attributes":[{"value":"/ Returns the convolution of the target vector and a kernel.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/convolution.rs","byte_start":1065994,"byte_end":1066056,"line_start":96,"line_end":96,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/convolution.rs","byte_start":1066061,"byte_end":1066064,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ The output convolution is the same size as vector, centered with respect to the ‘full’ output.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/convolution.rs","byte_start":1066069,"byte_end":1066171,"line_start":98,"line_end":98,"column_start":5,"column_end":103}},{"value":"/ # Arguments","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/convolution.rs","byte_start":1066176,"byte_end":1066191,"line_start":99,"line_end":99,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/convolution.rs","byte_start":1066196,"byte_end":1066199,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ * `kernel` - A Vector with size > 0","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/convolution.rs","byte_start":1066204,"byte_end":1066243,"line_start":101,"line_end":101,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/convolution.rs","byte_start":1066248,"byte_end":1066251,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/convolution.rs","byte_start":1066256,"byte_end":1066268,"line_start":103,"line_end":103,"column_start":5,"column_end":17}},{"value":"/ Inputs must satisfy `self.len() >= kernel.len() > 0`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/convolution.rs","byte_start":1066273,"byte_end":1066330,"line_start":104,"line_end":104,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":7281},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/determinant.rs","byte_start":1067622,"byte_end":1067633,"line_start":15,"line_end":15,"column_start":12,"column_end":23},"name":"determinant","qualname":"<SquareMatrix<N, D, S>>::determinant","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" Computes the matrix determinant.","sig":null,"attributes":[{"value":"/ Computes the matrix determinant.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/determinant.rs","byte_start":1067470,"byte_end":1067506,"line_start":11,"line_end":11,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/determinant.rs","byte_start":1067511,"byte_end":1067514,"line_start":12,"line_end":12,"column_start":5,"column_end":8}},{"value":"/ If the matrix has a dimension larger than 3, an LU decomposition is used.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/determinant.rs","byte_start":1067519,"byte_end":1067596,"line_start":13,"line_end":13,"column_start":5,"column_end":82}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/determinant.rs","byte_start":1067601,"byte_end":1067610,"line_start":14,"line_end":14,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7363},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/exp.rs","byte_start":1081819,"byte_end":1081822,"line_start":438,"line_end":438,"column_start":12,"column_end":15},"name":"exp","qualname":"<MatrixN<N, D>>::exp","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes exponential of this matrix\n","sig":null,"attributes":[{"value":"/ Computes exponential of this matrix","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/exp.rs","byte_start":1081768,"byte_end":1081807,"line_start":437,"line_end":437,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":20880},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/full_piv_lu.rs","byte_start":1084909,"byte_end":1084918,"line_start":31,"line_end":31,"column_start":12,"column_end":21},"name":"FullPivLU","qualname":"::linalg::full_piv_lu::FullPivLU","value":"FullPivLU {  }","parent":null,"children":[{"krate":0,"index":20884},{"krate":0,"index":20885},{"krate":0,"index":20886}],"decl_id":null,"docs":" LU decomposition with full row and column pivoting.\n","sig":null,"attributes":[{"value":"/ LU decomposition with full row and column pivoting.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/full_piv_lu.rs","byte_start":1084153,"byte_end":1084208,"line_start":14,"line_end":14,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":7393},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/full_piv_lu.rs","byte_start":1085753,"byte_end":1085756,"line_start":55,"line_end":55,"column_start":12,"column_end":15},"name":"new","qualname":"<FullPivLU<N, R, C>>::new","value":"fn (mut matrix: MatrixMN<N, R, C>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the LU decomposition with full pivoting of `matrix`.","sig":null,"attributes":[{"value":"/ Computes the LU decomposition with full pivoting of `matrix`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/full_piv_lu.rs","byte_start":1085588,"byte_end":1085653,"line_start":52,"line_end":52,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/full_piv_lu.rs","byte_start":1085658,"byte_end":1085661,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ This effectively computes `P, L, U, Q` such that `P * matrix * Q = LU`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/full_piv_lu.rs","byte_start":1085666,"byte_end":1085741,"line_start":54,"line_end":54,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":7394},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/full_piv_lu.rs","byte_start":1087111,"byte_end":1087122,"line_start":101,"line_end":101,"column_start":12,"column_end":23},"name":"lu_internal","qualname":"<FullPivLU<N, R, C>>::lu_internal","value":"fn (&self) -> &MatrixMN<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7395},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/full_piv_lu.rs","byte_start":1087262,"byte_end":1087263,"line_start":107,"line_end":107,"column_start":12,"column_end":13},"name":"l","qualname":"<FullPivLU<N, R, C>>::l","value":"fn (&self) -> MatrixMN<N, R, DimMinimum<R, C>>","parent":null,"children":[],"decl_id":null,"docs":" The lower triangular matrix of this decomposition.\n","sig":null,"attributes":[{"value":"/ The lower triangular matrix of this decomposition.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/full_piv_lu.rs","byte_start":1087182,"byte_end":1087236,"line_start":105,"line_end":105,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/full_piv_lu.rs","byte_start":1087241,"byte_end":1087250,"line_start":106,"line_end":106,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7396},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/full_piv_lu.rs","byte_start":1087695,"byte_end":1087696,"line_start":120,"line_end":120,"column_start":12,"column_end":13},"name":"u","qualname":"<FullPivLU<N, R, C>>::u","value":"fn (&self) -> MatrixMN<N, DimMinimum<R, C>, C>","parent":null,"children":[],"decl_id":null,"docs":" The upper triangular matrix of this decomposition.\n","sig":null,"attributes":[{"value":"/ The upper triangular matrix of this decomposition.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/full_piv_lu.rs","byte_start":1087615,"byte_end":1087669,"line_start":118,"line_end":118,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/full_piv_lu.rs","byte_start":1087674,"byte_end":1087683,"line_start":119,"line_end":119,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7397},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/full_piv_lu.rs","byte_start":1088019,"byte_end":1088020,"line_start":130,"line_end":130,"column_start":12,"column_end":13},"name":"p","qualname":"<FullPivLU<N, R, C>>::p","value":"fn (&self) -> &PermutationSequence<DimMinimum<R, C>>","parent":null,"children":[],"decl_id":null,"docs":" The row permutations of this decomposition.\n","sig":null,"attributes":[{"value":"/ The row permutations of this decomposition.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/full_piv_lu.rs","byte_start":1087946,"byte_end":1087993,"line_start":128,"line_end":128,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/full_piv_lu.rs","byte_start":1087998,"byte_end":1088007,"line_start":129,"line_end":129,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7398},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/full_piv_lu.rs","byte_start":1088175,"byte_end":1088176,"line_start":136,"line_end":136,"column_start":12,"column_end":13},"name":"q","qualname":"<FullPivLU<N, R, C>>::q","value":"fn (&self) -> &PermutationSequence<DimMinimum<R, C>>","parent":null,"children":[],"decl_id":null,"docs":" The column permutations of this decomposition.\n","sig":null,"attributes":[{"value":"/ The column permutations of this decomposition.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/full_piv_lu.rs","byte_start":1088099,"byte_end":1088149,"line_start":134,"line_end":134,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/full_piv_lu.rs","byte_start":1088154,"byte_end":1088163,"line_start":135,"line_end":135,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7399},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/full_piv_lu.rs","byte_start":1088376,"byte_end":1088382,"line_start":142,"line_end":142,"column_start":12,"column_end":18},"name":"unpack","qualname":"<FullPivLU<N, R, C>>::unpack","value":"fn (self) -> (PermutationSequence<DimMinimum<R, C>>, MatrixMN<N, R, DimMinimum<R, C>>,\n MatrixMN<N, DimMinimum<R, C>, C>, PermutationSequence<DimMinimum<R, C>>)","parent":null,"children":[],"decl_id":null,"docs":" The two matrices of this decomposition and the row and column permutations: `(P, L, U, Q)`.\n","sig":null,"attributes":[{"value":"/ The two matrices of this decomposition and the row and column permutations: `(P, L, U, Q)`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/full_piv_lu.rs","byte_start":1088255,"byte_end":1088350,"line_start":140,"line_end":140,"column_start":5,"column_end":100}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/full_piv_lu.rs","byte_start":1088355,"byte_end":1088364,"line_start":141,"line_end":141,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7403},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/full_piv_lu.rs","byte_start":1089210,"byte_end":1089215,"line_start":170,"line_end":170,"column_start":12,"column_end":17},"name":"solve","qualname":"<FullPivLU<N, D, D>>::solve","value":"fn <R2, C2, S2> (&self, b: &Matrix<N, R2, C2, S2>) -> Option<MatrixMN<N, R2, C2>>","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self * x = b`, where `x` is the unknown to be determined.","sig":null,"attributes":[{"value":"/ Solves the linear system `self * x = b`, where `x` is the unknown to be determined.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/full_piv_lu.rs","byte_start":1089036,"byte_end":1089123,"line_start":167,"line_end":167,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/full_piv_lu.rs","byte_start":1089128,"byte_end":1089131,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the decomposed matrix is not invertible.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/full_piv_lu.rs","byte_start":1089136,"byte_end":1089198,"line_start":169,"line_end":169,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":7407},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/full_piv_lu.rs","byte_start":1089865,"byte_end":1089874,"line_start":191,"line_end":191,"column_start":12,"column_end":21},"name":"solve_mut","qualname":"<FullPivLU<N, D, D>>::solve_mut","value":"fn <R2, C2, S2> (&self, b: &mut Matrix<N, R2, C2, S2>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self * x = b`, where `x` is the unknown to be determined.","sig":null,"attributes":[{"value":"/ Solves the linear system `self * x = b`, where `x` is the unknown to be determined.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/full_piv_lu.rs","byte_start":1089626,"byte_end":1089713,"line_start":187,"line_end":187,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/full_piv_lu.rs","byte_start":1089718,"byte_end":1089721,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ If the decomposed matrix is not invertible, this returns `false` and its input `b` may","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/full_piv_lu.rs","byte_start":1089726,"byte_end":1089816,"line_start":189,"line_end":189,"column_start":5,"column_end":95}},{"value":"/ be overwritten with garbage.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/full_piv_lu.rs","byte_start":1089821,"byte_end":1089853,"line_start":190,"line_end":190,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":7411},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/full_piv_lu.rs","byte_start":1090773,"byte_end":1090784,"line_start":221,"line_end":221,"column_start":12,"column_end":23},"name":"try_inverse","qualname":"<FullPivLU<N, D, D>>::try_inverse","value":"fn (&self) -> Option<MatrixN<N, D>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the inverse of the decomposed matrix.","sig":null,"attributes":[{"value":"/ Computes the inverse of the decomposed matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/full_piv_lu.rs","byte_start":1090636,"byte_end":1090686,"line_start":218,"line_end":218,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/full_piv_lu.rs","byte_start":1090691,"byte_end":1090694,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the decomposed matrix is not invertible.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/full_piv_lu.rs","byte_start":1090699,"byte_end":1090761,"line_start":220,"line_end":220,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":7412},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/full_piv_lu.rs","byte_start":1091263,"byte_end":1091276,"line_start":238,"line_end":238,"column_start":12,"column_end":25},"name":"is_invertible","qualname":"<FullPivLU<N, D, D>>::is_invertible","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates if the decomposed matrix is invertible.\n","sig":null,"attributes":[{"value":"/ Indicates if the decomposed matrix is invertible.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/full_piv_lu.rs","byte_start":1091198,"byte_end":1091251,"line_start":237,"line_end":237,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":7413},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/full_piv_lu.rs","byte_start":1091597,"byte_end":1091608,"line_start":249,"line_end":249,"column_start":12,"column_end":23},"name":"determinant","qualname":"<FullPivLU<N, D, D>>::determinant","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" Computes the determinant of the decomposed matrix.\n","sig":null,"attributes":[{"value":"/ Computes the determinant of the decomposed matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/full_piv_lu.rs","byte_start":1091531,"byte_end":1091585,"line_start":248,"line_end":248,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":7419},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/full_piv_lu.rs","byte_start":1092478,"byte_end":1092489,"line_start":276,"line_end":276,"column_start":12,"column_end":23},"name":"full_piv_lu","qualname":"<Matrix<N, R, C, S>>::full_piv_lu","value":"fn (self) -> FullPivLU<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Computes the LU decomposition with full pivoting of `matrix`.","sig":null,"attributes":[{"value":"/ Computes the LU decomposition with full pivoting of `matrix`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/full_piv_lu.rs","byte_start":1092313,"byte_end":1092378,"line_start":273,"line_end":273,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/full_piv_lu.rs","byte_start":1092383,"byte_end":1092386,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ This effectively computes `P, L, U, Q` such that `P * matrix * Q = LU`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/full_piv_lu.rs","byte_start":1092391,"byte_end":1092466,"line_start":275,"line_end":275,"column_start":5,"column_end":80}}]},{"kind":"Mod","id":{"krate":0,"index":7420},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/givens.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"givens","qualname":"::linalg::givens","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/givens.rs","parent":null,"children":[{"krate":0,"index":7421},{"krate":0,"index":7424},{"krate":0,"index":7425},{"krate":0,"index":7428},{"krate":0,"index":7431},{"krate":0,"index":7434},{"krate":0,"index":20897},{"krate":0,"index":20906},{"krate":0,"index":20903},{"krate":0,"index":20901},{"krate":0,"index":7437}],"decl_id":null,"docs":" Construction of givens rotations.\n","sig":null,"attributes":[{"value":"! Construction of givens rotations.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/givens.rs","byte_start":1092571,"byte_end":1092608,"line_start":1,"line_end":1,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":20897},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/givens.rs","byte_start":1092909,"byte_end":1092923,"line_start":13,"line_end":13,"column_start":12,"column_end":26},"name":"GivensRotation","qualname":"::linalg::givens::GivensRotation","value":"GivensRotation {  }","parent":null,"children":[{"krate":0,"index":20899},{"krate":0,"index":20900}],"decl_id":null,"docs":" A Givens rotation.\n","sig":null,"attributes":[{"value":"/ A Givens rotation.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/givens.rs","byte_start":1092845,"byte_end":1092867,"line_start":11,"line_end":11,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":7439},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/givens.rs","byte_start":1093111,"byte_end":1093119,"line_start":21,"line_end":21,"column_start":12,"column_end":20},"name":"identity","qualname":"<GivensRotation<N>>::identity","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" The Givents rotation that does nothing.\n","sig":null,"attributes":[{"value":"/ The Givents rotation that does nothing.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/givens.rs","byte_start":1093056,"byte_end":1093099,"line_start":20,"line_end":20,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":7440},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/givens.rs","byte_start":1093428,"byte_end":1093441,"line_start":32,"line_end":32,"column_start":12,"column_end":25},"name":"new_unchecked","qualname":"<GivensRotation<N>>::new_unchecked","value":"fn (c: N::RealField, s: N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Initializes a Givens rotation from its components.","sig":null,"attributes":[{"value":"/ Initializes a Givens rotation from its components.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/givens.rs","byte_start":1093230,"byte_end":1093284,"line_start":28,"line_end":28,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/givens.rs","byte_start":1093289,"byte_end":1093292,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ The components are copies as-is. It is not checked whether they describe","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/givens.rs","byte_start":1093297,"byte_end":1093373,"line_start":30,"line_end":30,"column_start":5,"column_end":81}},{"value":"/ an actually valid Givens rotation.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/givens.rs","byte_start":1093378,"byte_end":1093416,"line_start":31,"line_end":31,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":7441},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/givens.rs","byte_start":1093604,"byte_end":1093607,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"new","qualname":"<GivensRotation<N>>::new","value":"fn (c: N, s: N) -> (Self, N)","parent":null,"children":[],"decl_id":null,"docs":" Initializes a Givens rotation from its non-normalized cosine an sine components.\n","sig":null,"attributes":[{"value":"/ Initializes a Givens rotation from its non-normalized cosine an sine components.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/givens.rs","byte_start":1093508,"byte_end":1093592,"line_start":36,"line_end":36,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":7443},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/givens.rs","byte_start":1093864,"byte_end":1093871,"line_start":43,"line_end":43,"column_start":12,"column_end":19},"name":"try_new","qualname":"<GivensRotation<N>>::try_new","value":"fn (c: N, s: N, eps: N::RealField) -> Option<(Self, N)>","parent":null,"children":[],"decl_id":null,"docs":" Initializes a Givens rotation form its non-normalized cosine an sine components.\n","sig":null,"attributes":[{"value":"/ Initializes a Givens rotation form its non-normalized cosine an sine components.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/givens.rs","byte_start":1093768,"byte_end":1093852,"line_start":42,"line_end":42,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":7444},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/givens.rs","byte_start":1094570,"byte_end":1094578,"line_start":61,"line_end":61,"column_start":12,"column_end":20},"name":"cancel_y","qualname":"<GivensRotation<N>>::cancel_y","value":"fn <S> (v: &Vector<N, U2, S>) -> Option<(Self, N)>","parent":null,"children":[],"decl_id":null,"docs":" Computes the rotation `R` required such that the `y` component of `R * v` is zero.","sig":null,"attributes":[{"value":"/ Computes the rotation `R` required such that the `y` component of `R * v` is zero.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/givens.rs","byte_start":1094258,"byte_end":1094344,"line_start":57,"line_end":57,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/givens.rs","byte_start":1094349,"byte_end":1094352,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if no rotation is needed (i.e. if `v.y == 0`). Otherwise, this returns the norm","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/givens.rs","byte_start":1094357,"byte_end":1094455,"line_start":59,"line_end":59,"column_start":5,"column_end":103}},{"value":"/ of `v` and the rotation `r` such that `R * v = [ |v|, 0.0 ]^t` where `|v|` is the norm of `v`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/givens.rs","byte_start":1094460,"byte_end":1094558,"line_start":60,"line_end":60,"column_start":5,"column_end":103}}]},{"kind":"Method","id":{"krate":0,"index":7446},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/givens.rs","byte_start":1095316,"byte_end":1095324,"line_start":78,"line_end":78,"column_start":12,"column_end":20},"name":"cancel_x","qualname":"<GivensRotation<N>>::cancel_x","value":"fn <S> (v: &Vector<N, U2, S>) -> Option<(Self, N)>","parent":null,"children":[],"decl_id":null,"docs":" Computes the rotation `R` required such that the `x` component of `R * v` is zero.","sig":null,"attributes":[{"value":"/ Computes the rotation `R` required such that the `x` component of `R * v` is zero.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/givens.rs","byte_start":1095004,"byte_end":1095090,"line_start":74,"line_end":74,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/givens.rs","byte_start":1095095,"byte_end":1095098,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if no rotation is needed (i.e. if `v.x == 0`). Otherwise, this returns the norm","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/givens.rs","byte_start":1095103,"byte_end":1095201,"line_start":76,"line_end":76,"column_start":5,"column_end":103}},{"value":"/ of `v` and the rotation `r` such that `R * v = [ 0.0, |v| ]^t` where `|v|` is the norm of `v`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/givens.rs","byte_start":1095206,"byte_end":1095304,"line_start":77,"line_end":77,"column_start":5,"column_end":103}}]},{"kind":"Method","id":{"krate":0,"index":7448},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/givens.rs","byte_start":1095811,"byte_end":1095812,"line_start":92,"line_end":92,"column_start":12,"column_end":13},"name":"c","qualname":"<GivensRotation<N>>::c","value":"fn (&self) -> N::RealField","parent":null,"children":[],"decl_id":null,"docs":" The cos part of this roration.\n","sig":null,"attributes":[{"value":"/ The cos part of this roration.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/givens.rs","byte_start":1095765,"byte_end":1095799,"line_start":91,"line_end":91,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":7449},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/givens.rs","byte_start":1095910,"byte_end":1095911,"line_start":97,"line_end":97,"column_start":12,"column_end":13},"name":"s","qualname":"<GivensRotation<N>>::s","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The sin part of this roration.\n","sig":null,"attributes":[{"value":"/ The sin part of this roration.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/givens.rs","byte_start":1095864,"byte_end":1095898,"line_start":96,"line_end":96,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":7450},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/givens.rs","byte_start":1096004,"byte_end":1096011,"line_start":102,"line_end":102,"column_start":12,"column_end":19},"name":"inverse","qualname":"<GivensRotation<N>>::inverse","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The inverse of this givens rotation.\n","sig":null,"attributes":[{"value":"/ The inverse of this givens rotation.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/givens.rs","byte_start":1095952,"byte_end":1095992,"line_start":101,"line_end":101,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":7451},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/givens.rs","byte_start":1096184,"byte_end":1096190,"line_start":110,"line_end":110,"column_start":12,"column_end":18},"name":"rotate","qualname":"<GivensRotation<N>>::rotate","value":"fn <R2, C2, S2> (&self, rhs: &mut Matrix<N, R2, C2, S2>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Performs the multiplication `rhs = self * rhs` in-place.\n","sig":null,"attributes":[{"value":"/ Performs the multiplication `rhs = self * rhs` in-place.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/givens.rs","byte_start":1096112,"byte_end":1096172,"line_start":109,"line_end":109,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":7455},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/givens.rs","byte_start":1096970,"byte_end":1096981,"line_start":136,"line_end":136,"column_start":12,"column_end":23},"name":"rotate_rows","qualname":"<GivensRotation<N>>::rotate_rows","value":"fn <R2, C2, S2> (&self, lhs: &mut Matrix<N, R2, C2, S2>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Performs the multiplication `lhs = lhs * self` in-place.\n","sig":null,"attributes":[{"value":"/ Performs the multiplication `lhs = lhs * self` in-place.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/givens.rs","byte_start":1096898,"byte_end":1096958,"line_start":135,"line_end":135,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":20909},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/hessenberg.rs","byte_start":1098784,"byte_end":1098794,"line_start":29,"line_end":29,"column_start":12,"column_end":22},"name":"Hessenberg","qualname":"::linalg::hessenberg::Hessenberg","value":"Hessenberg {  }","parent":null,"children":[{"krate":0,"index":20912},{"krate":0,"index":20913}],"decl_id":null,"docs":" Hessenberg decomposition of a general matrix.\n","sig":null,"attributes":[{"value":"/ Hessenberg decomposition of a general matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/hessenberg.rs","byte_start":1098094,"byte_end":1098143,"line_start":12,"line_end":12,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":7480},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/hessenberg.rs","byte_start":1099428,"byte_end":1099431,"line_start":50,"line_end":50,"column_start":12,"column_end":15},"name":"new","qualname":"<Hessenberg<N, D>>::new","value":"fn (hess: MatrixN<N, D>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the Hessenberg decomposition using householder reflections.\n","sig":null,"attributes":[{"value":"/ Computes the Hessenberg decomposition using householder reflections.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/hessenberg.rs","byte_start":1099344,"byte_end":1099416,"line_start":49,"line_end":49,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":7481},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/hessenberg.rs","byte_start":1099832,"byte_end":1099850,"line_start":59,"line_end":59,"column_start":12,"column_end":30},"name":"new_with_workspace","qualname":"<Hessenberg<N, D>>::new_with_workspace","value":"fn (mut hess: MatrixN<N, D>, work: &mut VectorN<N, D>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the Hessenberg decomposition using householder reflections.","sig":null,"attributes":[{"value":"/ Computes the Hessenberg decomposition using householder reflections.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/hessenberg.rs","byte_start":1099620,"byte_end":1099692,"line_start":55,"line_end":55,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/hessenberg.rs","byte_start":1099697,"byte_end":1099700,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ The workspace containing `D` elements must be provided but its content does not have to be","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/hessenberg.rs","byte_start":1099705,"byte_end":1099799,"line_start":57,"line_end":57,"column_start":5,"column_end":99}},{"value":"/ initialized.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/hessenberg.rs","byte_start":1099804,"byte_end":1099820,"line_start":58,"line_end":58,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":7482},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/hessenberg.rs","byte_start":1100881,"byte_end":1100887,"line_start":93,"line_end":93,"column_start":12,"column_end":18},"name":"unpack","qualname":"<Hessenberg<N, D>>::unpack","value":"fn (self) -> (MatrixN<N, D>, MatrixN<N, D>)","parent":null,"children":[],"decl_id":null,"docs":" Retrieves `(q, h)` with `q` the orthogonal matrix of this decomposition and `h` the\n hessenberg matrix.\n","sig":null,"attributes":[{"value":"/ Retrieves `(q, h)` with `q` the orthogonal matrix of this decomposition and `h` the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/hessenberg.rs","byte_start":1100741,"byte_end":1100828,"line_start":90,"line_end":90,"column_start":5,"column_end":92}},{"value":"/ hessenberg matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/hessenberg.rs","byte_start":1100833,"byte_end":1100855,"line_start":91,"line_end":91,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/hessenberg.rs","byte_start":1100860,"byte_end":1100869,"line_start":92,"line_end":92,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7483},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/hessenberg.rs","byte_start":1101095,"byte_end":1101103,"line_start":101,"line_end":101,"column_start":12,"column_end":20},"name":"unpack_h","qualname":"<Hessenberg<N, D>>::unpack_h","value":"fn (mut self) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the upper trapezoidal submatrix `H` of this decomposition.\n","sig":null,"attributes":[{"value":"/ Retrieves the upper trapezoidal submatrix `H` of this decomposition.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/hessenberg.rs","byte_start":1100997,"byte_end":1101069,"line_start":99,"line_end":99,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/hessenberg.rs","byte_start":1101074,"byte_end":1101083,"line_start":100,"line_end":100,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7485},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/hessenberg.rs","byte_start":1101644,"byte_end":1101645,"line_start":115,"line_end":115,"column_start":12,"column_end":13},"name":"h","qualname":"<Hessenberg<N, D>>::h","value":"fn (&self) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the upper trapezoidal submatrix `H` of this decomposition.","sig":null,"attributes":[{"value":"/ Retrieves the upper trapezoidal submatrix `H` of this decomposition.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/hessenberg.rs","byte_start":1101458,"byte_end":1101530,"line_start":111,"line_end":111,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/hessenberg.rs","byte_start":1101535,"byte_end":1101538,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ This is less efficient than `.unpack_h()` as it allocates a new matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/hessenberg.rs","byte_start":1101543,"byte_end":1101618,"line_start":113,"line_end":113,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/hessenberg.rs","byte_start":1101623,"byte_end":1101632,"line_start":114,"line_end":114,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7487},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/hessenberg.rs","byte_start":1102034,"byte_end":1102035,"line_start":125,"line_end":125,"column_start":12,"column_end":13},"name":"q","qualname":"<Hessenberg<N, D>>::q","value":"fn (&self) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the orthogonal matrix `Q` of this decomposition.\n","sig":null,"attributes":[{"value":"/ Computes the orthogonal matrix `Q` of this decomposition.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/hessenberg.rs","byte_start":1101961,"byte_end":1102022,"line_start":124,"line_end":124,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":7488},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/hessenberg.rs","byte_start":1102168,"byte_end":1102181,"line_start":130,"line_end":130,"column_start":12,"column_end":25},"name":"hess_internal","qualname":"<Hessenberg<N, D>>::hess_internal","value":"fn (&self) -> &MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7493},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/hessenberg.rs","byte_start":1102519,"byte_end":1102529,"line_start":140,"line_end":140,"column_start":12,"column_end":22},"name":"hessenberg","qualname":"<SquareMatrix<N, D, S>>::hessenberg","value":"fn (self) -> Hessenberg<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the Hessenberg decomposition of this matrix using householder reflections.\n","sig":null,"attributes":[{"value":"/ Computes the Hessenberg decomposition of this matrix using householder reflections.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/hessenberg.rs","byte_start":1102420,"byte_end":1102507,"line_start":139,"line_end":139,"column_start":5,"column_end":92}}]},{"kind":"Mod","id":{"krate":0,"index":7494},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/householder.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"householder","qualname":"::linalg::householder","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/householder.rs","parent":null,"children":[{"krate":0,"index":7495},{"krate":0,"index":7496},{"krate":0,"index":7503},{"krate":0,"index":7504},{"krate":0,"index":7507},{"krate":0,"index":7508},{"krate":0,"index":7509},{"krate":0,"index":7510},{"krate":0,"index":7514},{"krate":0,"index":7518},{"krate":0,"index":7522}],"decl_id":null,"docs":" Construction of householder elementary reflections.\n","sig":null,"attributes":[{"value":"! Construction of householder elementary reflections.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/householder.rs","byte_start":1102610,"byte_end":1102665,"line_start":1,"line_end":1,"column_start":1,"column_end":56}}]},{"kind":"Function","id":{"krate":0,"index":7510},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/householder.rs","byte_start":1103269,"byte_end":1103288,"line_start":19,"line_end":19,"column_start":8,"column_end":27},"name":"reflection_axis_mut","qualname":"::linalg::householder::reflection_axis_mut","value":"fn <N, D, S> (column: &mut Vector<N, D, S>) -> (N, bool)","parent":null,"children":[],"decl_id":null,"docs":" Replaces `column` by the axis of the householder reflection that transforms `column` into\n `(+/-|column|, 0, ..., 0)`.","sig":null,"attributes":[{"value":"/ Replaces `column` by the axis of the householder reflection that transforms `column` into","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/householder.rs","byte_start":1102932,"byte_end":1103025,"line_start":12,"line_end":12,"column_start":1,"column_end":94}},{"value":"/ `(+/-|column|, 0, ..., 0)`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/householder.rs","byte_start":1103026,"byte_end":1103057,"line_start":13,"line_end":13,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/householder.rs","byte_start":1103058,"byte_end":1103061,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The unit-length axis is output to `column`. Returns what would be the first component of","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/householder.rs","byte_start":1103062,"byte_end":1103154,"line_start":15,"line_end":15,"column_start":1,"column_end":93}},{"value":"/ `column` after reflection and `false` if no reflection was necessary.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/householder.rs","byte_start":1103155,"byte_end":1103228,"line_start":16,"line_end":16,"column_start":1,"column_end":74}},{"value":"inline(always)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/householder.rs","byte_start":1103244,"byte_end":1103261,"line_start":18,"line_end":18,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":7514},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/householder.rs","byte_start":1104170,"byte_end":1104192,"line_start":47,"line_end":47,"column_start":8,"column_end":30},"name":"clear_column_unchecked","qualname":"::linalg::householder::clear_column_unchecked","value":"fn <N, R, C> (matrix: &mut MatrixMN<N, R, C>, diag_elt: &mut N, icol: usize, shift: usize, bilateral: Option<&mut VectorN<N, R>>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Uses an householder reflection to zero out the `icol`-th column, starting with the `shift + 1`-th\n subdiagonal element.\n","sig":null,"attributes":[{"value":"/ Uses an householder reflection to zero out the `icol`-th column, starting with the `shift + 1`-th","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/householder.rs","byte_start":1104021,"byte_end":1104122,"line_start":44,"line_end":44,"column_start":1,"column_end":102}},{"value":"/ subdiagonal element.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/householder.rs","byte_start":1104123,"byte_end":1104147,"line_start":45,"line_end":45,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":7518},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/householder.rs","byte_start":1105186,"byte_end":1105205,"line_start":75,"line_end":75,"column_start":8,"column_end":27},"name":"clear_row_unchecked","qualname":"::linalg::householder::clear_row_unchecked","value":"fn <N, R, C> (matrix: &mut MatrixMN<N, R, C>, diag_elt: &mut N, axis_packed: &mut VectorN<N, C>, work: &mut VectorN<N, R>, irow: usize, shift: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Uses an householder reflection to zero out the `irow`-th row, ending before the `shift + 1`-th\n superdiagonal element.\n","sig":null,"attributes":[{"value":"/ Uses an householder reflection to zero out the `irow`-th row, ending before the `shift + 1`-th","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/householder.rs","byte_start":1105038,"byte_end":1105136,"line_start":72,"line_end":72,"column_start":1,"column_end":99}},{"value":"/ superdiagonal element.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/householder.rs","byte_start":1105137,"byte_end":1105163,"line_start":73,"line_end":73,"column_start":1,"column_end":27}}]},{"kind":"Function","id":{"krate":0,"index":7522},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/householder.rs","byte_start":1106534,"byte_end":1106544,"line_start":111,"line_end":111,"column_start":8,"column_end":18},"name":"assemble_q","qualname":"::linalg::householder::assemble_q","value":"fn <N, D> (m: &MatrixN<N, D>, signs: &[N]) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the orthogonal transformation described by the elementary reflector axii stored on\n the lower-diagonal element of the given matrix.\n matrices.\n","sig":null,"attributes":[{"value":"/ Computes the orthogonal transformation described by the elementary reflector axii stored on","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/householder.rs","byte_start":1106350,"byte_end":1106445,"line_start":107,"line_end":107,"column_start":1,"column_end":96}},{"value":"/ the lower-diagonal element of the given matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/householder.rs","byte_start":1106446,"byte_end":1106497,"line_start":108,"line_end":108,"column_start":1,"column_end":52}},{"value":"/ matrices.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/householder.rs","byte_start":1106498,"byte_end":1106511,"line_start":109,"line_end":109,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7541},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/inverse.rs","byte_start":1107679,"byte_end":1107690,"line_start":14,"line_end":14,"column_start":12,"column_end":23},"name":"try_inverse","qualname":"<SquareMatrix<N, D, S>>::try_inverse","value":"fn (self) -> Option<MatrixN<N, D>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to invert this matrix.\n","sig":null,"attributes":[{"value":"/ Attempts to invert this matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/inverse.rs","byte_start":1107559,"byte_end":1107594,"line_start":11,"line_end":11,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/inverse.rs","byte_start":1107599,"byte_end":1107608,"line_start":12,"line_end":12,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use try_inverse_mut()?\"","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/inverse.rs","byte_start":1107613,"byte_end":1107667,"line_start":13,"line_end":13,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":7546},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/inverse.rs","byte_start":1108156,"byte_end":1108171,"line_start":31,"line_end":31,"column_start":12,"column_end":27},"name":"try_inverse_mut","qualname":"<SquareMatrix<N, D, S>>::try_inverse_mut","value":"fn (&mut self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Attempts to invert this matrix in-place. Returns `false` and leaves `self` untouched if\n inversion fails.\n","sig":null,"attributes":[{"value":"/ Attempts to invert this matrix in-place. Returns `false` and leaves `self` untouched if","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/inverse.rs","byte_start":1108014,"byte_end":1108105,"line_start":28,"line_end":28,"column_start":5,"column_end":96}},{"value":"/ inversion fails.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/inverse.rs","byte_start":1108110,"byte_end":1108130,"line_start":29,"line_end":29,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/inverse.rs","byte_start":1108135,"byte_end":1108144,"line_start":30,"line_end":30,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":20922},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/lu.rs","byte_start":1116447,"byte_end":1116449,"line_start":31,"line_end":31,"column_start":12,"column_end":14},"name":"LU","qualname":"::linalg::lu::LU","value":"LU {  }","parent":null,"children":[{"krate":0,"index":20926},{"krate":0,"index":20927}],"decl_id":null,"docs":" LU decomposition with partial (row) pivoting.\n","sig":null,"attributes":[{"value":"/ LU decomposition with partial (row) pivoting.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/lu.rs","byte_start":1115697,"byte_end":1115746,"line_start":14,"line_end":14,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":7580},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/lu.rs","byte_start":1117086,"byte_end":1117099,"line_start":50,"line_end":50,"column_start":8,"column_end":21},"name":"try_invert_to","qualname":"::linalg::lu::try_invert_to","value":"fn <N, D, S> (mut matrix: MatrixN<N, D>, out: &mut Matrix<N, D, D, S>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Performs a LU decomposition to overwrite `out` with the inverse of `matrix`.","sig":null,"attributes":[{"value":"/ Performs a LU decomposition to overwrite `out` with the inverse of `matrix`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/lu.rs","byte_start":1116903,"byte_end":1116983,"line_start":47,"line_end":47,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/lu.rs","byte_start":1116984,"byte_end":1116987,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ If `matrix` is not invertible, `false` is returned and `out` may contain invalid data.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/lu.rs","byte_start":1116988,"byte_end":1117078,"line_start":49,"line_end":49,"column_start":1,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":7588},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/lu.rs","byte_start":1118253,"byte_end":1118256,"line_start":92,"line_end":92,"column_start":12,"column_end":15},"name":"new","qualname":"<LU<N, R, C>>::new","value":"fn (mut matrix: MatrixMN<N, R, C>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the LU decomposition with partial (row) pivoting of `matrix`.\n","sig":null,"attributes":[{"value":"/ Computes the LU decomposition with partial (row) pivoting of `matrix`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/lu.rs","byte_start":1118167,"byte_end":1118241,"line_start":91,"line_end":91,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":7589},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/lu.rs","byte_start":1119212,"byte_end":1119223,"line_start":124,"line_end":124,"column_start":12,"column_end":23},"name":"lu_internal","qualname":"<LU<N, R, C>>::lu_internal","value":"fn (&self) -> &MatrixMN<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7590},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/lu.rs","byte_start":1119363,"byte_end":1119364,"line_start":130,"line_end":130,"column_start":12,"column_end":13},"name":"l","qualname":"<LU<N, R, C>>::l","value":"fn (&self) -> MatrixMN<N, R, DimMinimum<R, C>>","parent":null,"children":[],"decl_id":null,"docs":" The lower triangular matrix of this decomposition.\n","sig":null,"attributes":[{"value":"/ The lower triangular matrix of this decomposition.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/lu.rs","byte_start":1119283,"byte_end":1119337,"line_start":128,"line_end":128,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/lu.rs","byte_start":1119342,"byte_end":1119351,"line_start":129,"line_end":129,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7592},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/lu.rs","byte_start":1120322,"byte_end":1120330,"line_start":160,"line_end":160,"column_start":12,"column_end":20},"name":"l_unpack","qualname":"<LU<N, R, C>>::l_unpack","value":"fn (self) -> MatrixMN<N, R, DimMinimum<R, C>>","parent":null,"children":[],"decl_id":null,"docs":" The lower triangular matrix of this decomposition.\n","sig":null,"attributes":[{"value":"/ The lower triangular matrix of this decomposition.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/lu.rs","byte_start":1120242,"byte_end":1120296,"line_start":158,"line_end":158,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/lu.rs","byte_start":1120301,"byte_end":1120310,"line_start":159,"line_end":159,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7593},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/lu.rs","byte_start":1120770,"byte_end":1120771,"line_start":173,"line_end":173,"column_start":12,"column_end":13},"name":"u","qualname":"<LU<N, R, C>>::u","value":"fn (&self) -> MatrixMN<N, DimMinimum<R, C>, C>","parent":null,"children":[],"decl_id":null,"docs":" The upper triangular matrix of this decomposition.\n","sig":null,"attributes":[{"value":"/ The upper triangular matrix of this decomposition.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/lu.rs","byte_start":1120690,"byte_end":1120744,"line_start":171,"line_end":171,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/lu.rs","byte_start":1120749,"byte_end":1120758,"line_start":172,"line_end":172,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7594},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/lu.rs","byte_start":1121094,"byte_end":1121095,"line_start":183,"line_end":183,"column_start":12,"column_end":13},"name":"p","qualname":"<LU<N, R, C>>::p","value":"fn (&self) -> &PermutationSequence<DimMinimum<R, C>>","parent":null,"children":[],"decl_id":null,"docs":" The row permutations of this decomposition.\n","sig":null,"attributes":[{"value":"/ The row permutations of this decomposition.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/lu.rs","byte_start":1121021,"byte_end":1121068,"line_start":181,"line_end":181,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/lu.rs","byte_start":1121073,"byte_end":1121082,"line_start":182,"line_end":182,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7595},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/lu.rs","byte_start":1121288,"byte_end":1121294,"line_start":189,"line_end":189,"column_start":12,"column_end":18},"name":"unpack","qualname":"<LU<N, R, C>>::unpack","value":"fn (self) -> (PermutationSequence<DimMinimum<R, C>>, MatrixMN<N, R, DimMinimum<R, C>>,\n MatrixMN<N, DimMinimum<R, C>, C>)","parent":null,"children":[],"decl_id":null,"docs":" The row permutations and two triangular matrices of this decomposition: `(P, L, U)`.\n","sig":null,"attributes":[{"value":"/ The row permutations and two triangular matrices of this decomposition: `(P, L, U)`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/lu.rs","byte_start":1121174,"byte_end":1121262,"line_start":187,"line_end":187,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/lu.rs","byte_start":1121267,"byte_end":1121276,"line_start":188,"line_end":188,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7599},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/lu.rs","byte_start":1122089,"byte_end":1122094,"line_start":216,"line_end":216,"column_start":12,"column_end":17},"name":"solve","qualname":"<LU<N, D, D>>::solve","value":"fn <R2, C2, S2> (&self, b: &Matrix<N, R2, C2, S2>) -> Option<MatrixMN<N, R2, C2>>","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self * x = b`, where `x` is the unknown to be determined.","sig":null,"attributes":[{"value":"/ Solves the linear system `self * x = b`, where `x` is the unknown to be determined.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/lu.rs","byte_start":1121930,"byte_end":1122017,"line_start":213,"line_end":213,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/lu.rs","byte_start":1122022,"byte_end":1122025,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if `self` is not invertible.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/lu.rs","byte_start":1122030,"byte_end":1122077,"line_start":215,"line_end":215,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":7603},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/lu.rs","byte_start":1122744,"byte_end":1122753,"line_start":237,"line_end":237,"column_start":12,"column_end":21},"name":"solve_mut","qualname":"<LU<N, D, D>>::solve_mut","value":"fn <R2, C2, S2> (&self, b: &mut Matrix<N, R2, C2, S2>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self * x = b`, where `x` is the unknown to be determined.","sig":null,"attributes":[{"value":"/ Solves the linear system `self * x = b`, where `x` is the unknown to be determined.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/lu.rs","byte_start":1122505,"byte_end":1122592,"line_start":233,"line_end":233,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/lu.rs","byte_start":1122597,"byte_end":1122600,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ If the decomposed matrix is not invertible, this returns `false` and its input `b` may","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/lu.rs","byte_start":1122605,"byte_end":1122695,"line_start":235,"line_end":235,"column_start":5,"column_end":95}},{"value":"/ be overwritten with garbage.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/lu.rs","byte_start":1122700,"byte_end":1122732,"line_start":236,"line_end":236,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":7607},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/lu.rs","byte_start":1123469,"byte_end":1123480,"line_start":260,"line_end":260,"column_start":12,"column_end":23},"name":"try_inverse","qualname":"<LU<N, D, D>>::try_inverse","value":"fn (&self) -> Option<MatrixN<N, D>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the inverse of the decomposed matrix.","sig":null,"attributes":[{"value":"/ Computes the inverse of the decomposed matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/lu.rs","byte_start":1123343,"byte_end":1123393,"line_start":257,"line_end":257,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/lu.rs","byte_start":1123398,"byte_end":1123401,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the matrix is not invertible.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/lu.rs","byte_start":1123406,"byte_end":1123457,"line_start":259,"line_end":259,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":7608},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/lu.rs","byte_start":1124117,"byte_end":1124131,"line_start":279,"line_end":279,"column_start":12,"column_end":26},"name":"try_inverse_to","qualname":"<LU<N, D, D>>::try_inverse_to","value":"fn <S2> (&self, out: &mut Matrix<N, D, D, S2>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Computes the inverse of the decomposed matrix and outputs the result to `out`.","sig":null,"attributes":[{"value":"/ Computes the inverse of the decomposed matrix and outputs the result to `out`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/lu.rs","byte_start":1123891,"byte_end":1123973,"line_start":275,"line_end":275,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/lu.rs","byte_start":1123978,"byte_end":1123981,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ If the decomposed matrix is not invertible, this returns `false` and `out` may be","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/lu.rs","byte_start":1123986,"byte_end":1124071,"line_start":277,"line_end":277,"column_start":5,"column_end":90}},{"value":"/ overwritten with garbage.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/lu.rs","byte_start":1124076,"byte_end":1124105,"line_start":278,"line_end":278,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":7610},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/lu.rs","byte_start":1124609,"byte_end":1124620,"line_start":294,"line_end":294,"column_start":12,"column_end":23},"name":"determinant","qualname":"<LU<N, D, D>>::determinant","value":"fn (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" Computes the determinant of the decomposed matrix.\n","sig":null,"attributes":[{"value":"/ Computes the determinant of the decomposed matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/lu.rs","byte_start":1124543,"byte_end":1124597,"line_start":293,"line_end":293,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":7611},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/lu.rs","byte_start":1125062,"byte_end":1125075,"line_start":310,"line_end":310,"column_start":12,"column_end":25},"name":"is_invertible","qualname":"<LU<N, D, D>>::is_invertible","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates if the decomposed matrix is invertible.\n","sig":null,"attributes":[{"value":"/ Indicates if the decomposed matrix is invertible.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/lu.rs","byte_start":1124997,"byte_end":1125050,"line_start":309,"line_end":309,"column_start":5,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":7612},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/lu.rs","byte_start":1125563,"byte_end":1125573,"line_start":329,"line_end":329,"column_start":8,"column_end":18},"name":"gauss_step","qualname":"::linalg::lu::gauss_step","value":"fn <N, R, C, S> (matrix: &mut Matrix<N, R, C, S>, diag: N, i: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Executes one step of gaussian elimination on the i-th row and column of `matrix`. The diagonal\n element `matrix[(i, i)]` is provided as argument.\n","sig":null,"attributes":[{"value":"/ Executes one step of gaussian elimination on the i-th row and column of `matrix`. The diagonal","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/lu.rs","byte_start":1125403,"byte_end":1125501,"line_start":327,"line_end":327,"column_start":1,"column_end":99}},{"value":"/ element `matrix[(i, i)]` is provided as argument.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/lu.rs","byte_start":1125502,"byte_end":1125555,"line_start":328,"line_end":328,"column_start":1,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":7617},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/lu.rs","byte_start":1126376,"byte_end":1126391,"line_start":354,"line_end":354,"column_start":8,"column_end":23},"name":"gauss_step_swap","qualname":"::linalg::lu::gauss_step_swap","value":"fn <N, R, C, S> (matrix: &mut Matrix<N, R, C, S>, diag: N, i: usize, piv: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Swaps the rows `i` with the row `piv` and executes one step of gaussian elimination on the i-th\n row and column of `matrix`. The diagonal element `matrix[(i, i)]` is provided as argument.\n","sig":null,"attributes":[{"value":"/ Swaps the rows `i` with the row `piv` and executes one step of gaussian elimination on the i-th","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/lu.rs","byte_start":1126174,"byte_end":1126273,"line_start":352,"line_end":352,"column_start":1,"column_end":100}},{"value":"/ row and column of `matrix`. The diagonal element `matrix[(i, i)]` is provided as argument.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/lu.rs","byte_start":1126274,"byte_end":1126368,"line_start":353,"line_end":353,"column_start":1,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":7627},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/lu.rs","byte_start":1127403,"byte_end":1127405,"line_start":388,"line_end":388,"column_start":12,"column_end":14},"name":"lu","qualname":"<Matrix<N, R, C, S>>::lu","value":"fn (self) -> LU<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Computes the LU decomposition with partial (row) pivoting of `matrix`.\n","sig":null,"attributes":[{"value":"/ Computes the LU decomposition with partial (row) pivoting of `matrix`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/lu.rs","byte_start":1127317,"byte_end":1127391,"line_start":387,"line_end":387,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":20938},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/permutation_sequence.rs","byte_start":1128354,"byte_end":1128373,"line_start":27,"line_end":27,"column_start":12,"column_end":31},"name":"PermutationSequence","qualname":"::linalg::permutation_sequence::PermutationSequence","value":"PermutationSequence {  }","parent":null,"children":[{"krate":0,"index":20940},{"krate":0,"index":20941}],"decl_id":null,"docs":" A sequence of row or column permutations.\n","sig":null,"attributes":[{"value":"/ A sequence of row or column permutations.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/permutation_sequence.rs","byte_start":1127841,"byte_end":1127886,"line_start":14,"line_end":14,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":7647},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/permutation_sequence.rs","byte_start":1128852,"byte_end":1128860,"line_start":48,"line_end":48,"column_start":12,"column_end":20},"name":"identity","qualname":"<PermutationSequence<D>>::identity","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new statically-allocated sequence of `D` identity permutations.\n","sig":null,"attributes":[{"value":"/ Creates a new statically-allocated sequence of `D` identity permutations.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/permutation_sequence.rs","byte_start":1128749,"byte_end":1128826,"line_start":46,"line_end":46,"column_start":5,"column_end":82}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/permutation_sequence.rs","byte_start":1128831,"byte_end":1128840,"line_start":47,"line_end":47,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7649},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/permutation_sequence.rs","byte_start":1129180,"byte_end":1129188,"line_start":60,"line_end":60,"column_start":12,"column_end":20},"name":"identity","qualname":"<PermutationSequence<Dynamic>>::identity","value":"fn (n: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new dynamically-allocated sequence of `n` identity permutations.\n","sig":null,"attributes":[{"value":"/ Creates a new dynamically-allocated sequence of `n` identity permutations.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/permutation_sequence.rs","byte_start":1129076,"byte_end":1129154,"line_start":58,"line_end":58,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/permutation_sequence.rs","byte_start":1129159,"byte_end":1129168,"line_start":59,"line_end":59,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7652},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/permutation_sequence.rs","byte_start":1129446,"byte_end":1129462,"line_start":71,"line_end":71,"column_start":12,"column_end":28},"name":"identity_generic","qualname":"<PermutationSequence<D>>::identity_generic","value":"fn (dim: D) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new sequence of D identity permutations.\n","sig":null,"attributes":[{"value":"/ Creates a new sequence of D identity permutations.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/permutation_sequence.rs","byte_start":1129366,"byte_end":1129420,"line_start":69,"line_end":69,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/permutation_sequence.rs","byte_start":1129425,"byte_end":1129434,"line_start":70,"line_end":70,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7653},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/permutation_sequence.rs","byte_start":1129792,"byte_end":1129810,"line_start":83,"line_end":83,"column_start":12,"column_end":30},"name":"append_permutation","qualname":"<PermutationSequence<D>>::append_permutation","value":"fn (&mut self, i: usize, i2: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds the interchange of the row (or column) `i` with the row (or column) `i2` to this\n sequence of permutations.\n","sig":null,"attributes":[{"value":"/ Adds the interchange of the row (or column) `i` with the row (or column) `i2` to this","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/permutation_sequence.rs","byte_start":1129643,"byte_end":1129732,"line_start":80,"line_end":80,"column_start":5,"column_end":94}},{"value":"/ sequence of permutations.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/permutation_sequence.rs","byte_start":1129737,"byte_end":1129766,"line_start":81,"line_end":81,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/permutation_sequence.rs","byte_start":1129771,"byte_end":1129780,"line_start":82,"line_end":82,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7654},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/permutation_sequence.rs","byte_start":1130185,"byte_end":1130197,"line_start":96,"line_end":96,"column_start":12,"column_end":24},"name":"permute_rows","qualname":"<PermutationSequence<D>>::permute_rows","value":"fn <N, R2, C2, S2> (&self, rhs: &mut Matrix<N, R2, C2, S2>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Applies this sequence of permutations to the rows of `rhs`.\n","sig":null,"attributes":[{"value":"/ Applies this sequence of permutations to the rows of `rhs`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/permutation_sequence.rs","byte_start":1130096,"byte_end":1130159,"line_start":94,"line_end":94,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/permutation_sequence.rs","byte_start":1130164,"byte_end":1130173,"line_start":95,"line_end":95,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7659},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/permutation_sequence.rs","byte_start":1130538,"byte_end":1130554,"line_start":107,"line_end":107,"column_start":12,"column_end":28},"name":"inv_permute_rows","qualname":"<PermutationSequence<D>>::inv_permute_rows","value":"fn <N, R2, C2, S2> (&self, rhs: &mut Matrix<N, R2, C2, S2>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Applies this sequence of permutations in reverse to the rows of `rhs`.\n","sig":null,"attributes":[{"value":"/ Applies this sequence of permutations in reverse to the rows of `rhs`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/permutation_sequence.rs","byte_start":1130438,"byte_end":1130512,"line_start":105,"line_end":105,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/permutation_sequence.rs","byte_start":1130517,"byte_end":1130526,"line_start":106,"line_end":106,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7664},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/permutation_sequence.rs","byte_start":1130913,"byte_end":1130928,"line_start":119,"line_end":119,"column_start":12,"column_end":27},"name":"permute_columns","qualname":"<PermutationSequence<D>>::permute_columns","value":"fn <N, R2, C2, S2> (&self, rhs: &mut Matrix<N, R2, C2, S2>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Applies this sequence of permutations to the columns of `rhs`.\n","sig":null,"attributes":[{"value":"/ Applies this sequence of permutations to the columns of `rhs`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/permutation_sequence.rs","byte_start":1130821,"byte_end":1130887,"line_start":117,"line_end":117,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/permutation_sequence.rs","byte_start":1130892,"byte_end":1130901,"line_start":118,"line_end":118,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7669},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/permutation_sequence.rs","byte_start":1131275,"byte_end":1131294,"line_start":130,"line_end":130,"column_start":12,"column_end":31},"name":"inv_permute_columns","qualname":"<PermutationSequence<D>>::inv_permute_columns","value":"fn <N, R2, C2, S2> (&self, rhs: &mut Matrix<N, R2, C2, S2>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Applies this sequence of permutations in reverse to the columns of `rhs`.\n","sig":null,"attributes":[{"value":"/ Applies this sequence of permutations in reverse to the columns of `rhs`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/permutation_sequence.rs","byte_start":1131172,"byte_end":1131249,"line_start":128,"line_end":128,"column_start":5,"column_end":82}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/permutation_sequence.rs","byte_start":1131254,"byte_end":1131263,"line_start":129,"line_end":129,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7674},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/permutation_sequence.rs","byte_start":1131664,"byte_end":1131667,"line_start":143,"line_end":143,"column_start":12,"column_end":15},"name":"len","qualname":"<PermutationSequence<D>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The number of non-identity permutations applied by this sequence.\n","sig":null,"attributes":[{"value":"/ The number of non-identity permutations applied by this sequence.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/permutation_sequence.rs","byte_start":1131583,"byte_end":1131652,"line_start":142,"line_end":142,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":7675},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/permutation_sequence.rs","byte_start":1131808,"byte_end":1131819,"line_start":149,"line_end":149,"column_start":12,"column_end":23},"name":"determinant","qualname":"<PermutationSequence<D>>::determinant","value":"fn <N> (&self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The determinant of the matrix corresponding to this permutation.\n","sig":null,"attributes":[{"value":"/ The determinant of the matrix corresponding to this permutation.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/permutation_sequence.rs","byte_start":1131714,"byte_end":1131782,"line_start":147,"line_end":147,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/permutation_sequence.rs","byte_start":1131787,"byte_end":1131796,"line_start":148,"line_end":148,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":20948},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/qr.rs","byte_start":1133138,"byte_end":1133140,"line_start":32,"line_end":32,"column_start":12,"column_end":14},"name":"QR","qualname":"::linalg::qr::QR","value":"QR {  }","parent":null,"children":[{"krate":0,"index":20952},{"krate":0,"index":20953}],"decl_id":null,"docs":" The QR decomposition of a general matrix.\n","sig":null,"attributes":[{"value":"/ The QR decomposition of a general matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/qr.rs","byte_start":1132436,"byte_end":1132481,"line_start":15,"line_end":15,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":7711},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/qr.rs","byte_start":1133790,"byte_end":1133793,"line_start":53,"line_end":53,"column_start":12,"column_end":15},"name":"new","qualname":"<QR<N, R, C>>::new","value":"fn (mut matrix: MatrixMN<N, R, C>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the QR decomposition using householder reflections.\n","sig":null,"attributes":[{"value":"/ Computes the QR decomposition using householder reflections.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/qr.rs","byte_start":1133714,"byte_end":1133778,"line_start":52,"line_end":52,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":7712},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/qr.rs","byte_start":1134506,"byte_end":1134507,"line_start":78,"line_end":78,"column_start":12,"column_end":13},"name":"r","qualname":"<QR<N, R, C>>::r","value":"fn (&self) -> MatrixMN<N, DimMinimum<R, C>, C>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the upper trapezoidal submatrix `R` of this decomposition.\n","sig":null,"attributes":[{"value":"/ Retrieves the upper trapezoidal submatrix `R` of this decomposition.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/qr.rs","byte_start":1134408,"byte_end":1134480,"line_start":76,"line_end":76,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/qr.rs","byte_start":1134485,"byte_end":1134494,"line_start":77,"line_end":77,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7714},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/qr.rs","byte_start":1135038,"byte_end":1135046,"line_start":92,"line_end":92,"column_start":12,"column_end":20},"name":"unpack_r","qualname":"<QR<N, R, C>>::unpack_r","value":"fn (self) -> MatrixMN<N, DimMinimum<R, C>, C>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the upper trapezoidal submatrix `R` of this decomposition.","sig":null,"attributes":[{"value":"/ Retrieves the upper trapezoidal submatrix `R` of this decomposition.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/qr.rs","byte_start":1134871,"byte_end":1134943,"line_start":88,"line_end":88,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/qr.rs","byte_start":1134948,"byte_end":1134951,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ This is usually faster than `r` but consumes `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/qr.rs","byte_start":1134956,"byte_end":1135012,"line_start":90,"line_end":90,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/qr.rs","byte_start":1135017,"byte_end":1135026,"line_start":91,"line_end":91,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7716},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/qr.rs","byte_start":1135537,"byte_end":1135538,"line_start":104,"line_end":104,"column_start":12,"column_end":13},"name":"q","qualname":"<QR<N, R, C>>::q","value":"fn (&self) -> MatrixMN<N, R, DimMinimum<R, C>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the orthogonal matrix `Q` of this decomposition.\n","sig":null,"attributes":[{"value":"/ Computes the orthogonal matrix `Q` of this decomposition.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/qr.rs","byte_start":1135464,"byte_end":1135525,"line_start":103,"line_end":103,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":7717},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/qr.rs","byte_start":1136449,"byte_end":1136455,"line_start":128,"line_end":128,"column_start":12,"column_end":18},"name":"unpack","qualname":"<QR<N, R, C>>::unpack","value":"fn (self) -> (MatrixMN<N, R, DimMinimum<R, C>>, MatrixMN<N, DimMinimum<R, C>, C>)","parent":null,"children":[],"decl_id":null,"docs":" Unpacks this decomposition into its two matrix factors.\n","sig":null,"attributes":[{"value":"/ Unpacks this decomposition into its two matrix factors.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/qr.rs","byte_start":1136378,"byte_end":1136437,"line_start":127,"line_end":127,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":7718},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/qr.rs","byte_start":1136842,"byte_end":1136853,"line_start":143,"line_end":143,"column_start":12,"column_end":23},"name":"qr_internal","qualname":"<QR<N, R, C>>::qr_internal","value":"fn (&self) -> &MatrixMN<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7719},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/qr.rs","byte_start":1137017,"byte_end":1137025,"line_start":148,"line_end":148,"column_start":12,"column_end":20},"name":"q_tr_mul","qualname":"<QR<N, R, C>>::q_tr_mul","value":"fn <R2, C2, S2> (&self, rhs: &mut Matrix<N, R2, C2, S2>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Multiplies the provided matrix by the transpose of the `Q` matrix of this decomposition.\n","sig":null,"attributes":[{"value":"/ Multiplies the provided matrix by the transpose of the `Q` matrix of this decomposition.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/qr.rs","byte_start":1136913,"byte_end":1137005,"line_start":147,"line_end":147,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":7726},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/qr.rs","byte_start":1137859,"byte_end":1137864,"line_start":172,"line_end":172,"column_start":12,"column_end":17},"name":"solve","qualname":"<QR<N, D, D>>::solve","value":"fn <R2, C2, S2> (&self, b: &Matrix<N, R2, C2, S2>) -> Option<MatrixMN<N, R2, C2>>","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self * x = b`, where `x` is the unknown to be determined.","sig":null,"attributes":[{"value":"/ Solves the linear system `self * x = b`, where `x` is the unknown to be determined.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/qr.rs","byte_start":1137700,"byte_end":1137787,"line_start":169,"line_end":169,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/qr.rs","byte_start":1137792,"byte_end":1137795,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if `self` is not invertible.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/qr.rs","byte_start":1137800,"byte_end":1137847,"line_start":171,"line_end":171,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":7730},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/qr.rs","byte_start":1138511,"byte_end":1138520,"line_start":194,"line_end":194,"column_start":12,"column_end":21},"name":"solve_mut","qualname":"<QR<N, D, D>>::solve_mut","value":"fn <R2, C2, S2> (&self, b: &mut Matrix<N, R2, C2, S2>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self * x = b`, where `x` is the unknown to be determined.","sig":null,"attributes":[{"value":"/ Solves the linear system `self * x = b`, where `x` is the unknown to be determined.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/qr.rs","byte_start":1138276,"byte_end":1138363,"line_start":190,"line_end":190,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/qr.rs","byte_start":1138368,"byte_end":1138371,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ If the decomposed matrix is not invertible, this returns `false` and its input `b` is","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/qr.rs","byte_start":1138376,"byte_end":1138465,"line_start":192,"line_end":192,"column_start":5,"column_end":94}},{"value":"/ overwritten with garbage.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/qr.rs","byte_start":1138470,"byte_end":1138499,"line_start":193,"line_end":193,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":7738},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/qr.rs","byte_start":1140109,"byte_end":1140120,"line_start":251,"line_end":251,"column_start":12,"column_end":23},"name":"try_inverse","qualname":"<QR<N, D, D>>::try_inverse","value":"fn (&self) -> Option<MatrixN<N, D>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the inverse of the decomposed matrix.","sig":null,"attributes":[{"value":"/ Computes the inverse of the decomposed matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/qr.rs","byte_start":1139972,"byte_end":1140022,"line_start":248,"line_end":248,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/qr.rs","byte_start":1140027,"byte_end":1140030,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the decomposed matrix is not invertible.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/qr.rs","byte_start":1140035,"byte_end":1140097,"line_start":250,"line_end":250,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":7739},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/qr.rs","byte_start":1140641,"byte_end":1140654,"line_start":269,"line_end":269,"column_start":12,"column_end":25},"name":"is_invertible","qualname":"<QR<N, D, D>>::is_invertible","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates if the decomposed matrix is invertible.\n","sig":null,"attributes":[{"value":"/ Indicates if the decomposed matrix is invertible.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/qr.rs","byte_start":1140576,"byte_end":1140629,"line_start":268,"line_end":268,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":7745},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/qr.rs","byte_start":1141662,"byte_end":1141664,"line_start":303,"line_end":303,"column_start":12,"column_end":14},"name":"qr","qualname":"<Matrix<N, R, C, S>>::qr","value":"fn (self) -> QR<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Computes the QR decomposition of this matrix.\n","sig":null,"attributes":[{"value":"/ Computes the QR decomposition of this matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/qr.rs","byte_start":1141601,"byte_end":1141650,"line_start":302,"line_end":302,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":20964},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/schur.rs","byte_start":1142850,"byte_end":1142855,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"name":"Schur","qualname":"::linalg::schur::Schur","value":"Schur {  }","parent":null,"children":[{"krate":0,"index":20967},{"krate":0,"index":20968}],"decl_id":null,"docs":" Schur decomposition of a square matrix.","sig":null,"attributes":[{"value":"/ Schur decomposition of a square matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/schur.rs","byte_start":1142305,"byte_end":1142348,"line_start":19,"line_end":19,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/schur.rs","byte_start":1142349,"byte_end":1142352,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ If this is a real matrix, this will be a RealField Schur decomposition.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/schur.rs","byte_start":1142353,"byte_end":1142428,"line_start":21,"line_end":21,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":7781},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/schur.rs","byte_start":1143416,"byte_end":1143419,"line_start":58,"line_end":58,"column_start":12,"column_end":15},"name":"new","qualname":"<Schur<N, D>>::new","value":"fn (m: MatrixN<N, D>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the Schur decomposition of a square matrix.\n","sig":null,"attributes":[{"value":"/ Computes the Schur decomposition of a square matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/schur.rs","byte_start":1143348,"byte_end":1143404,"line_start":57,"line_end":57,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":7782},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/schur.rs","byte_start":1144100,"byte_end":1144107,"line_start":73,"line_end":73,"column_start":12,"column_end":19},"name":"try_new","qualname":"<Schur<N, D>>::try_new","value":"fn (m: MatrixN<N, D>, eps: N::RealField, max_niter: usize) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to compute the Schur decomposition of a square matrix.","sig":null,"attributes":[{"value":"/ Attempts to compute the Schur decomposition of a square matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/schur.rs","byte_start":1143529,"byte_end":1143596,"line_start":62,"line_end":62,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/schur.rs","byte_start":1143601,"byte_end":1143604,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ If only eigenvalues are needed, it is more efficient to call the matrix method","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/schur.rs","byte_start":1143609,"byte_end":1143691,"line_start":64,"line_end":64,"column_start":5,"column_end":87}},{"value":"/ `.eigenvalues()` instead.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/schur.rs","byte_start":1143696,"byte_end":1143725,"line_start":65,"line_end":65,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/schur.rs","byte_start":1143730,"byte_end":1143733,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/schur.rs","byte_start":1143738,"byte_end":1143753,"line_start":67,"line_end":67,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/schur.rs","byte_start":1143758,"byte_end":1143761,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ * `eps`       − tolerance used to determine when a value converged to 0.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/schur.rs","byte_start":1143766,"byte_end":1143844,"line_start":69,"line_end":69,"column_start":5,"column_end":81}},{"value":"/ * `max_niter` − maximum total number of iterations performed by the algorithm. If this","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/schur.rs","byte_start":1143849,"byte_end":1143941,"line_start":70,"line_end":70,"column_start":5,"column_end":95}},{"value":"/ number of iteration is exceeded, `None` is returned. If `niter == 0`, then the algorithm","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/schur.rs","byte_start":1143946,"byte_end":1144038,"line_start":71,"line_end":71,"column_start":5,"column_end":97}},{"value":"/ continues indefinitely until convergence.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/schur.rs","byte_start":1144043,"byte_end":1144088,"line_start":72,"line_end":72,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":7788},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/schur.rs","byte_start":1154014,"byte_end":1154020,"line_start":375,"line_end":375,"column_start":12,"column_end":18},"name":"unpack","qualname":"<Schur<N, D>>::unpack","value":"fn (self) -> (MatrixN<N, D>, MatrixN<N, D>)","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the unitary matrix `Q` and the upper-quasitriangular matrix `T` such that the\n decomposed matrix equals `Q * T * Q.transpose()`.\n","sig":null,"attributes":[{"value":"/ Retrieves the unitary matrix `Q` and the upper-quasitriangular matrix `T` such that the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/schur.rs","byte_start":1153853,"byte_end":1153944,"line_start":373,"line_end":373,"column_start":5,"column_end":96}},{"value":"/ decomposed matrix equals `Q * T * Q.transpose()`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/schur.rs","byte_start":1153949,"byte_end":1154002,"line_start":374,"line_end":374,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":7789},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/schur.rs","byte_start":1154233,"byte_end":1154244,"line_start":382,"line_end":382,"column_start":12,"column_end":23},"name":"eigenvalues","qualname":"<Schur<N, D>>::eigenvalues","value":"fn (&self) -> Option<VectorN<N, D>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the real eigenvalues of the decomposed matrix.","sig":null,"attributes":[{"value":"/ Computes the real eigenvalues of the decomposed matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/schur.rs","byte_start":1154099,"byte_end":1154158,"line_start":379,"line_end":379,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/schur.rs","byte_start":1154163,"byte_end":1154166,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ Return `None` if some eigenvalues are complex.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/schur.rs","byte_start":1154171,"byte_end":1154221,"line_start":381,"line_end":381,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":7790},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/schur.rs","byte_start":1154579,"byte_end":1154598,"line_start":392,"line_end":392,"column_start":12,"column_end":31},"name":"complex_eigenvalues","qualname":"<Schur<N, D>>::complex_eigenvalues","value":"fn (&self) -> VectorN<NumComplex<N>, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the complex eigenvalues of the decomposed matrix.\n","sig":null,"attributes":[{"value":"/ Computes the complex eigenvalues of the decomposed matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/schur.rs","byte_start":1154505,"byte_end":1154567,"line_start":391,"line_end":391,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":7805},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/schur.rs","byte_start":1158076,"byte_end":1158081,"line_start":502,"line_end":502,"column_start":12,"column_end":17},"name":"schur","qualname":"<SquareMatrix<N, D, S>>::schur","value":"fn (self) -> Schur<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the Schur decomposition of a square matrix.\n","sig":null,"attributes":[{"value":"/ Computes the Schur decomposition of a square matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/schur.rs","byte_start":1158008,"byte_end":1158064,"line_start":501,"line_end":501,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":7806},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/schur.rs","byte_start":1158725,"byte_end":1158734,"line_start":517,"line_end":517,"column_start":12,"column_end":21},"name":"try_schur","qualname":"<SquareMatrix<N, D, S>>::try_schur","value":"fn (self, eps: N::RealField, max_niter: usize) -> Option<Schur<N, D>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to compute the Schur decomposition of a square matrix.","sig":null,"attributes":[{"value":"/ Attempts to compute the Schur decomposition of a square matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/schur.rs","byte_start":1158154,"byte_end":1158221,"line_start":506,"line_end":506,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/schur.rs","byte_start":1158226,"byte_end":1158229,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ If only eigenvalues are needed, it is more efficient to call the matrix method","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/schur.rs","byte_start":1158234,"byte_end":1158316,"line_start":508,"line_end":508,"column_start":5,"column_end":87}},{"value":"/ `.eigenvalues()` instead.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/schur.rs","byte_start":1158321,"byte_end":1158350,"line_start":509,"line_end":509,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/schur.rs","byte_start":1158355,"byte_end":1158358,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/schur.rs","byte_start":1158363,"byte_end":1158378,"line_start":511,"line_end":511,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/schur.rs","byte_start":1158383,"byte_end":1158386,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ * `eps`       − tolerance used to determine when a value converged to 0.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/schur.rs","byte_start":1158391,"byte_end":1158469,"line_start":513,"line_end":513,"column_start":5,"column_end":81}},{"value":"/ * `max_niter` − maximum total number of iterations performed by the algorithm. If this","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/schur.rs","byte_start":1158474,"byte_end":1158566,"line_start":514,"line_end":514,"column_start":5,"column_end":95}},{"value":"/ number of iteration is exceeded, `None` is returned. If `niter == 0`, then the algorithm","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/schur.rs","byte_start":1158571,"byte_end":1158663,"line_start":515,"line_end":515,"column_start":5,"column_end":97}},{"value":"/ continues indefinitely until convergence.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/schur.rs","byte_start":1158668,"byte_end":1158713,"line_start":516,"line_end":516,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":7807},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/schur.rs","byte_start":1158928,"byte_end":1158939,"line_start":522,"line_end":522,"column_start":12,"column_end":23},"name":"eigenvalues","qualname":"<SquareMatrix<N, D, S>>::eigenvalues","value":"fn (&self) -> Option<VectorN<N, D>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the eigenvalues of this matrix.\n","sig":null,"attributes":[{"value":"/ Computes the eigenvalues of this matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/schur.rs","byte_start":1158872,"byte_end":1158916,"line_start":521,"line_end":521,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":7808},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/schur.rs","byte_start":1160122,"byte_end":1160141,"line_start":562,"line_end":562,"column_start":12,"column_end":31},"name":"complex_eigenvalues","qualname":"<SquareMatrix<N, D, S>>::complex_eigenvalues","value":"fn (&self) -> VectorN<NumComplex<N>, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the eigenvalues of this matrix.\n","sig":null,"attributes":[{"value":"/ Computes the eigenvalues of this matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/schur.rs","byte_start":1160066,"byte_end":1160110,"line_start":561,"line_end":561,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":7833},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1161417,"byte_end":1161439,"line_start":14,"line_end":14,"column_start":12,"column_end":34},"name":"solve_lower_triangular","qualname":"<SquareMatrix<N, D, S>>::solve_lower_triangular","value":"fn <R2, C2, S2> (&self, b: &Matrix<N, R2, C2, S2>) -> Option<MatrixMN<N, R2, C2>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the solution of the linear system `self . x = b` where `x` is the unknown and only\n the lower-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Computes the solution of the linear system `self . x = b` where `x` is the unknown and only","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1161203,"byte_end":1161298,"line_start":11,"line_end":11,"column_start":5,"column_end":100}},{"value":"/ the lower-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1161303,"byte_end":1161391,"line_start":12,"line_end":12,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1161396,"byte_end":1161405,"line_start":13,"line_end":13,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7837},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1162081,"byte_end":1162103,"line_start":34,"line_end":34,"column_start":12,"column_end":34},"name":"solve_upper_triangular","qualname":"<SquareMatrix<N, D, S>>::solve_upper_triangular","value":"fn <R2, C2, S2> (&self, b: &Matrix<N, R2, C2, S2>) -> Option<MatrixMN<N, R2, C2>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the solution of the linear system `self . x = b` where `x` is the unknown and only\n the upper-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Computes the solution of the linear system `self . x = b` where `x` is the unknown and only","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1161867,"byte_end":1161962,"line_start":31,"line_end":31,"column_start":5,"column_end":100}},{"value":"/ the upper-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1161967,"byte_end":1162055,"line_start":32,"line_end":32,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1162060,"byte_end":1162069,"line_start":33,"line_end":33,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7841},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1162713,"byte_end":1162739,"line_start":53,"line_end":53,"column_start":12,"column_end":38},"name":"solve_lower_triangular_mut","qualname":"<SquareMatrix<N, D, S>>::solve_lower_triangular_mut","value":"fn <R2, C2, S2> (&self, b: &mut Matrix<N, R2, C2, S2>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self . x = b` where `x` is the unknown and only the\n lower-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Solves the linear system `self . x = b` where `x` is the unknown and only the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1162531,"byte_end":1162612,"line_start":51,"line_end":51,"column_start":5,"column_end":86}},{"value":"/ lower-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1162617,"byte_end":1162701,"line_start":52,"line_end":52,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":7848},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1164213,"byte_end":1164249,"line_start":104,"line_end":104,"column_start":12,"column_end":48},"name":"solve_lower_triangular_with_diag_mut","qualname":"<SquareMatrix<N, D, S>>::solve_lower_triangular_with_diag_mut","value":"fn <R2, C2, S2> (&self, b: &mut Matrix<N, R2, C2, S2>, diag: N) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self . x = b` where `x` is the unknown and only the\n lower-triangular part of `self` is considered not-zero. The diagonal is never read as it is\n assumed to be equal to `diag`. Returns `false` and does not modify its inputs if `diag` is zero.\n","sig":null,"attributes":[{"value":"/ Solves the linear system `self . x = b` where `x` is the unknown and only the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1163915,"byte_end":1163996,"line_start":101,"line_end":101,"column_start":5,"column_end":86}},{"value":"/ lower-triangular part of `self` is considered not-zero. The diagonal is never read as it is","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1164001,"byte_end":1164096,"line_start":102,"line_end":102,"column_start":5,"column_end":100}},{"value":"/ assumed to be equal to `diag`. Returns `false` and does not modify its inputs if `diag` is zero.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1164101,"byte_end":1164201,"line_start":103,"line_end":103,"column_start":5,"column_end":105}}]},{"kind":"Method","id":{"krate":0,"index":7852},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1165116,"byte_end":1165142,"line_start":135,"line_end":135,"column_start":12,"column_end":38},"name":"solve_upper_triangular_mut","qualname":"<SquareMatrix<N, D, S>>::solve_upper_triangular_mut","value":"fn <R2, C2, S2> (&self, b: &mut Matrix<N, R2, C2, S2>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self . x = b` where `x` is the unknown and only the\n upper-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Solves the linear system `self . x = b` where `x` is the unknown and only the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1164934,"byte_end":1165015,"line_start":133,"line_end":133,"column_start":5,"column_end":86}},{"value":"/ upper-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1165020,"byte_end":1165104,"line_start":134,"line_end":134,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":7859},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1166550,"byte_end":1166575,"line_start":190,"line_end":190,"column_start":12,"column_end":37},"name":"tr_solve_lower_triangular","qualname":"<SquareMatrix<N, D, S>>::tr_solve_lower_triangular","value":"fn <R2, C2, S2> (&self, b: &Matrix<N, R2, C2, S2>) -> Option<MatrixMN<N, R2, C2>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the solution of the linear system `self.transpose() . x = b` where `x` is the unknown and only\n the lower-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Computes the solution of the linear system `self.transpose() . x = b` where `x` is the unknown and only","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1166324,"byte_end":1166431,"line_start":187,"line_end":187,"column_start":5,"column_end":112}},{"value":"/ the lower-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1166436,"byte_end":1166524,"line_start":188,"line_end":188,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1166529,"byte_end":1166538,"line_start":189,"line_end":189,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7863},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1167232,"byte_end":1167257,"line_start":210,"line_end":210,"column_start":12,"column_end":37},"name":"tr_solve_upper_triangular","qualname":"<SquareMatrix<N, D, S>>::tr_solve_upper_triangular","value":"fn <R2, C2, S2> (&self, b: &Matrix<N, R2, C2, S2>) -> Option<MatrixMN<N, R2, C2>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the solution of the linear system `self.transpose() . x = b` where `x` is the unknown and only\n the upper-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Computes the solution of the linear system `self.transpose() . x = b` where `x` is the unknown and only","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1167006,"byte_end":1167113,"line_start":207,"line_end":207,"column_start":5,"column_end":112}},{"value":"/ the upper-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1167118,"byte_end":1167206,"line_start":208,"line_end":208,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1167211,"byte_end":1167220,"line_start":209,"line_end":209,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7867},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1167882,"byte_end":1167911,"line_start":229,"line_end":229,"column_start":12,"column_end":41},"name":"tr_solve_lower_triangular_mut","qualname":"<SquareMatrix<N, D, S>>::tr_solve_lower_triangular_mut","value":"fn <R2, C2, S2> (&self, b: &mut Matrix<N, R2, C2, S2>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self.transpose() . x = b` where `x` is the unknown and only the\n lower-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Solves the linear system `self.transpose() . x = b` where `x` is the unknown and only the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1167688,"byte_end":1167781,"line_start":227,"line_end":227,"column_start":5,"column_end":98}},{"value":"/ lower-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1167786,"byte_end":1167870,"line_start":228,"line_end":228,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":7873},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1168604,"byte_end":1168633,"line_start":254,"line_end":254,"column_start":12,"column_end":41},"name":"tr_solve_upper_triangular_mut","qualname":"<SquareMatrix<N, D, S>>::tr_solve_upper_triangular_mut","value":"fn <R2, C2, S2> (&self, b: &mut Matrix<N, R2, C2, S2>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self.transpose() . x = b` where `x` is the unknown and only the\n upper-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Solves the linear system `self.transpose() . x = b` where `x` is the unknown and only the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1168410,"byte_end":1168503,"line_start":252,"line_end":252,"column_start":5,"column_end":98}},{"value":"/ upper-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1168508,"byte_end":1168592,"line_start":253,"line_end":253,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":7879},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1169356,"byte_end":1169381,"line_start":280,"line_end":280,"column_start":12,"column_end":37},"name":"ad_solve_lower_triangular","qualname":"<SquareMatrix<N, D, S>>::ad_solve_lower_triangular","value":"fn <R2, C2, S2> (&self, b: &Matrix<N, R2, C2, S2>) -> Option<MatrixMN<N, R2, C2>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the solution of the linear system `self.adjoint() . x = b` where `x` is the unknown and only\n the lower-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Computes the solution of the linear system `self.adjoint() . x = b` where `x` is the unknown and only","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1169132,"byte_end":1169237,"line_start":277,"line_end":277,"column_start":5,"column_end":110}},{"value":"/ the lower-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1169242,"byte_end":1169330,"line_start":278,"line_end":278,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1169335,"byte_end":1169344,"line_start":279,"line_end":279,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7883},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1170036,"byte_end":1170061,"line_start":300,"line_end":300,"column_start":12,"column_end":37},"name":"ad_solve_upper_triangular","qualname":"<SquareMatrix<N, D, S>>::ad_solve_upper_triangular","value":"fn <R2, C2, S2> (&self, b: &Matrix<N, R2, C2, S2>) -> Option<MatrixMN<N, R2, C2>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the solution of the linear system `self.adjoint() . x = b` where `x` is the unknown and only\n the upper-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Computes the solution of the linear system `self.adjoint() . x = b` where `x` is the unknown and only","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1169812,"byte_end":1169917,"line_start":297,"line_end":297,"column_start":5,"column_end":110}},{"value":"/ the upper-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1169922,"byte_end":1170010,"line_start":298,"line_end":298,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1170015,"byte_end":1170024,"line_start":299,"line_end":299,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7887},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1170684,"byte_end":1170713,"line_start":319,"line_end":319,"column_start":12,"column_end":41},"name":"ad_solve_lower_triangular_mut","qualname":"<SquareMatrix<N, D, S>>::ad_solve_lower_triangular_mut","value":"fn <R2, C2, S2> (&self, b: &mut Matrix<N, R2, C2, S2>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self.adjoint() . x = b` where `x` is the unknown and only the\n lower-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Solves the linear system `self.adjoint() . x = b` where `x` is the unknown and only the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1170492,"byte_end":1170583,"line_start":317,"line_end":317,"column_start":5,"column_end":96}},{"value":"/ lower-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1170588,"byte_end":1170672,"line_start":318,"line_end":318,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":7893},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1171417,"byte_end":1171446,"line_start":344,"line_end":344,"column_start":12,"column_end":41},"name":"ad_solve_upper_triangular_mut","qualname":"<SquareMatrix<N, D, S>>::ad_solve_upper_triangular_mut","value":"fn <R2, C2, S2> (&self, b: &mut Matrix<N, R2, C2, S2>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self.adjoint() . x = b` where `x` is the unknown and only the\n upper-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Solves the linear system `self.adjoint() . x = b` where `x` is the unknown and only the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1171225,"byte_end":1171316,"line_start":342,"line_end":342,"column_start":5,"column_end":96}},{"value":"/ upper-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1171321,"byte_end":1171405,"line_start":343,"line_end":343,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":7913},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1174093,"byte_end":1174125,"line_start":447,"line_end":447,"column_start":12,"column_end":44},"name":"solve_lower_triangular_unchecked","qualname":"<SquareMatrix<N, D, S>>::solve_lower_triangular_unchecked","value":"fn <R2, C2, S2> (&self, b: &Matrix<N, R2, C2, S2>) -> MatrixMN<N, R2, C2>","parent":null,"children":[],"decl_id":null,"docs":" Computes the solution of the linear system `self . x = b` where `x` is the unknown and only\n the lower-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Computes the solution of the linear system `self . x = b` where `x` is the unknown and only","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1173879,"byte_end":1173974,"line_start":444,"line_end":444,"column_start":5,"column_end":100}},{"value":"/ the lower-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1173979,"byte_end":1174067,"line_start":445,"line_end":445,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1174072,"byte_end":1174081,"line_start":446,"line_end":446,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7917},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1174711,"byte_end":1174743,"line_start":464,"line_end":464,"column_start":12,"column_end":44},"name":"solve_upper_triangular_unchecked","qualname":"<SquareMatrix<N, D, S>>::solve_upper_triangular_unchecked","value":"fn <R2, C2, S2> (&self, b: &Matrix<N, R2, C2, S2>) -> MatrixMN<N, R2, C2>","parent":null,"children":[],"decl_id":null,"docs":" Computes the solution of the linear system `self . x = b` where `x` is the unknown and only\n the upper-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Computes the solution of the linear system `self . x = b` where `x` is the unknown and only","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1174497,"byte_end":1174592,"line_start":461,"line_end":461,"column_start":5,"column_end":100}},{"value":"/ the upper-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1174597,"byte_end":1174685,"line_start":462,"line_end":462,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1174690,"byte_end":1174699,"line_start":463,"line_end":463,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7921},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1175297,"byte_end":1175333,"line_start":480,"line_end":480,"column_start":12,"column_end":48},"name":"solve_lower_triangular_unchecked_mut","qualname":"<SquareMatrix<N, D, S>>::solve_lower_triangular_unchecked_mut","value":"fn <R2, C2, S2> (&self, b: &mut Matrix<N, R2, C2, S2>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self . x = b` where `x` is the unknown and only the\n lower-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Solves the linear system `self . x = b` where `x` is the unknown and only the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1175115,"byte_end":1175196,"line_start":478,"line_end":478,"column_start":5,"column_end":86}},{"value":"/ lower-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1175201,"byte_end":1175285,"line_start":479,"line_end":479,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":7928},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1176614,"byte_end":1176660,"line_start":517,"line_end":517,"column_start":12,"column_end":58},"name":"solve_lower_triangular_with_diag_unchecked_mut","qualname":"<SquareMatrix<N, D, S>>::solve_lower_triangular_with_diag_unchecked_mut","value":"fn <R2, C2, S2> (&self, b: &mut Matrix<N, R2, C2, S2>, diag: N) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self . x = b` where `x` is the unknown and only the\n lower-triangular part of `self` is considered not-zero. The diagonal is never read as it is\n assumed to be equal to `diag`. Returns `false` and does not modify its inputs if `diag` is zero.\n","sig":null,"attributes":[{"value":"/ Solves the linear system `self . x = b` where `x` is the unknown and only the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1176316,"byte_end":1176397,"line_start":514,"line_end":514,"column_start":5,"column_end":86}},{"value":"/ lower-triangular part of `self` is considered not-zero. The diagonal is never read as it is","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1176402,"byte_end":1176497,"line_start":515,"line_end":515,"column_start":5,"column_end":100}},{"value":"/ assumed to be equal to `diag`. Returns `false` and does not modify its inputs if `diag` is zero.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1176502,"byte_end":1176602,"line_start":516,"line_end":516,"column_start":5,"column_end":105}}]},{"kind":"Method","id":{"krate":0,"index":7932},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1177436,"byte_end":1177472,"line_start":541,"line_end":541,"column_start":12,"column_end":48},"name":"solve_upper_triangular_unchecked_mut","qualname":"<SquareMatrix<N, D, S>>::solve_upper_triangular_unchecked_mut","value":"fn <R2, C2, S2> (&self, b: &mut Matrix<N, R2, C2, S2>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self . x = b` where `x` is the unknown and only the\n upper-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Solves the linear system `self . x = b` where `x` is the unknown and only the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1177254,"byte_end":1177335,"line_start":539,"line_end":539,"column_start":5,"column_end":86}},{"value":"/ upper-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1177340,"byte_end":1177424,"line_start":540,"line_end":540,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":7939},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1178686,"byte_end":1178721,"line_start":582,"line_end":582,"column_start":12,"column_end":47},"name":"tr_solve_lower_triangular_unchecked","qualname":"<SquareMatrix<N, D, S>>::tr_solve_lower_triangular_unchecked","value":"fn <R2, C2, S2> (&self, b: &Matrix<N, R2, C2, S2>) -> MatrixMN<N, R2, C2>","parent":null,"children":[],"decl_id":null,"docs":" Computes the solution of the linear system `self.transpose() . x = b` where `x` is the unknown and only\n the lower-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Computes the solution of the linear system `self.transpose() . x = b` where `x` is the unknown and only","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1178460,"byte_end":1178567,"line_start":579,"line_end":579,"column_start":5,"column_end":112}},{"value":"/ the lower-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1178572,"byte_end":1178660,"line_start":580,"line_end":580,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1178665,"byte_end":1178674,"line_start":581,"line_end":581,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7943},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1179322,"byte_end":1179357,"line_start":599,"line_end":599,"column_start":12,"column_end":47},"name":"tr_solve_upper_triangular_unchecked","qualname":"<SquareMatrix<N, D, S>>::tr_solve_upper_triangular_unchecked","value":"fn <R2, C2, S2> (&self, b: &Matrix<N, R2, C2, S2>) -> MatrixMN<N, R2, C2>","parent":null,"children":[],"decl_id":null,"docs":" Computes the solution of the linear system `self.transpose() . x = b` where `x` is the unknown and only\n the upper-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Computes the solution of the linear system `self.transpose() . x = b` where `x` is the unknown and only","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1179096,"byte_end":1179203,"line_start":596,"line_end":596,"column_start":5,"column_end":112}},{"value":"/ the upper-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1179208,"byte_end":1179296,"line_start":597,"line_end":597,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1179301,"byte_end":1179310,"line_start":598,"line_end":598,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7947},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1179926,"byte_end":1179965,"line_start":615,"line_end":615,"column_start":12,"column_end":51},"name":"tr_solve_lower_triangular_unchecked_mut","qualname":"<SquareMatrix<N, D, S>>::tr_solve_lower_triangular_unchecked_mut","value":"fn <R2, C2, S2> (&self, b: &mut Matrix<N, R2, C2, S2>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self.transpose() . x = b` where `x` is the unknown and only the\n lower-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Solves the linear system `self.transpose() . x = b` where `x` is the unknown and only the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1179732,"byte_end":1179825,"line_start":613,"line_end":613,"column_start":5,"column_end":98}},{"value":"/ lower-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1179830,"byte_end":1179914,"line_start":614,"line_end":614,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":7953},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1180566,"byte_end":1180605,"line_start":633,"line_end":633,"column_start":12,"column_end":51},"name":"tr_solve_upper_triangular_unchecked_mut","qualname":"<SquareMatrix<N, D, S>>::tr_solve_upper_triangular_unchecked_mut","value":"fn <R2, C2, S2> (&self, b: &mut Matrix<N, R2, C2, S2>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self.transpose() . x = b` where `x` is the unknown and only the\n upper-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Solves the linear system `self.transpose() . x = b` where `x` is the unknown and only the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1180372,"byte_end":1180465,"line_start":631,"line_end":631,"column_start":5,"column_end":98}},{"value":"/ upper-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1180470,"byte_end":1180554,"line_start":632,"line_end":632,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":7959},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1181236,"byte_end":1181271,"line_start":652,"line_end":652,"column_start":12,"column_end":47},"name":"ad_solve_lower_triangular_unchecked","qualname":"<SquareMatrix<N, D, S>>::ad_solve_lower_triangular_unchecked","value":"fn <R2, C2, S2> (&self, b: &Matrix<N, R2, C2, S2>) -> MatrixMN<N, R2, C2>","parent":null,"children":[],"decl_id":null,"docs":" Computes the solution of the linear system `self.adjoint() . x = b` where `x` is the unknown and only\n the lower-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Computes the solution of the linear system `self.adjoint() . x = b` where `x` is the unknown and only","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1181012,"byte_end":1181117,"line_start":649,"line_end":649,"column_start":5,"column_end":110}},{"value":"/ the lower-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1181122,"byte_end":1181210,"line_start":650,"line_end":650,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1181215,"byte_end":1181224,"line_start":651,"line_end":651,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7963},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1181870,"byte_end":1181905,"line_start":669,"line_end":669,"column_start":12,"column_end":47},"name":"ad_solve_upper_triangular_unchecked","qualname":"<SquareMatrix<N, D, S>>::ad_solve_upper_triangular_unchecked","value":"fn <R2, C2, S2> (&self, b: &Matrix<N, R2, C2, S2>) -> MatrixMN<N, R2, C2>","parent":null,"children":[],"decl_id":null,"docs":" Computes the solution of the linear system `self.adjoint() . x = b` where `x` is the unknown and only\n the upper-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Computes the solution of the linear system `self.adjoint() . x = b` where `x` is the unknown and only","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1181646,"byte_end":1181751,"line_start":666,"line_end":666,"column_start":5,"column_end":110}},{"value":"/ the upper-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1181756,"byte_end":1181844,"line_start":667,"line_end":667,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1181849,"byte_end":1181858,"line_start":668,"line_end":668,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7967},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1182472,"byte_end":1182511,"line_start":685,"line_end":685,"column_start":12,"column_end":51},"name":"ad_solve_lower_triangular_unchecked_mut","qualname":"<SquareMatrix<N, D, S>>::ad_solve_lower_triangular_unchecked_mut","value":"fn <R2, C2, S2> (&self, b: &mut Matrix<N, R2, C2, S2>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self.adjoint() . x = b` where `x` is the unknown and only the\n lower-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Solves the linear system `self.adjoint() . x = b` where `x` is the unknown and only the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1182280,"byte_end":1182371,"line_start":683,"line_end":683,"column_start":5,"column_end":96}},{"value":"/ lower-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1182376,"byte_end":1182460,"line_start":684,"line_end":684,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":7973},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1183128,"byte_end":1183167,"line_start":703,"line_end":703,"column_start":12,"column_end":51},"name":"ad_solve_upper_triangular_unchecked_mut","qualname":"<SquareMatrix<N, D, S>>::ad_solve_upper_triangular_unchecked_mut","value":"fn <R2, C2, S2> (&self, b: &mut Matrix<N, R2, C2, S2>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self.adjoint() . x = b` where `x` is the unknown and only the\n upper-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Solves the linear system `self.adjoint() . x = b` where `x` is the unknown and only the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1182936,"byte_end":1183027,"line_start":701,"line_end":701,"column_start":5,"column_end":96}},{"value":"/ upper-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1183032,"byte_end":1183116,"line_start":702,"line_end":702,"column_start":5,"column_end":89}}]},{"kind":"Struct","id":{"krate":0,"index":20977},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/svd.rs","byte_start":1186787,"byte_end":1186790,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"SVD","qualname":"::linalg::svd::SVD","value":"SVD { u, v_t, singular_values }","parent":null,"children":[{"krate":0,"index":20981},{"krate":0,"index":20982},{"krate":0,"index":20983}],"decl_id":null,"docs":" Singular Value Decomposition of a general matrix.\n","sig":null,"attributes":[{"value":"/ Singular Value Decomposition of a general matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/svd.rs","byte_start":1185698,"byte_end":1185751,"line_start":18,"line_end":18,"column_start":1,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":20981},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/svd.rs","byte_start":1187050,"byte_end":1187051,"line_start":50,"line_end":50,"column_start":9,"column_end":10},"name":"u","qualname":"::linalg::svd::SVD::u","value":"std::option::Option<base::matrix::Matrix<N, R, <R as base::dimension::DimMin<C>>::Output, <base::default_allocator::DefaultAllocator as base::allocator::Allocator<N, R, <R as base::dimension::DimMin<C>>::Output>>::Buffer>>","parent":{"krate":0,"index":20977},"children":[],"decl_id":null,"docs":" The left-singular vectors `U` of this SVD.\n","sig":null,"attributes":[{"value":"/ The left-singular vectors `U` of this SVD.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/svd.rs","byte_start":1186995,"byte_end":1187041,"line_start":49,"line_end":49,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":20982},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/svd.rs","byte_start":1187157,"byte_end":1187160,"line_start":52,"line_end":52,"column_start":9,"column_end":12},"name":"v_t","qualname":"::linalg::svd::SVD::v_t","value":"std::option::Option<base::matrix::Matrix<N, <R as base::dimension::DimMin<C>>::Output, C, <base::default_allocator::DefaultAllocator as base::allocator::Allocator<N, <R as base::dimension::DimMin<C>>::Output, C>>::Buffer>>","parent":{"krate":0,"index":20977},"children":[],"decl_id":null,"docs":" The right-singular vectors `V^t` of this SVD.\n","sig":null,"attributes":[{"value":"/ The right-singular vectors `V^t` of this SVD.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/svd.rs","byte_start":1187099,"byte_end":1187148,"line_start":51,"line_end":51,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":20983},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/svd.rs","byte_start":1187253,"byte_end":1187268,"line_start":54,"line_end":54,"column_start":9,"column_end":24},"name":"singular_values","qualname":"::linalg::svd::SVD::singular_values","value":"base::matrix::Matrix<<N as simba::scalar::complex::ComplexField>::RealField, <R as base::dimension::DimMin<C>>::Output, base::dimension::U1, <base::default_allocator::DefaultAllocator as base::allocator::Allocator<<N as simba::scalar::complex::ComplexField>::RealField, <R as base::dimension::DimMin<C>>::Output>>::Buffer>","parent":{"krate":0,"index":20977},"children":[],"decl_id":null,"docs":" The singular values of this SVD.\n","sig":null,"attributes":[{"value":"/ The singular values of this SVD.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/svd.rs","byte_start":1187208,"byte_end":1187244,"line_start":53,"line_end":53,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":8028},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/svd.rs","byte_start":1188290,"byte_end":1188293,"line_start":82,"line_end":82,"column_start":12,"column_end":15},"name":"new","qualname":"<SVD<N, R, C>>::new","value":"fn (matrix: MatrixMN<N, R, C>, compute_u: bool, compute_v: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the Singular Value Decomposition of `matrix` using implicit shift.\n","sig":null,"attributes":[{"value":"/ Computes the Singular Value Decomposition of `matrix` using implicit shift.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/svd.rs","byte_start":1188199,"byte_end":1188278,"line_start":81,"line_end":81,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":8029},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/svd.rs","byte_start":1189213,"byte_end":1189220,"line_start":103,"line_end":103,"column_start":12,"column_end":19},"name":"try_new","qualname":"<SVD<N, R, C>>::try_new","value":"fn (mut matrix: MatrixMN<N, R, C>, compute_u: bool, compute_v: bool, eps: N::RealField, max_niter: usize) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to compute the Singular Value Decomposition of `matrix` using implicit shift.","sig":null,"attributes":[{"value":"/ Attempts to compute the Singular Value Decomposition of `matrix` using implicit shift.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/svd.rs","byte_start":1188553,"byte_end":1188643,"line_start":93,"line_end":93,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/svd.rs","byte_start":1188648,"byte_end":1188651,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/svd.rs","byte_start":1188656,"byte_end":1188671,"line_start":95,"line_end":95,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/svd.rs","byte_start":1188676,"byte_end":1188679,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ * `compute_u` − set this to `true` to enable the computation of left-singular vectors.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/svd.rs","byte_start":1188684,"byte_end":1188776,"line_start":97,"line_end":97,"column_start":5,"column_end":95}},{"value":"/ * `compute_v` − set this to `true` to enable the computation of right-singular vectors.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/svd.rs","byte_start":1188781,"byte_end":1188874,"line_start":98,"line_end":98,"column_start":5,"column_end":96}},{"value":"/ * `eps`       − tolerance used to determine when a value converged to 0.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/svd.rs","byte_start":1188879,"byte_end":1188957,"line_start":99,"line_end":99,"column_start":5,"column_end":81}},{"value":"/ * `max_niter` − maximum total number of iterations performed by the algorithm. If this","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/svd.rs","byte_start":1188962,"byte_end":1189054,"line_start":100,"line_end":100,"column_start":5,"column_end":95}},{"value":"/ number of iteration is exceeded, `None` is returned. If `niter == 0`, then the algorithm","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/svd.rs","byte_start":1189059,"byte_end":1189151,"line_start":101,"line_end":101,"column_start":5,"column_end":97}},{"value":"/ continues indefinitely until convergence.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/svd.rs","byte_start":1189156,"byte_end":1189201,"line_start":102,"line_end":102,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":8035},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/svd.rs","byte_start":1203054,"byte_end":1203058,"line_start":507,"line_end":507,"column_start":12,"column_end":16},"name":"rank","qualname":"<SVD<N, R, C>>::rank","value":"fn (&self, eps: N::RealField) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes the rank of the decomposed matrix, i.e., the number of singular values greater\n than `eps`.\n","sig":null,"attributes":[{"value":"/ Computes the rank of the decomposed matrix, i.e., the number of singular values greater","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/svd.rs","byte_start":1202931,"byte_end":1203022,"line_start":505,"line_end":505,"column_start":5,"column_end":96}},{"value":"/ than `eps`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/svd.rs","byte_start":1203027,"byte_end":1203042,"line_start":506,"line_end":506,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":8037},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/svd.rs","byte_start":1203551,"byte_end":1203560,"line_start":520,"line_end":520,"column_start":12,"column_end":21},"name":"recompose","qualname":"<SVD<N, R, C>>::recompose","value":"fn (self) -> Result<MatrixMN<N, R, C>, &'static str>","parent":null,"children":[],"decl_id":null,"docs":" Rebuild the original matrix.","sig":null,"attributes":[{"value":"/ Rebuild the original matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/svd.rs","byte_start":1203300,"byte_end":1203332,"line_start":515,"line_end":515,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/svd.rs","byte_start":1203337,"byte_end":1203340,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ This is useful if some of the singular values have been manually modified.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/svd.rs","byte_start":1203345,"byte_end":1203423,"line_start":517,"line_end":517,"column_start":5,"column_end":83}},{"value":"/ Returns `Err` if the right- and left- singular vectors have not been","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/svd.rs","byte_start":1203428,"byte_end":1203500,"line_start":518,"line_end":518,"column_start":5,"column_end":77}},{"value":"/ computed at construction-time.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/svd.rs","byte_start":1203505,"byte_end":1203539,"line_start":519,"line_end":519,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":8038},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/svd.rs","byte_start":1204441,"byte_end":1204455,"line_start":540,"line_end":540,"column_start":12,"column_end":26},"name":"pseudo_inverse","qualname":"<SVD<N, R, C>>::pseudo_inverse","value":"fn (mut self, eps: N::RealField) -> Result<MatrixMN<N, C, R>, &'static str>","parent":null,"children":[],"decl_id":null,"docs":" Computes the pseudo-inverse of the decomposed matrix.","sig":null,"attributes":[{"value":"/ Computes the pseudo-inverse of the decomposed matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/svd.rs","byte_start":1204179,"byte_end":1204236,"line_start":535,"line_end":535,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/svd.rs","byte_start":1204241,"byte_end":1204244,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ Any singular value smaller than `eps` is assumed to be zero.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/svd.rs","byte_start":1204249,"byte_end":1204313,"line_start":537,"line_end":537,"column_start":5,"column_end":69}},{"value":"/ Returns `Err` if the right- and left- singular vectors have not","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/svd.rs","byte_start":1204318,"byte_end":1204385,"line_start":538,"line_end":538,"column_start":5,"column_end":72}},{"value":"/ been computed at construction-time.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/svd.rs","byte_start":1204390,"byte_end":1204429,"line_start":539,"line_end":539,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":8040},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/svd.rs","byte_start":1205479,"byte_end":1205484,"line_start":566,"line_end":566,"column_start":12,"column_end":17},"name":"solve","qualname":"<SVD<N, R, C>>::solve","value":"fn <R2, C2, S2> (&self, b: &Matrix<N, R2, C2, S2>, eps: N::RealField) -> Result<MatrixMN<N, C, C2>, &'static str>","parent":null,"children":[],"decl_id":null,"docs":" Solves the system `self * x = b` where `self` is the decomposed matrix and `x` the unknown.","sig":null,"attributes":[{"value":"/ Solves the system `self * x = b` where `self` is the decomposed matrix and `x` the unknown.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/svd.rs","byte_start":1205126,"byte_end":1205221,"line_start":561,"line_end":561,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/svd.rs","byte_start":1205226,"byte_end":1205229,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ Any singular value smaller than `eps` is assumed to be zero.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/svd.rs","byte_start":1205234,"byte_end":1205298,"line_start":563,"line_end":563,"column_start":5,"column_end":69}},{"value":"/ Returns `Err` if the singular vectors `U` and `V` have not been computed.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/svd.rs","byte_start":1205303,"byte_end":1205380,"line_start":564,"line_end":564,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":8049},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/svd.rs","byte_start":1207525,"byte_end":1207528,"line_start":620,"line_end":620,"column_start":12,"column_end":15},"name":"svd","qualname":"<Matrix<N, R, C, S>>::svd","value":"fn (self, compute_u: bool, compute_v: bool) -> SVD<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Computes the Singular Value Decomposition using implicit shift.\n","sig":null,"attributes":[{"value":"/ Computes the Singular Value Decomposition using implicit shift.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/svd.rs","byte_start":1207446,"byte_end":1207513,"line_start":619,"line_end":619,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":8050},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/svd.rs","byte_start":1208316,"byte_end":1208323,"line_start":634,"line_end":634,"column_start":12,"column_end":19},"name":"try_svd","qualname":"<Matrix<N, R, C, S>>::try_svd","value":"fn (self, compute_u: bool, compute_v: bool, eps: N::RealField, max_niter: usize) -> Option<SVD<N, R, C>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to compute the Singular Value Decomposition of `matrix` using implicit shift.","sig":null,"attributes":[{"value":"/ Attempts to compute the Singular Value Decomposition of `matrix` using implicit shift.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/svd.rs","byte_start":1207656,"byte_end":1207746,"line_start":624,"line_end":624,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/svd.rs","byte_start":1207751,"byte_end":1207754,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/svd.rs","byte_start":1207759,"byte_end":1207774,"line_start":626,"line_end":626,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/svd.rs","byte_start":1207779,"byte_end":1207782,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ * `compute_u` − set this to `true` to enable the computation of left-singular vectors.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/svd.rs","byte_start":1207787,"byte_end":1207879,"line_start":628,"line_end":628,"column_start":5,"column_end":95}},{"value":"/ * `compute_v` − set this to `true` to enable the computation of right-singular vectors.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/svd.rs","byte_start":1207884,"byte_end":1207977,"line_start":629,"line_end":629,"column_start":5,"column_end":96}},{"value":"/ * `eps`       − tolerance used to determine when a value converged to 0.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/svd.rs","byte_start":1207982,"byte_end":1208060,"line_start":630,"line_end":630,"column_start":5,"column_end":81}},{"value":"/ * `max_niter` − maximum total number of iterations performed by the algorithm. If this","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/svd.rs","byte_start":1208065,"byte_end":1208157,"line_start":631,"line_end":631,"column_start":5,"column_end":95}},{"value":"/ number of iteration is exceeded, `None` is returned. If `niter == 0`, then the algorithm","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/svd.rs","byte_start":1208162,"byte_end":1208254,"line_start":632,"line_end":632,"column_start":5,"column_end":97}},{"value":"/ continues indefinitely until convergence.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/svd.rs","byte_start":1208259,"byte_end":1208304,"line_start":633,"line_end":633,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":8051},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/svd.rs","byte_start":1208623,"byte_end":1208638,"line_start":645,"line_end":645,"column_start":12,"column_end":27},"name":"singular_values","qualname":"<Matrix<N, R, C, S>>::singular_values","value":"fn (&self) -> VectorN<N::RealField, DimMinimum<R, C>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the singular values of this matrix.\n","sig":null,"attributes":[{"value":"/ Computes the singular values of this matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/svd.rs","byte_start":1208563,"byte_end":1208611,"line_start":644,"line_end":644,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":8052},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/svd.rs","byte_start":1208893,"byte_end":1208897,"line_start":652,"line_end":652,"column_start":12,"column_end":16},"name":"rank","qualname":"<Matrix<N, R, C, S>>::rank","value":"fn (&self, eps: N::RealField) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes the rank of this matrix.","sig":null,"attributes":[{"value":"/ Computes the rank of this matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/svd.rs","byte_start":1208769,"byte_end":1208806,"line_start":649,"line_end":649,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/svd.rs","byte_start":1208811,"byte_end":1208814,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ All singular values below `eps` are considered equal to 0.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/svd.rs","byte_start":1208819,"byte_end":1208881,"line_start":651,"line_end":651,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":8053},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/svd.rs","byte_start":1209164,"byte_end":1209178,"line_start":660,"line_end":660,"column_start":12,"column_end":26},"name":"pseudo_inverse","qualname":"<Matrix<N, R, C, S>>::pseudo_inverse","value":"fn (self, eps: N::RealField) -> Result<MatrixMN<N, C, R>, &'static str>","parent":null,"children":[],"decl_id":null,"docs":" Computes the pseudo-inverse of this matrix.","sig":null,"attributes":[{"value":"/ Computes the pseudo-inverse of this matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/svd.rs","byte_start":1209030,"byte_end":1209077,"line_start":657,"line_end":657,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/svd.rs","byte_start":1209082,"byte_end":1209085,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ All singular values below `eps` are considered equal to 0.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/svd.rs","byte_start":1209090,"byte_end":1209152,"line_start":659,"line_end":659,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":20994},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_eigen.rs","byte_start":1212039,"byte_end":1212053,"line_start":33,"line_end":33,"column_start":12,"column_end":26},"name":"SymmetricEigen","qualname":"::linalg::symmetric_eigen::SymmetricEigen","value":"SymmetricEigen { eigenvectors, eigenvalues }","parent":null,"children":[{"krate":0,"index":20997},{"krate":0,"index":20998}],"decl_id":null,"docs":" Eigendecomposition of a symmetric matrix.\n","sig":null,"attributes":[{"value":"/ Eigendecomposition of a symmetric matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_eigen.rs","byte_start":1211361,"byte_end":1211406,"line_start":16,"line_end":16,"column_start":1,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":20997},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_eigen.rs","byte_start":1212217,"byte_end":1212229,"line_start":38,"line_end":38,"column_start":9,"column_end":21},"name":"eigenvectors","qualname":"::linalg::symmetric_eigen::SymmetricEigen::eigenvectors","value":"base::matrix::Matrix<N, D, D, <base::default_allocator::DefaultAllocator as base::allocator::Allocator<N, D, D>>::Buffer>","parent":{"krate":0,"index":20994},"children":[],"decl_id":null,"docs":" The eigenvectors of the decomposed matrix.\n","sig":null,"attributes":[{"value":"/ The eigenvectors of the decomposed matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_eigen.rs","byte_start":1212162,"byte_end":1212208,"line_start":37,"line_end":37,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":20998},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_eigen.rs","byte_start":1212314,"byte_end":1212325,"line_start":41,"line_end":41,"column_start":9,"column_end":20},"name":"eigenvalues","qualname":"::linalg::symmetric_eigen::SymmetricEigen::eigenvalues","value":"base::matrix::Matrix<<N as simba::scalar::complex::ComplexField>::RealField, D, base::dimension::U1, <base::default_allocator::DefaultAllocator as base::allocator::Allocator<<N as simba::scalar::complex::ComplexField>::RealField, D>>::Buffer>","parent":{"krate":0,"index":20994},"children":[],"decl_id":null,"docs":" The unsorted eigenvalues of the decomposed matrix.\n","sig":null,"attributes":[{"value":"/ The unsorted eigenvalues of the decomposed matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_eigen.rs","byte_start":1212251,"byte_end":1212305,"line_start":40,"line_end":40,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":8083},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_eigen.rs","byte_start":1212860,"byte_end":1212863,"line_start":59,"line_end":59,"column_start":12,"column_end":15},"name":"new","qualname":"<SymmetricEigen<N, D>>::new","value":"fn (m: MatrixN<N, D>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the eigendecomposition of the given symmetric matrix.","sig":null,"attributes":[{"value":"/ Computes the eigendecomposition of the given symmetric matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_eigen.rs","byte_start":1212693,"byte_end":1212759,"line_start":56,"line_end":56,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_eigen.rs","byte_start":1212764,"byte_end":1212767,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ Only the lower-triangular parts (including its diagonal) of `m` is read.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_eigen.rs","byte_start":1212772,"byte_end":1212848,"line_start":58,"line_end":58,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":8084},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_eigen.rs","byte_start":1213688,"byte_end":1213695,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"try_new","qualname":"<SymmetricEigen<N, D>>::try_new","value":"fn (m: MatrixN<N, D>, eps: N::RealField, max_niter: usize) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes the eigendecomposition of the given symmetric matrix with user-specified\n convergence parameters.","sig":null,"attributes":[{"value":"/ Computes the eigendecomposition of the given symmetric matrix with user-specified","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_eigen.rs","byte_start":1213108,"byte_end":1213193,"line_start":67,"line_end":67,"column_start":5,"column_end":90}},{"value":"/ convergence parameters.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_eigen.rs","byte_start":1213198,"byte_end":1213225,"line_start":68,"line_end":68,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_eigen.rs","byte_start":1213230,"byte_end":1213233,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Only the lower-triangular part (including its diagonal) of `m` is read.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_eigen.rs","byte_start":1213238,"byte_end":1213313,"line_start":70,"line_end":70,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_eigen.rs","byte_start":1213318,"byte_end":1213321,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_eigen.rs","byte_start":1213326,"byte_end":1213341,"line_start":72,"line_end":72,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_eigen.rs","byte_start":1213346,"byte_end":1213349,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ * `eps`       − tolerance used to determine when a value converged to 0.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_eigen.rs","byte_start":1213354,"byte_end":1213432,"line_start":74,"line_end":74,"column_start":5,"column_end":81}},{"value":"/ * `max_niter` − maximum total number of iterations performed by the algorithm. If this","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_eigen.rs","byte_start":1213437,"byte_end":1213529,"line_start":75,"line_end":75,"column_start":5,"column_end":95}},{"value":"/ number of iteration is exceeded, `None` is returned. If `niter == 0`, then the algorithm","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_eigen.rs","byte_start":1213534,"byte_end":1213626,"line_start":76,"line_end":76,"column_start":5,"column_end":97}},{"value":"/ continues indefinitely until convergence.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_eigen.rs","byte_start":1213631,"byte_end":1213676,"line_start":77,"line_end":77,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":8088},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_eigen.rs","byte_start":1219676,"byte_end":1219685,"line_start":271,"line_end":271,"column_start":12,"column_end":21},"name":"recompose","qualname":"<SymmetricEigen<N, D>>::recompose","value":"fn (&self) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Rebuild the original matrix.","sig":null,"attributes":[{"value":"/ Rebuild the original matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_eigen.rs","byte_start":1219545,"byte_end":1219577,"line_start":268,"line_end":268,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_eigen.rs","byte_start":1219582,"byte_end":1219585,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ This is useful if some of the eigenvalues have been manually modified.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_eigen.rs","byte_start":1219590,"byte_end":1219664,"line_start":270,"line_end":270,"column_start":5,"column_end":79}}]},{"kind":"Function","id":{"krate":0,"index":8089},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_eigen.rs","byte_start":1220181,"byte_end":1220196,"line_start":288,"line_end":288,"column_start":8,"column_end":23},"name":"wilkinson_shift","qualname":"::linalg::symmetric_eigen::wilkinson_shift","value":"fn <N> (tmm: N, tnn: N, tmn: N) -> N","parent":null,"children":[],"decl_id":null,"docs":" Computes the wilkinson shift, i.e., the 2x2 symmetric matrix eigenvalue to its tailing\n component `tnn`.","sig":null,"attributes":[{"value":"/ Computes the wilkinson shift, i.e., the 2x2 symmetric matrix eigenvalue to its tailing","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_eigen.rs","byte_start":1219974,"byte_end":1220064,"line_start":282,"line_end":282,"column_start":1,"column_end":91}},{"value":"/ component `tnn`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_eigen.rs","byte_start":1220065,"byte_end":1220085,"line_start":283,"line_end":283,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_eigen.rs","byte_start":1220086,"byte_end":1220089,"line_start":284,"line_end":284,"column_start":1,"column_end":4}},{"value":"/ The inputs are interpreted as the 2x2 matrix:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_eigen.rs","byte_start":1220090,"byte_end":1220139,"line_start":285,"line_end":285,"column_start":1,"column_end":50}},{"value":"/     tmm  tmn","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_eigen.rs","byte_start":1220140,"byte_end":1220156,"line_start":286,"line_end":286,"column_start":1,"column_end":17}},{"value":"/     tmn  tnn","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_eigen.rs","byte_start":1220157,"byte_end":1220173,"line_start":287,"line_end":287,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":8095},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_eigen.rs","byte_start":1221009,"byte_end":1221024,"line_start":314,"line_end":314,"column_start":12,"column_end":27},"name":"symmetric_eigen","qualname":"<SquareMatrix<N, D, S>>::symmetric_eigen","value":"fn (self) -> SymmetricEigen<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the eigendecomposition of this symmetric matrix.","sig":null,"attributes":[{"value":"/ Computes the eigendecomposition of this symmetric matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_eigen.rs","byte_start":1220848,"byte_end":1220909,"line_start":311,"line_end":311,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_eigen.rs","byte_start":1220914,"byte_end":1220917,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ Only the lower-triangular part (including the diagonal) of `m` is read.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_eigen.rs","byte_start":1220922,"byte_end":1220997,"line_start":313,"line_end":313,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":8096},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_eigen.rs","byte_start":1221695,"byte_end":1221714,"line_start":329,"line_end":329,"column_start":12,"column_end":31},"name":"try_symmetric_eigen","qualname":"<SquareMatrix<N, D, S>>::try_symmetric_eigen","value":"fn (self, eps: N::RealField, max_niter: usize) -> Option<SymmetricEigen<N, D>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the eigendecomposition of the given symmetric matrix with user-specified\n convergence parameters.","sig":null,"attributes":[{"value":"/ Computes the eigendecomposition of the given symmetric matrix with user-specified","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_eigen.rs","byte_start":1221115,"byte_end":1221200,"line_start":318,"line_end":318,"column_start":5,"column_end":90}},{"value":"/ convergence parameters.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_eigen.rs","byte_start":1221205,"byte_end":1221232,"line_start":319,"line_end":319,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_eigen.rs","byte_start":1221237,"byte_end":1221240,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ Only the lower-triangular part (including the diagonal) of `m` is read.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_eigen.rs","byte_start":1221245,"byte_end":1221320,"line_start":321,"line_end":321,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_eigen.rs","byte_start":1221325,"byte_end":1221328,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_eigen.rs","byte_start":1221333,"byte_end":1221348,"line_start":323,"line_end":323,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_eigen.rs","byte_start":1221353,"byte_end":1221356,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ * `eps`       − tolerance used to determine when a value converged to 0.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_eigen.rs","byte_start":1221361,"byte_end":1221439,"line_start":325,"line_end":325,"column_start":5,"column_end":81}},{"value":"/ * `max_niter` − maximum total number of iterations performed by the algorithm. If this","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_eigen.rs","byte_start":1221444,"byte_end":1221536,"line_start":326,"line_end":326,"column_start":5,"column_end":95}},{"value":"/ number of iteration is exceeded, `None` is returned. If `niter == 0`, then the algorithm","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_eigen.rs","byte_start":1221541,"byte_end":1221633,"line_start":327,"line_end":327,"column_start":5,"column_end":97}},{"value":"/ continues indefinitely until convergence.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_eigen.rs","byte_start":1221638,"byte_end":1221683,"line_start":328,"line_end":328,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":8097},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_eigen.rs","byte_start":1222037,"byte_end":1222058,"line_start":340,"line_end":340,"column_start":12,"column_end":33},"name":"symmetric_eigenvalues","qualname":"<SquareMatrix<N, D, S>>::symmetric_eigenvalues","value":"fn (&self) -> VectorN<N::RealField, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the eigenvalues of this symmetric matrix.","sig":null,"attributes":[{"value":"/ Computes the eigenvalues of this symmetric matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_eigen.rs","byte_start":1221901,"byte_end":1221955,"line_start":337,"line_end":337,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_eigen.rs","byte_start":1221960,"byte_end":1221963,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ Only the lower-triangular part of the matrix is read.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_eigen.rs","byte_start":1221968,"byte_end":1222025,"line_start":339,"line_end":339,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":21007},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1225409,"byte_end":1225429,"line_start":29,"line_end":29,"column_start":12,"column_end":32},"name":"SymmetricTridiagonal","qualname":"::linalg::symmetric_tridiagonal::SymmetricTridiagonal","value":"SymmetricTridiagonal {  }","parent":null,"children":[{"krate":0,"index":21010},{"krate":0,"index":21011}],"decl_id":null,"docs":" Tridiagonalization of a symmetric matrix.\n","sig":null,"attributes":[{"value":"/ Tridiagonalization of a symmetric matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1224723,"byte_end":1224768,"line_start":12,"line_end":12,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":8119},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1226149,"byte_end":1226152,"line_start":52,"line_end":52,"column_start":12,"column_end":15},"name":"new","qualname":"<SymmetricTridiagonal<N, D>>::new","value":"fn (mut m: MatrixN<N, D>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the tridiagonalization of the symmetric matrix `m`.","sig":null,"attributes":[{"value":"/ Computes the tridiagonalization of the symmetric matrix `m`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1225985,"byte_end":1226049,"line_start":49,"line_end":49,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1226054,"byte_end":1226057,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ Only the lower-triangular part (including the diagonal) of `m` is read.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1226062,"byte_end":1226137,"line_start":51,"line_end":51,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":8120},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1227524,"byte_end":1227536,"line_start":94,"line_end":94,"column_start":12,"column_end":24},"name":"internal_tri","qualname":"<SymmetricTridiagonal<N, D>>::internal_tri","value":"fn (&self) -> &MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8121},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1227715,"byte_end":1227721,"line_start":100,"line_end":100,"column_start":12,"column_end":18},"name":"unpack","qualname":"<SymmetricTridiagonal<N, D>>::unpack","value":"fn (self) -> (MatrixN<N, D>, VectorN<N::RealField, D>,\n VectorN<N::RealField, DimDiff<D, U1>>)","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the orthogonal transformation, diagonal, and off diagonal elements of this\n decomposition.\n","sig":null,"attributes":[{"value":"/ Retrieve the orthogonal transformation, diagonal, and off diagonal elements of this","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1227593,"byte_end":1227680,"line_start":98,"line_end":98,"column_start":5,"column_end":92}},{"value":"/ decomposition.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1227685,"byte_end":1227703,"line_start":99,"line_end":99,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":8122},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1228184,"byte_end":1228202,"line_start":117,"line_end":117,"column_start":12,"column_end":30},"name":"unpack_tridiagonal","qualname":"<SymmetricTridiagonal<N, D>>::unpack_tridiagonal","value":"fn (self) -> (VectorN<N::RealField, D>, VectorN<N::RealField, DimDiff<D, U1>>)","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the diagonal, and off diagonal elements of this decomposition.\n","sig":null,"attributes":[{"value":"/ Retrieve the diagonal, and off diagonal elements of this decomposition.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1228097,"byte_end":1228172,"line_start":116,"line_end":116,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":8123},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1228562,"byte_end":1228570,"line_start":130,"line_end":130,"column_start":12,"column_end":20},"name":"diagonal","qualname":"<SymmetricTridiagonal<N, D>>::diagonal","value":"fn (&self) -> VectorN<N::RealField, D>","parent":null,"children":[],"decl_id":null,"docs":" The diagonal components of this decomposition.\n","sig":null,"attributes":[{"value":"/ The diagonal components of this decomposition.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1228500,"byte_end":1228550,"line_start":129,"line_end":129,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":8125},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1228797,"byte_end":1228809,"line_start":138,"line_end":138,"column_start":12,"column_end":24},"name":"off_diagonal","qualname":"<SymmetricTridiagonal<N, D>>::off_diagonal","value":"fn (&self) -> VectorN<N::RealField, DimDiff<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" The off-diagonal components of this decomposition.\n","sig":null,"attributes":[{"value":"/ The off-diagonal components of this decomposition.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1228731,"byte_end":1228785,"line_start":137,"line_end":137,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":8126},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1229067,"byte_end":1229068,"line_start":146,"line_end":146,"column_start":12,"column_end":13},"name":"q","qualname":"<SymmetricTridiagonal<N, D>>::q","value":"fn (&self) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the orthogonal matrix `Q` of this decomposition.\n","sig":null,"attributes":[{"value":"/ Computes the orthogonal matrix `Q` of this decomposition.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1228994,"byte_end":1229055,"line_start":145,"line_end":145,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":8127},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1229236,"byte_end":1229245,"line_start":151,"line_end":151,"column_start":12,"column_end":21},"name":"recompose","qualname":"<SymmetricTridiagonal<N, D>>::recompose","value":"fn (mut self) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Recomputes the original symmetric matrix.\n","sig":null,"attributes":[{"value":"/ Recomputes the original symmetric matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1229179,"byte_end":1229224,"line_start":150,"line_end":150,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":8132},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1229982,"byte_end":1230006,"line_start":173,"line_end":173,"column_start":12,"column_end":36},"name":"symmetric_tridiagonalize","qualname":"<SquareMatrix<N, D, S>>::symmetric_tridiagonalize","value":"fn (self) -> SymmetricTridiagonal<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the tridiagonalization of this symmetric matrix.","sig":null,"attributes":[{"value":"/ Computes the tridiagonalization of this symmetric matrix.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1229821,"byte_end":1229882,"line_start":170,"line_end":170,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1229887,"byte_end":1229890,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ Only the lower-triangular part (including the diagonal) of `m` is read.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1229895,"byte_end":1229970,"line_start":172,"line_end":172,"column_start":5,"column_end":80}}]},{"kind":"Function","id":{"krate":0,"index":8174},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":5030,"byte_end":5033,"line_start":163,"line_end":163,"column_start":8,"column_end":11},"name":"one","qualname":"::one","value":"fn <T> () -> T","parent":null,"children":[],"decl_id":null,"docs":" Gets the multiplicative identity element.","sig":null,"attributes":[{"value":"/ Gets the multiplicative identity element.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":4869,"byte_end":4914,"line_start":156,"line_end":156,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":4915,"byte_end":4918,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":4919,"byte_end":4934,"line_start":158,"line_end":158,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":4935,"byte_end":4938,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ * [`origin`](../nalgebra/fn.origin.html)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":4939,"byte_end":4983,"line_start":160,"line_end":160,"column_start":1,"column_end":45}},{"value":"/ * [`zero`](fn.zero.html)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":4984,"byte_end":5012,"line_start":161,"line_end":161,"column_start":1,"column_end":29}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":5013,"byte_end":5022,"line_start":162,"line_end":162,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8176},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":5220,"byte_end":5224,"line_start":174,"line_end":174,"column_start":8,"column_end":12},"name":"zero","qualname":"::zero","value":"fn <T> () -> T","parent":null,"children":[],"decl_id":null,"docs":" Gets the additive identity element.","sig":null,"attributes":[{"value":"/ Gets the additive identity element.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":5067,"byte_end":5106,"line_start":167,"line_end":167,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":5107,"byte_end":5110,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":5111,"byte_end":5126,"line_start":169,"line_end":169,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":5127,"byte_end":5130,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ * [`one`](fn.one.html)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":5131,"byte_end":5157,"line_start":171,"line_end":171,"column_start":1,"column_end":27}},{"value":"/ * [`origin`](../nalgebra/fn.origin.html)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":5158,"byte_end":5202,"line_start":172,"line_end":172,"column_start":1,"column_end":45}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":5203,"byte_end":5212,"line_start":173,"line_end":173,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8178},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":5637,"byte_end":5641,"line_start":190,"line_end":190,"column_start":8,"column_end":12},"name":"wrap","qualname":"::wrap","value":"fn <T> (mut val: T, min: T, max: T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Wraps `val` into the range `[min, max]` using modular arithmetics.","sig":null,"attributes":[{"value":"/ Wraps `val` into the range `[min, max]` using modular arithmetics.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":5512,"byte_end":5582,"line_start":186,"line_end":186,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":5583,"byte_end":5586,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ The range must not be empty.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":5587,"byte_end":5619,"line_start":188,"line_end":188,"column_start":1,"column_end":33}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":5620,"byte_end":5629,"line_start":189,"line_end":189,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8180},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":6356,"byte_end":6361,"line_start":225,"line_end":225,"column_start":8,"column_end":13},"name":"clamp","qualname":"::clamp","value":"fn <T> (val: T, min: T, max: T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the input value clamped to the interval `[min, max]`.","sig":null,"attributes":[{"value":"/ Returns a reference to the input value clamped to the interval `[min, max]`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":6089,"byte_end":6169,"line_start":218,"line_end":218,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":6170,"byte_end":6173,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ In particular:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":6174,"byte_end":6192,"line_start":220,"line_end":220,"column_start":1,"column_end":19}},{"value":"/     * If `min < val < max`, this returns `val`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":6193,"byte_end":6244,"line_start":221,"line_end":221,"column_start":1,"column_end":52}},{"value":"/     * If `val <= min`, this returns `min`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":6245,"byte_end":6291,"line_start":222,"line_end":222,"column_start":1,"column_end":47}},{"value":"/     * If `val >= max`, this returns `max`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":6292,"byte_end":6338,"line_start":223,"line_end":223,"column_start":1,"column_end":47}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":6339,"byte_end":6348,"line_start":224,"line_end":224,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8182},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":6584,"byte_end":6587,"line_start":239,"line_end":239,"column_start":8,"column_end":11},"name":"max","qualname":"::max","value":"fn <T> (a: T, b: T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Same as `cmp::max`.\n","sig":null,"attributes":[{"value":"/ Same as `cmp::max`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":6543,"byte_end":6566,"line_start":237,"line_end":237,"column_start":1,"column_end":24}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":6567,"byte_end":6576,"line_start":238,"line_end":238,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8184},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":6678,"byte_end":6681,"line_start":245,"line_end":245,"column_start":8,"column_end":11},"name":"min","qualname":"::min","value":"fn <T> (a: T, b: T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Same as `cmp::min`.\n","sig":null,"attributes":[{"value":"/ Same as `cmp::min`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":6637,"byte_end":6660,"line_start":243,"line_end":243,"column_start":1,"column_end":24}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":6661,"byte_end":6670,"line_start":244,"line_end":244,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8186},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":6936,"byte_end":6939,"line_start":254,"line_end":254,"column_start":8,"column_end":11},"name":"abs","qualname":"::abs","value":"fn <T> (a: &T) -> T","parent":null,"children":[],"decl_id":null,"docs":" The absolute value of `a`.","sig":null,"attributes":[{"value":"/ The absolute value of `a`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":6731,"byte_end":6761,"line_start":249,"line_end":249,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":6762,"byte_end":6765,"line_start":250,"line_end":250,"column_start":1,"column_end":4}},{"value":"/ Deprecated: Use [Matrix::abs] or [RealField::abs] instead.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":6766,"byte_end":6828,"line_start":251,"line_end":251,"column_start":1,"column_end":63}},{"value":"deprecated(note =\n             \"use the inherent method `Matrix::abs` or `RealField::abs` instead\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":6829,"byte_end":6918,"line_start":252,"line_end":252,"column_start":1,"column_end":90}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":6919,"byte_end":6928,"line_start":253,"line_end":253,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8188},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":7107,"byte_end":7110,"line_start":261,"line_end":261,"column_start":8,"column_end":11},"name":"inf","qualname":"::inf","value":"fn <N, R, C> (a: &MatrixMN<N, R, C>, b: &MatrixMN<N, R, C>) -> MatrixMN<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Returns the infimum of `a` and `b`.\n","sig":null,"attributes":[{"value":"/ Returns the infimum of `a` and `b`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":6980,"byte_end":7019,"line_start":258,"line_end":258,"column_start":1,"column_end":40}},{"value":"deprecated(note = \"use the inherent method `Matrix::inf` instead\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":7020,"byte_end":7089,"line_start":259,"line_end":259,"column_start":1,"column_end":70}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":7090,"byte_end":7099,"line_start":260,"line_end":260,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8192},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":7423,"byte_end":7426,"line_start":272,"line_end":272,"column_start":8,"column_end":11},"name":"sup","qualname":"::sup","value":"fn <N, R, C> (a: &MatrixMN<N, R, C>, b: &MatrixMN<N, R, C>) -> MatrixMN<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Returns the supremum of `a` and `b`.\n","sig":null,"attributes":[{"value":"/ Returns the supremum of `a` and `b`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":7295,"byte_end":7335,"line_start":269,"line_end":269,"column_start":1,"column_end":41}},{"value":"deprecated(note = \"use the inherent method `Matrix::sup` instead\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":7336,"byte_end":7405,"line_start":270,"line_end":270,"column_start":1,"column_end":70}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":7406,"byte_end":7415,"line_start":271,"line_end":271,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8196},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":7770,"byte_end":7777,"line_start":283,"line_end":283,"column_start":8,"column_end":15},"name":"inf_sup","qualname":"::inf_sup","value":"fn <N, R, C> (a: &MatrixMN<N, R, C>, b: &MatrixMN<N, R, C>) -> (MatrixMN<N, R, C>, MatrixMN<N, R, C>)","parent":null,"children":[],"decl_id":null,"docs":" Returns simultaneously the infimum and supremum of `a` and `b`.\n","sig":null,"attributes":[{"value":"/ Returns simultaneously the infimum and supremum of `a` and `b`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":7611,"byte_end":7678,"line_start":280,"line_end":280,"column_start":1,"column_end":68}},{"value":"deprecated(note = \"use the inherent method `Matrix::inf_sup` instead\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":7679,"byte_end":7752,"line_start":281,"line_end":281,"column_start":1,"column_end":74}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":7753,"byte_end":7762,"line_start":282,"line_end":282,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8200},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":8074,"byte_end":8085,"line_start":296,"line_end":296,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"::partial_cmp","value":"fn <T> (a: &T, b: &T) -> Option<Ordering>","parent":null,"children":[],"decl_id":null,"docs":" Compare `a` and `b` using a partial ordering relation.\n","sig":null,"attributes":[{"value":"/ Compare `a` and `b` using a partial ordering relation.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":7998,"byte_end":8056,"line_start":294,"line_end":294,"column_start":1,"column_end":59}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":8057,"byte_end":8066,"line_start":295,"line_end":295,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8202},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":8241,"byte_end":8251,"line_start":302,"line_end":302,"column_start":8,"column_end":18},"name":"partial_lt","qualname":"::partial_lt","value":"fn <T> (a: &T, b: &T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` iff `a` and `b` are comparable and `a < b`.\n","sig":null,"attributes":[{"value":"/ Returns `true` iff `a` and `b` are comparable and `a < b`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":8161,"byte_end":8223,"line_start":300,"line_end":300,"column_start":1,"column_end":63}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":8224,"byte_end":8233,"line_start":301,"line_end":301,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8204},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":8387,"byte_end":8397,"line_start":308,"line_end":308,"column_start":8,"column_end":18},"name":"partial_le","qualname":"::partial_le","value":"fn <T> (a: &T, b: &T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` iff `a` and `b` are comparable and `a <= b`.\n","sig":null,"attributes":[{"value":"/ Returns `true` iff `a` and `b` are comparable and `a <= b`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":8306,"byte_end":8369,"line_start":306,"line_end":306,"column_start":1,"column_end":64}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":8370,"byte_end":8379,"line_start":307,"line_end":307,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8206},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":8532,"byte_end":8542,"line_start":314,"line_end":314,"column_start":8,"column_end":18},"name":"partial_gt","qualname":"::partial_gt","value":"fn <T> (a: &T, b: &T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` iff `a` and `b` are comparable and `a > b`.\n","sig":null,"attributes":[{"value":"/ Returns `true` iff `a` and `b` are comparable and `a > b`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":8452,"byte_end":8514,"line_start":312,"line_end":312,"column_start":1,"column_end":63}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":8515,"byte_end":8524,"line_start":313,"line_end":313,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8208},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":8678,"byte_end":8688,"line_start":320,"line_end":320,"column_start":8,"column_end":18},"name":"partial_ge","qualname":"::partial_ge","value":"fn <T> (a: &T, b: &T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` iff `a` and `b` are comparable and `a >= b`.\n","sig":null,"attributes":[{"value":"/ Returns `true` iff `a` and `b` are comparable and `a >= b`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":8597,"byte_end":8660,"line_start":318,"line_end":318,"column_start":1,"column_end":64}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":8661,"byte_end":8670,"line_start":319,"line_end":319,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8210},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":8822,"byte_end":8833,"line_start":326,"line_end":326,"column_start":8,"column_end":19},"name":"partial_min","qualname":"::partial_min","value":"fn <'a, T> (a: &'a T, b: &'a T) -> Option<&'a T>","parent":null,"children":[],"decl_id":null,"docs":" Return the minimum of `a` and `b` if they are comparable.\n","sig":null,"attributes":[{"value":"/ Return the minimum of `a` and `b` if they are comparable.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":8743,"byte_end":8804,"line_start":324,"line_end":324,"column_start":1,"column_end":62}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":8805,"byte_end":8814,"line_start":325,"line_end":325,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8213},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":9146,"byte_end":9157,"line_start":339,"line_end":339,"column_start":8,"column_end":19},"name":"partial_max","qualname":"::partial_max","value":"fn <'a, T> (a: &'a T, b: &'a T) -> Option<&'a T>","parent":null,"children":[],"decl_id":null,"docs":" Return the maximum of `a` and `b` if they are comparable.\n","sig":null,"attributes":[{"value":"/ Return the maximum of `a` and `b` if they are comparable.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":9067,"byte_end":9128,"line_start":337,"line_end":337,"column_start":1,"column_end":62}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":9129,"byte_end":9138,"line_start":338,"line_end":338,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8216},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":9515,"byte_end":9528,"line_start":353,"line_end":353,"column_start":8,"column_end":21},"name":"partial_clamp","qualname":"::partial_clamp","value":"fn <'a, T> (value: &'a T, min: &'a T, max: &'a T) -> Option<&'a T>","parent":null,"children":[],"decl_id":null,"docs":" Clamp `value` between `min` and `max`. Returns `None` if `value` is not comparable to\n `min` or `max`.\n","sig":null,"attributes":[{"value":"/ Clamp `value` between `min` and `max`. Returns `None` if `value` is not comparable to","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":9388,"byte_end":9477,"line_start":350,"line_end":350,"column_start":1,"column_end":90}},{"value":"/ `min` or `max`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":9478,"byte_end":9497,"line_start":351,"line_end":351,"column_start":1,"column_end":20}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":9498,"byte_end":9507,"line_start":352,"line_end":352,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8219},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":10002,"byte_end":10015,"line_start":369,"line_end":369,"column_start":8,"column_end":21},"name":"partial_sort2","qualname":"::partial_sort2","value":"fn <'a, T> (a: &'a T, b: &'a T) -> Option<(&'a T, &'a T)>","parent":null,"children":[],"decl_id":null,"docs":" Sorts two values in increasing order using a partial ordering.\n","sig":null,"attributes":[{"value":"/ Sorts two values in increasing order using a partial ordering.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":9918,"byte_end":9984,"line_start":367,"line_end":367,"column_start":1,"column_end":67}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":9985,"byte_end":9994,"line_start":368,"line_end":368,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8222},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":10456,"byte_end":10462,"line_start":392,"line_end":392,"column_start":8,"column_end":14},"name":"center","qualname":"::center","value":"fn <N, D> (p1: &Point<N, D>, p2: &Point<N, D>) -> Point<N, D>","parent":null,"children":[],"decl_id":null,"docs":" The center of two points.","sig":null,"attributes":[{"value":"/ The center of two points.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":10299,"byte_end":10328,"line_start":385,"line_end":385,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":10329,"byte_end":10332,"line_start":386,"line_end":386,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":10333,"byte_end":10348,"line_start":387,"line_end":387,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":10349,"byte_end":10352,"line_start":388,"line_end":388,"column_start":1,"column_end":4}},{"value":"/ * [distance](fn.distance.html)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":10353,"byte_end":10387,"line_start":389,"line_end":389,"column_start":1,"column_end":35}},{"value":"/ * [distance_squared](fn.distance_squared.html)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":10388,"byte_end":10438,"line_start":390,"line_end":390,"column_start":1,"column_end":51}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":10439,"byte_end":10448,"line_start":391,"line_end":391,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8225},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":10819,"byte_end":10827,"line_start":406,"line_end":406,"column_start":8,"column_end":16},"name":"distance","qualname":"::distance","value":"fn <N, D> (p1: &Point<N, D>, p2: &Point<N, D>) -> N::SimdRealField","parent":null,"children":[],"decl_id":null,"docs":" The distance between two points.","sig":null,"attributes":[{"value":"/ The distance between two points.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":10659,"byte_end":10695,"line_start":399,"line_end":399,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":10696,"byte_end":10699,"line_start":400,"line_end":400,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":10700,"byte_end":10715,"line_start":401,"line_end":401,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":10716,"byte_end":10719,"line_start":402,"line_end":402,"column_start":1,"column_end":4}},{"value":"/ * [center](fn.center.html)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":10720,"byte_end":10750,"line_start":403,"line_end":403,"column_start":1,"column_end":31}},{"value":"/ * [distance_squared](fn.distance_squared.html)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":10751,"byte_end":10801,"line_start":404,"line_end":404,"column_start":1,"column_end":51}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":10802,"byte_end":10811,"line_start":405,"line_end":405,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8228},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":11167,"byte_end":11183,"line_start":423,"line_end":423,"column_start":8,"column_end":24},"name":"distance_squared","qualname":"::distance_squared","value":"fn <N, D> (p1: &Point<N, D>, p2: &Point<N, D>) -> N::SimdRealField","parent":null,"children":[],"decl_id":null,"docs":" The squared distance between two points.","sig":null,"attributes":[{"value":"/ The squared distance between two points.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":11015,"byte_end":11059,"line_start":416,"line_end":416,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":11060,"byte_end":11063,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":11064,"byte_end":11079,"line_start":418,"line_end":418,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":11080,"byte_end":11083,"line_start":419,"line_end":419,"column_start":1,"column_end":4}},{"value":"/ * [center](fn.center.html)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":11084,"byte_end":11114,"line_start":420,"line_end":420,"column_start":1,"column_end":31}},{"value":"/ * [distance](fn.distance.html)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":11115,"byte_end":11149,"line_start":421,"line_end":421,"column_start":1,"column_end":35}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":11150,"byte_end":11159,"line_start":422,"line_end":422,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8231},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":11854,"byte_end":11861,"line_start":448,"line_end":448,"column_start":8,"column_end":15},"name":"convert","qualname":"::convert","value":"fn <From, To> (t: From) -> To","parent":null,"children":[],"decl_id":null,"docs":" Converts an object from one type to an equivalent or more general one.","sig":null,"attributes":[{"value":"/ Converts an object from one type to an equivalent or more general one.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":11394,"byte_end":11468,"line_start":436,"line_end":436,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":11469,"byte_end":11472,"line_start":437,"line_end":437,"column_start":1,"column_end":4}},{"value":"/ See also [`try_convert`](fn.try_convert.html) for conversion to more specific types.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":11473,"byte_end":11561,"line_start":438,"line_end":438,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":11562,"byte_end":11565,"line_start":439,"line_end":439,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":11566,"byte_end":11581,"line_start":440,"line_end":440,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":11582,"byte_end":11585,"line_start":441,"line_end":441,"column_start":1,"column_end":4}},{"value":"/ * [convert_ref](fn.convert_ref.html)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":11586,"byte_end":11626,"line_start":442,"line_end":442,"column_start":1,"column_end":41}},{"value":"/ * [convert_ref_unchecked](fn.convert_ref_unchecked.html)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":11627,"byte_end":11687,"line_start":443,"line_end":443,"column_start":1,"column_end":61}},{"value":"/ * [is_convertible](../nalgebra/fn.is_convertible.html)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":11688,"byte_end":11746,"line_start":444,"line_end":444,"column_start":1,"column_end":59}},{"value":"/ * [try_convert](fn.try_convert.html)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":11747,"byte_end":11787,"line_start":445,"line_end":445,"column_start":1,"column_end":41}},{"value":"/ * [try_convert_ref](fn.try_convert_ref.html)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":11788,"byte_end":11836,"line_start":446,"line_end":446,"column_start":1,"column_end":49}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":11837,"byte_end":11846,"line_start":447,"line_end":447,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8234},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":12360,"byte_end":12371,"line_start":464,"line_end":464,"column_start":8,"column_end":19},"name":"try_convert","qualname":"::try_convert","value":"fn <From, To> (t: From) -> Option<To>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to convert an object to a more specific one.","sig":null,"attributes":[{"value":"/ Attempts to convert an object to a more specific one.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":11934,"byte_end":11991,"line_start":452,"line_end":452,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":11992,"byte_end":11995,"line_start":453,"line_end":453,"column_start":1,"column_end":4}},{"value":"/ See also [`convert`](fn.convert.html) for conversion to more general types.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":11996,"byte_end":12075,"line_start":454,"line_end":454,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":12076,"byte_end":12079,"line_start":455,"line_end":455,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":12080,"byte_end":12095,"line_start":456,"line_end":456,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":12096,"byte_end":12099,"line_start":457,"line_end":457,"column_start":1,"column_end":4}},{"value":"/ * [convert](fn.convert.html)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":12100,"byte_end":12132,"line_start":458,"line_end":458,"column_start":1,"column_end":33}},{"value":"/ * [convert_ref](fn.convert_ref.html)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":12133,"byte_end":12173,"line_start":459,"line_end":459,"column_start":1,"column_end":41}},{"value":"/ * [convert_ref_unchecked](fn.convert_ref_unchecked.html)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":12174,"byte_end":12234,"line_start":460,"line_end":460,"column_start":1,"column_end":61}},{"value":"/ * [is_convertible](../nalgebra/fn.is_convertible.html)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":12235,"byte_end":12293,"line_start":461,"line_end":461,"column_start":1,"column_end":59}},{"value":"/ * [try_convert_ref](fn.try_convert_ref.html)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":12294,"byte_end":12342,"line_start":462,"line_end":462,"column_start":1,"column_end":49}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":12343,"byte_end":12352,"line_start":463,"line_end":463,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8237},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":12825,"byte_end":12839,"line_start":479,"line_end":479,"column_start":8,"column_end":22},"name":"is_convertible","qualname":"::is_convertible","value":"fn <From, To> (t: &From) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates if [`try_convert`](fn.try_convert.html) will succeed without\n actually performing the conversion.","sig":null,"attributes":[{"value":"/ Indicates if [`try_convert`](fn.try_convert.html) will succeed without","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":12444,"byte_end":12518,"line_start":468,"line_end":468,"column_start":1,"column_end":75}},{"value":"/ actually performing the conversion.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":12519,"byte_end":12558,"line_start":469,"line_end":469,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":12559,"byte_end":12562,"line_start":470,"line_end":470,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":12563,"byte_end":12578,"line_start":471,"line_end":471,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":12579,"byte_end":12582,"line_start":472,"line_end":472,"column_start":1,"column_end":4}},{"value":"/ * [convert](fn.convert.html)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":12583,"byte_end":12615,"line_start":473,"line_end":473,"column_start":1,"column_end":33}},{"value":"/ * [convert_ref](fn.convert_ref.html)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":12616,"byte_end":12656,"line_start":474,"line_end":474,"column_start":1,"column_end":41}},{"value":"/ * [convert_ref_unchecked](fn.convert_ref_unchecked.html)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":12657,"byte_end":12717,"line_start":475,"line_end":475,"column_start":1,"column_end":61}},{"value":"/ * [try_convert](fn.try_convert.html)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":12718,"byte_end":12758,"line_start":476,"line_end":476,"column_start":1,"column_end":41}},{"value":"/ * [try_convert_ref](fn.try_convert_ref.html)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":12759,"byte_end":12807,"line_start":477,"line_end":477,"column_start":1,"column_end":49}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":12808,"byte_end":12817,"line_start":478,"line_end":478,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8240},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":13336,"byte_end":13353,"line_start":495,"line_end":495,"column_start":8,"column_end":25},"name":"convert_unchecked","qualname":"::convert_unchecked","value":"fn <From, To> (t: From) -> To","parent":null,"children":[],"decl_id":null,"docs":" Use with care! Same as [`try_convert`](fn.try_convert.html) but\n without any property checks.","sig":null,"attributes":[{"value":"/ Use with care! Same as [`try_convert`](fn.try_convert.html) but","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":12910,"byte_end":12977,"line_start":483,"line_end":483,"column_start":1,"column_end":68}},{"value":"/ without any property checks.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":12978,"byte_end":13010,"line_start":484,"line_end":484,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":13011,"byte_end":13014,"line_start":485,"line_end":485,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":13015,"byte_end":13030,"line_start":486,"line_end":486,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":13031,"byte_end":13034,"line_start":487,"line_end":487,"column_start":1,"column_end":4}},{"value":"/ * [convert](fn.convert.html)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":13035,"byte_end":13067,"line_start":488,"line_end":488,"column_start":1,"column_end":33}},{"value":"/ * [convert_ref](fn.convert_ref.html)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":13068,"byte_end":13108,"line_start":489,"line_end":489,"column_start":1,"column_end":41}},{"value":"/ * [convert_ref_unchecked](fn.convert_ref_unchecked.html)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":13109,"byte_end":13169,"line_start":490,"line_end":490,"column_start":1,"column_end":61}},{"value":"/ * [is_convertible](../nalgebra/fn.is_convertible.html)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":13170,"byte_end":13228,"line_start":491,"line_end":491,"column_start":1,"column_end":59}},{"value":"/ * [try_convert](fn.try_convert.html)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":13229,"byte_end":13269,"line_start":492,"line_end":492,"column_start":1,"column_end":41}},{"value":"/ * [try_convert_ref](fn.try_convert_ref.html)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":13270,"byte_end":13318,"line_start":493,"line_end":493,"column_start":1,"column_end":49}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":13319,"byte_end":13328,"line_start":494,"line_end":494,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8243},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":13787,"byte_end":13798,"line_start":509,"line_end":509,"column_start":8,"column_end":19},"name":"convert_ref","qualname":"::convert_ref","value":"fn <From, To> (t: &From) -> To","parent":null,"children":[],"decl_id":null,"docs":" Converts an object from one type to an equivalent or more general one.","sig":null,"attributes":[{"value":"/ Converts an object from one type to an equivalent or more general one.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":13428,"byte_end":13502,"line_start":499,"line_end":499,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":13503,"byte_end":13506,"line_start":500,"line_end":500,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":13507,"byte_end":13522,"line_start":501,"line_end":501,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":13523,"byte_end":13526,"line_start":502,"line_end":502,"column_start":1,"column_end":4}},{"value":"/ * [convert](fn.convert.html)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":13527,"byte_end":13559,"line_start":503,"line_end":503,"column_start":1,"column_end":33}},{"value":"/ * [convert_ref_unchecked](fn.convert_ref_unchecked.html)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":13560,"byte_end":13620,"line_start":504,"line_end":504,"column_start":1,"column_end":61}},{"value":"/ * [is_convertible](../nalgebra/fn.is_convertible.html)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":13621,"byte_end":13679,"line_start":505,"line_end":505,"column_start":1,"column_end":59}},{"value":"/ * [try_convert](fn.try_convert.html)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":13680,"byte_end":13720,"line_start":506,"line_end":506,"column_start":1,"column_end":41}},{"value":"/ * [try_convert_ref](fn.try_convert_ref.html)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":13721,"byte_end":13769,"line_start":507,"line_end":507,"column_start":1,"column_end":49}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":13770,"byte_end":13779,"line_start":508,"line_end":508,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8246},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":14205,"byte_end":14220,"line_start":523,"line_end":523,"column_start":8,"column_end":23},"name":"try_convert_ref","qualname":"::try_convert_ref","value":"fn <From, To> (t: &From) -> Option<To>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to convert an object to a more specific one.","sig":null,"attributes":[{"value":"/ Attempts to convert an object to a more specific one.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":13871,"byte_end":13928,"line_start":513,"line_end":513,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":13929,"byte_end":13932,"line_start":514,"line_end":514,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":13933,"byte_end":13948,"line_start":515,"line_end":515,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":13949,"byte_end":13952,"line_start":516,"line_end":516,"column_start":1,"column_end":4}},{"value":"/ * [convert](fn.convert.html)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":13953,"byte_end":13985,"line_start":517,"line_end":517,"column_start":1,"column_end":33}},{"value":"/ * [convert_ref](fn.convert_ref.html)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":13986,"byte_end":14026,"line_start":518,"line_end":518,"column_start":1,"column_end":41}},{"value":"/ * [convert_ref_unchecked](fn.convert_ref_unchecked.html)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":14027,"byte_end":14087,"line_start":519,"line_end":519,"column_start":1,"column_end":61}},{"value":"/ * [is_convertible](../nalgebra/fn.is_convertible.html)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":14088,"byte_end":14146,"line_start":520,"line_end":520,"column_start":1,"column_end":59}},{"value":"/ * [try_convert](fn.try_convert.html)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":14147,"byte_end":14187,"line_start":521,"line_end":521,"column_start":1,"column_end":41}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":14188,"byte_end":14197,"line_start":522,"line_end":522,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":8249},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":14659,"byte_end":14680,"line_start":538,"line_end":538,"column_start":8,"column_end":29},"name":"convert_ref_unchecked","qualname":"::convert_ref_unchecked","value":"fn <From, To> (t: &From) -> To","parent":null,"children":[],"decl_id":null,"docs":" Use with care! Same as [`try_convert`](fn.try_convert.html) but\n without any property checks.","sig":null,"attributes":[{"value":"/ Use with care! Same as [`try_convert`](fn.try_convert.html) but","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":14294,"byte_end":14361,"line_start":527,"line_end":527,"column_start":1,"column_end":68}},{"value":"/ without any property checks.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":14362,"byte_end":14394,"line_start":528,"line_end":528,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":14395,"byte_end":14398,"line_start":529,"line_end":529,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":14399,"byte_end":14414,"line_start":530,"line_end":530,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":14415,"byte_end":14418,"line_start":531,"line_end":531,"column_start":1,"column_end":4}},{"value":"/ * [convert](fn.convert.html)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":14419,"byte_end":14451,"line_start":532,"line_end":532,"column_start":1,"column_end":33}},{"value":"/ * [convert_ref](fn.convert_ref.html)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":14452,"byte_end":14492,"line_start":533,"line_end":533,"column_start":1,"column_end":41}},{"value":"/ * [is_convertible](../nalgebra/fn.is_convertible.html)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":14493,"byte_end":14551,"line_start":534,"line_end":534,"column_start":1,"column_end":59}},{"value":"/ * [try_convert](fn.try_convert.html)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":14552,"byte_end":14592,"line_start":535,"line_end":535,"column_start":1,"column_end":41}},{"value":"/ * [try_convert_ref](fn.try_convert_ref.html)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":14593,"byte_end":14641,"line_start":536,"line_end":536,"column_start":1,"column_end":49}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":14642,"byte_end":14651,"line_start":537,"line_end":537,"column_start":1,"column_end":10}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/allocator.rs","byte_start":18862,"byte_end":18878,"line_start":73,"line_end":73,"column_start":67,"column_end":83},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/allocator.rs","byte_start":19501,"byte_end":19517,"line_start":97,"line_end":97,"column_start":57,"column_end":73},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":20400,"byte_end":20406,"line_start":20,"line_end":20,"column_start":49,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":21376,"byte_end":21382,"line_start":53,"line_end":53,"column_start":56,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":25161,"byte_end":25167,"line_start":202,"line_end":202,"column_start":60,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":26376,"byte_end":26382,"line_start":238,"line_end":238,"column_start":76,"column_end":82},"value":"","parent":null,"children":[{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":27323,"byte_end":27329,"line_start":271,"line_end":271,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":131},{"krate":0,"index":136},{"krate":0,"index":141},{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":37449,"byte_end":37455,"line_start":558,"line_end":558,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":157},{"krate":0,"index":160},{"krate":0,"index":163},{"krate":0,"index":169},{"krate":0,"index":175},{"krate":0,"index":180},{"krate":0,"index":186},{"krate":0,"index":192},{"krate":0,"index":199},{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":50954,"byte_end":50960,"line_start":960,"line_end":960,"column_start":53,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":218},{"krate":0,"index":224},{"krate":0,"index":230},{"krate":0,"index":235},{"krate":0,"index":243},{"krate":0,"index":250}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":64355,"byte_end":64361,"line_start":1334,"line_end":1334,"column_start":53,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":262},{"krate":0,"index":268},{"krate":0,"index":273},{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":69689,"byte_end":69701,"line_start":1482,"line_end":1482,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":288},{"krate":0,"index":296},{"krate":0,"index":302},{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/constraint.rs","byte_start":77926,"byte_end":77941,"line_start":11,"line_end":11,"column_start":78,"column_end":93},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/constraint.rs","byte_start":78253,"byte_end":78268,"line_start":23,"line_end":23,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":339}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/constraint.rs","byte_start":78342,"byte_end":78357,"line_start":27,"line_end":27,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":342}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/constraint.rs","byte_start":78431,"byte_end":78446,"line_start":31,"line_end":31,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":345}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/constraint.rs","byte_start":80045,"byte_end":80060,"line_start":80,"line_end":80,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/constraint.rs","byte_start":80142,"byte_end":80157,"line_start":84,"line_end":84,"column_start":48,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":356}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/constraint.rs","byte_start":80239,"byte_end":80254,"line_start":88,"line_end":88,"column_start":48,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/default_allocator.rs","byte_start":88441,"byte_end":88457,"line_start":37,"line_end":37,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/default_allocator.rs","byte_start":89515,"byte_end":89531,"line_start":79,"line_end":79,"column_start":54,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":415}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/default_allocator.rs","byte_start":90455,"byte_end":90471,"line_start":109,"line_end":109,"column_start":58,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":422}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/default_allocator.rs","byte_start":91414,"byte_end":91430,"line_start":143,"line_end":143,"column_start":84,"column_end":100},"value":"","parent":null,"children":[{"krate":0,"index":430}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/default_allocator.rs","byte_start":92319,"byte_end":92335,"line_start":173,"line_end":173,"column_start":83,"column_end":99},"value":"","parent":null,"children":[{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/default_allocator.rs","byte_start":93178,"byte_end":93194,"line_start":201,"line_end":201,"column_start":83,"column_end":99},"value":"","parent":null,"children":[{"krate":0,"index":442}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/default_allocator.rs","byte_start":94070,"byte_end":94086,"line_start":230,"line_end":230,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":447}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/default_allocator.rs","byte_start":94513,"byte_end":94529,"line_start":245,"line_end":245,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":452}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/default_allocator.rs","byte_start":94956,"byte_end":94972,"line_start":260,"line_end":260,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/default_allocator.rs","byte_start":95403,"byte_end":95419,"line_start":275,"line_end":275,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":462}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":96259,"byte_end":96266,"line_start":22,"line_end":22,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":490}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":97080,"byte_end":97087,"line_start":55,"line_end":55,"column_start":20,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":97115,"byte_end":97122,"line_start":56,"line_end":56,"column_start":25,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":97987,"byte_end":97994,"line_start":79,"line_end":79,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":98249,"byte_end":98256,"line_start":96,"line_end":96,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":506},{"krate":0,"index":507}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":98405,"byte_end":98412,"line_start":105,"line_end":105,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":509},{"krate":0,"index":510}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":101600,"byte_end":101602,"line_start":216,"line_end":216,"column_start":14,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":521}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":101888,"byte_end":101890,"line_start":234,"line_end":234,"column_start":18,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":523},{"krate":0,"index":524}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102009,"byte_end":102011,"line_start":243,"line_end":243,"column_start":28,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":526}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":104391,"byte_end":104395,"line_start":310,"line_end":310,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":536}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":104958,"byte_end":104962,"line_start":323,"line_end":323,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":547}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":105824,"byte_end":105828,"line_start":350,"line_end":350,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":556},{"krate":0,"index":557}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":106472,"byte_end":106476,"line_start":369,"line_end":369,"column_start":9,"column_end":13},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":106656,"byte_end":106660,"line_start":374,"line_end":374,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":569}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":106795,"byte_end":106799,"line_start":380,"line_end":380,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":575}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":107227,"byte_end":107231,"line_start":400,"line_end":400,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":579},{"krate":0,"index":580}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":107443,"byte_end":107447,"line_start":411,"line_end":411,"column_start":9,"column_end":13},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/iter.rs","byte_start":112841,"byte_end":112848,"line_start":140,"line_end":140,"column_start":63,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":605}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/iter.rs","byte_start":113045,"byte_end":113052,"line_start":146,"line_end":146,"column_start":76,"column_end":83},"value":"","parent":null,"children":[{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/iter.rs","byte_start":113751,"byte_end":113758,"line_start":175,"line_end":175,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/iter.rs","byte_start":114172,"byte_end":114182,"line_start":190,"line_end":190,"column_start":66,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":638},{"krate":0,"index":639}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/iter.rs","byte_start":114537,"byte_end":114547,"line_start":205,"line_end":205,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":646},{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":649}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/iter.rs","byte_start":115219,"byte_end":115229,"line_start":232,"line_end":232,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":656}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/iter.rs","byte_start":115624,"byte_end":115634,"line_start":252,"line_end":252,"column_start":63,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":663}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/iter.rs","byte_start":115838,"byte_end":115848,"line_start":259,"line_end":259,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":670},{"krate":0,"index":671},{"krate":0,"index":672},{"krate":0,"index":673}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/iter.rs","byte_start":116550,"byte_end":116560,"line_start":289,"line_end":289,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":680}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/iter.rs","byte_start":116980,"byte_end":116993,"line_start":304,"line_end":304,"column_start":66,"column_end":79},"value":"","parent":null,"children":[{"krate":0,"index":696},{"krate":0,"index":697}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/iter.rs","byte_start":117351,"byte_end":117364,"line_start":319,"line_end":319,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":707}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/iter.rs","byte_start":118039,"byte_end":118052,"line_start":346,"line_end":346,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":714}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":118994,"byte_end":119000,"line_start":24,"line_end":24,"column_start":71,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":776},{"krate":0,"index":777}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":119229,"byte_end":119235,"line_start":34,"line_end":34,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":783},{"krate":0,"index":784}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":119700,"byte_end":119706,"line_start":54,"line_end":54,"column_start":77,"column_end":83},"value":"","parent":null,"children":[{"krate":0,"index":790}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":119921,"byte_end":119927,"line_start":62,"line_end":62,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":796}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":120336,"byte_end":120342,"line_start":84,"line_end":84,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":802},{"krate":0,"index":803}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":120944,"byte_end":120950,"line_start":114,"line_end":114,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":817}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":132753,"byte_end":132761,"line_start":378,"line_end":378,"column_start":47,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":823}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":133028,"byte_end":133036,"line_start":388,"line_end":388,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":829}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":134105,"byte_end":134113,"line_start":418,"line_end":418,"column_start":74,"column_end":82},"value":"","parent":null,"children":[{"krate":0,"index":837}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":134417,"byte_end":134425,"line_start":428,"line_end":428,"column_start":64,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":844}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":139999,"byte_end":140005,"line_start":603,"line_end":603,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":881},{"krate":0,"index":882}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":140472,"byte_end":140478,"line_start":620,"line_end":620,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":891},{"krate":0,"index":892}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":141076,"byte_end":141082,"line_start":639,"line_end":639,"column_start":66,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":900}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":141569,"byte_end":141575,"line_start":656,"line_end":656,"column_start":74,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":909}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":142129,"byte_end":142135,"line_start":675,"line_end":675,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":915},{"krate":0,"index":919},{"krate":0,"index":923},{"krate":0,"index":931},{"krate":0,"index":939},{"krate":0,"index":947},{"krate":0,"index":954}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":147785,"byte_end":147791,"line_start":846,"line_end":846,"column_start":66,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":963},{"krate":0,"index":964}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":148404,"byte_end":148411,"line_start":871,"line_end":871,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":968}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":148719,"byte_end":148726,"line_start":881,"line_end":881,"column_start":62,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":975}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":149030,"byte_end":149036,"line_start":891,"line_end":891,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":983},{"krate":0,"index":986},{"krate":0,"index":989},{"krate":0,"index":993},{"krate":0,"index":997},{"krate":0,"index":1001}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/array_storage.rs","byte_start":187909,"byte_end":187921,"line_start":51,"line_end":51,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1856}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/array_storage.rs","byte_start":188192,"byte_end":188204,"line_start":66,"line_end":66,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1861}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/array_storage.rs","byte_start":188456,"byte_end":188468,"line_start":79,"line_end":79,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1867},{"krate":0,"index":1868}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/array_storage.rs","byte_start":188763,"byte_end":188775,"line_start":94,"line_end":94,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1873}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/array_storage.rs","byte_start":189021,"byte_end":189033,"line_start":107,"line_end":107,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1878}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/array_storage.rs","byte_start":189301,"byte_end":189313,"line_start":121,"line_end":121,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/array_storage.rs","byte_start":189531,"byte_end":189543,"line_start":132,"line_end":132,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1887}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/array_storage.rs","byte_start":189826,"byte_end":189838,"line_start":148,"line_end":148,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/array_storage.rs","byte_start":190005,"byte_end":190017,"line_start":158,"line_end":158,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1896}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/array_storage.rs","byte_start":190298,"byte_end":190310,"line_start":172,"line_end":172,"column_start":43,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1901},{"krate":0,"index":1902},{"krate":0,"index":1903},{"krate":0,"index":1904},{"krate":0,"index":1905},{"krate":0,"index":1906},{"krate":0,"index":1907},{"krate":0,"index":1908},{"krate":0,"index":1909}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/array_storage.rs","byte_start":191431,"byte_end":191443,"line_start":228,"line_end":228,"column_start":46,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1914},{"krate":0,"index":1915}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/array_storage.rs","byte_start":191871,"byte_end":191883,"line_start":248,"line_end":248,"column_start":53,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/array_storage.rs","byte_start":192138,"byte_end":192150,"line_start":259,"line_end":259,"column_start":56,"column_end":68},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":196566,"byte_end":196573,"line_start":24,"line_end":24,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1966},{"krate":0,"index":1967},{"krate":0,"index":1969}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":197852,"byte_end":197859,"line_start":68,"line_end":68,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1973},{"krate":0,"index":1974}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":198661,"byte_end":198668,"line_start":96,"line_end":96,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1977},{"krate":0,"index":1978},{"krate":0,"index":1979},{"krate":0,"index":1980},{"krate":0,"index":1981},{"krate":0,"index":1982},{"krate":0,"index":1983},{"krate":0,"index":1984},{"krate":0,"index":1985},{"krate":0,"index":1986},{"krate":0,"index":1987},{"krate":0,"index":1988}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":202726,"byte_end":202738,"line_start":204,"line_end":204,"column_start":5,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1993},{"krate":0,"index":1994},{"krate":0,"index":1995},{"krate":0,"index":1997},{"krate":0,"index":1999},{"krate":0,"index":2001}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":205866,"byte_end":205878,"line_start":299,"line_end":299,"column_start":5,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2007},{"krate":0,"index":2008},{"krate":0,"index":2009},{"krate":0,"index":2011},{"krate":0,"index":2013},{"krate":0,"index":2015}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":208832,"byte_end":208844,"line_start":385,"line_end":385,"column_start":60,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":2021},{"krate":0,"index":2022}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/componentwise.rs","byte_start":211017,"byte_end":211023,"line_start":18,"line_end":18,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2062}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/componentwise.rs","byte_start":218884,"byte_end":218890,"line_start":243,"line_end":243,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2069},{"krate":0,"index":2071},{"krate":0,"index":2073}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":220442,"byte_end":220450,"line_start":30,"line_end":30,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2119},{"krate":0,"index":2120},{"krate":0,"index":2121},{"krate":0,"index":2122},{"krate":0,"index":2123},{"krate":0,"index":2125},{"krate":0,"index":2126},{"krate":0,"index":2127},{"krate":0,"index":2129},{"krate":0,"index":2130},{"krate":0,"index":2131},{"krate":0,"index":2132},{"krate":0,"index":2135},{"krate":0,"index":2138},{"krate":0,"index":2140},{"krate":0,"index":2144}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":229846,"byte_end":229853,"line_start":305,"line_end":305,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2148}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":249056,"byte_end":249064,"line_start":740,"line_end":740,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2156},{"krate":0,"index":2157}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":249365,"byte_end":249372,"line_start":756,"line_end":756,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2162}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":249596,"byte_end":249604,"line_start":767,"line_end":767,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2167},{"krate":0,"index":2168}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":249945,"byte_end":249953,"line_start":783,"line_end":783,"column_start":69,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":2173}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":251019,"byte_end":251027,"line_start":818,"line_end":818,"column_start":70,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":2180}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":258738,"byte_end":258745,"line_start":1009,"line_end":1009,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2187},{"krate":0,"index":2188},{"krate":0,"index":2189},{"krate":0,"index":2190},{"krate":0,"index":2191},{"krate":0,"index":2192},{"krate":0,"index":2193},{"krate":0,"index":2194},{"krate":0,"index":2195},{"krate":0,"index":2196},{"krate":0,"index":2197},{"krate":0,"index":2198},{"krate":0,"index":2199}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction_slice.rs","byte_start":262753,"byte_end":262766,"line_start":12,"line_end":12,"column_start":5,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2221},{"krate":0,"index":2222}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction_slice.rs","byte_start":264770,"byte_end":264786,"line_start":63,"line_end":63,"column_start":5,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2230},{"krate":0,"index":2231}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction_slice.rs","byte_start":267817,"byte_end":267830,"line_start":135,"line_end":135,"column_start":37,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2237},{"krate":0,"index":2238}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction_slice.rs","byte_start":268981,"byte_end":268997,"line_start":160,"line_end":160,"column_start":37,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2244},{"krate":0,"index":2245}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/conversion.rs","byte_start":276867,"byte_end":276875,"line_start":33,"line_end":33,"column_start":65,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":2322},{"krate":0,"index":2323},{"krate":0,"index":2325}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/conversion.rs","byte_start":287528,"byte_end":287534,"line_start":350,"line_end":350,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2353}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/conversion.rs","byte_start":288000,"byte_end":288006,"line_start":367,"line_end":367,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2360}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/conversion.rs","byte_start":288393,"byte_end":288399,"line_start":381,"line_end":381,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2367}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/conversion.rs","byte_start":288742,"byte_end":288748,"line_start":394,"line_end":394,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2375}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/conversion.rs","byte_start":289220,"byte_end":289226,"line_start":411,"line_end":411,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2382}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/conversion.rs","byte_start":289619,"byte_end":289625,"line_start":425,"line_end":425,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2389}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/conversion.rs","byte_start":289967,"byte_end":289978,"line_start":438,"line_end":438,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2400}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/conversion.rs","byte_start":291046,"byte_end":291057,"line_start":475,"line_end":475,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2411}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/conversion.rs","byte_start":292129,"byte_end":292143,"line_start":512,"line_end":512,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2422}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/conversion.rs","byte_start":293591,"byte_end":293603,"line_start":566,"line_end":566,"column_start":46,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2440}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/conversion.rs","byte_start":293768,"byte_end":293783,"line_start":573,"line_end":573,"column_start":50,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":2444}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/conversion.rs","byte_start":294002,"byte_end":294010,"line_start":581,"line_end":581,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2451}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/conversion.rs","byte_start":294622,"byte_end":294630,"line_start":602,"line_end":602,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2460}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/conversion.rs","byte_start":295338,"byte_end":295346,"line_start":625,"line_end":625,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2469}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/conversion.rs","byte_start":296247,"byte_end":296255,"line_start":652,"line_end":652,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2478}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":298236,"byte_end":298242,"line_start":21,"line_end":21,"column_start":61,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":2524},{"krate":0,"index":2525},{"krate":0,"index":2526},{"krate":0,"index":2529}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":300945,"byte_end":300951,"line_start":102,"line_end":102,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2537},{"krate":0,"index":2538},{"krate":0,"index":2539},{"krate":0,"index":2540},{"krate":0,"index":2541},{"krate":0,"index":2542},{"krate":0,"index":2545},{"krate":0,"index":2547},{"krate":0,"index":2550},{"krate":0,"index":2553},{"krate":0,"index":2554},{"krate":0,"index":2555},{"krate":0,"index":2556}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":306643,"byte_end":306649,"line_start":265,"line_end":265,"column_start":49,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2561},{"krate":0,"index":2562}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":307886,"byte_end":307892,"line_start":303,"line_end":303,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2568},{"krate":0,"index":2569},{"krate":0,"index":2570},{"krate":0,"index":2571},{"krate":0,"index":2573},{"krate":0,"index":2574},{"krate":0,"index":2576},{"krate":0,"index":2577},{"krate":0,"index":2579},{"krate":0,"index":2580},{"krate":0,"index":2582},{"krate":0,"index":2583},{"krate":0,"index":2585},{"krate":0,"index":2586},{"krate":0,"index":2588},{"krate":0,"index":2589},{"krate":0,"index":2591},{"krate":0,"index":2592},{"krate":0,"index":2594},{"krate":0,"index":2595},{"krate":0,"index":2596},{"krate":0,"index":2597},{"krate":0,"index":2600}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":325098,"byte_end":325105,"line_start":817,"line_end":817,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2605}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":325898,"byte_end":325906,"line_start":836,"line_end":836,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2609}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":326870,"byte_end":326878,"line_start":860,"line_end":860,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2613}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":329912,"byte_end":329918,"line_start":962,"line_end":962,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2622}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":331428,"byte_end":331434,"line_start":1010,"line_end":1010,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2627}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":332046,"byte_end":332052,"line_start":1031,"line_end":1031,"column_start":53,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2635}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":335356,"byte_end":335361,"line_start":51,"line_end":51,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2667},{"krate":0,"index":2668},{"krate":0,"index":2669},{"krate":0,"index":2670}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":336520,"byte_end":336529,"line_start":95,"line_end":95,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2673},{"krate":0,"index":2674},{"krate":0,"index":2675},{"krate":0,"index":2676}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":337548,"byte_end":337557,"line_start":135,"line_end":135,"column_start":43,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2680},{"krate":0,"index":2681},{"krate":0,"index":2682},{"krate":0,"index":2683}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":338089,"byte_end":338098,"line_start":163,"line_end":163,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2686},{"krate":0,"index":2687},{"krate":0,"index":2688},{"krate":0,"index":2689}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":338599,"byte_end":338613,"line_start":189,"line_end":189,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2692},{"krate":0,"index":2693},{"krate":0,"index":2694},{"krate":0,"index":2695}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":340118,"byte_end":340125,"line_start":245,"line_end":245,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2698},{"krate":0,"index":2699},{"krate":0,"index":2700},{"krate":0,"index":2701}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":341096,"byte_end":341112,"line_start":285,"line_end":285,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2704},{"krate":0,"index":2705},{"krate":0,"index":2706},{"krate":0,"index":2707}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":347045,"byte_end":347051,"line_start":492,"line_end":492,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2734},{"krate":0,"index":2737},{"krate":0,"index":2740},{"krate":0,"index":2743},{"krate":0,"index":2746},{"krate":0,"index":2749}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":359580,"byte_end":359586,"line_start":88,"line_end":88,"column_start":63,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":2884}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":359832,"byte_end":359838,"line_start":97,"line_end":97,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2890}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":361862,"byte_end":361868,"line_start":188,"line_end":188,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2896}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":362270,"byte_end":362276,"line_start":200,"line_end":200,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2902},{"krate":0,"index":2903},{"krate":0,"index":2904},{"krate":0,"index":2905},{"krate":0,"index":2906},{"krate":0,"index":2907},{"krate":0,"index":2908},{"krate":0,"index":2909},{"krate":0,"index":2910},{"krate":0,"index":2911},{"krate":0,"index":2912},{"krate":0,"index":2913},{"krate":0,"index":2918},{"krate":0,"index":2923},{"krate":0,"index":2924},{"krate":0,"index":2927},{"krate":0,"index":2928},{"krate":0,"index":2931},{"krate":0,"index":2934},{"krate":0,"index":2938},{"krate":0,"index":2941},{"krate":0,"index":2946},{"krate":0,"index":2953},{"krate":0,"index":2956},{"krate":0,"index":2963},{"krate":0,"index":2967}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":378427,"byte_end":378433,"line_start":733,"line_end":733,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2973},{"krate":0,"index":2974},{"krate":0,"index":2975},{"krate":0,"index":2976},{"krate":0,"index":2977},{"krate":0,"index":2978},{"krate":0,"index":2979},{"krate":0,"index":2980},{"krate":0,"index":2984},{"krate":0,"index":2988},{"krate":0,"index":2990},{"krate":0,"index":2992},{"krate":0,"index":2998}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":386398,"byte_end":386404,"line_start":983,"line_end":983,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3012}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":386785,"byte_end":386791,"line_start":993,"line_end":993,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3017}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":387214,"byte_end":387220,"line_start":1003,"line_end":1003,"column_start":64,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":3023}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":387479,"byte_end":387485,"line_start":1011,"line_end":1011,"column_start":67,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":3029}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":387750,"byte_end":387756,"line_start":1019,"line_end":1019,"column_start":49,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3034}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":388234,"byte_end":388240,"line_start":1037,"line_end":1037,"column_start":64,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":3040},{"krate":0,"index":3044},{"krate":0,"index":3045},{"krate":0,"index":3049},{"krate":0,"index":3050},{"krate":0,"index":3052},{"krate":0,"index":3054}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":391204,"byte_end":391210,"line_start":1134,"line_end":1134,"column_start":67,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":3061},{"krate":0,"index":3063},{"krate":0,"index":3065}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":391866,"byte_end":391872,"line_start":1154,"line_end":1154,"column_start":59,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":3071},{"krate":0,"index":3072}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":392996,"byte_end":393008,"line_start":1190,"line_end":1190,"column_start":46,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3077},{"krate":0,"index":3079},{"krate":0,"index":3082}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":394558,"byte_end":394570,"line_start":1247,"line_end":1247,"column_start":56,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":3087},{"krate":0,"index":3088}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":395585,"byte_end":395591,"line_start":1283,"line_end":1283,"column_start":5,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3093}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":396363,"byte_end":396369,"line_start":1304,"line_end":1304,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":3098},{"krate":0,"index":3099}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":397317,"byte_end":397323,"line_start":1332,"line_end":1332,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":3105}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":397942,"byte_end":397948,"line_start":1350,"line_end":1350,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3111},{"krate":0,"index":3112},{"krate":0,"index":3113}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":398412,"byte_end":398418,"line_start":1371,"line_end":1371,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3120},{"krate":0,"index":3121}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":398876,"byte_end":398882,"line_start":1393,"line_end":1393,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3127},{"krate":0,"index":3128}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":399368,"byte_end":399374,"line_start":1413,"line_end":1413,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3135},{"krate":0,"index":3136},{"krate":0,"index":3138},{"krate":0,"index":3140},{"krate":0,"index":3142}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":402046,"byte_end":402052,"line_start":1505,"line_end":1505,"column_start":35,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":402187,"byte_end":402193,"line_start":1512,"line_end":1512,"column_start":67,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":3157}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":406161,"byte_end":406167,"line_start":1631,"line_end":1631,"column_start":5,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3165},{"krate":0,"index":3169}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":410222,"byte_end":410228,"line_start":1732,"line_end":1732,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3176}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":410855,"byte_end":410861,"line_start":1753,"line_end":1753,"column_start":64,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":3182}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":411607,"byte_end":411613,"line_start":1776,"line_end":1776,"column_start":5,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3190}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":412380,"byte_end":412384,"line_start":1800,"line_end":1800,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3196},{"krate":0,"index":3198}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":414408,"byte_end":414412,"line_start":1865,"line_end":1865,"column_start":42,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3205},{"krate":0,"index":3206},{"krate":0,"index":3207}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":414839,"byte_end":414843,"line_start":1884,"line_end":1884,"column_start":43,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3213},{"krate":0,"index":3214}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":415340,"byte_end":415344,"line_start":1907,"line_end":1907,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3220},{"krate":0,"index":3221}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":415729,"byte_end":415735,"line_start":1924,"line_end":1924,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3227}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_simba.rs","byte_start":416443,"byte_end":416451,"line_start":15,"line_end":15,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3241},{"krate":0,"index":3242},{"krate":0,"index":3243},{"krate":0,"index":3244},{"krate":0,"index":3245},{"krate":0,"index":3247},{"krate":0,"index":3249},{"krate":0,"index":3251},{"krate":0,"index":3253}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":421692,"byte_end":421704,"line_start":93,"line_end":93,"column_start":9,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":421819,"byte_end":421831,"line_start":98,"line_end":98,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3296}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":424486,"byte_end":424501,"line_start":182,"line_end":182,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3305},{"krate":0,"index":3306}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":425095,"byte_end":425107,"line_start":202,"line_end":202,"column_start":9,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":425224,"byte_end":425239,"line_start":206,"line_end":206,"column_start":9,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":425359,"byte_end":425374,"line_start":210,"line_end":210,"column_start":9,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":425506,"byte_end":425518,"line_start":215,"line_end":215,"column_start":9,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":425642,"byte_end":425657,"line_start":219,"line_end":219,"column_start":9,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":425784,"byte_end":425799,"line_start":223,"line_end":223,"column_start":9,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":425878,"byte_end":425884,"line_start":227,"line_end":227,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3342}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":445961,"byte_end":445966,"line_start":730,"line_end":730,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3358},{"krate":0,"index":3359},{"krate":0,"index":3360},{"krate":0,"index":3361}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":446315,"byte_end":446324,"line_start":749,"line_end":749,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3364},{"krate":0,"index":3365},{"krate":0,"index":3366},{"krate":0,"index":3367}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":446683,"byte_end":446690,"line_start":768,"line_end":768,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3370},{"krate":0,"index":3371},{"krate":0,"index":3372},{"krate":0,"index":3373}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":447017,"byte_end":447026,"line_start":787,"line_end":787,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3376},{"krate":0,"index":3377},{"krate":0,"index":3378},{"krate":0,"index":3379}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":447350,"byte_end":447356,"line_start":806,"line_end":806,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3385},{"krate":0,"index":3388},{"krate":0,"index":3390}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":448600,"byte_end":448606,"line_start":845,"line_end":845,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":3397},{"krate":0,"index":3400},{"krate":0,"index":3402}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":449929,"byte_end":449940,"line_start":884,"line_end":884,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3411}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":451996,"byte_end":452009,"line_start":49,"line_end":49,"column_start":39,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3462},{"krate":0,"index":3466}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":452842,"byte_end":452848,"line_start":83,"line_end":83,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3476},{"krate":0,"index":3481}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":453861,"byte_end":453872,"line_start":120,"line_end":120,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3491},{"krate":0,"index":3496}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":454922,"byte_end":454928,"line_start":157,"line_end":157,"column_start":64,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":3509},{"krate":0,"index":3510},{"krate":0,"index":3511},{"krate":0,"index":3515},{"krate":0,"index":3517},{"krate":0,"index":3522},{"krate":0,"index":3523},{"krate":0,"index":3524},{"krate":0,"index":3525},{"krate":0,"index":3526},{"krate":0,"index":3527}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":459243,"byte_end":459249,"line_start":302,"line_end":302,"column_start":60,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":3533},{"krate":0,"index":3534}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":460437,"byte_end":460443,"line_start":338,"line_end":338,"column_start":67,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":3540},{"krate":0,"index":3541}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":461453,"byte_end":461459,"line_start":370,"line_end":370,"column_start":63,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":3548}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":461977,"byte_end":461985,"line_start":387,"line_end":387,"column_start":54,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":3553},{"krate":0,"index":3554},{"krate":0,"index":3555},{"krate":0,"index":3556},{"krate":0,"index":3557}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":462502,"byte_end":462506,"line_start":414,"line_end":414,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3562},{"krate":0,"index":3563}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":462967,"byte_end":462974,"line_start":430,"line_end":430,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3567},{"krate":0,"index":3568},{"krate":0,"index":3569}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/properties.rs","byte_start":468329,"byte_end":468335,"line_start":12,"line_end":12,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3596},{"krate":0,"index":3597},{"krate":0,"index":3598}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/properties.rs","byte_start":470574,"byte_end":470580,"line_start":87,"line_end":87,"column_start":60,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":3604}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/properties.rs","byte_start":471136,"byte_end":471148,"line_start":104,"line_end":104,"column_start":49,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":3609},{"krate":0,"index":3610}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/scalar.rs","byte_start":472506,"byte_end":472507,"line_start":24,"line_end":24,"column_start":52,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3621}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":472863,"byte_end":472869,"line_start":7,"line_end":7,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3644},{"krate":0,"index":3646},{"krate":0,"index":3648}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":474925,"byte_end":474931,"line_start":76,"line_end":76,"column_start":73,"column_end":79},"value":"","parent":null,"children":[{"krate":0,"index":3655},{"krate":0,"index":3657},{"krate":0,"index":3659},{"krate":0,"index":3661}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":477690,"byte_end":477696,"line_start":173,"line_end":173,"column_start":80,"column_end":86},"value":"","parent":null,"children":[{"krate":0,"index":3668},{"krate":0,"index":3670},{"krate":0,"index":3672},{"krate":0,"index":3674},{"krate":0,"index":3677},{"krate":0,"index":3678},{"krate":0,"index":3680},{"krate":0,"index":3682}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":487621,"byte_end":487625,"line_start":74,"line_end":74,"column_start":17,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3717},{"krate":0,"index":3718},{"krate":0,"index":3720},{"krate":0,"index":3721},{"krate":0,"index":3722},{"krate":0,"index":3723}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":489977,"byte_end":489981,"line_start":143,"line_end":143,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3726},{"krate":0,"index":3727},{"krate":0,"index":3729},{"krate":0,"index":3730},{"krate":0,"index":3731}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":491006,"byte_end":491010,"line_start":179,"line_end":179,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3734}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":492785,"byte_end":492789,"line_start":251,"line_end":251,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3737},{"krate":0,"index":3738}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":493206,"byte_end":493210,"line_start":264,"line_end":264,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3745}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":493738,"byte_end":493742,"line_start":280,"line_end":280,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3753}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":494352,"byte_end":494356,"line_start":298,"line_end":298,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3761}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":495131,"byte_end":495135,"line_start":320,"line_end":320,"column_start":54,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3769}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/vec_storage.rs","byte_start":497168,"byte_end":497178,"line_start":36,"line_end":36,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3799},{"krate":0,"index":3800},{"krate":0,"index":3801},{"krate":0,"index":3802},{"krate":0,"index":3803}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/vec_storage.rs","byte_start":498730,"byte_end":498740,"line_start":92,"line_end":92,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3808}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/vec_storage.rs","byte_start":498925,"byte_end":498935,"line_start":104,"line_end":104,"column_start":59,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":3812},{"krate":0,"index":3813},{"krate":0,"index":3814},{"krate":0,"index":3815},{"krate":0,"index":3816},{"krate":0,"index":3817},{"krate":0,"index":3818},{"krate":0,"index":3819},{"krate":0,"index":3820}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/vec_storage.rs","byte_start":499888,"byte_end":499898,"line_start":153,"line_end":153,"column_start":63,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":3824},{"krate":0,"index":3825},{"krate":0,"index":3826},{"krate":0,"index":3827},{"krate":0,"index":3828},{"krate":0,"index":3829},{"krate":0,"index":3830},{"krate":0,"index":3831},{"krate":0,"index":3832}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/vec_storage.rs","byte_start":500891,"byte_end":500901,"line_start":207,"line_end":207,"column_start":62,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":3836},{"krate":0,"index":3837}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/vec_storage.rs","byte_start":501241,"byte_end":501251,"line_start":222,"line_end":222,"column_start":69,"column_end":79},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/vec_storage.rs","byte_start":501411,"byte_end":501421,"line_start":227,"line_end":227,"column_start":72,"column_end":82},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/vec_storage.rs","byte_start":501575,"byte_end":501585,"line_start":232,"line_end":232,"column_start":66,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":3847},{"krate":0,"index":3848}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/vec_storage.rs","byte_start":502355,"byte_end":502365,"line_start":262,"line_end":262,"column_start":73,"column_end":83},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/vec_storage.rs","byte_start":502529,"byte_end":502539,"line_start":267,"line_end":267,"column_start":76,"column_end":86},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/vec_storage.rs","byte_start":502658,"byte_end":502668,"line_start":272,"line_end":272,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3858}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/vec_storage.rs","byte_start":503373,"byte_end":503383,"line_start":288,"line_end":288,"column_start":50,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3864}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/vec_storage.rs","byte_start":503865,"byte_end":503875,"line_start":301,"line_end":301,"column_start":50,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3871}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/vec_storage.rs","byte_start":504782,"byte_end":504792,"line_start":329,"line_end":329,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3875}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/abstract_rotation.rs","byte_start":518188,"byte_end":518196,"line_start":33,"line_end":33,"column_start":63,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":3936},{"krate":0,"index":3937},{"krate":0,"index":3938},{"krate":0,"index":3939},{"krate":0,"index":3940},{"krate":0,"index":3941},{"krate":0,"index":3942}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/abstract_rotation.rs","byte_start":519276,"byte_end":519290,"line_start":86,"line_end":86,"column_start":52,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":3945},{"krate":0,"index":3946},{"krate":0,"index":3947},{"krate":0,"index":3948},{"krate":0,"index":3949},{"krate":0,"index":3950},{"krate":0,"index":3951}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/abstract_rotation.rs","byte_start":520105,"byte_end":520116,"line_start":126,"line_end":126,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":3954},{"krate":0,"index":3955},{"krate":0,"index":3956},{"krate":0,"index":3957},{"krate":0,"index":3958},{"krate":0,"index":3959},{"krate":0,"index":3960}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":521842,"byte_end":521847,"line_start":33,"line_end":33,"column_start":70,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":3987}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":522102,"byte_end":522107,"line_start":43,"line_end":43,"column_start":45,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":523553,"byte_end":523558,"line_start":101,"line_end":101,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3995},{"krate":0,"index":3996},{"krate":0,"index":3997},{"krate":0,"index":3998},{"krate":0,"index":3999},{"krate":0,"index":4000},{"krate":0,"index":4001},{"krate":0,"index":4002},{"krate":0,"index":4003}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":527185,"byte_end":527190,"line_start":221,"line_end":221,"column_start":55,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4007},{"krate":0,"index":4008},{"krate":0,"index":4009}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":527601,"byte_end":527606,"line_start":239,"line_end":239,"column_start":57,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":4013},{"krate":0,"index":4014}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":528082,"byte_end":528087,"line_start":261,"line_end":261,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":4018},{"krate":0,"index":4019}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":528459,"byte_end":528464,"line_start":277,"line_end":277,"column_start":41,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":528557,"byte_end":528562,"line_start":279,"line_end":279,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":4026}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":528772,"byte_end":528777,"line_start":289,"line_end":289,"column_start":57,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":4030},{"krate":0,"index":4031},{"krate":0,"index":4032},{"krate":0,"index":4033},{"krate":0,"index":4034}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":529426,"byte_end":529431,"line_start":322,"line_end":322,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":4038},{"krate":0,"index":4039},{"krate":0,"index":4040}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":530193,"byte_end":530198,"line_start":351,"line_end":351,"column_start":61,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":4044}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_construction.rs","byte_start":531568,"byte_end":531573,"line_start":15,"line_end":15,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4095},{"krate":0,"index":4096},{"krate":0,"index":4097},{"krate":0,"index":4098}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_construction.rs","byte_start":534771,"byte_end":534776,"line_start":118,"line_end":118,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":4102},{"krate":0,"index":4103}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_construction.rs","byte_start":535072,"byte_end":535080,"line_start":133,"line_end":133,"column_start":59,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":4107}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_conversion.rs","byte_start":538431,"byte_end":538436,"line_start":28,"line_end":28,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4137},{"krate":0,"index":4138},{"krate":0,"index":4140}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_conversion.rs","byte_start":539123,"byte_end":539128,"line_start":53,"line_end":53,"column_start":62,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":4145},{"krate":0,"index":4146},{"krate":0,"index":4147}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_conversion.rs","byte_start":541520,"byte_end":541527,"line_start":134,"line_end":134,"column_start":64,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":4151}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_conversion.rs","byte_start":541794,"byte_end":541799,"line_start":145,"line_end":145,"column_start":53,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":4155}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_conversion.rs","byte_start":542042,"byte_end":542047,"line_start":156,"line_end":156,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4161}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_conversion.rs","byte_start":542522,"byte_end":542527,"line_start":170,"line_end":170,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4168}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_conversion.rs","byte_start":543091,"byte_end":543096,"line_start":189,"line_end":189,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4175}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_conversion.rs","byte_start":543769,"byte_end":543774,"line_start":212,"line_end":212,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4182}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_ops.rs","byte_start":546372,"byte_end":546377,"line_start":23,"line_end":23,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":4254},{"krate":0,"index":4255}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_ops.rs","byte_start":546597,"byte_end":546602,"line_start":35,"line_end":35,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":4259}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_ops.rs","byte_start":546837,"byte_end":546842,"line_start":50,"line_end":50,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":4263},{"krate":0,"index":4264}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_simba.rs","byte_start":554118,"byte_end":554123,"line_start":9,"line_end":9,"column_start":55,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4286},{"krate":0,"index":4287},{"krate":0,"index":4288},{"krate":0,"index":4289},{"krate":0,"index":4290},{"krate":0,"index":4291},{"krate":0,"index":4292},{"krate":0,"index":4293},{"krate":0,"index":4294}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":556063,"byte_end":556071,"line_start":35,"line_end":35,"column_start":70,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":4322}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":556332,"byte_end":556340,"line_start":45,"line_end":45,"column_start":45,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":556498,"byte_end":556506,"line_start":52,"line_end":52,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":4330}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":558039,"byte_end":558047,"line_start":114,"line_end":114,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4334},{"krate":0,"index":4335},{"krate":0,"index":4336},{"krate":0,"index":4337},{"krate":0,"index":4338},{"krate":0,"index":4339},{"krate":0,"index":4340},{"krate":0,"index":4341},{"krate":0,"index":4342},{"krate":0,"index":4343},{"krate":0,"index":4344}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":567399,"byte_end":567407,"line_start":364,"line_end":364,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4348},{"krate":0,"index":4349},{"krate":0,"index":4350},{"krate":0,"index":4351}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":570443,"byte_end":570451,"line_start":446,"line_end":446,"column_start":41,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":570559,"byte_end":570567,"line_start":448,"line_end":448,"column_start":55,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":4358}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":570758,"byte_end":570766,"line_start":458,"line_end":458,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4362},{"krate":0,"index":4363},{"krate":0,"index":4364}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":571186,"byte_end":571194,"line_start":477,"line_end":477,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4368},{"krate":0,"index":4369}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":571684,"byte_end":571692,"line_start":500,"line_end":500,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4373},{"krate":0,"index":4374}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":572112,"byte_end":572120,"line_start":522,"line_end":522,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4378}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_construction.rs","byte_start":573483,"byte_end":573491,"line_start":11,"line_end":11,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4405}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_construction.rs","byte_start":574078,"byte_end":574086,"line_start":33,"line_end":33,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4409}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_conversion.rs","byte_start":575202,"byte_end":575210,"line_start":33,"line_end":33,"column_start":56,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":4450},{"krate":0,"index":4451},{"krate":0,"index":4452}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_conversion.rs","byte_start":575831,"byte_end":575840,"line_start":55,"line_end":55,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":4456},{"krate":0,"index":4457},{"krate":0,"index":4458}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_conversion.rs","byte_start":576433,"byte_end":576442,"line_start":78,"line_end":78,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4462},{"krate":0,"index":4463},{"krate":0,"index":4464}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_conversion.rs","byte_start":577035,"byte_end":577043,"line_start":101,"line_end":101,"column_start":62,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":4470},{"krate":0,"index":4471},{"krate":0,"index":4472}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_conversion.rs","byte_start":577701,"byte_end":577709,"line_start":124,"line_end":124,"column_start":64,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":4478},{"krate":0,"index":4479},{"krate":0,"index":4480}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_conversion.rs","byte_start":578424,"byte_end":578432,"line_start":147,"line_end":147,"column_start":54,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":4486},{"krate":0,"index":4487},{"krate":0,"index":4488}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_conversion.rs","byte_start":579382,"byte_end":579390,"line_start":176,"line_end":176,"column_start":62,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":4493},{"krate":0,"index":4494},{"krate":0,"index":4497}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_conversion.rs","byte_start":580996,"byte_end":581003,"line_start":220,"line_end":220,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4500}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_conversion.rs","byte_start":581140,"byte_end":581147,"line_start":227,"line_end":227,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4503}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_conversion.rs","byte_start":581280,"byte_end":581287,"line_start":234,"line_end":234,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4506}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_conversion.rs","byte_start":581424,"byte_end":581431,"line_start":241,"line_end":241,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4509}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_conversion.rs","byte_start":581614,"byte_end":581622,"line_start":249,"line_end":249,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4515}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_conversion.rs","byte_start":582103,"byte_end":582111,"line_start":265,"line_end":265,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4522}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_conversion.rs","byte_start":582674,"byte_end":582682,"line_start":283,"line_end":283,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4529}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_conversion.rs","byte_start":583410,"byte_end":583418,"line_start":305,"line_end":305,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4536}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_ops.rs","byte_start":585198,"byte_end":585206,"line_start":33,"line_end":33,"column_start":55,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":4574},{"krate":0,"index":4575}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_simba.rs","byte_start":590664,"byte_end":590672,"line_start":9,"line_end":9,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4588},{"krate":0,"index":4589},{"krate":0,"index":4590},{"krate":0,"index":4591},{"krate":0,"index":4592},{"krate":0,"index":4593},{"krate":0,"index":4594},{"krate":0,"index":4595},{"krate":0,"index":4596}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":592535,"byte_end":592544,"line_start":24,"line_end":24,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4630},{"krate":0,"index":4631},{"krate":0,"index":4633},{"krate":0,"index":4634},{"krate":0,"index":4635},{"krate":0,"index":4638},{"krate":0,"index":4641},{"krate":0,"index":4642},{"krate":0,"index":4643},{"krate":0,"index":4644},{"krate":0,"index":4645},{"krate":0,"index":4646}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":600106,"byte_end":600114,"line_start":241,"line_end":241,"column_start":55,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":4649}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":600736,"byte_end":600745,"line_start":270,"line_end":270,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4654},{"krate":0,"index":4656},{"krate":0,"index":4657},{"krate":0,"index":4658},{"krate":0,"index":4660},{"krate":0,"index":4664},{"krate":0,"index":4665},{"krate":0,"index":4666},{"krate":0,"index":4667},{"krate":0,"index":4668},{"krate":0,"index":4671},{"krate":0,"index":4674},{"krate":0,"index":4677},{"krate":0,"index":4680},{"krate":0,"index":4683},{"krate":0,"index":4686},{"krate":0,"index":4687},{"krate":0,"index":4688},{"krate":0,"index":4689},{"krate":0,"index":4690},{"krate":0,"index":4691},{"krate":0,"index":4692}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":622462,"byte_end":622470,"line_start":867,"line_end":867,"column_start":55,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":4695}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":625108,"byte_end":625118,"line_start":36,"line_end":36,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4734}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":625711,"byte_end":625721,"line_start":62,"line_end":62,"column_start":36,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":625798,"byte_end":625808,"line_start":64,"line_end":64,"column_start":38,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":4739}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":626134,"byte_end":626144,"line_start":75,"line_end":75,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":4743}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":626288,"byte_end":626298,"line_start":81,"line_end":81,"column_start":45,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":626344,"byte_end":626354,"line_start":83,"line_end":83,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4749}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":627121,"byte_end":627131,"line_start":118,"line_end":118,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4752},{"krate":0,"index":4753},{"krate":0,"index":4754},{"krate":0,"index":4755},{"krate":0,"index":4756},{"krate":0,"index":4757},{"krate":0,"index":4758},{"krate":0,"index":4759},{"krate":0,"index":4760},{"krate":0,"index":4761},{"krate":0,"index":4762},{"krate":0,"index":4763},{"krate":0,"index":4764},{"krate":0,"index":4765}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":632497,"byte_end":632507,"line_start":308,"line_end":308,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4768},{"krate":0,"index":4769},{"krate":0,"index":4770},{"krate":0,"index":4771},{"krate":0,"index":4772},{"krate":0,"index":4773},{"krate":0,"index":4774},{"krate":0,"index":4775},{"krate":0,"index":4776},{"krate":0,"index":4777},{"krate":0,"index":4780},{"krate":0,"index":4781},{"krate":0,"index":4782},{"krate":0,"index":4783},{"krate":0,"index":4784},{"krate":0,"index":4787},{"krate":0,"index":4788},{"krate":0,"index":4789},{"krate":0,"index":4790},{"krate":0,"index":4791},{"krate":0,"index":4792},{"krate":0,"index":4793},{"krate":0,"index":4795},{"krate":0,"index":4797},{"krate":0,"index":4798},{"krate":0,"index":4799},{"krate":0,"index":4800},{"krate":0,"index":4801},{"krate":0,"index":4802},{"krate":0,"index":4803},{"krate":0,"index":4804},{"krate":0,"index":4805},{"krate":0,"index":4806},{"krate":0,"index":4807},{"krate":0,"index":4808}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":652431,"byte_end":652441,"line_start":923,"line_end":923,"column_start":59,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":4811},{"krate":0,"index":4812},{"krate":0,"index":4813}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":652957,"byte_end":652967,"line_start":939,"line_end":939,"column_start":61,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":4817},{"krate":0,"index":4818}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":653558,"byte_end":653568,"line_start":958,"line_end":958,"column_start":53,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":4822},{"krate":0,"index":4823}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":654068,"byte_end":654078,"line_start":972,"line_end":972,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":4827}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":654432,"byte_end":654442,"line_start":985,"line_end":985,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4832},{"krate":0,"index":4833},{"krate":0,"index":4834},{"krate":0,"index":4835},{"krate":0,"index":4836}],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":654904,"byte_end":654918,"line_start":1009,"line_end":1009,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4839},{"krate":0,"index":4840},{"krate":0,"index":4841},{"krate":0,"index":4842},{"krate":0,"index":4843},{"krate":0,"index":4844},{"krate":0,"index":4845},{"krate":0,"index":4846},{"krate":0,"index":4847},{"krate":0,"index":4848},{"krate":0,"index":4850},{"krate":0,"index":4851},{"krate":0,"index":4852},{"krate":0,"index":4853},{"krate":0,"index":4854},{"krate":0,"index":4856},{"krate":0,"index":4857},{"krate":0,"index":4858},{"krate":0,"index":4859},{"krate":0,"index":4860},{"krate":0,"index":4861},{"krate":0,"index":4862},{"krate":0,"index":4863},{"krate":0,"index":4864},{"krate":0,"index":4865},{"krate":0,"index":4866}],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":673399,"byte_end":673413,"line_start":1547,"line_end":1547,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4869}],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":673531,"byte_end":673545,"line_start":1553,"line_end":1553,"column_start":52,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":4872}],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":674160,"byte_end":674174,"line_start":1575,"line_end":1575,"column_start":59,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":4875},{"krate":0,"index":4876},{"krate":0,"index":4877}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":674513,"byte_end":674527,"line_start":1589,"line_end":1589,"column_start":61,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":4880},{"krate":0,"index":4881}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":674940,"byte_end":674954,"line_start":1607,"line_end":1607,"column_start":53,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":4884},{"krate":0,"index":4885}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":675847,"byte_end":675857,"line_start":22,"line_end":22,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4917},{"krate":0,"index":4918}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":676849,"byte_end":676859,"line_start":50,"line_end":50,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4921},{"krate":0,"index":4922},{"krate":0,"index":4924},{"krate":0,"index":4925}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":678417,"byte_end":678427,"line_start":104,"line_end":104,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4928}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":678952,"byte_end":678962,"line_start":122,"line_end":122,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4932}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":679108,"byte_end":679118,"line_start":132,"line_end":132,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4935},{"krate":0,"index":4936}],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":679382,"byte_end":679390,"line_start":147,"line_end":147,"column_start":56,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":4939}],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":679960,"byte_end":679974,"line_start":173,"line_end":173,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4944},{"krate":0,"index":4945},{"krate":0,"index":4947},{"krate":0,"index":4948},{"krate":0,"index":4949},{"krate":0,"index":4956},{"krate":0,"index":4957},{"krate":0,"index":4958},{"krate":0,"index":4961},{"krate":0,"index":4964},{"krate":0,"index":4967},{"krate":0,"index":4970},{"krate":0,"index":4973},{"krate":0,"index":4976},{"krate":0,"index":4979},{"krate":0,"index":4982},{"krate":0,"index":4984},{"krate":0,"index":4986},{"krate":0,"index":4988},{"krate":0,"index":4990}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":703755,"byte_end":703769,"line_start":794,"line_end":794,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4996}],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":703942,"byte_end":703950,"line_start":804,"line_end":804,"column_start":60,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":4999}],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_conversion.rs","byte_start":706581,"byte_end":706591,"line_start":35,"line_end":35,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5033},{"krate":0,"index":5034},{"krate":0,"index":5035}],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_conversion.rs","byte_start":707123,"byte_end":707137,"line_start":58,"line_end":58,"column_start":47,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":5039},{"krate":0,"index":5040},{"krate":0,"index":5041}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_conversion.rs","byte_start":707695,"byte_end":707709,"line_start":79,"line_end":79,"column_start":45,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":5045},{"krate":0,"index":5046},{"krate":0,"index":5047}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_conversion.rs","byte_start":708293,"byte_end":708307,"line_start":102,"line_end":102,"column_start":51,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":5052},{"krate":0,"index":5053},{"krate":0,"index":5054}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_conversion.rs","byte_start":708893,"byte_end":708907,"line_start":124,"line_end":124,"column_start":53,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":5059},{"krate":0,"index":5060},{"krate":0,"index":5061}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_conversion.rs","byte_start":709528,"byte_end":709542,"line_start":146,"line_end":146,"column_start":52,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":5066},{"krate":0,"index":5067},{"krate":0,"index":5068}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_conversion.rs","byte_start":710146,"byte_end":710160,"line_start":168,"line_end":168,"column_start":79,"column_end":93},"value":"","parent":null,"children":[{"krate":0,"index":5072},{"krate":0,"index":5073},{"krate":0,"index":5074}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_conversion.rs","byte_start":711506,"byte_end":711513,"line_start":221,"line_end":221,"column_start":52,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":5077}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_conversion.rs","byte_start":711701,"byte_end":711710,"line_start":231,"line_end":231,"column_start":52,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":5080}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_conversion.rs","byte_start":711897,"byte_end":711911,"line_start":241,"line_end":241,"column_start":47,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":5083}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_conversion.rs","byte_start":712106,"byte_end":712113,"line_start":251,"line_end":251,"column_start":52,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":5086}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_conversion.rs","byte_start":712316,"byte_end":712326,"line_start":261,"line_end":261,"column_start":50,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":5089}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_conversion.rs","byte_start":712496,"byte_end":712506,"line_start":268,"line_end":268,"column_start":76,"column_end":86},"value":"","parent":null,"children":[{"krate":0,"index":5094}],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_conversion.rs","byte_start":712814,"byte_end":712824,"line_start":279,"line_end":279,"column_start":76,"column_end":86},"value":"","parent":null,"children":[{"krate":0,"index":5100}],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_conversion.rs","byte_start":713221,"byte_end":713231,"line_start":295,"line_end":295,"column_start":76,"column_end":86},"value":"","parent":null,"children":[{"krate":0,"index":5106}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_conversion.rs","byte_start":713737,"byte_end":713747,"line_start":315,"line_end":315,"column_start":77,"column_end":87},"value":"","parent":null,"children":[{"krate":0,"index":5112}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_conversion.rs","byte_start":714491,"byte_end":714505,"line_start":344,"line_end":344,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5118}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_conversion.rs","byte_start":714869,"byte_end":714883,"line_start":356,"line_end":356,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5124}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_conversion.rs","byte_start":715348,"byte_end":715362,"line_start":373,"line_end":373,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5130}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_conversion.rs","byte_start":715960,"byte_end":715974,"line_start":394,"line_end":394,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5136}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_coordinates.rs","byte_start":716958,"byte_end":716968,"line_start":11,"line_end":11,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":5149},{"krate":0,"index":5150}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_coordinates.rs","byte_start":717145,"byte_end":717155,"line_start":20,"line_end":20,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":5153}],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_ops.rs","byte_start":718822,"byte_end":718832,"line_start":65,"line_end":65,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":5186},{"krate":0,"index":5187}],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_ops.rs","byte_start":718999,"byte_end":719009,"line_start":74,"line_end":74,"column_start":44,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":5190}],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_ops.rs","byte_start":732343,"byte_end":732353,"line_start":553,"line_end":553,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":5196},{"krate":0,"index":5197}],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_simba.rs","byte_start":736492,"byte_end":736502,"line_start":7,"line_end":7,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5213},{"krate":0,"index":5214},{"krate":0,"index":5215},{"krate":0,"index":5216},{"krate":0,"index":5217},{"krate":0,"index":5218},{"krate":0,"index":5219},{"krate":0,"index":5220},{"krate":0,"index":5221}],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_simba.rs","byte_start":737489,"byte_end":737503,"line_start":50,"line_end":50,"column_start":43,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":5224},{"krate":0,"index":5225},{"krate":0,"index":5226},{"krate":0,"index":5227},{"krate":0,"index":5228},{"krate":0,"index":5229},{"krate":0,"index":5230},{"krate":0,"index":5231},{"krate":0,"index":5232}],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":739006,"byte_end":739013,"line_start":13,"line_end":13,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":5256},{"krate":0,"index":5257},{"krate":0,"index":5258},{"krate":0,"index":5259},{"krate":0,"index":5260}],"docs":"","sig":null,"attributes":[]},{"id":476,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":739759,"byte_end":739770,"line_start":43,"line_end":43,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5263},{"krate":0,"index":5264},{"krate":0,"index":5265},{"krate":0,"index":5266},{"krate":0,"index":5267},{"krate":0,"index":5268},{"krate":0,"index":5269},{"krate":0,"index":5270},{"krate":0,"index":5271},{"krate":0,"index":5272},{"krate":0,"index":5273},{"krate":0,"index":5274},{"krate":0,"index":5275},{"krate":0,"index":5276},{"krate":0,"index":5277},{"krate":0,"index":5278},{"krate":0,"index":5279},{"krate":0,"index":5280},{"krate":0,"index":5281}],"docs":"","sig":null,"attributes":[]},{"id":477,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":749938,"byte_end":749949,"line_start":365,"line_end":365,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":5284}],"docs":"","sig":null,"attributes":[]},{"id":478,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":750113,"byte_end":750124,"line_start":371,"line_end":371,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5287},{"krate":0,"index":5288},{"krate":0,"index":5289}],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":750469,"byte_end":750480,"line_start":385,"line_end":385,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":5292},{"krate":0,"index":5293}],"docs":"","sig":null,"attributes":[]},{"id":480,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":750916,"byte_end":750927,"line_start":403,"line_end":403,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":5296},{"krate":0,"index":5297}],"docs":"","sig":null,"attributes":[]},{"id":481,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":751676,"byte_end":751687,"line_start":16,"line_end":16,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5321},{"krate":0,"index":5322},{"krate":0,"index":5323},{"krate":0,"index":5324},{"krate":0,"index":5325},{"krate":0,"index":5327},{"krate":0,"index":5328},{"krate":0,"index":5329},{"krate":0,"index":5330},{"krate":0,"index":5331},{"krate":0,"index":5332},{"krate":0,"index":5335},{"krate":0,"index":5338},{"krate":0,"index":5341}],"docs":"","sig":null,"attributes":[]},{"id":482,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":761049,"byte_end":761060,"line_start":283,"line_end":283,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":5346}],"docs":"","sig":null,"attributes":[]},{"id":483,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":761230,"byte_end":761238,"line_start":293,"line_end":293,"column_start":57,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":5349}],"docs":"","sig":null,"attributes":[]},{"id":484,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_conversion.rs","byte_start":762607,"byte_end":762618,"line_start":29,"line_end":29,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":5380},{"krate":0,"index":5381},{"krate":0,"index":5382}],"docs":"","sig":null,"attributes":[]},{"id":485,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_conversion.rs","byte_start":763150,"byte_end":763161,"line_start":50,"line_end":50,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5386},{"krate":0,"index":5387},{"krate":0,"index":5388}],"docs":"","sig":null,"attributes":[]},{"id":486,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_conversion.rs","byte_start":763753,"byte_end":763764,"line_start":73,"line_end":73,"column_start":51,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":5393},{"krate":0,"index":5394},{"krate":0,"index":5395}],"docs":"","sig":null,"attributes":[]},{"id":487,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_conversion.rs","byte_start":764350,"byte_end":764361,"line_start":95,"line_end":95,"column_start":53,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":5400},{"krate":0,"index":5401},{"krate":0,"index":5402}],"docs":"","sig":null,"attributes":[]},{"id":488,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_conversion.rs","byte_start":764982,"byte_end":764993,"line_start":117,"line_end":117,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":5407},{"krate":0,"index":5408},{"krate":0,"index":5409}],"docs":"","sig":null,"attributes":[]},{"id":489,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_conversion.rs","byte_start":765597,"byte_end":765608,"line_start":139,"line_end":139,"column_start":79,"column_end":90},"value":"","parent":null,"children":[{"krate":0,"index":5413},{"krate":0,"index":5414},{"krate":0,"index":5415}],"docs":"","sig":null,"attributes":[]},{"id":490,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_conversion.rs","byte_start":766080,"byte_end":766089,"line_start":157,"line_end":157,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":5418}],"docs":"","sig":null,"attributes":[]},{"id":491,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_conversion.rs","byte_start":766273,"byte_end":766284,"line_start":167,"line_end":167,"column_start":47,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":5421}],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_conversion.rs","byte_start":766476,"byte_end":766483,"line_start":177,"line_end":177,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":5424}],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_conversion.rs","byte_start":766671,"byte_end":766678,"line_start":187,"line_end":187,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":5427}],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_conversion.rs","byte_start":766912,"byte_end":766923,"line_start":197,"line_end":197,"column_start":84,"column_end":95},"value":"","parent":null,"children":[{"krate":0,"index":5432}],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_conversion.rs","byte_start":767334,"byte_end":767345,"line_start":211,"line_end":211,"column_start":84,"column_end":95},"value":"","parent":null,"children":[{"krate":0,"index":5438}],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_conversion.rs","byte_start":767800,"byte_end":767811,"line_start":225,"line_end":225,"column_start":84,"column_end":95},"value":"","parent":null,"children":[{"krate":0,"index":5444}],"docs":"","sig":null,"attributes":[]},{"id":497,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_conversion.rs","byte_start":768449,"byte_end":768460,"line_start":245,"line_end":245,"column_start":85,"column_end":96},"value":"","parent":null,"children":[{"krate":0,"index":5450}],"docs":"","sig":null,"attributes":[]},{"id":498,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_ops.rs","byte_start":770380,"byte_end":770391,"line_start":45,"line_end":45,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":5478},{"krate":0,"index":5479}],"docs":"","sig":null,"attributes":[]},{"id":499,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_ops.rs","byte_start":770890,"byte_end":770901,"line_start":66,"line_end":66,"column_start":56,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":5488},{"krate":0,"index":5489}],"docs":"","sig":null,"attributes":[]},{"id":500,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_ops.rs","byte_start":771475,"byte_end":771486,"line_start":91,"line_end":91,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":5498},{"krate":0,"index":5499}],"docs":"","sig":null,"attributes":[]},{"id":501,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_ops.rs","byte_start":772054,"byte_end":772065,"line_start":115,"line_end":115,"column_start":56,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":5508},{"krate":0,"index":5509}],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_ops.rs","byte_start":778860,"byte_end":778871,"line_start":323,"line_end":323,"column_start":54,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":5520}],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_ops.rs","byte_start":779079,"byte_end":779090,"line_start":333,"line_end":333,"column_start":62,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":5524}],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_ops.rs","byte_start":779324,"byte_end":779335,"line_start":344,"line_end":344,"column_start":54,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":5527}],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_ops.rs","byte_start":779543,"byte_end":779554,"line_start":354,"line_end":354,"column_start":62,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":5531}],"docs":"","sig":null,"attributes":[]},{"id":528,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_ops.rs","byte_start":779787,"byte_end":779798,"line_start":365,"line_end":365,"column_start":55,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":5534}],"docs":"","sig":null,"attributes":[]},{"id":529,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_ops.rs","byte_start":780052,"byte_end":780063,"line_start":376,"line_end":376,"column_start":63,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":5538}],"docs":"","sig":null,"attributes":[]},{"id":530,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_ops.rs","byte_start":780341,"byte_end":780352,"line_start":388,"line_end":388,"column_start":55,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":5541}],"docs":"","sig":null,"attributes":[]},{"id":531,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_ops.rs","byte_start":780606,"byte_end":780617,"line_start":399,"line_end":399,"column_start":63,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":5545}],"docs":"","sig":null,"attributes":[]},{"id":532,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_ops.rs","byte_start":780894,"byte_end":780902,"line_start":411,"line_end":411,"column_start":54,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":5548}],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_ops.rs","byte_start":781179,"byte_end":781187,"line_start":422,"line_end":422,"column_start":62,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":5552}],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_ops.rs","byte_start":781488,"byte_end":781496,"line_start":434,"line_end":434,"column_start":54,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":5555}],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_ops.rs","byte_start":781773,"byte_end":781781,"line_start":445,"line_end":445,"column_start":62,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":5559}],"docs":"","sig":null,"attributes":[]},{"id":536,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_simba.rs","byte_start":782198,"byte_end":782209,"line_start":9,"line_end":9,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":5569},{"krate":0,"index":5570},{"krate":0,"index":5571},{"krate":0,"index":5572},{"krate":0,"index":5573},{"krate":0,"index":5574},{"krate":0,"index":5575},{"krate":0,"index":5576},{"krate":0,"index":5577}],"docs":"","sig":null,"attributes":[]},{"id":537,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":784288,"byte_end":784299,"line_start":35,"line_end":35,"column_start":70,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":5608}],"docs":"","sig":null,"attributes":[]},{"id":538,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":784520,"byte_end":784531,"line_start":45,"line_end":45,"column_start":45,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":539,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":784649,"byte_end":784660,"line_start":52,"line_end":52,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":5616}],"docs":"","sig":null,"attributes":[]},{"id":540,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":786127,"byte_end":786138,"line_start":114,"line_end":114,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5620},{"krate":0,"index":5621},{"krate":0,"index":5622},{"krate":0,"index":5623}],"docs":"","sig":null,"attributes":[]},{"id":541,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":789187,"byte_end":789198,"line_start":207,"line_end":207,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":5627}],"docs":"","sig":null,"attributes":[]},{"id":542,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":789796,"byte_end":789807,"line_start":227,"line_end":227,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":5631}],"docs":"","sig":null,"attributes":[]},{"id":543,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":790388,"byte_end":790399,"line_start":245,"line_end":245,"column_start":41,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":544,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":790504,"byte_end":790515,"line_start":247,"line_end":247,"column_start":55,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":5638}],"docs":"","sig":null,"attributes":[]},{"id":545,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":790736,"byte_end":790747,"line_start":257,"line_end":257,"column_start":55,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":5642},{"krate":0,"index":5643},{"krate":0,"index":5644}],"docs":"","sig":null,"attributes":[]},{"id":546,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":791158,"byte_end":791169,"line_start":275,"line_end":275,"column_start":57,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":5648},{"krate":0,"index":5649}],"docs":"","sig":null,"attributes":[]},{"id":547,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":791645,"byte_end":791656,"line_start":297,"line_end":297,"column_start":49,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":5653},{"krate":0,"index":5654}],"docs":"","sig":null,"attributes":[]},{"id":548,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":792072,"byte_end":792083,"line_start":318,"line_end":318,"column_start":61,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":5658}],"docs":"","sig":null,"attributes":[]},{"id":549,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation_construction.rs","byte_start":793450,"byte_end":793461,"line_start":18,"line_end":18,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":5706}],"docs":"","sig":null,"attributes":[]},{"id":550,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation_construction.rs","byte_start":794134,"byte_end":794145,"line_start":42,"line_end":42,"column_start":56,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":5710}],"docs":"","sig":null,"attributes":[]},{"id":551,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation_construction.rs","byte_start":794334,"byte_end":794342,"line_start":52,"line_end":52,"column_start":65,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":5714}],"docs":"","sig":null,"attributes":[]},{"id":552,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation_conversion.rs","byte_start":797418,"byte_end":797429,"line_start":25,"line_end":25,"column_start":59,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":5750},{"krate":0,"index":5751},{"krate":0,"index":5752}],"docs":"","sig":null,"attributes":[]},{"id":553,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation_conversion.rs","byte_start":798055,"byte_end":798066,"line_start":49,"line_end":49,"column_start":62,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":5758},{"krate":0,"index":5759},{"krate":0,"index":5760}],"docs":"","sig":null,"attributes":[]},{"id":554,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation_conversion.rs","byte_start":798687,"byte_end":798698,"line_start":72,"line_end":72,"column_start":64,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":5766},{"krate":0,"index":5767},{"krate":0,"index":5768}],"docs":"","sig":null,"attributes":[]},{"id":555,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation_conversion.rs","byte_start":799376,"byte_end":799387,"line_start":95,"line_end":95,"column_start":54,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":5774},{"krate":0,"index":5775},{"krate":0,"index":5776}],"docs":"","sig":null,"attributes":[]},{"id":556,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation_conversion.rs","byte_start":800188,"byte_end":800199,"line_start":122,"line_end":122,"column_start":62,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":5781},{"krate":0,"index":5782},{"krate":0,"index":5784}],"docs":"","sig":null,"attributes":[]},{"id":557,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation_conversion.rs","byte_start":801331,"byte_end":801338,"line_start":158,"line_end":158,"column_start":70,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":5788}],"docs":"","sig":null,"attributes":[]},{"id":558,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation_conversion.rs","byte_start":801630,"byte_end":801641,"line_start":169,"line_end":169,"column_start":53,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":5792}],"docs":"","sig":null,"attributes":[]},{"id":559,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation_conversion.rs","byte_start":801889,"byte_end":801900,"line_start":180,"line_end":180,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":5798}],"docs":"","sig":null,"attributes":[]},{"id":560,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation_conversion.rs","byte_start":802358,"byte_end":802369,"line_start":196,"line_end":196,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":5805}],"docs":"","sig":null,"attributes":[]},{"id":561,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation_conversion.rs","byte_start":802897,"byte_end":802908,"line_start":214,"line_end":214,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":5812}],"docs":"","sig":null,"attributes":[]},{"id":562,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation_conversion.rs","byte_start":803577,"byte_end":803588,"line_start":236,"line_end":236,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":5819}],"docs":"","sig":null,"attributes":[]},{"id":573,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation_simba.rs","byte_start":812432,"byte_end":812443,"line_start":10,"line_end":10,"column_start":55,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":5883},{"krate":0,"index":5884},{"krate":0,"index":5885},{"krate":0,"index":5886},{"krate":0,"index":5887},{"krate":0,"index":5888},{"krate":0,"index":5889},{"krate":0,"index":5890},{"krate":0,"index":5891}],"docs":"","sig":null,"attributes":[]},{"id":574,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":815806,"byte_end":815814,"line_start":74,"line_end":74,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5923}],"docs":"","sig":null,"attributes":[]},{"id":575,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":816124,"byte_end":816132,"line_start":86,"line_end":86,"column_start":9,"column_end":17},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":576,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":816288,"byte_end":816296,"line_start":93,"line_end":93,"column_start":74,"column_end":82},"value":"","parent":null,"children":[{"krate":0,"index":5933}],"docs":"","sig":null,"attributes":[]},{"id":577,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":816535,"byte_end":816543,"line_start":103,"line_end":103,"column_start":56,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":5938}],"docs":"","sig":null,"attributes":[]},{"id":578,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":817425,"byte_end":817433,"line_start":130,"line_end":130,"column_start":63,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":5943},{"krate":0,"index":5944},{"krate":0,"index":5945},{"krate":0,"index":5946},{"krate":0,"index":5947},{"krate":0,"index":5948},{"krate":0,"index":5949},{"krate":0,"index":5950},{"krate":0,"index":5951},{"krate":0,"index":5952}],"docs":"","sig":null,"attributes":[]},{"id":579,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":825896,"byte_end":825904,"line_start":357,"line_end":357,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":5957}],"docs":"","sig":null,"attributes":[]},{"id":580,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":827084,"byte_end":827092,"line_start":391,"line_end":391,"column_start":46,"column_end":54},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":581,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":827240,"byte_end":827248,"line_start":398,"line_end":398,"column_start":53,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":5966}],"docs":"","sig":null,"attributes":[]},{"id":582,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":827541,"byte_end":827549,"line_start":409,"line_end":409,"column_start":49,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":5971},{"krate":0,"index":5972},{"krate":0,"index":5973}],"docs":"","sig":null,"attributes":[]},{"id":583,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":828098,"byte_end":828106,"line_start":429,"line_end":429,"column_start":50,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":5978},{"krate":0,"index":5979}],"docs":"","sig":null,"attributes":[]},{"id":584,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":828773,"byte_end":828781,"line_start":455,"line_end":455,"column_start":46,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":5984},{"krate":0,"index":5985}],"docs":"","sig":null,"attributes":[]},{"id":585,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":829364,"byte_end":829372,"line_start":479,"line_end":479,"column_start":67,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":5990}],"docs":"","sig":null,"attributes":[]},{"id":586,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":831384,"byte_end":831392,"line_start":22,"line_end":22,"column_start":63,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":6043},{"krate":0,"index":6044}],"docs":"","sig":null,"attributes":[]},{"id":587,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":832943,"byte_end":832951,"line_start":70,"line_end":70,"column_start":71,"column_end":79},"value":"","parent":null,"children":[{"krate":0,"index":6049}],"docs":"","sig":null,"attributes":[]},{"id":588,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":833221,"byte_end":833229,"line_start":82,"line_end":82,"column_start":71,"column_end":79},"value":"","parent":null,"children":[{"krate":0,"index":6054}],"docs":"","sig":null,"attributes":[]},{"id":589,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":834039,"byte_end":834047,"line_start":116,"line_end":116,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6059},{"krate":0,"index":6060},{"krate":0,"index":6061}],"docs":"","sig":null,"attributes":[]},{"id":590,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":835140,"byte_end":835148,"line_start":154,"line_end":154,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6064},{"krate":0,"index":6065},{"krate":0,"index":6066}],"docs":"","sig":null,"attributes":[]},{"id":591,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_conversion.rs","byte_start":846310,"byte_end":846318,"line_start":22,"line_end":22,"column_start":68,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":6102},{"krate":0,"index":6103},{"krate":0,"index":6104}],"docs":"","sig":null,"attributes":[]},{"id":592,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_conversion.rs","byte_start":847206,"byte_end":847214,"line_start":50,"line_end":50,"column_start":70,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":6111},{"krate":0,"index":6112},{"krate":0,"index":6113}],"docs":"","sig":null,"attributes":[]},{"id":593,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_conversion.rs","byte_start":847950,"byte_end":847958,"line_start":74,"line_end":74,"column_start":57,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":6120},{"krate":0,"index":6121},{"krate":0,"index":6122}],"docs":"","sig":null,"attributes":[]},{"id":594,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_conversion.rs","byte_start":849122,"byte_end":849130,"line_start":108,"line_end":108,"column_start":65,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":6128},{"krate":0,"index":6129},{"krate":0,"index":6132}],"docs":"","sig":null,"attributes":[]},{"id":595,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_conversion.rs","byte_start":850835,"byte_end":850842,"line_start":154,"line_end":154,"column_start":67,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":6137}],"docs":"","sig":null,"attributes":[]},{"id":596,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_conversion.rs","byte_start":851241,"byte_end":851249,"line_start":167,"line_end":167,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6145}],"docs":"","sig":null,"attributes":[]},{"id":597,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_conversion.rs","byte_start":851980,"byte_end":851988,"line_start":186,"line_end":186,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6154}],"docs":"","sig":null,"attributes":[]},{"id":598,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_conversion.rs","byte_start":852943,"byte_end":852951,"line_start":215,"line_end":215,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6163}],"docs":"","sig":null,"attributes":[]},{"id":599,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_conversion.rs","byte_start":854215,"byte_end":854223,"line_start":252,"line_end":252,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6172}],"docs":"","sig":null,"attributes":[]},{"id":660,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_simba.rs","byte_start":875870,"byte_end":875878,"line_start":10,"line_end":10,"column_start":53,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":6226},{"krate":0,"index":6227},{"krate":0,"index":6228},{"krate":0,"index":6229},{"krate":0,"index":6230},{"krate":0,"index":6231},{"krate":0,"index":6232},{"krate":0,"index":6233},{"krate":0,"index":6234}],"docs":"","sig":null,"attributes":[]},{"id":661,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":879632,"byte_end":879642,"line_start":71,"line_end":71,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6268}],"docs":"","sig":null,"attributes":[]},{"id":662,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":879955,"byte_end":879965,"line_start":83,"line_end":83,"column_start":9,"column_end":19},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":663,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":880128,"byte_end":880138,"line_start":90,"line_end":90,"column_start":81,"column_end":91},"value":"","parent":null,"children":[{"krate":0,"index":6278}],"docs":"","sig":null,"attributes":[]},{"id":664,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":880365,"byte_end":880375,"line_start":100,"line_end":100,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":6283},{"krate":0,"index":6284},{"krate":0,"index":6285}],"docs":"","sig":null,"attributes":[]},{"id":665,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":881340,"byte_end":881350,"line_start":131,"line_end":131,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6290}],"docs":"","sig":null,"attributes":[]},{"id":666,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":881600,"byte_end":881610,"line_start":142,"line_end":142,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":6295},{"krate":0,"index":6296},{"krate":0,"index":6297},{"krate":0,"index":6298},{"krate":0,"index":6299},{"krate":0,"index":6300},{"krate":0,"index":6301},{"krate":0,"index":6302},{"krate":0,"index":6303},{"krate":0,"index":6304},{"krate":0,"index":6305},{"krate":0,"index":6306},{"krate":0,"index":6307},{"krate":0,"index":6308},{"krate":0,"index":6309}],"docs":"","sig":null,"attributes":[]},{"id":667,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":888753,"byte_end":888763,"line_start":334,"line_end":334,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":6314}],"docs":"","sig":null,"attributes":[]},{"id":668,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":889388,"byte_end":889398,"line_start":356,"line_end":356,"column_start":46,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":669,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":889546,"byte_end":889556,"line_start":363,"line_end":363,"column_start":53,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":6323}],"docs":"","sig":null,"attributes":[]},{"id":670,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":889841,"byte_end":889851,"line_start":374,"line_end":374,"column_start":49,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":6328},{"krate":0,"index":6329},{"krate":0,"index":6330}],"docs":"","sig":null,"attributes":[]},{"id":671,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":890392,"byte_end":890402,"line_start":394,"line_end":394,"column_start":50,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":6335},{"krate":0,"index":6336}],"docs":"","sig":null,"attributes":[]},{"id":672,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":891061,"byte_end":891071,"line_start":420,"line_end":420,"column_start":46,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":6341},{"krate":0,"index":6342}],"docs":"","sig":null,"attributes":[]},{"id":673,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":891607,"byte_end":891617,"line_start":443,"line_end":443,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6347}],"docs":"","sig":null,"attributes":[]},{"id":674,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_construction.rs","byte_start":893290,"byte_end":893300,"line_start":22,"line_end":22,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":6398}],"docs":"","sig":null,"attributes":[]},{"id":675,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_construction.rs","byte_start":894004,"byte_end":894014,"line_start":49,"line_end":49,"column_start":47,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":6403}],"docs":"","sig":null,"attributes":[]},{"id":676,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_construction.rs","byte_start":894319,"byte_end":894327,"line_start":62,"line_end":62,"column_start":73,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":6408}],"docs":"","sig":null,"attributes":[]},{"id":677,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_construction.rs","byte_start":894755,"byte_end":894765,"line_start":79,"line_end":79,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":6415}],"docs":"","sig":null,"attributes":[]},{"id":678,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_construction.rs","byte_start":896348,"byte_end":896358,"line_start":134,"line_end":134,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6418}],"docs":"","sig":null,"attributes":[]},{"id":679,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_construction.rs","byte_start":897161,"byte_end":897171,"line_start":160,"line_end":160,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6421}],"docs":"","sig":null,"attributes":[]},{"id":680,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_conversion.rs","byte_start":907075,"byte_end":907085,"line_start":23,"line_end":23,"column_start":70,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":6458},{"krate":0,"index":6459},{"krate":0,"index":6460}],"docs":"","sig":null,"attributes":[]},{"id":681,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_conversion.rs","byte_start":907986,"byte_end":907996,"line_start":51,"line_end":51,"column_start":57,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":6467},{"krate":0,"index":6468},{"krate":0,"index":6469}],"docs":"","sig":null,"attributes":[]},{"id":682,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_conversion.rs","byte_start":909150,"byte_end":909160,"line_start":85,"line_end":85,"column_start":65,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":6475},{"krate":0,"index":6476},{"krate":0,"index":6479}],"docs":"","sig":null,"attributes":[]},{"id":683,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_conversion.rs","byte_start":912587,"byte_end":912594,"line_start":174,"line_end":174,"column_start":69,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":6484}],"docs":"","sig":null,"attributes":[]},{"id":684,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_conversion.rs","byte_start":913004,"byte_end":913014,"line_start":187,"line_end":187,"column_start":58,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":6492}],"docs":"","sig":null,"attributes":[]},{"id":685,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_conversion.rs","byte_start":913754,"byte_end":913764,"line_start":206,"line_end":206,"column_start":58,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":6501}],"docs":"","sig":null,"attributes":[]},{"id":686,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_conversion.rs","byte_start":914708,"byte_end":914718,"line_start":235,"line_end":235,"column_start":58,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":6510}],"docs":"","sig":null,"attributes":[]},{"id":687,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_conversion.rs","byte_start":915931,"byte_end":915941,"line_start":272,"line_end":272,"column_start":59,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":6519}],"docs":"","sig":null,"attributes":[]},{"id":750,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_simba.rs","byte_start":937837,"byte_end":937847,"line_start":9,"line_end":9,"column_start":53,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":6574},{"krate":0,"index":6575},{"krate":0,"index":6576},{"krate":0,"index":6577},{"krate":0,"index":6578},{"krate":0,"index":6579},{"krate":0,"index":6580},{"krate":0,"index":6581},{"krate":0,"index":6582}],"docs":"","sig":null,"attributes":[]},{"id":751,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":943852,"byte_end":943854,"line_start":53,"line_end":53,"column_start":37,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":752,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":944397,"byte_end":944405,"line_start":72,"line_end":72,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6635}],"docs":"","sig":null,"attributes":[]},{"id":753,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":944640,"byte_end":944651,"line_start":83,"line_end":83,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6639}],"docs":"","sig":null,"attributes":[]},{"id":754,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":944903,"byte_end":944910,"line_start":94,"line_end":94,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6643},{"krate":0,"index":6644}],"docs":"","sig":null,"attributes":[]},{"id":755,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":945621,"byte_end":945622,"line_start":122,"line_end":122,"column_start":40,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6651}],"docs":"","sig":null,"attributes":[]},{"id":756,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":946239,"byte_end":946240,"line_start":146,"line_end":146,"column_start":44,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":757,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":947251,"byte_end":947260,"line_start":177,"line_end":177,"column_start":69,"column_end":78},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":758,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":947475,"byte_end":947484,"line_start":184,"line_end":184,"column_start":63,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":6663}],"docs":"","sig":null,"attributes":[]},{"id":759,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":948725,"byte_end":948734,"line_start":224,"line_end":224,"column_start":65,"column_end":74},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":760,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":948894,"byte_end":948903,"line_start":229,"line_end":229,"column_start":67,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":6672}],"docs":"","sig":null,"attributes":[]},{"id":761,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":949147,"byte_end":949156,"line_start":239,"line_end":239,"column_start":53,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":6677},{"krate":0,"index":6678},{"krate":0,"index":6679},{"krate":0,"index":6680},{"krate":0,"index":6681},{"krate":0,"index":6682},{"krate":0,"index":6684},{"krate":0,"index":6685},{"krate":0,"index":6686},{"krate":0,"index":6687},{"krate":0,"index":6688},{"krate":0,"index":6689}],"docs":"","sig":null,"attributes":[]},{"id":762,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":957382,"byte_end":957391,"line_start":473,"line_end":473,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":6694},{"krate":0,"index":6695}],"docs":"","sig":null,"attributes":[]},{"id":763,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":958209,"byte_end":958218,"line_start":500,"line_end":500,"column_start":53,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":6700},{"krate":0,"index":6701}],"docs":"","sig":null,"attributes":[]},{"id":764,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":959098,"byte_end":959107,"line_start":525,"line_end":525,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":6705}],"docs":"","sig":null,"attributes":[]},{"id":765,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":959549,"byte_end":959558,"line_start":537,"line_end":537,"column_start":67,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":6710},{"krate":0,"index":6711},{"krate":0,"index":6712}],"docs":"","sig":null,"attributes":[]},{"id":766,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":960018,"byte_end":960027,"line_start":555,"line_end":555,"column_start":68,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":6717},{"krate":0,"index":6718}],"docs":"","sig":null,"attributes":[]},{"id":767,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":960556,"byte_end":960565,"line_start":577,"line_end":577,"column_start":64,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":6723},{"krate":0,"index":6724}],"docs":"","sig":null,"attributes":[]},{"id":768,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform_construction.rs","byte_start":962408,"byte_end":962417,"line_start":11,"line_end":11,"column_start":53,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":6764}],"docs":"","sig":null,"attributes":[]},{"id":769,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform_construction.rs","byte_start":963521,"byte_end":963530,"line_start":49,"line_end":49,"column_start":61,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":6769}],"docs":"","sig":null,"attributes":[]},{"id":770,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform_conversion.rs","byte_start":964063,"byte_end":964072,"line_start":9,"line_end":9,"column_start":69,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":6793},{"krate":0,"index":6794},{"krate":0,"index":6795}],"docs":"","sig":null,"attributes":[]},{"id":771,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform_conversion.rs","byte_start":964897,"byte_end":964906,"line_start":37,"line_end":37,"column_start":74,"column_end":83},"value":"","parent":null,"children":[{"krate":0,"index":6801},{"krate":0,"index":6802},{"krate":0,"index":6803}],"docs":"","sig":null,"attributes":[]},{"id":772,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform_conversion.rs","byte_start":965683,"byte_end":965690,"line_start":64,"line_end":64,"column_start":64,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":6808}],"docs":"","sig":null,"attributes":[]},{"id":773,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform_ops.rs","byte_start":967993,"byte_end":968002,"line_start":82,"line_end":82,"column_start":63,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":6857},{"krate":0,"index":6858}],"docs":"","sig":null,"attributes":[]},{"id":774,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform_ops.rs","byte_start":968358,"byte_end":968367,"line_start":96,"line_end":96,"column_start":52,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":6862}],"docs":"","sig":null,"attributes":[]},{"id":835,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform_simba.rs","byte_start":989645,"byte_end":989654,"line_start":10,"line_end":10,"column_start":56,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":6882},{"krate":0,"index":6883},{"krate":0,"index":6884},{"krate":0,"index":6885},{"krate":0,"index":6886},{"krate":0,"index":6887},{"krate":0,"index":6888},{"krate":0,"index":6889},{"krate":0,"index":6890}],"docs":"","sig":null,"attributes":[]},{"id":836,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/reflection.rs","byte_start":991486,"byte_end":991496,"line_start":16,"line_end":16,"column_start":49,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":6923},{"krate":0,"index":6924},{"krate":0,"index":6925},{"krate":0,"index":6926},{"krate":0,"index":6930},{"krate":0,"index":6934},{"krate":0,"index":6939}],"docs":"","sig":null,"attributes":[]},{"id":837,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":995840,"byte_end":995853,"line_start":24,"line_end":24,"column_start":29,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":838,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":995890,"byte_end":995903,"line_start":26,"line_end":26,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":6969}],"docs":"","sig":null,"attributes":[]},{"id":839,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":996053,"byte_end":996066,"line_start":33,"line_end":33,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":6972}],"docs":"","sig":null,"attributes":[]},{"id":840,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":996211,"byte_end":996224,"line_start":39,"line_end":39,"column_start":34,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6975}],"docs":"","sig":null,"attributes":[]},{"id":841,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":996963,"byte_end":996976,"line_start":68,"line_end":68,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6978},{"krate":0,"index":6979},{"krate":0,"index":6980},{"krate":0,"index":6981},{"krate":0,"index":6982},{"krate":0,"index":6983},{"krate":0,"index":6984},{"krate":0,"index":6985},{"krate":0,"index":6986},{"krate":0,"index":6987},{"krate":0,"index":6988},{"krate":0,"index":6989},{"krate":0,"index":6990},{"krate":0,"index":6991},{"krate":0,"index":6992},{"krate":0,"index":6993},{"krate":0,"index":6994},{"krate":0,"index":6995},{"krate":0,"index":6996},{"krate":0,"index":6998},{"krate":0,"index":6999},{"krate":0,"index":7000},{"krate":0,"index":7001},{"krate":0,"index":7002},{"krate":0,"index":7003},{"krate":0,"index":7004},{"krate":0,"index":7005},{"krate":0,"index":7006}],"docs":"","sig":null,"attributes":[]},{"id":842,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1021043,"byte_end":1021051,"line_start":687,"line_end":687,"column_start":55,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":7009}],"docs":"","sig":null,"attributes":[]},{"id":843,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1022104,"byte_end":1022111,"line_start":720,"line_end":720,"column_start":47,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":7016}],"docs":"","sig":null,"attributes":[]},{"id":844,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1022853,"byte_end":1022865,"line_start":25,"line_end":25,"column_start":29,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":845,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1022902,"byte_end":1022914,"line_start":27,"line_end":27,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":7043}],"docs":"","sig":null,"attributes":[]},{"id":846,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1023064,"byte_end":1023076,"line_start":34,"line_end":34,"column_start":35,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":7046}],"docs":"","sig":null,"attributes":[]},{"id":847,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1023221,"byte_end":1023233,"line_start":40,"line_end":40,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":7049}],"docs":"","sig":null,"attributes":[]},{"id":848,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1023970,"byte_end":1023982,"line_start":69,"line_end":69,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7052},{"krate":0,"index":7053},{"krate":0,"index":7054},{"krate":0,"index":7055},{"krate":0,"index":7056},{"krate":0,"index":7057},{"krate":0,"index":7058},{"krate":0,"index":7059},{"krate":0,"index":7060},{"krate":0,"index":7061},{"krate":0,"index":7062},{"krate":0,"index":7063},{"krate":0,"index":7064},{"krate":0,"index":7065},{"krate":0,"index":7066},{"krate":0,"index":7067},{"krate":0,"index":7069},{"krate":0,"index":7070},{"krate":0,"index":7071},{"krate":0,"index":7072},{"krate":0,"index":7073}],"docs":"","sig":null,"attributes":[]},{"id":849,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1030633,"byte_end":1030641,"line_start":271,"line_end":271,"column_start":54,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":7076}],"docs":"","sig":null,"attributes":[]},{"id":850,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1031434,"byte_end":1031441,"line_start":295,"line_end":295,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":7083}],"docs":"","sig":null,"attributes":[]},{"id":851,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/bidiagonal.rs","byte_start":1037223,"byte_end":1037233,"line_start":53,"line_end":53,"column_start":54,"column_end":64},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":852,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/bidiagonal.rs","byte_start":1037591,"byte_end":1037601,"line_start":65,"line_end":65,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":7151},{"krate":0,"index":7152},{"krate":0,"index":7153},{"krate":0,"index":7154},{"krate":0,"index":7155},{"krate":0,"index":7158},{"krate":0,"index":7159},{"krate":0,"index":7160},{"krate":0,"index":7162},{"krate":0,"index":7164}],"docs":"","sig":null,"attributes":[]},{"id":853,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/bidiagonal.rs","byte_start":1048144,"byte_end":1048150,"line_start":363,"line_end":363,"column_start":66,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":7170}],"docs":"","sig":null,"attributes":[]},{"id":854,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/cholesky.rs","byte_start":1049673,"byte_end":1049681,"line_start":34,"line_end":34,"column_start":44,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":855,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/cholesky.rs","byte_start":1049800,"byte_end":1049808,"line_start":41,"line_end":41,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":7203},{"krate":0,"index":7204},{"krate":0,"index":7205},{"krate":0,"index":7206},{"krate":0,"index":7207},{"krate":0,"index":7208},{"krate":0,"index":7212},{"krate":0,"index":7216}],"docs":"","sig":null,"attributes":[]},{"id":856,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/cholesky.rs","byte_start":1053446,"byte_end":1053454,"line_start":143,"line_end":143,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":7220},{"krate":0,"index":7221},{"krate":0,"index":7224},{"krate":0,"index":7227},{"krate":0,"index":7228}],"docs":"","sig":null,"attributes":[]},{"id":857,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/cholesky.rs","byte_start":1062577,"byte_end":1062589,"line_start":367,"line_end":367,"column_start":64,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":7237}],"docs":"","sig":null,"attributes":[]},{"id":858,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/convolution.rs","byte_start":1063302,"byte_end":1063308,"line_start":9,"line_end":9,"column_start":49,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":7259},{"krate":0,"index":7262},{"krate":0,"index":7265}],"docs":"","sig":null,"attributes":[]},{"id":859,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/determinant.rs","byte_start":1067442,"byte_end":1067454,"line_start":10,"line_end":10,"column_start":70,"column_end":82},"value":"","parent":null,"children":[{"krate":0,"index":7281}],"docs":"","sig":null,"attributes":[]},{"id":860,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/exp.rs","byte_start":1070443,"byte_end":1070457,"line_start":43,"line_end":43,"column_start":12,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7321},{"krate":0,"index":7322},{"krate":0,"index":7323},{"krate":0,"index":7324},{"krate":0,"index":7325},{"krate":0,"index":7326},{"krate":0,"index":7327},{"krate":0,"index":7328},{"krate":0,"index":7329},{"krate":0,"index":7330},{"krate":0,"index":7331},{"krate":0,"index":7332},{"krate":0,"index":7333},{"krate":0,"index":7334},{"krate":0,"index":7335},{"krate":0,"index":7337},{"krate":0,"index":7339},{"krate":0,"index":7341},{"krate":0,"index":7343}],"docs":"","sig":null,"attributes":[]},{"id":861,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/exp.rs","byte_start":1081513,"byte_end":1081520,"line_start":428,"line_end":428,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":7363}],"docs":"","sig":null,"attributes":[]},{"id":862,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/full_piv_lu.rs","byte_start":1085229,"byte_end":1085238,"line_start":40,"line_end":40,"column_start":54,"column_end":63},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":863,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/full_piv_lu.rs","byte_start":1085469,"byte_end":1085478,"line_start":48,"line_end":48,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":7393},{"krate":0,"index":7394},{"krate":0,"index":7395},{"krate":0,"index":7396},{"krate":0,"index":7397},{"krate":0,"index":7398},{"krate":0,"index":7399}],"docs":"","sig":null,"attributes":[]},{"id":864,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/full_piv_lu.rs","byte_start":1088932,"byte_end":1088941,"line_start":163,"line_end":163,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":7403},{"krate":0,"index":7407},{"krate":0,"index":7411},{"krate":0,"index":7412},{"krate":0,"index":7413}],"docs":"","sig":null,"attributes":[]},{"id":865,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/full_piv_lu.rs","byte_start":1092194,"byte_end":1092200,"line_start":269,"line_end":269,"column_start":66,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":7419}],"docs":"","sig":null,"attributes":[]},{"id":866,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/givens.rs","byte_start":1093032,"byte_end":1093046,"line_start":19,"line_end":19,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":7439},{"krate":0,"index":7440},{"krate":0,"index":7441},{"krate":0,"index":7443},{"krate":0,"index":7444},{"krate":0,"index":7446},{"krate":0,"index":7448},{"krate":0,"index":7449},{"krate":0,"index":7450},{"krate":0,"index":7451},{"krate":0,"index":7455}],"docs":"","sig":null,"attributes":[]},{"id":867,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/hessenberg.rs","byte_start":1099023,"byte_end":1099033,"line_start":37,"line_end":37,"column_start":47,"column_end":57},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":868,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/hessenberg.rs","byte_start":1099224,"byte_end":1099234,"line_start":45,"line_end":45,"column_start":38,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":7480},{"krate":0,"index":7481},{"krate":0,"index":7482},{"krate":0,"index":7483},{"krate":0,"index":7485},{"krate":0,"index":7487},{"krate":0,"index":7488}],"docs":"","sig":null,"attributes":[]},{"id":869,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/hessenberg.rs","byte_start":1102295,"byte_end":1102307,"line_start":135,"line_end":135,"column_start":59,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":7493}],"docs":"","sig":null,"attributes":[]},{"id":870,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/inverse.rs","byte_start":1107531,"byte_end":1107543,"line_start":10,"line_end":10,"column_start":52,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":7541}],"docs":"","sig":null,"attributes":[]},{"id":871,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/inverse.rs","byte_start":1107986,"byte_end":1107998,"line_start":27,"line_end":27,"column_start":55,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":7546}],"docs":"","sig":null,"attributes":[]},{"id":872,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/lu.rs","byte_start":1116714,"byte_end":1116716,"line_start":39,"line_end":39,"column_start":54,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":873,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/lu.rs","byte_start":1118055,"byte_end":1118057,"line_start":87,"line_end":87,"column_start":45,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":7588},{"krate":0,"index":7589},{"krate":0,"index":7590},{"krate":0,"index":7591},{"krate":0,"index":7592},{"krate":0,"index":7593},{"krate":0,"index":7594},{"krate":0,"index":7595}],"docs":"","sig":null,"attributes":[]},{"id":874,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/lu.rs","byte_start":1121833,"byte_end":1121835,"line_start":209,"line_end":209,"column_start":49,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":7599},{"krate":0,"index":7603},{"krate":0,"index":7607},{"krate":0,"index":7608},{"krate":0,"index":7610},{"krate":0,"index":7611}],"docs":"","sig":null,"attributes":[]},{"id":875,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/lu.rs","byte_start":1127198,"byte_end":1127204,"line_start":383,"line_end":383,"column_start":66,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":7627}],"docs":"","sig":null,"attributes":[]},{"id":876,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/permutation_sequence.rs","byte_start":1128521,"byte_end":1128540,"line_start":35,"line_end":35,"column_start":23,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":877,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/permutation_sequence.rs","byte_start":1128662,"byte_end":1128681,"line_start":42,"line_end":42,"column_start":18,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":7647}],"docs":"","sig":null,"attributes":[]},{"id":878,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/permutation_sequence.rs","byte_start":1128977,"byte_end":1128996,"line_start":54,"line_end":54,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7649}],"docs":"","sig":null,"attributes":[]},{"id":879,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/permutation_sequence.rs","byte_start":1129279,"byte_end":1129298,"line_start":65,"line_end":65,"column_start":14,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":7652},{"krate":0,"index":7653},{"krate":0,"index":7654},{"krate":0,"index":7659},{"krate":0,"index":7664},{"krate":0,"index":7669},{"krate":0,"index":7674},{"krate":0,"index":7675}],"docs":"","sig":null,"attributes":[]},{"id":880,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/qr.rs","byte_start":1133386,"byte_end":1133388,"line_start":40,"line_end":40,"column_start":54,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":881,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/qr.rs","byte_start":1133597,"byte_end":1133599,"line_start":48,"line_end":48,"column_start":45,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":7711},{"krate":0,"index":7712},{"krate":0,"index":7714},{"krate":0,"index":7716},{"krate":0,"index":7717},{"krate":0,"index":7718},{"krate":0,"index":7719}],"docs":"","sig":null,"attributes":[]},{"id":882,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/qr.rs","byte_start":1137616,"byte_end":1137618,"line_start":165,"line_end":165,"column_start":49,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":7726},{"krate":0,"index":7730},{"krate":0,"index":7734},{"krate":0,"index":7738},{"krate":0,"index":7739}],"docs":"","sig":null,"attributes":[]},{"id":883,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/qr.rs","byte_start":1141477,"byte_end":1141483,"line_start":298,"line_end":298,"column_start":66,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":7745}],"docs":"","sig":null,"attributes":[]},{"id":884,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/schur.rs","byte_start":1143017,"byte_end":1143022,"line_start":42,"line_end":42,"column_start":40,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":885,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/schur.rs","byte_start":1143137,"byte_end":1143142,"line_start":49,"line_end":49,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7781},{"krate":0,"index":7782},{"krate":0,"index":7784},{"krate":0,"index":7785},{"krate":0,"index":7786},{"krate":0,"index":7787},{"krate":0,"index":7788},{"krate":0,"index":7789},{"krate":0,"index":7790}],"docs":"","sig":null,"attributes":[]},{"id":886,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/schur.rs","byte_start":1157787,"byte_end":1157799,"line_start":493,"line_end":493,"column_start":52,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":7805},{"krate":0,"index":7806},{"krate":0,"index":7807},{"krate":0,"index":7808}],"docs":"","sig":null,"attributes":[]},{"id":887,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1161175,"byte_end":1161187,"line_start":10,"line_end":10,"column_start":52,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":7833},{"krate":0,"index":7837},{"krate":0,"index":7841},{"krate":0,"index":7845},{"krate":0,"index":7848},{"krate":0,"index":7852},{"krate":0,"index":7856},{"krate":0,"index":7859},{"krate":0,"index":7863},{"krate":0,"index":7867},{"krate":0,"index":7873},{"krate":0,"index":7879},{"krate":0,"index":7883},{"krate":0,"index":7887},{"krate":0,"index":7893},{"krate":0,"index":7899},{"krate":0,"index":7904}],"docs":"","sig":null,"attributes":[]},{"id":888,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1173851,"byte_end":1173863,"line_start":443,"line_end":443,"column_start":56,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":7913},{"krate":0,"index":7917},{"krate":0,"index":7921},{"krate":0,"index":7925},{"krate":0,"index":7928},{"krate":0,"index":7932},{"krate":0,"index":7936},{"krate":0,"index":7939},{"krate":0,"index":7943},{"krate":0,"index":7947},{"krate":0,"index":7953},{"krate":0,"index":7959},{"krate":0,"index":7963},{"krate":0,"index":7967},{"krate":0,"index":7973},{"krate":0,"index":7979},{"krate":0,"index":7984}],"docs":"","sig":null,"attributes":[]},{"id":889,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/svd.rs","byte_start":1187367,"byte_end":1187370,"line_start":57,"line_end":57,"column_start":54,"column_end":57},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":890,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/svd.rs","byte_start":1187727,"byte_end":1187730,"line_start":68,"line_end":68,"column_start":45,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":8028},{"krate":0,"index":8029},{"krate":0,"index":8032},{"krate":0,"index":8033},{"krate":0,"index":8034},{"krate":0,"index":8035},{"krate":0,"index":8037},{"krate":0,"index":8038},{"krate":0,"index":8040}],"docs":"","sig":null,"attributes":[]},{"id":891,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/svd.rs","byte_start":1206968,"byte_end":1206974,"line_start":606,"line_end":606,"column_start":66,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":8049},{"krate":0,"index":8050},{"krate":0,"index":8051},{"krate":0,"index":8052},{"krate":0,"index":8053}],"docs":"","sig":null,"attributes":[]},{"id":892,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_eigen.rs","byte_start":1212395,"byte_end":1212409,"line_start":44,"line_end":44,"column_start":40,"column_end":54},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":893,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_eigen.rs","byte_start":1212589,"byte_end":1212603,"line_start":52,"line_end":52,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":8083},{"krate":0,"index":8084},{"krate":0,"index":8086},{"krate":0,"index":8087},{"krate":0,"index":8088}],"docs":"","sig":null,"attributes":[]},{"id":894,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_eigen.rs","byte_start":1220646,"byte_end":1220658,"line_start":304,"line_end":304,"column_start":59,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":8095},{"krate":0,"index":8096},{"krate":0,"index":8097}],"docs":"","sig":null,"attributes":[]},{"id":895,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1225662,"byte_end":1225682,"line_start":37,"line_end":37,"column_start":47,"column_end":67},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":896,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1225873,"byte_end":1225893,"line_start":45,"line_end":45,"column_start":38,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":8119},{"krate":0,"index":8120},{"krate":0,"index":8121},{"krate":0,"index":8122},{"krate":0,"index":8123},{"krate":0,"index":8125},{"krate":0,"index":8126},{"krate":0,"index":8127}],"docs":"","sig":null,"attributes":[]},{"id":897,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1229714,"byte_end":1229726,"line_start":166,"line_end":166,"column_start":59,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":8132}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":4054,"byte_end":4058,"line_start":123,"line_end":123,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":7}},{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/mod.rs","byte_start":14861,"byte_end":14870,"line_start":3,"line_end":3,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":8}},{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/mod.rs","byte_start":14890,"byte_end":14900,"line_start":5,"line_end":5,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":316}},{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/mod.rs","byte_start":14910,"byte_end":14921,"line_start":6,"line_end":6,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":360}},{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/mod.rs","byte_start":14931,"byte_end":14948,"line_start":7,"line_end":7,"column_start":9,"column_end":26},"ref_id":{"krate":0,"index":380}},{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/mod.rs","byte_start":14958,"byte_end":14967,"line_start":8,"line_end":8,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":463}},{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/mod.rs","byte_start":14977,"byte_end":14981,"line_start":9,"line_end":9,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":584}},{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/mod.rs","byte_start":15000,"byte_end":15007,"line_start":11,"line_end":11,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1005}},{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/mod.rs","byte_start":15163,"byte_end":15171,"line_start":22,"line_end":22,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":2637}},{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/mod.rs","byte_start":15429,"byte_end":15435,"line_start":38,"line_end":38,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3877}},{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":4109,"byte_end":4117,"line_start":126,"line_end":126,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":3899}},{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/lib.rs","byte_start":4162,"byte_end":4168,"line_start":129,"line_end":129,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":7102}},{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/mod.rs","byte_start":1031626,"byte_end":1031635,"line_start":3,"line_end":3,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":7103}},{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/mod.rs","byte_start":1031943,"byte_end":1031949,"line_start":14,"line_end":14,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":7420}},{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/mod.rs","byte_start":1031975,"byte_end":1031986,"line_start":16,"line_end":16,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":7494}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/allocator.rs","byte_start":16569,"byte_end":16572,"line_start":19,"line_end":19,"column_start":54,"column_end":57},"kind":"SuperTrait","from":{"krate":2,"index":2394},"to":{"krate":0,"index":21}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/allocator.rs","byte_start":16575,"byte_end":16580,"line_start":19,"line_end":19,"column_start":60,"column_end":65},"kind":"SuperTrait","from":{"krate":2,"index":1909},"to":{"krate":0,"index":21}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/allocator.rs","byte_start":17333,"byte_end":17342,"line_start":37,"line_end":37,"column_start":5,"column_end":14},"kind":"SuperTrait","from":{"krate":0,"index":21},"to":{"krate":0,"index":29}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/allocator.rs","byte_start":17362,"byte_end":17371,"line_start":37,"line_end":37,"column_start":34,"column_end":43},"kind":"SuperTrait","from":{"krate":0,"index":21},"to":{"krate":0,"index":29}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/allocator.rs","byte_start":18565,"byte_end":18574,"line_start":62,"line_end":62,"column_start":5,"column_end":14},"kind":"SuperTrait","from":{"krate":0,"index":21},"to":{"krate":0,"index":42}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/allocator.rs","byte_start":18588,"byte_end":18597,"line_start":62,"line_end":62,"column_start":28,"column_end":37},"kind":"SuperTrait","from":{"krate":0,"index":21},"to":{"krate":0,"index":42}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/allocator.rs","byte_start":18862,"byte_end":18878,"line_start":73,"line_end":73,"column_start":67,"column_end":83},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":400},"to":{"krate":0,"index":42}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/allocator.rs","byte_start":19254,"byte_end":19263,"line_start":88,"line_end":88,"column_start":5,"column_end":14},"kind":"SuperTrait","from":{"krate":0,"index":21},"to":{"krate":0,"index":54}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/allocator.rs","byte_start":19273,"byte_end":19282,"line_start":88,"line_end":88,"column_start":24,"column_end":33},"kind":"SuperTrait","from":{"krate":0,"index":21},"to":{"krate":0,"index":54}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/allocator.rs","byte_start":19308,"byte_end":19326,"line_start":88,"line_end":88,"column_start":59,"column_end":77},"kind":"SuperTrait","from":{"krate":0,"index":42},"to":{"krate":0,"index":54}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/allocator.rs","byte_start":19501,"byte_end":19517,"line_start":97,"line_end":97,"column_start":57,"column_end":73},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":400},"to":{"krate":0,"index":54}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":20400,"byte_end":20406,"line_start":20,"line_end":20,"column_start":49,"column_end":55},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":2855},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":21376,"byte_end":21382,"line_start":53,"line_end":53,"column_start":56,"column_end":62},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":2855},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":25161,"byte_end":25167,"line_start":202,"line_end":202,"column_start":60,"column_end":66},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":17001},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":26376,"byte_end":26382,"line_start":238,"line_end":238,"column_start":76,"column_end":82},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":17001},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":27323,"byte_end":27329,"line_start":271,"line_end":271,"column_start":46,"column_end":52},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":17001},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":37449,"byte_end":37455,"line_start":558,"line_end":558,"column_start":20,"column_end":26},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":2855},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":50954,"byte_end":50960,"line_start":960,"line_end":960,"column_start":53,"column_end":59},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":17001},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":64355,"byte_end":64361,"line_start":1334,"line_end":1334,"column_start":53,"column_end":59},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":17001},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/blas.rs","byte_start":69689,"byte_end":69701,"line_start":1482,"line_end":1482,"column_start":44,"column_end":56},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":2851},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/constraint.rs","byte_start":77831,"byte_end":77836,"line_start":9,"line_end":9,"column_start":64,"column_end":69},"kind":"SuperTrait","from":{"krate":0,"index":333},"to":{"krate":0,"index":323}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/constraint.rs","byte_start":77926,"byte_end":77941,"line_start":11,"line_end":11,"column_start":78,"column_end":93},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":321},"to":{"krate":0,"index":323}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/constraint.rs","byte_start":78253,"byte_end":78268,"line_start":23,"line_end":23,"column_start":30,"column_end":45},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":321},"to":{"krate":0,"index":333}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/constraint.rs","byte_start":78342,"byte_end":78357,"line_start":27,"line_end":27,"column_start":40,"column_end":55},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":321},"to":{"krate":0,"index":333}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/constraint.rs","byte_start":78431,"byte_end":78446,"line_start":31,"line_end":31,"column_start":40,"column_end":55},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":321},"to":{"krate":0,"index":333}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/constraint.rs","byte_start":79799,"byte_end":79815,"line_start":73,"line_end":73,"column_start":5,"column_end":21},"kind":"SuperTrait","from":{"krate":0,"index":8252},"to":{"krate":0,"index":347}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/constraint.rs","byte_start":79826,"byte_end":79845,"line_start":73,"line_end":73,"column_start":32,"column_end":51},"kind":"SuperTrait","from":{"krate":0,"index":8265},"to":{"krate":0,"index":347}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/constraint.rs","byte_start":80045,"byte_end":80060,"line_start":80,"line_end":80,"column_start":38,"column_end":53},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":321},"to":{"krate":0,"index":347}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/constraint.rs","byte_start":80142,"byte_end":80157,"line_start":84,"line_end":84,"column_start":48,"column_end":63},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":321},"to":{"krate":0,"index":347}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/constraint.rs","byte_start":80239,"byte_end":80254,"line_start":88,"line_end":88,"column_start":48,"column_end":63},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":321},"to":{"krate":0,"index":347}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/default_allocator.rs","byte_start":88441,"byte_end":88457,"line_start":37,"line_end":37,"column_start":38,"column_end":54},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":400},"to":{"krate":0,"index":21}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/default_allocator.rs","byte_start":89515,"byte_end":89531,"line_start":79,"line_end":79,"column_start":54,"column_end":70},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":400},"to":{"krate":0,"index":21}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/default_allocator.rs","byte_start":90455,"byte_end":90471,"line_start":109,"line_end":109,"column_start":58,"column_end":74},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":400},"to":{"krate":0,"index":21}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/default_allocator.rs","byte_start":91414,"byte_end":91430,"line_start":143,"line_end":143,"column_start":84,"column_end":100},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":400},"to":{"krate":0,"index":29}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/default_allocator.rs","byte_start":92319,"byte_end":92335,"line_start":173,"line_end":173,"column_start":83,"column_end":99},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":400},"to":{"krate":0,"index":29}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/default_allocator.rs","byte_start":93178,"byte_end":93194,"line_start":201,"line_end":201,"column_start":83,"column_end":99},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":400},"to":{"krate":0,"index":29}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/default_allocator.rs","byte_start":94070,"byte_end":94086,"line_start":230,"line_end":230,"column_start":9,"column_end":25},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":400},"to":{"krate":0,"index":29}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/default_allocator.rs","byte_start":94513,"byte_end":94529,"line_start":245,"line_end":245,"column_start":9,"column_end":25},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":400},"to":{"krate":0,"index":29}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/default_allocator.rs","byte_start":94956,"byte_end":94972,"line_start":260,"line_end":260,"column_start":9,"column_end":25},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":400},"to":{"krate":0,"index":29}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/default_allocator.rs","byte_start":95403,"byte_end":95419,"line_start":275,"line_end":275,"column_start":9,"column_end":25},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":400},"to":{"krate":0,"index":29}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":96259,"byte_end":96266,"line_start":22,"line_end":22,"column_start":6,"column_end":13},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":9827},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":97080,"byte_end":97087,"line_start":55,"line_end":55,"column_start":20,"column_end":27},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":9827},"to":{"krate":0,"index":491}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":97115,"byte_end":97122,"line_start":56,"line_end":56,"column_start":25,"column_end":32},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":9827},"to":{"krate":0,"index":492}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":97305,"byte_end":97308,"line_start":60,"line_end":60,"column_start":16,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":2394},"to":{"krate":0,"index":495}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":97311,"byte_end":97316,"line_start":60,"line_end":60,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":6069},"to":{"krate":0,"index":495}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":97319,"byte_end":97323,"line_start":60,"line_end":60,"column_start":30,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":1914},"to":{"krate":0,"index":495}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":97326,"byte_end":97335,"line_start":60,"line_end":60,"column_start":37,"column_end":46},"kind":"SuperTrait","from":{"krate":2,"index":1634},"to":{"krate":0,"index":495}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":97338,"byte_end":97342,"line_start":60,"line_end":60,"column_start":49,"column_end":53},"kind":"SuperTrait","from":{"krate":2,"index":1904},"to":{"krate":0,"index":495}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":97345,"byte_end":97349,"line_start":60,"line_end":60,"column_start":56,"column_end":60},"kind":"SuperTrait","from":{"krate":2,"index":1916},"to":{"krate":0,"index":495}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":97987,"byte_end":97994,"line_start":79,"line_end":79,"column_start":14,"column_end":21},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":9827},"to":{"krate":0,"index":495}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":98249,"byte_end":98256,"line_start":96,"line_end":96,"column_start":21,"column_end":28},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":9827},"to":{"krate":2,"index":1967}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":98405,"byte_end":98412,"line_start":105,"line_end":105,"column_start":21,"column_end":28},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":9827},"to":{"krate":2,"index":1972}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":101014,"byte_end":101017,"line_start":193,"line_end":193,"column_start":20,"column_end":23},"kind":"SuperTrait","from":{"krate":0,"index":495},"to":{"krate":0,"index":512}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":101333,"byte_end":101338,"line_start":207,"line_end":207,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":1909},"to":{"krate":0,"index":516}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":101341,"byte_end":101344,"line_start":207,"line_end":207,"column_start":29,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2394},"to":{"krate":0,"index":516}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":101347,"byte_end":101355,"line_start":207,"line_end":207,"column_start":35,"column_end":43},"kind":"SuperTrait","from":{"krate":33,"index":568},"to":{"krate":0,"index":516}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":101600,"byte_end":101602,"line_start":216,"line_end":216,"column_start":14,"column_end":16},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":10033},"to":{"krate":0,"index":495}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":101888,"byte_end":101890,"line_start":234,"line_end":234,"column_start":18,"column_end":20},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":10033},"to":{"krate":0,"index":512}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":102009,"byte_end":102011,"line_start":243,"line_end":243,"column_start":28,"column_end":30},"kind":{"Impl":{"id":36}},"from":{"krate":33,"index":2261},"to":{"krate":0,"index":516}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":104391,"byte_end":104395,"line_start":310,"line_end":310,"column_start":20,"column_end":24},"kind":{"Impl":{"id":37}},"from":{"krate":33,"index":6146},"to":{"krate":0,"index":516}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":104958,"byte_end":104962,"line_start":323,"line_end":323,"column_start":15,"column_end":19},"kind":{"Impl":{"id":38}},"from":{"krate":33,"index":6146},"to":{"krate":0,"index":495}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":105824,"byte_end":105828,"line_start":350,"line_end":350,"column_start":19,"column_end":23},"kind":{"Impl":{"id":39}},"from":{"krate":33,"index":6146},"to":{"krate":0,"index":512}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":106472,"byte_end":106476,"line_start":369,"line_end":369,"column_start":9,"column_end":13},"kind":{"Impl":{"id":40}},"from":{"krate":33,"index":6146},"to":{"krate":0,"index":492}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":106656,"byte_end":106660,"line_start":374,"line_end":374,"column_start":9,"column_end":13},"kind":{"Impl":{"id":41}},"from":{"krate":33,"index":6146},"to":{"krate":0,"index":516}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":106795,"byte_end":106799,"line_start":380,"line_end":380,"column_start":9,"column_end":13},"kind":{"Impl":{"id":42}},"from":{"krate":33,"index":6146},"to":{"krate":0,"index":495}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":107227,"byte_end":107231,"line_start":400,"line_end":400,"column_start":9,"column_end":13},"kind":{"Impl":{"id":43}},"from":{"krate":33,"index":6146},"to":{"krate":0,"index":512}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/dimension.rs","byte_start":107443,"byte_end":107447,"line_start":411,"line_end":411,"column_start":9,"column_end":13},"kind":{"Impl":{"id":44}},"from":{"krate":33,"index":6146},"to":{"krate":0,"index":492}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/iter.rs","byte_start":112841,"byte_end":112848,"line_start":140,"line_end":140,"column_start":63,"column_end":70},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":13423},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/iter.rs","byte_start":113045,"byte_end":113052,"line_start":146,"line_end":146,"column_start":76,"column_end":83},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":13423},"to":{"krate":2,"index":4852}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/iter.rs","byte_start":113751,"byte_end":113758,"line_start":175,"line_end":175,"column_start":9,"column_end":16},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":13423},"to":{"krate":2,"index":4807}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/iter.rs","byte_start":114172,"byte_end":114182,"line_start":190,"line_end":190,"column_start":66,"column_end":76},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":623},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/iter.rs","byte_start":114537,"byte_end":114547,"line_start":205,"line_end":205,"column_start":9,"column_end":19},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":623},"to":{"krate":2,"index":4852}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/iter.rs","byte_start":115219,"byte_end":115229,"line_start":232,"line_end":232,"column_start":9,"column_end":19},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":623},"to":{"krate":2,"index":4807}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/iter.rs","byte_start":115624,"byte_end":115634,"line_start":252,"line_end":252,"column_start":63,"column_end":73},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":13438},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/iter.rs","byte_start":115838,"byte_end":115848,"line_start":259,"line_end":259,"column_start":9,"column_end":19},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":13438},"to":{"krate":2,"index":4852}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/iter.rs","byte_start":116550,"byte_end":116560,"line_start":289,"line_end":289,"column_start":9,"column_end":19},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":13438},"to":{"krate":2,"index":4807}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/iter.rs","byte_start":116980,"byte_end":116993,"line_start":304,"line_end":304,"column_start":66,"column_end":79},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":681},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/iter.rs","byte_start":117351,"byte_end":117364,"line_start":319,"line_end":319,"column_start":9,"column_end":22},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":681},"to":{"krate":2,"index":4852}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/iter.rs","byte_start":118039,"byte_end":118052,"line_start":346,"line_end":346,"column_start":9,"column_end":22},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":681},"to":{"krate":2,"index":4807}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":118994,"byte_end":119000,"line_start":24,"line_end":24,"column_start":71,"column_end":77},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":17001},"to":{"krate":2,"index":2154}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":119229,"byte_end":119235,"line_start":34,"line_end":34,"column_start":54,"column_end":60},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":17001},"to":{"krate":2,"index":2154}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":119700,"byte_end":119706,"line_start":54,"line_end":54,"column_start":77,"column_end":83},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":17001},"to":{"krate":2,"index":2158}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":119921,"byte_end":119927,"line_start":62,"line_end":62,"column_start":57,"column_end":63},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":17001},"to":{"krate":2,"index":2158}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":120336,"byte_end":120342,"line_start":84,"line_end":84,"column_start":36,"column_end":42},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":17001},"to":{"krate":2,"index":1994}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":120944,"byte_end":120950,"line_start":114,"line_end":114,"column_start":28,"column_end":34},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":17001},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":132753,"byte_end":132761,"line_start":378,"line_end":378,"column_start":47,"column_end":55},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1089},"to":{"krate":2,"index":4718}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":133028,"byte_end":133036,"line_start":388,"line_end":388,"column_start":31,"column_end":39},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1089},"to":{"krate":2,"index":4718}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":134105,"byte_end":134113,"line_start":418,"line_end":418,"column_start":74,"column_end":82},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1089},"to":{"krate":2,"index":4718}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":134417,"byte_end":134425,"line_start":428,"line_end":428,"column_start":64,"column_end":72},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1089},"to":{"krate":2,"index":4718}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":139999,"byte_end":140005,"line_start":603,"line_end":603,"column_start":9,"column_end":15},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":17001},"to":{"krate":2,"index":1977}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":140472,"byte_end":140478,"line_start":620,"line_end":620,"column_start":9,"column_end":15},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":17001},"to":{"krate":2,"index":1977}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":141076,"byte_end":141082,"line_start":639,"line_end":639,"column_start":66,"column_end":72},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":17001},"to":{"krate":2,"index":2006}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":141569,"byte_end":141575,"line_start":656,"line_end":656,"column_start":74,"column_end":80},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":17001},"to":{"krate":2,"index":2006}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":142129,"byte_end":142135,"line_start":675,"line_end":675,"column_start":31,"column_end":37},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":17001},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":147785,"byte_end":147791,"line_start":846,"line_end":846,"column_start":66,"column_end":72},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":17001},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":148404,"byte_end":148411,"line_start":871,"line_end":871,"column_start":39,"column_end":46},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1093},"to":{"krate":2,"index":4722}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":148719,"byte_end":148726,"line_start":881,"line_end":881,"column_start":62,"column_end":69},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1093},"to":{"krate":2,"index":4722}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/ops.rs","byte_start":149030,"byte_end":149036,"line_start":891,"line_end":891,"column_start":54,"column_end":60},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":17001},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":154178,"byte_end":154183,"line_start":39,"line_end":39,"column_start":59,"column_end":64},"kind":"SuperTrait","from":{"krate":2,"index":6069},"to":{"krate":0,"index":1035}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":154186,"byte_end":154191,"line_start":39,"line_end":39,"column_start":67,"column_end":72},"kind":"SuperTrait","from":{"krate":2,"index":1909},"to":{"krate":0,"index":1035}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":157382,"byte_end":157389,"line_start":120,"line_end":120,"column_start":62,"column_end":69},"kind":"SuperTrait","from":{"krate":0,"index":1035},"to":{"krate":0,"index":1053}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":159749,"byte_end":159756,"line_start":178,"line_end":178,"column_start":5,"column_end":12},"kind":"SuperTrait","from":{"krate":0,"index":1035},"to":{"krate":0,"index":1065}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":160168,"byte_end":160185,"line_start":188,"line_end":188,"column_start":5,"column_end":22},"kind":"SuperTrait","from":{"krate":0,"index":1065},"to":{"krate":0,"index":1069}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/storage.rs","byte_start":160197,"byte_end":160207,"line_start":188,"line_end":188,"column_start":34,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":1053},"to":{"krate":0,"index":1069}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/array_storage.rs","byte_start":187909,"byte_end":187921,"line_start":51,"line_end":51,"column_start":27,"column_end":39},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1843},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/array_storage.rs","byte_start":188192,"byte_end":188204,"line_start":66,"line_end":66,"column_start":24,"column_end":36},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1843},"to":{"krate":2,"index":6257}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/array_storage.rs","byte_start":188456,"byte_end":188468,"line_start":79,"line_end":79,"column_start":25,"column_end":37},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1843},"to":{"krate":2,"index":2073}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/array_storage.rs","byte_start":188763,"byte_end":188775,"line_start":94,"line_end":94,"column_start":28,"column_end":40},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1843},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/array_storage.rs","byte_start":189021,"byte_end":189033,"line_start":107,"line_end":107,"column_start":25,"column_end":37},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1843},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/array_storage.rs","byte_start":189301,"byte_end":189313,"line_start":121,"line_end":121,"column_start":24,"column_end":36},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1843},"to":{"krate":2,"index":1914}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/array_storage.rs","byte_start":189531,"byte_end":189543,"line_start":132,"line_end":132,"column_start":25,"column_end":37},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1843},"to":{"krate":2,"index":1606}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/array_storage.rs","byte_start":189826,"byte_end":189838,"line_start":148,"line_end":148,"column_start":22,"column_end":34},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1843},"to":{"krate":2,"index":1639}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/array_storage.rs","byte_start":190005,"byte_end":190017,"line_start":158,"line_end":158,"column_start":29,"column_end":41},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1843},"to":{"krate":2,"index":1634}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/array_storage.rs","byte_start":190298,"byte_end":190310,"line_start":172,"line_end":172,"column_start":43,"column_end":55},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1843},"to":{"krate":0,"index":1035}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/array_storage.rs","byte_start":191431,"byte_end":191443,"line_start":228,"line_end":228,"column_start":46,"column_end":58},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1843},"to":{"krate":0,"index":1053}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/array_storage.rs","byte_start":191871,"byte_end":191883,"line_start":248,"line_end":248,"column_start":53,"column_end":65},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1843},"to":{"krate":0,"index":1065}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/array_storage.rs","byte_start":192138,"byte_end":192150,"line_start":259,"line_end":259,"column_start":56,"column_end":68},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1843},"to":{"krate":0,"index":1069}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":196566,"byte_end":196573,"line_start":24,"line_end":24,"column_start":21,"column_end":28},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1093},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":197852,"byte_end":197859,"line_start":68,"line_end":68,"column_start":20,"column_end":27},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1102},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":198661,"byte_end":198668,"line_start":96,"line_end":96,"column_start":20,"column_end":27},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1104},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":202726,"byte_end":202738,"line_start":204,"line_end":204,"column_start":5,"column_end":17},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":2851},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":205866,"byte_end":205878,"line_start":299,"line_end":299,"column_start":5,"column_end":17},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":2851},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/cg.rs","byte_start":208832,"byte_end":208844,"line_start":385,"line_end":385,"column_start":60,"column_end":72},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":2851},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/componentwise.rs","byte_start":211017,"byte_end":211023,"line_start":18,"line_end":18,"column_start":54,"column_end":60},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":17001},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/componentwise.rs","byte_start":218884,"byte_end":218890,"line_start":243,"line_end":243,"column_start":46,"column_end":52},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":17001},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":220442,"byte_end":220450,"line_start":30,"line_end":30,"column_start":33,"column_end":41},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1089},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":229846,"byte_end":229853,"line_start":305,"line_end":305,"column_start":17,"column_end":24},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1093},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":249056,"byte_end":249064,"line_start":740,"line_end":740,"column_start":42,"column_end":50},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1089},"to":{"krate":16,"index":302}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":249365,"byte_end":249372,"line_start":756,"line_end":756,"column_start":29,"column_end":36},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1093},"to":{"krate":16,"index":312}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":249596,"byte_end":249604,"line_start":767,"line_end":767,"column_start":45,"column_end":53},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1089},"to":{"krate":16,"index":92}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":249945,"byte_end":249953,"line_start":783,"line_end":783,"column_start":69,"column_end":77},"kind":{"Impl":{"id":126}},"from":{"krate":20,"index":1980},"to":{"krate":20,"index":537}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":251019,"byte_end":251027,"line_start":818,"line_end":818,"column_start":70,"column_end":78},"kind":{"Impl":{"id":127}},"from":{"krate":20,"index":1980},"to":{"krate":20,"index":537}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction.rs","byte_start":258738,"byte_end":258745,"line_start":1009,"line_end":1009,"column_start":21,"column_end":28},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1172},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction_slice.rs","byte_start":262753,"byte_end":262766,"line_start":12,"line_end":12,"column_start":5,"column_end":18},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":1217},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction_slice.rs","byte_start":264770,"byte_end":264786,"line_start":63,"line_end":63,"column_start":5,"column_end":21},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":1516},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction_slice.rs","byte_start":267817,"byte_end":267830,"line_start":135,"line_end":135,"column_start":37,"column_end":50},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":1217},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/construction_slice.rs","byte_start":268981,"byte_end":268997,"line_start":160,"line_end":160,"column_start":37,"column_end":53},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":1516},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/conversion.rs","byte_start":276867,"byte_end":276875,"line_start":33,"line_end":33,"column_start":65,"column_end":73},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":1089},"to":{"krate":27,"index":174}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/conversion.rs","byte_start":287528,"byte_end":287534,"line_start":350,"line_end":350,"column_start":9,"column_end":15},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":17001},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/conversion.rs","byte_start":288000,"byte_end":288006,"line_start":367,"line_end":367,"column_start":9,"column_end":15},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":17001},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/conversion.rs","byte_start":288393,"byte_end":288399,"line_start":381,"line_end":381,"column_start":9,"column_end":15},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":17001},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/conversion.rs","byte_start":288742,"byte_end":288748,"line_start":394,"line_end":394,"column_start":9,"column_end":15},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":17001},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/conversion.rs","byte_start":289220,"byte_end":289226,"line_start":411,"line_end":411,"column_start":9,"column_end":15},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":17001},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/conversion.rs","byte_start":289619,"byte_end":289625,"line_start":425,"line_end":425,"column_start":9,"column_end":15},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":17001},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/conversion.rs","byte_start":289967,"byte_end":289978,"line_start":438,"line_end":438,"column_start":9,"column_end":20},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":17227},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/conversion.rs","byte_start":291046,"byte_end":291057,"line_start":475,"line_end":475,"column_start":9,"column_end":20},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":17227},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/conversion.rs","byte_start":292129,"byte_end":292143,"line_start":512,"line_end":512,"column_start":9,"column_end":23},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":17283},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/conversion.rs","byte_start":293591,"byte_end":293603,"line_start":566,"line_end":566,"column_start":46,"column_end":58},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":1481},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/conversion.rs","byte_start":293768,"byte_end":293783,"line_start":573,"line_end":573,"column_start":50,"column_end":65},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":1780},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/conversion.rs","byte_start":294002,"byte_end":294010,"line_start":581,"line_end":581,"column_start":9,"column_end":17},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":1089},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/conversion.rs","byte_start":294622,"byte_end":294630,"line_start":602,"line_end":602,"column_start":9,"column_end":17},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":1089},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/conversion.rs","byte_start":295338,"byte_end":295346,"line_start":625,"line_end":625,"column_start":9,"column_end":17},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":1089},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/conversion.rs","byte_start":296247,"byte_end":296255,"line_start":652,"line_end":652,"column_start":9,"column_end":17},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":1089},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":298236,"byte_end":298242,"line_start":21,"line_end":21,"column_start":61,"column_end":67},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":17001},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":300945,"byte_end":300951,"line_start":102,"line_end":102,"column_start":57,"column_end":63},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":17001},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":306643,"byte_end":306649,"line_start":265,"line_end":265,"column_start":49,"column_end":55},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":17001},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":307886,"byte_end":307892,"line_start":303,"line_end":303,"column_start":54,"column_end":60},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":17001},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":325098,"byte_end":325105,"line_start":817,"line_end":817,"column_start":17,"column_end":24},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":1096},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":325898,"byte_end":325906,"line_start":836,"line_end":836,"column_start":25,"column_end":33},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":1089},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":326870,"byte_end":326878,"line_start":860,"line_end":860,"column_start":25,"column_end":33},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":1089},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":329912,"byte_end":329918,"line_start":962,"line_end":962,"column_start":29,"column_end":35},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":17001},"to":{"krate":2,"index":4768}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":331428,"byte_end":331434,"line_start":1010,"line_end":1010,"column_start":26,"column_end":32},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":17001},"to":{"krate":2,"index":4768}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/edition.rs","byte_start":332046,"byte_end":332052,"line_start":1031,"line_end":1031,"column_start":53,"column_end":59},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":17001},"to":{"krate":2,"index":4768}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":335356,"byte_end":335361,"line_start":51,"line_end":51,"column_start":35,"column_end":40},"kind":{"Impl":{"id":160}},"from":{"krate":2,"index":28132},"to":{"krate":0,"index":2653}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":336520,"byte_end":336529,"line_start":95,"line_end":95,"column_start":35,"column_end":44},"kind":{"Impl":{"id":161}},"from":{"krate":2,"index":28154},"to":{"krate":0,"index":2653}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":337548,"byte_end":337557,"line_start":135,"line_end":135,"column_start":43,"column_end":52},"kind":{"Impl":{"id":162}},"from":{"krate":2,"index":28154},"to":{"krate":0,"index":2653}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":338089,"byte_end":338098,"line_start":163,"line_end":163,"column_start":35,"column_end":44},"kind":{"Impl":{"id":163}},"from":{"krate":2,"index":28118},"to":{"krate":0,"index":2653}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":338599,"byte_end":338613,"line_start":189,"line_end":189,"column_start":35,"column_end":49},"kind":{"Impl":{"id":164}},"from":{"krate":2,"index":28198},"to":{"krate":0,"index":2653}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":340118,"byte_end":340125,"line_start":245,"line_end":245,"column_start":35,"column_end":42},"kind":{"Impl":{"id":165}},"from":{"krate":2,"index":28175},"to":{"krate":0,"index":2653}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":341096,"byte_end":341112,"line_start":285,"line_end":285,"column_start":35,"column_end":51},"kind":{"Impl":{"id":166}},"from":{"krate":2,"index":28221},"to":{"krate":0,"index":2653}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":342184,"byte_end":342189,"line_start":326,"line_end":326,"column_start":76,"column_end":81},"kind":"SuperTrait","from":{"krate":2,"index":1909},"to":{"krate":0,"index":2708}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":343399,"byte_end":343410,"line_start":362,"line_end":362,"column_start":5,"column_end":16},"kind":"SuperTrait","from":{"krate":0,"index":2708},"to":{"krate":0,"index":2719}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/indexing.rs","byte_start":347045,"byte_end":347051,"line_start":492,"line_end":492,"column_start":54,"column_end":60},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":17001},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":359580,"byte_end":359586,"line_start":88,"line_end":88,"column_start":63,"column_end":69},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":17001},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":359832,"byte_end":359838,"line_start":97,"line_end":97,"column_start":30,"column_end":36},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":17001},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":361862,"byte_end":361868,"line_start":188,"line_end":188,"column_start":36,"column_end":42},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":17001},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":362270,"byte_end":362276,"line_start":200,"line_end":200,"column_start":54,"column_end":60},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":17001},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":378427,"byte_end":378433,"line_start":733,"line_end":733,"column_start":57,"column_end":63},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":17001},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":386398,"byte_end":386404,"line_start":983,"line_end":983,"column_start":43,"column_end":49},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":2855},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":386785,"byte_end":386791,"line_start":993,"line_end":993,"column_start":46,"column_end":52},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":2855},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":387214,"byte_end":387220,"line_start":1003,"line_end":1003,"column_start":64,"column_end":70},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":17001},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":387479,"byte_end":387485,"line_start":1011,"line_end":1011,"column_start":67,"column_end":73},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":17001},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":387750,"byte_end":387756,"line_start":1019,"line_end":1019,"column_start":49,"column_end":55},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":17001},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":388234,"byte_end":388240,"line_start":1037,"line_end":1037,"column_start":64,"column_end":70},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":17001},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":391204,"byte_end":391210,"line_start":1134,"line_end":1134,"column_start":67,"column_end":73},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":17001},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":391866,"byte_end":391872,"line_start":1154,"line_end":1154,"column_start":59,"column_end":65},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":17001},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":392996,"byte_end":393008,"line_start":1190,"line_end":1190,"column_start":46,"column_end":58},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":2851},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":394558,"byte_end":394570,"line_start":1247,"line_end":1247,"column_start":56,"column_end":68},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":2851},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":395585,"byte_end":395591,"line_start":1283,"line_end":1283,"column_start":5,"column_end":11},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":17001},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":396363,"byte_end":396369,"line_start":1304,"line_end":1304,"column_start":57,"column_end":63},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":2855},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":397317,"byte_end":397323,"line_start":1332,"line_end":1332,"column_start":57,"column_end":63},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":2855},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":397942,"byte_end":397948,"line_start":1350,"line_end":1350,"column_start":42,"column_end":48},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":17001},"to":{"krate":15,"index":12}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":398412,"byte_end":398418,"line_start":1371,"line_end":1371,"column_start":43,"column_end":49},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":17001},"to":{"krate":15,"index":56}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":398876,"byte_end":398882,"line_start":1393,"line_end":1393,"column_start":39,"column_end":45},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":17001},"to":{"krate":15,"index":92}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":399368,"byte_end":399374,"line_start":1413,"line_end":1413,"column_start":43,"column_end":49},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":17001},"to":{"krate":2,"index":1671}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":402046,"byte_end":402052,"line_start":1505,"line_end":1505,"column_start":35,"column_end":41},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":17001},"to":{"krate":2,"index":1639}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":402187,"byte_end":402193,"line_start":1512,"line_end":1512,"column_start":67,"column_end":73},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":17001},"to":{"krate":2,"index":1634}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":406161,"byte_end":406167,"line_start":1631,"line_end":1631,"column_start":5,"column_end":11},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":17001},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":410222,"byte_end":410228,"line_start":1732,"line_end":1732,"column_start":44,"column_end":50},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":2855},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":410855,"byte_end":410861,"line_start":1753,"line_end":1753,"column_start":64,"column_end":70},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":17001},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":411607,"byte_end":411613,"line_start":1776,"line_end":1776,"column_start":5,"column_end":11},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":2855},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":412380,"byte_end":412384,"line_start":1800,"line_end":1800,"column_start":46,"column_end":50},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":17387},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":414408,"byte_end":414412,"line_start":1865,"line_end":1865,"column_start":42,"column_end":46},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":17387},"to":{"krate":15,"index":12}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":414839,"byte_end":414843,"line_start":1884,"line_end":1884,"column_start":43,"column_end":47},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":17387},"to":{"krate":15,"index":56}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":415340,"byte_end":415344,"line_start":1907,"line_end":1907,"column_start":39,"column_end":43},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":17387},"to":{"krate":15,"index":92}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix.rs","byte_start":415729,"byte_end":415735,"line_start":1924,"line_end":1924,"column_start":27,"column_end":33},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":17001},"to":{"krate":2,"index":6257}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_simba.rs","byte_start":416443,"byte_end":416451,"line_start":15,"line_end":15,"column_start":29,"column_end":37},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":1089},"to":{"krate":27,"index":451}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":421692,"byte_end":421704,"line_start":93,"line_end":93,"column_start":9,"column_end":21},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":17120},"to":{"krate":2,"index":1914}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":421819,"byte_end":421831,"line_start":98,"line_end":98,"column_start":9,"column_end":21},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":17120},"to":{"krate":2,"index":1606}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":424486,"byte_end":424501,"line_start":182,"line_end":182,"column_start":9,"column_end":24},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":17176},"to":{"krate":0,"index":1053}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":425095,"byte_end":425107,"line_start":202,"line_end":202,"column_start":9,"column_end":21},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":17120},"to":{"krate":0,"index":1065}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":425224,"byte_end":425239,"line_start":206,"line_end":206,"column_start":9,"column_end":24},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":17176},"to":{"krate":0,"index":1065}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":425359,"byte_end":425374,"line_start":210,"line_end":210,"column_start":9,"column_end":24},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":17176},"to":{"krate":0,"index":1069}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":425506,"byte_end":425518,"line_start":215,"line_end":215,"column_start":9,"column_end":21},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":17120},"to":{"krate":0,"index":1065}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":425642,"byte_end":425657,"line_start":219,"line_end":219,"column_start":9,"column_end":24},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":17176},"to":{"krate":0,"index":1065}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":425784,"byte_end":425799,"line_start":223,"line_end":223,"column_start":9,"column_end":24},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":17176},"to":{"krate":0,"index":1069}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":425878,"byte_end":425884,"line_start":227,"line_end":227,"column_start":54,"column_end":60},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":17001},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":445961,"byte_end":445966,"line_start":730,"line_end":730,"column_start":32,"column_end":37},"kind":{"Impl":{"id":215}},"from":{"krate":2,"index":28132},"to":{"krate":0,"index":3344}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":446315,"byte_end":446324,"line_start":749,"line_end":749,"column_start":32,"column_end":41},"kind":{"Impl":{"id":216}},"from":{"krate":2,"index":28154},"to":{"krate":0,"index":3344}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":446683,"byte_end":446690,"line_start":768,"line_end":768,"column_start":32,"column_end":39},"kind":{"Impl":{"id":217}},"from":{"krate":2,"index":28175},"to":{"krate":0,"index":3344}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":447017,"byte_end":447026,"line_start":787,"line_end":787,"column_start":32,"column_end":41},"kind":{"Impl":{"id":218}},"from":{"krate":2,"index":28118},"to":{"krate":0,"index":3344}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":447350,"byte_end":447356,"line_start":806,"line_end":806,"column_start":54,"column_end":60},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":17001},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":448600,"byte_end":448606,"line_start":845,"line_end":845,"column_start":57,"column_end":63},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":17001},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/matrix_slice.rs","byte_start":449929,"byte_end":449940,"line_start":884,"line_end":884,"column_start":9,"column_end":20},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":17227},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":451996,"byte_end":452009,"line_start":49,"line_end":49,"column_start":39,"column_end":52},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":3453},"to":{"krate":0,"index":3440}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":452842,"byte_end":452848,"line_start":83,"line_end":83,"column_start":39,"column_end":45},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":3455},"to":{"krate":0,"index":3440}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":453861,"byte_end":453872,"line_start":120,"line_end":120,"column_start":39,"column_end":50},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":3458},"to":{"krate":0,"index":3440}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":454922,"byte_end":454928,"line_start":157,"line_end":157,"column_start":64,"column_end":70},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":17001},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":459243,"byte_end":459249,"line_start":302,"line_end":302,"column_start":60,"column_end":66},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":17001},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":460437,"byte_end":460443,"line_start":338,"line_end":338,"column_start":67,"column_end":73},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":17001},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":461453,"byte_end":461459,"line_start":370,"line_end":370,"column_start":63,"column_end":69},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":17001},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":461977,"byte_end":461985,"line_start":387,"line_end":387,"column_start":54,"column_end":62},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":1089},"to":{"krate":0,"index":3709}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":462502,"byte_end":462506,"line_start":414,"line_end":414,"column_start":53,"column_end":57},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":17387},"to":{"krate":2,"index":1994}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/norm.rs","byte_start":462967,"byte_end":462974,"line_start":430,"line_end":430,"column_start":35,"column_end":42},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":1172},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/properties.rs","byte_start":468329,"byte_end":468335,"line_start":12,"line_end":12,"column_start":54,"column_end":60},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":17001},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/properties.rs","byte_start":470574,"byte_end":470580,"line_start":87,"line_end":87,"column_start":60,"column_end":66},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":17001},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/properties.rs","byte_start":471136,"byte_end":471148,"line_start":104,"line_end":104,"column_start":49,"column_end":61},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":2851},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/scalar.rs","byte_start":471980,"byte_end":471985,"line_start":8,"line_end":8,"column_start":19,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":1606},"to":{"krate":0,"index":3615}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/scalar.rs","byte_start":471988,"byte_end":471997,"line_start":8,"line_end":8,"column_start":27,"column_end":36},"kind":"SuperTrait","from":{"krate":2,"index":1634},"to":{"krate":0,"index":3615}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/scalar.rs","byte_start":472000,"byte_end":472005,"line_start":8,"line_end":8,"column_start":39,"column_end":44},"kind":"SuperTrait","from":{"krate":2,"index":6069},"to":{"krate":0,"index":3615}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/scalar.rs","byte_start":472008,"byte_end":472011,"line_start":8,"line_end":8,"column_start":47,"column_end":50},"kind":"SuperTrait","from":{"krate":2,"index":2394},"to":{"krate":0,"index":3615}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/scalar.rs","byte_start":472506,"byte_end":472507,"line_start":24,"line_end":24,"column_start":52,"column_end":53},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":3620},"to":{"krate":0,"index":3615}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":472863,"byte_end":472869,"line_start":7,"line_end":7,"column_start":54,"column_end":60},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":17001},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":474925,"byte_end":474931,"line_start":76,"line_end":76,"column_start":73,"column_end":79},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":17001},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/statistics.rs","byte_start":477690,"byte_end":477696,"line_start":173,"line_end":173,"column_start":80,"column_end":86},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":17001},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":487621,"byte_end":487625,"line_start":74,"line_end":74,"column_start":17,"column_end":21},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":17387},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":489977,"byte_end":489981,"line_start":143,"line_end":143,"column_start":9,"column_end":13},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":17387},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":491006,"byte_end":491010,"line_start":179,"line_end":179,"column_start":22,"column_end":26},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":17387},"to":{"krate":2,"index":1816}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":492785,"byte_end":492789,"line_start":251,"line_end":251,"column_start":19,"column_end":23},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":17387},"to":{"krate":2,"index":2073}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":493206,"byte_end":493210,"line_start":264,"line_end":264,"column_start":53,"column_end":57},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":17387},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":493738,"byte_end":493742,"line_start":280,"line_end":280,"column_start":53,"column_end":57},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":17387},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":494352,"byte_end":494356,"line_start":298,"line_end":298,"column_start":53,"column_end":57},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":17387},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/unit.rs","byte_start":495131,"byte_end":495135,"line_start":320,"line_end":320,"column_start":54,"column_end":58},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":17387},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/vec_storage.rs","byte_start":497168,"byte_end":497178,"line_start":36,"line_end":36,"column_start":25,"column_end":35},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":17413},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/vec_storage.rs","byte_start":498730,"byte_end":498740,"line_start":92,"line_end":92,"column_start":42,"column_end":52},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":17413},"to":{"krate":2,"index":1822}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/vec_storage.rs","byte_start":498925,"byte_end":498935,"line_start":104,"line_end":104,"column_start":59,"column_end":69},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":17413},"to":{"krate":0,"index":1035}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/vec_storage.rs","byte_start":499888,"byte_end":499898,"line_start":153,"line_end":153,"column_start":63,"column_end":73},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":17413},"to":{"krate":0,"index":1035}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/vec_storage.rs","byte_start":500891,"byte_end":500901,"line_start":207,"line_end":207,"column_start":62,"column_end":72},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":17413},"to":{"krate":0,"index":1053}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/vec_storage.rs","byte_start":501241,"byte_end":501251,"line_start":222,"line_end":222,"column_start":69,"column_end":79},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":17413},"to":{"krate":0,"index":1065}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/vec_storage.rs","byte_start":501411,"byte_end":501421,"line_start":227,"line_end":227,"column_start":72,"column_end":82},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":17413},"to":{"krate":0,"index":1069}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/vec_storage.rs","byte_start":501575,"byte_end":501585,"line_start":232,"line_end":232,"column_start":66,"column_end":76},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":17413},"to":{"krate":0,"index":1053}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/vec_storage.rs","byte_start":502355,"byte_end":502365,"line_start":262,"line_end":262,"column_start":73,"column_end":83},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":17413},"to":{"krate":0,"index":1065}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/vec_storage.rs","byte_start":502529,"byte_end":502539,"line_start":267,"line_end":267,"column_start":76,"column_end":86},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":17413},"to":{"krate":0,"index":1069}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/vec_storage.rs","byte_start":502658,"byte_end":502668,"line_start":272,"line_end":272,"column_start":31,"column_end":41},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":17413},"to":{"krate":2,"index":4768}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/vec_storage.rs","byte_start":503373,"byte_end":503383,"line_start":288,"line_end":288,"column_start":50,"column_end":60},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":17413},"to":{"krate":2,"index":4768}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/vec_storage.rs","byte_start":503865,"byte_end":503875,"line_start":301,"line_end":301,"column_start":50,"column_end":60},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":17413},"to":{"krate":2,"index":4768}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/base/vec_storage.rs","byte_start":504782,"byte_end":504792,"line_start":329,"line_end":329,"column_start":23,"column_end":33},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":17413},"to":{"krate":2,"index":4768}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/abstract_rotation.rs","byte_start":517211,"byte_end":517220,"line_start":8,"line_end":8,"column_start":52,"column_end":61},"kind":"SuperTrait","from":{"krate":2,"index":1634},"to":{"krate":0,"index":3923}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/abstract_rotation.rs","byte_start":517223,"byte_end":517232,"line_start":8,"line_end":8,"column_start":64,"column_end":73},"kind":"SuperTrait","from":{"krate":27,"index":148},"to":{"krate":0,"index":3923}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/abstract_rotation.rs","byte_start":517235,"byte_end":517240,"line_start":8,"line_end":8,"column_start":76,"column_end":81},"kind":"SuperTrait","from":{"krate":2,"index":1606},"to":{"krate":0,"index":3923}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/abstract_rotation.rs","byte_start":518188,"byte_end":518196,"line_start":33,"line_end":33,"column_start":63,"column_end":71},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":17839},"to":{"krate":0,"index":3923}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/abstract_rotation.rs","byte_start":519276,"byte_end":519290,"line_start":86,"line_end":86,"column_start":52,"column_end":66},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":4828},"to":{"krate":0,"index":3923}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/abstract_rotation.rs","byte_start":520105,"byte_end":520116,"line_start":126,"line_end":126,"column_start":52,"column_end":63},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":5252},"to":{"krate":0,"index":3923}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":521842,"byte_end":521847,"line_start":33,"line_end":33,"column_start":70,"column_end":75},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":17449},"to":{"krate":2,"index":6257}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":522102,"byte_end":522107,"line_start":43,"line_end":43,"column_start":45,"column_end":50},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":17449},"to":{"krate":2,"index":1914}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":523553,"byte_end":523558,"line_start":101,"line_end":101,"column_start":29,"column_end":34},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":17449},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":527185,"byte_end":527190,"line_start":221,"line_end":221,"column_start":55,"column_end":60},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":17449},"to":{"krate":15,"index":12}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":527601,"byte_end":527606,"line_start":239,"line_end":239,"column_start":57,"column_end":62},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":17449},"to":{"krate":15,"index":56}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":528082,"byte_end":528087,"line_start":261,"line_end":261,"column_start":49,"column_end":54},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":17449},"to":{"krate":15,"index":92}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":528459,"byte_end":528464,"line_start":277,"line_end":277,"column_start":41,"column_end":46},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":17449},"to":{"krate":2,"index":1639}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":528557,"byte_end":528562,"line_start":279,"line_end":279,"column_start":43,"column_end":48},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":17449},"to":{"krate":2,"index":1634}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":528772,"byte_end":528777,"line_start":289,"line_end":289,"column_start":57,"column_end":62},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":17449},"to":{"krate":2,"index":1671}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":529426,"byte_end":529431,"line_start":322,"line_end":322,"column_start":46,"column_end":51},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":17449},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point.rs","byte_start":530193,"byte_end":530198,"line_start":351,"line_end":351,"column_start":61,"column_end":66},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":17449},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_construction.rs","byte_start":531568,"byte_end":531573,"line_start":15,"line_end":15,"column_start":29,"column_end":34},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":17449},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_construction.rs","byte_start":534771,"byte_end":534776,"line_start":118,"line_end":118,"column_start":51,"column_end":56},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":17449},"to":{"krate":16,"index":92}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_construction.rs","byte_start":535072,"byte_end":535080,"line_start":133,"line_end":133,"column_start":59,"column_end":67},"kind":{"Impl":{"id":277}},"from":{"krate":20,"index":1980},"to":{"krate":20,"index":537}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_conversion.rs","byte_start":538431,"byte_end":538436,"line_start":28,"line_end":28,"column_start":44,"column_end":49},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":17449},"to":{"krate":27,"index":174}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_conversion.rs","byte_start":539123,"byte_end":539128,"line_start":53,"line_end":53,"column_start":62,"column_end":67},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":17449},"to":{"krate":27,"index":174}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_conversion.rs","byte_start":541520,"byte_end":541527,"line_start":134,"line_end":134,"column_start":64,"column_end":71},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":1172},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_conversion.rs","byte_start":541794,"byte_end":541799,"line_start":145,"line_end":145,"column_start":53,"column_end":58},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":17449},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_conversion.rs","byte_start":542042,"byte_end":542047,"line_start":156,"line_end":156,"column_start":9,"column_end":14},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":17449},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_conversion.rs","byte_start":542522,"byte_end":542527,"line_start":170,"line_end":170,"column_start":9,"column_end":14},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":17449},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_conversion.rs","byte_start":543091,"byte_end":543096,"line_start":189,"line_end":189,"column_start":9,"column_end":14},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":17449},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_conversion.rs","byte_start":543769,"byte_end":543774,"line_start":212,"line_end":212,"column_start":9,"column_end":14},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":17449},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_ops.rs","byte_start":546372,"byte_end":546377,"line_start":23,"line_end":23,"column_start":46,"column_end":51},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":17449},"to":{"krate":2,"index":2154}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_ops.rs","byte_start":546597,"byte_end":546602,"line_start":35,"line_end":35,"column_start":49,"column_end":54},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":17449},"to":{"krate":2,"index":2158}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_ops.rs","byte_start":546837,"byte_end":546842,"line_start":50,"line_end":50,"column_start":49,"column_end":54},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":17449},"to":{"krate":2,"index":1994}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/point_simba.rs","byte_start":554118,"byte_end":554123,"line_start":9,"line_end":9,"column_start":55,"column_end":60},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":17449},"to":{"krate":27,"index":451}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":556063,"byte_end":556071,"line_start":35,"line_end":35,"column_start":70,"column_end":78},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":17839},"to":{"krate":2,"index":6257}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":556332,"byte_end":556340,"line_start":45,"line_end":45,"column_start":45,"column_end":53},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":17839},"to":{"krate":2,"index":1914}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":556498,"byte_end":556506,"line_start":52,"line_end":52,"column_start":39,"column_end":47},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":17839},"to":{"krate":2,"index":1606}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":558039,"byte_end":558047,"line_start":114,"line_end":114,"column_start":29,"column_end":37},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":17839},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":567399,"byte_end":567407,"line_start":364,"line_end":364,"column_start":36,"column_end":44},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":17839},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":570443,"byte_end":570451,"line_start":446,"line_end":446,"column_start":41,"column_end":49},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":17839},"to":{"krate":2,"index":1639}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":570559,"byte_end":570567,"line_start":448,"line_end":448,"column_start":55,"column_end":63},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":17839},"to":{"krate":2,"index":1634}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":570758,"byte_end":570766,"line_start":458,"line_end":458,"column_start":35,"column_end":43},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":17839},"to":{"krate":15,"index":12}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":571186,"byte_end":571194,"line_start":477,"line_end":477,"column_start":36,"column_end":44},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":17839},"to":{"krate":15,"index":56}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":571684,"byte_end":571692,"line_start":500,"line_end":500,"column_start":32,"column_end":40},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":17839},"to":{"krate":15,"index":92}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation.rs","byte_start":572112,"byte_end":572120,"line_start":522,"line_end":522,"column_start":38,"column_end":46},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":17839},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_construction.rs","byte_start":573483,"byte_end":573491,"line_start":11,"line_end":11,"column_start":21,"column_end":29},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":17839},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_construction.rs","byte_start":574078,"byte_end":574086,"line_start":33,"line_end":33,"column_start":29,"column_end":37},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":17839},"to":{"krate":16,"index":312}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_conversion.rs","byte_start":575202,"byte_end":575210,"line_start":33,"line_end":33,"column_start":56,"column_end":64},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":17839},"to":{"krate":27,"index":174}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_conversion.rs","byte_start":575831,"byte_end":575840,"line_start":55,"line_end":55,"column_start":47,"column_end":56},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":4386},"to":{"krate":27,"index":174}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_conversion.rs","byte_start":576433,"byte_end":576442,"line_start":78,"line_end":78,"column_start":44,"column_end":53},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":4384},"to":{"krate":27,"index":174}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_conversion.rs","byte_start":577035,"byte_end":577043,"line_start":101,"line_end":101,"column_start":62,"column_end":70},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":17839},"to":{"krate":27,"index":174}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_conversion.rs","byte_start":577701,"byte_end":577709,"line_start":124,"line_end":124,"column_start":64,"column_end":72},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":17839},"to":{"krate":27,"index":174}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_conversion.rs","byte_start":578424,"byte_end":578432,"line_start":147,"line_end":147,"column_start":54,"column_end":62},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":17839},"to":{"krate":27,"index":174}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_conversion.rs","byte_start":579382,"byte_end":579390,"line_start":176,"line_end":176,"column_start":62,"column_end":70},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":17839},"to":{"krate":27,"index":174}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_conversion.rs","byte_start":580996,"byte_end":581003,"line_start":220,"line_end":220,"column_start":43,"column_end":50},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":1102},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_conversion.rs","byte_start":581140,"byte_end":581147,"line_start":227,"line_end":227,"column_start":43,"column_end":50},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":1100},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_conversion.rs","byte_start":581280,"byte_end":581287,"line_start":234,"line_end":234,"column_start":43,"column_end":50},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":1104},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_conversion.rs","byte_start":581424,"byte_end":581431,"line_start":241,"line_end":241,"column_start":43,"column_end":50},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":1102},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_conversion.rs","byte_start":581614,"byte_end":581622,"line_start":249,"line_end":249,"column_start":9,"column_end":17},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":17839},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_conversion.rs","byte_start":582103,"byte_end":582111,"line_start":265,"line_end":265,"column_start":9,"column_end":17},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":17839},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_conversion.rs","byte_start":582674,"byte_end":582682,"line_start":283,"line_end":283,"column_start":9,"column_end":17},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":17839},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_conversion.rs","byte_start":583410,"byte_end":583418,"line_start":305,"line_end":305,"column_start":9,"column_end":17},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":17839},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_ops.rs","byte_start":585198,"byte_end":585206,"line_start":33,"line_end":33,"column_start":55,"column_end":63},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":17839},"to":{"krate":2,"index":2154}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_simba.rs","byte_start":590664,"byte_end":590672,"line_start":9,"line_end":9,"column_start":26,"column_end":34},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":17839},"to":{"krate":27,"index":451}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":592535,"byte_end":592544,"line_start":24,"line_end":24,"column_start":24,"column_end":33},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":4384},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":600106,"byte_end":600114,"line_start":241,"line_end":241,"column_start":55,"column_end":63},"kind":{"Impl":{"id":375}},"from":{"krate":20,"index":1980},"to":{"krate":20,"index":537}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":600736,"byte_end":600745,"line_start":270,"line_end":270,"column_start":24,"column_end":33},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":4386},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/rotation_specialization.rs","byte_start":622462,"byte_end":622470,"line_start":867,"line_end":867,"column_start":55,"column_end":63},"kind":{"Impl":{"id":377}},"from":{"krate":20,"index":1980},"to":{"krate":20,"index":537}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":625108,"byte_end":625118,"line_start":36,"line_end":36,"column_start":32,"column_end":42},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":18095},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":625711,"byte_end":625721,"line_start":62,"line_end":62,"column_start":36,"column_end":46},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":18095},"to":{"krate":2,"index":1639}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":625798,"byte_end":625808,"line_start":64,"line_end":64,"column_start":38,"column_end":48},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":18095},"to":{"krate":2,"index":1634}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":626134,"byte_end":626144,"line_start":75,"line_end":75,"column_start":52,"column_end":62},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":18095},"to":{"krate":2,"index":6257}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":626288,"byte_end":626298,"line_start":81,"line_end":81,"column_start":45,"column_end":55},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":18095},"to":{"krate":2,"index":1914}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":626344,"byte_end":626354,"line_start":83,"line_end":83,"column_start":39,"column_end":49},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":18095},"to":{"krate":2,"index":1606}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":627121,"byte_end":627131,"line_start":118,"line_end":118,"column_start":24,"column_end":34},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":18095},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":632497,"byte_end":632507,"line_start":308,"line_end":308,"column_start":24,"column_end":34},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":18095},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":652431,"byte_end":652441,"line_start":923,"line_end":923,"column_start":59,"column_end":69},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":18095},"to":{"krate":15,"index":12}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":652957,"byte_end":652967,"line_start":939,"line_end":939,"column_start":61,"column_end":71},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":18095},"to":{"krate":15,"index":56}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":653558,"byte_end":653568,"line_start":958,"line_end":958,"column_start":53,"column_end":63},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":18095},"to":{"krate":15,"index":92}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":654068,"byte_end":654078,"line_start":972,"line_end":972,"column_start":52,"column_end":62},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":18095},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":654432,"byte_end":654442,"line_start":985,"line_end":985,"column_start":35,"column_end":45},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":18095},"to":{"krate":0,"index":3709}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":654904,"byte_end":654918,"line_start":1009,"line_end":1009,"column_start":24,"column_end":38},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":4828},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":673399,"byte_end":673413,"line_start":1547,"line_end":1547,"column_start":32,"column_end":46},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":4828},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":673531,"byte_end":673545,"line_start":1553,"line_end":1553,"column_start":52,"column_end":66},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":4828},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":674160,"byte_end":674174,"line_start":1575,"line_end":1575,"column_start":59,"column_end":73},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":4828},"to":{"krate":15,"index":12}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":674513,"byte_end":674527,"line_start":1589,"line_end":1589,"column_start":61,"column_end":75},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":4828},"to":{"krate":15,"index":56}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion.rs","byte_start":674940,"byte_end":674954,"line_start":1607,"line_end":1607,"column_start":53,"column_end":67},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":4828},"to":{"krate":15,"index":92}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":675847,"byte_end":675857,"line_start":22,"line_end":22,"column_start":29,"column_end":39},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":18095},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":676849,"byte_end":676859,"line_start":50,"line_end":50,"column_start":24,"column_end":34},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":18095},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":678417,"byte_end":678427,"line_start":104,"line_end":104,"column_start":24,"column_end":34},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":18095},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":678952,"byte_end":678962,"line_start":122,"line_end":122,"column_start":32,"column_end":42},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":18095},"to":{"krate":16,"index":312}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":679108,"byte_end":679118,"line_start":132,"line_end":132,"column_start":33,"column_end":43},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":18095},"to":{"krate":16,"index":302}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":679382,"byte_end":679390,"line_start":147,"line_end":147,"column_start":56,"column_end":64},"kind":{"Impl":{"id":402}},"from":{"krate":20,"index":1980},"to":{"krate":20,"index":537}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":679960,"byte_end":679974,"line_start":173,"line_end":173,"column_start":24,"column_end":38},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":4828},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":703755,"byte_end":703769,"line_start":794,"line_end":794,"column_start":32,"column_end":46},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":4828},"to":{"krate":16,"index":312}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_construction.rs","byte_start":703942,"byte_end":703950,"line_start":804,"line_end":804,"column_start":60,"column_end":68},"kind":{"Impl":{"id":405}},"from":{"krate":20,"index":1980},"to":{"krate":20,"index":537}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_conversion.rs","byte_start":706581,"byte_end":706591,"line_start":35,"line_end":35,"column_start":43,"column_end":53},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":18095},"to":{"krate":27,"index":174}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_conversion.rs","byte_start":707123,"byte_end":707137,"line_start":58,"line_end":58,"column_start":47,"column_end":61},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":4828},"to":{"krate":27,"index":174}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_conversion.rs","byte_start":707695,"byte_end":707709,"line_start":79,"line_end":79,"column_start":45,"column_end":59},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":4828},"to":{"krate":27,"index":174}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_conversion.rs","byte_start":708293,"byte_end":708307,"line_start":102,"line_end":102,"column_start":51,"column_end":65},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":4828},"to":{"krate":27,"index":174}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_conversion.rs","byte_start":708893,"byte_end":708907,"line_start":124,"line_end":124,"column_start":53,"column_end":67},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":4828},"to":{"krate":27,"index":174}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_conversion.rs","byte_start":709528,"byte_end":709542,"line_start":146,"line_end":146,"column_start":52,"column_end":66},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":4828},"to":{"krate":27,"index":174}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_conversion.rs","byte_start":710146,"byte_end":710160,"line_start":168,"line_end":168,"column_start":79,"column_end":93},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":4828},"to":{"krate":27,"index":174}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_conversion.rs","byte_start":711506,"byte_end":711513,"line_start":221,"line_end":221,"column_start":52,"column_end":59},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":1104},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_conversion.rs","byte_start":711701,"byte_end":711710,"line_start":231,"line_end":231,"column_start":52,"column_end":61},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":4386},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_conversion.rs","byte_start":711897,"byte_end":711911,"line_start":241,"line_end":241,"column_start":47,"column_end":61},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":4828},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_conversion.rs","byte_start":712106,"byte_end":712113,"line_start":251,"line_end":251,"column_start":52,"column_end":59},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":1102},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_conversion.rs","byte_start":712316,"byte_end":712326,"line_start":261,"line_end":261,"column_start":50,"column_end":60},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":18095},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_conversion.rs","byte_start":712496,"byte_end":712506,"line_start":268,"line_end":268,"column_start":76,"column_end":86},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":18095},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_conversion.rs","byte_start":712814,"byte_end":712824,"line_start":279,"line_end":279,"column_start":76,"column_end":86},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":18095},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_conversion.rs","byte_start":713221,"byte_end":713231,"line_start":295,"line_end":295,"column_start":76,"column_end":86},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":18095},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_conversion.rs","byte_start":713737,"byte_end":713747,"line_start":315,"line_end":315,"column_start":77,"column_end":87},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":18095},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_conversion.rs","byte_start":714491,"byte_end":714505,"line_start":344,"line_end":344,"column_start":9,"column_end":23},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":4828},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_conversion.rs","byte_start":714869,"byte_end":714883,"line_start":356,"line_end":356,"column_start":9,"column_end":23},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":4828},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_conversion.rs","byte_start":715348,"byte_end":715362,"line_start":373,"line_end":373,"column_start":9,"column_end":23},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":4828},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_conversion.rs","byte_start":715960,"byte_end":715974,"line_start":394,"line_end":394,"column_start":9,"column_end":23},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":4828},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_coordinates.rs","byte_start":716958,"byte_end":716968,"line_start":11,"line_end":11,"column_start":39,"column_end":49},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":18095},"to":{"krate":2,"index":2073}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_coordinates.rs","byte_start":717145,"byte_end":717155,"line_start":20,"line_end":20,"column_start":42,"column_end":52},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":18095},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_ops.rs","byte_start":718822,"byte_end":718832,"line_start":65,"line_end":65,"column_start":41,"column_end":51},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":18095},"to":{"krate":2,"index":2154}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_ops.rs","byte_start":718999,"byte_end":719009,"line_start":74,"line_end":74,"column_start":44,"column_end":54},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":18095},"to":{"krate":2,"index":2158}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_ops.rs","byte_start":732343,"byte_end":732353,"line_start":553,"line_end":553,"column_start":32,"column_end":42},"kind":{"Impl":{"id":458}},"from":{"krate":0,"index":18095},"to":{"krate":2,"index":1994}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_simba.rs","byte_start":736492,"byte_end":736502,"line_start":7,"line_end":7,"column_start":43,"column_end":53},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":18095},"to":{"krate":27,"index":451}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/quaternion_simba.rs","byte_start":737489,"byte_end":737503,"line_start":50,"line_end":50,"column_start":43,"column_end":57},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":4828},"to":{"krate":27,"index":451}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":739006,"byte_end":739013,"line_start":13,"line_end":13,"column_start":35,"column_end":42},"kind":{"Impl":{"id":475}},"from":{"krate":28,"index":471},"to":{"krate":0,"index":3709}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":739759,"byte_end":739770,"line_start":43,"line_end":43,"column_start":24,"column_end":35},"kind":{"Impl":{"id":476}},"from":{"krate":0,"index":5252},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":749938,"byte_end":749949,"line_start":365,"line_end":365,"column_start":52,"column_end":63},"kind":{"Impl":{"id":477}},"from":{"krate":0,"index":5252},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":750113,"byte_end":750124,"line_start":371,"line_end":371,"column_start":34,"column_end":45},"kind":{"Impl":{"id":478}},"from":{"krate":0,"index":5252},"to":{"krate":15,"index":12}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":750469,"byte_end":750480,"line_start":385,"line_end":385,"column_start":35,"column_end":46},"kind":{"Impl":{"id":479}},"from":{"krate":0,"index":5252},"to":{"krate":15,"index":56}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex.rs","byte_start":750916,"byte_end":750927,"line_start":403,"line_end":403,"column_start":31,"column_end":42},"kind":{"Impl":{"id":480}},"from":{"krate":0,"index":5252},"to":{"krate":15,"index":92}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":751676,"byte_end":751687,"line_start":16,"line_end":16,"column_start":24,"column_end":35},"kind":{"Impl":{"id":481}},"from":{"krate":0,"index":5252},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":761049,"byte_end":761060,"line_start":283,"line_end":283,"column_start":32,"column_end":43},"kind":{"Impl":{"id":482}},"from":{"krate":0,"index":5252},"to":{"krate":16,"index":312}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_construction.rs","byte_start":761230,"byte_end":761238,"line_start":293,"line_end":293,"column_start":57,"column_end":65},"kind":{"Impl":{"id":483}},"from":{"krate":20,"index":1980},"to":{"krate":20,"index":537}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_conversion.rs","byte_start":762607,"byte_end":762618,"line_start":29,"line_end":29,"column_start":44,"column_end":55},"kind":{"Impl":{"id":484}},"from":{"krate":0,"index":5252},"to":{"krate":27,"index":174}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_conversion.rs","byte_start":763150,"byte_end":763161,"line_start":50,"line_end":50,"column_start":42,"column_end":53},"kind":{"Impl":{"id":485}},"from":{"krate":0,"index":5252},"to":{"krate":27,"index":174}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_conversion.rs","byte_start":763753,"byte_end":763764,"line_start":73,"line_end":73,"column_start":51,"column_end":62},"kind":{"Impl":{"id":486}},"from":{"krate":0,"index":5252},"to":{"krate":27,"index":174}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_conversion.rs","byte_start":764350,"byte_end":764361,"line_start":95,"line_end":95,"column_start":53,"column_end":64},"kind":{"Impl":{"id":487}},"from":{"krate":0,"index":5252},"to":{"krate":27,"index":174}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_conversion.rs","byte_start":764982,"byte_end":764993,"line_start":117,"line_end":117,"column_start":52,"column_end":63},"kind":{"Impl":{"id":488}},"from":{"krate":0,"index":5252},"to":{"krate":27,"index":174}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_conversion.rs","byte_start":765597,"byte_end":765608,"line_start":139,"line_end":139,"column_start":79,"column_end":90},"kind":{"Impl":{"id":489}},"from":{"krate":0,"index":5252},"to":{"krate":27,"index":174}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_conversion.rs","byte_start":766080,"byte_end":766089,"line_start":157,"line_end":157,"column_start":49,"column_end":58},"kind":{"Impl":{"id":490}},"from":{"krate":0,"index":4384},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_conversion.rs","byte_start":766273,"byte_end":766284,"line_start":167,"line_end":167,"column_start":47,"column_end":58},"kind":{"Impl":{"id":491}},"from":{"krate":0,"index":5252},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_conversion.rs","byte_start":766476,"byte_end":766483,"line_start":177,"line_end":177,"column_start":49,"column_end":56},"kind":{"Impl":{"id":492}},"from":{"krate":0,"index":1102},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_conversion.rs","byte_start":766671,"byte_end":766678,"line_start":187,"line_end":187,"column_start":49,"column_end":56},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":1100},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_conversion.rs","byte_start":766912,"byte_end":766923,"line_start":197,"line_end":197,"column_start":84,"column_end":95},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":5252},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_conversion.rs","byte_start":767334,"byte_end":767345,"line_start":211,"line_end":211,"column_start":84,"column_end":95},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":5252},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_conversion.rs","byte_start":767800,"byte_end":767811,"line_start":225,"line_end":225,"column_start":84,"column_end":95},"kind":{"Impl":{"id":496}},"from":{"krate":0,"index":5252},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_conversion.rs","byte_start":768449,"byte_end":768460,"line_start":245,"line_end":245,"column_start":85,"column_end":96},"kind":{"Impl":{"id":497}},"from":{"krate":0,"index":5252},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_ops.rs","byte_start":770380,"byte_end":770391,"line_start":45,"line_end":45,"column_start":38,"column_end":49},"kind":{"Impl":{"id":498}},"from":{"krate":0,"index":5252},"to":{"krate":2,"index":1977}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_ops.rs","byte_start":770890,"byte_end":770901,"line_start":66,"line_end":66,"column_start":56,"column_end":67},"kind":{"Impl":{"id":499}},"from":{"krate":0,"index":5252},"to":{"krate":2,"index":1977}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_ops.rs","byte_start":771475,"byte_end":771486,"line_start":91,"line_end":91,"column_start":38,"column_end":49},"kind":{"Impl":{"id":500}},"from":{"krate":0,"index":5252},"to":{"krate":2,"index":1982}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_ops.rs","byte_start":772054,"byte_end":772065,"line_start":115,"line_end":115,"column_start":56,"column_end":67},"kind":{"Impl":{"id":501}},"from":{"krate":0,"index":5252},"to":{"krate":2,"index":1982}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_ops.rs","byte_start":778860,"byte_end":778871,"line_start":323,"line_end":323,"column_start":54,"column_end":65},"kind":{"Impl":{"id":524}},"from":{"krate":0,"index":5252},"to":{"krate":2,"index":2006}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_ops.rs","byte_start":779079,"byte_end":779090,"line_start":333,"line_end":333,"column_start":62,"column_end":73},"kind":{"Impl":{"id":525}},"from":{"krate":0,"index":5252},"to":{"krate":2,"index":2006}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_ops.rs","byte_start":779324,"byte_end":779335,"line_start":344,"line_end":344,"column_start":54,"column_end":65},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":5252},"to":{"krate":2,"index":2010}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_ops.rs","byte_start":779543,"byte_end":779554,"line_start":354,"line_end":354,"column_start":62,"column_end":73},"kind":{"Impl":{"id":527}},"from":{"krate":0,"index":5252},"to":{"krate":2,"index":2010}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_ops.rs","byte_start":779787,"byte_end":779798,"line_start":365,"line_end":365,"column_start":55,"column_end":66},"kind":{"Impl":{"id":528}},"from":{"krate":0,"index":5252},"to":{"krate":2,"index":2006}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_ops.rs","byte_start":780052,"byte_end":780063,"line_start":376,"line_end":376,"column_start":63,"column_end":74},"kind":{"Impl":{"id":529}},"from":{"krate":0,"index":5252},"to":{"krate":2,"index":2006}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_ops.rs","byte_start":780341,"byte_end":780352,"line_start":388,"line_end":388,"column_start":55,"column_end":66},"kind":{"Impl":{"id":530}},"from":{"krate":0,"index":5252},"to":{"krate":2,"index":2010}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_ops.rs","byte_start":780606,"byte_end":780617,"line_start":399,"line_end":399,"column_start":63,"column_end":74},"kind":{"Impl":{"id":531}},"from":{"krate":0,"index":5252},"to":{"krate":2,"index":2010}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_ops.rs","byte_start":780894,"byte_end":780902,"line_start":411,"line_end":411,"column_start":54,"column_end":62},"kind":{"Impl":{"id":532}},"from":{"krate":0,"index":17839},"to":{"krate":2,"index":2006}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_ops.rs","byte_start":781179,"byte_end":781187,"line_start":422,"line_end":422,"column_start":62,"column_end":70},"kind":{"Impl":{"id":533}},"from":{"krate":0,"index":17839},"to":{"krate":2,"index":2006}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_ops.rs","byte_start":781488,"byte_end":781496,"line_start":434,"line_end":434,"column_start":54,"column_end":62},"kind":{"Impl":{"id":534}},"from":{"krate":0,"index":17839},"to":{"krate":2,"index":2010}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_ops.rs","byte_start":781773,"byte_end":781781,"line_start":445,"line_end":445,"column_start":62,"column_end":70},"kind":{"Impl":{"id":535}},"from":{"krate":0,"index":17839},"to":{"krate":2,"index":2010}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/unit_complex_simba.rs","byte_start":782198,"byte_end":782209,"line_start":9,"line_end":9,"column_start":38,"column_end":49},"kind":{"Impl":{"id":536}},"from":{"krate":0,"index":5252},"to":{"krate":27,"index":451}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":784288,"byte_end":784299,"line_start":35,"line_end":35,"column_start":70,"column_end":81},"kind":{"Impl":{"id":537}},"from":{"krate":0,"index":18664},"to":{"krate":2,"index":6257}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":784520,"byte_end":784531,"line_start":45,"line_end":45,"column_start":45,"column_end":56},"kind":{"Impl":{"id":538}},"from":{"krate":0,"index":18664},"to":{"krate":2,"index":1914}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":784649,"byte_end":784660,"line_start":52,"line_end":52,"column_start":39,"column_end":50},"kind":{"Impl":{"id":539}},"from":{"krate":0,"index":18664},"to":{"krate":2,"index":1606}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":786127,"byte_end":786138,"line_start":114,"line_end":114,"column_start":29,"column_end":40},"kind":{"Impl":{"id":540}},"from":{"krate":0,"index":18664},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":789187,"byte_end":789198,"line_start":207,"line_end":207,"column_start":41,"column_end":52},"kind":{"Impl":{"id":541}},"from":{"krate":0,"index":18664},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":789796,"byte_end":789807,"line_start":227,"line_end":227,"column_start":41,"column_end":52},"kind":{"Impl":{"id":542}},"from":{"krate":0,"index":18664},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":790388,"byte_end":790399,"line_start":245,"line_end":245,"column_start":41,"column_end":52},"kind":{"Impl":{"id":543}},"from":{"krate":0,"index":18664},"to":{"krate":2,"index":1639}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":790504,"byte_end":790515,"line_start":247,"line_end":247,"column_start":55,"column_end":66},"kind":{"Impl":{"id":544}},"from":{"krate":0,"index":18664},"to":{"krate":2,"index":1634}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":790736,"byte_end":790747,"line_start":257,"line_end":257,"column_start":55,"column_end":66},"kind":{"Impl":{"id":545}},"from":{"krate":0,"index":18664},"to":{"krate":15,"index":12}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":791158,"byte_end":791169,"line_start":275,"line_end":275,"column_start":57,"column_end":68},"kind":{"Impl":{"id":546}},"from":{"krate":0,"index":18664},"to":{"krate":15,"index":56}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":791645,"byte_end":791656,"line_start":297,"line_end":297,"column_start":49,"column_end":60},"kind":{"Impl":{"id":547}},"from":{"krate":0,"index":18664},"to":{"krate":15,"index":92}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation.rs","byte_start":792072,"byte_end":792083,"line_start":318,"line_end":318,"column_start":61,"column_end":72},"kind":{"Impl":{"id":548}},"from":{"krate":0,"index":18664},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation_construction.rs","byte_start":793450,"byte_end":793461,"line_start":18,"line_end":18,"column_start":36,"column_end":47},"kind":{"Impl":{"id":549}},"from":{"krate":0,"index":18664},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation_construction.rs","byte_start":794134,"byte_end":794145,"line_start":42,"line_end":42,"column_start":56,"column_end":67},"kind":{"Impl":{"id":550}},"from":{"krate":0,"index":18664},"to":{"krate":16,"index":312}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation_construction.rs","byte_start":794334,"byte_end":794342,"line_start":52,"line_end":52,"column_start":65,"column_end":73},"kind":{"Impl":{"id":551}},"from":{"krate":20,"index":1980},"to":{"krate":20,"index":537}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation_conversion.rs","byte_start":797418,"byte_end":797429,"line_start":25,"line_end":25,"column_start":59,"column_end":70},"kind":{"Impl":{"id":552}},"from":{"krate":0,"index":18664},"to":{"krate":27,"index":174}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation_conversion.rs","byte_start":798055,"byte_end":798066,"line_start":49,"line_end":49,"column_start":62,"column_end":73},"kind":{"Impl":{"id":553}},"from":{"krate":0,"index":18664},"to":{"krate":27,"index":174}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation_conversion.rs","byte_start":798687,"byte_end":798698,"line_start":72,"line_end":72,"column_start":64,"column_end":75},"kind":{"Impl":{"id":554}},"from":{"krate":0,"index":18664},"to":{"krate":27,"index":174}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation_conversion.rs","byte_start":799376,"byte_end":799387,"line_start":95,"line_end":95,"column_start":54,"column_end":65},"kind":{"Impl":{"id":555}},"from":{"krate":0,"index":18664},"to":{"krate":27,"index":174}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation_conversion.rs","byte_start":800188,"byte_end":800199,"line_start":122,"line_end":122,"column_start":62,"column_end":73},"kind":{"Impl":{"id":556}},"from":{"krate":0,"index":18664},"to":{"krate":27,"index":174}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation_conversion.rs","byte_start":801331,"byte_end":801338,"line_start":158,"line_end":158,"column_start":70,"column_end":77},"kind":{"Impl":{"id":557}},"from":{"krate":0,"index":1093},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation_conversion.rs","byte_start":801630,"byte_end":801641,"line_start":169,"line_end":169,"column_start":53,"column_end":64},"kind":{"Impl":{"id":558}},"from":{"krate":0,"index":18664},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation_conversion.rs","byte_start":801889,"byte_end":801900,"line_start":180,"line_end":180,"column_start":9,"column_end":20},"kind":{"Impl":{"id":559}},"from":{"krate":0,"index":18664},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation_conversion.rs","byte_start":802358,"byte_end":802369,"line_start":196,"line_end":196,"column_start":9,"column_end":20},"kind":{"Impl":{"id":560}},"from":{"krate":0,"index":18664},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation_conversion.rs","byte_start":802897,"byte_end":802908,"line_start":214,"line_end":214,"column_start":9,"column_end":20},"kind":{"Impl":{"id":561}},"from":{"krate":0,"index":18664},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation_conversion.rs","byte_start":803577,"byte_end":803588,"line_start":236,"line_end":236,"column_start":9,"column_end":20},"kind":{"Impl":{"id":562}},"from":{"krate":0,"index":18664},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/translation_simba.rs","byte_start":812432,"byte_end":812443,"line_start":10,"line_end":10,"column_start":55,"column_end":66},"kind":{"Impl":{"id":573}},"from":{"krate":0,"index":18664},"to":{"krate":27,"index":451}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":815806,"byte_end":815814,"line_start":74,"line_end":74,"column_start":9,"column_end":17},"kind":{"Impl":{"id":574}},"from":{"krate":0,"index":18822},"to":{"krate":2,"index":6257}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":816124,"byte_end":816132,"line_start":86,"line_end":86,"column_start":9,"column_end":17},"kind":{"Impl":{"id":575}},"from":{"krate":0,"index":18822},"to":{"krate":2,"index":1914}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":816288,"byte_end":816296,"line_start":93,"line_end":93,"column_start":74,"column_end":82},"kind":{"Impl":{"id":576}},"from":{"krate":0,"index":18822},"to":{"krate":2,"index":1606}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":816535,"byte_end":816543,"line_start":103,"line_end":103,"column_start":56,"column_end":64},"kind":{"Impl":{"id":577}},"from":{"krate":0,"index":18822},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":817425,"byte_end":817433,"line_start":130,"line_end":130,"column_start":63,"column_end":71},"kind":{"Impl":{"id":578}},"from":{"krate":0,"index":18822},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":825896,"byte_end":825904,"line_start":357,"line_end":357,"column_start":39,"column_end":47},"kind":{"Impl":{"id":579}},"from":{"krate":0,"index":18822},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":827084,"byte_end":827092,"line_start":391,"line_end":391,"column_start":46,"column_end":54},"kind":{"Impl":{"id":580}},"from":{"krate":0,"index":18822},"to":{"krate":2,"index":1639}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":827240,"byte_end":827248,"line_start":398,"line_end":398,"column_start":53,"column_end":61},"kind":{"Impl":{"id":581}},"from":{"krate":0,"index":18822},"to":{"krate":2,"index":1634}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":827541,"byte_end":827549,"line_start":409,"line_end":409,"column_start":49,"column_end":57},"kind":{"Impl":{"id":582}},"from":{"krate":0,"index":18822},"to":{"krate":15,"index":12}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":828098,"byte_end":828106,"line_start":429,"line_end":429,"column_start":50,"column_end":58},"kind":{"Impl":{"id":583}},"from":{"krate":0,"index":18822},"to":{"krate":15,"index":56}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":828773,"byte_end":828781,"line_start":455,"line_end":455,"column_start":46,"column_end":54},"kind":{"Impl":{"id":584}},"from":{"krate":0,"index":18822},"to":{"krate":15,"index":92}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry.rs","byte_start":829364,"byte_end":829372,"line_start":479,"line_end":479,"column_start":67,"column_end":75},"kind":{"Impl":{"id":585}},"from":{"krate":0,"index":18822},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":831384,"byte_end":831392,"line_start":22,"line_end":22,"column_start":63,"column_end":71},"kind":{"Impl":{"id":586}},"from":{"krate":0,"index":18822},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":832943,"byte_end":832951,"line_start":70,"line_end":70,"column_start":71,"column_end":79},"kind":{"Impl":{"id":587}},"from":{"krate":0,"index":18822},"to":{"krate":16,"index":312}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":833221,"byte_end":833229,"line_start":82,"line_end":82,"column_start":71,"column_end":79},"kind":{"Impl":{"id":588}},"from":{"krate":20,"index":1980},"to":{"krate":20,"index":537}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":834039,"byte_end":834047,"line_start":116,"line_end":116,"column_start":24,"column_end":32},"kind":{"Impl":{"id":589}},"from":{"krate":0,"index":18822},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_construction.rs","byte_start":835140,"byte_end":835148,"line_start":154,"line_end":154,"column_start":24,"column_end":32},"kind":{"Impl":{"id":590}},"from":{"krate":0,"index":18822},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_conversion.rs","byte_start":846310,"byte_end":846318,"line_start":22,"line_end":22,"column_start":68,"column_end":76},"kind":{"Impl":{"id":591}},"from":{"krate":0,"index":18822},"to":{"krate":27,"index":174}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_conversion.rs","byte_start":847206,"byte_end":847214,"line_start":50,"line_end":50,"column_start":70,"column_end":78},"kind":{"Impl":{"id":592}},"from":{"krate":0,"index":18822},"to":{"krate":27,"index":174}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_conversion.rs","byte_start":847950,"byte_end":847958,"line_start":74,"line_end":74,"column_start":57,"column_end":65},"kind":{"Impl":{"id":593}},"from":{"krate":0,"index":18822},"to":{"krate":27,"index":174}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_conversion.rs","byte_start":849122,"byte_end":849130,"line_start":108,"line_end":108,"column_start":65,"column_end":73},"kind":{"Impl":{"id":594}},"from":{"krate":0,"index":18822},"to":{"krate":27,"index":174}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_conversion.rs","byte_start":850835,"byte_end":850842,"line_start":154,"line_end":154,"column_start":67,"column_end":74},"kind":{"Impl":{"id":595}},"from":{"krate":0,"index":1093},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_conversion.rs","byte_start":851241,"byte_end":851249,"line_start":167,"line_end":167,"column_start":9,"column_end":17},"kind":{"Impl":{"id":596}},"from":{"krate":0,"index":18822},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_conversion.rs","byte_start":851980,"byte_end":851988,"line_start":186,"line_end":186,"column_start":9,"column_end":17},"kind":{"Impl":{"id":597}},"from":{"krate":0,"index":18822},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_conversion.rs","byte_start":852943,"byte_end":852951,"line_start":215,"line_end":215,"column_start":9,"column_end":17},"kind":{"Impl":{"id":598}},"from":{"krate":0,"index":18822},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_conversion.rs","byte_start":854215,"byte_end":854223,"line_start":252,"line_end":252,"column_start":9,"column_end":17},"kind":{"Impl":{"id":599}},"from":{"krate":0,"index":18822},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/isometry_simba.rs","byte_start":875870,"byte_end":875878,"line_start":10,"line_end":10,"column_start":53,"column_end":61},"kind":{"Impl":{"id":660}},"from":{"krate":0,"index":18822},"to":{"krate":27,"index":451}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":879632,"byte_end":879642,"line_start":71,"line_end":71,"column_start":9,"column_end":19},"kind":{"Impl":{"id":661}},"from":{"krate":0,"index":19430},"to":{"krate":2,"index":6257}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":879955,"byte_end":879965,"line_start":83,"line_end":83,"column_start":9,"column_end":19},"kind":{"Impl":{"id":662}},"from":{"krate":0,"index":19430},"to":{"krate":2,"index":1914}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":880128,"byte_end":880138,"line_start":90,"line_end":90,"column_start":81,"column_end":91},"kind":{"Impl":{"id":663}},"from":{"krate":0,"index":19430},"to":{"krate":2,"index":1606}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":880365,"byte_end":880375,"line_start":100,"line_end":100,"column_start":39,"column_end":49},"kind":{"Impl":{"id":664}},"from":{"krate":0,"index":19430},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":881340,"byte_end":881350,"line_start":131,"line_end":131,"column_start":32,"column_end":42},"kind":{"Impl":{"id":665}},"from":{"krate":0,"index":19430},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":881600,"byte_end":881610,"line_start":142,"line_end":142,"column_start":39,"column_end":49},"kind":{"Impl":{"id":666}},"from":{"krate":0,"index":19430},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":888753,"byte_end":888763,"line_start":334,"line_end":334,"column_start":39,"column_end":49},"kind":{"Impl":{"id":667}},"from":{"krate":0,"index":19430},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":889388,"byte_end":889398,"line_start":356,"line_end":356,"column_start":46,"column_end":56},"kind":{"Impl":{"id":668}},"from":{"krate":0,"index":19430},"to":{"krate":2,"index":1639}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":889546,"byte_end":889556,"line_start":363,"line_end":363,"column_start":53,"column_end":63},"kind":{"Impl":{"id":669}},"from":{"krate":0,"index":19430},"to":{"krate":2,"index":1634}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":889841,"byte_end":889851,"line_start":374,"line_end":374,"column_start":49,"column_end":59},"kind":{"Impl":{"id":670}},"from":{"krate":0,"index":19430},"to":{"krate":15,"index":12}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":890392,"byte_end":890402,"line_start":394,"line_end":394,"column_start":50,"column_end":60},"kind":{"Impl":{"id":671}},"from":{"krate":0,"index":19430},"to":{"krate":15,"index":56}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":891061,"byte_end":891071,"line_start":420,"line_end":420,"column_start":46,"column_end":56},"kind":{"Impl":{"id":672}},"from":{"krate":0,"index":19430},"to":{"krate":15,"index":92}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity.rs","byte_start":891607,"byte_end":891617,"line_start":443,"line_end":443,"column_start":41,"column_end":51},"kind":{"Impl":{"id":673}},"from":{"krate":0,"index":19430},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_construction.rs","byte_start":893290,"byte_end":893300,"line_start":22,"line_end":22,"column_start":39,"column_end":49},"kind":{"Impl":{"id":674}},"from":{"krate":0,"index":19430},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_construction.rs","byte_start":894004,"byte_end":894014,"line_start":49,"line_end":49,"column_start":47,"column_end":57},"kind":{"Impl":{"id":675}},"from":{"krate":0,"index":19430},"to":{"krate":16,"index":312}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_construction.rs","byte_start":894319,"byte_end":894327,"line_start":62,"line_end":62,"column_start":73,"column_end":81},"kind":{"Impl":{"id":676}},"from":{"krate":20,"index":1980},"to":{"krate":20,"index":537}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_construction.rs","byte_start":894755,"byte_end":894765,"line_start":79,"line_end":79,"column_start":39,"column_end":49},"kind":{"Impl":{"id":677}},"from":{"krate":0,"index":19430},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_construction.rs","byte_start":896348,"byte_end":896358,"line_start":134,"line_end":134,"column_start":24,"column_end":34},"kind":{"Impl":{"id":678}},"from":{"krate":0,"index":19430},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_construction.rs","byte_start":897161,"byte_end":897171,"line_start":160,"line_end":160,"column_start":24,"column_end":34},"kind":{"Impl":{"id":679}},"from":{"krate":0,"index":19430},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_conversion.rs","byte_start":907075,"byte_end":907085,"line_start":23,"line_end":23,"column_start":70,"column_end":80},"kind":{"Impl":{"id":680}},"from":{"krate":0,"index":19430},"to":{"krate":27,"index":174}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_conversion.rs","byte_start":907986,"byte_end":907996,"line_start":51,"line_end":51,"column_start":57,"column_end":67},"kind":{"Impl":{"id":681}},"from":{"krate":0,"index":19430},"to":{"krate":27,"index":174}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_conversion.rs","byte_start":909150,"byte_end":909160,"line_start":85,"line_end":85,"column_start":65,"column_end":75},"kind":{"Impl":{"id":682}},"from":{"krate":0,"index":19430},"to":{"krate":27,"index":174}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_conversion.rs","byte_start":912587,"byte_end":912594,"line_start":174,"line_end":174,"column_start":69,"column_end":76},"kind":{"Impl":{"id":683}},"from":{"krate":0,"index":1093},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_conversion.rs","byte_start":913004,"byte_end":913014,"line_start":187,"line_end":187,"column_start":58,"column_end":68},"kind":{"Impl":{"id":684}},"from":{"krate":0,"index":19430},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_conversion.rs","byte_start":913754,"byte_end":913764,"line_start":206,"line_end":206,"column_start":58,"column_end":68},"kind":{"Impl":{"id":685}},"from":{"krate":0,"index":19430},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_conversion.rs","byte_start":914708,"byte_end":914718,"line_start":235,"line_end":235,"column_start":58,"column_end":68},"kind":{"Impl":{"id":686}},"from":{"krate":0,"index":19430},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_conversion.rs","byte_start":915931,"byte_end":915941,"line_start":272,"line_end":272,"column_start":59,"column_end":69},"kind":{"Impl":{"id":687}},"from":{"krate":0,"index":19430},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/similarity_simba.rs","byte_start":937837,"byte_end":937847,"line_start":9,"line_end":9,"column_start":53,"column_end":63},"kind":{"Impl":{"id":750}},"from":{"krate":0,"index":19430},"to":{"krate":27,"index":451}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":942483,"byte_end":942486,"line_start":21,"line_end":21,"column_start":22,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":2394},"to":{"krate":0,"index":6619}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":942489,"byte_end":942494,"line_start":21,"line_end":21,"column_start":28,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":6069},"to":{"krate":0,"index":6619}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":942497,"byte_end":942501,"line_start":21,"line_end":21,"column_start":36,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":1914},"to":{"krate":0,"index":6619}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":942504,"byte_end":942513,"line_start":21,"line_end":21,"column_start":43,"column_end":52},"kind":"SuperTrait","from":{"krate":2,"index":1634},"to":{"krate":0,"index":6619}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":942516,"byte_end":942520,"line_start":21,"line_end":21,"column_start":55,"column_end":59},"kind":"SuperTrait","from":{"krate":2,"index":1904},"to":{"krate":0,"index":6619}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":943210,"byte_end":943219,"line_start":39,"line_end":39,"column_start":43,"column_end":52},"kind":"SuperTrait","from":{"krate":0,"index":6619},"to":{"krate":0,"index":6624}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":943602,"byte_end":943611,"line_start":47,"line_end":47,"column_start":47,"column_end":56},"kind":"SuperTrait","from":{"krate":0,"index":6619},"to":{"krate":0,"index":6627}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":943803,"byte_end":943812,"line_start":52,"line_end":52,"column_start":45,"column_end":54},"kind":"SuperTrait","from":{"krate":0,"index":6619},"to":{"krate":0,"index":6629}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":943852,"byte_end":943854,"line_start":53,"line_end":53,"column_start":37,"column_end":39},"kind":{"Impl":{"id":751}},"from":{"krate":0,"index":6632},"to":{"krate":0,"index":6629}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":944397,"byte_end":944405,"line_start":72,"line_end":72,"column_start":20,"column_end":28},"kind":{"Impl":{"id":752}},"from":{"krate":0,"index":20097},"to":{"krate":0,"index":6619}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":944640,"byte_end":944651,"line_start":83,"line_end":83,"column_start":20,"column_end":31},"kind":{"Impl":{"id":753}},"from":{"krate":0,"index":20112},"to":{"krate":0,"index":6619}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":944903,"byte_end":944910,"line_start":94,"line_end":94,"column_start":20,"column_end":27},"kind":{"Impl":{"id":754}},"from":{"krate":0,"index":20127},"to":{"krate":0,"index":6619}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":945621,"byte_end":945622,"line_start":122,"line_end":122,"column_start":40,"column_end":41},"kind":{"Impl":{"id":755}},"from":{"krate":0,"index":6650},"to":{"krate":0,"index":6624}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":946239,"byte_end":946240,"line_start":146,"line_end":146,"column_start":44,"column_end":45},"kind":{"Impl":{"id":756}},"from":{"krate":0,"index":6654},"to":{"krate":0,"index":6627}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":947251,"byte_end":947260,"line_start":177,"line_end":177,"column_start":69,"column_end":78},"kind":{"Impl":{"id":757}},"from":{"krate":0,"index":20157},"to":{"krate":2,"index":1914}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":947475,"byte_end":947484,"line_start":184,"line_end":184,"column_start":63,"column_end":72},"kind":{"Impl":{"id":758}},"from":{"krate":0,"index":20157},"to":{"krate":2,"index":1606}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":948725,"byte_end":948734,"line_start":224,"line_end":224,"column_start":65,"column_end":74},"kind":{"Impl":{"id":759}},"from":{"krate":0,"index":20157},"to":{"krate":2,"index":1639}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":948894,"byte_end":948903,"line_start":229,"line_end":229,"column_start":67,"column_end":76},"kind":{"Impl":{"id":760}},"from":{"krate":0,"index":20157},"to":{"krate":2,"index":1634}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":949147,"byte_end":949156,"line_start":239,"line_end":239,"column_start":53,"column_end":62},"kind":{"Impl":{"id":761}},"from":{"krate":0,"index":20157},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":957382,"byte_end":957391,"line_start":473,"line_end":473,"column_start":31,"column_end":40},"kind":{"Impl":{"id":762}},"from":{"krate":0,"index":20157},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":958209,"byte_end":958218,"line_start":500,"line_end":500,"column_start":53,"column_end":62},"kind":{"Impl":{"id":763}},"from":{"krate":0,"index":20157},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":959098,"byte_end":959107,"line_start":525,"line_end":525,"column_start":39,"column_end":48},"kind":{"Impl":{"id":764}},"from":{"krate":0,"index":20157},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":959549,"byte_end":959558,"line_start":537,"line_end":537,"column_start":67,"column_end":76},"kind":{"Impl":{"id":765}},"from":{"krate":0,"index":20157},"to":{"krate":15,"index":12}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":960018,"byte_end":960027,"line_start":555,"line_end":555,"column_start":68,"column_end":77},"kind":{"Impl":{"id":766}},"from":{"krate":0,"index":20157},"to":{"krate":15,"index":56}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform.rs","byte_start":960556,"byte_end":960565,"line_start":577,"line_end":577,"column_start":64,"column_end":73},"kind":{"Impl":{"id":767}},"from":{"krate":0,"index":20157},"to":{"krate":15,"index":92}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform_construction.rs","byte_start":962408,"byte_end":962417,"line_start":11,"line_end":11,"column_start":53,"column_end":62},"kind":{"Impl":{"id":768}},"from":{"krate":0,"index":20157},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform_construction.rs","byte_start":963521,"byte_end":963530,"line_start":49,"line_end":49,"column_start":61,"column_end":70},"kind":{"Impl":{"id":769}},"from":{"krate":0,"index":20157},"to":{"krate":16,"index":312}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform_conversion.rs","byte_start":964063,"byte_end":964072,"line_start":9,"line_end":9,"column_start":69,"column_end":78},"kind":{"Impl":{"id":770}},"from":{"krate":0,"index":20157},"to":{"krate":27,"index":174}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform_conversion.rs","byte_start":964897,"byte_end":964906,"line_start":37,"line_end":37,"column_start":74,"column_end":83},"kind":{"Impl":{"id":771}},"from":{"krate":0,"index":20157},"to":{"krate":27,"index":174}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform_conversion.rs","byte_start":965683,"byte_end":965690,"line_start":64,"line_end":64,"column_start":64,"column_end":71},"kind":{"Impl":{"id":772}},"from":{"krate":0,"index":1093},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform_ops.rs","byte_start":967993,"byte_end":968002,"line_start":82,"line_end":82,"column_start":63,"column_end":72},"kind":{"Impl":{"id":773}},"from":{"krate":0,"index":20157},"to":{"krate":2,"index":2154}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform_ops.rs","byte_start":968358,"byte_end":968367,"line_start":96,"line_end":96,"column_start":52,"column_end":61},"kind":{"Impl":{"id":774}},"from":{"krate":0,"index":20157},"to":{"krate":2,"index":2158}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/transform_simba.rs","byte_start":989645,"byte_end":989654,"line_start":10,"line_end":10,"column_start":56,"column_end":65},"kind":{"Impl":{"id":835}},"from":{"krate":0,"index":20157},"to":{"krate":27,"index":451}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/reflection.rs","byte_start":991486,"byte_end":991496,"line_start":16,"line_end":16,"column_start":49,"column_end":59},"kind":{"Impl":{"id":836}},"from":{"krate":0,"index":6913},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":995840,"byte_end":995853,"line_start":24,"line_end":24,"column_start":29,"column_end":42},"kind":{"Impl":{"id":837}},"from":{"krate":0,"index":6962},"to":{"krate":2,"index":1914}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":995890,"byte_end":995903,"line_start":26,"line_end":26,"column_start":30,"column_end":43},"kind":{"Impl":{"id":838}},"from":{"krate":0,"index":6962},"to":{"krate":2,"index":1606}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":996053,"byte_end":996066,"line_start":33,"line_end":33,"column_start":35,"column_end":48},"kind":{"Impl":{"id":839}},"from":{"krate":0,"index":6962},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":996211,"byte_end":996224,"line_start":39,"line_end":39,"column_start":34,"column_end":47},"kind":{"Impl":{"id":840}},"from":{"krate":0,"index":6962},"to":{"krate":2,"index":1634}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":996963,"byte_end":996976,"line_start":68,"line_end":68,"column_start":20,"column_end":33},"kind":{"Impl":{"id":841}},"from":{"krate":0,"index":6962},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1021043,"byte_end":1021051,"line_start":687,"line_end":687,"column_start":55,"column_end":63},"kind":{"Impl":{"id":842}},"from":{"krate":20,"index":1980},"to":{"krate":20,"index":537}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/orthographic.rs","byte_start":1022104,"byte_end":1022111,"line_start":720,"line_end":720,"column_start":47,"column_end":54},"kind":{"Impl":{"id":843}},"from":{"krate":0,"index":1104},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1022853,"byte_end":1022865,"line_start":25,"line_end":25,"column_start":29,"column_end":41},"kind":{"Impl":{"id":844}},"from":{"krate":0,"index":7036},"to":{"krate":2,"index":1914}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1022902,"byte_end":1022914,"line_start":27,"line_end":27,"column_start":30,"column_end":42},"kind":{"Impl":{"id":845}},"from":{"krate":0,"index":7036},"to":{"krate":2,"index":1606}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1023064,"byte_end":1023076,"line_start":34,"line_end":34,"column_start":35,"column_end":47},"kind":{"Impl":{"id":846}},"from":{"krate":0,"index":7036},"to":{"krate":2,"index":6069}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1023221,"byte_end":1023233,"line_start":40,"line_end":40,"column_start":34,"column_end":46},"kind":{"Impl":{"id":847}},"from":{"krate":0,"index":7036},"to":{"krate":2,"index":1634}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1023970,"byte_end":1023982,"line_start":69,"line_end":69,"column_start":20,"column_end":32},"kind":{"Impl":{"id":848}},"from":{"krate":0,"index":7036},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1030633,"byte_end":1030641,"line_start":271,"line_end":271,"column_start":54,"column_end":62},"kind":{"Impl":{"id":849}},"from":{"krate":20,"index":1980},"to":{"krate":20,"index":537}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/geometry/perspective.rs","byte_start":1031434,"byte_end":1031441,"line_start":295,"line_end":295,"column_start":46,"column_end":53},"kind":{"Impl":{"id":850}},"from":{"krate":0,"index":1104},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/bidiagonal.rs","byte_start":1037223,"byte_end":1037233,"line_start":53,"line_end":53,"column_start":54,"column_end":64},"kind":{"Impl":{"id":851}},"from":{"krate":0,"index":20850},"to":{"krate":2,"index":1914}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/bidiagonal.rs","byte_start":1037591,"byte_end":1037601,"line_start":65,"line_end":65,"column_start":45,"column_end":55},"kind":{"Impl":{"id":852}},"from":{"krate":0,"index":20850},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/bidiagonal.rs","byte_start":1048144,"byte_end":1048150,"line_start":363,"line_end":363,"column_start":66,"column_end":72},"kind":{"Impl":{"id":853}},"from":{"krate":0,"index":17001},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/cholesky.rs","byte_start":1049673,"byte_end":1049681,"line_start":34,"line_end":34,"column_start":44,"column_end":52},"kind":{"Impl":{"id":854}},"from":{"krate":0,"index":20868},"to":{"krate":2,"index":1914}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/cholesky.rs","byte_start":1049800,"byte_end":1049808,"line_start":41,"line_end":41,"column_start":35,"column_end":43},"kind":{"Impl":{"id":855}},"from":{"krate":0,"index":20868},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/cholesky.rs","byte_start":1053446,"byte_end":1053454,"line_start":143,"line_end":143,"column_start":31,"column_end":39},"kind":{"Impl":{"id":856}},"from":{"krate":0,"index":20868},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/cholesky.rs","byte_start":1062577,"byte_end":1062589,"line_start":367,"line_end":367,"column_start":64,"column_end":76},"kind":{"Impl":{"id":857}},"from":{"krate":0,"index":2851},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/convolution.rs","byte_start":1063302,"byte_end":1063308,"line_start":9,"line_end":9,"column_start":49,"column_end":55},"kind":{"Impl":{"id":858}},"from":{"krate":0,"index":2855},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/determinant.rs","byte_start":1067442,"byte_end":1067454,"line_start":10,"line_end":10,"column_start":70,"column_end":82},"kind":{"Impl":{"id":859}},"from":{"krate":0,"index":2851},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/exp.rs","byte_start":1070443,"byte_end":1070457,"line_start":43,"line_end":43,"column_start":12,"column_end":26},"kind":{"Impl":{"id":860}},"from":{"krate":0,"index":7299},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/exp.rs","byte_start":1081513,"byte_end":1081520,"line_start":428,"line_end":428,"column_start":26,"column_end":33},"kind":{"Impl":{"id":861}},"from":{"krate":0,"index":1093},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/full_piv_lu.rs","byte_start":1085229,"byte_end":1085238,"line_start":40,"line_end":40,"column_start":54,"column_end":63},"kind":{"Impl":{"id":862}},"from":{"krate":0,"index":20880},"to":{"krate":2,"index":1914}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/full_piv_lu.rs","byte_start":1085469,"byte_end":1085478,"line_start":48,"line_end":48,"column_start":45,"column_end":54},"kind":{"Impl":{"id":863}},"from":{"krate":0,"index":20880},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/full_piv_lu.rs","byte_start":1088932,"byte_end":1088941,"line_start":163,"line_end":163,"column_start":49,"column_end":58},"kind":{"Impl":{"id":864}},"from":{"krate":0,"index":20880},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/full_piv_lu.rs","byte_start":1092194,"byte_end":1092200,"line_start":269,"line_end":269,"column_start":66,"column_end":72},"kind":{"Impl":{"id":865}},"from":{"krate":0,"index":17001},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/givens.rs","byte_start":1093032,"byte_end":1093046,"line_start":19,"line_end":19,"column_start":23,"column_end":37},"kind":{"Impl":{"id":866}},"from":{"krate":0,"index":20897},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/hessenberg.rs","byte_start":1099023,"byte_end":1099033,"line_start":37,"line_end":37,"column_start":47,"column_end":57},"kind":{"Impl":{"id":867}},"from":{"krate":0,"index":20909},"to":{"krate":2,"index":1914}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/hessenberg.rs","byte_start":1099224,"byte_end":1099234,"line_start":45,"line_end":45,"column_start":38,"column_end":48},"kind":{"Impl":{"id":868}},"from":{"krate":0,"index":20909},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/hessenberg.rs","byte_start":1102295,"byte_end":1102307,"line_start":135,"line_end":135,"column_start":59,"column_end":71},"kind":{"Impl":{"id":869}},"from":{"krate":0,"index":2851},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/inverse.rs","byte_start":1107531,"byte_end":1107543,"line_start":10,"line_end":10,"column_start":52,"column_end":64},"kind":{"Impl":{"id":870}},"from":{"krate":0,"index":2851},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/inverse.rs","byte_start":1107986,"byte_end":1107998,"line_start":27,"line_end":27,"column_start":55,"column_end":67},"kind":{"Impl":{"id":871}},"from":{"krate":0,"index":2851},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/lu.rs","byte_start":1116714,"byte_end":1116716,"line_start":39,"line_end":39,"column_start":54,"column_end":56},"kind":{"Impl":{"id":872}},"from":{"krate":0,"index":20922},"to":{"krate":2,"index":1914}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/lu.rs","byte_start":1118055,"byte_end":1118057,"line_start":87,"line_end":87,"column_start":45,"column_end":47},"kind":{"Impl":{"id":873}},"from":{"krate":0,"index":20922},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/lu.rs","byte_start":1121833,"byte_end":1121835,"line_start":209,"line_end":209,"column_start":49,"column_end":51},"kind":{"Impl":{"id":874}},"from":{"krate":0,"index":20922},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/lu.rs","byte_start":1127198,"byte_end":1127204,"line_start":383,"line_end":383,"column_start":66,"column_end":72},"kind":{"Impl":{"id":875}},"from":{"krate":0,"index":17001},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/permutation_sequence.rs","byte_start":1128521,"byte_end":1128540,"line_start":35,"line_end":35,"column_start":23,"column_end":42},"kind":{"Impl":{"id":876}},"from":{"krate":0,"index":20938},"to":{"krate":2,"index":1914}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/permutation_sequence.rs","byte_start":1128662,"byte_end":1128681,"line_start":42,"line_end":42,"column_start":18,"column_end":37},"kind":{"Impl":{"id":877}},"from":{"krate":0,"index":20938},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/permutation_sequence.rs","byte_start":1128977,"byte_end":1128996,"line_start":54,"line_end":54,"column_start":6,"column_end":25},"kind":{"Impl":{"id":878}},"from":{"krate":0,"index":20938},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/permutation_sequence.rs","byte_start":1129279,"byte_end":1129298,"line_start":65,"line_end":65,"column_start":14,"column_end":33},"kind":{"Impl":{"id":879}},"from":{"krate":0,"index":20938},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/qr.rs","byte_start":1133386,"byte_end":1133388,"line_start":40,"line_end":40,"column_start":54,"column_end":56},"kind":{"Impl":{"id":880}},"from":{"krate":0,"index":20948},"to":{"krate":2,"index":1914}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/qr.rs","byte_start":1133597,"byte_end":1133599,"line_start":48,"line_end":48,"column_start":45,"column_end":47},"kind":{"Impl":{"id":881}},"from":{"krate":0,"index":20948},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/qr.rs","byte_start":1137616,"byte_end":1137618,"line_start":165,"line_end":165,"column_start":49,"column_end":51},"kind":{"Impl":{"id":882}},"from":{"krate":0,"index":20948},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/qr.rs","byte_start":1141477,"byte_end":1141483,"line_start":298,"line_end":298,"column_start":66,"column_end":72},"kind":{"Impl":{"id":883}},"from":{"krate":0,"index":17001},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/schur.rs","byte_start":1143017,"byte_end":1143022,"line_start":42,"line_end":42,"column_start":40,"column_end":45},"kind":{"Impl":{"id":884}},"from":{"krate":0,"index":20964},"to":{"krate":2,"index":1914}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/schur.rs","byte_start":1143137,"byte_end":1143142,"line_start":49,"line_end":49,"column_start":31,"column_end":36},"kind":{"Impl":{"id":885}},"from":{"krate":0,"index":20964},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/schur.rs","byte_start":1157787,"byte_end":1157799,"line_start":493,"line_end":493,"column_start":52,"column_end":64},"kind":{"Impl":{"id":886}},"from":{"krate":0,"index":2851},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1161175,"byte_end":1161187,"line_start":10,"line_end":10,"column_start":52,"column_end":64},"kind":{"Impl":{"id":887}},"from":{"krate":0,"index":2851},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/solve.rs","byte_start":1173851,"byte_end":1173863,"line_start":443,"line_end":443,"column_start":56,"column_end":68},"kind":{"Impl":{"id":888}},"from":{"krate":0,"index":2851},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/svd.rs","byte_start":1187367,"byte_end":1187370,"line_start":57,"line_end":57,"column_start":54,"column_end":57},"kind":{"Impl":{"id":889}},"from":{"krate":0,"index":20977},"to":{"krate":2,"index":1914}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/svd.rs","byte_start":1187727,"byte_end":1187730,"line_start":68,"line_end":68,"column_start":45,"column_end":48},"kind":{"Impl":{"id":890}},"from":{"krate":0,"index":20977},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/svd.rs","byte_start":1206968,"byte_end":1206974,"line_start":606,"line_end":606,"column_start":66,"column_end":72},"kind":{"Impl":{"id":891}},"from":{"krate":0,"index":17001},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_eigen.rs","byte_start":1212395,"byte_end":1212409,"line_start":44,"line_end":44,"column_start":40,"column_end":54},"kind":{"Impl":{"id":892}},"from":{"krate":0,"index":20994},"to":{"krate":2,"index":1914}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_eigen.rs","byte_start":1212589,"byte_end":1212603,"line_start":52,"line_end":52,"column_start":31,"column_end":45},"kind":{"Impl":{"id":893}},"from":{"krate":0,"index":20994},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_eigen.rs","byte_start":1220646,"byte_end":1220658,"line_start":304,"line_end":304,"column_start":59,"column_end":71},"kind":{"Impl":{"id":894}},"from":{"krate":0,"index":2851},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1225662,"byte_end":1225682,"line_start":37,"line_end":37,"column_start":47,"column_end":67},"kind":{"Impl":{"id":895}},"from":{"krate":0,"index":21007},"to":{"krate":2,"index":1914}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1225873,"byte_end":1225893,"line_start":45,"line_end":45,"column_start":38,"column_end":58},"kind":{"Impl":{"id":896}},"from":{"krate":0,"index":21007},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.22.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1229714,"byte_end":1229726,"line_start":166,"line_end":166,"column_start":59,"column_end":71},"kind":{"Impl":{"id":897}},"from":{"krate":0,"index":2851},"to":{"krate":4294967295,"index":4294967295}}]}