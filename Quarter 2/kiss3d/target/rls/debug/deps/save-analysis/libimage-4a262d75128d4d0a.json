{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5","program":"/home/farjad-ali/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","image","/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"bmp\"","--cfg","feature=\"default\"","--cfg","feature=\"dxt\"","--cfg","feature=\"gif\"","--cfg","feature=\"gif_codec\"","--cfg","feature=\"hdr\"","--cfg","feature=\"ico\"","--cfg","feature=\"jpeg\"","--cfg","feature=\"jpeg-decoder\"","--cfg","feature=\"jpeg_rayon\"","--cfg","feature=\"png\"","--cfg","feature=\"png_codec\"","--cfg","feature=\"pnm\"","--cfg","feature=\"scoped_threadpool\"","--cfg","feature=\"tga\"","--cfg","feature=\"tiff\"","--cfg","feature=\"webp\"","-C","metadata=4a262d75128d4d0a","-C","extra-filename=-4a262d75128d4d0a","--out-dir","/home/farjad-ali/Rust/Quarter 2/kiss3d/target/rls/debug/deps","-L","dependency=/home/farjad-ali/Rust/Quarter 2/kiss3d/target/rls/debug/deps","--extern","byteorder=/home/farjad-ali/Rust/Quarter 2/kiss3d/target/rls/debug/deps/libbyteorder-0485ce0b571f4b70.rmeta","--extern","gif=/home/farjad-ali/Rust/Quarter 2/kiss3d/target/rls/debug/deps/libgif-ae48d10f82cab606.rmeta","--extern","jpeg_decoder=/home/farjad-ali/Rust/Quarter 2/kiss3d/target/rls/debug/deps/libjpeg_decoder-1300b6b03741dd4a.rmeta","--extern","num_iter=/home/farjad-ali/Rust/Quarter 2/kiss3d/target/rls/debug/deps/libnum_iter-b3d1dfbe9849f81c.rmeta","--extern","num_rational=/home/farjad-ali/Rust/Quarter 2/kiss3d/target/rls/debug/deps/libnum_rational-aea006694ebbebc1.rmeta","--extern","num_traits=/home/farjad-ali/Rust/Quarter 2/kiss3d/target/rls/debug/deps/libnum_traits-cdf93f73925a1d07.rmeta","--extern","png=/home/farjad-ali/Rust/Quarter 2/kiss3d/target/rls/debug/deps/libpng-74282645a142428f.rmeta","--extern","scoped_threadpool=/home/farjad-ali/Rust/Quarter 2/kiss3d/target/rls/debug/deps/libscoped_threadpool-3d38fd2cbc11bbc7.rmeta","--extern","tiff=/home/farjad-ali/Rust/Quarter 2/kiss3d/target/rls/debug/deps/libtiff-d536e6149a0e1071.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/farjad-ali/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/farjad-ali/Rust/Quarter 2/kiss3d/target/rls/debug/deps/libimage-4a262d75128d4d0a.rmeta"},"prelude":{"crate_id":{"name":"image","disambiguator":[11117512863056855993,3805937497128143636]},"crate_root":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src","external_crates":[{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9564622754343001814,6395353584576912375]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","num":2,"id":{"name":"core","disambiguator":[16347567532895737325,10433174518283571136]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[6035154360143295752,3120051156278071757]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[17970804288108720841,8277620835330235672]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[16732030649177302276,7623982932271952002]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[2049976911787826744,13979720418681232837]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[17847122289935873599,14578858192368606437]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12400616498443773685,4537628398871354645]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[1484644931138181661,6065563251080435870]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[10540921678309121045,13783658537477923762]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[14352423081837475994,16315607114161141584]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[15159368332461590608,12067571535011159917]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[565700744459104052,3788273681611333969]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[2676206115383283879,17948995864942817625]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","num":15,"id":{"name":"byteorder","disambiguator":[14233309357812451244,6159581382200595198]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","num":16,"id":{"name":"num_iter","disambiguator":[14070583704628962570,13329324152321978424]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","num":17,"id":{"name":"num_integer","disambiguator":[4183640638276385209,3904821750051454826]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","num":18,"id":{"name":"num_traits","disambiguator":[18280951367680062438,17399211580599509837]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","num":19,"id":{"name":"num_rational","disambiguator":[9906114152297790726,17878255054636837789]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","num":20,"id":{"name":"scoped_threadpool","disambiguator":[2312971273728799312,190095937482122113]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/gif.rs","num":21,"id":{"name":"gif","disambiguator":[921723600220002734,17194893105226897219]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/gif.rs","num":22,"id":{"name":"lzw","disambiguator":[5870818461072533565,15426258399299961276]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/gif.rs","num":23,"id":{"name":"color_quant","disambiguator":[12717724859240057581,15972324178044936804]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/jpeg/decoder.rs","num":24,"id":{"name":"jpeg_decoder","disambiguator":[1048129808093252343,15283399659695759129]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/jpeg/decoder.rs","num":25,"id":{"name":"rayon","disambiguator":[14944430734739452816,9002225635388272867]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/jpeg/decoder.rs","num":26,"id":{"name":"either","disambiguator":[3293158466839697686,17442545206823606693]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/jpeg/decoder.rs","num":27,"id":{"name":"rayon_core","disambiguator":[12647605884833072027,11555364499650902291]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/jpeg/decoder.rs","num":28,"id":{"name":"crossbeam_channel","disambiguator":[12544889609787669041,15260570923091619462]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/jpeg/decoder.rs","num":29,"id":{"name":"crossbeam_utils","disambiguator":[17613679526267482710,13308281684721379007]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/png.rs","num":30,"id":{"name":"cfg_if","disambiguator":[6956900293673062683,13192834746660551626]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/jpeg/decoder.rs","num":31,"id":{"name":"lazy_static","disambiguator":[5010937200074350365,1885860319682956590]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/jpeg/decoder.rs","num":32,"id":{"name":"maybe_uninit","disambiguator":[14829695215535208989,11223610880223181613]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/jpeg/decoder.rs","num":33,"id":{"name":"crossbeam_deque","disambiguator":[11587758634950669249,10456857239171291070]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/jpeg/decoder.rs","num":34,"id":{"name":"crossbeam_epoch","disambiguator":[6839204076830735390,2473123124785177344]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/jpeg/decoder.rs","num":35,"id":{"name":"memoffset","disambiguator":[15287008645445649420,9779457519998465386]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/jpeg/decoder.rs","num":36,"id":{"name":"scopeguard","disambiguator":[2326278444631788119,15819079782205998912]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/jpeg/decoder.rs","num":37,"id":{"name":"num_cpus","disambiguator":[17543746934192367688,62218790286373778]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/jpeg/decoder.rs","num":38,"id":{"name":"libc","disambiguator":[657624222426815521,10684527131133059072]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/png.rs","num":39,"id":{"name":"png","disambiguator":[15996574795802755907,18071114335491091805]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/png.rs","num":40,"id":{"name":"bitflags","disambiguator":[13008310792646294399,18111922045990790205]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/png.rs","num":41,"id":{"name":"crc32fast","disambiguator":[11439384113465601399,12983801716320356800]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/png.rs","num":42,"id":{"name":"inflate","disambiguator":[2000250356194867013,12273722239797561063]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/png.rs","num":43,"id":{"name":"adler32","disambiguator":[16685078034762983474,9685380881173070107]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/png.rs","num":44,"id":{"name":"deflate","disambiguator":[13498748103391228101,10318613136373622900]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/tiff.rs","num":45,"id":{"name":"tiff","disambiguator":[15063206887583259900,11208485310998537183]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/tiff.rs","num":46,"id":{"name":"num_derive","disambiguator":[11673517451702865425,12627787193986973222]}}],"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":0,"byte_end":3470,"line_start":1,"line_end":143,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":3824},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":730,"byte_end":734,"line_start":29,"line_end":29,"column_start":28,"column_end":32},"alias_span":null,"name":"self","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3825},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":736,"byte_end":740,"line_start":29,"line_end":29,"column_start":34,"column_end":38},"alias_span":null,"name":"Gray","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3834},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":742,"byte_end":747,"line_start":29,"line_end":29,"column_start":40,"column_end":45},"alias_span":null,"name":"GrayA","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3831},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":749,"byte_end":756,"line_start":29,"line_end":29,"column_start":47,"column_end":54},"alias_span":null,"name":"Palette","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3828},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":758,"byte_end":761,"line_start":29,"line_end":29,"column_start":56,"column_end":59},"alias_span":null,"name":"RGB","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3837},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":763,"byte_end":767,"line_start":29,"line_end":29,"column_start":61,"column_end":65},"alias_span":null,"name":"RGBA","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3840},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":769,"byte_end":772,"line_start":29,"line_end":29,"column_start":67,"column_end":70},"alias_span":null,"name":"BGR","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3843},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":774,"byte_end":778,"line_start":29,"line_end":29,"column_start":72,"column_end":76},"alias_span":null,"name":"BGRA","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4189},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":798,"byte_end":802,"line_start":31,"line_end":31,"column_start":17,"column_end":21},"alias_span":null,"name":"Luma","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4276},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":804,"byte_end":809,"line_start":31,"line_end":31,"column_start":23,"column_end":28},"alias_span":null,"name":"LumaA","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4131},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":811,"byte_end":814,"line_start":31,"line_end":31,"column_start":30,"column_end":33},"alias_span":null,"name":"Rgb","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4218},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":816,"byte_end":820,"line_start":31,"line_end":31,"column_start":35,"column_end":39},"alias_span":null,"name":"Rgba","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4160},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":822,"byte_end":825,"line_start":31,"line_end":31,"column_start":41,"column_end":44},"alias_span":null,"name":"Bgr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4247},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":827,"byte_end":831,"line_start":31,"line_end":31,"column_start":46,"column_end":50},"alias_span":null,"name":"Bgra","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3018},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":851,"byte_end":867,"line_start":33,"line_end":33,"column_start":17,"column_end":33},"alias_span":null,"name":"AnimationDecoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3047},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":885,"byte_end":897,"line_start":34,"line_end":34,"column_start":17,"column_end":29},"alias_span":null,"name":"GenericImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3034},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":915,"byte_end":931,"line_start":35,"line_end":35,"column_start":17,"column_end":33},"alias_span":null,"name":"GenericImageView","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2999},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":949,"byte_end":961,"line_start":36,"line_end":36,"column_start":17,"column_end":29},"alias_span":null,"name":"ImageDecoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3012},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":979,"byte_end":994,"line_start":37,"line_end":37,"column_start":17,"column_end":32},"alias_span":null,"name":"ImageDecoderExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4326},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":1012,"byte_end":1022,"line_start":38,"line_end":38,"column_start":17,"column_end":27},"alias_span":null,"name":"ImageError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2975},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":1040,"byte_end":1051,"line_start":39,"line_end":39,"column_start":17,"column_end":28},"alias_span":null,"name":"ImageResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3021},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":1098,"byte_end":1104,"line_start":41,"line_end":41,"column_start":17,"column_end":23},"alias_span":null,"name":"Pixels","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3059},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":1122,"byte_end":1130,"line_start":42,"line_end":42,"column_start":17,"column_end":25},"alias_span":null,"name":"SubImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3170},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":1165,"byte_end":1169,"line_start":44,"line_end":44,"column_start":32,"column_end":36},"alias_span":null,"name":"self","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3175},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":1171,"byte_end":1181,"line_start":44,"line_end":44,"column_start":38,"column_end":48},"alias_span":null,"name":"CatmullRom","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3177},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":1183,"byte_end":1191,"line_start":44,"line_end":44,"column_start":50,"column_end":58},"alias_span":null,"name":"Gaussian","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3179},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":1193,"byte_end":1201,"line_start":44,"line_end":44,"column_start":60,"column_end":68},"alias_span":null,"name":"Lanczos3","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3171},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":1203,"byte_end":1210,"line_start":44,"line_end":44,"column_start":70,"column_end":77},"alias_span":null,"name":"Nearest","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3173},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":1212,"byte_end":1220,"line_start":44,"line_end":44,"column_start":79,"column_end":87},"alias_span":null,"name":"Triangle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4349},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":1253,"byte_end":1257,"line_start":46,"line_end":46,"column_start":30,"column_end":34},"alias_span":null,"name":"self","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4364},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":1259,"byte_end":1262,"line_start":46,"line_end":46,"column_start":36,"column_end":39},"alias_span":null,"name":"BMP","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4354},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":1264,"byte_end":1267,"line_start":46,"line_end":46,"column_start":41,"column_end":44},"alias_span":null,"name":"GIF","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4366},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":1269,"byte_end":1272,"line_start":46,"line_end":46,"column_start":46,"column_end":49},"alias_span":null,"name":"ICO","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4352},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":1274,"byte_end":1278,"line_start":46,"line_end":46,"column_start":51,"column_end":55},"alias_span":null,"name":"JPEG","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4350},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":1280,"byte_end":1283,"line_start":46,"line_end":46,"column_start":57,"column_end":60},"alias_span":null,"name":"PNG","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4358},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":1285,"byte_end":1288,"line_start":46,"line_end":46,"column_start":62,"column_end":65},"alias_span":null,"name":"PNM","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4356},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":1290,"byte_end":1294,"line_start":46,"line_end":46,"column_start":67,"column_end":71},"alias_span":null,"name":"WEBP","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4381},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":1313,"byte_end":1330,"line_start":48,"line_end":48,"column_start":16,"column_end":33},"alias_span":null,"name":"ImageOutputFormat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2654},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":1350,"byte_end":1363,"line_start":50,"line_end":50,"column_start":18,"column_end":31},"alias_span":null,"name":"ConvertBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2670},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":1382,"byte_end":1396,"line_start":51,"line_end":51,"column_start":18,"column_end":32},"alias_span":null,"name":"GrayAlphaImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2669},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":1415,"byte_end":1424,"line_start":52,"line_end":52,"column_start":18,"column_end":27},"alias_span":null,"name":"GrayImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3813},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":1475,"byte_end":1486,"line_start":54,"line_end":54,"column_start":18,"column_end":29},"alias_span":null,"name":"ImageBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2376},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":1505,"byte_end":1510,"line_start":55,"line_end":55,"column_start":18,"column_end":23},"alias_span":null,"name":"Pixel","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2667},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":1529,"byte_end":1537,"line_start":56,"line_end":56,"column_start":18,"column_end":26},"alias_span":null,"name":"RgbImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2668},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":1556,"byte_end":1565,"line_start":57,"line_end":57,"column_start":18,"column_end":27},"alias_span":null,"name":"RgbaImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3186},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":1584,"byte_end":1595,"line_start":59,"line_end":59,"column_start":16,"column_end":27},"alias_span":null,"name":"FlatSamples","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3098},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":1625,"byte_end":1634,"line_start":62,"line_end":62,"column_start":17,"column_end":26},"alias_span":null,"name":"Primitive","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":464},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":1696,"byte_end":1708,"line_start":65,"line_end":65,"column_start":30,"column_end":42},"alias_span":null,"name":"guess_format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":447},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":1710,"byte_end":1714,"line_start":65,"line_end":65,"column_start":44,"column_end":48},"alias_span":null,"name":"load","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2949},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":1736,"byte_end":1752,"line_start":66,"line_end":66,"column_start":20,"column_end":36},"alias_span":null,"name":"load_from_memory","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2950},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":1754,"byte_end":1782,"line_start":66,"line_end":66,"column_start":38,"column_end":66},"alias_span":null,"name":"load_from_memory_with_format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2941},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":1784,"byte_end":1788,"line_start":66,"line_end":66,"column_start":68,"column_end":72},"alias_span":null,"name":"open","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2945},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":1809,"byte_end":1820,"line_start":67,"line_end":67,"column_start":20,"column_end":31},"alias_span":null,"name":"save_buffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2947},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":1822,"byte_end":1845,"line_start":67,"line_end":67,"column_start":33,"column_end":56},"alias_span":null,"name":"save_buffer_with_format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2943},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":1847,"byte_end":1863,"line_start":67,"line_end":67,"column_start":58,"column_end":74},"alias_span":null,"name":"image_dimensions","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4305},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":1900,"byte_end":1904,"line_start":69,"line_end":69,"column_start":34,"column_end":38},"alias_span":null,"name":"self","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4306},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":1906,"byte_end":1916,"line_start":69,"line_end":69,"column_start":40,"column_end":50},"alias_span":null,"name":"ImageLuma8","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4309},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":1918,"byte_end":1929,"line_start":69,"line_end":69,"column_start":52,"column_end":63},"alias_span":null,"name":"ImageLumaA8","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4312},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":1931,"byte_end":1940,"line_start":69,"line_end":69,"column_start":65,"column_end":74},"alias_span":null,"name":"ImageRgb8","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4315},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":1942,"byte_end":1952,"line_start":69,"line_end":69,"column_start":76,"column_end":86},"alias_span":null,"name":"ImageRgba8","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4318},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":1954,"byte_end":1963,"line_start":69,"line_end":69,"column_start":88,"column_end":97},"alias_span":null,"name":"ImageBgr8","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4321},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":1965,"byte_end":1975,"line_start":69,"line_end":69,"column_start":99,"column_end":109},"alias_span":null,"name":"ImageBgra8","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3806},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":1999,"byte_end":2004,"line_start":71,"line_end":71,"column_start":21,"column_end":26},"alias_span":null,"name":"Frame","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2321},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":2006,"byte_end":2012,"line_start":71,"line_end":71,"column_start":28,"column_end":34},"alias_span":null,"name":"Frames","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3145},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/math/mod.rs","byte_start":3575,"byte_end":3579,"line_start":6,"line_end":6,"column_start":21,"column_end":25},"alias_span":null,"name":"Rect","value":"","parent":{"krate":0,"index":84}},{"kind":"Use","ref_id":{"krate":0,"index":3170},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":18868,"byte_end":18878,"line_start":8,"line_end":8,"column_start":23,"column_end":33},"alias_span":null,"name":"FilterType","value":"","parent":{"krate":0,"index":128}},{"kind":"Use","ref_id":{"krate":0,"index":3175},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":18916,"byte_end":18926,"line_start":10,"line_end":10,"column_start":36,"column_end":46},"alias_span":null,"name":"CatmullRom","value":"","parent":{"krate":0,"index":128}},{"kind":"Use","ref_id":{"krate":0,"index":3177},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":18928,"byte_end":18936,"line_start":10,"line_end":10,"column_start":48,"column_end":56},"alias_span":null,"name":"Gaussian","value":"","parent":{"krate":0,"index":128}},{"kind":"Use","ref_id":{"krate":0,"index":3179},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":18938,"byte_end":18946,"line_start":10,"line_end":10,"column_start":58,"column_end":66},"alias_span":null,"name":"Lanczos3","value":"","parent":{"krate":0,"index":128}},{"kind":"Use","ref_id":{"krate":0,"index":3171},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":18948,"byte_end":18955,"line_start":10,"line_end":10,"column_start":68,"column_end":75},"alias_span":null,"name":"Nearest","value":"","parent":{"krate":0,"index":128}},{"kind":"Use","ref_id":{"krate":0,"index":3173},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":18957,"byte_end":18965,"line_start":10,"line_end":10,"column_start":77,"column_end":85},"alias_span":null,"name":"Triangle","value":"","parent":{"krate":0,"index":128}},{"kind":"Use","ref_id":{"krate":0,"index":194},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":19024,"byte_end":19039,"line_start":14,"line_end":14,"column_start":5,"column_end":20},"alias_span":null,"name":"flip_horizontal","value":"","parent":{"krate":0,"index":128}},{"kind":"Use","ref_id":{"krate":0,"index":206},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":19041,"byte_end":19065,"line_start":14,"line_end":14,"column_start":22,"column_end":46},"alias_span":null,"name":"flip_horizontal_in_place","value":"","parent":{"krate":0,"index":128}},{"kind":"Use","ref_id":{"krate":0,"index":196},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":19067,"byte_end":19080,"line_start":14,"line_end":14,"column_start":48,"column_end":61},"alias_span":null,"name":"flip_vertical","value":"","parent":{"krate":0,"index":128}},{"kind":"Use","ref_id":{"krate":0,"index":208},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":19082,"byte_end":19104,"line_start":14,"line_end":14,"column_start":63,"column_end":85},"alias_span":null,"name":"flip_vertical_in_place","value":"","parent":{"krate":0,"index":128}},{"kind":"Use","ref_id":{"krate":0,"index":181},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":19106,"byte_end":19115,"line_start":14,"line_end":14,"column_start":87,"column_end":96},"alias_span":null,"name":"rotate180","value":"","parent":{"krate":0,"index":128}},{"kind":"Use","ref_id":{"krate":0,"index":204},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":19121,"byte_end":19139,"line_start":15,"line_end":15,"column_start":5,"column_end":23},"alias_span":null,"name":"rotate180_in_place","value":"","parent":{"krate":0,"index":128}},{"kind":"Use","ref_id":{"krate":0,"index":183},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":19141,"byte_end":19150,"line_start":15,"line_end":15,"column_start":25,"column_end":34},"alias_span":null,"name":"rotate270","value":"","parent":{"krate":0,"index":128}},{"kind":"Use","ref_id":{"krate":0,"index":179},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":19152,"byte_end":19160,"line_start":15,"line_end":15,"column_start":36,"column_end":44},"alias_span":null,"name":"rotate90","value":"","parent":{"krate":0,"index":128}},{"kind":"Use","ref_id":{"krate":0,"index":188},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":19162,"byte_end":19174,"line_start":15,"line_end":15,"column_start":46,"column_end":58},"alias_span":null,"name":"rotate180_in","value":"","parent":{"krate":0,"index":128}},{"kind":"Use","ref_id":{"krate":0,"index":185},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":19176,"byte_end":19187,"line_start":15,"line_end":15,"column_start":60,"column_end":71},"alias_span":null,"name":"rotate90_in","value":"","parent":{"krate":0,"index":128}},{"kind":"Use","ref_id":{"krate":0,"index":191},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":19189,"byte_end":19201,"line_start":15,"line_end":15,"column_start":73,"column_end":85},"alias_span":null,"name":"rotate270_in","value":"","parent":{"krate":0,"index":128}},{"kind":"Use","ref_id":{"krate":0,"index":198},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":19203,"byte_end":19221,"line_start":15,"line_end":15,"column_start":87,"column_end":105},"alias_span":null,"name":"flip_horizontal_in","value":"","parent":{"krate":0,"index":128}},{"kind":"Use","ref_id":{"krate":0,"index":201},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":19223,"byte_end":19239,"line_start":15,"line_end":15,"column_start":107,"column_end":123},"alias_span":null,"name":"flip_vertical_in","value":"","parent":{"krate":0,"index":128}},{"kind":"Use","ref_id":{"krate":0,"index":351},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":19286,"byte_end":19290,"line_start":19,"line_end":19,"column_start":24,"column_end":28},"alias_span":null,"name":"blur","value":"","parent":{"krate":0,"index":128}},{"kind":"Use","ref_id":{"krate":0,"index":344},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":19292,"byte_end":19301,"line_start":19,"line_end":19,"column_start":30,"column_end":39},"alias_span":null,"name":"filter3x3","value":"","parent":{"krate":0,"index":128}},{"kind":"Use","ref_id":{"krate":0,"index":349},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":19303,"byte_end":19309,"line_start":19,"line_end":19,"column_start":41,"column_end":47},"alias_span":null,"name":"resize","value":"","parent":{"krate":0,"index":128}},{"kind":"Use","ref_id":{"krate":0,"index":321},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":19311,"byte_end":19320,"line_start":19,"line_end":19,"column_start":49,"column_end":58},"alias_span":null,"name":"thumbnail","value":"","parent":{"krate":0,"index":128}},{"kind":"Use","ref_id":{"krate":0,"index":354},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":19322,"byte_end":19331,"line_start":19,"line_end":19,"column_start":60,"column_end":69},"alias_span":null,"name":"unsharpen","value":"","parent":{"krate":0,"index":128}},{"kind":"Use","ref_id":{"krate":0,"index":238},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":19381,"byte_end":19389,"line_start":22,"line_end":22,"column_start":26,"column_end":34},"alias_span":null,"name":"brighten","value":"","parent":{"krate":0,"index":128}},{"kind":"Use","ref_id":{"krate":0,"index":233},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":19391,"byte_end":19399,"line_start":22,"line_end":22,"column_start":36,"column_end":44},"alias_span":null,"name":"contrast","value":"","parent":{"krate":0,"index":128}},{"kind":"Use","ref_id":{"krate":0,"index":265},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":19401,"byte_end":19407,"line_start":22,"line_end":22,"column_start":46,"column_end":52},"alias_span":null,"name":"dither","value":"","parent":{"krate":0,"index":128}},{"kind":"Use","ref_id":{"krate":0,"index":229},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":19409,"byte_end":19418,"line_start":22,"line_end":22,"column_start":54,"column_end":63},"alias_span":null,"name":"grayscale","value":"","parent":{"krate":0,"index":128}},{"kind":"Use","ref_id":{"krate":0,"index":244},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":19420,"byte_end":19429,"line_start":22,"line_end":22,"column_start":65,"column_end":74},"alias_span":null,"name":"huerotate","value":"","parent":{"krate":0,"index":128}},{"kind":"Use","ref_id":{"krate":0,"index":270},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":19431,"byte_end":19443,"line_start":22,"line_end":22,"column_start":76,"column_end":88},"alias_span":null,"name":"index_colors","value":"","parent":{"krate":0,"index":128}},{"kind":"Use","ref_id":{"krate":0,"index":231},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":19445,"byte_end":19451,"line_start":22,"line_end":22,"column_start":90,"column_end":96},"alias_span":null,"name":"invert","value":"","parent":{"krate":0,"index":128}},{"kind":"Use","ref_id":{"krate":0,"index":3165},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":19478,"byte_end":19485,"line_start":23,"line_end":23,"column_start":26,"column_end":33},"alias_span":null,"name":"BiLevel","value":"","parent":{"krate":0,"index":128}},{"kind":"Use","ref_id":{"krate":0,"index":249},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":19487,"byte_end":19495,"line_start":23,"line_end":23,"column_start":35,"column_end":43},"alias_span":null,"name":"ColorMap","value":"","parent":{"krate":0,"index":128}},{"kind":"Use","ref_id":{"krate":0,"index":386},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/mod.rs","byte_start":75696,"byte_end":75702,"line_start":5,"line_end":5,"column_start":23,"column_end":29},"alias_span":null,"name":"Reader","value":"","parent":{"krate":0,"index":368}},{"kind":"Use","ref_id":{"krate":0,"index":719},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/bmp/mod.rs","byte_start":154158,"byte_end":154168,"line_start":10,"line_end":10,"column_start":24,"column_end":34},"alias_span":null,"name":"BMPDecoder","value":"","parent":{"krate":0,"index":626}},{"kind":"Use","ref_id":{"krate":0,"index":830},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/bmp/mod.rs","byte_start":154193,"byte_end":154203,"line_start":11,"line_end":11,"column_start":24,"column_end":34},"alias_span":null,"name":"BMPEncoder","value":"","parent":{"krate":0,"index":626}},{"kind":"Use","ref_id":{"krate":21,"index":283},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/gif.rs","byte_start":244015,"byte_end":244029,"line_start":39,"line_end":39,"column_start":21,"column_end":35},"alias_span":null,"name":"DisposalMethod","value":"","parent":{"krate":0,"index":958}},{"kind":"Use","ref_id":{"krate":21,"index":352},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/gif.rs","byte_start":244031,"byte_end":244036,"line_start":39,"line_end":39,"column_start":37,"column_end":42},"alias_span":null,"name":"Frame","value":"","parent":{"krate":0,"index":958}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/mod.rs","byte_start":255421,"byte_end":255422,"line_start":14,"line_end":14,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"HDRAdapter, RGBE8Pixel, rgbe8, SIGNATURE","parent":{"krate":0,"index":1049}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/mod.rs","byte_start":255421,"byte_end":255422,"line_start":14,"line_end":14,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":1049}},{"kind":"Use","ref_id":{"krate":0,"index":1284},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/ico/mod.rs","byte_start":303538,"byte_end":303548,"line_start":9,"line_end":9,"column_start":24,"column_end":34},"alias_span":null,"name":"ICODecoder","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":1347},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/ico/mod.rs","byte_start":303573,"byte_end":303583,"line_start":10,"line_end":10,"column_start":24,"column_end":34},"alias_span":null,"name":"ICOEncoder","value":"","parent":{"krate":0,"index":1259}},{"kind":"Use","ref_id":{"krate":0,"index":1376},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/jpeg/mod.rs","byte_start":316314,"byte_end":316325,"line_start":10,"line_end":10,"column_start":24,"column_end":35},"alias_span":null,"name":"JPEGDecoder","value":"","parent":{"krate":0,"index":1360}},{"kind":"Use","ref_id":{"krate":0,"index":1464},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/jpeg/mod.rs","byte_start":316350,"byte_end":316361,"line_start":11,"line_end":11,"column_start":24,"column_end":35},"alias_span":null,"name":"JPEGEncoder","value":"","parent":{"krate":0,"index":1360}},{"kind":"Use","ref_id":{"krate":0,"index":1663},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/mod.rs","byte_start":362082,"byte_end":362092,"line_start":7,"line_end":7,"column_start":24,"column_end":34},"alias_span":null,"name":"PNMDecoder","value":"","parent":{"krate":0,"index":1581}},{"kind":"Use","ref_id":{"krate":0,"index":1796},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/mod.rs","byte_start":362117,"byte_end":362127,"line_start":8,"line_end":8,"column_start":24,"column_end":34},"alias_span":null,"name":"PNMEncoder","value":"","parent":{"krate":0,"index":1581}},{"kind":"Use","ref_id":{"krate":0,"index":3617},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/mod.rs","byte_start":362184,"byte_end":362199,"line_start":10,"line_end":10,"column_start":24,"column_end":39},"alias_span":null,"name":"ArbitraryHeader","value":"","parent":{"krate":0,"index":1581}},{"kind":"Use","ref_id":{"krate":0,"index":3627},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/mod.rs","byte_start":362201,"byte_end":362218,"line_start":10,"line_end":10,"column_start":41,"column_end":58},"alias_span":null,"name":"ArbitraryTuplType","value":"","parent":{"krate":0,"index":1581}},{"kind":"Use","ref_id":{"krate":0,"index":3588},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/mod.rs","byte_start":362220,"byte_end":362232,"line_start":10,"line_end":10,"column_start":60,"column_end":72},"alias_span":null,"name":"BitmapHeader","value":"","parent":{"krate":0,"index":1581}},{"kind":"Use","ref_id":{"krate":0,"index":3597},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/mod.rs","byte_start":362234,"byte_end":362247,"line_start":10,"line_end":10,"column_start":74,"column_end":87},"alias_span":null,"name":"GraymapHeader","value":"","parent":{"krate":0,"index":1581}},{"kind":"Use","ref_id":{"krate":0,"index":3607},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/mod.rs","byte_start":362272,"byte_end":362284,"line_start":11,"line_end":11,"column_start":24,"column_end":36},"alias_span":null,"name":"PixmapHeader","value":"","parent":{"krate":0,"index":1581}},{"kind":"Use","ref_id":{"krate":0,"index":1891},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/mod.rs","byte_start":362310,"byte_end":362319,"line_start":12,"line_end":12,"column_start":24,"column_end":33},"alias_span":null,"name":"PNMHeader","value":"","parent":{"krate":0,"index":1581}},{"kind":"Use","ref_id":{"krate":0,"index":3564},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/mod.rs","byte_start":362321,"byte_end":362331,"line_start":12,"line_end":12,"column_start":35,"column_end":45},"alias_span":null,"name":"PNMSubtype","value":"","parent":{"krate":0,"index":1581}},{"kind":"Use","ref_id":{"krate":0,"index":3548},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/mod.rs","byte_start":362333,"byte_end":362347,"line_start":12,"line_end":12,"column_start":47,"column_end":61},"alias_span":null,"name":"SampleEncoding","value":"","parent":{"krate":0,"index":1581}},{"kind":"Use","ref_id":{"krate":0,"index":1984},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/tga/mod.rs","byte_start":440588,"byte_end":440598,"line_start":9,"line_end":9,"column_start":24,"column_end":34},"alias_span":null,"name":"TGADecoder","value":"","parent":{"krate":0,"index":1929}},{"kind":"Use","ref_id":{"krate":0,"index":2103},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/webp/mod.rs","byte_start":462113,"byte_end":462124,"line_start":3,"line_end":3,"column_start":24,"column_end":35},"alias_span":null,"name":"WebpDecoder","value":"","parent":{"krate":0,"index":2084}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":0,"byte_end":3470,"line_start":1,"line_end":143,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":18},{"krate":0,"index":25},{"krate":0,"index":35},{"krate":0,"index":42},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":60},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":66},{"krate":0,"index":73},{"krate":0,"index":81},{"krate":0,"index":84},{"krate":0,"index":128},{"krate":0,"index":368},{"krate":0,"index":469},{"krate":0,"index":626},{"krate":0,"index":846},{"krate":0,"index":958},{"krate":0,"index":1049},{"krate":0,"index":1259},{"krate":0,"index":1360},{"krate":0,"index":1524},{"krate":0,"index":1581},{"krate":0,"index":1929},{"krate":0,"index":2032},{"krate":0,"index":2084},{"krate":0,"index":2316},{"krate":0,"index":2340},{"krate":0,"index":2673},{"krate":0,"index":2825},{"krate":0,"index":2952},{"krate":0,"index":3092},{"krate":0,"index":3120},{"krate":0,"index":3132},{"krate":0,"index":4425},{"krate":0,"index":3133}],"decl_id":null,"docs":" This crate provides native rust implementations of\n image encoders and decoders and basic image manipulation\n functions.\n","sig":null,"attributes":[{"value":"! This crate provides native rust implementations of","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":0,"byte_end":54,"line_start":1,"line_end":1,"column_start":1,"column_end":55}},{"value":"! image encoders and decoders and basic image manipulation","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":55,"byte_end":115,"line_start":2,"line_end":2,"column_start":1,"column_end":61}},{"value":"! functions.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":116,"byte_end":130,"line_start":3,"line_end":3,"column_start":1,"column_end":15}},{"value":"warn(missing_docs)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":132,"byte_end":154,"line_start":5,"line_end":5,"column_start":1,"column_end":23}},{"value":"warn(unused_qualifications)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":155,"byte_end":186,"line_start":6,"line_end":6,"column_start":1,"column_end":32}},{"value":"deny(unreachable_pub)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":187,"byte_end":212,"line_start":7,"line_end":7,"column_start":1,"column_end":26}},{"value":"deny(deprecated)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":213,"byte_end":233,"line_start":8,"line_end":8,"column_start":1,"column_end":21}},{"value":"deny(missing_copy_implementations)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":234,"byte_end":272,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"allow(clippy :: many_single_char_names)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":370,"byte_end":411,"line_start":12,"line_end":12,"column_start":1,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":84},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/math/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"math","qualname":"::math","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/math/mod.rs","parent":null,"children":[{"krate":0,"index":85},{"krate":0,"index":123},{"krate":0,"index":126},{"krate":0,"index":127}],"decl_id":null,"docs":" Mathematical helper functions and types.\n","sig":null,"attributes":[{"value":"! Mathematical helper functions and types.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/math/mod.rs","byte_start":3472,"byte_end":3516,"line_start":1,"line_end":1,"column_start":1,"column_end":45}}]},{"kind":"Mod","id":{"krate":0,"index":85},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/math/nq.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"nq","qualname":"::math::nq","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/math/nq.rs","parent":null,"children":[{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":3134},{"krate":0,"index":3142},{"krate":0,"index":3140},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":109}],"decl_id":null,"docs":" NEUQUANT Neural-Net quantization algorithm by Anthony Dekker, 1994.\n See \"Kohonen neural networks for optimal colour quantization\"\n in \"Network: Computation in Neural Systems\" Vol. 5 (1994) pp 351-367.\n for a discussion of the algorithm.\n See also <https://scientificgems.wordpress.com/stuff/neuquant-fast-high-quality-image-quantization/>\n","sig":null,"attributes":[{"value":"! NEUQUANT Neural-Net quantization algorithm by Anthony Dekker, 1994.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/math/nq.rs","byte_start":3582,"byte_end":3653,"line_start":1,"line_end":1,"column_start":1,"column_end":72}},{"value":"! See \"Kohonen neural networks for optimal colour quantization\"","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/math/nq.rs","byte_start":3654,"byte_end":3719,"line_start":2,"line_end":2,"column_start":1,"column_end":66}},{"value":"! in \"Network: Computation in Neural Systems\" Vol. 5 (1994) pp 351-367.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/math/nq.rs","byte_start":3720,"byte_end":3793,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"! for a discussion of the algorithm.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/math/nq.rs","byte_start":3794,"byte_end":3832,"line_start":4,"line_end":4,"column_start":1,"column_end":39}},{"value":"! See also <https://scientificgems.wordpress.com/stuff/neuquant-fast-high-quality-image-quantization/>","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/math/nq.rs","byte_start":3833,"byte_end":3937,"line_start":5,"line_end":5,"column_start":1,"column_end":105}}]},{"kind":"Struct","id":{"krate":0,"index":101},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/math/nq.rs","byte_start":5814,"byte_end":5822,"line_start":63,"line_end":63,"column_start":12,"column_end":20},"name":"NeuQuant","qualname":"::math::nq::NeuQuant","value":"NeuQuant {  }","parent":null,"children":[{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108}],"decl_id":null,"docs":" Neural network color quantizer\n","sig":null,"attributes":[{"value":"/ Neural network color quantizer","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/math/nq.rs","byte_start":5768,"byte_end":5802,"line_start":62,"line_end":62,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/math/nq.rs","byte_start":6124,"byte_end":6127,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<NeuQuant>::new","value":"fn (samplefac: i32, colors: usize, pixels: &[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new neural network and trains it with the supplied data\n","sig":null,"attributes":[{"value":"/ Creates a new neural network and trains it with the supplied data","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/math/nq.rs","byte_start":6043,"byte_end":6112,"line_start":74,"line_end":74,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/math/nq.rs","byte_start":6668,"byte_end":6672,"line_start":91,"line_end":91,"column_start":12,"column_end":16},"name":"init","qualname":"<NeuQuant>::init","value":"fn (&mut self, pixels: &[u8]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Initializes the neural network and trains it with the supplied data\n","sig":null,"attributes":[{"value":"/ Initializes the neural network and trains it with the supplied data","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/math/nq.rs","byte_start":6585,"byte_end":6656,"line_start":90,"line_end":90,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/math/nq.rs","byte_start":7662,"byte_end":7671,"line_start":123,"line_end":123,"column_start":12,"column_end":21},"name":"map_pixel","qualname":"<NeuQuant>::map_pixel","value":"fn (&self, pixel: &mut [u8]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Maps the pixel in-place to the best-matching color in the color map\n","sig":null,"attributes":[{"value":"/ Maps the pixel in-place to the best-matching color in the color map","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/math/nq.rs","byte_start":7557,"byte_end":7628,"line_start":121,"line_end":121,"column_start":5,"column_end":76}},{"value":"inline(always)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/math/nq.rs","byte_start":7633,"byte_end":7650,"line_start":122,"line_end":122,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/math/nq.rs","byte_start":8223,"byte_end":8231,"line_start":138,"line_end":138,"column_start":12,"column_end":20},"name":"index_of","qualname":"<NeuQuant>::index_of","value":"fn (&self, pixel: &[u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Finds the best-matching index in the color map for `pixel`\n","sig":null,"attributes":[{"value":"/ Finds the best-matching index in the color map for `pixel`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/math/nq.rs","byte_start":8127,"byte_end":8189,"line_start":136,"line_end":136,"column_start":5,"column_end":67}},{"value":"inline(always)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/math/nq.rs","byte_start":8194,"byte_end":8211,"line_start":137,"line_end":137,"column_start":5,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":123},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/math/utils.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"utils","qualname":"::math::utils","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/math/utils.rs","parent":null,"children":[{"krate":0,"index":124}],"decl_id":null,"docs":" Shared mathematical utility functions.\n","sig":null,"attributes":[{"value":"! Shared mathematical utility functions.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/math/utils.rs","byte_start":17907,"byte_end":17949,"line_start":1,"line_end":1,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":124},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/math/utils.rs","byte_start":18194,"byte_end":18199,"line_start":13,"line_end":13,"column_start":8,"column_end":13},"name":"clamp","qualname":"::math::utils::clamp","value":"fn <N> (a: N, min: N, max: N) -> N","parent":null,"children":[],"decl_id":null,"docs":" Cut value to be inside given range","sig":null,"attributes":[{"value":"/ Cut value to be inside given range","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/math/utils.rs","byte_start":17951,"byte_end":17989,"line_start":3,"line_end":3,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/math/utils.rs","byte_start":17990,"byte_end":17993,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/math/utils.rs","byte_start":17994,"byte_end":18001,"line_start":5,"line_end":5,"column_start":1,"column_end":8}},{"value":"/ use image::math::utils;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/math/utils.rs","byte_start":18002,"byte_end":18029,"line_start":6,"line_end":6,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/math/utils.rs","byte_start":18030,"byte_end":18033,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(utils::clamp(-5, 0, 10),  0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/math/utils.rs","byte_start":18034,"byte_end":18078,"line_start":8,"line_end":8,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(utils::clamp( 6, 0, 10),  6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/math/utils.rs","byte_start":18079,"byte_end":18123,"line_start":9,"line_end":9,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(utils::clamp(15, 0, 10), 10);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/math/utils.rs","byte_start":18124,"byte_end":18168,"line_start":10,"line_end":10,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/math/utils.rs","byte_start":18169,"byte_end":18176,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/math/utils.rs","byte_start":18177,"byte_end":18186,"line_start":12,"line_end":12,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":3145},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/math/rect.rs","byte_start":18480,"byte_end":18484,"line_start":3,"line_end":3,"column_start":12,"column_end":16},"name":"Rect","qualname":"::math::rect::Rect","value":"Rect { x, y, width, height }","parent":null,"children":[{"krate":0,"index":3146},{"krate":0,"index":3147},{"krate":0,"index":3148},{"krate":0,"index":3149}],"decl_id":null,"docs":" A Rectangle defined by its top left corner, width and height.\n","sig":null,"attributes":[{"value":"/ A Rectangle defined by its top left corner, width and height.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/math/rect.rs","byte_start":18352,"byte_end":18417,"line_start":1,"line_end":1,"column_start":1,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":3146},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/math/rect.rs","byte_start":18544,"byte_end":18545,"line_start":5,"line_end":5,"column_start":9,"column_end":10},"name":"x","qualname":"::math::rect::Rect::x","value":"u32","parent":{"krate":0,"index":3145},"children":[],"decl_id":null,"docs":" The x coordinate of the top left corner.\n","sig":null,"attributes":[{"value":"/ The x coordinate of the top left corner.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/math/rect.rs","byte_start":18491,"byte_end":18535,"line_start":4,"line_end":4,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":3147},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/math/rect.rs","byte_start":18609,"byte_end":18610,"line_start":7,"line_end":7,"column_start":9,"column_end":10},"name":"y","qualname":"::math::rect::Rect::y","value":"u32","parent":{"krate":0,"index":3145},"children":[],"decl_id":null,"docs":" The y coordinate of the top left corner.\n","sig":null,"attributes":[{"value":"/ The y coordinate of the top left corner.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/math/rect.rs","byte_start":18556,"byte_end":18600,"line_start":6,"line_end":6,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":3148},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/math/rect.rs","byte_start":18656,"byte_end":18661,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"name":"width","qualname":"::math::rect::Rect::width","value":"u32","parent":{"krate":0,"index":3145},"children":[],"decl_id":null,"docs":" The rectangle's width.\n","sig":null,"attributes":[{"value":"/ The rectangle's width.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/math/rect.rs","byte_start":18621,"byte_end":18647,"line_start":8,"line_end":8,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":3149},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/math/rect.rs","byte_start":18708,"byte_end":18714,"line_start":11,"line_end":11,"column_start":9,"column_end":15},"name":"height","qualname":"::math::rect::Rect::height","value":"u32","parent":{"krate":0,"index":3145},"children":[],"decl_id":null,"docs":" The rectangle's height.\n","sig":null,"attributes":[{"value":"/ The rectangle's height.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/math/rect.rs","byte_start":18672,"byte_end":18699,"line_start":10,"line_end":10,"column_start":5,"column_end":32}}]},{"kind":"Mod","id":{"krate":0,"index":128},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"imageops","qualname":"::imageops","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","parent":null,"children":[{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":142},{"krate":0,"index":156},{"krate":0,"index":162},{"krate":0,"index":172},{"krate":0,"index":210},{"krate":0,"index":273},{"krate":0,"index":359},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":365}],"decl_id":null,"docs":" Image Processing Functions\n","sig":null,"attributes":[{"value":"! Image Processing Functions","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":18724,"byte_end":18754,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":179},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/affine.rs","byte_start":26551,"byte_end":26559,"line_start":7,"line_end":7,"column_start":8,"column_end":16},"name":"rotate90","qualname":"::imageops::affine::rotate90","value":"fn <I> (image: &I) -> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 90 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate an image 90 degrees clockwise.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/affine.rs","byte_start":26502,"byte_end":26543,"line_start":6,"line_end":6,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":181},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/affine.rs","byte_start":26891,"byte_end":26900,"line_start":19,"line_end":19,"column_start":8,"column_end":17},"name":"rotate180","qualname":"::imageops::affine::rotate180","value":"fn <I> (image: &I) -> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 180 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate an image 180 degrees clockwise.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/affine.rs","byte_start":26841,"byte_end":26883,"line_start":18,"line_end":18,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":183},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/affine.rs","byte_start":27233,"byte_end":27242,"line_start":31,"line_end":31,"column_start":8,"column_end":17},"name":"rotate270","qualname":"::imageops::affine::rotate270","value":"fn <I> (image: &I) -> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 270 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate an image 270 degrees clockwise.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/affine.rs","byte_start":27183,"byte_end":27225,"line_start":30,"line_end":30,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":185},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/affine.rs","byte_start":27630,"byte_end":27641,"line_start":43,"line_end":43,"column_start":8,"column_end":19},"name":"rotate90_in","qualname":"::imageops::affine::rotate90_in","value":"fn <I, Container> (image: &I, destination: &mut ImageBuffer<I::Pixel, Container>) -> crate::ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 90 degrees clockwise and put the result into the destination [`ImageBuffer`].\n","sig":null,"attributes":[{"value":"/ Rotate an image 90 degrees clockwise and put the result into the destination [`ImageBuffer`].","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/affine.rs","byte_start":27525,"byte_end":27622,"line_start":42,"line_end":42,"column_start":1,"column_end":98}}]},{"kind":"Function","id":{"krate":0,"index":188},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/affine.rs","byte_start":28338,"byte_end":28350,"line_start":66,"line_end":66,"column_start":8,"column_end":20},"name":"rotate180_in","qualname":"::imageops::affine::rotate180_in","value":"fn <I, Container> (image: &I, destination: &mut ImageBuffer<I::Pixel, Container>) -> crate::ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 180 degrees clockwise and put the result into the destination [`ImageBuffer`].\n","sig":null,"attributes":[{"value":"/ Rotate an image 180 degrees clockwise and put the result into the destination [`ImageBuffer`].","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/affine.rs","byte_start":28232,"byte_end":28330,"line_start":65,"line_end":65,"column_start":1,"column_end":99}}]},{"kind":"Function","id":{"krate":0,"index":191},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/affine.rs","byte_start":29056,"byte_end":29068,"line_start":89,"line_end":89,"column_start":8,"column_end":20},"name":"rotate270_in","qualname":"::imageops::affine::rotate270_in","value":"fn <I, Container> (image: &I, destination: &mut ImageBuffer<I::Pixel, Container>) -> crate::ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 270 degrees clockwise and put the result into the destination [`ImageBuffer`].\n","sig":null,"attributes":[{"value":"/ Rotate an image 270 degrees clockwise and put the result into the destination [`ImageBuffer`].","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/affine.rs","byte_start":28950,"byte_end":29048,"line_start":88,"line_end":88,"column_start":1,"column_end":99}}]},{"kind":"Function","id":{"krate":0,"index":194},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/affine.rs","byte_start":29697,"byte_end":29712,"line_start":112,"line_end":112,"column_start":8,"column_end":23},"name":"flip_horizontal","qualname":"::imageops::affine::flip_horizontal","value":"fn <I> (image: &I) -> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Flip an image horizontally\n","sig":null,"attributes":[{"value":"/ Flip an image horizontally","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/affine.rs","byte_start":29659,"byte_end":29689,"line_start":111,"line_end":111,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":196},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/affine.rs","byte_start":30037,"byte_end":30050,"line_start":124,"line_end":124,"column_start":8,"column_end":21},"name":"flip_vertical","qualname":"::imageops::affine::flip_vertical","value":"fn <I> (image: &I) -> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Flip an image vertically\n","sig":null,"attributes":[{"value":"/ Flip an image vertically","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/affine.rs","byte_start":30001,"byte_end":30029,"line_start":123,"line_end":123,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":198},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/affine.rs","byte_start":30432,"byte_end":30450,"line_start":136,"line_end":136,"column_start":8,"column_end":26},"name":"flip_horizontal_in","qualname":"::imageops::affine::flip_horizontal_in","value":"fn <I, Container> (image: &I, destination: &mut ImageBuffer<I::Pixel, Container>) -> crate::ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Flip an image horizontally and put the result into the destination [`ImageBuffer`].\n","sig":null,"attributes":[{"value":"/ Flip an image horizontally and put the result into the destination [`ImageBuffer`].","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/affine.rs","byte_start":30337,"byte_end":30424,"line_start":135,"line_end":135,"column_start":1,"column_end":88}}]},{"kind":"Function","id":{"krate":0,"index":201},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/affine.rs","byte_start":31134,"byte_end":31150,"line_start":159,"line_end":159,"column_start":8,"column_end":24},"name":"flip_vertical_in","qualname":"::imageops::affine::flip_vertical_in","value":"fn <I, Container> (image: &I, destination: &mut ImageBuffer<I::Pixel, Container>) -> crate::ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Flip an image vertically and put the result into the destination [`ImageBuffer`].\n","sig":null,"attributes":[{"value":"/ Flip an image vertically and put the result into the destination [`ImageBuffer`].","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/affine.rs","byte_start":31041,"byte_end":31126,"line_start":158,"line_end":158,"column_start":1,"column_end":86}}]},{"kind":"Function","id":{"krate":0,"index":204},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/affine.rs","byte_start":31800,"byte_end":31818,"line_start":182,"line_end":182,"column_start":8,"column_end":26},"name":"rotate180_in_place","qualname":"::imageops::affine::rotate180_in_place","value":"fn <I> (image: &mut I) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 180 degrees clockwise in place.\n","sig":null,"attributes":[{"value":"/ Rotate an image 180 degrees clockwise in place.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/affine.rs","byte_start":31741,"byte_end":31792,"line_start":181,"line_end":181,"column_start":1,"column_end":52}}]},{"kind":"Function","id":{"krate":0,"index":206},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/affine.rs","byte_start":32598,"byte_end":32622,"line_start":213,"line_end":213,"column_start":8,"column_end":32},"name":"flip_horizontal_in_place","qualname":"::imageops::affine::flip_horizontal_in_place","value":"fn <I> (image: &mut I) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Flip an image horizontally in place.\n","sig":null,"attributes":[{"value":"/ Flip an image horizontally in place.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/affine.rs","byte_start":32550,"byte_end":32590,"line_start":212,"line_end":212,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":208},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/affine.rs","byte_start":33028,"byte_end":33050,"line_start":228,"line_end":228,"column_start":8,"column_end":30},"name":"flip_vertical_in_place","qualname":"::imageops::affine::flip_vertical_in_place","value":"fn <I> (image: &mut I) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Flip an image vertically in place.\n","sig":null,"attributes":[{"value":"/ Flip an image vertically in place.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/affine.rs","byte_start":32982,"byte_end":33020,"line_start":227,"line_end":227,"column_start":1,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":210},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/colorops.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"colorops","qualname":"::imageops::colorops","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/colorops.rs","parent":null,"children":[{"krate":0,"index":211},{"krate":0,"index":214},{"krate":0,"index":217},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":229},{"krate":0,"index":231},{"krate":0,"index":233},{"krate":0,"index":238},{"krate":0,"index":244},{"krate":0,"index":249},{"krate":0,"index":3165},{"krate":0,"index":3168},{"krate":0,"index":3167},{"krate":0,"index":253},{"krate":0,"index":257},{"krate":0,"index":261},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":270}],"decl_id":null,"docs":" Functions for altering and converting the color of pixelbufs\n","sig":null,"attributes":[{"value":"! Functions for altering and converting the color of pixelbufs","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/colorops.rs","byte_start":37974,"byte_end":38038,"line_start":1,"line_end":1,"column_start":1,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":229},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/colorops.rs","byte_start":38388,"byte_end":38397,"line_start":15,"line_end":15,"column_start":8,"column_end":17},"name":"grayscale","qualname":"::imageops::colorops::grayscale","value":"fn <I> (image: &I) -> ImageBuffer<Luma<Subpixel<I>>, Vec<Subpixel<I>>>","parent":null,"children":[],"decl_id":null,"docs":" Convert the supplied image to grayscale\n","sig":null,"attributes":[{"value":"/ Convert the supplied image to grayscale","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/colorops.rs","byte_start":38337,"byte_end":38380,"line_start":14,"line_end":14,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":231},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/colorops.rs","byte_start":38936,"byte_end":38942,"line_start":37,"line_end":37,"column_start":8,"column_end":14},"name":"invert","qualname":"::imageops::colorops::invert","value":"fn <I> (image: &mut I) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Invert each pixel within the supplied image.\n This function operates in place.\n","sig":null,"attributes":[{"value":"/ Invert each pixel within the supplied image.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/colorops.rs","byte_start":38843,"byte_end":38891,"line_start":35,"line_end":35,"column_start":1,"column_end":49}},{"value":"/ This function operates in place.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/colorops.rs","byte_start":38892,"byte_end":38928,"line_start":36,"line_end":36,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":233},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/colorops.rs","byte_start":39405,"byte_end":39413,"line_start":53,"line_end":53,"column_start":8,"column_end":16},"name":"contrast","qualname":"::imageops::colorops::contrast","value":"fn <I, P, S> (image: &I, contrast: f32) -> ImageBuffer<P, Vec<S>>","parent":null,"children":[],"decl_id":null,"docs":" Adjust the contrast of the supplied image.\n ```contrast``` is the amount to adjust the contrast by.\n Negative values decrease the contrast and positive values increase the contrast.\n","sig":null,"attributes":[{"value":"/ Adjust the contrast of the supplied image.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/colorops.rs","byte_start":39206,"byte_end":39252,"line_start":50,"line_end":50,"column_start":1,"column_end":47}},{"value":"/ ```contrast``` is the amount to adjust the contrast by.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/colorops.rs","byte_start":39253,"byte_end":39312,"line_start":51,"line_end":51,"column_start":1,"column_end":60}},{"value":"/ Negative values decrease the contrast and positive values increase the contrast.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/colorops.rs","byte_start":39313,"byte_end":39397,"line_start":52,"line_end":52,"column_start":1,"column_end":85}}]},{"kind":"Function","id":{"krate":0,"index":238},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/colorops.rs","byte_start":40388,"byte_end":40396,"line_start":88,"line_end":88,"column_start":8,"column_end":16},"name":"brighten","qualname":"::imageops::colorops::brighten","value":"fn <I, P, S> (image: &I, value: i32) -> ImageBuffer<P, Vec<S>>","parent":null,"children":[],"decl_id":null,"docs":" Brighten the supplied image.\n ```value``` is the amount to brighten each pixel by.\n Negative values decrease the brightness and positive values increase it.\n","sig":null,"attributes":[{"value":"/ Brighten the supplied image.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/colorops.rs","byte_start":40214,"byte_end":40246,"line_start":85,"line_end":85,"column_start":1,"column_end":33}},{"value":"/ ```value``` is the amount to brighten each pixel by.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/colorops.rs","byte_start":40247,"byte_end":40303,"line_start":86,"line_end":86,"column_start":1,"column_end":57}},{"value":"/ Negative values decrease the brightness and positive values increase it.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/colorops.rs","byte_start":40304,"byte_end":40380,"line_start":87,"line_end":87,"column_start":1,"column_end":77}}]},{"kind":"Function","id":{"krate":0,"index":244},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/colorops.rs","byte_start":41382,"byte_end":41391,"line_start":123,"line_end":123,"column_start":8,"column_end":17},"name":"huerotate","qualname":"::imageops::colorops::huerotate","value":"fn <I, P, S> (image: &I, value: i32) -> ImageBuffer<P, Vec<S>>","parent":null,"children":[],"decl_id":null,"docs":" Hue rotate the supplied image.\n `value` is the degrees to rotate each pixel by.\n 0 and 360 do nothing, the rest rotates by the given degree value.\n just like the css webkit filter hue-rotate(180)\n","sig":null,"attributes":[{"value":"/ Hue rotate the supplied image.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/colorops.rs","byte_start":41166,"byte_end":41200,"line_start":119,"line_end":119,"column_start":1,"column_end":35}},{"value":"/ `value` is the degrees to rotate each pixel by.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/colorops.rs","byte_start":41201,"byte_end":41252,"line_start":120,"line_end":120,"column_start":1,"column_end":52}},{"value":"/ 0 and 360 do nothing, the rest rotates by the given degree value.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/colorops.rs","byte_start":41253,"byte_end":41322,"line_start":121,"line_end":121,"column_start":1,"column_end":70}},{"value":"/ just like the css webkit filter hue-rotate(180)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/colorops.rs","byte_start":41323,"byte_end":41374,"line_start":122,"line_end":122,"column_start":1,"column_end":52}}]},{"kind":"Trait","id":{"krate":0,"index":249},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/colorops.rs","byte_start":43305,"byte_end":43313,"line_start":180,"line_end":180,"column_start":11,"column_end":19},"name":"ColorMap","qualname":"::imageops::colorops::ColorMap","value":"ColorMap","parent":null,"children":[{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252}],"decl_id":null,"docs":" A color map\n","sig":null,"attributes":[{"value":"/ A color map","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/colorops.rs","byte_start":43279,"byte_end":43294,"line_start":179,"line_end":179,"column_start":1,"column_end":16}}]},{"kind":"Type","id":{"krate":0,"index":250},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/colorops.rs","byte_start":43377,"byte_end":43382,"line_start":182,"line_end":182,"column_start":10,"column_end":15},"name":"Color","qualname":"::imageops::colorops::ColorMap::Color","value":"type Color;","parent":{"krate":0,"index":249},"children":[],"decl_id":null,"docs":" The color type on which the map operates on\n","sig":null,"attributes":[{"value":"/ The color type on which the map operates on","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/colorops.rs","byte_start":43320,"byte_end":43367,"line_start":181,"line_end":181,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/colorops.rs","byte_start":43474,"byte_end":43482,"line_start":185,"line_end":185,"column_start":8,"column_end":16},"name":"index_of","qualname":"::imageops::colorops::ColorMap::index_of","value":"fn (&self, color: &Self::Color) -> usize","parent":{"krate":0,"index":249},"children":[],"decl_id":null,"docs":" Returns the index of the closed match of `color`\n in the color map.\n","sig":null,"attributes":[{"value":"/ Returns the index of the closed match of `color`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/colorops.rs","byte_start":43388,"byte_end":43440,"line_start":183,"line_end":183,"column_start":5,"column_end":57}},{"value":"/ in the color map.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/colorops.rs","byte_start":43445,"byte_end":43466,"line_start":184,"line_end":184,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/colorops.rs","byte_start":43588,"byte_end":43597,"line_start":187,"line_end":187,"column_start":8,"column_end":17},"name":"map_color","qualname":"::imageops::colorops::ColorMap::map_color","value":"fn (&self, color: &mut Self::Color) -> ()","parent":{"krate":0,"index":249},"children":[],"decl_id":null,"docs":" Maps `color` to the closest color in the color map.\n","sig":null,"attributes":[{"value":"/ Maps `color` to the closest color in the color map.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/colorops.rs","byte_start":43525,"byte_end":43580,"line_start":186,"line_end":186,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":3165},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/colorops.rs","byte_start":43693,"byte_end":43700,"line_start":192,"line_end":192,"column_start":12,"column_end":19},"name":"BiLevel","qualname":"::imageops::colorops::BiLevel","value":"","parent":null,"children":[],"decl_id":null,"docs":" A bi-level color map\n","sig":null,"attributes":[{"value":"/ A bi-level color map","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/colorops.rs","byte_start":43634,"byte_end":43658,"line_start":190,"line_end":190,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":265},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/colorops.rs","byte_start":45559,"byte_end":45565,"line_start":258,"line_end":258,"column_start":8,"column_end":14},"name":"dither","qualname":"::imageops::colorops::dither","value":"fn <Pix, Map> (image: &mut ImageBuffer<Pix, Vec<u8>>, color_map: &Map) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reduces the colors of the image using the supplied `color_map` while applying\n Floyd-Steinberg dithering to improve the visual conception\n","sig":null,"attributes":[{"value":"/ Reduces the colors of the image using the supplied `color_map` while applying","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/colorops.rs","byte_start":45407,"byte_end":45488,"line_start":256,"line_end":256,"column_start":1,"column_end":82}},{"value":"/ Floyd-Steinberg dithering to improve the visual conception","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/colorops.rs","byte_start":45489,"byte_end":45551,"line_start":257,"line_end":257,"column_start":1,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":270},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/colorops.rs","byte_start":47110,"byte_end":47122,"line_start":296,"line_end":296,"column_start":8,"column_end":20},"name":"index_colors","qualname":"::imageops::colorops::index_colors","value":"fn <Pix, Map> (image: &ImageBuffer<Pix, Vec<u8>>, color_map: &Map) -> ImageBuffer<Luma<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Reduces the colors using the supplied `color_map` and returns an image of the indices\n","sig":null,"attributes":[{"value":"/ Reduces the colors using the supplied `color_map` and returns an image of the indices","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/colorops.rs","byte_start":47013,"byte_end":47102,"line_start":295,"line_end":295,"column_start":1,"column_end":90}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3171},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":50769,"byte_end":50776,"line_start":84,"line_end":84,"column_start":5,"column_end":12},"name":"Nearest","qualname":"::imageops::sample::FilterType::Nearest","value":"FilterType::Nearest","parent":{"krate":0,"index":3170},"children":[],"decl_id":null,"docs":" Nearest Neighbor\n","sig":null,"attributes":[{"value":"/ Nearest Neighbor","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":50744,"byte_end":50764,"line_start":83,"line_end":83,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3173},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":50805,"byte_end":50813,"line_start":87,"line_end":87,"column_start":5,"column_end":13},"name":"Triangle","qualname":"::imageops::sample::FilterType::Triangle","value":"FilterType::Triangle","parent":{"krate":0,"index":3170},"children":[],"decl_id":null,"docs":" Linear Filter\n","sig":null,"attributes":[{"value":"/ Linear Filter","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":50783,"byte_end":50800,"line_start":86,"line_end":86,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3175},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":50841,"byte_end":50851,"line_start":90,"line_end":90,"column_start":5,"column_end":15},"name":"CatmullRom","qualname":"::imageops::sample::FilterType::CatmullRom","value":"FilterType::CatmullRom","parent":{"krate":0,"index":3170},"children":[],"decl_id":null,"docs":" Cubic Filter\n","sig":null,"attributes":[{"value":"/ Cubic Filter","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":50820,"byte_end":50836,"line_start":89,"line_end":89,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3177},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":50882,"byte_end":50890,"line_start":93,"line_end":93,"column_start":5,"column_end":13},"name":"Gaussian","qualname":"::imageops::sample::FilterType::Gaussian","value":"FilterType::Gaussian","parent":{"krate":0,"index":3170},"children":[],"decl_id":null,"docs":" Gaussian Filter\n","sig":null,"attributes":[{"value":"/ Gaussian Filter","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":50858,"byte_end":50877,"line_start":92,"line_end":92,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3179},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":50927,"byte_end":50935,"line_start":96,"line_end":96,"column_start":5,"column_end":13},"name":"Lanczos3","qualname":"::imageops::sample::FilterType::Lanczos3","value":"FilterType::Lanczos3","parent":{"krate":0,"index":3170},"children":[],"decl_id":null,"docs":" Lanczos with window 3\n","sig":null,"attributes":[{"value":"/ Lanczos with window 3","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":50897,"byte_end":50922,"line_start":95,"line_end":95,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":3170},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":50727,"byte_end":50737,"line_start":82,"line_end":82,"column_start":10,"column_end":20},"name":"FilterType","qualname":"::imageops::sample::FilterType","value":"FilterType::{Nearest, Triangle, CatmullRom, Gaussian, Lanczos3}","parent":null,"children":[{"krate":0,"index":3171},{"krate":0,"index":3173},{"krate":0,"index":3175},{"krate":0,"index":3177},{"krate":0,"index":3179}],"decl_id":null,"docs":" Available Sampling Filters.","sig":null,"attributes":[{"value":"/ Available Sampling Filters.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":48296,"byte_end":48327,"line_start":15,"line_end":15,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":48328,"byte_end":48331,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":48332,"byte_end":48347,"line_start":17,"line_end":17,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":48348,"byte_end":48351,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ To test the different sampling filters on a real example, you can find two","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":48352,"byte_end":48430,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ examples called","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":48431,"byte_end":48450,"line_start":20,"line_end":20,"column_start":1,"column_end":20}},{"value":"/ [`scaledown`](https://github.com/image-rs/image/tree/master/examples/scaledown)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":48451,"byte_end":48534,"line_start":21,"line_end":21,"column_start":1,"column_end":84}},{"value":"/ and","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":48535,"byte_end":48542,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ [`scaleup`](https://github.com/image-rs/image/tree/master/examples/scaleup)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":48543,"byte_end":48622,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ in the `examples` directory of the crate source code.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":48623,"byte_end":48680,"line_start":24,"line_end":24,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":48681,"byte_end":48684,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Here is a 3.58 MiB","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":48685,"byte_end":48707,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/ [test image](https://github.com/image-rs/image/blob/master/examples/scaledown/test.jpg)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":48708,"byte_end":48799,"line_start":27,"line_end":27,"column_start":1,"column_end":92}},{"value":"/ that has been scaled down to 300x225 px:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":48800,"byte_end":48844,"line_start":28,"line_end":28,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":48845,"byte_end":48848,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ <!-- NOTE: To test new test images locally, replace the GitHub path with `../../../docs/` -->","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":48849,"byte_end":48946,"line_start":30,"line_end":30,"column_start":1,"column_end":98}},{"value":"/ <div style=\"display: flex; flex-wrap: wrap; align-items: flex-start;\">","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":48947,"byte_end":49021,"line_start":31,"line_end":31,"column_start":1,"column_end":75}},{"value":"/   <div style=\"margin: 0 8px 8px 0;\">","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":49022,"byte_end":49062,"line_start":32,"line_end":32,"column_start":1,"column_end":41}},{"value":"/     <img src=\"https://raw.githubusercontent.com/image-rs/image/master/examples/scaledown/scaledown-test-near.png\" title=\"Nearest\"><br>","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":49063,"byte_end":49201,"line_start":33,"line_end":33,"column_start":1,"column_end":139}},{"value":"/     Nearest Neighbor","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":49202,"byte_end":49226,"line_start":34,"line_end":34,"column_start":1,"column_end":25}},{"value":"/   </div>","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":49227,"byte_end":49239,"line_start":35,"line_end":35,"column_start":1,"column_end":13}},{"value":"/   <div style=\"margin: 0 8px 8px 0;\">","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":49240,"byte_end":49280,"line_start":36,"line_end":36,"column_start":1,"column_end":41}},{"value":"/     <img src=\"https://raw.githubusercontent.com/image-rs/image/master/examples/scaledown/scaledown-test-tri.png\" title=\"Triangle\"><br>","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":49281,"byte_end":49419,"line_start":37,"line_end":37,"column_start":1,"column_end":139}},{"value":"/     Linear: Triangle","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":49420,"byte_end":49444,"line_start":38,"line_end":38,"column_start":1,"column_end":25}},{"value":"/   </div>","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":49445,"byte_end":49457,"line_start":39,"line_end":39,"column_start":1,"column_end":13}},{"value":"/   <div style=\"margin: 0 8px 8px 0;\">","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":49458,"byte_end":49498,"line_start":40,"line_end":40,"column_start":1,"column_end":41}},{"value":"/     <img src=\"https://raw.githubusercontent.com/image-rs/image/master/examples/scaledown/scaledown-test-cmr.png\" title=\"CatmullRom\"><br>","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":49499,"byte_end":49639,"line_start":41,"line_end":41,"column_start":1,"column_end":141}},{"value":"/     Cubic: Catmull-Rom","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":49640,"byte_end":49666,"line_start":42,"line_end":42,"column_start":1,"column_end":27}},{"value":"/   </div>","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":49667,"byte_end":49679,"line_start":43,"line_end":43,"column_start":1,"column_end":13}},{"value":"/   <div style=\"margin: 0 8px 8px 0;\">","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":49680,"byte_end":49720,"line_start":44,"line_end":44,"column_start":1,"column_end":41}},{"value":"/     <img src=\"https://raw.githubusercontent.com/image-rs/image/master/examples/scaledown/scaledown-test-gauss.png\" title=\"Gaussian\"><br>","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":49721,"byte_end":49861,"line_start":45,"line_end":45,"column_start":1,"column_end":141}},{"value":"/     Gaussian","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":49862,"byte_end":49878,"line_start":46,"line_end":46,"column_start":1,"column_end":17}},{"value":"/   </div>","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":49879,"byte_end":49891,"line_start":47,"line_end":47,"column_start":1,"column_end":13}},{"value":"/   <div style=\"margin: 0 8px 8px 0;\">","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":49892,"byte_end":49932,"line_start":48,"line_end":48,"column_start":1,"column_end":41}},{"value":"/     <img src=\"https://raw.githubusercontent.com/image-rs/image/master/examples/scaledown/scaledown-test-lcz2.png\" title=\"Lanczos3\"><br>","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":49933,"byte_end":50072,"line_start":49,"line_end":49,"column_start":1,"column_end":140}},{"value":"/     Lanczos with window 3","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":50073,"byte_end":50102,"line_start":50,"line_end":50,"column_start":1,"column_end":30}},{"value":"/   </div>","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":50103,"byte_end":50115,"line_start":51,"line_end":51,"column_start":1,"column_end":13}},{"value":"/ </div>","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":50116,"byte_end":50126,"line_start":52,"line_end":52,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":50127,"byte_end":50130,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ## Speed","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":50131,"byte_end":50143,"line_start":54,"line_end":54,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":50144,"byte_end":50147,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ Time required to create each of the examples above, tested on an Intel","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":50148,"byte_end":50222,"line_start":56,"line_end":56,"column_start":1,"column_end":75}},{"value":"/ i7-4770 CPU with Rust 1.37 in release mode:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":50223,"byte_end":50270,"line_start":57,"line_end":57,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":50271,"byte_end":50274,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ <table style=\"width: auto;\">","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":50275,"byte_end":50307,"line_start":59,"line_end":59,"column_start":1,"column_end":33}},{"value":"/   <tr>","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":50308,"byte_end":50318,"line_start":60,"line_end":60,"column_start":1,"column_end":11}},{"value":"/     <th>Nearest</th>","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":50319,"byte_end":50343,"line_start":61,"line_end":61,"column_start":1,"column_end":25}},{"value":"/     <td>31 ms</td>","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":50344,"byte_end":50366,"line_start":62,"line_end":62,"column_start":1,"column_end":23}},{"value":"/   </tr>","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":50367,"byte_end":50378,"line_start":63,"line_end":63,"column_start":1,"column_end":12}},{"value":"/   <tr>","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":50379,"byte_end":50389,"line_start":64,"line_end":64,"column_start":1,"column_end":11}},{"value":"/     <th>Triangle</th>","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":50390,"byte_end":50415,"line_start":65,"line_end":65,"column_start":1,"column_end":26}},{"value":"/     <td>414 ms</td>","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":50416,"byte_end":50439,"line_start":66,"line_end":66,"column_start":1,"column_end":24}},{"value":"/   </tr>","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":50440,"byte_end":50451,"line_start":67,"line_end":67,"column_start":1,"column_end":12}},{"value":"/   <tr>","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":50452,"byte_end":50462,"line_start":68,"line_end":68,"column_start":1,"column_end":11}},{"value":"/     <th>CatmullRom</th>","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":50463,"byte_end":50490,"line_start":69,"line_end":69,"column_start":1,"column_end":28}},{"value":"/     <td>817 ms</td>","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":50491,"byte_end":50514,"line_start":70,"line_end":70,"column_start":1,"column_end":24}},{"value":"/   </tr>","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":50515,"byte_end":50526,"line_start":71,"line_end":71,"column_start":1,"column_end":12}},{"value":"/   <tr>","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":50527,"byte_end":50537,"line_start":72,"line_end":72,"column_start":1,"column_end":11}},{"value":"/     <th>Gaussian</th>","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":50538,"byte_end":50563,"line_start":73,"line_end":73,"column_start":1,"column_end":26}},{"value":"/     <td>1180 ms</td>","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":50564,"byte_end":50588,"line_start":74,"line_end":74,"column_start":1,"column_end":25}},{"value":"/   </tr>","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":50589,"byte_end":50600,"line_start":75,"line_end":75,"column_start":1,"column_end":12}},{"value":"/   <tr>","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":50601,"byte_end":50611,"line_start":76,"line_end":76,"column_start":1,"column_end":11}},{"value":"/     <th>Lanczos3</th>","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":50612,"byte_end":50637,"line_start":77,"line_end":77,"column_start":1,"column_end":26}},{"value":"/     <td>1170 ms</td>","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":50638,"byte_end":50662,"line_start":78,"line_end":78,"column_start":1,"column_end":25}},{"value":"/   </tr>","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":50663,"byte_end":50674,"line_start":79,"line_end":79,"column_start":1,"column_end":12}},{"value":"/ </table>","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":50675,"byte_end":50687,"line_start":80,"line_end":80,"column_start":1,"column_end":13}}]},{"kind":"Function","id":{"krate":0,"index":321},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":60397,"byte_end":60406,"line_start":393,"line_end":393,"column_start":8,"column_end":17},"name":"thumbnail","qualname":"::imageops::sample::thumbnail","value":"fn <I, P, S> (image: &I, new_width: u32, new_height: u32) -> ImageBuffer<P, Vec<S>>","parent":null,"children":[],"decl_id":null,"docs":" Resize the supplied image to the specific dimensions.","sig":null,"attributes":[{"value":"/ Resize the supplied image to the specific dimensions.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":59651,"byte_end":59708,"line_start":381,"line_end":381,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":59709,"byte_end":59712,"line_start":382,"line_end":382,"column_start":1,"column_end":4}},{"value":"/ For downscaling, this method uses a fast integer algorithm where each source pixel contributes","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":59713,"byte_end":59811,"line_start":383,"line_end":383,"column_start":1,"column_end":99}},{"value":"/ to exactly one target pixel.  May give aliasing artifacts if new size is close to old size.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":59812,"byte_end":59907,"line_start":384,"line_end":384,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":59908,"byte_end":59911,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ In case the current width is smaller than the new width or similar for the height, another","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":59912,"byte_end":60006,"line_start":386,"line_end":386,"column_start":1,"column_end":95}},{"value":"/ strategy is used instead.  For each pixel in the output, a rectangular region of the input is","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":60007,"byte_end":60104,"line_start":387,"line_end":387,"column_start":1,"column_end":98}},{"value":"/ determined, just as previously.  But when no input pixel is part of this region, the nearest","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":60105,"byte_end":60201,"line_start":388,"line_end":388,"column_start":1,"column_end":97}},{"value":"/ pixels are interpolated instead.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":60202,"byte_end":60238,"line_start":389,"line_end":389,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":60239,"byte_end":60242,"line_start":390,"line_end":390,"column_start":1,"column_end":4}},{"value":"/ For speed reasons, all interpolation is performed linearly over the colour values.  It will not","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":60243,"byte_end":60342,"line_start":391,"line_end":391,"column_start":1,"column_end":100}},{"value":"/ take the pixel colour spaces into account.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":60343,"byte_end":60389,"line_start":392,"line_end":392,"column_start":1,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":344},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":68265,"byte_end":68274,"line_start":632,"line_end":632,"column_start":8,"column_end":17},"name":"filter3x3","qualname":"::imageops::sample::filter3x3","value":"fn <I, P, S> (image: &I, kernel: &[f32]) -> ImageBuffer<P, Vec<S>>","parent":null,"children":[],"decl_id":null,"docs":" Perform a 3x3 box filter on the supplied image.\n ```kernel``` is an array of the filter weights of length 9.\n","sig":null,"attributes":[{"value":"/ Perform a 3x3 box filter on the supplied image.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":68142,"byte_end":68193,"line_start":630,"line_end":630,"column_start":1,"column_end":52}},{"value":"/ ```kernel``` is an array of the filter weights of length 9.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":68194,"byte_end":68257,"line_start":631,"line_end":631,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":349},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":70701,"byte_end":70707,"line_start":712,"line_end":712,"column_start":8,"column_end":14},"name":"resize","qualname":"::imageops::sample::resize","value":"fn <I> (image: &I, nwidth: u32, nheight: u32, filter: FilterType) -> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Resize the supplied image to the specified dimensions.\n ```nwidth``` and ```nheight``` are the new dimensions.\n ```filter``` is the sampling filter to use.\n","sig":null,"attributes":[{"value":"/ Resize the supplied image to the specified dimensions.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":70528,"byte_end":70586,"line_start":709,"line_end":709,"column_start":1,"column_end":59}},{"value":"/ ```nwidth``` and ```nheight``` are the new dimensions.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":70587,"byte_end":70645,"line_start":710,"line_end":710,"column_start":1,"column_end":59}},{"value":"/ ```filter``` is the sampling filter to use.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":70646,"byte_end":70693,"line_start":711,"line_end":711,"column_start":1,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":351},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":71833,"byte_end":71837,"line_start":751,"line_end":751,"column_start":8,"column_end":12},"name":"blur","qualname":"::imageops::sample::blur","value":"fn <I> (image: &I, sigma: f32) -> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Performs a Gaussian blur on the supplied image.\n ```sigma``` is a measure of how much to blur by.\n","sig":null,"attributes":[{"value":"/ Performs a Gaussian blur on the supplied image.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":71721,"byte_end":71772,"line_start":749,"line_end":749,"column_start":1,"column_end":52}},{"value":"/ ```sigma``` is a measure of how much to blur by.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":71773,"byte_end":71825,"line_start":750,"line_end":750,"column_start":1,"column_end":53}}]},{"kind":"Function","id":{"krate":0,"index":354},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":72660,"byte_end":72669,"line_start":778,"line_end":778,"column_start":8,"column_end":17},"name":"unsharpen","qualname":"::imageops::sample::unsharpen","value":"fn <I, P, S> (image: &I, sigma: f32, threshold: i32) -> ImageBuffer<P, Vec<S>>","parent":null,"children":[],"decl_id":null,"docs":" Performs an unsharpen mask on the supplied image.\n ```sigma``` is the amount to blur the image by.\n ```threshold``` is the threshold for the difference between","sig":null,"attributes":[{"value":"/ Performs an unsharpen mask on the supplied image.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":72399,"byte_end":72452,"line_start":773,"line_end":773,"column_start":1,"column_end":54}},{"value":"/ ```sigma``` is the amount to blur the image by.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":72453,"byte_end":72504,"line_start":774,"line_end":774,"column_start":1,"column_end":52}},{"value":"/ ```threshold``` is the threshold for the difference between","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":72505,"byte_end":72568,"line_start":775,"line_end":775,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":72569,"byte_end":72572,"line_start":776,"line_end":776,"column_start":1,"column_end":4}},{"value":"/ See <https://en.wikipedia.org/wiki/Unsharp_masking#Digital_unsharp_masking>","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":72573,"byte_end":72652,"line_start":777,"line_end":777,"column_start":1,"column_end":80}}]},{"kind":"Function","id":{"krate":0,"index":359},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":19675,"byte_end":19679,"line_start":32,"line_end":32,"column_start":8,"column_end":12},"name":"crop","qualname":"::imageops::crop","value":"fn <I> (image: &mut I, x: u32, y: u32, width: u32, height: u32) -> SubImage<&mut I>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable view into an image\n","sig":null,"attributes":[{"value":"/ Return a mutable view into an image","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":19628,"byte_end":19667,"line_start":31,"line_end":31,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":361},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":22234,"byte_end":22248,"line_start":105,"line_end":105,"column_start":8,"column_end":22},"name":"overlay_bounds","qualname":"::imageops::overlay_bounds","value":"fn ((bottom_width, bottom_height): (u32, u32), (top_width, top_height): (u32, u32), x: u32, y: u32) -> (u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Calculate the region that can be copied from top to bottom.","sig":null,"attributes":[{"value":"/ Calculate the region that can be copied from top to bottom.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":20062,"byte_end":20125,"line_start":50,"line_end":50,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":20126,"byte_end":20129,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Given image size of bottom and top image, and a point at which we want to place the top image","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":20130,"byte_end":20227,"line_start":52,"line_end":52,"column_start":1,"column_end":98}},{"value":"/ onto the bottom image, how large can we be? Have to wary of the following issues:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":20228,"byte_end":20313,"line_start":53,"line_end":53,"column_start":1,"column_end":86}},{"value":"/ * Top might be larger than bottom","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":20314,"byte_end":20351,"line_start":54,"line_end":54,"column_start":1,"column_end":38}},{"value":"/ * Overflows in the computation","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":20352,"byte_end":20386,"line_start":55,"line_end":55,"column_start":1,"column_end":35}},{"value":"/ * Coordinates could be completely out of bounds","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":20387,"byte_end":20438,"line_start":56,"line_end":56,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":20439,"byte_end":20442,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ The main idea is to make use of inequalities provided by the nature of `saturing_add` and","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":20443,"byte_end":20536,"line_start":58,"line_end":58,"column_start":1,"column_end":94}},{"value":"/ `saturating_sub`. These intrinsically validate that all resulting coordinates will be in bounds","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":20537,"byte_end":20636,"line_start":59,"line_end":59,"column_start":1,"column_end":100}},{"value":"/ for both images.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":20637,"byte_end":20657,"line_start":60,"line_end":60,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":20658,"byte_end":20661,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ We want that all these coordinate accesses are safe:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":20662,"byte_end":20718,"line_start":62,"line_end":62,"column_start":1,"column_end":57}},{"value":"/ 1. `bottom.get_pixel(x + [0..x_range), y + [0..y_range))`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":20719,"byte_end":20780,"line_start":63,"line_end":63,"column_start":1,"column_end":62}},{"value":"/ 2. `top.get_pixel([0..x_range), [0..y_range))`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":20781,"byte_end":20831,"line_start":64,"line_end":64,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":20832,"byte_end":20835,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Proof that the function provides the necessary bounds for width. Note that all unaugmented math","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":20836,"byte_end":20935,"line_start":66,"line_end":66,"column_start":1,"column_end":100}},{"value":"/ operations are to be read in standard arithmetic, not integer arithmetic. Since no direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":20936,"byte_end":21029,"line_start":67,"line_end":67,"column_start":1,"column_end":94}},{"value":"/ integer arithmetic occurs in the implementation, this is unambiguous.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":21030,"byte_end":21103,"line_start":68,"line_end":68,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":21104,"byte_end":21107,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":21108,"byte_end":21119,"line_start":70,"line_end":70,"column_start":1,"column_end":12}},{"value":"/ Three short notes/lemmata:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":21120,"byte_end":21150,"line_start":71,"line_end":71,"column_start":1,"column_end":31}},{"value":"/ - Iff `(a - b) <= 0` then `a.saturating_sub(b) = 0`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":21151,"byte_end":21206,"line_start":72,"line_end":72,"column_start":1,"column_end":56}},{"value":"/ - Iff `(a - b) >= 0` then `a.saturating_sub(b) = a - b`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":21207,"byte_end":21266,"line_start":73,"line_end":73,"column_start":1,"column_end":60}},{"value":"/ - If  `a <= c` then `a.saturating_sub(b) <= c.saturating_sub(b)`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":21267,"byte_end":21335,"line_start":74,"line_end":74,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":21336,"byte_end":21339,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ 1.1 We show that if `bottom_width <= x`, then `x_range = 0` therefore `x + [0..x_range)` is empty.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":21340,"byte_end":21442,"line_start":76,"line_end":76,"column_start":1,"column_end":103}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":21443,"byte_end":21446,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ x_range","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":21447,"byte_end":21458,"line_start":78,"line_end":78,"column_start":1,"column_end":12}},{"value":"/  = (top_width.saturating_add(x).min(bottom_width)).saturating_sub(x)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":21459,"byte_end":21531,"line_start":79,"line_end":79,"column_start":1,"column_end":73}},{"value":"/ <= bottom_width.saturating_sub(x)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":21532,"byte_end":21569,"line_start":80,"line_end":80,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":21570,"byte_end":21573,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ bottom_width <= x","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":21574,"byte_end":21595,"line_start":82,"line_end":82,"column_start":1,"column_end":22}},{"value":"/ <==> bottom_width - x <= 0","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":21596,"byte_end":21626,"line_start":83,"line_end":83,"column_start":1,"column_end":31}},{"value":"/ <==> bottom_width.saturating_sub(x) = 0","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":21627,"byte_end":21670,"line_start":84,"line_end":84,"column_start":1,"column_end":44}},{"value":"/  ==> x_range <= 0","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":21671,"byte_end":21692,"line_start":85,"line_end":85,"column_start":1,"column_end":22}},{"value":"/  ==> x_range  = 0","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":21693,"byte_end":21714,"line_start":86,"line_end":86,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":21715,"byte_end":21718,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ 1.2 If `x < bottom_width` then `x + x_range < bottom_width`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":21719,"byte_end":21782,"line_start":88,"line_end":88,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":21783,"byte_end":21786,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ x + x_range","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":21787,"byte_end":21802,"line_start":90,"line_end":90,"column_start":1,"column_end":16}},{"value":"/ <= x + bottom_width.saturating_sub(x)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":21803,"byte_end":21844,"line_start":91,"line_end":91,"column_start":1,"column_end":42}},{"value":"/  = x + (bottom_width - x)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":21845,"byte_end":21874,"line_start":92,"line_end":92,"column_start":1,"column_end":30}},{"value":"/  = bottom_width","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":21875,"byte_end":21894,"line_start":93,"line_end":93,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":21895,"byte_end":21898,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ 2. We show that `x_range <= top_width`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":21899,"byte_end":21941,"line_start":95,"line_end":95,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":21942,"byte_end":21945,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ x_range","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":21946,"byte_end":21957,"line_start":97,"line_end":97,"column_start":1,"column_end":12}},{"value":"/  = (top_width.saturating_add(x).min(bottom_width)).saturating_sub(x)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":21958,"byte_end":22030,"line_start":98,"line_end":98,"column_start":1,"column_end":73}},{"value":"/ <= top_width.saturating_add(x).saturating_sub(x)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":22031,"byte_end":22083,"line_start":99,"line_end":99,"column_start":1,"column_end":53}},{"value":"/ <= (top_wdith + x).saturating_sub(x)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":22084,"byte_end":22124,"line_start":100,"line_end":100,"column_start":1,"column_end":41}},{"value":"/  = top_width (due to `top_width >= 0` and `x >= 0`)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":22125,"byte_end":22180,"line_start":101,"line_end":101,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":22181,"byte_end":22188,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":22189,"byte_end":22192,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ Proof is the same for height.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":22193,"byte_end":22226,"line_start":104,"line_end":104,"column_start":1,"column_end":34}}]},{"kind":"Function","id":{"krate":0,"index":362},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":22762,"byte_end":22769,"line_start":123,"line_end":123,"column_start":8,"column_end":15},"name":"overlay","qualname":"::imageops::overlay","value":"fn <I, J> (bottom: &mut I, top: &J, x: u32, y: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Overlay an image at a given coordinate (x, y)\n","sig":null,"attributes":[{"value":"/ Overlay an image at a given coordinate (x, y)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":22705,"byte_end":22754,"line_start":122,"line_end":122,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":365},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":23501,"byte_end":23508,"line_start":146,"line_end":146,"column_start":8,"column_end":15},"name":"replace","qualname":"::imageops::replace","value":"fn <I, J> (bottom: &mut I, top: &J, x: u32, y: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Replace the contents of an image at a given coordinate (x, y)\n","sig":null,"attributes":[{"value":"/ Replace the contents of an image at a given coordinate (x, y)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":23428,"byte_end":23493,"line_start":145,"line_end":145,"column_start":1,"column_end":66}}]},{"kind":"Mod","id":{"krate":0,"index":368},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/mod.rs","parent":null,"children":[{"krate":0,"index":369},{"krate":0,"index":411},{"krate":0,"index":468}],"decl_id":null,"docs":" Input and output of images.\n","sig":null,"attributes":[{"value":"! Input and output of images.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/mod.rs","byte_start":75598,"byte_end":75629,"line_start":1,"line_end":1,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":386},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":77728,"byte_end":77734,"line_start":60,"line_end":60,"column_start":12,"column_end":18},"name":"Reader","qualname":"::io::reader::Reader","value":"Reader {  }","parent":null,"children":[{"krate":0,"index":388},{"krate":0,"index":389}],"decl_id":null,"docs":" A multi-format image reader.","sig":null,"attributes":[{"value":"/ A multi-format image reader.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":75929,"byte_end":75961,"line_start":11,"line_end":11,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":75962,"byte_end":75965,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Wraps an input reader to facilitate automatic detection of an image's format, appropriate","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":75966,"byte_end":76059,"line_start":13,"line_end":13,"column_start":1,"column_end":94}},{"value":"/ decoding method, and dispatches into the set of supported [`ImageDecoder`] implementations.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":76060,"byte_end":76155,"line_start":14,"line_end":14,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":76156,"byte_end":76159,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ## Usage","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":76160,"byte_end":76172,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":76173,"byte_end":76176,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Opening a file, deducing the format based on the file path automatically, and trying to decode","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":76177,"byte_end":76275,"line_start":18,"line_end":18,"column_start":1,"column_end":99}},{"value":"/ the image contained can be performed by constructing the reader and immediately consuming it.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":76276,"byte_end":76373,"line_start":19,"line_end":19,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":76374,"byte_end":76377,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":76378,"byte_end":76391,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/ # use image::ImageError;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":76392,"byte_end":76420,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/ # use image::io::Reader;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":76421,"byte_end":76449,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), ImageError> {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":76450,"byte_end":76493,"line_start":24,"line_end":24,"column_start":1,"column_end":44}},{"value":"/ let image = Reader::open(\"path/to/image.png\")?","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":76494,"byte_end":76544,"line_start":25,"line_end":25,"column_start":1,"column_end":51}},{"value":"/     .decode()?;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":76545,"byte_end":76564,"line_start":26,"line_end":26,"column_start":1,"column_end":20}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":76565,"byte_end":76579,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":76580,"byte_end":76587,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":76588,"byte_end":76591,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ It is also possible to make a guess based on the content. This is especially handy if the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":76592,"byte_end":76685,"line_start":30,"line_end":30,"column_start":1,"column_end":94}},{"value":"/ source is some blob in memory and you have constructed the reader in another way. Here is an","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":76686,"byte_end":76782,"line_start":31,"line_end":31,"column_start":1,"column_end":97}},{"value":"/ example with a `pnm` black-and-white subformat that encodes its pixel matrix with ascii values.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":76783,"byte_end":76882,"line_start":32,"line_end":32,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":76883,"byte_end":76886,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # use image::ImageError;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":76982,"byte_end":77010,"line_start":36,"line_end":36,"column_start":1,"column_end":29}},{"value":"/ # use image::io::Reader;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":77011,"byte_end":77039,"line_start":37,"line_end":37,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), ImageError> {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":77040,"byte_end":77083,"line_start":38,"line_end":38,"column_start":1,"column_end":44}},{"value":"/ use std::io::Cursor;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":77084,"byte_end":77108,"line_start":39,"line_end":39,"column_start":1,"column_end":25}},{"value":"/ use image::ImageFormat;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":77109,"byte_end":77136,"line_start":40,"line_end":40,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":77137,"byte_end":77140,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ let raw_data = b\"P1 2 2\\n\\","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":77141,"byte_end":77171,"line_start":42,"line_end":42,"column_start":1,"column_end":31}},{"value":"/     0 1\\n\\","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":77172,"byte_end":77186,"line_start":43,"line_end":43,"column_start":1,"column_end":15}},{"value":"/     1 0\\n\";","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":77187,"byte_end":77202,"line_start":44,"line_end":44,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":77203,"byte_end":77206,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ let mut reader = Reader::new(Cursor::new(raw_data))","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":77207,"byte_end":77262,"line_start":46,"line_end":46,"column_start":1,"column_end":56}},{"value":"/     .with_guessed_format()","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":77263,"byte_end":77293,"line_start":47,"line_end":47,"column_start":1,"column_end":31}},{"value":"/     .expect(\"Cursor io never fails\");","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":77294,"byte_end":77335,"line_start":48,"line_end":48,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(reader.format(), Some(ImageFormat::PNM));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":77336,"byte_end":77392,"line_start":49,"line_end":49,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":77393,"byte_end":77396,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ let image = reader.decode()?;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":77397,"byte_end":77430,"line_start":51,"line_end":51,"column_start":1,"column_end":34}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":77431,"byte_end":77445,"line_start":52,"line_end":52,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":77446,"byte_end":77453,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":77454,"byte_end":77457,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ As a final fallback or if only a specific format must be used, the reader always allows manual","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":77458,"byte_end":77556,"line_start":55,"line_end":55,"column_start":1,"column_end":99}},{"value":"/ specification of the supposed image format with [`set_format`].","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":77557,"byte_end":77624,"line_start":56,"line_end":56,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":77625,"byte_end":77628,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ [`set_format`]: #method.set_format","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":77629,"byte_end":77667,"line_start":58,"line_end":58,"column_start":1,"column_end":39}},{"value":"/ [`ImageDecoder`]: ../trait.ImageDecoder.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":77668,"byte_end":77716,"line_start":59,"line_end":59,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":78234,"byte_end":78237,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<Reader<R>>::new","value":"fn (reader: R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new image reader without a preset format.","sig":null,"attributes":[{"value":"/ Create a new image reader without a preset format.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":77898,"byte_end":77952,"line_start":68,"line_end":68,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":77957,"byte_end":77960,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ It is possible to guess the format based on the content of the read object with","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":77965,"byte_end":78048,"line_start":70,"line_end":70,"column_start":5,"column_end":88}},{"value":"/ [`guess_format`], or to set the format directly with [`set_format`].","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":78053,"byte_end":78125,"line_start":71,"line_end":71,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":78130,"byte_end":78133,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ [`guess_format`]: #method.guess_format","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":78138,"byte_end":78180,"line_start":73,"line_end":73,"column_start":5,"column_end":47}},{"value":"/ [`set_format`]: method.set_format","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":78185,"byte_end":78222,"line_start":74,"line_end":74,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":78407,"byte_end":78418,"line_start":83,"line_end":83,"column_start":12,"column_end":23},"name":"with_format","qualname":"<Reader<R>>::with_format","value":"fn (reader: R, format: ImageFormat) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a reader with specified format.\n","sig":null,"attributes":[{"value":"/ Construct a reader with specified format.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":78350,"byte_end":78395,"line_start":82,"line_end":82,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":78612,"byte_end":78618,"line_start":91,"line_end":91,"column_start":12,"column_end":18},"name":"format","qualname":"<Reader<R>>::format","value":"fn (&self) -> Option<ImageFormat>","parent":null,"children":[],"decl_id":null,"docs":" Get the currently determined format.\n","sig":null,"attributes":[{"value":"/ Get the currently determined format.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":78560,"byte_end":78600,"line_start":90,"line_end":90,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":78753,"byte_end":78763,"line_start":96,"line_end":96,"column_start":12,"column_end":22},"name":"set_format","qualname":"<Reader<R>>::set_format","value":"fn (&mut self, format: ImageFormat) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Supply the format as which to interpret the read image.\n","sig":null,"attributes":[{"value":"/ Supply the format as which to interpret the read image.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":78682,"byte_end":78741,"line_start":95,"line_end":95,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":79098,"byte_end":79110,"line_start":104,"line_end":104,"column_start":12,"column_end":24},"name":"clear_format","qualname":"<Reader<R>>::clear_format","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Remove the current information on the image format.","sig":null,"attributes":[{"value":"/ Remove the current information on the image format.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":78845,"byte_end":78900,"line_start":100,"line_end":100,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":78905,"byte_end":78908,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ Note that many operations require format information to be present and will return e.g. an","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":78913,"byte_end":79007,"line_start":102,"line_end":102,"column_start":5,"column_end":99}},{"value":"/ `ImageError::UnsupportedError` when the image format has not been set.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":79012,"byte_end":79086,"line_start":103,"line_end":103,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":79197,"byte_end":79207,"line_start":109,"line_end":109,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Reader<R>>::into_inner","value":"fn (self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Unwrap the reader.\n","sig":null,"attributes":[{"value":"/ Unwrap the reader.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":79163,"byte_end":79185,"line_start":108,"line_end":108,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":79669,"byte_end":79673,"line_start":123,"line_end":123,"column_start":12,"column_end":16},"name":"open","qualname":"<Reader<BufReader<File>>>::open","value":"fn <P> (path: P) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Open a file to read, format will be guessed from path.","sig":null,"attributes":[{"value":"/ Open a file to read, format will be guessed from path.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":79284,"byte_end":79342,"line_start":115,"line_end":115,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":79347,"byte_end":79350,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ This will not attempt any io operation on the opened file.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":79355,"byte_end":79417,"line_start":117,"line_end":117,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":79422,"byte_end":79425,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ If you want to inspect the content for a better guess on the format, which does not depend","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":79430,"byte_end":79524,"line_start":119,"line_end":119,"column_start":5,"column_end":99}},{"value":"/ on file extensions, follow this call with a call to [`guess_format`].","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":79529,"byte_end":79602,"line_start":120,"line_end":120,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":79607,"byte_end":79610,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ [`guess_format`]: #method.guess_format","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":79615,"byte_end":79657,"line_start":122,"line_end":122,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":404},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":81305,"byte_end":81324,"line_start":165,"line_end":165,"column_start":12,"column_end":31},"name":"with_guessed_format","qualname":"<Reader<R>>::with_guessed_format","value":"fn (mut self) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Make a format guess based on the content, replacing it on success.","sig":null,"attributes":[{"value":"/ Make a format guess based on the content, replacing it on success.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":80041,"byte_end":80111,"line_start":137,"line_end":137,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":80116,"byte_end":80119,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ Returns `Ok` with the guess if no io error occurs. Additionally, replaces the current","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":80124,"byte_end":80213,"line_start":139,"line_end":139,"column_start":5,"column_end":94}},{"value":"/ format if the guess was successful. If the guess was not unable to determine a format then","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":80218,"byte_end":80312,"line_start":140,"line_end":140,"column_start":5,"column_end":99}},{"value":"/ the current format of the reader is unchanged.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":80317,"byte_end":80367,"line_start":141,"line_end":141,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":80372,"byte_end":80375,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the underlying reader fails. The format is unchanged. The error is a","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":80380,"byte_end":80472,"line_start":143,"line_end":143,"column_start":5,"column_end":97}},{"value":"/ `std::io::Error` and not `ImageError` since the only error case is an error when the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":80477,"byte_end":80565,"line_start":144,"line_end":144,"column_start":5,"column_end":93}},{"value":"/ underlying reader seeks.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":80570,"byte_end":80598,"line_start":145,"line_end":145,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":80603,"byte_end":80606,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ When an error occurs, the reader may not have been properly reset and it is potentially","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":80611,"byte_end":80702,"line_start":147,"line_end":147,"column_start":5,"column_end":96}},{"value":"/ hazardous to continue with more io.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":80707,"byte_end":80746,"line_start":148,"line_end":148,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":80751,"byte_end":80754,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ ## Usage","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":80759,"byte_end":80771,"line_start":150,"line_end":150,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":80776,"byte_end":80779,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ This supplements the path based type deduction from [`open`] with content based deduction.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":80784,"byte_end":80878,"line_start":152,"line_end":152,"column_start":5,"column_end":99}},{"value":"/ This is more common in Linux and UNIX operating systems and also helpful if the path can","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":80883,"byte_end":80975,"line_start":153,"line_end":153,"column_start":5,"column_end":97}},{"value":"/ not be directly controlled.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":80980,"byte_end":81011,"line_start":154,"line_end":154,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":81016,"byte_end":81019,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":81024,"byte_end":81037,"line_start":156,"line_end":156,"column_start":5,"column_end":18}},{"value":"/ # use image::ImageError;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":81042,"byte_end":81070,"line_start":157,"line_end":157,"column_start":5,"column_end":33}},{"value":"/ # use image::io::Reader;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":81075,"byte_end":81103,"line_start":158,"line_end":158,"column_start":5,"column_end":33}},{"value":"/ # fn main() -> Result<(), ImageError> {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":81108,"byte_end":81151,"line_start":159,"line_end":159,"column_start":5,"column_end":48}},{"value":"/ let image = Reader::open(\"image.unknown\")?","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":81156,"byte_end":81202,"line_start":160,"line_end":160,"column_start":5,"column_end":51}},{"value":"/     .with_guessed_format()?","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":81207,"byte_end":81238,"line_start":161,"line_end":161,"column_start":5,"column_end":36}},{"value":"/     .decode()?;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":81243,"byte_end":81262,"line_start":162,"line_end":162,"column_start":5,"column_end":24}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":81267,"byte_end":81281,"line_start":163,"line_end":163,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":81286,"byte_end":81293,"line_start":164,"line_end":164,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":82287,"byte_end":82302,"line_start":191,"line_end":191,"column_start":12,"column_end":27},"name":"into_dimensions","qualname":"<Reader<R>>::into_dimensions","value":"fn (mut self) -> ImageResult<(u32, u32)>","parent":null,"children":[],"decl_id":null,"docs":" Read the image dimensions.","sig":null,"attributes":[{"value":"/ Read the image dimensions.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":82069,"byte_end":82099,"line_start":186,"line_end":186,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":82104,"byte_end":82107,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ Uses the current format to construct the correct reader for the format.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":82112,"byte_end":82187,"line_start":188,"line_end":188,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":82192,"byte_end":82195,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ If no format was determined, returns an `ImageError::UnsupportedError`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":82200,"byte_end":82275,"line_start":190,"line_end":190,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":82701,"byte_end":82707,"line_start":201,"line_end":201,"column_start":12,"column_end":18},"name":"decode","qualname":"<Reader<R>>::decode","value":"fn (mut self) -> ImageResult<DynamicImage>","parent":null,"children":[],"decl_id":null,"docs":" Read the image (replaces `load`).","sig":null,"attributes":[{"value":"/ Read the image (replaces `load`).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":82476,"byte_end":82513,"line_start":196,"line_end":196,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":82518,"byte_end":82521,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ Uses the current format to construct the correct reader for the format.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":82526,"byte_end":82601,"line_start":198,"line_end":198,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":82606,"byte_end":82609,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ If no format was determined, returns an `ImageError::UnsupportedError`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":82614,"byte_end":82689,"line_start":200,"line_end":200,"column_start":5,"column_end":80}}]},{"kind":"Function","id":{"krate":0,"index":447},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/free_functions.rs","byte_start":84318,"byte_end":84322,"line_start":58,"line_end":58,"column_start":8,"column_end":12},"name":"load","qualname":"::io::free_functions::load","value":"fn <R> (r: R, format: ImageFormat) -> ImageResult<DynamicImage>","parent":null,"children":[],"decl_id":null,"docs":" Create a new image from a Reader","sig":null,"attributes":[{"value":"/ Create a new image from a Reader","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/free_functions.rs","byte_start":84177,"byte_end":84213,"line_start":53,"line_end":53,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/free_functions.rs","byte_start":84214,"byte_end":84217,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ Try [`io::Reader`] for more advanced uses.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/free_functions.rs","byte_start":84218,"byte_end":84264,"line_start":55,"line_end":55,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/free_functions.rs","byte_start":84265,"byte_end":84268,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [`io::Reader`]: io/struct.Reader.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/free_functions.rs","byte_start":84269,"byte_end":84310,"line_start":57,"line_end":57,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":464},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/free_functions.rs","byte_start":93977,"byte_end":93989,"line_start":277,"line_end":277,"column_start":8,"column_end":20},"name":"guess_format","qualname":"::io::free_functions::guess_format","value":"fn (buffer: &[u8]) -> ImageResult<ImageFormat>","parent":null,"children":[],"decl_id":null,"docs":" Guess image format from memory block","sig":null,"attributes":[{"value":"/ Guess image format from memory block","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/free_functions.rs","byte_start":93716,"byte_end":93756,"line_start":272,"line_end":272,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/free_functions.rs","byte_start":93757,"byte_end":93760,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/ Makes an educated guess about the image format based on the Magic Bytes at the beginning.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/free_functions.rs","byte_start":93761,"byte_end":93854,"line_start":274,"line_end":274,"column_start":1,"column_end":94}},{"value":"/ TGA is not supported by this function.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/free_functions.rs","byte_start":93855,"byte_end":93897,"line_start":275,"line_end":275,"column_start":1,"column_end":43}},{"value":"/ This is not to be trusted on the validity of the whole memory block","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/free_functions.rs","byte_start":93898,"byte_end":93969,"line_start":276,"line_end":276,"column_start":1,"column_end":72}}]},{"kind":"Mod","id":{"krate":0,"index":469},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"flat","qualname":"::flat","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","parent":null,"children":[{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":480},{"krate":0,"index":481},{"krate":0,"index":3186},{"krate":0,"index":3194},{"krate":0,"index":3191},{"krate":0,"index":3197},{"krate":0,"index":3217},{"krate":0,"index":3216},{"krate":0,"index":3214},{"krate":0,"index":3210},{"krate":0,"index":3211},{"krate":0,"index":3207},{"krate":0,"index":3208},{"krate":0,"index":3204},{"krate":0,"index":3219},{"krate":0,"index":3245},{"krate":0,"index":3244},{"krate":0,"index":3242},{"krate":0,"index":3238},{"krate":0,"index":3239},{"krate":0,"index":3235},{"krate":0,"index":3236},{"krate":0,"index":3225},{"krate":0,"index":3223},{"krate":0,"index":485},{"krate":0,"index":508},{"krate":0,"index":512},{"krate":0,"index":3247},{"krate":0,"index":3256},{"krate":0,"index":3252},{"krate":0,"index":3260},{"krate":0,"index":3269},{"krate":0,"index":3265},{"krate":0,"index":3273},{"krate":0,"index":3295},{"krate":0,"index":3294},{"krate":0,"index":3292},{"krate":0,"index":3288},{"krate":0,"index":3289},{"krate":0,"index":3285},{"krate":0,"index":3286},{"krate":0,"index":3282},{"krate":0,"index":3297},{"krate":0,"index":3320},{"krate":0,"index":3319},{"krate":0,"index":3317},{"krate":0,"index":3314},{"krate":0,"index":3315},{"krate":0,"index":3311},{"krate":0,"index":3312},{"krate":0,"index":3308},{"krate":0,"index":554},{"krate":0,"index":567},{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":586},{"krate":0,"index":590},{"krate":0,"index":602},{"krate":0,"index":614},{"krate":0,"index":622},{"krate":0,"index":624}],"decl_id":null,"docs":" Image representations for ffi.","sig":null,"attributes":[{"value":"! Image representations for ffi.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":94908,"byte_end":94942,"line_start":1,"line_end":1,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":94943,"byte_end":94946,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! # Usage","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":94947,"byte_end":94958,"line_start":3,"line_end":3,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":94959,"byte_end":94962,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! Imagine you want to offer a very simple ffi interface: The caller provides an image buffer and","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":94963,"byte_end":95061,"line_start":5,"line_end":5,"column_start":1,"column_end":99}},{"value":"! your program creates a thumbnail from it and dumps that image as `png`. This module is designed","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":95062,"byte_end":95161,"line_start":6,"line_end":6,"column_start":1,"column_end":100}},{"value":"! to help you transition from raw memory data to Rust representation.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":95162,"byte_end":95233,"line_start":7,"line_end":7,"column_start":1,"column_end":72}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":95234,"byte_end":95237,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":95238,"byte_end":95251,"line_start":9,"line_end":9,"column_start":1,"column_end":14}},{"value":"! use std::ptr;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":95252,"byte_end":95269,"line_start":10,"line_end":10,"column_start":1,"column_end":18}},{"value":"! use std::slice;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":95270,"byte_end":95289,"line_start":11,"line_end":11,"column_start":1,"column_end":20}},{"value":"! use image::Rgb;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":95290,"byte_end":95309,"line_start":12,"line_end":12,"column_start":1,"column_end":20}},{"value":"! use image::flat::{FlatSamples, SampleLayout};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":95310,"byte_end":95359,"line_start":13,"line_end":13,"column_start":1,"column_end":50}},{"value":"! use image::imageops::thumbnail;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":95360,"byte_end":95395,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":95396,"byte_end":95399,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"! #[no_mangle]","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":95400,"byte_end":95416,"line_start":16,"line_end":16,"column_start":1,"column_end":17}},{"value":"! pub extern \"C\" fn store_rgb8_compressed(","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":95417,"byte_end":95461,"line_start":17,"line_end":17,"column_start":1,"column_end":45}},{"value":"!     data: *const u8, len: usize,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":95462,"byte_end":95498,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"!     layout: *const SampleLayout","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":95499,"byte_end":95534,"line_start":19,"line_end":19,"column_start":1,"column_end":36}},{"value":"! )","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":95535,"byte_end":95540,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"!     -> bool","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":95541,"byte_end":95556,"line_start":21,"line_end":21,"column_start":1,"column_end":16}},{"value":"! {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":95557,"byte_end":95562,"line_start":22,"line_end":22,"column_start":1,"column_end":6}},{"value":"!     let samples = unsafe { slice::from_raw_parts(data, len) };","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":95563,"byte_end":95629,"line_start":23,"line_end":23,"column_start":1,"column_end":67}},{"value":"!     let layout = unsafe { ptr::read(layout) };","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":95630,"byte_end":95680,"line_start":24,"line_end":24,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":95681,"byte_end":95684,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"!     let buffer = FlatSamples {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":95685,"byte_end":95719,"line_start":26,"line_end":26,"column_start":1,"column_end":35}},{"value":"!         samples,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":95720,"byte_end":95740,"line_start":27,"line_end":27,"column_start":1,"column_end":21}},{"value":"!         layout,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":95741,"byte_end":95760,"line_start":28,"line_end":28,"column_start":1,"column_end":20}},{"value":"!         color_hint: None,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":95761,"byte_end":95790,"line_start":29,"line_end":29,"column_start":1,"column_end":30}},{"value":"!     };","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":95791,"byte_end":95801,"line_start":30,"line_end":30,"column_start":1,"column_end":11}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":95802,"byte_end":95805,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"!     let view = match buffer.as_view::<Rgb<u8>>() {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":95806,"byte_end":95860,"line_start":32,"line_end":32,"column_start":1,"column_end":55}},{"value":"!         Err(_) => return false, // Invalid layout.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":95861,"byte_end":95915,"line_start":33,"line_end":33,"column_start":1,"column_end":55}},{"value":"!         Ok(view) => view,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":95916,"byte_end":95945,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"!     };","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":95946,"byte_end":95956,"line_start":35,"line_end":35,"column_start":1,"column_end":11}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":95957,"byte_end":95960,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"!     thumbnail(&view, 64, 64)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":95961,"byte_end":95993,"line_start":37,"line_end":37,"column_start":1,"column_end":33}},{"value":"!         .save(\"output.png\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":95994,"byte_end":96025,"line_start":38,"line_end":38,"column_start":1,"column_end":32}},{"value":"!         .map(|_| true)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":96026,"byte_end":96052,"line_start":39,"line_end":39,"column_start":1,"column_end":27}},{"value":"!         .unwrap_or_else(|_| false)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":96053,"byte_end":96091,"line_start":40,"line_end":40,"column_start":1,"column_end":39}},{"value":"! }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":96092,"byte_end":96097,"line_start":41,"line_end":41,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":96098,"byte_end":96105,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":96106,"byte_end":96109,"line_start":43,"line_end":43,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":3186},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":96981,"byte_end":96992,"line_start":65,"line_end":65,"column_start":12,"column_end":23},"name":"FlatSamples","qualname":"::flat::FlatSamples","value":"FlatSamples { samples, layout, color_hint }","parent":null,"children":[{"krate":0,"index":3188},{"krate":0,"index":3189},{"krate":0,"index":3190}],"decl_id":null,"docs":" A flat buffer over a (multi channel) image.","sig":null,"attributes":[{"value":"/ A flat buffer over a (multi channel) image.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":96332,"byte_end":96379,"line_start":54,"line_end":54,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":96380,"byte_end":96383,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ In contrast to `ImageBuffer`, this representation of a sample collection is much more lenient","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":96384,"byte_end":96481,"line_start":56,"line_end":56,"column_start":1,"column_end":98}},{"value":"/ in the layout thereof. In particular, it also allows grouping by color planes instead of by","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":96482,"byte_end":96577,"line_start":57,"line_end":57,"column_start":1,"column_end":96}},{"value":"/ pixel, at least for the purpose of a `GenericImageView`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":96578,"byte_end":96638,"line_start":58,"line_end":58,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":96639,"byte_end":96642,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ Note that the strides need not conform to the assumption that constructed indices actually","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":96643,"byte_end":96737,"line_start":60,"line_end":60,"column_start":1,"column_end":95}},{"value":"/ refer inside the underlying buffer but return values of library functions will always guarantee","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":96738,"byte_end":96837,"line_start":61,"line_end":61,"column_start":1,"column_end":100}},{"value":"/ this. To manually make this check use `check_index_validities` and maybe put that inside an","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":96838,"byte_end":96933,"line_start":62,"line_end":62,"column_start":1,"column_end":96}},{"value":"/ assert.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":96934,"byte_end":96945,"line_start":63,"line_end":63,"column_start":1,"column_end":12}}]},{"kind":"Field","id":{"krate":0,"index":3188},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":97070,"byte_end":97077,"line_start":67,"line_end":67,"column_start":9,"column_end":16},"name":"samples","qualname":"::flat::FlatSamples::samples","value":"Buffer","parent":{"krate":0,"index":3186},"children":[],"decl_id":null,"docs":" Underlying linear container holding sample values.\n","sig":null,"attributes":[{"value":"/ Underlying linear container holding sample values.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":97007,"byte_end":97061,"line_start":66,"line_end":66,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":3189},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":97161,"byte_end":97167,"line_start":70,"line_end":70,"column_start":9,"column_end":15},"name":"layout","qualname":"::flat::FlatSamples::layout","value":"flat::SampleLayout","parent":{"krate":0,"index":3186},"children":[],"decl_id":null,"docs":" A `repr(C)` description of the layout of buffer samples.\n","sig":null,"attributes":[{"value":"/ A `repr(C)` description of the layout of buffer samples.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":97092,"byte_end":97152,"line_start":69,"line_end":69,"column_start":5,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":3190},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":97622,"byte_end":97632,"line_start":78,"line_end":78,"column_start":9,"column_end":19},"name":"color_hint","qualname":"::flat::FlatSamples::color_hint","value":"std::option::Option<color::ColorType>","parent":{"krate":0,"index":3186},"children":[],"decl_id":null,"docs":" Supplementary color information.","sig":null,"attributes":[{"value":"/ Supplementary color information.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":97188,"byte_end":97224,"line_start":72,"line_end":72,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":97229,"byte_end":97232,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ You may keep this as `None` in most cases. This is NOT checked in `View` or other","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":97237,"byte_end":97322,"line_start":74,"line_end":74,"column_start":5,"column_end":90}},{"value":"/ converters. It is intended mainly as a way for types that convert to this buffer type to","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":97327,"byte_end":97419,"line_start":75,"line_end":75,"column_start":5,"column_end":97}},{"value":"/ attach their otherwise static color information. A dynamic image representation could","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":97424,"byte_end":97513,"line_start":76,"line_end":76,"column_start":5,"column_end":94}},{"value":"/ however use this to resolve representational ambiguities such as the order of RGB channels.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":97518,"byte_end":97613,"line_start":77,"line_end":77,"column_start":5,"column_end":100}}]},{"kind":"Struct","id":{"krate":0,"index":3197},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":97782,"byte_end":97794,"line_start":84,"line_end":84,"column_start":12,"column_end":24},"name":"SampleLayout","qualname":"::flat::SampleLayout","value":"SampleLayout { channels, channel_stride, width, width_stride, height, height_stride }","parent":null,"children":[{"krate":0,"index":3198},{"krate":0,"index":3199},{"krate":0,"index":3200},{"krate":0,"index":3201},{"krate":0,"index":3202},{"krate":0,"index":3203}],"decl_id":null,"docs":" A ffi compatible description of a sample buffer.\n","sig":null,"attributes":[{"value":"/ A ffi compatible description of a sample buffer.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":97656,"byte_end":97708,"line_start":81,"line_end":81,"column_start":1,"column_end":53}},{"value":"repr(C)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":97709,"byte_end":97719,"line_start":82,"line_end":82,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":3198},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":97878,"byte_end":97886,"line_start":86,"line_end":86,"column_start":9,"column_end":17},"name":"channels","qualname":"::flat::SampleLayout::channels","value":"u8","parent":{"krate":0,"index":3197},"children":[],"decl_id":null,"docs":" The number of channels in the color representation of the image.\n","sig":null,"attributes":[{"value":"/ The number of channels in the color representation of the image.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":97801,"byte_end":97869,"line_start":85,"line_end":85,"column_start":5,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":3199},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":97972,"byte_end":97986,"line_start":89,"line_end":89,"column_start":9,"column_end":23},"name":"channel_stride","qualname":"::flat::SampleLayout::channel_stride","value":"usize","parent":{"krate":0,"index":3197},"children":[],"decl_id":null,"docs":" Add this to an index to get to the sample in the next channel.\n","sig":null,"attributes":[{"value":"/ Add this to an index to get to the sample in the next channel.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":97897,"byte_end":97963,"line_start":88,"line_end":88,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":3200},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":98048,"byte_end":98053,"line_start":92,"line_end":92,"column_start":9,"column_end":14},"name":"width","qualname":"::flat::SampleLayout::width","value":"u32","parent":{"krate":0,"index":3197},"children":[],"decl_id":null,"docs":" The width of the represented image.\n","sig":null,"attributes":[{"value":"/ The width of the represented image.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":98000,"byte_end":98039,"line_start":91,"line_end":91,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":3201},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":98140,"byte_end":98152,"line_start":95,"line_end":95,"column_start":9,"column_end":21},"name":"width_stride","qualname":"::flat::SampleLayout::width_stride","value":"usize","parent":{"krate":0,"index":3197},"children":[],"decl_id":null,"docs":" Add this to an index to get to the next sample in x-direction.\n","sig":null,"attributes":[{"value":"/ Add this to an index to get to the next sample in x-direction.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":98065,"byte_end":98131,"line_start":94,"line_end":94,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":3202},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":98215,"byte_end":98221,"line_start":98,"line_end":98,"column_start":9,"column_end":15},"name":"height","qualname":"::flat::SampleLayout::height","value":"u32","parent":{"krate":0,"index":3197},"children":[],"decl_id":null,"docs":" The height of the represented image.\n","sig":null,"attributes":[{"value":"/ The height of the represented image.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":98166,"byte_end":98206,"line_start":97,"line_end":97,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":3203},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":98308,"byte_end":98321,"line_start":101,"line_end":101,"column_start":9,"column_end":22},"name":"height_stride","qualname":"::flat::SampleLayout::height_stride","value":"usize","parent":{"krate":0,"index":3197},"children":[],"decl_id":null,"docs":" Add this to an index to get to the next sample in y-direction.\n","sig":null,"attributes":[{"value":"/ Add this to an index to get to the next sample in y-direction.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":98233,"byte_end":98299,"line_start":100,"line_end":100,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":99296,"byte_end":99312,"line_start":125,"line_end":125,"column_start":12,"column_end":28},"name":"row_major_packed","qualname":"<SampleLayout>::row_major_packed","value":"fn (channels: u8, width: u32, height: u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Describe a row-major image packed in all directions.","sig":null,"attributes":[{"value":"/ Describe a row-major image packed in all directions.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":98502,"byte_end":98558,"line_start":109,"line_end":109,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":98563,"byte_end":98566,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ The resulting will surely be `NormalForm::RowMajorPacked`. It can therefore be converted to","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":98571,"byte_end":98666,"line_start":111,"line_end":111,"column_start":5,"column_end":100}},{"value":"/ safely to an `ImageBuffer` with a large enough underlying buffer.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":98671,"byte_end":98740,"line_start":112,"line_end":112,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":98745,"byte_end":98748,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":98753,"byte_end":98760,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"/ # use image::flat::{NormalForm, SampleLayout};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":98765,"byte_end":98815,"line_start":115,"line_end":115,"column_start":5,"column_end":55}},{"value":"/ let layout = SampleLayout::row_major_packed(3, 640, 480);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":98820,"byte_end":98881,"line_start":116,"line_end":116,"column_start":5,"column_end":66}},{"value":"/ assert!(layout.is_normal(NormalForm::RowMajorPacked));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":98886,"byte_end":98944,"line_start":117,"line_end":117,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":98949,"byte_end":98956,"line_start":118,"line_end":118,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":98961,"byte_end":98964,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":98969,"byte_end":98981,"line_start":120,"line_end":120,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":98986,"byte_end":98989,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ On platforms where `usize` has the same size as `u32` this panics when the resulting stride","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":98994,"byte_end":99089,"line_start":122,"line_end":122,"column_start":5,"column_end":100}},{"value":"/ in the `height` direction would be larger than `usize::max_value()`. On other platforms","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":99094,"byte_end":99185,"line_start":123,"line_end":123,"column_start":5,"column_end":96}},{"value":"/ where it can surely accomodate `u8::max_value() * u32::max_value(), this can never happen.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":99190,"byte_end":99284,"line_start":124,"line_end":124,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":487},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":100563,"byte_end":100582,"line_start":154,"line_end":154,"column_start":12,"column_end":31},"name":"column_major_packed","qualname":"<SampleLayout>::column_major_packed","value":"fn (channels: u8, width: u32, height: u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Describe a column-major image packed in all directions.","sig":null,"attributes":[{"value":"/ Describe a column-major image packed in all directions.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":99750,"byte_end":99809,"line_start":138,"line_end":138,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":99814,"byte_end":99817,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ The resulting will surely be `NormalForm::ColumnMajorPacked`. This is not particularly","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":99822,"byte_end":99912,"line_start":140,"line_end":140,"column_start":5,"column_end":95}},{"value":"/ useful for conversion but can be used to describe such a buffer without pitfalls.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":99917,"byte_end":100002,"line_start":141,"line_end":141,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":100007,"byte_end":100010,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":100015,"byte_end":100022,"line_start":143,"line_end":143,"column_start":5,"column_end":12}},{"value":"/ # use image::flat::{NormalForm, SampleLayout};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":100027,"byte_end":100077,"line_start":144,"line_end":144,"column_start":5,"column_end":55}},{"value":"/ let layout = SampleLayout::column_major_packed(3, 640, 480);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":100082,"byte_end":100146,"line_start":145,"line_end":145,"column_start":5,"column_end":69}},{"value":"/ assert!(layout.is_normal(NormalForm::ColumnMajorPacked));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":100151,"byte_end":100212,"line_start":146,"line_end":146,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":100217,"byte_end":100224,"line_start":147,"line_end":147,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":100229,"byte_end":100232,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":100237,"byte_end":100249,"line_start":149,"line_end":149,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":100254,"byte_end":100257,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ On platforms where `usize` has the same size as `u32` this panics when the resulting stride","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":100262,"byte_end":100357,"line_start":151,"line_end":151,"column_start":5,"column_end":100}},{"value":"/ in the `width` direction would be larger than `usize::max_value()`. On other platforms","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":100362,"byte_end":100452,"line_start":152,"line_end":152,"column_start":5,"column_end":95}},{"value":"/ where it can surely accomodate `u8::max_value() * u32::max_value(), this can never happen.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":100457,"byte_end":100551,"line_start":153,"line_end":153,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":101198,"byte_end":101209,"line_start":171,"line_end":171,"column_start":12,"column_end":23},"name":"strides_cwh","qualname":"<SampleLayout>::strides_cwh","value":"fn (&self) -> (usize, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Get the strides for indexing matrix-like `[(c, w, h)]`.","sig":null,"attributes":[{"value":"/ Get the strides for indexing matrix-like `[(c, w, h)]`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":101023,"byte_end":101082,"line_start":167,"line_end":167,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":101087,"byte_end":101090,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ For a row-major layout with grouped samples, this tuple is strictly","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":101095,"byte_end":101166,"line_start":169,"line_end":169,"column_start":5,"column_end":76}},{"value":"/ increasing.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":101171,"byte_end":101186,"line_start":170,"line_end":170,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":101526,"byte_end":101533,"line_start":179,"line_end":179,"column_start":12,"column_end":19},"name":"extents","qualname":"<SampleLayout>::extents","value":"fn (&self) -> (usize, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Get the dimensions `(channels, width, height)`.","sig":null,"attributes":[{"value":"/ Get the dimensions `(channels, width, height)`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":101324,"byte_end":101375,"line_start":175,"line_end":175,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":101380,"byte_end":101383,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ The interface is optimized for use with `strides_cwh` instead. The channel extent will be","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":101388,"byte_end":101481,"line_start":177,"line_end":177,"column_start":5,"column_end":98}},{"value":"/ before width and height.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":101486,"byte_end":101514,"line_start":178,"line_end":178,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":101907,"byte_end":101913,"line_start":187,"line_end":187,"column_start":12,"column_end":18},"name":"bounds","qualname":"<SampleLayout>::bounds","value":"fn (&self) -> (u8, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Tuple of bounds in the order of coordinate inputs.","sig":null,"attributes":[{"value":"/ Tuple of bounds in the order of coordinate inputs.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":101655,"byte_end":101709,"line_start":183,"line_end":183,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":101714,"byte_end":101717,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ This function should be used whenever working with image coordinates opposed to buffer","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":101722,"byte_end":101812,"line_start":185,"line_end":185,"column_start":5,"column_end":95}},{"value":"/ coordinates. The only difference compared to `extents` is the output type.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":101817,"byte_end":101895,"line_start":186,"line_end":186,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":104066,"byte_end":104076,"line_start":242,"line_end":242,"column_start":12,"column_end":22},"name":"min_length","qualname":"<SampleLayout>::min_length","value":"fn (&self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Get the minimum length of a buffer such that all in-bounds samples have valid indices.","sig":null,"attributes":[{"value":"/ Get the minimum length of a buffer such that all in-bounds samples have valid indices.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":102001,"byte_end":102091,"line_start":191,"line_end":191,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":102096,"byte_end":102099,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ This method will allow zero strides, allowing compact representations of monochrome images.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":102104,"byte_end":102199,"line_start":193,"line_end":193,"column_start":5,"column_end":100}},{"value":"/ To check that no aliasing occurs, try `check_alias_invariants`. For compact images (no","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":102204,"byte_end":102294,"line_start":194,"line_end":194,"column_start":5,"column_end":95}},{"value":"/ aliasing and no unindexed samples) this is `width*height*channels`. But for both of the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":102299,"byte_end":102390,"line_start":195,"line_end":195,"column_start":5,"column_end":96}},{"value":"/ other cases, the reasoning is slightly more involved.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":102395,"byte_end":102452,"line_start":196,"line_end":196,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":102457,"byte_end":102460,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Explanation","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":102465,"byte_end":102482,"line_start":198,"line_end":198,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":102487,"byte_end":102490,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ Note that there is a difference between `min_length` and the index of the sample","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":102495,"byte_end":102579,"line_start":200,"line_end":200,"column_start":5,"column_end":89}},{"value":"/ 'one-past-the-end`. This is due to strides that may be larger than the dimension below.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":102584,"byte_end":102675,"line_start":201,"line_end":201,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":102680,"byte_end":102683,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ ## Example with holes","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":102688,"byte_end":102713,"line_start":203,"line_end":203,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":102718,"byte_end":102721,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ Let's look at an example of a grayscale image with","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":102726,"byte_end":102780,"line_start":205,"line_end":205,"column_start":5,"column_end":59}},{"value":"/ * `width_stride = 1`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":102785,"byte_end":102809,"line_start":206,"line_end":206,"column_start":5,"column_end":29}},{"value":"/ * `width = 2`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":102814,"byte_end":102831,"line_start":207,"line_end":207,"column_start":5,"column_end":22}},{"value":"/ * `height_stride = 3`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":102836,"byte_end":102861,"line_start":208,"line_end":208,"column_start":5,"column_end":30}},{"value":"/ * `height = 2`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":102866,"byte_end":102884,"line_start":209,"line_end":209,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":102889,"byte_end":102892,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":102897,"byte_end":102908,"line_start":211,"line_end":211,"column_start":5,"column_end":16}},{"value":"/ | x x   | x x m | $","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":102913,"byte_end":102936,"line_start":212,"line_end":212,"column_start":5,"column_end":28}},{"value":"/  min_length m ^","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":102941,"byte_end":102960,"line_start":213,"line_end":213,"column_start":5,"column_end":24}},{"value":"/                   ^ one-past-the-end $","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":102965,"byte_end":103007,"line_start":214,"line_end":214,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":103012,"byte_end":103019,"line_start":215,"line_end":215,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":103024,"byte_end":103027,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ The difference is also extreme for empty images with large strides. The one-past-the-end","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":103032,"byte_end":103124,"line_start":217,"line_end":217,"column_start":5,"column_end":97}},{"value":"/ sample index is still as large as the largest of these strides while `min_length = 0`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":103129,"byte_end":103219,"line_start":218,"line_end":218,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":103224,"byte_end":103227,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ ## Example with aliasing","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":103232,"byte_end":103260,"line_start":220,"line_end":220,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":103265,"byte_end":103268,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ The concept gets even more important when you allow samples to alias each other. Here we","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":103273,"byte_end":103365,"line_start":222,"line_end":222,"column_start":5,"column_end":97}},{"value":"/ have the buffer of a small grayscale image where this is the case, this time we will first","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":103370,"byte_end":103464,"line_start":223,"line_end":223,"column_start":5,"column_end":99}},{"value":"/ show the buffer and then the individual rows below.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":103469,"byte_end":103524,"line_start":224,"line_end":224,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":103529,"byte_end":103532,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ * `width_stride = 1`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":103537,"byte_end":103561,"line_start":226,"line_end":226,"column_start":5,"column_end":29}},{"value":"/ * `width = 3`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":103566,"byte_end":103583,"line_start":227,"line_end":227,"column_start":5,"column_end":22}},{"value":"/ * `height_stride = 2`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":103588,"byte_end":103613,"line_start":228,"line_end":228,"column_start":5,"column_end":30}},{"value":"/ * `height = 2`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":103618,"byte_end":103636,"line_start":229,"line_end":229,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":103641,"byte_end":103644,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":103649,"byte_end":103660,"line_start":231,"line_end":231,"column_start":5,"column_end":16}},{"value":"/  1 2 3 4 5 m","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":103665,"byte_end":103681,"line_start":232,"line_end":232,"column_start":5,"column_end":21}},{"value":"/ |1 2 3| row one","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":103686,"byte_end":103705,"line_start":233,"line_end":233,"column_start":5,"column_end":24}},{"value":"/     |3 4 5| row two","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":103710,"byte_end":103733,"line_start":234,"line_end":234,"column_start":5,"column_end":28}},{"value":"/            ^ m min_length","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":103738,"byte_end":103767,"line_start":235,"line_end":235,"column_start":5,"column_end":34}},{"value":"/          ^ ??? one-past-the-end","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":103772,"byte_end":103807,"line_start":236,"line_end":236,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":103812,"byte_end":103819,"line_start":237,"line_end":237,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":103824,"byte_end":103827,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ This time 'one-past-the-end' is not even simply the largest stride times the extent of its","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":103832,"byte_end":103926,"line_start":239,"line_end":239,"column_start":5,"column_end":99}},{"value":"/ dimension. That still points inside the image because `height*height_stride = 4` but also","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":103931,"byte_end":104024,"line_start":240,"line_end":240,"column_start":5,"column_end":98}},{"value":"/ `index_of(1, 2) = 4`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":104029,"byte_end":104054,"line_start":241,"line_end":241,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":104408,"byte_end":104412,"line_start":252,"line_end":252,"column_start":12,"column_end":16},"name":"fits","qualname":"<SampleLayout>::fits","value":"fn (&self, len: usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a buffer of length `len` is large enough.\n","sig":null,"attributes":[{"value":"/ Check if a buffer of length `len` is large enough.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":104342,"byte_end":104396,"line_start":251,"line_end":251,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":105522,"byte_end":105541,"line_start":277,"line_end":277,"column_start":12,"column_end":31},"name":"has_aliased_samples","qualname":"<SampleLayout>::has_aliased_samples","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" If there are any samples aliasing each other.","sig":null,"attributes":[{"value":"/ If there are any samples aliasing each other.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":105172,"byte_end":105221,"line_start":272,"line_end":272,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":105226,"byte_end":105229,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ If this is not the case, it would always be safe to allow mutable access to two different","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":105234,"byte_end":105327,"line_start":274,"line_end":274,"column_start":5,"column_end":98}},{"value":"/ samples at the same time. Otherwise, this operation would need additional checks. When one","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":105332,"byte_end":105426,"line_start":275,"line_end":275,"column_start":5,"column_end":99}},{"value":"/ dimension overflows `usize` with its stride we also consider this aliasing.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":105431,"byte_end":105510,"line_start":276,"line_end":276,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":499},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":106786,"byte_end":106795,"line_start":307,"line_end":307,"column_start":12,"column_end":21},"name":"is_normal","qualname":"<SampleLayout>::is_normal","value":"fn (&self, form: NormalForm) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a buffer fulfills the requirements of a normal form.","sig":null,"attributes":[{"value":"/ Check if a buffer fulfills the requirements of a normal form.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":106276,"byte_end":106341,"line_start":300,"line_end":300,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":106346,"byte_end":106349,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ Certain conversions have preconditions on the structure of the sample buffer that are not","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":106354,"byte_end":106447,"line_start":302,"line_end":302,"column_start":5,"column_end":98}},{"value":"/ captured (by design) by the type system. These are then checked before the conversion. Such","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":106452,"byte_end":106547,"line_start":303,"line_end":303,"column_start":5,"column_end":100}},{"value":"/ checks can all be done in constant time and will not inspect the buffer content. You can","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":106552,"byte_end":106644,"line_start":304,"line_end":304,"column_start":5,"column_end":97}},{"value":"/ perform these checks yourself when the conversion is not required at this moment but maybe","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":106649,"byte_end":106743,"line_start":305,"line_end":305,"column_start":5,"column_end":99}},{"value":"/ still performed later.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":106748,"byte_end":106774,"line_start":306,"line_end":306,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":108493,"byte_end":108502,"line_start":362,"line_end":362,"column_start":12,"column_end":21},"name":"in_bounds","qualname":"<SampleLayout>::in_bounds","value":"fn (&self, channel: u8, x: u32, y: u32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check that the pixel and the channel index are in bounds.","sig":null,"attributes":[{"value":"/ Check that the pixel and the channel index are in bounds.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":108151,"byte_end":108212,"line_start":357,"line_end":357,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":108217,"byte_end":108220,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ An in-bound coordinate does not yet guarantee that the corresponding calculation of a","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":108225,"byte_end":108314,"line_start":359,"line_end":359,"column_start":5,"column_end":94}},{"value":"/ buffer index does not overflow. However, if such a buffer large enough to hold all samples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":108319,"byte_end":108413,"line_start":360,"line_end":360,"column_start":5,"column_end":99}},{"value":"/ actually exists in memory, this porperty of course follows.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":108418,"byte_end":108481,"line_start":361,"line_end":361,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":501},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":108776,"byte_end":108781,"line_start":369,"line_end":369,"column_start":12,"column_end":17},"name":"index","qualname":"<SampleLayout>::index","value":"fn (&self, channel: u8, x: u32, y: u32) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Resolve the index of a particular sample.","sig":null,"attributes":[{"value":"/ Resolve the index of a particular sample.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":108629,"byte_end":108674,"line_start":366,"line_end":366,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":108679,"byte_end":108682,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ `None` if the index is outside the bounds or does not fit into a `usize`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":108687,"byte_end":108764,"line_start":368,"line_end":368,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":109375,"byte_end":109396,"line_start":382,"line_end":382,"column_start":12,"column_end":33},"name":"index_ignoring_bounds","qualname":"<SampleLayout>::index_ignoring_bounds","value":"fn (&self, channel: usize, x: usize, y: usize) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Get the theoretical position of sample (channel, x, y).","sig":null,"attributes":[{"value":"/ Get the theoretical position of sample (channel, x, y).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":109004,"byte_end":109063,"line_start":377,"line_end":377,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":109068,"byte_end":109071,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ The 'check' is for overflow during index calculation, not that it is contained in the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":109076,"byte_end":109165,"line_start":379,"line_end":379,"column_start":5,"column_end":94}},{"value":"/ image. Two samples may return the same index, even when one of them is out of bounds. This","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":109170,"byte_end":109264,"line_start":380,"line_end":380,"column_start":5,"column_end":99}},{"value":"/ happens when all strides are `0`, i.e. the image is an arbitrarily large monochrome image.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":109269,"byte_end":109363,"line_start":381,"line_end":381,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":506},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":110327,"byte_end":110342,"line_start":403,"line_end":403,"column_start":12,"column_end":27},"name":"in_bounds_index","qualname":"<SampleLayout>::in_bounds_index","value":"fn (&self, c: u8, x: u32, y: u32) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get an index provided it is inbouds.","sig":null,"attributes":[{"value":"/ Get an index provided it is inbouds.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":110026,"byte_end":110066,"line_start":398,"line_end":398,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":110071,"byte_end":110074,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ Assumes that the image is backed by some sufficiently large buffer. Then computation can","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":110079,"byte_end":110171,"line_start":400,"line_end":400,"column_start":5,"column_end":97}},{"value":"/ not overflow as we could represent the maximum coordinate. Since overflow is defined either","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":110176,"byte_end":110271,"line_start":401,"line_end":401,"column_start":5,"column_end":100}},{"value":"/ way, this method can not be unsafe.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":110276,"byte_end":110315,"line_start":402,"line_end":402,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":507},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":110870,"byte_end":110879,"line_start":414,"line_end":414,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<SampleLayout>::shrink_to","value":"fn (&mut self, channels: u8, width: u32, height: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shrink the image to the minimum of current and given extents.","sig":null,"attributes":[{"value":"/ Shrink the image to the minimum of current and given extents.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":110545,"byte_end":110610,"line_start":409,"line_end":409,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":110615,"byte_end":110618,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ This does not modify the strides, so that the resulting sample buffer may have holes","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":110623,"byte_end":110711,"line_start":411,"line_end":411,"column_start":5,"column_end":93}},{"value":"/ created by the shrinking operation. Shrinking could also lead to an non-aliasing image when","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":110716,"byte_end":110811,"line_start":412,"line_end":412,"column_start":5,"column_end":100}},{"value":"/ samples had aliased each other before.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":110816,"byte_end":110858,"line_start":413,"line_end":413,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":111552,"byte_end":111563,"line_start":441,"line_end":441,"column_start":12,"column_end":23},"name":"strides_cwh","qualname":"<FlatSamples<Buffer>>::strides_cwh","value":"fn (&self) -> (usize, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Get the strides for indexing matrix-like `[(c, w, h)]`.","sig":null,"attributes":[{"value":"/ Get the strides for indexing matrix-like `[(c, w, h)]`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":111377,"byte_end":111436,"line_start":437,"line_end":437,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":111441,"byte_end":111444,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ For a row-major layout with grouped samples, this tuple is strictly","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":111449,"byte_end":111520,"line_start":439,"line_end":439,"column_start":5,"column_end":76}},{"value":"/ increasing.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":111525,"byte_end":111540,"line_start":440,"line_end":440,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":111845,"byte_end":111852,"line_start":449,"line_end":449,"column_start":12,"column_end":19},"name":"extents","qualname":"<FlatSamples<Buffer>>::extents","value":"fn (&self) -> (usize, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Get the dimensions `(channels, width, height)`.","sig":null,"attributes":[{"value":"/ Get the dimensions `(channels, width, height)`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":111643,"byte_end":111694,"line_start":445,"line_end":445,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":111699,"byte_end":111702,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ The interface is optimized for use with `strides_cwh` instead. The channel extent will be","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":111707,"byte_end":111800,"line_start":447,"line_end":447,"column_start":5,"column_end":98}},{"value":"/ before width and height.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":111805,"byte_end":111833,"line_start":448,"line_end":448,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":516},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":112180,"byte_end":112186,"line_start":457,"line_end":457,"column_start":12,"column_end":18},"name":"bounds","qualname":"<FlatSamples<Buffer>>::bounds","value":"fn (&self) -> (u8, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Tuple of bounds in the order of coordinate inputs.","sig":null,"attributes":[{"value":"/ Tuple of bounds in the order of coordinate inputs.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":111928,"byte_end":111982,"line_start":453,"line_end":453,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":111987,"byte_end":111990,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ This function should be used whenever working with image coordinates opposed to buffer","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":111995,"byte_end":112085,"line_start":455,"line_end":455,"column_start":5,"column_end":95}},{"value":"/ coordinates. The only difference compared to `extents` is the output type.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":112090,"byte_end":112168,"line_start":456,"line_end":456,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":517},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":112300,"byte_end":112306,"line_start":462,"line_end":462,"column_start":12,"column_end":18},"name":"as_ref","qualname":"<FlatSamples<Buffer>>::as_ref","value":"fn <T> (&self) -> FlatSamples<&[T]>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference based version.\n","sig":null,"attributes":[{"value":"/ Get a reference based version.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":112254,"byte_end":112288,"line_start":461,"line_end":461,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":519},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":112580,"byte_end":112586,"line_start":471,"line_end":471,"column_start":12,"column_end":18},"name":"as_mut","qualname":"<FlatSamples<Buffer>>::as_mut","value":"fn <T> (&mut self) -> FlatSamples<&mut [T]>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference based version.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference based version.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":112526,"byte_end":112568,"line_start":470,"line_end":470,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":521},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":112865,"byte_end":112871,"line_start":480,"line_end":480,"column_start":12,"column_end":18},"name":"to_vec","qualname":"<FlatSamples<Buffer>>::to_vec","value":"fn <T> (&self) -> FlatSamples<Vec<T>>","parent":null,"children":[],"decl_id":null,"docs":" Copy the data into an owned vector.\n","sig":null,"attributes":[{"value":"/ Copy the data into an owned vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":112814,"byte_end":112853,"line_start":479,"line_end":479,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":523},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":114144,"byte_end":114154,"line_start":511,"line_end":511,"column_start":12,"column_end":22},"name":"get_sample","qualname":"<FlatSamples<Buffer>>::get_sample","value":"fn <T> (&self, channel: u8, x: u32, y: u32) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to a single sample.","sig":null,"attributes":[{"value":"/ Get a reference to a single sample.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":113124,"byte_end":113163,"line_start":490,"line_end":490,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":113168,"byte_end":113171,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ This more restrictive than the method based on `std::ops::Index` but guarantees to properly","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":113176,"byte_end":113271,"line_start":492,"line_end":492,"column_start":5,"column_end":100}},{"value":"/ check all bounds and not panic as long as `Buffer::as_ref` does not do so.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":113276,"byte_end":113354,"line_start":493,"line_end":493,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":113359,"byte_end":113362,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":113367,"byte_end":113374,"line_start":495,"line_end":495,"column_start":5,"column_end":12}},{"value":"/ # use image::{RgbImage};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":113379,"byte_end":113407,"line_start":496,"line_end":496,"column_start":5,"column_end":33}},{"value":"/ let flat = RgbImage::new(480, 640).into_flat_samples();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":113412,"byte_end":113471,"line_start":497,"line_end":497,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":113476,"byte_end":113479,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ // Get the blue channel at (10, 10).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":113484,"byte_end":113524,"line_start":499,"line_end":499,"column_start":5,"column_end":45}},{"value":"/ assert!(flat.get_sample(1, 10, 10).is_some());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":113529,"byte_end":113579,"line_start":500,"line_end":500,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":113584,"byte_end":113587,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ // There is no alpha channel.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":113592,"byte_end":113625,"line_start":502,"line_end":502,"column_start":5,"column_end":38}},{"value":"/ assert!(flat.get_sample(3, 10, 10).is_none());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":113630,"byte_end":113680,"line_start":503,"line_end":503,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":113685,"byte_end":113692,"line_start":504,"line_end":504,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":113697,"byte_end":113700,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ For cases where a special buffer does not provide `AsRef<[T]>`, consider encapsulating","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":113705,"byte_end":113795,"line_start":506,"line_end":506,"column_start":5,"column_end":95}},{"value":"/ bounds checks with `min_length` in a type similar to `View`. Then you may use","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":113800,"byte_end":113881,"line_start":507,"line_end":507,"column_start":5,"column_end":86}},{"value":"/ `in_bounds_index` as a small speedup over the index calculation of this method which relies","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":113886,"byte_end":113981,"line_start":508,"line_end":508,"column_start":5,"column_end":100}},{"value":"/ on `index_ignoring_bounds` since it can not have a-priori knowledge that the sample","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":113986,"byte_end":114073,"line_start":509,"line_end":509,"column_start":5,"column_end":92}},{"value":"/ coordinate is in fact backed by any memory buffer.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":114078,"byte_end":114132,"line_start":510,"line_end":510,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":526},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":115751,"byte_end":115765,"line_start":544,"line_end":544,"column_start":12,"column_end":26},"name":"get_mut_sample","qualname":"<FlatSamples<Buffer>>::get_mut_sample","value":"fn <T> (&mut self, channel: u8, x: u32, y: u32) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to a single sample.","sig":null,"attributes":[{"value":"/ Get a mutable reference to a single sample.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":114341,"byte_end":114388,"line_start":518,"line_end":518,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":114393,"byte_end":114396,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ This more restrictive than the method based on `std::ops::IndexMut` but guarantees to","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":114401,"byte_end":114490,"line_start":520,"line_end":520,"column_start":5,"column_end":94}},{"value":"/ properly check all bounds and not panic as long as `Buffer::as_ref` does not do so.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":114495,"byte_end":114582,"line_start":521,"line_end":521,"column_start":5,"column_end":92}},{"value":"/ Contrary to conversion to `ViewMut`, this does not require that samples are packed since it","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":114587,"byte_end":114682,"line_start":522,"line_end":522,"column_start":5,"column_end":100}},{"value":"/ does not need to convert samples to a color representation.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":114687,"byte_end":114750,"line_start":523,"line_end":523,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":114755,"byte_end":114758,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ **WARNING**: Note that of course samples may alias, so that the mutable reference returned","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":114763,"byte_end":114857,"line_start":525,"line_end":525,"column_start":5,"column_end":99}},{"value":"/ here can in fact modify more than the coordinate in the argument.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":114862,"byte_end":114931,"line_start":526,"line_end":526,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":114936,"byte_end":114939,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":114944,"byte_end":114951,"line_start":528,"line_end":528,"column_start":5,"column_end":12}},{"value":"/ # use image::{RgbImage};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":114956,"byte_end":114984,"line_start":529,"line_end":529,"column_start":5,"column_end":33}},{"value":"/ let mut flat = RgbImage::new(480, 640).into_flat_samples();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":114989,"byte_end":115052,"line_start":530,"line_end":530,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":115057,"byte_end":115060,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ // Assign some new color to the blue channel at (10, 10).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":115065,"byte_end":115126,"line_start":532,"line_end":532,"column_start":5,"column_end":66}},{"value":"/ *flat.get_mut_sample(1, 10, 10).unwrap() = 255;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":115131,"byte_end":115182,"line_start":533,"line_end":533,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":115187,"byte_end":115190,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ // There is no alpha channel.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":115195,"byte_end":115228,"line_start":535,"line_end":535,"column_start":5,"column_end":38}},{"value":"/ assert!(flat.get_mut_sample(3, 10, 10).is_none());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":115233,"byte_end":115287,"line_start":536,"line_end":536,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":115292,"byte_end":115299,"line_start":537,"line_end":537,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":115304,"byte_end":115307,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ For cases where a special buffer does not provide `AsRef<[T]>`, consider encapsulating","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":115312,"byte_end":115402,"line_start":539,"line_end":539,"column_start":5,"column_end":95}},{"value":"/ bounds checks with `min_length` in a type similar to `View`. Then you may use","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":115407,"byte_end":115488,"line_start":540,"line_end":540,"column_start":5,"column_end":86}},{"value":"/ `in_bounds_index` as a small speedup over the index calculation of this method which relies","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":115493,"byte_end":115588,"line_start":541,"line_end":541,"column_start":5,"column_end":100}},{"value":"/ on `index_ignoring_bounds` since it can not have a-priori knowledge that the sample","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":115593,"byte_end":115680,"line_start":542,"line_end":542,"column_start":5,"column_end":92}},{"value":"/ coordinate is in fact backed by any memory buffer.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":115685,"byte_end":115739,"line_start":543,"line_end":543,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":528},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":116429,"byte_end":116436,"line_start":559,"line_end":559,"column_start":12,"column_end":19},"name":"as_view","qualname":"<FlatSamples<Buffer>>::as_view","value":"fn <P> (&self) -> Result<View<&[P::Subpixel], P>, Error>","parent":null,"children":[],"decl_id":null,"docs":" View this buffer as an image over some type of pixel.","sig":null,"attributes":[{"value":"/ View this buffer as an image over some type of pixel.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":116017,"byte_end":116074,"line_start":553,"line_end":553,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":116079,"byte_end":116082,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ This first ensures that all in-bounds coordinates refer to valid indices in the sample","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":116087,"byte_end":116177,"line_start":555,"line_end":555,"column_start":5,"column_end":95}},{"value":"/ buffer. It also checks that the specified pixel format expects the same number of channels","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":116182,"byte_end":116276,"line_start":556,"line_end":556,"column_start":5,"column_end":99}},{"value":"/ that are present in this buffer. Neither are larger nor a smaller number will be accepted.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":116281,"byte_end":116375,"line_start":557,"line_end":557,"column_start":5,"column_end":99}},{"value":"/ There is no automatic conversion.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":116380,"byte_end":116417,"line_start":558,"line_end":558,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":530},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":118013,"byte_end":118037,"line_start":596,"line_end":596,"column_start":12,"column_end":36},"name":"as_view_with_mut_samples","qualname":"<FlatSamples<Buffer>>::as_view_with_mut_samples","value":"fn <P> (&mut self) -> Result<View<&mut [P::Subpixel], P>, Error>","parent":null,"children":[],"decl_id":null,"docs":" View this buffer but keep mutability at a sample level.","sig":null,"attributes":[{"value":"/ View this buffer but keep mutability at a sample level.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":117048,"byte_end":117107,"line_start":581,"line_end":581,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":117112,"byte_end":117115,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ This is similar to `as_view` but subtly different from `as_view_mut`. The resulting type","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":117120,"byte_end":117212,"line_start":583,"line_end":583,"column_start":5,"column_end":97}},{"value":"/ can be used as a `GenericImage` with the same prior invariants needed as for `as_view`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":117217,"byte_end":117308,"line_start":584,"line_end":584,"column_start":5,"column_end":96}},{"value":"/ It can not be used as a mutable `GenericImage` but does not need channels to be packed in","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":117313,"byte_end":117406,"line_start":585,"line_end":585,"column_start":5,"column_end":98}},{"value":"/ their pixel representation.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":117411,"byte_end":117442,"line_start":586,"line_end":586,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":117447,"byte_end":117450,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ This first ensures that all in-bounds coordinates refer to valid indices in the sample","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":117455,"byte_end":117545,"line_start":588,"line_end":588,"column_start":5,"column_end":95}},{"value":"/ buffer. It also checks that the specified pixel format expects the same number of channels","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":117550,"byte_end":117644,"line_start":589,"line_end":589,"column_start":5,"column_end":99}},{"value":"/ that are present in this buffer. Neither are larger nor a smaller number will be accepted.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":117649,"byte_end":117743,"line_start":590,"line_end":590,"column_start":5,"column_end":99}},{"value":"/ There is no automatic conversion.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":117748,"byte_end":117785,"line_start":591,"line_end":591,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":117790,"byte_end":117793,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ **WARNING**: Note that of course samples may alias, so that the mutable reference returned","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":117798,"byte_end":117892,"line_start":593,"line_end":593,"column_start":5,"column_end":99}},{"value":"/ for one sample can in fact modify other samples as well. Sometimes exactly this is","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":117897,"byte_end":117983,"line_start":594,"line_end":594,"column_start":5,"column_end":91}},{"value":"/ intended.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":117988,"byte_end":118001,"line_start":595,"line_end":595,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":532},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":119400,"byte_end":119411,"line_start":629,"line_end":629,"column_start":12,"column_end":23},"name":"as_view_mut","qualname":"<FlatSamples<Buffer>>::as_view_mut","value":"fn <P> (&mut self) -> Result<ViewMut<&mut [P::Subpixel], P>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Interpret this buffer as a mutable image.","sig":null,"attributes":[{"value":"/ Interpret this buffer as a mutable image.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":118657,"byte_end":118702,"line_start":618,"line_end":618,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":118707,"byte_end":118710,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ To succeed, the pixels in this buffer may not alias each other and the samples of each","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":118715,"byte_end":118805,"line_start":620,"line_end":620,"column_start":5,"column_end":95}},{"value":"/ pixel must be packed (i.e. `channel_stride` is `1`). The number of channels must be","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":118810,"byte_end":118897,"line_start":621,"line_end":621,"column_start":5,"column_end":92}},{"value":"/ consistent with the channel count expected by the pixel format.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":118902,"byte_end":118969,"line_start":622,"line_end":622,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":118974,"byte_end":118977,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ This is similar to an `ImageBuffer` except it is a temporary view that is not normalized as","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":118982,"byte_end":119077,"line_start":624,"line_end":624,"column_start":5,"column_end":100}},{"value":"/ strongly. To get an owning version, consider copying the data into an `ImageBuffer`. This","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":119082,"byte_end":119175,"line_start":625,"line_end":625,"column_start":5,"column_end":98}},{"value":"/ provides many more operations, is possibly faster (if not you may want to open an issue) is","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":119180,"byte_end":119275,"line_start":626,"line_end":626,"column_start":5,"column_end":100}},{"value":"/ generally polished. You can also try to convert this buffer inline, see","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":119280,"byte_end":119355,"line_start":627,"line_end":627,"column_start":5,"column_end":80}},{"value":"/ `ImageBuffer::from_raw`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":119360,"byte_end":119388,"line_start":628,"line_end":628,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":534},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":120408,"byte_end":120416,"line_start":659,"line_end":659,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<FlatSamples<Buffer>>::as_slice","value":"fn <T> (&self) -> &[T]","parent":null,"children":[],"decl_id":null,"docs":" View the samples as a slice.","sig":null,"attributes":[{"value":"/ View the samples as a slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":120184,"byte_end":120216,"line_start":655,"line_end":655,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":120221,"byte_end":120224,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ The slice is not limited to the region of the image and not all sample indices are valid","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":120229,"byte_end":120321,"line_start":657,"line_end":657,"column_start":5,"column_end":97}},{"value":"/ indices into this buffer. See `image_mut_slice` as an alternative.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":120326,"byte_end":120396,"line_start":658,"line_end":658,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":120727,"byte_end":120739,"line_start":667,"line_end":667,"column_start":12,"column_end":24},"name":"as_mut_slice","qualname":"<FlatSamples<Buffer>>::as_mut_slice","value":"fn <T> (&mut self) -> &mut [T]","parent":null,"children":[],"decl_id":null,"docs":" View the samples as a slice.","sig":null,"attributes":[{"value":"/ View the samples as a slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":120503,"byte_end":120535,"line_start":663,"line_end":663,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":120540,"byte_end":120543,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ The slice is not limited to the region of the image and not all sample indices are valid","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":120548,"byte_end":120640,"line_start":665,"line_end":665,"column_start":5,"column_end":97}},{"value":"/ indices into this buffer. See `image_mut_slice` as an alternative.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":120645,"byte_end":120715,"line_start":666,"line_end":666,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":538},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":121170,"byte_end":121181,"line_start":676,"line_end":676,"column_start":12,"column_end":23},"name":"image_slice","qualname":"<FlatSamples<Buffer>>::image_slice","value":"fn <T> (&self) -> Option<&[T]>","parent":null,"children":[],"decl_id":null,"docs":" Return the portion of the buffer that holds sample values.","sig":null,"attributes":[{"value":"/ Return the portion of the buffer that holds sample values.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":120834,"byte_end":120896,"line_start":671,"line_end":671,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":120901,"byte_end":120904,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ This may fail when the coordinates in this image are either out-of-bounds of the underlying","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":120909,"byte_end":121004,"line_start":673,"line_end":673,"column_start":5,"column_end":100}},{"value":"/ buffer or can not be represented. Note that the slice may have holes that do not correspond","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":121009,"byte_end":121104,"line_start":674,"line_end":674,"column_start":5,"column_end":100}},{"value":"/ to any sample in the image represented by it.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":121109,"byte_end":121158,"line_start":675,"line_end":675,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":540},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":121598,"byte_end":121613,"line_start":691,"line_end":691,"column_start":12,"column_end":27},"name":"image_mut_slice","qualname":"<FlatSamples<Buffer>>::image_mut_slice","value":"fn <T> (&mut self) -> Option<&mut [T]>","parent":null,"children":[],"decl_id":null,"docs":" Mutable portion of the buffer that holds sample values.\n","sig":null,"attributes":[{"value":"/ Mutable portion of the buffer that holds sample values.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":121527,"byte_end":121586,"line_start":690,"line_end":690,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":542},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":122267,"byte_end":122282,"line_start":710,"line_end":710,"column_start":12,"column_end":27},"name":"try_into_buffer","qualname":"<FlatSamples<Buffer>>::try_into_buffer","value":"fn <P> (self) -> Result<ImageBuffer<P, Buffer>, (Error, Self)>","parent":null,"children":[],"decl_id":null,"docs":" Move the data into an image buffer.","sig":null,"attributes":[{"value":"/ Move the data into an image buffer.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":121971,"byte_end":122010,"line_start":705,"line_end":705,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":122015,"byte_end":122018,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ This does **not** convert the sample layout. The buffer needs to be in packed row-major form","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":122023,"byte_end":122119,"line_start":707,"line_end":707,"column_start":5,"column_end":101}},{"value":"/ before calling this function. In case of an error, returns the buffer again so that it does","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":122124,"byte_end":122219,"line_start":708,"line_end":708,"column_start":5,"column_end":100}},{"value":"/ not release any allocation.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":122224,"byte_end":122255,"line_start":709,"line_end":709,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":545},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":125118,"byte_end":125128,"line_start":784,"line_end":784,"column_start":12,"column_end":22},"name":"min_length","qualname":"<FlatSamples<Buffer>>::min_length","value":"fn (&self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Get the minimum length of a buffer such that all in-bounds samples have valid indices.","sig":null,"attributes":[{"value":"/ Get the minimum length of a buffer such that all in-bounds samples have valid indices.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":123053,"byte_end":123143,"line_start":733,"line_end":733,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":123148,"byte_end":123151,"line_start":734,"line_end":734,"column_start":5,"column_end":8}},{"value":"/ This method will allow zero strides, allowing compact representations of monochrome images.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":123156,"byte_end":123251,"line_start":735,"line_end":735,"column_start":5,"column_end":100}},{"value":"/ To check that no aliasing occurs, try `check_alias_invariants`. For compact images (no","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":123256,"byte_end":123346,"line_start":736,"line_end":736,"column_start":5,"column_end":95}},{"value":"/ aliasing and no unindexed samples) this is `width*height*channels`. But for both of the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":123351,"byte_end":123442,"line_start":737,"line_end":737,"column_start":5,"column_end":96}},{"value":"/ other cases, the reasoning is slightly more involved.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":123447,"byte_end":123504,"line_start":738,"line_end":738,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":123509,"byte_end":123512,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ # Explanation","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":123517,"byte_end":123534,"line_start":740,"line_end":740,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":123539,"byte_end":123542,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ Note that there is a difference between `min_length` and the index of the sample","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":123547,"byte_end":123631,"line_start":742,"line_end":742,"column_start":5,"column_end":89}},{"value":"/ 'one-past-the-end`. This is due to strides that may be larger than the dimension below.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":123636,"byte_end":123727,"line_start":743,"line_end":743,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":123732,"byte_end":123735,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ ## Example with holes","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":123740,"byte_end":123765,"line_start":745,"line_end":745,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":123770,"byte_end":123773,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ Let's look at an example of a grayscale image with","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":123778,"byte_end":123832,"line_start":747,"line_end":747,"column_start":5,"column_end":59}},{"value":"/ * `width_stride = 1`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":123837,"byte_end":123861,"line_start":748,"line_end":748,"column_start":5,"column_end":29}},{"value":"/ * `width = 2`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":123866,"byte_end":123883,"line_start":749,"line_end":749,"column_start":5,"column_end":22}},{"value":"/ * `height_stride = 3`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":123888,"byte_end":123913,"line_start":750,"line_end":750,"column_start":5,"column_end":30}},{"value":"/ * `height = 2`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":123918,"byte_end":123936,"line_start":751,"line_end":751,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":123941,"byte_end":123944,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":123949,"byte_end":123960,"line_start":753,"line_end":753,"column_start":5,"column_end":16}},{"value":"/ | x x   | x x m | $","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":123965,"byte_end":123988,"line_start":754,"line_end":754,"column_start":5,"column_end":28}},{"value":"/  min_length m ^","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":123993,"byte_end":124012,"line_start":755,"line_end":755,"column_start":5,"column_end":24}},{"value":"/                   ^ one-past-the-end $","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":124017,"byte_end":124059,"line_start":756,"line_end":756,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":124064,"byte_end":124071,"line_start":757,"line_end":757,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":124076,"byte_end":124079,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ The difference is also extreme for empty images with large strides. The one-past-the-end","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":124084,"byte_end":124176,"line_start":759,"line_end":759,"column_start":5,"column_end":97}},{"value":"/ sample index is still as large as the largest of these strides while `min_length = 0`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":124181,"byte_end":124271,"line_start":760,"line_end":760,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":124276,"byte_end":124279,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ ## Example with aliasing","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":124284,"byte_end":124312,"line_start":762,"line_end":762,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":124317,"byte_end":124320,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ The concept gets even more important when you allow samples to alias each other. Here we","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":124325,"byte_end":124417,"line_start":764,"line_end":764,"column_start":5,"column_end":97}},{"value":"/ have the buffer of a small grayscale image where this is the case, this time we will first","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":124422,"byte_end":124516,"line_start":765,"line_end":765,"column_start":5,"column_end":99}},{"value":"/ show the buffer and then the individual rows below.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":124521,"byte_end":124576,"line_start":766,"line_end":766,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":124581,"byte_end":124584,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ * `width_stride = 1`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":124589,"byte_end":124613,"line_start":768,"line_end":768,"column_start":5,"column_end":29}},{"value":"/ * `width = 3`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":124618,"byte_end":124635,"line_start":769,"line_end":769,"column_start":5,"column_end":22}},{"value":"/ * `height_stride = 2`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":124640,"byte_end":124665,"line_start":770,"line_end":770,"column_start":5,"column_end":30}},{"value":"/ * `height = 2`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":124670,"byte_end":124688,"line_start":771,"line_end":771,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":124693,"byte_end":124696,"line_start":772,"line_end":772,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":124701,"byte_end":124712,"line_start":773,"line_end":773,"column_start":5,"column_end":16}},{"value":"/  1 2 3 4 5 m","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":124717,"byte_end":124733,"line_start":774,"line_end":774,"column_start":5,"column_end":21}},{"value":"/ |1 2 3| row one","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":124738,"byte_end":124757,"line_start":775,"line_end":775,"column_start":5,"column_end":24}},{"value":"/     |3 4 5| row two","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":124762,"byte_end":124785,"line_start":776,"line_end":776,"column_start":5,"column_end":28}},{"value":"/            ^ m min_length","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":124790,"byte_end":124819,"line_start":777,"line_end":777,"column_start":5,"column_end":34}},{"value":"/          ^ ??? one-past-the-end","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":124824,"byte_end":124859,"line_start":778,"line_end":778,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":124864,"byte_end":124871,"line_start":779,"line_end":779,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":124876,"byte_end":124879,"line_start":780,"line_end":780,"column_start":5,"column_end":8}},{"value":"/ This time 'one-past-the-end' is not even simply the largest stride times the extent of its","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":124884,"byte_end":124978,"line_start":781,"line_end":781,"column_start":5,"column_end":99}},{"value":"/ dimension. That still points inside the image because `height*height_stride = 4` but also","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":124983,"byte_end":125076,"line_start":782,"line_end":782,"column_start":5,"column_end":98}},{"value":"/ `index_of(1, 2) = 4`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":125081,"byte_end":125106,"line_start":783,"line_end":783,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":546},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":125265,"byte_end":125269,"line_start":789,"line_end":789,"column_start":12,"column_end":16},"name":"fits","qualname":"<FlatSamples<Buffer>>::fits","value":"fn (&self, len: usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a buffer of length `len` is large enough.\n","sig":null,"attributes":[{"value":"/ Check if a buffer of length `len` is large enough.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":125199,"byte_end":125253,"line_start":788,"line_end":788,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":547},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":125690,"byte_end":125709,"line_start":798,"line_end":798,"column_start":12,"column_end":31},"name":"has_aliased_samples","qualname":"<FlatSamples<Buffer>>::has_aliased_samples","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" If there are any samples aliasing each other.","sig":null,"attributes":[{"value":"/ If there are any samples aliasing each other.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":125340,"byte_end":125389,"line_start":793,"line_end":793,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":125394,"byte_end":125397,"line_start":794,"line_end":794,"column_start":5,"column_end":8}},{"value":"/ If this is not the case, it would always be safe to allow mutable access to two different","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":125402,"byte_end":125495,"line_start":795,"line_end":795,"column_start":5,"column_end":98}},{"value":"/ samples at the same time. Otherwise, this operation would need additional checks. When one","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":125500,"byte_end":125594,"line_start":796,"line_end":796,"column_start":5,"column_end":99}},{"value":"/ dimension overflows `usize` with its stride we also consider this aliasing.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":125599,"byte_end":125678,"line_start":797,"line_end":797,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":548},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":126290,"byte_end":126299,"line_start":809,"line_end":809,"column_start":12,"column_end":21},"name":"is_normal","qualname":"<FlatSamples<Buffer>>::is_normal","value":"fn (&self, form: NormalForm) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a buffer fulfills the requirements of a normal form.","sig":null,"attributes":[{"value":"/ Check if a buffer fulfills the requirements of a normal form.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":125780,"byte_end":125845,"line_start":802,"line_end":802,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":125850,"byte_end":125853,"line_start":803,"line_end":803,"column_start":5,"column_end":8}},{"value":"/ Certain conversions have preconditions on the structure of the sample buffer that are not","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":125858,"byte_end":125951,"line_start":804,"line_end":804,"column_start":5,"column_end":98}},{"value":"/ captured (by design) by the type system. These are then checked before the conversion. Such","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":125956,"byte_end":126051,"line_start":805,"line_end":805,"column_start":5,"column_end":100}},{"value":"/ checks can all be done in constant time and will not inspect the buffer content. You can","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":126056,"byte_end":126148,"line_start":806,"line_end":806,"column_start":5,"column_end":97}},{"value":"/ perform these checks yourself when the conversion is not required at this moment but maybe","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":126153,"byte_end":126247,"line_start":807,"line_end":807,"column_start":5,"column_end":99}},{"value":"/ still performed later.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":126252,"byte_end":126278,"line_start":808,"line_end":808,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":549},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":126724,"byte_end":126733,"line_start":818,"line_end":818,"column_start":12,"column_end":21},"name":"in_bounds","qualname":"<FlatSamples<Buffer>>::in_bounds","value":"fn (&self, channel: u8, x: u32, y: u32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check that the pixel and the channel index are in bounds.","sig":null,"attributes":[{"value":"/ Check that the pixel and the channel index are in bounds.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":126382,"byte_end":126443,"line_start":813,"line_end":813,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":126448,"byte_end":126451,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ An in-bound coordinate does not yet guarantee that the corresponding calculation of a","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":126456,"byte_end":126545,"line_start":815,"line_end":815,"column_start":5,"column_end":94}},{"value":"/ buffer index does not overflow. However, if such a buffer large enough to hold all samples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":126550,"byte_end":126644,"line_start":816,"line_end":816,"column_start":5,"column_end":99}},{"value":"/ actually exists in memory, this porperty of course follows.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":126649,"byte_end":126712,"line_start":817,"line_end":817,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":126983,"byte_end":126988,"line_start":825,"line_end":825,"column_start":12,"column_end":17},"name":"index","qualname":"<FlatSamples<Buffer>>::index","value":"fn (&self, channel: u8, x: u32, y: u32) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Resolve the index of a particular sample.","sig":null,"attributes":[{"value":"/ Resolve the index of a particular sample.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":126836,"byte_end":126881,"line_start":822,"line_end":822,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":126886,"byte_end":126889,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ `None` if the index is outside the bounds or does not fit into a `usize`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":126894,"byte_end":126971,"line_start":824,"line_end":824,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":551},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":127467,"byte_end":127488,"line_start":834,"line_end":834,"column_start":12,"column_end":33},"name":"index_ignoring_bounds","qualname":"<FlatSamples<Buffer>>::index_ignoring_bounds","value":"fn (&self, channel: usize, x: usize, y: usize) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Get the theoretical position of sample (x, y, channel).","sig":null,"attributes":[{"value":"/ Get the theoretical position of sample (x, y, channel).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":127096,"byte_end":127155,"line_start":829,"line_end":829,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":127160,"byte_end":127163,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ The 'check' is for overflow during index calculation, not that it is contained in the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":127168,"byte_end":127257,"line_start":831,"line_end":831,"column_start":5,"column_end":94}},{"value":"/ image. Two samples may return the same index, even when one of them is out of bounds. This","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":127262,"byte_end":127356,"line_start":832,"line_end":832,"column_start":5,"column_end":99}},{"value":"/ happens when all strides are `0`, i.e. the image is an arbitrarily large monochrome image.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":127361,"byte_end":127455,"line_start":833,"line_end":833,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":552},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":127920,"byte_end":127935,"line_start":843,"line_end":843,"column_start":12,"column_end":27},"name":"in_bounds_index","qualname":"<FlatSamples<Buffer>>::in_bounds_index","value":"fn (&self, channel: u8, x: u32, y: u32) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get an index provided it is inbouds.","sig":null,"attributes":[{"value":"/ Get an index provided it is inbouds.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":127619,"byte_end":127659,"line_start":838,"line_end":838,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":127664,"byte_end":127667,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/ Assumes that the image is backed by some sufficiently large buffer. Then computation can","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":127672,"byte_end":127764,"line_start":840,"line_end":840,"column_start":5,"column_end":97}},{"value":"/ not overflow as we could represent the maximum coordinate. Since overflow is defined either","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":127769,"byte_end":127864,"line_start":841,"line_end":841,"column_start":5,"column_end":100}},{"value":"/ way, this method can not be unsafe.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":127869,"byte_end":127908,"line_start":842,"line_end":842,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":553},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":128370,"byte_end":128379,"line_start":852,"line_end":852,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<FlatSamples<Buffer>>::shrink_to","value":"fn (&mut self, channels: u8, width: u32, height: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shrink the image to the minimum of current and given extents.","sig":null,"attributes":[{"value":"/ Shrink the image to the minimum of current and given extents.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":128045,"byte_end":128110,"line_start":847,"line_end":847,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":128115,"byte_end":128118,"line_start":848,"line_end":848,"column_start":5,"column_end":8}},{"value":"/ This does not modify the strides, so that the resulting sample buffer may have holes","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":128123,"byte_end":128211,"line_start":849,"line_end":849,"column_start":5,"column_end":93}},{"value":"/ created by the shrinking operation. Shrinking could also lead to an non-aliasing image when","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":128216,"byte_end":128311,"line_start":850,"line_end":850,"column_start":5,"column_end":100}},{"value":"/ samples had aliased each other before.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":128316,"byte_end":128358,"line_start":851,"line_end":851,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":3247},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":129198,"byte_end":129202,"line_start":872,"line_end":872,"column_start":12,"column_end":16},"name":"View","qualname":"::flat::View","value":"View {  }","parent":null,"children":[{"krate":0,"index":3250},{"krate":0,"index":3251}],"decl_id":null,"docs":" A flat buffer that can be used as an image view.","sig":null,"attributes":[{"value":"/ A flat buffer that can be used as an image view.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":128496,"byte_end":128548,"line_start":857,"line_end":857,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":128549,"byte_end":128552,"line_start":858,"line_end":858,"column_start":1,"column_end":4}},{"value":"/ This is a nearly trivial wrapper around a buffer but at least sanitizes by checking the buffer","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":128553,"byte_end":128651,"line_start":859,"line_end":859,"column_start":1,"column_end":99}},{"value":"/ length first and constraining the pixel type.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":128652,"byte_end":128701,"line_start":860,"line_end":860,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":128702,"byte_end":128705,"line_start":861,"line_end":861,"column_start":1,"column_end":4}},{"value":"/ Note that this does not eliminate panics as the `AsRef<[T]>` implementation of `Buffer` may be","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":128706,"byte_end":128804,"line_start":862,"line_end":862,"column_start":1,"column_end":99}},{"value":"/ unreliable, i.e. return different buffers at different times. This of course is a non-issue for","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":128805,"byte_end":128904,"line_start":863,"line_end":863,"column_start":1,"column_end":100}},{"value":"/ all common collections where the bounds check once must be enough.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":128905,"byte_end":128975,"line_start":864,"line_end":864,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":128976,"byte_end":128979,"line_start":865,"line_end":865,"column_start":1,"column_end":4}},{"value":"/ # Inner invariants","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":128980,"byte_end":129002,"line_start":866,"line_end":866,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":129003,"byte_end":129006,"line_start":867,"line_end":867,"column_start":1,"column_end":4}},{"value":"/ * For all indices inside bounds, the corresponding index is valid in the buffer","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":129007,"byte_end":129090,"line_start":868,"line_end":868,"column_start":1,"column_end":84}},{"value":"/ * `P::channel_count()` agrees with `self.inner.layout.channels`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":129091,"byte_end":129158,"line_start":869,"line_end":869,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":129159,"byte_end":129162,"line_start":870,"line_end":870,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":3260},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":130048,"byte_end":130055,"line_start":895,"line_end":895,"column_start":12,"column_end":19},"name":"ViewMut","qualname":"::flat::ViewMut","value":"ViewMut {  }","parent":null,"children":[{"krate":0,"index":3263},{"krate":0,"index":3264}],"decl_id":null,"docs":" A mutable owning version of a flat buffer.","sig":null,"attributes":[{"value":"/ A mutable owning version of a flat buffer.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":129326,"byte_end":129372,"line_start":880,"line_end":880,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":129373,"byte_end":129376,"line_start":881,"line_end":881,"column_start":1,"column_end":4}},{"value":"/ While this wraps a buffer similar to `ImageBuffer`, this is mostly intended as a utility. The","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":129377,"byte_end":129474,"line_start":882,"line_end":882,"column_start":1,"column_end":98}},{"value":"/ library endorsed normalized representation is still `ImageBuffer`. Also, the implementation of","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":129475,"byte_end":129573,"line_start":883,"line_end":883,"column_start":1,"column_end":99}},{"value":"/ `AsMut<[P::Subpixel]>` must always yield the same buffer. Therefore there is no public way to","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":129574,"byte_end":129671,"line_start":884,"line_end":884,"column_start":1,"column_end":98}},{"value":"/ construct this with an owning buffer.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":129672,"byte_end":129713,"line_start":885,"line_end":885,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":129714,"byte_end":129717,"line_start":886,"line_end":886,"column_start":1,"column_end":4}},{"value":"/ # Inner invariants","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":129718,"byte_end":129740,"line_start":887,"line_end":887,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":129741,"byte_end":129744,"line_start":888,"line_end":888,"column_start":1,"column_end":4}},{"value":"/ * For all indices inside bounds, the corresponding index is valid in the buffer","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":129745,"byte_end":129828,"line_start":889,"line_end":889,"column_start":1,"column_end":84}},{"value":"/ * There is no aliasing of samples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":129829,"byte_end":129866,"line_start":890,"line_end":890,"column_start":1,"column_end":38}},{"value":"/ * The samples are packed, i.e. `self.inner.layout.sample_stride == 1`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":129867,"byte_end":129940,"line_start":891,"line_end":891,"column_start":1,"column_end":74}},{"value":"/ * `P::channel_count()` agrees with `self.inner.layout.channels`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":129941,"byte_end":130008,"line_start":892,"line_end":892,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":130009,"byte_end":130012,"line_start":893,"line_end":893,"column_start":1,"column_end":4}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3274},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":130763,"byte_end":130771,"line_start":914,"line_end":914,"column_start":5,"column_end":13},"name":"TooLarge","qualname":"::flat::Error::TooLarge","value":"Error::TooLarge","parent":{"krate":0,"index":3273},"children":[],"decl_id":null,"docs":" The represented image was too large.","sig":null,"attributes":[{"value":"/ The represented image was too large.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":130640,"byte_end":130680,"line_start":911,"line_end":911,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":130685,"byte_end":130688,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/ The optional value denotes a possibly accepted maximal bound.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":130693,"byte_end":130758,"line_start":913,"line_end":913,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3276},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":130928,"byte_end":130946,"line_start":919,"line_end":919,"column_start":5,"column_end":23},"name":"NormalFormRequired","qualname":"::flat::Error::NormalFormRequired","value":"Error::NormalFormRequired(NormalForm)","parent":{"krate":0,"index":3273},"children":[],"decl_id":null,"docs":" The represented image can not use this representation.","sig":null,"attributes":[{"value":"/ The represented image can not use this representation.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":130778,"byte_end":130836,"line_start":916,"line_end":916,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":130841,"byte_end":130844,"line_start":917,"line_end":917,"column_start":5,"column_end":8}},{"value":"/ Has an additional value of the normalized form that would be accepted.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":130849,"byte_end":130923,"line_start":918,"line_end":918,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3279},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":131555,"byte_end":131565,"line_start":930,"line_end":930,"column_start":5,"column_end":15},"name":"WrongColor","qualname":"::flat::Error::WrongColor","value":"Error::WrongColor(ColorType)","parent":{"krate":0,"index":3273},"children":[],"decl_id":null,"docs":" The color format did not match the channel count.","sig":null,"attributes":[{"value":"/ The color format did not match the channel count.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":130965,"byte_end":131018,"line_start":921,"line_end":921,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":131023,"byte_end":131026,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ In some cases you might be able to fix this by lowering the reported pixel count of the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":131031,"byte_end":131122,"line_start":923,"line_end":923,"column_start":5,"column_end":96}},{"value":"/ buffer without touching the strides.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":131127,"byte_end":131167,"line_start":924,"line_end":924,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":131172,"byte_end":131175,"line_start":925,"line_end":925,"column_start":5,"column_end":8}},{"value":"/ In very special circumstances you *may* do the opposite. This is **VERY** dangerous but not","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":131180,"byte_end":131275,"line_start":926,"line_end":926,"column_start":5,"column_end":100}},{"value":"/ directly memory unsafe although that will likely alias pixels. One scenario is when you","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":131280,"byte_end":131371,"line_start":927,"line_end":927,"column_start":5,"column_end":96}},{"value":"/ want to construct an `Rgba` image but have only 3 bytes per pixel and for some reason don't","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":131376,"byte_end":131471,"line_start":928,"line_end":928,"column_start":5,"column_end":100}},{"value":"/ care about the value of the alpha channel even though you need `Rgba`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":131476,"byte_end":131550,"line_start":929,"line_end":929,"column_start":5,"column_end":79}}]},{"kind":"Enum","id":{"krate":0,"index":3273},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":130628,"byte_end":130633,"line_start":910,"line_end":910,"column_start":10,"column_end":15},"name":"Error","qualname":"::flat::Error","value":"Error::{TooLarge, NormalFormRequired, WrongColor}","parent":null,"children":[{"krate":0,"index":3274},{"krate":0,"index":3276},{"krate":0,"index":3279}],"decl_id":null,"docs":" Denotes invalid flat sample buffers when trying to convert to stricter types.","sig":null,"attributes":[{"value":"/ Denotes invalid flat sample buffers when trying to convert to stricter types.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":130179,"byte_end":130260,"line_start":903,"line_end":903,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":130261,"byte_end":130264,"line_start":904,"line_end":904,"column_start":1,"column_end":4}},{"value":"/ The biggest use case being `ImageBuffer` which expects closely packed","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":130265,"byte_end":130338,"line_start":905,"line_end":905,"column_start":1,"column_end":74}},{"value":"/ samples in a row major matrix representation. But this error type may be","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":130339,"byte_end":130415,"line_start":906,"line_end":906,"column_start":1,"column_end":77}},{"value":"/ resused for other import functions. A more versatile user may also try to","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":130416,"byte_end":130493,"line_start":907,"line_end":907,"column_start":1,"column_end":78}},{"value":"/ correct the underlying representation depending on the error variant.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":130494,"byte_end":130567,"line_start":908,"line_end":908,"column_start":1,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3298},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":132064,"byte_end":132073,"line_start":943,"line_end":943,"column_start":5,"column_end":14},"name":"Unaliased","qualname":"::flat::NormalForm::Unaliased","value":"NormalForm::Unaliased","parent":{"krate":0,"index":3297},"children":[],"decl_id":null,"docs":" No pixel aliases another.","sig":null,"attributes":[{"value":"/ No pixel aliases another.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":131841,"byte_end":131870,"line_start":939,"line_end":939,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":131875,"byte_end":131878,"line_start":940,"line_end":940,"column_start":5,"column_end":8}},{"value":"/ Unaliased also guarantees that all index calculations in the image bounds using","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":131883,"byte_end":131966,"line_start":941,"line_end":941,"column_start":5,"column_end":88}},{"value":"/ `dim_index*dim_stride` (such as `x*width_stride + y*height_stride`) do not overflow.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":131971,"byte_end":132059,"line_start":942,"line_end":942,"column_start":5,"column_end":93}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3300},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":132303,"byte_end":132314,"line_start":949,"line_end":949,"column_start":5,"column_end":16},"name":"PixelPacked","qualname":"::flat::NormalForm::PixelPacked","value":"NormalForm::PixelPacked","parent":{"krate":0,"index":3297},"children":[],"decl_id":null,"docs":" At least pixels are packed.","sig":null,"attributes":[{"value":"/ At least pixels are packed.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":132080,"byte_end":132111,"line_start":945,"line_end":945,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":132116,"byte_end":132119,"line_start":946,"line_end":946,"column_start":5,"column_end":8}},{"value":"/ Images of these types can wrap `[T]`-slices into the standard color types. This is a","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":132124,"byte_end":132212,"line_start":947,"line_end":947,"column_start":5,"column_end":93}},{"value":"/ precondition for `GenericImage` which requires by-reference access to pixels.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":132217,"byte_end":132298,"line_start":948,"line_end":948,"column_start":5,"column_end":86}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3302},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":132598,"byte_end":132609,"line_start":956,"line_end":956,"column_start":5,"column_end":16},"name":"ImagePacked","qualname":"::flat::NormalForm::ImagePacked","value":"NormalForm::ImagePacked","parent":{"krate":0,"index":3297},"children":[],"decl_id":null,"docs":" All samples are packed.","sig":null,"attributes":[{"value":"/ All samples are packed.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":132321,"byte_end":132348,"line_start":951,"line_end":951,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":132353,"byte_end":132356,"line_start":952,"line_end":952,"column_start":5,"column_end":8}},{"value":"/ This is orthogonal to `PixelPacked`. It requires that there are no holes in the image but","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":132361,"byte_end":132454,"line_start":953,"line_end":953,"column_start":5,"column_end":98}},{"value":"/ it is not necessary that the pixel samples themselves are adjacent. An example of this","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":132459,"byte_end":132549,"line_start":954,"line_end":954,"column_start":5,"column_end":95}},{"value":"/ behaviour is a planar image layout.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":132554,"byte_end":132593,"line_start":955,"line_end":955,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3304},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":132819,"byte_end":132833,"line_start":962,"line_end":962,"column_start":5,"column_end":19},"name":"RowMajorPacked","qualname":"::flat::NormalForm::RowMajorPacked","value":"NormalForm::RowMajorPacked","parent":{"krate":0,"index":3297},"children":[],"decl_id":null,"docs":" The samples are in row-major form and all samples are packed.","sig":null,"attributes":[{"value":"/ The samples are in row-major form and all samples are packed.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":132616,"byte_end":132681,"line_start":958,"line_end":958,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":132686,"byte_end":132689,"line_start":959,"line_end":959,"column_start":5,"column_end":8}},{"value":"/ In addition to `PixelPacked` and `ImagePacked` this also asserts that the pixel matrix is","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":132694,"byte_end":132787,"line_start":960,"line_end":960,"column_start":5,"column_end":98}},{"value":"/ in row-major form.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":132792,"byte_end":132814,"line_start":961,"line_end":961,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3306},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":133049,"byte_end":133066,"line_start":968,"line_end":968,"column_start":5,"column_end":22},"name":"ColumnMajorPacked","qualname":"::flat::NormalForm::ColumnMajorPacked","value":"NormalForm::ColumnMajorPacked","parent":{"krate":0,"index":3297},"children":[],"decl_id":null,"docs":" The samples are in column-major form and all samples are packed.","sig":null,"attributes":[{"value":"/ The samples are in column-major form and all samples are packed.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":132840,"byte_end":132908,"line_start":964,"line_end":964,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":132913,"byte_end":132916,"line_start":965,"line_end":965,"column_start":5,"column_end":8}},{"value":"/ In addition to `PixelPacked` and `ImagePacked` this also asserts that the pixel matrix is","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":132921,"byte_end":133014,"line_start":966,"line_end":966,"column_start":5,"column_end":98}},{"value":"/ in column-major form.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":133019,"byte_end":133044,"line_start":967,"line_end":967,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":3297},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":131824,"byte_end":131834,"line_start":938,"line_end":938,"column_start":10,"column_end":20},"name":"NormalForm","qualname":"::flat::NormalForm","value":"NormalForm::{Unaliased, PixelPacked, ImagePacked, RowMajorPacked, ColumnMajorPacked}","parent":null,"children":[{"krate":0,"index":3298},{"krate":0,"index":3300},{"krate":0,"index":3302},{"krate":0,"index":3304},{"krate":0,"index":3306}],"decl_id":null,"docs":" Different normal forms of buffers.","sig":null,"attributes":[{"value":"/ Different normal forms of buffers.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":131581,"byte_end":131619,"line_start":933,"line_end":933,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":131620,"byte_end":131623,"line_start":934,"line_end":934,"column_start":1,"column_end":4}},{"value":"/ A normal form is an unaliased buffer with some additional constraints.  The `ÌmageBuffer` uses","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":131624,"byte_end":131723,"line_start":935,"line_end":935,"column_start":1,"column_end":99}},{"value":"/ row major form with packed samples.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":131724,"byte_end":131763,"line_start":936,"line_end":936,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":557},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":133274,"byte_end":133284,"line_start":978,"line_end":978,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<View<Buffer, P>>::into_inner","value":"fn (self) -> FlatSamples<Buffer>","parent":null,"children":[],"decl_id":null,"docs":" Take out the sample buffer.","sig":null,"attributes":[{"value":"/ Take out the sample buffer.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":133155,"byte_end":133186,"line_start":975,"line_end":975,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":133191,"byte_end":133194,"line_start":976,"line_end":976,"column_start":5,"column_end":8}},{"value":"/ Gives up the normalization invariants on the buffer format.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":133199,"byte_end":133262,"line_start":977,"line_end":977,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":558},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":133767,"byte_end":133771,"line_start":988,"line_end":988,"column_start":12,"column_end":16},"name":"flat","qualname":"<View<Buffer, P>>::flat","value":"fn (&self) -> &FlatSamples<Buffer>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference on the inner sample descriptor.","sig":null,"attributes":[{"value":"/ Get a reference on the inner sample descriptor.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":133346,"byte_end":133397,"line_start":982,"line_end":982,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":133402,"byte_end":133405,"line_start":983,"line_end":983,"column_start":5,"column_end":8}},{"value":"/ There is no mutable counterpart as modifying the buffer format, including strides and","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":133410,"byte_end":133499,"line_start":984,"line_end":984,"column_start":5,"column_end":94}},{"value":"/ lengths, could invalidate the accessibility invariants of the `View`. It is not specified","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":133504,"byte_end":133597,"line_start":985,"line_end":985,"column_start":5,"column_end":98}},{"value":"/ if the inner buffer is the same as the buffer of the image from which this view was","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":133602,"byte_end":133689,"line_start":986,"line_end":986,"column_start":5,"column_end":92}},{"value":"/ created. It might have been truncated as an optimization.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":133694,"byte_end":133755,"line_start":987,"line_end":987,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":559},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":134050,"byte_end":134057,"line_start":996,"line_end":996,"column_start":12,"column_end":19},"name":"samples","qualname":"<View<Buffer, P>>::samples","value":"fn (&self) -> &Buffer","parent":null,"children":[],"decl_id":null,"docs":" Get a reference on the inner buffer.","sig":null,"attributes":[{"value":"/ Get a reference on the inner buffer.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":133836,"byte_end":133876,"line_start":992,"line_end":992,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":133881,"byte_end":133884,"line_start":993,"line_end":993,"column_start":5,"column_end":8}},{"value":"/ There is no mutable counter part since it is not intended to allow you to reassign the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":133889,"byte_end":133979,"line_start":994,"line_end":994,"column_start":5,"column_end":95}},{"value":"/ buffer or otherwise change its size or properties.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":133984,"byte_end":134038,"line_start":995,"line_end":995,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":560},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":134376,"byte_end":134386,"line_start":1004,"line_end":1004,"column_start":12,"column_end":22},"name":"get_sample","qualname":"<View<Buffer, P>>::get_sample","value":"fn (&self, channel: u8, x: u32, y: u32) -> Option<&P::Subpixel>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to a selected subpixel if it is in-bounds.","sig":null,"attributes":[{"value":"/ Get a reference to a selected subpixel if it is in-bounds.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":134117,"byte_end":134179,"line_start":1000,"line_end":1000,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":134184,"byte_end":134187,"line_start":1001,"line_end":1001,"column_start":5,"column_end":8}},{"value":"/ This method will return `None` when the sample is out-of-bounds. All errors that could","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":134192,"byte_end":134282,"line_start":1002,"line_end":1002,"column_start":5,"column_end":95}},{"value":"/ occur due to overflow have been eliminated while construction the `View`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":134287,"byte_end":134364,"line_start":1003,"line_end":1003,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":561},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":135260,"byte_end":135274,"line_start":1022,"line_end":1022,"column_start":12,"column_end":26},"name":"get_mut_sample","qualname":"<View<Buffer, P>>::get_mut_sample","value":"fn (&mut self, channel: u8, x: u32, y: u32) -> Option<&mut P::Subpixel>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to a selected subpixel if it is in-bounds.","sig":null,"attributes":[{"value":"/ Get a mutable reference to a selected subpixel if it is in-bounds.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":134718,"byte_end":134788,"line_start":1014,"line_end":1014,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":134793,"byte_end":134796,"line_start":1015,"line_end":1015,"column_start":5,"column_end":8}},{"value":"/ This is relevant only when constructed with `FlatSamples::as_view_with_mut_samples`.  This","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":134801,"byte_end":134895,"line_start":1016,"line_end":1016,"column_start":5,"column_end":99}},{"value":"/ method will return `None` when the sample is out-of-bounds. All errors that could occur due","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":134900,"byte_end":134995,"line_start":1017,"line_end":1017,"column_start":5,"column_end":100}},{"value":"/ to overflow have been eliminated while construction the `View`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":135000,"byte_end":135067,"line_start":1018,"line_end":1018,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":135072,"byte_end":135075,"line_start":1019,"line_end":1019,"column_start":5,"column_end":8}},{"value":"/ **WARNING**: Note that of course samples may alias, so that the mutable reference returned","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":135080,"byte_end":135174,"line_start":1020,"line_end":1020,"column_start":5,"column_end":99}},{"value":"/ here can in fact modify more than the coordinate in the argument.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":135179,"byte_end":135248,"line_start":1021,"line_end":1021,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":562},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":135851,"byte_end":135861,"line_start":1037,"line_end":1037,"column_start":12,"column_end":22},"name":"min_length","qualname":"<View<Buffer, P>>::min_length","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the minimum length of a buffer such that all in-bounds samples have valid indices.","sig":null,"attributes":[{"value":"/ Get the minimum length of a buffer such that all in-bounds samples have valid indices.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":135669,"byte_end":135759,"line_start":1034,"line_end":1034,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":135764,"byte_end":135767,"line_start":1035,"line_end":1035,"column_start":5,"column_end":8}},{"value":"/ See `FlatSamples::min_length`. This method will always succeed.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":135772,"byte_end":135839,"line_start":1036,"line_end":1036,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":563},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":136195,"byte_end":136206,"line_start":1045,"line_end":1045,"column_start":12,"column_end":23},"name":"image_slice","qualname":"<View<Buffer, P>>::image_slice","value":"fn (&self) -> &[P::Subpixel]","parent":null,"children":[],"decl_id":null,"docs":" Return the portion of the buffer that holds sample values.","sig":null,"attributes":[{"value":"/ Return the portion of the buffer that holds sample values.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":135932,"byte_end":135994,"line_start":1041,"line_end":1041,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":135999,"byte_end":136002,"line_start":1042,"line_end":1042,"column_start":5,"column_end":8}},{"value":"/ While this can not fail–the validity of all coordinates has been validated during the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":136007,"byte_end":136098,"line_start":1043,"line_end":1043,"column_start":5,"column_end":94}},{"value":"/ conversion from `FlatSamples`–the resulting slice may still contain holes.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":136103,"byte_end":136183,"line_start":1044,"line_end":1044,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":136663,"byte_end":136678,"line_start":1054,"line_end":1054,"column_start":12,"column_end":27},"name":"image_mut_slice","qualname":"<View<Buffer, P>>::image_mut_slice","value":"fn (&mut self) -> &mut [P::Subpixel]","parent":null,"children":[],"decl_id":null,"docs":" Return the mutable portion of the buffer that holds sample values.","sig":null,"attributes":[{"value":"/ Return the mutable portion of the buffer that holds sample values.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":136299,"byte_end":136369,"line_start":1049,"line_end":1049,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":136374,"byte_end":136377,"line_start":1050,"line_end":1050,"column_start":5,"column_end":8}},{"value":"/ This is relevant only when constructed with `FlatSamples::as_view_with_mut_samples`. While","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":136382,"byte_end":136476,"line_start":1051,"line_end":1051,"column_start":5,"column_end":99}},{"value":"/ this can not fail–the validity of all coordinates has been validated during the conversion","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":136481,"byte_end":136577,"line_start":1052,"line_end":1052,"column_start":5,"column_end":99}},{"value":"/ from `FlatSamples`–the resulting slice may still contain holes.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":136582,"byte_end":136651,"line_start":1053,"line_end":1053,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":137201,"byte_end":137210,"line_start":1066,"line_end":1066,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<View<Buffer, P>>::shrink_to","value":"fn (&mut self, width: u32, height: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shrink the inner image.","sig":null,"attributes":[{"value":"/ Shrink the inner image.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":136871,"byte_end":136898,"line_start":1061,"line_end":1061,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":136903,"byte_end":136906,"line_start":1062,"line_end":1062,"column_start":5,"column_end":8}},{"value":"/ The new dimensions will be the minimum of the previous dimensions. Since the set of","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":136911,"byte_end":136998,"line_start":1063,"line_end":1063,"column_start":5,"column_end":92}},{"value":"/ in-bounds pixels afterwards is a subset of the current ones, this is allowed on a `View`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":137003,"byte_end":137096,"line_start":1064,"line_end":1064,"column_start":5,"column_end":98}},{"value":"/ Note that you can not change the number of channels as an intrinsic property of `P`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":137101,"byte_end":137189,"line_start":1065,"line_end":1065,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":138195,"byte_end":138206,"line_start":1088,"line_end":1088,"column_start":12,"column_end":23},"name":"try_upgrade","qualname":"<View<Buffer, P>>::try_upgrade","value":"fn (self) -> Result<ViewMut<Buffer, P>, (Error, Self)>","parent":null,"children":[],"decl_id":null,"docs":" Try to convert this into an image with mutable pixels.","sig":null,"attributes":[{"value":"/ Try to convert this into an image with mutable pixels.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":137365,"byte_end":137423,"line_start":1071,"line_end":1071,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":137428,"byte_end":137431,"line_start":1072,"line_end":1072,"column_start":5,"column_end":8}},{"value":"/ The resulting image implements `GenericImage` in addition to `GenericImageView`. While this","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":137436,"byte_end":137531,"line_start":1073,"line_end":1073,"column_start":5,"column_end":100}},{"value":"/ has mutable samples, it does not enforce that pixel can not alias and that samples are","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":137536,"byte_end":137626,"line_start":1074,"line_end":1074,"column_start":5,"column_end":95}},{"value":"/ packed enough for a mutable pixel reference. This is slightly cheaper than the chain","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":137631,"byte_end":137719,"line_start":1075,"line_end":1075,"column_start":5,"column_end":93}},{"value":"/ `self.into_inner().as_view_mut()` and keeps the `View` alive on failure.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":137724,"byte_end":137800,"line_start":1076,"line_end":1076,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":137805,"byte_end":137808,"line_start":1077,"line_end":1077,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":137813,"byte_end":137820,"line_start":1078,"line_end":1078,"column_start":5,"column_end":12}},{"value":"/ # use image::{Rgb, RgbImage};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":137825,"byte_end":137858,"line_start":1079,"line_end":1079,"column_start":5,"column_end":38}},{"value":"/ let mut buffer = RgbImage::new(480, 640).into_flat_samples();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":137863,"byte_end":137928,"line_start":1080,"line_end":1080,"column_start":5,"column_end":70}},{"value":"/ let view = buffer.as_view_with_mut_samples::<Rgb<u8>>().unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":137933,"byte_end":138002,"line_start":1081,"line_end":1081,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":138007,"byte_end":138010,"line_start":1082,"line_end":1082,"column_start":5,"column_end":8}},{"value":"/ // Inspect some pixels, …","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":138015,"byte_end":138046,"line_start":1083,"line_end":1083,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":138051,"byte_end":138054,"line_start":1084,"line_end":1084,"column_start":5,"column_end":8}},{"value":"/ // Doesn't fail because it was originally an `RgbImage`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":138059,"byte_end":138119,"line_start":1085,"line_end":1085,"column_start":5,"column_end":65}},{"value":"/ let view_mut = view.try_upgrade().unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":138124,"byte_end":138171,"line_start":1086,"line_end":1086,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":138176,"byte_end":138183,"line_start":1087,"line_end":1087,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":570},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":138847,"byte_end":138857,"line_start":1110,"line_end":1110,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<ViewMut<Buffer, P>>::into_inner","value":"fn (self) -> FlatSamples<Buffer>","parent":null,"children":[],"decl_id":null,"docs":" Take out the sample buffer.","sig":null,"attributes":[{"value":"/ Take out the sample buffer.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":138728,"byte_end":138759,"line_start":1107,"line_end":1107,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":138764,"byte_end":138767,"line_start":1108,"line_end":1108,"column_start":5,"column_end":8}},{"value":"/ Gives up the normalization invariants on the buffer format.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":138772,"byte_end":138835,"line_start":1109,"line_end":1109,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":571},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":139341,"byte_end":139345,"line_start":1120,"line_end":1120,"column_start":12,"column_end":16},"name":"flat","qualname":"<ViewMut<Buffer, P>>::flat","value":"fn (&self) -> &FlatSamples<Buffer>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference on the sample buffer descriptor.","sig":null,"attributes":[{"value":"/ Get a reference on the sample buffer descriptor.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":138919,"byte_end":138971,"line_start":1114,"line_end":1114,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":138976,"byte_end":138979,"line_start":1115,"line_end":1115,"column_start":5,"column_end":8}},{"value":"/ There is no mutable counterpart as modifying the buffer format, including strides and","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":138984,"byte_end":139073,"line_start":1116,"line_end":1116,"column_start":5,"column_end":94}},{"value":"/ lengths, could invalidate the accessibility invariants of the `View`. It is not specified","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":139078,"byte_end":139171,"line_start":1117,"line_end":1117,"column_start":5,"column_end":98}},{"value":"/ if the inner buffer is the same as the buffer of the image from which this view was","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":139176,"byte_end":139263,"line_start":1118,"line_end":1118,"column_start":5,"column_end":92}},{"value":"/ created. It might have been truncated as an optimization.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":139268,"byte_end":139329,"line_start":1119,"line_end":1119,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":572},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":139718,"byte_end":139725,"line_start":1129,"line_end":1129,"column_start":12,"column_end":19},"name":"samples","qualname":"<ViewMut<Buffer, P>>::samples","value":"fn (&self) -> &Buffer","parent":null,"children":[],"decl_id":null,"docs":" Get a reference on the inner buffer.","sig":null,"attributes":[{"value":"/ Get a reference on the inner buffer.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":139410,"byte_end":139450,"line_start":1124,"line_end":1124,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":139455,"byte_end":139458,"line_start":1125,"line_end":1125,"column_start":5,"column_end":8}},{"value":"/ There is no mutable counter part since it is not intended to allow you to reassign the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":139463,"byte_end":139553,"line_start":1126,"line_end":1126,"column_start":5,"column_end":95}},{"value":"/ buffer or otherwise change its size or properties. However, its contents can be accessed","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":139558,"byte_end":139650,"line_start":1127,"line_end":1127,"column_start":5,"column_end":97}},{"value":"/ mutable through a slice with `image_mut_slice`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":139655,"byte_end":139706,"line_start":1128,"line_end":1128,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":573},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":139967,"byte_end":139977,"line_start":1136,"line_end":1136,"column_start":12,"column_end":22},"name":"min_length","qualname":"<ViewMut<Buffer, P>>::min_length","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the minimum length of a buffer such that all in-bounds samples have valid indices.","sig":null,"attributes":[{"value":"/ Get the minimum length of a buffer such that all in-bounds samples have valid indices.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":139785,"byte_end":139875,"line_start":1133,"line_end":1133,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":139880,"byte_end":139883,"line_start":1134,"line_end":1134,"column_start":5,"column_end":8}},{"value":"/ See `FlatSamples::min_length`. This method will always succeed.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":139888,"byte_end":139955,"line_start":1135,"line_end":1135,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":574},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":140288,"byte_end":140298,"line_start":1144,"line_end":1144,"column_start":12,"column_end":22},"name":"get_sample","qualname":"<ViewMut<Buffer, P>>::get_sample","value":"fn (&self, channel: u8, x: u32, y: u32) -> Option<&P::Subpixel>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to a selected subpixel.","sig":null,"attributes":[{"value":"/ Get a reference to a selected subpixel.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":140048,"byte_end":140091,"line_start":1140,"line_end":1140,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":140096,"byte_end":140099,"line_start":1141,"line_end":1141,"column_start":5,"column_end":8}},{"value":"/ This method will return `None` when the sample is out-of-bounds. All errors that could","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":140104,"byte_end":140194,"line_start":1142,"line_end":1142,"column_start":5,"column_end":95}},{"value":"/ occur due to overflow have been eliminated while construction the `View`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":140199,"byte_end":140276,"line_start":1143,"line_end":1143,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":575},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":140923,"byte_end":140937,"line_start":1160,"line_end":1160,"column_start":12,"column_end":26},"name":"get_mut_sample","qualname":"<ViewMut<Buffer, P>>::get_mut_sample","value":"fn (&mut self, channel: u8, x: u32, y: u32) -> Option<&mut P::Subpixel>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to a selected sample.","sig":null,"attributes":[{"value":"/ Get a mutable reference to a selected sample.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":140677,"byte_end":140726,"line_start":1156,"line_end":1156,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":140731,"byte_end":140734,"line_start":1157,"line_end":1157,"column_start":5,"column_end":8}},{"value":"/ This method will return `None` when the sample is out-of-bounds. All errors that could","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":140739,"byte_end":140829,"line_start":1158,"line_end":1158,"column_start":5,"column_end":95}},{"value":"/ occur due to overflow have been eliminated while construction the `View`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":140834,"byte_end":140911,"line_start":1159,"line_end":1159,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":576},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":141548,"byte_end":141559,"line_start":1174,"line_end":1174,"column_start":12,"column_end":23},"name":"image_slice","qualname":"<ViewMut<Buffer, P>>::image_slice","value":"fn (&self) -> &[P::Subpixel]","parent":null,"children":[],"decl_id":null,"docs":" Return the portion of the buffer that holds sample values.","sig":null,"attributes":[{"value":"/ Return the portion of the buffer that holds sample values.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":141285,"byte_end":141347,"line_start":1170,"line_end":1170,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":141352,"byte_end":141355,"line_start":1171,"line_end":1171,"column_start":5,"column_end":8}},{"value":"/ While this can not fail–the validity of all coordinates has been validated during the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":141360,"byte_end":141451,"line_start":1172,"line_end":1172,"column_start":5,"column_end":94}},{"value":"/ conversion from `FlatSamples`–the resulting slice may still contain holes.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":141456,"byte_end":141536,"line_start":1173,"line_end":1173,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":577},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":141758,"byte_end":141773,"line_start":1179,"line_end":1179,"column_start":12,"column_end":27},"name":"image_mut_slice","qualname":"<ViewMut<Buffer, P>>::image_mut_slice","value":"fn (&mut self) -> &mut [P::Subpixel]","parent":null,"children":[],"decl_id":null,"docs":" Return the mutable buffer that holds sample values.\n","sig":null,"attributes":[{"value":"/ Return the mutable buffer that holds sample values.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":141691,"byte_end":141746,"line_start":1178,"line_end":1178,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":578},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":142241,"byte_end":142250,"line_start":1189,"line_end":1189,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<ViewMut<Buffer, P>>::shrink_to","value":"fn (&mut self, width: u32, height: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shrink the inner image.","sig":null,"attributes":[{"value":"/ Shrink the inner image.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":141911,"byte_end":141938,"line_start":1184,"line_end":1184,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":141943,"byte_end":141946,"line_start":1185,"line_end":1185,"column_start":5,"column_end":8}},{"value":"/ The new dimensions will be the minimum of the previous dimensions. Since the set of","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":141951,"byte_end":142038,"line_start":1186,"line_end":1186,"column_start":5,"column_end":92}},{"value":"/ in-bounds pixels afterwards is a subset of the current ones, this is allowed on a `View`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":142043,"byte_end":142136,"line_start":1187,"line_end":1187,"column_start":5,"column_end":98}},{"value":"/ Note that you can not change the number of channels as an intrinsic property of `P`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":142141,"byte_end":142229,"line_start":1188,"line_end":1188,"column_start":5,"column_end":93}}]},{"kind":"Mod","id":{"krate":0,"index":626},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/bmp/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"bmp","qualname":"::bmp","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/bmp/mod.rs","parent":null,"children":[{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":819}],"decl_id":null,"docs":"  Decoding and Encoding of BMP Images","sig":null,"attributes":[{"value":"cfg(feature = \"bmp\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":2188,"byte_end":2211,"line_start":86,"line_end":86,"column_start":1,"column_end":24}},{"value":"!  Decoding and Encoding of BMP Images","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/bmp/mod.rs","byte_start":153853,"byte_end":153893,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/bmp/mod.rs","byte_start":153894,"byte_end":153897,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"!  A decoder and encoder for BMP (Windows Bitmap) images","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/bmp/mod.rs","byte_start":153898,"byte_end":153956,"line_start":3,"line_end":3,"column_start":1,"column_end":59}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/bmp/mod.rs","byte_start":153957,"byte_end":153960,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"!  # Related Links","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/bmp/mod.rs","byte_start":153961,"byte_end":153981,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"!  * <https://msdn.microsoft.com/en-us/library/windows/desktop/dd183375%28v=vs.85%29.aspx>","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/bmp/mod.rs","byte_start":153982,"byte_end":154074,"line_start":6,"line_end":6,"column_start":1,"column_end":93}},{"value":"!  * <https://en.wikipedia.org/wiki/BMP_file_format>","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/bmp/mod.rs","byte_start":154075,"byte_end":154129,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/bmp/mod.rs","byte_start":154130,"byte_end":154133,"line_start":8,"line_end":8,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":719},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/bmp/decoder.rs","byte_start":167410,"byte_end":167420,"line_start":428,"line_end":428,"column_start":12,"column_end":22},"name":"BMPDecoder","qualname":"::bmp::decoder::BMPDecoder","value":"BMPDecoder {  }","parent":null,"children":[{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":723},{"krate":0,"index":724},{"krate":0,"index":725},{"krate":0,"index":726},{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":729},{"krate":0,"index":730},{"krate":0,"index":731},{"krate":0,"index":732},{"krate":0,"index":733},{"krate":0,"index":734}],"decl_id":null,"docs":" A bmp decoder\n","sig":null,"attributes":[{"value":"/ A bmp decoder","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/bmp/decoder.rs","byte_start":167381,"byte_end":167398,"line_start":427,"line_end":427,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":764},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/bmp/decoder.rs","byte_start":169988,"byte_end":169991,"line_start":515,"line_end":515,"column_start":12,"column_end":15},"name":"new","qualname":"<BMPDecoder<R>>::new","value":"fn (reader: R) -> ImageResult<BMPDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[{"value":"/ Create a new decoder that decodes from the stream ```r```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/bmp/decoder.rs","byte_start":169915,"byte_end":169976,"line_start":514,"line_end":514,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":773},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/bmp/decoder.rs","byte_start":180552,"byte_end":180579,"line_start":814,"line_end":814,"column_start":12,"column_end":39},"name":"read_metadata_in_ico_format","qualname":"<BMPDecoder<R>>::read_metadata_in_ico_format","value":"fn (&mut self) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"ico\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/bmp/decoder.rs","byte_start":180498,"byte_end":180521,"line_start":812,"line_end":812,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":797},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/bmp/decoder.rs","byte_start":200382,"byte_end":200391,"line_start":1286,"line_end":1286,"column_start":12,"column_end":21},"name":"BmpReader","qualname":"::bmp::decoder::BmpReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[{"value":"/ Wrapper struct around a `Cursor<Vec<u8>>`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/bmp/decoder.rs","byte_start":200325,"byte_end":200370,"line_start":1285,"line_end":1285,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":830},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/bmp/encoder.rs","byte_start":203027,"byte_end":203037,"line_start":11,"line_end":11,"column_start":12,"column_end":22},"name":"BMPEncoder","qualname":"::bmp::encoder::BMPEncoder","value":"BMPEncoder {  }","parent":null,"children":[{"krate":0,"index":833}],"decl_id":null,"docs":" The representation of a BMP encoder.\n","sig":null,"attributes":[{"value":"/ The representation of a BMP encoder.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/bmp/encoder.rs","byte_start":202975,"byte_end":203015,"line_start":10,"line_end":10,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":837},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/bmp/encoder.rs","byte_start":203196,"byte_end":203199,"line_start":17,"line_end":17,"column_start":12,"column_end":15},"name":"new","qualname":"<BMPEncoder>::new","value":"fn (w: &'a mut W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```.\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to ```w```.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/bmp/encoder.rs","byte_start":203125,"byte_end":203184,"line_start":16,"line_end":16,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":838},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/bmp/encoder.rs","byte_start":203407,"byte_end":203413,"line_start":24,"line_end":24,"column_start":12,"column_end":18},"name":"encode","qualname":"<BMPEncoder>::encode","value":"fn (&mut self, image: &[u8], width: u32, height: u32, c: color::ColorType) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image ```image```\n that has dimensions ```width``` and ```height```\n and ```ColorType``` ```c```.\n","sig":null,"attributes":[{"value":"/ Encodes the image ```image```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/bmp/encoder.rs","byte_start":203268,"byte_end":203301,"line_start":21,"line_end":21,"column_start":5,"column_end":38}},{"value":"/ that has dimensions ```width``` and ```height```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/bmp/encoder.rs","byte_start":203306,"byte_end":203358,"line_start":22,"line_end":22,"column_start":5,"column_end":57}},{"value":"/ and ```ColorType``` ```c```.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/bmp/encoder.rs","byte_start":203363,"byte_end":203395,"line_start":23,"line_end":23,"column_start":5,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":846},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dxt.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dxt","qualname":"::dxt","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dxt.rs","parent":null,"children":[{"krate":0,"index":847},{"krate":0,"index":853},{"krate":0,"index":854},{"krate":0,"index":3403},{"krate":0,"index":3419},{"krate":0,"index":3418},{"krate":0,"index":3416},{"krate":0,"index":3413},{"krate":0,"index":3414},{"krate":0,"index":3410},{"krate":0,"index":3411},{"krate":0,"index":862},{"krate":0,"index":866},{"krate":0,"index":873},{"krate":0,"index":877},{"krate":0,"index":886},{"krate":0,"index":893},{"krate":0,"index":897},{"krate":0,"index":901},{"krate":0,"index":904},{"krate":0,"index":908},{"krate":0,"index":909},{"krate":0,"index":911},{"krate":0,"index":912},{"krate":0,"index":913},{"krate":0,"index":914},{"krate":0,"index":915},{"krate":0,"index":917},{"krate":0,"index":920},{"krate":0,"index":922},{"krate":0,"index":924},{"krate":0,"index":925},{"krate":0,"index":927},{"krate":0,"index":929},{"krate":0,"index":931},{"krate":0,"index":942},{"krate":0,"index":946},{"krate":0,"index":950},{"krate":0,"index":951},{"krate":0,"index":952},{"krate":0,"index":954},{"krate":0,"index":956}],"decl_id":null,"docs":"  Decoding of DXT (S3TC) compression","sig":null,"attributes":[{"value":"cfg(feature = \"dxt\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":2225,"byte_end":2248,"line_start":88,"line_end":88,"column_start":1,"column_end":24}},{"value":"!  Decoding of DXT (S3TC) compression","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dxt.rs","byte_start":214391,"byte_end":214430,"line_start":1,"line_end":1,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dxt.rs","byte_start":214431,"byte_end":214434,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"!  DXT is an image format that supports lossy compression","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dxt.rs","byte_start":214435,"byte_end":214494,"line_start":3,"line_end":3,"column_start":1,"column_end":60}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dxt.rs","byte_start":214495,"byte_end":214498,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"!  # Related Links","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dxt.rs","byte_start":214499,"byte_end":214519,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"!  * <https://www.khronos.org/registry/OpenGL/extensions/EXT/EXT_texture_compression_s3tc.txt> - Description of the DXT compression OpenGL extensions.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dxt.rs","byte_start":214520,"byte_end":214672,"line_start":6,"line_end":6,"column_start":1,"column_end":153}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dxt.rs","byte_start":214673,"byte_end":214676,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"!  Note: this module only implements bare DXT encoding/decoding, it does not parse formats that can contain DXT files like .dds","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dxt.rs","byte_start":214677,"byte_end":214806,"line_start":8,"line_end":8,"column_start":1,"column_end":130}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3404},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dxt.rs","byte_start":215330,"byte_end":215334,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"name":"DXT1","qualname":"::dxt::DXTVariant::DXT1","value":"DXTVariant::DXT1","parent":{"krate":0,"index":3403},"children":[],"decl_id":null,"docs":" The DXT1 format. 48 bytes of RGB data in a 4x4 pixel square is\n compressed into an 8 byte block of DXT1 data\n","sig":null,"attributes":[{"value":"/ The DXT1 format. 48 bytes of RGB data in a 4x4 pixel square is","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dxt.rs","byte_start":215206,"byte_end":215272,"line_start":20,"line_end":20,"column_start":5,"column_end":71}},{"value":"/ compressed into an 8 byte block of DXT1 data","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dxt.rs","byte_start":215277,"byte_end":215325,"line_start":21,"line_end":21,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3406},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dxt.rs","byte_start":215465,"byte_end":215469,"line_start":25,"line_end":25,"column_start":5,"column_end":9},"name":"DXT3","qualname":"::dxt::DXTVariant::DXT3","value":"DXTVariant::DXT3","parent":{"krate":0,"index":3403},"children":[],"decl_id":null,"docs":" The DXT3 format. 64 bytes of RGBA data in a 4x4 pixel square is\n compressed into a 16 byte block of DXT3 data\n","sig":null,"attributes":[{"value":"/ The DXT3 format. 64 bytes of RGBA data in a 4x4 pixel square is","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dxt.rs","byte_start":215340,"byte_end":215407,"line_start":23,"line_end":23,"column_start":5,"column_end":72}},{"value":"/ compressed into a 16 byte block of DXT3 data","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dxt.rs","byte_start":215412,"byte_end":215460,"line_start":24,"line_end":24,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3408},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dxt.rs","byte_start":215600,"byte_end":215604,"line_start":28,"line_end":28,"column_start":5,"column_end":9},"name":"DXT5","qualname":"::dxt::DXTVariant::DXT5","value":"DXTVariant::DXT5","parent":{"krate":0,"index":3403},"children":[],"decl_id":null,"docs":" The DXT5 format. 64 bytes of RGBA data in a 4x4 pixel square is\n compressed into a 16 byte block of DXT5 data\n","sig":null,"attributes":[{"value":"/ The DXT5 format. 64 bytes of RGBA data in a 4x4 pixel square is","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dxt.rs","byte_start":215475,"byte_end":215542,"line_start":26,"line_end":26,"column_start":5,"column_end":72}},{"value":"/ compressed into a 16 byte block of DXT5 data","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dxt.rs","byte_start":215547,"byte_end":215595,"line_start":27,"line_end":27,"column_start":5,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":3403},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dxt.rs","byte_start":215189,"byte_end":215199,"line_start":19,"line_end":19,"column_start":10,"column_end":20},"name":"DXTVariant","qualname":"::dxt::DXTVariant","value":"DXTVariant::{DXT1, DXT3, DXT5}","parent":null,"children":[{"krate":0,"index":3404},{"krate":0,"index":3406},{"krate":0,"index":3408}],"decl_id":null,"docs":" What version of DXT compression are we using?\n Note that DXT2 and DXT4 are left away as they're\n just DXT3 and DXT5 with premultiplied alpha\n","sig":null,"attributes":[{"value":"/ What version of DXT compression are we using?","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dxt.rs","byte_start":214984,"byte_end":215033,"line_start":15,"line_end":15,"column_start":1,"column_end":50}},{"value":"/ Note that DXT2 and DXT4 are left away as they're","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dxt.rs","byte_start":215034,"byte_end":215086,"line_start":16,"line_end":16,"column_start":1,"column_end":53}},{"value":"/ just DXT3 and DXT5 with premultiplied alpha","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dxt.rs","byte_start":215087,"byte_end":215134,"line_start":17,"line_end":17,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":865},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dxt.rs","byte_start":216224,"byte_end":216233,"line_start":50,"line_end":50,"column_start":12,"column_end":21},"name":"colortype","qualname":"<DXTVariant>::colortype","value":"fn (self) -> ColorType","parent":null,"children":[],"decl_id":null,"docs":" Returns the colortype that is stored in this DXT variant\n","sig":null,"attributes":[{"value":"/ Returns the colortype that is stored in this DXT variant","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dxt.rs","byte_start":216152,"byte_end":216212,"line_start":49,"line_end":49,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":866},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dxt.rs","byte_start":216444,"byte_end":216454,"line_start":59,"line_end":59,"column_start":12,"column_end":22},"name":"DXTDecoder","qualname":"::dxt::DXTDecoder","value":"DXTDecoder {  }","parent":null,"children":[{"krate":0,"index":868},{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":871},{"krate":0,"index":872}],"decl_id":null,"docs":" DXT decoder\n","sig":null,"attributes":[{"value":"/ DXT decoder","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dxt.rs","byte_start":216417,"byte_end":216432,"line_start":58,"line_end":58,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":875},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dxt.rs","byte_start":217034,"byte_end":217037,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<DXTDecoder<R>>::new","value":"fn (r: R, width: u32, height: u32, variant: DXTVariant) -> Result<DXTDecoder<R>, ImageError>","parent":null,"children":[],"decl_id":null,"docs":" Create a new DXT decoder that decodes from the stream ```r```.\n As DXT is often stored as raw buffers with the width/height\n somewhere else the width and height of the image need\n to be passed in ```width``` and ```height```, as well as the\n DXT variant in ```variant```.\n width and height are required to be powers of 2 and at least 4.\n otherwise an error will be returned\n","sig":null,"attributes":[{"value":"/ Create a new DXT decoder that decodes from the stream ```r```.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dxt.rs","byte_start":216603,"byte_end":216669,"line_start":68,"line_end":68,"column_start":5,"column_end":71}},{"value":"/ As DXT is often stored as raw buffers with the width/height","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dxt.rs","byte_start":216674,"byte_end":216737,"line_start":69,"line_end":69,"column_start":5,"column_end":68}},{"value":"/ somewhere else the width and height of the image need","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dxt.rs","byte_start":216742,"byte_end":216799,"line_start":70,"line_end":70,"column_start":5,"column_end":62}},{"value":"/ to be passed in ```width``` and ```height```, as well as the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dxt.rs","byte_start":216804,"byte_end":216868,"line_start":71,"line_end":71,"column_start":5,"column_end":69}},{"value":"/ DXT variant in ```variant```.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dxt.rs","byte_start":216873,"byte_end":216906,"line_start":72,"line_end":72,"column_start":5,"column_end":38}},{"value":"/ width and height are required to be powers of 2 and at least 4.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dxt.rs","byte_start":216911,"byte_end":216978,"line_start":73,"line_end":73,"column_start":5,"column_end":72}},{"value":"/ otherwise an error will be returned","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dxt.rs","byte_start":216983,"byte_end":217022,"line_start":74,"line_end":74,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":893},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dxt.rs","byte_start":220293,"byte_end":220302,"line_start":178,"line_end":178,"column_start":12,"column_end":21},"name":"DXTReader","qualname":"::dxt::DXTReader","value":"DXTReader {  }","parent":null,"children":[{"krate":0,"index":895},{"krate":0,"index":896}],"decl_id":null,"docs":" DXT reader\n","sig":null,"attributes":[{"value":"/ DXT reader","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dxt.rs","byte_start":220267,"byte_end":220281,"line_start":177,"line_end":177,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":901},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dxt.rs","byte_start":220614,"byte_end":220624,"line_start":190,"line_end":190,"column_start":12,"column_end":22},"name":"DXTEncoder","qualname":"::dxt::DXTEncoder","value":"DXTEncoder {  }","parent":null,"children":[{"krate":0,"index":903}],"decl_id":null,"docs":" DXT encoder\n","sig":null,"attributes":[{"value":"/ DXT encoder","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dxt.rs","byte_start":220587,"byte_end":220602,"line_start":189,"line_end":189,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":906},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dxt.rs","byte_start":220755,"byte_end":220758,"line_start":196,"line_end":196,"column_start":12,"column_end":15},"name":"new","qualname":"<DXTEncoder<W>>::new","value":"fn (w: W) -> DXTEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to ```w```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dxt.rs","byte_start":220685,"byte_end":220743,"line_start":195,"line_end":195,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":907},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dxt.rs","byte_start":221021,"byte_end":221027,"line_start":204,"line_end":204,"column_start":12,"column_end":18},"name":"encode","qualname":"<DXTEncoder<W>>::encode","value":"fn (mut self, data: &[u8], width: u32, height: u32, variant: DXTVariant) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image data ```data```\n that has dimensions ```width``` and ```height```\n in ```DXTVariant``` ```variant```\n data is assumed to be in variant.colortype()\n","sig":null,"attributes":[{"value":"/ Encodes the image data ```data```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dxt.rs","byte_start":220820,"byte_end":220857,"line_start":200,"line_end":200,"column_start":5,"column_end":42}},{"value":"/ that has dimensions ```width``` and ```height```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dxt.rs","byte_start":220862,"byte_end":220914,"line_start":201,"line_end":201,"column_start":5,"column_end":57}},{"value":"/ in ```DXTVariant``` ```variant```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dxt.rs","byte_start":220919,"byte_end":220956,"line_start":202,"line_end":202,"column_start":5,"column_end":42}},{"value":"/ data is assumed to be in variant.colortype()","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dxt.rs","byte_start":220961,"byte_end":221009,"line_start":203,"line_end":203,"column_start":5,"column_end":53}}]},{"kind":"Mod","id":{"krate":0,"index":958},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/gif.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"gif","qualname":"::gif","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/gif.rs","parent":null,"children":[{"krate":0,"index":959},{"krate":0,"index":960},{"krate":0,"index":961},{"krate":0,"index":962},{"krate":0,"index":963},{"krate":0,"index":968},{"krate":0,"index":969},{"krate":0,"index":970},{"krate":0,"index":973},{"krate":0,"index":976},{"krate":0,"index":977},{"krate":0,"index":980},{"krate":0,"index":981},{"krate":0,"index":982},{"krate":0,"index":987},{"krate":0,"index":988},{"krate":0,"index":991},{"krate":0,"index":994},{"krate":0,"index":999},{"krate":0,"index":1003},{"krate":0,"index":1012},{"krate":0,"index":1018},{"krate":0,"index":1021},{"krate":0,"index":1025},{"krate":0,"index":1027},{"krate":0,"index":1031},{"krate":0,"index":1035},{"krate":0,"index":1046}],"decl_id":null,"docs":"  Decoding of GIF Images","sig":null,"attributes":[{"value":"cfg(feature = \"gif_codec\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":2262,"byte_end":2291,"line_start":90,"line_end":90,"column_start":1,"column_end":30}},{"value":"!  Decoding of GIF Images","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/gif.rs","byte_start":242856,"byte_end":242883,"line_start":1,"line_end":1,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/gif.rs","byte_start":242884,"byte_end":242887,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"!  GIF (Graphics Interchange Format) is an image format that supports lossless compression.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/gif.rs","byte_start":242888,"byte_end":242981,"line_start":3,"line_end":3,"column_start":1,"column_end":94}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/gif.rs","byte_start":242982,"byte_end":242985,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"!  # Related Links","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/gif.rs","byte_start":242986,"byte_end":243006,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"!  * <http://www.w3.org/Graphics/GIF/spec-gif89a.txt> - The GIF Specification","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/gif.rs","byte_start":243007,"byte_end":243086,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/gif.rs","byte_start":243087,"byte_end":243090,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/gif.rs","byte_start":243091,"byte_end":243105,"line_start":8,"line_end":8,"column_start":1,"column_end":15}},{"value":"! ```rust,no_run","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/gif.rs","byte_start":243106,"byte_end":243124,"line_start":9,"line_end":9,"column_start":1,"column_end":19}},{"value":"! use image::gif::{Decoder, Encoder};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/gif.rs","byte_start":243125,"byte_end":243164,"line_start":10,"line_end":10,"column_start":1,"column_end":40}},{"value":"! use image::{ImageDecoder, AnimationDecoder};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/gif.rs","byte_start":243165,"byte_end":243213,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"! use std::fs::File;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/gif.rs","byte_start":243214,"byte_end":243236,"line_start":12,"line_end":12,"column_start":1,"column_end":23}},{"value":"! # fn main() -> std::io::Result<()> {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/gif.rs","byte_start":243237,"byte_end":243277,"line_start":13,"line_end":13,"column_start":1,"column_end":41}},{"value":"! // Decode a gif into frames","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/gif.rs","byte_start":243278,"byte_end":243309,"line_start":14,"line_end":14,"column_start":1,"column_end":32}},{"value":"! let file_in = File::open(\"foo.gif\")?;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/gif.rs","byte_start":243310,"byte_end":243351,"line_start":15,"line_end":15,"column_start":1,"column_end":42}},{"value":"! let mut decoder = Decoder::new(file_in).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/gif.rs","byte_start":243352,"byte_end":243405,"line_start":16,"line_end":16,"column_start":1,"column_end":54}},{"value":"! let frames = decoder.into_frames();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/gif.rs","byte_start":243406,"byte_end":243445,"line_start":17,"line_end":17,"column_start":1,"column_end":40}},{"value":"! let frames = frames.collect_frames().expect(\"error decoding gif\");","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/gif.rs","byte_start":243446,"byte_end":243516,"line_start":18,"line_end":18,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/gif.rs","byte_start":243517,"byte_end":243520,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! // Encode frames into a gif and save to a file","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/gif.rs","byte_start":243521,"byte_end":243571,"line_start":20,"line_end":20,"column_start":1,"column_end":51}},{"value":"! let mut file_out = File::open(\"out.gif\")?;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/gif.rs","byte_start":243572,"byte_end":243618,"line_start":21,"line_end":21,"column_start":1,"column_end":47}},{"value":"! let mut encoder = Encoder::new(file_out);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/gif.rs","byte_start":243619,"byte_end":243664,"line_start":22,"line_end":22,"column_start":1,"column_end":46}},{"value":"! encoder.encode_frames(frames.into_iter());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/gif.rs","byte_start":243665,"byte_end":243711,"line_start":23,"line_end":23,"column_start":1,"column_end":47}},{"value":"! # Ok(())","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/gif.rs","byte_start":243712,"byte_end":243724,"line_start":24,"line_end":24,"column_start":1,"column_end":13}},{"value":"! # }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/gif.rs","byte_start":243725,"byte_end":243732,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/gif.rs","byte_start":243733,"byte_end":243740,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"allow(clippy :: while_let_loop)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/gif.rs","byte_start":243741,"byte_end":243774,"line_start":27,"line_end":27,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":988},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/gif.rs","byte_start":244240,"byte_end":244247,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"Decoder","qualname":"::gif::Decoder","value":"Decoder {  }","parent":null,"children":[{"krate":0,"index":990}],"decl_id":null,"docs":" GIF decoder\n","sig":null,"attributes":[{"value":"/ GIF decoder","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/gif.rs","byte_start":244213,"byte_end":244228,"line_start":48,"line_end":48,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":993},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/gif.rs","byte_start":244395,"byte_end":244398,"line_start":55,"line_end":55,"column_start":12,"column_end":15},"name":"new","qualname":"<Decoder<R>>::new","value":"fn (r: R) -> ImageResult<Decoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder that decodes the input steam ```r```\n","sig":null,"attributes":[{"value":"/ Creates a new decoder that decodes the input steam ```r```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/gif.rs","byte_start":244321,"byte_end":244383,"line_start":54,"line_end":54,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":994},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/gif.rs","byte_start":244663,"byte_end":244672,"line_start":66,"line_end":66,"column_start":12,"column_end":21},"name":"GifReader","qualname":"::gif::GifReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[{"value":"/ Wrapper struct around a `Cursor<Vec<u8>>`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/gif.rs","byte_start":244606,"byte_end":244651,"line_start":65,"line_end":65,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":1031},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/gif.rs","byte_start":252523,"byte_end":252530,"line_start":292,"line_end":292,"column_start":12,"column_end":19},"name":"Encoder","qualname":"::gif::Encoder","value":"Encoder {  }","parent":null,"children":[{"krate":0,"index":1033},{"krate":0,"index":1034}],"decl_id":null,"docs":" GIF encoder.\n","sig":null,"attributes":[{"value":"/ GIF encoder.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/gif.rs","byte_start":252495,"byte_end":252511,"line_start":291,"line_end":291,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1037},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/gif.rs","byte_start":252680,"byte_end":252683,"line_start":299,"line_end":299,"column_start":12,"column_end":15},"name":"new","qualname":"<Encoder<W>>::new","value":"fn (w: W) -> Encoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new GIF encoder.\n","sig":null,"attributes":[{"value":"/ Creates a new GIF encoder.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/gif.rs","byte_start":252638,"byte_end":252668,"line_start":298,"line_end":298,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1038},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/gif.rs","byte_start":252831,"byte_end":252837,"line_start":306,"line_end":306,"column_start":12,"column_end":18},"name":"encode","qualname":"<Encoder<W>>::encode","value":"fn (&mut self, frame: &Frame) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes a frame.\n","sig":null,"attributes":[{"value":"/ Encodes a frame.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/gif.rs","byte_start":252799,"byte_end":252819,"line_start":305,"line_end":305,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1041},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/gif.rs","byte_start":253482,"byte_end":253495,"line_start":321,"line_end":321,"column_start":12,"column_end":25},"name":"encode_frames","qualname":"<Encoder<W>>::encode_frames","value":"fn <F> (&mut self, frames: F) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes Frames.\n Consider using `try_encode_frames` instead to encode an `animation::Frames` like iterator.\n","sig":null,"attributes":[{"value":"/ Encodes Frames.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/gif.rs","byte_start":253352,"byte_end":253371,"line_start":319,"line_end":319,"column_start":5,"column_end":24}},{"value":"/ Consider using `try_encode_frames` instead to encode an `animation::Frames` like iterator.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/gif.rs","byte_start":253376,"byte_end":253470,"line_start":320,"line_end":320,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":1043},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/gif.rs","byte_start":253980,"byte_end":253997,"line_start":334,"line_end":334,"column_start":12,"column_end":29},"name":"try_encode_frames","qualname":"<Encoder<W>>::try_encode_frames","value":"fn <F> (&mut self, frames: F) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Try to encode a collection of `ImageResult<animation::Frame>` objects.\n Use this function to encode an `animation::Frames` like iterator.\n Whenever an `Err` item is encountered, that value is returned without further actions.\n","sig":null,"attributes":[{"value":"/ Try to encode a collection of `ImageResult<animation::Frame>` objects.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/gif.rs","byte_start":253725,"byte_end":253799,"line_start":331,"line_end":331,"column_start":5,"column_end":79}},{"value":"/ Use this function to encode an `animation::Frames` like iterator.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/gif.rs","byte_start":253804,"byte_end":253873,"line_start":332,"line_end":332,"column_start":5,"column_end":74}},{"value":"/ Whenever an `Err` item is encountered, that value is returned without further actions.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/gif.rs","byte_start":253878,"byte_end":253968,"line_start":333,"line_end":333,"column_start":5,"column_end":95}}]},{"kind":"Mod","id":{"krate":0,"index":1049},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"hdr","qualname":"::hdr","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/mod.rs","parent":null,"children":[{"krate":0,"index":1050},{"krate":0,"index":1207},{"krate":0,"index":1257},{"krate":0,"index":1258}],"decl_id":null,"docs":"  Decoding of Radiance HDR Images","sig":null,"attributes":[{"value":"cfg(feature = \"hdr\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":2305,"byte_end":2328,"line_start":92,"line_end":92,"column_start":1,"column_end":24}},{"value":"!  Decoding of Radiance HDR Images","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/mod.rs","byte_start":255139,"byte_end":255175,"line_start":1,"line_end":1,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/mod.rs","byte_start":255176,"byte_end":255179,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"!  A decoder for Radiance HDR images","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/mod.rs","byte_start":255180,"byte_end":255218,"line_start":3,"line_end":3,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/mod.rs","byte_start":255219,"byte_end":255222,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"!  # Related Links","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/mod.rs","byte_start":255223,"byte_end":255243,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/mod.rs","byte_start":255244,"byte_end":255247,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"!  * <http://radsite.lbl.gov/radiance/refer/filefmts.pdf>","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/mod.rs","byte_start":255248,"byte_end":255307,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"!  * <http://www.graphics.cornell.edu/~bjw/rgbe/rgbe.c>","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/mod.rs","byte_start":255308,"byte_end":255365,"line_start":8,"line_end":8,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/mod.rs","byte_start":255366,"byte_end":255369,"line_start":9,"line_end":9,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":3421},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":255930,"byte_end":255940,"line_start":18,"line_end":18,"column_start":12,"column_end":22},"name":"HDRAdapter","qualname":"::hdr::decoder::HDRAdapter","value":"HDRAdapter {  }","parent":null,"children":[{"krate":0,"index":3423},{"krate":0,"index":3424},{"krate":0,"index":3425}],"decl_id":null,"docs":" Adapter to conform to ```ImageDecoder``` trait\n","sig":null,"attributes":[{"value":"/ Adapter to conform to ```ImageDecoder``` trait","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":255851,"byte_end":255901,"line_start":16,"line_end":16,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1077},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":256110,"byte_end":256113,"line_start":26,"line_end":26,"column_start":12,"column_end":15},"name":"new","qualname":"<HDRAdapter<R>>::new","value":"fn (r: R) -> ImageResult<HDRAdapter<R>>","parent":null,"children":[],"decl_id":null,"docs":" Creates adapter\n","sig":null,"attributes":[{"value":"/ Creates adapter","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":256079,"byte_end":256098,"line_start":25,"line_end":25,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1078},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":256410,"byte_end":256423,"line_start":37,"line_end":37,"column_start":12,"column_end":25},"name":"new_nonstrict","qualname":"<HDRAdapter<R>>::new_nonstrict","value":"fn (r: R) -> ImageResult<HDRAdapter<R>>","parent":null,"children":[],"decl_id":null,"docs":" Allows reading old Radiance HDR images\n","sig":null,"attributes":[{"value":"/ Allows reading old Radiance HDR images","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":256356,"byte_end":256398,"line_start":36,"line_end":36,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":1081},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":257415,"byte_end":257424,"line_start":69,"line_end":69,"column_start":12,"column_end":21},"name":"HdrReader","qualname":"::hdr::decoder::HdrReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[{"value":"/ Wrapper struct around a `Cursor<Vec<u8>>`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":257358,"byte_end":257403,"line_start":68,"line_end":68,"column_start":1,"column_end":46}}]},{"kind":"Const","id":{"krate":0,"index":1105},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":259235,"byte_end":259244,"line_start":141,"line_end":141,"column_start":11,"column_end":20},"name":"SIGNATURE","qualname":"::hdr::decoder::SIGNATURE","value":"&[u8]","parent":null,"children":[],"decl_id":null,"docs":" Radiance HDR file signature\n","sig":null,"attributes":[{"value":"/ Radiance HDR file signature","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":259193,"byte_end":259224,"line_start":140,"line_end":140,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":3429},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":259362,"byte_end":259372,"line_start":146,"line_end":146,"column_start":12,"column_end":22},"name":"HDRDecoder","qualname":"::hdr::decoder::HDRDecoder","value":"HDRDecoder {  }","parent":null,"children":[{"krate":0,"index":3431},{"krate":0,"index":3432},{"krate":0,"index":3433},{"krate":0,"index":3434}],"decl_id":null,"docs":" An Radiance HDR decoder\n","sig":null,"attributes":[{"value":"/ An Radiance HDR decoder","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":259306,"byte_end":259333,"line_start":144,"line_end":144,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":3438},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":259597,"byte_end":259607,"line_start":156,"line_end":156,"column_start":12,"column_end":22},"name":"RGBE8Pixel","qualname":"::hdr::decoder::RGBE8Pixel","value":"RGBE8Pixel { c, e }","parent":null,"children":[{"krate":0,"index":3439},{"krate":0,"index":3441}],"decl_id":null,"docs":" Refer to [wikipedia](https://en.wikipedia.org/wiki/RGBE_image_format)\n","sig":null,"attributes":[{"value":"/ Refer to [wikipedia](https://en.wikipedia.org/wiki/RGBE_image_format)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":259447,"byte_end":259520,"line_start":153,"line_end":153,"column_start":1,"column_end":74}},{"value":"repr(C)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":259521,"byte_end":259531,"line_start":154,"line_end":154,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":3439},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":259643,"byte_end":259644,"line_start":158,"line_end":158,"column_start":9,"column_end":10},"name":"c","qualname":"::hdr::decoder::RGBE8Pixel::c","value":"[u8; 3]","parent":{"krate":0,"index":3438},"children":[],"decl_id":null,"docs":" Color components\n","sig":null,"attributes":[{"value":"/ Color components","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":259614,"byte_end":259634,"line_start":157,"line_end":157,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":3441},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":259680,"byte_end":259681,"line_start":160,"line_end":160,"column_start":9,"column_end":10},"name":"e","qualname":"::hdr::decoder::RGBE8Pixel::e","value":"u8","parent":{"krate":0,"index":3438},"children":[],"decl_id":null,"docs":" Exponent\n","sig":null,"attributes":[{"value":"/ Exponent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":259659,"byte_end":259671,"line_start":159,"line_end":159,"column_start":5,"column_end":17}}]},{"kind":"Function","id":{"krate":0,"index":1107},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":259742,"byte_end":259747,"line_start":164,"line_end":164,"column_start":8,"column_end":13},"name":"rgbe8","qualname":"::hdr::decoder::rgbe8","value":"fn (r: u8, g: u8, b: u8, e: u8) -> RGBE8Pixel","parent":null,"children":[],"decl_id":null,"docs":" Creates ```RGBE8Pixel``` from components\n","sig":null,"attributes":[{"value":"/ Creates ```RGBE8Pixel``` from components","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":259690,"byte_end":259734,"line_start":163,"line_end":163,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1109},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":259936,"byte_end":259942,"line_start":171,"line_end":171,"column_start":12,"column_end":18},"name":"to_hdr","qualname":"<RGBE8Pixel>::to_hdr","value":"fn (self) -> Rgb<f32>","parent":null,"children":[],"decl_id":null,"docs":" Converts ```RGBE8Pixel``` into ```Rgb<f32>``` linearly\n","sig":null,"attributes":[{"value":"/ Converts ```RGBE8Pixel``` into ```Rgb<f32>``` linearly","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":259852,"byte_end":259910,"line_start":169,"line_end":169,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":259915,"byte_end":259924,"line_start":170,"line_end":170,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1110},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":260702,"byte_end":260708,"line_start":193,"line_end":193,"column_start":12,"column_end":18},"name":"to_ldr","qualname":"<RGBE8Pixel>::to_ldr","value":"fn <T> (self) -> Rgb<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts ```RGBE8Pixel``` into ```Rgb<T>``` with scale=1 and gamma=2.2","sig":null,"attributes":[{"value":"/ Converts ```RGBE8Pixel``` into ```Rgb<T>``` with scale=1 and gamma=2.2","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":260437,"byte_end":260511,"line_start":185,"line_end":185,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":260516,"byte_end":260519,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ color_ldr = (color_hdr*scale)<sup>gamma</sup>","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":260524,"byte_end":260573,"line_start":187,"line_end":187,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":260578,"byte_end":260581,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":260586,"byte_end":260597,"line_start":189,"line_end":189,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":260602,"byte_end":260605,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ Panics when ```T::max_value()``` cannot be represented as f32.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":260610,"byte_end":260676,"line_start":191,"line_end":191,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":260681,"byte_end":260690,"line_start":192,"line_end":192,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1112},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":261094,"byte_end":261112,"line_start":206,"line_end":206,"column_start":12,"column_end":30},"name":"to_ldr_scale_gamma","qualname":"<RGBE8Pixel>::to_ldr_scale_gamma","value":"fn <T> (self, scale: f32, gamma: f32) -> Rgb<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts RGBE8Pixel into Rgb<T> using provided scale and gamma","sig":null,"attributes":[{"value":"/ Converts RGBE8Pixel into Rgb<T> using provided scale and gamma","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":260801,"byte_end":260867,"line_start":197,"line_end":197,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":260872,"byte_end":260875,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ color_ldr = (color_hdr*scale)<sup>gamma</sup>","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":260880,"byte_end":260929,"line_start":199,"line_end":199,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":260934,"byte_end":260937,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":260942,"byte_end":260953,"line_start":201,"line_end":201,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":260958,"byte_end":260961,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ Panics when T::max_value() cannot be represented as f32.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":260966,"byte_end":261026,"line_start":203,"line_end":203,"column_start":5,"column_end":65}},{"value":"/ Panics when scale or gamma is NaN","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":261031,"byte_end":261068,"line_start":204,"line_end":204,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":261073,"byte_end":261082,"line_start":205,"line_end":205,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1118},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":262296,"byte_end":262299,"line_start":237,"line_end":237,"column_start":12,"column_end":15},"name":"new","qualname":"<HDRDecoder<R>>::new","value":"fn (reader: R) -> ImageResult<HDRDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Reads Radiance HDR image header from stream ```r```\n if the header is valid, creates HDRDecoder\n strict mode is enabled\n","sig":null,"attributes":[{"value":"/ Reads Radiance HDR image header from stream ```r```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":262147,"byte_end":262202,"line_start":234,"line_end":234,"column_start":5,"column_end":60}},{"value":"/ if the header is valid, creates HDRDecoder","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":262207,"byte_end":262253,"line_start":235,"line_end":235,"column_start":5,"column_end":51}},{"value":"/ strict mode is enabled","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":262258,"byte_end":262284,"line_start":236,"line_end":236,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1119},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":262707,"byte_end":262722,"line_start":248,"line_end":248,"column_start":12,"column_end":27},"name":"with_strictness","qualname":"<HDRDecoder<R>>::with_strictness","value":"fn (mut reader: R, strict: bool) -> ImageResult<HDRDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Reads Radiance HDR image header from stream ```reader```,\n if the header is valid, creates ```HDRDecoder```.","sig":null,"attributes":[{"value":"/ Reads Radiance HDR image header from stream ```reader```,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":262404,"byte_end":262465,"line_start":241,"line_end":241,"column_start":5,"column_end":66}},{"value":"/ if the header is valid, creates ```HDRDecoder```.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":262470,"byte_end":262523,"line_start":242,"line_end":242,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":262528,"byte_end":262531,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ strict enables strict mode","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":262536,"byte_end":262566,"line_start":244,"line_end":244,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":262571,"byte_end":262574,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ Warning! Reading wrong file in non-strict mode","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":262579,"byte_end":262629,"line_start":246,"line_end":246,"column_start":5,"column_end":55}},{"value":"/   could consume file size worth of memory in the process.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":262634,"byte_end":262695,"line_start":247,"line_end":247,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1121},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":265372,"byte_end":265380,"line_start":317,"line_end":317,"column_start":12,"column_end":20},"name":"metadata","qualname":"<HDRDecoder<R>>::metadata","value":"fn (&self) -> HDRMetadata","parent":null,"children":[],"decl_id":null,"docs":" Returns file metadata. Refer to ```HDRMetadata``` for details.\n","sig":null,"attributes":[{"value":"/ Returns file metadata. Refer to ```HDRMetadata``` for details.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":265294,"byte_end":265360,"line_start":316,"line_end":316,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1122},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":265511,"byte_end":265528,"line_start":322,"line_end":322,"column_start":12,"column_end":29},"name":"read_image_native","qualname":"<HDRDecoder<R>>::read_image_native","value":"fn (mut self) -> ImageResult<Vec<RGBE8Pixel>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes decoder and returns a vector of RGBE8 pixels\n","sig":null,"attributes":[{"value":"/ Consumes decoder and returns a vector of RGBE8 pixels","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":265442,"byte_end":265499,"line_start":321,"line_end":321,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1123},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":266161,"byte_end":266181,"line_start":337,"line_end":337,"column_start":12,"column_end":32},"name":"read_image_transform","qualname":"<HDRDecoder<R>>::read_image_transform","value":"fn <T, F> (mut self, f: F, output_slice: &mut [T]) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Consumes decoder and returns a vector of transformed pixels\n","sig":null,"attributes":[{"value":"/ Consumes decoder and returns a vector of transformed pixels","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":266086,"byte_end":266149,"line_start":336,"line_end":336,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1128},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":267320,"byte_end":267334,"line_start":373,"line_end":373,"column_start":12,"column_end":26},"name":"read_image_ldr","qualname":"<HDRDecoder<R>>::read_image_ldr","value":"fn (self) -> ImageResult<Vec<Rgb<u8>>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes decoder and returns a vector of Rgb<u8> pixels.\n scale = 1, gamma = 2.2\n","sig":null,"attributes":[{"value":"/ Consumes decoder and returns a vector of Rgb<u8> pixels.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":267217,"byte_end":267277,"line_start":371,"line_end":371,"column_start":5,"column_end":65}},{"value":"/ scale = 1, gamma = 2.2","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":267282,"byte_end":267308,"line_start":372,"line_end":372,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1130},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":267638,"byte_end":267652,"line_start":381,"line_end":381,"column_start":12,"column_end":26},"name":"read_image_hdr","qualname":"<HDRDecoder<R>>::read_image_hdr","value":"fn (self) -> ImageResult<Vec<Rgb<f32>>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes decoder and returns a vector of Rgb<f32> pixels.","sig":null,"attributes":[{"value":"/ Consumes decoder and returns a vector of Rgb<f32> pixels.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":267557,"byte_end":267618,"line_start":379,"line_end":379,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":267623,"byte_end":267626,"line_start":380,"line_end":380,"column_start":5,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1137},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":268463,"byte_end":268486,"line_start":406,"line_end":406,"column_start":12,"column_end":35},"name":"HDRImageDecoderIterator","qualname":"::hdr::decoder::HDRImageDecoderIterator","value":"HDRImageDecoderIterator {  }","parent":null,"children":[{"krate":0,"index":1139},{"krate":0,"index":1140},{"krate":0,"index":1141},{"krate":0,"index":1142},{"krate":0,"index":1143},{"krate":0,"index":1144},{"krate":0,"index":1145}],"decl_id":null,"docs":" Scanline buffered pixel by pixel iterator\n","sig":null,"attributes":[{"value":"/ Scanline buffered pixel by pixel iterator","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":268406,"byte_end":268451,"line_start":405,"line_end":405,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":3458},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":276244,"byte_end":276255,"line_start":638,"line_end":638,"column_start":12,"column_end":23},"name":"HDRMetadata","qualname":"::hdr::decoder::HDRMetadata","value":"HDRMetadata { width, height, orientation, exposure, color_correction, pixel_aspect_ratio, custom_attributes }","parent":null,"children":[{"krate":0,"index":3459},{"krate":0,"index":3460},{"krate":0,"index":3461},{"krate":0,"index":3462},{"krate":0,"index":3463},{"krate":0,"index":3464},{"krate":0,"index":3465}],"decl_id":null,"docs":" Metadata for Radiance HDR image\n","sig":null,"attributes":[{"value":"/ Metadata for Radiance HDR image","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":276173,"byte_end":276208,"line_start":636,"line_end":636,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":3459},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":276393,"byte_end":276398,"line_start":641,"line_end":641,"column_start":9,"column_end":14},"name":"width","qualname":"::hdr::decoder::HDRMetadata::width","value":"u32","parent":{"krate":0,"index":3458},"children":[],"decl_id":null,"docs":" Width of decoded image. It could be either scanline length,\n or scanline count, depending on image orientation.\n","sig":null,"attributes":[{"value":"/ Width of decoded image. It could be either scanline length,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":276262,"byte_end":276325,"line_start":639,"line_end":639,"column_start":5,"column_end":68}},{"value":"/ or scanline count, depending on image orientation.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":276330,"byte_end":276384,"line_start":640,"line_end":640,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":3460},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":276477,"byte_end":276483,"line_start":643,"line_end":643,"column_start":9,"column_end":15},"name":"height","qualname":"::hdr::decoder::HDRMetadata::height","value":"u32","parent":{"krate":0,"index":3458},"children":[],"decl_id":null,"docs":" Height of decoded image. It depends on orientation too.\n","sig":null,"attributes":[{"value":"/ Height of decoded image. It depends on orientation too.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":276409,"byte_end":276468,"line_start":642,"line_end":642,"column_start":5,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":3461},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":276758,"byte_end":276769,"line_start":647,"line_end":647,"column_start":9,"column_end":20},"name":"orientation","qualname":"::hdr::decoder::HDRMetadata::orientation","value":"((i8, i8), (i8, i8))","parent":{"krate":0,"index":3458},"children":[],"decl_id":null,"docs":" Orientation matrix. For standard orientation it is ((1,0),(0,1)) - left to right, top to bottom.\n First pair tells how resulting pixel coordinates change along a scanline.\n Second pair tells how they change from one scanline to the next.\n","sig":null,"attributes":[{"value":"/ Orientation matrix. For standard orientation it is ((1,0),(0,1)) - left to right, top to bottom.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":276494,"byte_end":276594,"line_start":644,"line_end":644,"column_start":5,"column_end":105}},{"value":"/ First pair tells how resulting pixel coordinates change along a scanline.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":276599,"byte_end":276676,"line_start":645,"line_end":645,"column_start":5,"column_end":82}},{"value":"/ Second pair tells how they change from one scanline to the next.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":276681,"byte_end":276749,"line_start":646,"line_end":646,"column_start":5,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":3462},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":276994,"byte_end":277002,"line_start":652,"line_end":652,"column_start":9,"column_end":17},"name":"exposure","qualname":"::hdr::decoder::HDRMetadata::exposure","value":"std::option::Option<f32>","parent":{"krate":0,"index":3458},"children":[],"decl_id":null,"docs":" Divide color values by exposure to get to get physical radiance in\n watts/steradian/m<sup>2</sup>","sig":null,"attributes":[{"value":"/ Divide color values by exposure to get to get physical radiance in","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":276797,"byte_end":276867,"line_start":648,"line_end":648,"column_start":5,"column_end":75}},{"value":"/ watts/steradian/m<sup>2</sup>","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":276872,"byte_end":276905,"line_start":649,"line_end":649,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":276910,"byte_end":276913,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ Image may not contain physical data, even if this field is set.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":276918,"byte_end":276985,"line_start":651,"line_end":651,"column_start":5,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":3463},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":277246,"byte_end":277262,"line_start":657,"line_end":657,"column_start":9,"column_end":25},"name":"color_correction","qualname":"::hdr::decoder::HDRMetadata::color_correction","value":"std::option::Option<(f32, f32, f32)>","parent":{"krate":0,"index":3458},"children":[],"decl_id":null,"docs":" Divide color values by corresponding tuple member (r, g, b) to get to get physical radiance\n in watts/steradian/m<sup>2</sup>","sig":null,"attributes":[{"value":"/ Divide color values by corresponding tuple member (r, g, b) to get to get physical radiance","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":277021,"byte_end":277116,"line_start":653,"line_end":653,"column_start":5,"column_end":100}},{"value":"/ in watts/steradian/m<sup>2</sup>","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":277121,"byte_end":277157,"line_start":654,"line_end":654,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":277162,"byte_end":277165,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ Image may not contain physical data, even if this field is set.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":277170,"byte_end":277237,"line_start":656,"line_end":656,"column_start":5,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":3464},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":277341,"byte_end":277359,"line_start":659,"line_end":659,"column_start":9,"column_end":27},"name":"pixel_aspect_ratio","qualname":"::hdr::decoder::HDRMetadata::pixel_aspect_ratio","value":"std::option::Option<f32>","parent":{"krate":0,"index":3458},"children":[],"decl_id":null,"docs":" Pixel height divided by pixel width\n","sig":null,"attributes":[{"value":"/ Pixel height divided by pixel width","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":277293,"byte_end":277332,"line_start":658,"line_end":658,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":3465},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":277588,"byte_end":277605,"line_start":663,"line_end":663,"column_start":9,"column_end":26},"name":"custom_attributes","qualname":"::hdr::decoder::HDRMetadata::custom_attributes","value":"std::vec::Vec<(std::string::String, std::string::String)>","parent":{"krate":0,"index":3458},"children":[],"decl_id":null,"docs":" All lines contained in image header are put here. Ordering of lines is preserved.\n Lines in the form \"key=value\" are represented as (\"key\", \"value\").\n All other lines are (\"\", \"line\")\n","sig":null,"attributes":[{"value":"/ All lines contained in image header are put here. Ordering of lines is preserved.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":277378,"byte_end":277463,"line_start":660,"line_end":660,"column_start":5,"column_end":90}},{"value":"/ Lines in the form \"key=value\" are represented as (\"key\", \"value\").","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":277468,"byte_end":277538,"line_start":661,"line_end":661,"column_start":5,"column_end":75}},{"value":"/ All other lines are (\"\", \"line\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":277543,"byte_end":277579,"line_start":662,"line_end":662,"column_start":5,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":1200},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":287381,"byte_end":287394,"line_start":922,"line_end":922,"column_start":8,"column_end":21},"name":"read_raw_file","qualname":"::hdr::decoder::read_raw_file","value":"fn <P> (path: P) -> ::std::io::Result<Vec<Rgb<f32>>>","parent":null,"children":[],"decl_id":null,"docs":" Helper function for reading raw 3-channel f32 images\n","sig":null,"attributes":[{"value":"/ Helper function for reading raw 3-channel f32 images","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":287317,"byte_end":287373,"line_start":921,"line_end":921,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":1217},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/encoder.rs","byte_start":288170,"byte_end":288180,"line_start":7,"line_end":7,"column_start":12,"column_end":22},"name":"HDREncoder","qualname":"::hdr::encoder::HDREncoder","value":"HDREncoder {  }","parent":null,"children":[{"krate":0,"index":1219}],"decl_id":null,"docs":" Radiance HDR encoder\n","sig":null,"attributes":[{"value":"/ Radiance HDR encoder","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/encoder.rs","byte_start":288134,"byte_end":288158,"line_start":6,"line_end":6,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1222},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/encoder.rs","byte_start":288272,"byte_end":288275,"line_start":13,"line_end":13,"column_start":12,"column_end":15},"name":"new","qualname":"<HDREncoder<W>>::new","value":"fn (w: W) -> HDREncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates encoder\n","sig":null,"attributes":[{"value":"/ Creates encoder","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/encoder.rs","byte_start":288241,"byte_end":288260,"line_start":12,"line_end":12,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1223},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/encoder.rs","byte_start":288438,"byte_end":288444,"line_start":19,"line_end":19,"column_start":12,"column_end":18},"name":"encode","qualname":"<HDREncoder<W>>::encode","value":"fn (mut self, data: &[Rgb<f32>], width: usize, height: usize) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image ```data```\n that has dimensions ```width``` and ```height```\n","sig":null,"attributes":[{"value":"/ Encodes the image ```data```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/encoder.rs","byte_start":288337,"byte_end":288369,"line_start":17,"line_end":17,"column_start":5,"column_end":37}},{"value":"/ that has dimensions ```width``` and ```height```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/encoder.rs","byte_start":288374,"byte_end":288426,"line_start":18,"line_end":18,"column_start":5,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":1255},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/encoder.rs","byte_start":295869,"byte_end":295877,"line_start":227,"line_end":227,"column_start":8,"column_end":16},"name":"to_rgbe8","qualname":"::hdr::encoder::to_rgbe8","value":"fn (pix: Rgb<f32>) -> RGBE8Pixel","parent":null,"children":[],"decl_id":null,"docs":" Converts ```Rgb<f32>``` into ```RGBE8Pixel```\n","sig":null,"attributes":[{"value":"/ Converts ```Rgb<f32>``` into ```RGBE8Pixel```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/encoder.rs","byte_start":295812,"byte_end":295861,"line_start":226,"line_end":226,"column_start":1,"column_end":50}}]},{"kind":"Mod","id":{"krate":0,"index":1259},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/ico/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ico","qualname":"::ico","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/ico/mod.rs","parent":null,"children":[{"krate":0,"index":1260},{"krate":0,"index":1261},{"krate":0,"index":1262},{"krate":0,"index":1333}],"decl_id":null,"docs":"  Decoding and Encoding of ICO files","sig":null,"attributes":[{"value":"cfg(feature = \"ico\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":2342,"byte_end":2365,"line_start":94,"line_end":94,"column_start":1,"column_end":24}},{"value":"!  Decoding and Encoding of ICO files","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/ico/mod.rs","byte_start":303247,"byte_end":303286,"line_start":1,"line_end":1,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/ico/mod.rs","byte_start":303287,"byte_end":303290,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"!  A decoder and encoder for ICO (Windows Icon) image container files.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/ico/mod.rs","byte_start":303291,"byte_end":303363,"line_start":3,"line_end":3,"column_start":1,"column_end":73}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/ico/mod.rs","byte_start":303364,"byte_end":303367,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"!  # Related Links","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/ico/mod.rs","byte_start":303368,"byte_end":303388,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"!  * <https://msdn.microsoft.com/en-us/library/ms997538.aspx>","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/ico/mod.rs","byte_start":303389,"byte_end":303452,"line_start":6,"line_end":6,"column_start":1,"column_end":64}},{"value":"!  * <https://en.wikipedia.org/wiki/ICO_%28file_format%29>","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/ico/mod.rs","byte_start":303453,"byte_end":303513,"line_start":7,"line_end":7,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":1284},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/ico/decoder.rs","byte_start":304125,"byte_end":304135,"line_start":18,"line_end":18,"column_start":12,"column_end":22},"name":"ICODecoder","qualname":"::ico::decoder::ICODecoder","value":"ICODecoder {  }","parent":null,"children":[{"krate":0,"index":1286},{"krate":0,"index":1287}],"decl_id":null,"docs":" An ico decoder\n","sig":null,"attributes":[{"value":"/ An ico decoder","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/ico/decoder.rs","byte_start":304095,"byte_end":304113,"line_start":17,"line_end":17,"column_start":1,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":1298},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/ico/decoder.rs","byte_start":304633,"byte_end":304636,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<ICODecoder<R>>::new","value":"fn (mut r: R) -> ImageResult<ICODecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[{"value":"/ Create a new decoder that decodes from the stream ```r```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/ico/decoder.rs","byte_start":304560,"byte_end":304621,"line_start":43,"line_end":43,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":1316},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/ico/decoder.rs","byte_start":308226,"byte_end":308235,"line_start":164,"line_end":164,"column_start":12,"column_end":21},"name":"IcoReader","qualname":"::ico::decoder::IcoReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[{"value":"/ Wrapper struct around a `Cursor<Vec<u8>>`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/ico/decoder.rs","byte_start":308169,"byte_end":308214,"line_start":163,"line_end":163,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":1347},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/ico/encoder.rs","byte_start":313489,"byte_end":313499,"line_start":16,"line_end":16,"column_start":12,"column_end":22},"name":"ICOEncoder","qualname":"::ico::encoder::ICOEncoder","value":"ICOEncoder {  }","parent":null,"children":[{"krate":0,"index":1349}],"decl_id":null,"docs":" ICO encoder\n","sig":null,"attributes":[{"value":"/ ICO encoder","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/ico/encoder.rs","byte_start":313462,"byte_end":313477,"line_start":15,"line_end":15,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1352},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/ico/encoder.rs","byte_start":313631,"byte_end":313634,"line_start":22,"line_end":22,"column_start":12,"column_end":15},"name":"new","qualname":"<ICOEncoder<W>>::new","value":"fn (w: W) -> ICOEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```.\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to ```w```.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/ico/encoder.rs","byte_start":313560,"byte_end":313619,"line_start":21,"line_end":21,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1353},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/ico/encoder.rs","byte_start":313932,"byte_end":313938,"line_start":29,"line_end":29,"column_start":12,"column_end":18},"name":"encode","qualname":"<ICOEncoder<W>>::encode","value":"fn (mut self, data: &[u8], width: u32, height: u32, color: ColorType) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image ```image``` that has dimensions ```width``` and\n ```height``` and ```ColorType``` ```c```.  The dimensions of the image\n must be between 1 and 256 (inclusive) or an error will be returned.\n","sig":null,"attributes":[{"value":"/ Encodes the image ```image``` that has dimensions ```width``` and","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/ico/encoder.rs","byte_start":313696,"byte_end":313765,"line_start":26,"line_end":26,"column_start":5,"column_end":74}},{"value":"/ ```height``` and ```ColorType``` ```c```.  The dimensions of the image","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/ico/encoder.rs","byte_start":313770,"byte_end":313844,"line_start":27,"line_end":27,"column_start":5,"column_end":79}},{"value":"/ must be between 1 and 256 (inclusive) or an error will be returned.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/ico/encoder.rs","byte_start":313849,"byte_end":313920,"line_start":28,"line_end":28,"column_start":5,"column_end":76}}]},{"kind":"Mod","id":{"krate":0,"index":1360},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/jpeg/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"jpeg","qualname":"::jpeg","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/jpeg/mod.rs","parent":null,"children":[{"krate":0,"index":1361},{"krate":0,"index":1362},{"krate":0,"index":1363},{"krate":0,"index":1407},{"krate":0,"index":1505},{"krate":0,"index":1508}],"decl_id":null,"docs":" Decoding and Encoding of JPEG Images","sig":null,"attributes":[{"value":"cfg(feature = \"jpeg\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":2379,"byte_end":2403,"line_start":96,"line_end":96,"column_start":1,"column_end":25}},{"value":"! Decoding and Encoding of JPEG Images","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/jpeg/mod.rs","byte_start":315989,"byte_end":316029,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/jpeg/mod.rs","byte_start":316030,"byte_end":316033,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! JPEG (Joint Photographic Experts Group) is an image format that supports lossy compression.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/jpeg/mod.rs","byte_start":316034,"byte_end":316129,"line_start":3,"line_end":3,"column_start":1,"column_end":96}},{"value":"! This module implements the Baseline JPEG standard.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/jpeg/mod.rs","byte_start":316130,"byte_end":316184,"line_start":4,"line_end":4,"column_start":1,"column_end":55}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/jpeg/mod.rs","byte_start":316185,"byte_end":316188,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! # Related Links","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/jpeg/mod.rs","byte_start":316189,"byte_end":316208,"line_start":6,"line_end":6,"column_start":1,"column_end":20}},{"value":"! * <http://www.w3.org/Graphics/JPEG/itu-t81.pdf> - The JPEG specification","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/jpeg/mod.rs","byte_start":316209,"byte_end":316285,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/jpeg/mod.rs","byte_start":316286,"byte_end":316289,"line_start":8,"line_end":8,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":1376},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/jpeg/decoder.rs","byte_start":316630,"byte_end":316641,"line_start":11,"line_end":11,"column_start":12,"column_end":23},"name":"JPEGDecoder","qualname":"::jpeg::decoder::JPEGDecoder","value":"JPEGDecoder {  }","parent":null,"children":[{"krate":0,"index":1378},{"krate":0,"index":1379}],"decl_id":null,"docs":" JPEG decoder\n","sig":null,"attributes":[{"value":"/ JPEG decoder","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/jpeg/decoder.rs","byte_start":316602,"byte_end":316618,"line_start":10,"line_end":10,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1382},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/jpeg/decoder.rs","byte_start":316836,"byte_end":316839,"line_start":18,"line_end":18,"column_start":12,"column_end":15},"name":"new","qualname":"<JPEGDecoder<R>>::new","value":"fn (r: R) -> ImageResult<JPEGDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[{"value":"/ Create a new decoder that decodes from the stream ```r```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/jpeg/decoder.rs","byte_start":316763,"byte_end":316824,"line_start":17,"line_end":17,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":1383},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/jpeg/decoder.rs","byte_start":317390,"byte_end":317400,"line_start":37,"line_end":37,"column_start":12,"column_end":22},"name":"JpegReader","qualname":"::jpeg::decoder::JpegReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[{"value":"/ Wrapper struct around a `Cursor<Vec<u8>>`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/jpeg/decoder.rs","byte_start":317333,"byte_end":317378,"line_start":36,"line_end":36,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":1464},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/jpeg/encoder.rs","byte_start":328475,"byte_end":328486,"line_start":277,"line_end":277,"column_start":12,"column_end":23},"name":"JPEGEncoder","qualname":"::jpeg::encoder::JPEGEncoder","value":"JPEGEncoder {  }","parent":null,"children":[{"krate":0,"index":1467},{"krate":0,"index":1468},{"krate":0,"index":1469},{"krate":0,"index":1470},{"krate":0,"index":1471},{"krate":0,"index":1472},{"krate":0,"index":1473}],"decl_id":null,"docs":" The representation of a JPEG encoder\n","sig":null,"attributes":[{"value":"/ The representation of a JPEG encoder","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/jpeg/encoder.rs","byte_start":328423,"byte_end":328463,"line_start":276,"line_end":276,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1477},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/jpeg/encoder.rs","byte_start":328842,"byte_end":328845,"line_start":291,"line_end":291,"column_start":12,"column_end":15},"name":"new","qualname":"<JPEGEncoder>::new","value":"fn (w: &mut W) -> JPEGEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to ```w```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/jpeg/encoder.rs","byte_start":328772,"byte_end":328830,"line_start":290,"line_end":290,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1478},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/jpeg/encoder.rs","byte_start":329138,"byte_end":329154,"line_start":298,"line_end":298,"column_start":12,"column_end":28},"name":"new_with_quality","qualname":"<JPEGEncoder>::new_with_quality","value":"fn (w: &mut W, quality: u8) -> JPEGEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```, and has\n the quality parameter ```quality``` with a value in the range 1-100\n where 1 is the worst and 100 is the best.\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to ```w```, and has","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/jpeg/encoder.rs","byte_start":328933,"byte_end":329000,"line_start":295,"line_end":295,"column_start":5,"column_end":72}},{"value":"/ the quality parameter ```quality``` with a value in the range 1-100","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/jpeg/encoder.rs","byte_start":329005,"byte_end":329076,"line_start":296,"line_end":296,"column_start":5,"column_end":76}},{"value":"/ where 1 is the worst and 100 is the best.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/jpeg/encoder.rs","byte_start":329081,"byte_end":329126,"line_start":297,"line_end":297,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1480},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/jpeg/encoder.rs","byte_start":331441,"byte_end":331447,"line_start":370,"line_end":370,"column_start":12,"column_end":18},"name":"encode","qualname":"<JPEGEncoder>::encode","value":"fn (&mut self, image: &[u8], width: u32, height: u32, c: color::ColorType) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image ```image```\n that has dimensions ```width``` and ```height```\n and ```ColorType``` ```c```","sig":null,"attributes":[{"value":"/ Encodes the image ```image```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/jpeg/encoder.rs","byte_start":331237,"byte_end":331270,"line_start":365,"line_end":365,"column_start":5,"column_end":38}},{"value":"/ that has dimensions ```width``` and ```height```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/jpeg/encoder.rs","byte_start":331275,"byte_end":331327,"line_start":366,"line_end":366,"column_start":5,"column_end":57}},{"value":"/ and ```ColorType``` ```c```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/jpeg/encoder.rs","byte_start":331332,"byte_end":331363,"line_start":367,"line_end":367,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/jpeg/encoder.rs","byte_start":331368,"byte_end":331371,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ The Image in encoded with subsampling ratio 4:2:2","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/jpeg/encoder.rs","byte_start":331376,"byte_end":331429,"line_start":369,"line_end":369,"column_start":5,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":1524},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/png.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"png","qualname":"::png","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/png.rs","parent":null,"children":[{"krate":0,"index":1525},{"krate":0,"index":1526},{"krate":0,"index":1530},{"krate":0,"index":1531},{"krate":0,"index":1535},{"krate":0,"index":1540},{"krate":0,"index":1543},{"krate":0,"index":1547},{"krate":0,"index":1551},{"krate":0,"index":1554},{"krate":0,"index":1563},{"krate":0,"index":1566},{"krate":0,"index":1572},{"krate":0,"index":1575},{"krate":0,"index":1578}],"decl_id":null,"docs":" Decoding and Encoding of PNG Images","sig":null,"attributes":[{"value":"cfg(feature = \"png_codec\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":2418,"byte_end":2447,"line_start":98,"line_end":98,"column_start":1,"column_end":30}},{"value":"! Decoding and Encoding of PNG Images","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/png.rs","byte_start":353737,"byte_end":353776,"line_start":1,"line_end":1,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/png.rs","byte_start":353777,"byte_end":353780,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! PNG (Portable Network Graphics) is an image format that supports lossless compression.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/png.rs","byte_start":353781,"byte_end":353871,"line_start":3,"line_end":3,"column_start":1,"column_end":91}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/png.rs","byte_start":353872,"byte_end":353875,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! # Related Links","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/png.rs","byte_start":353876,"byte_end":353895,"line_start":5,"line_end":5,"column_start":1,"column_end":20}},{"value":"! * <http://www.w3.org/TR/PNG/> - The PNG Specification","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/png.rs","byte_start":353896,"byte_end":353953,"line_start":6,"line_end":6,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/png.rs","byte_start":353954,"byte_end":353957,"line_start":7,"line_end":7,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":1535},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/png.rs","byte_start":354278,"byte_end":354287,"line_start":21,"line_end":21,"column_start":12,"column_end":21},"name":"PNGReader","qualname":"::png::PNGReader","value":"PNGReader {  }","parent":null,"children":[{"krate":0,"index":1537},{"krate":0,"index":1538},{"krate":0,"index":1539}],"decl_id":null,"docs":" PNG Reader","sig":null,"attributes":[{"value":"/ PNG Reader","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/png.rs","byte_start":354088,"byte_end":354102,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/png.rs","byte_start":354103,"byte_end":354106,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This reader will try to read the png one row at a time,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/png.rs","byte_start":354107,"byte_end":354166,"line_start":18,"line_end":18,"column_start":1,"column_end":60}},{"value":"/ however for interlaced png files this is not possible and","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/png.rs","byte_start":354167,"byte_end":354228,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/ these are therefore read at once.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/png.rs","byte_start":354229,"byte_end":354266,"line_start":20,"line_end":20,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":1547},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/png.rs","byte_start":356290,"byte_end":356300,"line_start":92,"line_end":92,"column_start":12,"column_end":22},"name":"PNGDecoder","qualname":"::png::PNGDecoder","value":"PNGDecoder {  }","parent":null,"children":[{"krate":0,"index":1549},{"krate":0,"index":1550}],"decl_id":null,"docs":" PNG decoder\n","sig":null,"attributes":[{"value":"/ PNG decoder","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/png.rs","byte_start":356263,"byte_end":356278,"line_start":91,"line_end":91,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1553},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/png.rs","byte_start":356477,"byte_end":356480,"line_start":99,"line_end":99,"column_start":12,"column_end":15},"name":"new","qualname":"<PNGDecoder<R>>::new","value":"fn (r: R) -> ImageResult<PNGDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[{"value":"/ Creates a new decoder that decodes from the stream ```r```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/png.rs","byte_start":356403,"byte_end":356465,"line_start":98,"line_end":98,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":1563},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/png.rs","byte_start":357661,"byte_end":357671,"line_start":141,"line_end":141,"column_start":12,"column_end":22},"name":"PNGEncoder","qualname":"::png::PNGEncoder","value":"PNGEncoder {  }","parent":null,"children":[{"krate":0,"index":1565}],"decl_id":null,"docs":" PNG encoder\n","sig":null,"attributes":[{"value":"/ PNG encoder","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/png.rs","byte_start":357634,"byte_end":357649,"line_start":140,"line_end":140,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1568},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/png.rs","byte_start":357802,"byte_end":357805,"line_start":147,"line_end":147,"column_start":12,"column_end":15},"name":"new","qualname":"<PNGEncoder<W>>::new","value":"fn (w: W) -> PNGEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to ```w```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/png.rs","byte_start":357732,"byte_end":357790,"line_start":146,"line_end":146,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1569},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/png.rs","byte_start":358005,"byte_end":358011,"line_start":154,"line_end":154,"column_start":12,"column_end":18},"name":"encode","qualname":"<PNGEncoder<W>>::encode","value":"fn (self, data: &[u8], width: u32, height: u32, color: ColorType) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image ```image```\n that has dimensions ```width``` and ```height```\n and ```ColorType``` ```c```\n","sig":null,"attributes":[{"value":"/ Encodes the image ```image```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/png.rs","byte_start":357867,"byte_end":357900,"line_start":151,"line_end":151,"column_start":5,"column_end":38}},{"value":"/ that has dimensions ```width``` and ```height```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/png.rs","byte_start":357905,"byte_end":357957,"line_start":152,"line_end":152,"column_start":5,"column_end":57}},{"value":"/ and ```ColorType``` ```c```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/png.rs","byte_start":357962,"byte_end":357993,"line_start":153,"line_end":153,"column_start":5,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":1581},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"pnm","qualname":"::pnm","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/mod.rs","parent":null,"children":[{"krate":0,"index":1582},{"krate":0,"index":1583},{"krate":0,"index":1584},{"krate":0,"index":1585},{"krate":0,"index":1586},{"krate":0,"index":1592},{"krate":0,"index":1596},{"krate":0,"index":1616},{"krate":0,"index":1765},{"krate":0,"index":1889}],"decl_id":null,"docs":" Decoding of netpbm image formats (pbm, pgm, ppm and pam).","sig":null,"attributes":[{"value":"cfg(feature = \"pnm\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":2461,"byte_end":2484,"line_start":100,"line_end":100,"column_start":1,"column_end":24}},{"value":"! Decoding of netpbm image formats (pbm, pgm, ppm and pam).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/mod.rs","byte_start":361708,"byte_end":361769,"line_start":1,"line_end":1,"column_start":1,"column_end":62}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/mod.rs","byte_start":361770,"byte_end":361773,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! The formats pbm, pgm and ppm are fully supported. The pam decoder recognizes the tuple types","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/mod.rs","byte_start":361774,"byte_end":361870,"line_start":3,"line_end":3,"column_start":1,"column_end":97}},{"value":"! `BLACKANDWHITE`, `GRAYSCALE` and `RGB` and explicitely recognizes but rejects their `_ALPHA`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/mod.rs","byte_start":361871,"byte_end":361967,"line_start":4,"line_end":4,"column_start":1,"column_end":97}},{"value":"! variants for now as alpha color types are unsupported.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/mod.rs","byte_start":361968,"byte_end":362026,"line_start":5,"line_end":5,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":1663},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/decoder.rs","byte_start":371512,"byte_end":371522,"line_start":46,"line_end":46,"column_start":12,"column_end":22},"name":"PNMDecoder","qualname":"::pnm::decoder::PNMDecoder","value":"PNMDecoder {  }","parent":null,"children":[{"krate":0,"index":1665},{"krate":0,"index":1666},{"krate":0,"index":1667}],"decl_id":null,"docs":" PNM decoder\n","sig":null,"attributes":[{"value":"/ PNM decoder","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/decoder.rs","byte_start":371485,"byte_end":371500,"line_start":45,"line_end":45,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1670},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/decoder.rs","byte_start":371712,"byte_end":371715,"line_start":54,"line_end":54,"column_start":12,"column_end":15},"name":"new","qualname":"<PNMDecoder<R>>::new","value":"fn (read: R) -> ImageResult<PNMDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream ```read```\n","sig":null,"attributes":[{"value":"/ Create a new decoder that decodes from the stream ```read```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/decoder.rs","byte_start":371636,"byte_end":371700,"line_start":53,"line_end":53,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1671},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/decoder.rs","byte_start":373184,"byte_end":373194,"line_start":87,"line_end":87,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PNMDecoder<R>>::into_inner","value":"fn (self) -> (R, PNMHeader)","parent":null,"children":[],"decl_id":null,"docs":" Extract the reader and header after an image has been read.\n","sig":null,"attributes":[{"value":"/ Extract the reader and header after an image has been read.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/decoder.rs","byte_start":373109,"byte_end":373172,"line_start":86,"line_end":86,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":1700},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/decoder.rs","byte_start":384894,"byte_end":384903,"line_start":412,"line_end":412,"column_start":12,"column_end":21},"name":"PnmReader","qualname":"::pnm::decoder::PnmReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[{"value":"/ Wrapper struct around a `Cursor<Vec<u8>>`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/decoder.rs","byte_start":384837,"byte_end":384882,"line_start":411,"line_end":411,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1725},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/decoder.rs","byte_start":387455,"byte_end":387462,"line_start":484,"line_end":484,"column_start":12,"column_end":19},"name":"subtype","qualname":"<PNMDecoder<R>>::subtype","value":"fn (&self) -> PNMSubtype","parent":null,"children":[],"decl_id":null,"docs":" Get the pnm subtype, depending on the magic constant contained in the header\n","sig":null,"attributes":[{"value":"/ Get the pnm subtype, depending on the magic constant contained in the header","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/decoder.rs","byte_start":387363,"byte_end":387443,"line_start":483,"line_end":483,"column_start":5,"column_end":85}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3537},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/encoder.rs","byte_start":407747,"byte_end":407749,"line_start":22,"line_end":22,"column_start":5,"column_end":7},"name":"U8","qualname":"::pnm::encoder::FlatSamples::U8","value":"FlatSamples::U8(&'a [u8])","parent":{"krate":0,"index":3535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3540},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/encoder.rs","byte_start":407765,"byte_end":407768,"line_start":23,"line_end":23,"column_start":5,"column_end":8},"name":"U16","qualname":"::pnm::encoder::FlatSamples::U16","value":"FlatSamples::U16(&'a [u16])","parent":{"krate":0,"index":3535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3535},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/encoder.rs","byte_start":407725,"byte_end":407736,"line_start":21,"line_end":21,"column_start":10,"column_end":21},"name":"FlatSamples","qualname":"::pnm::encoder::FlatSamples","value":"FlatSamples::{U8, U16}","parent":null,"children":[{"krate":0,"index":3537},{"krate":0,"index":3540}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1796},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/encoder.rs","byte_start":407849,"byte_end":407859,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"name":"PNMEncoder","qualname":"::pnm::encoder::PNMEncoder","value":"PNMEncoder {  }","parent":null,"children":[{"krate":0,"index":1798},{"krate":0,"index":1799}],"decl_id":null,"docs":" Encodes images to any of the `pnm` image formats.\n","sig":null,"attributes":[{"value":"/ Encodes images to any of the `pnm` image formats.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/encoder.rs","byte_start":407784,"byte_end":407837,"line_start":26,"line_end":26,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1834},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/encoder.rs","byte_start":409233,"byte_end":409236,"line_start":82,"line_end":82,"column_start":12,"column_end":15},"name":"new","qualname":"<PNMEncoder<W>>::new","value":"fn (writer: W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new PNMEncoder from the `writer`.","sig":null,"attributes":[{"value":"/ Create new PNMEncoder from the `writer`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/encoder.rs","byte_start":408931,"byte_end":408975,"line_start":77,"line_end":77,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/encoder.rs","byte_start":408980,"byte_end":408983,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ The encoded images will have some `pnm` format. If more control over the image type is","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/encoder.rs","byte_start":408988,"byte_end":409078,"line_start":79,"line_end":79,"column_start":5,"column_end":95}},{"value":"/ required, use either one of `with_subtype` or `with_header`. For more information on the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/encoder.rs","byte_start":409083,"byte_end":409175,"line_start":80,"line_end":80,"column_start":5,"column_end":97}},{"value":"/ behaviour, see `with_dynamic_header`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/encoder.rs","byte_start":409180,"byte_end":409221,"line_start":81,"line_end":81,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1835},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/encoder.rs","byte_start":409786,"byte_end":409798,"line_start":96,"line_end":96,"column_start":12,"column_end":24},"name":"with_subtype","qualname":"<PNMEncoder<W>>::with_subtype","value":"fn (self, subtype: PNMSubtype) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Encode a specific pnm subtype image.","sig":null,"attributes":[{"value":"/ Encode a specific pnm subtype image.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/encoder.rs","byte_start":409365,"byte_end":409405,"line_start":89,"line_end":89,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/encoder.rs","byte_start":409410,"byte_end":409413,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ The magic number and encoding type will be chosen as provided while the rest of the header","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/encoder.rs","byte_start":409418,"byte_end":409512,"line_start":91,"line_end":91,"column_start":5,"column_end":99}},{"value":"/ data will be generated dynamically. Trying to encode incompatible images (e.g. encoding an","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/encoder.rs","byte_start":409517,"byte_end":409611,"line_start":92,"line_end":92,"column_start":5,"column_end":99}},{"value":"/ RGB image as Graymap) will result in an error.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/encoder.rs","byte_start":409616,"byte_end":409666,"line_start":93,"line_end":93,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/encoder.rs","byte_start":409671,"byte_end":409674,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ This will overwrite the effect of earlier calls to `with_header` and `with_dynamic_header`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/encoder.rs","byte_start":409679,"byte_end":409774,"line_start":95,"line_end":95,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":1836},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/encoder.rs","byte_start":410504,"byte_end":410515,"line_start":112,"line_end":112,"column_start":12,"column_end":23},"name":"with_header","qualname":"<PNMEncoder<W>>::with_header","value":"fn (self, header: PNMHeader) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Enforce the use of a chosen header.","sig":null,"attributes":[{"value":"/ Enforce the use of a chosen header.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/encoder.rs","byte_start":409965,"byte_end":410004,"line_start":103,"line_end":103,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/encoder.rs","byte_start":410009,"byte_end":410012,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ While this option gives the most control over the actual written data, the encoding process","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/encoder.rs","byte_start":410017,"byte_end":410112,"line_start":105,"line_end":105,"column_start":5,"column_end":100}},{"value":"/ will error in case the header data and image parameters do not agree. It is the users","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/encoder.rs","byte_start":410117,"byte_end":410206,"line_start":106,"line_end":106,"column_start":5,"column_end":94}},{"value":"/ obligation to ensure that the width and height are set accordingly, for example.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/encoder.rs","byte_start":410211,"byte_end":410295,"line_start":107,"line_end":107,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/encoder.rs","byte_start":410300,"byte_end":410303,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ Choose this option if you want a lossless decoding/encoding round trip.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/encoder.rs","byte_start":410308,"byte_end":410383,"line_start":109,"line_end":109,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/encoder.rs","byte_start":410388,"byte_end":410391,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ This will overwrite the effect of earlier calls to `with_subtype` and `with_dynamic_header`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/encoder.rs","byte_start":410396,"byte_end":410492,"line_start":111,"line_end":111,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":1837},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/encoder.rs","byte_start":411086,"byte_end":411105,"line_start":126,"line_end":126,"column_start":12,"column_end":31},"name":"with_dynamic_header","qualname":"<PNMEncoder<W>>::with_dynamic_header","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create the header dynamically for each image.","sig":null,"attributes":[{"value":"/ Create the header dynamically for each image.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/encoder.rs","byte_start":410678,"byte_end":410727,"line_start":119,"line_end":119,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/encoder.rs","byte_start":410732,"byte_end":410735,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ This is the default option upon creation of the encoder. With this, most images should be","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/encoder.rs","byte_start":410740,"byte_end":410833,"line_start":121,"line_end":121,"column_start":5,"column_end":98}},{"value":"/ encodable but the specific format chosen is out of the users control. The pnm subtype is","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/encoder.rs","byte_start":410838,"byte_end":410930,"line_start":122,"line_end":122,"column_start":5,"column_end":97}},{"value":"/ chosen arbitrarily by the library.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/encoder.rs","byte_start":410935,"byte_end":410973,"line_start":123,"line_end":123,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/encoder.rs","byte_start":410978,"byte_end":410981,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ This will overwrite the effect of earlier calls to `with_subtype` and `with_header`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/encoder.rs","byte_start":410986,"byte_end":411074,"line_start":125,"line_end":125,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":1838},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/encoder.rs","byte_start":411481,"byte_end":411487,"line_start":137,"line_end":137,"column_start":12,"column_end":18},"name":"encode","qualname":"<PNMEncoder<W>>::encode","value":"fn <'s, S> (&mut self, image: S, width: u32, height: u32, color: ColorType) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Encode an image whose samples are represented as `u8`.","sig":null,"attributes":[{"value":"/ Encode an image whose samples are represented as `u8`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/encoder.rs","byte_start":411242,"byte_end":411300,"line_start":133,"line_end":133,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/encoder.rs","byte_start":411305,"byte_end":411308,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Some `pnm` subtypes are incompatible with some color options, a chosen header most","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/encoder.rs","byte_start":411313,"byte_end":411399,"line_start":135,"line_end":135,"column_start":5,"column_end":91}},{"value":"/ certainly with any deviation from the original decoded image.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/encoder.rs","byte_start":411404,"byte_end":411469,"line_start":136,"line_end":136,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3549},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":429249,"byte_end":429255,"line_start":7,"line_end":7,"column_start":5,"column_end":11},"name":"Binary","qualname":"::pnm::header::SampleEncoding::Binary","value":"SampleEncoding::Binary","parent":{"krate":0,"index":3548},"children":[],"decl_id":null,"docs":" Samples are unsigned binary integers in big endian\n","sig":null,"attributes":[{"value":"/ Samples are unsigned binary integers in big endian","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":429190,"byte_end":429244,"line_start":6,"line_end":6,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3551},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":429339,"byte_end":429344,"line_start":10,"line_end":10,"column_start":5,"column_end":10},"name":"Ascii","qualname":"::pnm::header::SampleEncoding::Ascii","value":"SampleEncoding::Ascii","parent":{"krate":0,"index":3548},"children":[],"decl_id":null,"docs":" Samples are encoded as decimal ascii strings separated by whitespace\n","sig":null,"attributes":[{"value":"/ Samples are encoded as decimal ascii strings separated by whitespace","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":429262,"byte_end":429334,"line_start":9,"line_end":9,"column_start":5,"column_end":77}}]},{"kind":"Enum","id":{"krate":0,"index":3548},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":429169,"byte_end":429183,"line_start":5,"line_end":5,"column_start":10,"column_end":24},"name":"SampleEncoding","qualname":"::pnm::header::SampleEncoding","value":"SampleEncoding::{Binary, Ascii}","parent":null,"children":[{"krate":0,"index":3549},{"krate":0,"index":3551}],"decl_id":null,"docs":" The kind of encoding used to store sample values\n","sig":null,"attributes":[{"value":"/ The kind of encoding used to store sample values","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":429062,"byte_end":429114,"line_start":3,"line_end":3,"column_start":1,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3565},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":429497,"byte_end":429503,"line_start":17,"line_end":17,"column_start":5,"column_end":11},"name":"Bitmap","qualname":"::pnm::header::PNMSubtype::Bitmap","value":"PNMSubtype::Bitmap(SampleEncoding)","parent":{"krate":0,"index":3564},"children":[],"decl_id":null,"docs":" Magic numbers P1 and P4\n","sig":null,"attributes":[{"value":"/ Magic numbers P1 and P4","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":429465,"byte_end":429492,"line_start":16,"line_end":16,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3568},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":429558,"byte_end":429565,"line_start":20,"line_end":20,"column_start":5,"column_end":12},"name":"Graymap","qualname":"::pnm::header::PNMSubtype::Graymap","value":"PNMSubtype::Graymap(SampleEncoding)","parent":{"krate":0,"index":3564},"children":[],"decl_id":null,"docs":" Magic numbers P2 and P5\n","sig":null,"attributes":[{"value":"/ Magic numbers P2 and P5","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":429526,"byte_end":429553,"line_start":19,"line_end":19,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3571},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":429620,"byte_end":429626,"line_start":23,"line_end":23,"column_start":5,"column_end":11},"name":"Pixmap","qualname":"::pnm::header::PNMSubtype::Pixmap","value":"PNMSubtype::Pixmap(SampleEncoding)","parent":{"krate":0,"index":3564},"children":[],"decl_id":null,"docs":" Magic numbers P3 and P6\n","sig":null,"attributes":[{"value":"/ Magic numbers P3 and P6","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":429588,"byte_end":429615,"line_start":22,"line_end":22,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3574},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":429673,"byte_end":429685,"line_start":26,"line_end":26,"column_start":5,"column_end":17},"name":"ArbitraryMap","qualname":"::pnm::header::PNMSubtype::ArbitraryMap","value":"PNMSubtype::ArbitraryMap","parent":{"krate":0,"index":3564},"children":[],"decl_id":null,"docs":" Magic number P7\n","sig":null,"attributes":[{"value":"/ Magic number P7","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":429649,"byte_end":429668,"line_start":25,"line_end":25,"column_start":5,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":3564},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":429448,"byte_end":429458,"line_start":15,"line_end":15,"column_start":10,"column_end":20},"name":"PNMSubtype","qualname":"::pnm::header::PNMSubtype","value":"PNMSubtype::{Bitmap, Graymap, Pixmap, ArbitraryMap}","parent":null,"children":[{"krate":0,"index":3565},{"krate":0,"index":3568},{"krate":0,"index":3571},{"krate":0,"index":3574}],"decl_id":null,"docs":" Denotes the category of the magic number\n","sig":null,"attributes":[{"value":"/ Denotes the category of the magic number","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":429349,"byte_end":429393,"line_start":13,"line_end":13,"column_start":1,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":1891},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":430077,"byte_end":430086,"line_start":35,"line_end":35,"column_start":12,"column_end":21},"name":"PNMHeader","qualname":"::pnm::header::PNMHeader","value":"PNMHeader {  }","parent":null,"children":[{"krate":0,"index":1892},{"krate":0,"index":1893}],"decl_id":null,"docs":" Stores the complete header data of a file.","sig":null,"attributes":[{"value":"/ Stores the complete header data of a file.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":429690,"byte_end":429736,"line_start":29,"line_end":29,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":429737,"byte_end":429740,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Internally, provides mechanisms for lossless reencoding. After reading a file with the decoder","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":429741,"byte_end":429839,"line_start":31,"line_end":31,"column_start":1,"column_end":99}},{"value":"/ it is possible to recover the header and construct an encoder. Using the encoder on the just","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":429840,"byte_end":429936,"line_start":32,"line_end":32,"column_start":1,"column_end":97}},{"value":"/ loaded image should result in a byte copy of the original file (for single image pnms without","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":429937,"byte_end":430034,"line_start":33,"line_end":33,"column_start":1,"column_end":98}},{"value":"/ additional trailing data).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":430035,"byte_end":430065,"line_start":34,"line_end":34,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":3588},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":430415,"byte_end":430427,"line_start":49,"line_end":49,"column_start":12,"column_end":24},"name":"BitmapHeader","qualname":"::pnm::header::BitmapHeader","value":"BitmapHeader { encoding, height, width }","parent":null,"children":[{"krate":0,"index":3589},{"krate":0,"index":3590},{"krate":0,"index":3591}],"decl_id":null,"docs":" Header produced by a `pbm` file (\"Portable Bit Map\")\n","sig":null,"attributes":[{"value":"/ Header produced by a `pbm` file (\"Portable Bit Map\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":430317,"byte_end":430373,"line_start":47,"line_end":47,"column_start":1,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":3589},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":430475,"byte_end":430483,"line_start":51,"line_end":51,"column_start":9,"column_end":17},"name":"encoding","qualname":"::pnm::header::BitmapHeader::encoding","value":"pnm::header::SampleEncoding","parent":{"krate":0,"index":3588},"children":[],"decl_id":null,"docs":" Binary or Ascii encoded file\n","sig":null,"attributes":[{"value":"/ Binary or Ascii encoded file","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":430434,"byte_end":430466,"line_start":50,"line_end":50,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":3590},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":430543,"byte_end":430549,"line_start":54,"line_end":54,"column_start":9,"column_end":15},"name":"height","qualname":"::pnm::header::BitmapHeader::height","value":"u32","parent":{"krate":0,"index":3588},"children":[],"decl_id":null,"docs":" Height of the image file\n","sig":null,"attributes":[{"value":"/ Height of the image file","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":430506,"byte_end":430534,"line_start":53,"line_end":53,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":3591},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":430597,"byte_end":430602,"line_start":57,"line_end":57,"column_start":9,"column_end":14},"name":"width","qualname":"::pnm::header::BitmapHeader::width","value":"u32","parent":{"krate":0,"index":3588},"children":[],"decl_id":null,"docs":" Width of the image file\n","sig":null,"attributes":[{"value":"/ Width of the image file","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":430561,"byte_end":430588,"line_start":56,"line_end":56,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":3597},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":430711,"byte_end":430724,"line_start":62,"line_end":62,"column_start":12,"column_end":25},"name":"GraymapHeader","qualname":"::pnm::header::GraymapHeader","value":"GraymapHeader { encoding, height, width, maxwhite }","parent":null,"children":[{"krate":0,"index":3598},{"krate":0,"index":3599},{"krate":0,"index":3600},{"krate":0,"index":3601}],"decl_id":null,"docs":" Header produced by a `pgm` file (\"Portable Gray Map\")\n","sig":null,"attributes":[{"value":"/ Header produced by a `pgm` file (\"Portable Gray Map\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":430612,"byte_end":430669,"line_start":60,"line_end":60,"column_start":1,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":3598},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":430772,"byte_end":430780,"line_start":64,"line_end":64,"column_start":9,"column_end":17},"name":"encoding","qualname":"::pnm::header::GraymapHeader::encoding","value":"pnm::header::SampleEncoding","parent":{"krate":0,"index":3597},"children":[],"decl_id":null,"docs":" Binary or Ascii encoded file\n","sig":null,"attributes":[{"value":"/ Binary or Ascii encoded file","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":430731,"byte_end":430763,"line_start":63,"line_end":63,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":3599},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":430840,"byte_end":430846,"line_start":67,"line_end":67,"column_start":9,"column_end":15},"name":"height","qualname":"::pnm::header::GraymapHeader::height","value":"u32","parent":{"krate":0,"index":3597},"children":[],"decl_id":null,"docs":" Height of the image file\n","sig":null,"attributes":[{"value":"/ Height of the image file","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":430803,"byte_end":430831,"line_start":66,"line_end":66,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":3600},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":430894,"byte_end":430899,"line_start":70,"line_end":70,"column_start":9,"column_end":14},"name":"width","qualname":"::pnm::header::GraymapHeader::width","value":"u32","parent":{"krate":0,"index":3597},"children":[],"decl_id":null,"docs":" Width of the image file\n","sig":null,"attributes":[{"value":"/ Width of the image file","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":430858,"byte_end":430885,"line_start":69,"line_end":69,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":3601},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":430961,"byte_end":430969,"line_start":73,"line_end":73,"column_start":9,"column_end":17},"name":"maxwhite","qualname":"::pnm::header::GraymapHeader::maxwhite","value":"u32","parent":{"krate":0,"index":3597},"children":[],"decl_id":null,"docs":" Maximum sample value within the image\n","sig":null,"attributes":[{"value":"/ Maximum sample value within the image","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":430911,"byte_end":430952,"line_start":72,"line_end":72,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":3607},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":431079,"byte_end":431091,"line_start":78,"line_end":78,"column_start":12,"column_end":24},"name":"PixmapHeader","qualname":"::pnm::header::PixmapHeader","value":"PixmapHeader { encoding, height, width, maxval }","parent":null,"children":[{"krate":0,"index":3608},{"krate":0,"index":3609},{"krate":0,"index":3610},{"krate":0,"index":3611}],"decl_id":null,"docs":" Header produced by a `ppm` file (\"Portable Pixel Map\")\n","sig":null,"attributes":[{"value":"/ Header produced by a `ppm` file (\"Portable Pixel Map\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":430979,"byte_end":431037,"line_start":76,"line_end":76,"column_start":1,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":3608},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":431139,"byte_end":431147,"line_start":80,"line_end":80,"column_start":9,"column_end":17},"name":"encoding","qualname":"::pnm::header::PixmapHeader::encoding","value":"pnm::header::SampleEncoding","parent":{"krate":0,"index":3607},"children":[],"decl_id":null,"docs":" Binary or Ascii encoded file\n","sig":null,"attributes":[{"value":"/ Binary or Ascii encoded file","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":431098,"byte_end":431130,"line_start":79,"line_end":79,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":3609},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":431207,"byte_end":431213,"line_start":83,"line_end":83,"column_start":9,"column_end":15},"name":"height","qualname":"::pnm::header::PixmapHeader::height","value":"u32","parent":{"krate":0,"index":3607},"children":[],"decl_id":null,"docs":" Height of the image file\n","sig":null,"attributes":[{"value":"/ Height of the image file","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":431170,"byte_end":431198,"line_start":82,"line_end":82,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":3610},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":431261,"byte_end":431266,"line_start":86,"line_end":86,"column_start":9,"column_end":14},"name":"width","qualname":"::pnm::header::PixmapHeader::width","value":"u32","parent":{"krate":0,"index":3607},"children":[],"decl_id":null,"docs":" Width of the image file\n","sig":null,"attributes":[{"value":"/ Width of the image file","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":431225,"byte_end":431252,"line_start":85,"line_end":85,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":3611},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":431328,"byte_end":431334,"line_start":89,"line_end":89,"column_start":9,"column_end":15},"name":"maxval","qualname":"::pnm::header::PixmapHeader::maxval","value":"u32","parent":{"krate":0,"index":3607},"children":[],"decl_id":null,"docs":" Maximum sample value within the image\n","sig":null,"attributes":[{"value":"/ Maximum sample value within the image","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":431278,"byte_end":431319,"line_start":88,"line_end":88,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":3617},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":431442,"byte_end":431457,"line_start":94,"line_end":94,"column_start":12,"column_end":27},"name":"ArbitraryHeader","qualname":"::pnm::header::ArbitraryHeader","value":"ArbitraryHeader { height, width, depth, maxval, tupltype }","parent":null,"children":[{"krate":0,"index":3618},{"krate":0,"index":3619},{"krate":0,"index":3620},{"krate":0,"index":3621},{"krate":0,"index":3622}],"decl_id":null,"docs":" Header produced by a `pam` file (\"Portable Arbitrary Map\")\n","sig":null,"attributes":[{"value":"/ Header produced by a `pam` file (\"Portable Arbitrary Map\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":431344,"byte_end":431406,"line_start":92,"line_end":92,"column_start":1,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":3618},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":431501,"byte_end":431507,"line_start":96,"line_end":96,"column_start":9,"column_end":15},"name":"height","qualname":"::pnm::header::ArbitraryHeader::height","value":"u32","parent":{"krate":0,"index":3617},"children":[],"decl_id":null,"docs":" Height of the image file\n","sig":null,"attributes":[{"value":"/ Height of the image file","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":431464,"byte_end":431492,"line_start":95,"line_end":95,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":3619},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":431555,"byte_end":431560,"line_start":99,"line_end":99,"column_start":9,"column_end":14},"name":"width","qualname":"::pnm::header::ArbitraryHeader::width","value":"u32","parent":{"krate":0,"index":3617},"children":[],"decl_id":null,"docs":" Width of the image file\n","sig":null,"attributes":[{"value":"/ Width of the image file","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":431519,"byte_end":431546,"line_start":98,"line_end":98,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":3620},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":431609,"byte_end":431614,"line_start":102,"line_end":102,"column_start":9,"column_end":14},"name":"depth","qualname":"::pnm::header::ArbitraryHeader::depth","value":"u32","parent":{"krate":0,"index":3617},"children":[],"decl_id":null,"docs":" Number of color channels\n","sig":null,"attributes":[{"value":"/ Number of color channels","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":431572,"byte_end":431600,"line_start":101,"line_end":101,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":3621},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":431676,"byte_end":431682,"line_start":105,"line_end":105,"column_start":9,"column_end":15},"name":"maxval","qualname":"::pnm::header::ArbitraryHeader::maxval","value":"u32","parent":{"krate":0,"index":3617},"children":[],"decl_id":null,"docs":" Maximum sample value within the image\n","sig":null,"attributes":[{"value":"/ Maximum sample value within the image","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":431626,"byte_end":431667,"line_start":104,"line_end":104,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":3622},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":431743,"byte_end":431751,"line_start":108,"line_end":108,"column_start":9,"column_end":17},"name":"tupltype","qualname":"::pnm::header::ArbitraryHeader::tupltype","value":"std::option::Option<pnm::header::ArbitraryTuplType>","parent":{"krate":0,"index":3617},"children":[],"decl_id":null,"docs":" Color interpretation of image pixels\n","sig":null,"attributes":[{"value":"/ Color interpretation of image pixels","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":431694,"byte_end":431734,"line_start":107,"line_end":107,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3628},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":431954,"byte_end":431967,"line_start":115,"line_end":115,"column_start":5,"column_end":18},"name":"BlackAndWhite","qualname":"::pnm::header::ArbitraryTuplType::BlackAndWhite","value":"ArbitraryTuplType::BlackAndWhite","parent":{"krate":0,"index":3627},"children":[],"decl_id":null,"docs":" Pixels are either black (0) or white (1)\n","sig":null,"attributes":[{"value":"/ Pixels are either black (0) or white (1)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":431905,"byte_end":431949,"line_start":114,"line_end":114,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3630},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":432050,"byte_end":432068,"line_start":118,"line_end":118,"column_start":5,"column_end":23},"name":"BlackAndWhiteAlpha","qualname":"::pnm::header::ArbitraryTuplType::BlackAndWhiteAlpha","value":"ArbitraryTuplType::BlackAndWhiteAlpha","parent":{"krate":0,"index":3627},"children":[],"decl_id":null,"docs":" Pixels are either black (0) or white (1) and a second alpha channel\n","sig":null,"attributes":[{"value":"/ Pixels are either black (0) or white (1) and a second alpha channel","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":431974,"byte_end":432045,"line_start":117,"line_end":117,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3632},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":432120,"byte_end":432129,"line_start":121,"line_end":121,"column_start":5,"column_end":14},"name":"Grayscale","qualname":"::pnm::header::ArbitraryTuplType::Grayscale","value":"ArbitraryTuplType::Grayscale","parent":{"krate":0,"index":3627},"children":[],"decl_id":null,"docs":" Pixels represent the amount of white\n","sig":null,"attributes":[{"value":"/ Pixels represent the amount of white","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":432075,"byte_end":432115,"line_start":120,"line_end":120,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3634},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":432187,"byte_end":432201,"line_start":124,"line_end":124,"column_start":5,"column_end":19},"name":"GrayscaleAlpha","qualname":"::pnm::header::ArbitraryTuplType::GrayscaleAlpha","value":"ArbitraryTuplType::GrayscaleAlpha","parent":{"krate":0,"index":3627},"children":[],"decl_id":null,"docs":" Grayscale with an additional alpha channel\n","sig":null,"attributes":[{"value":"/ Grayscale with an additional alpha channel","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":432136,"byte_end":432182,"line_start":123,"line_end":123,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3636},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":432249,"byte_end":432252,"line_start":127,"line_end":127,"column_start":5,"column_end":8},"name":"RGB","qualname":"::pnm::header::ArbitraryTuplType::RGB","value":"ArbitraryTuplType::RGB","parent":{"krate":0,"index":3627},"children":[],"decl_id":null,"docs":" Three channels: Red, Green, Blue\n","sig":null,"attributes":[{"value":"/ Three channels: Red, Green, Blue","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":432208,"byte_end":432244,"line_start":126,"line_end":126,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3638},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":432306,"byte_end":432314,"line_start":130,"line_end":130,"column_start":5,"column_end":13},"name":"RGBAlpha","qualname":"::pnm::header::ArbitraryTuplType::RGBAlpha","value":"ArbitraryTuplType::RGBAlpha","parent":{"krate":0,"index":3627},"children":[],"decl_id":null,"docs":" Four channels: Red, Green, Blue, Alpha\n","sig":null,"attributes":[{"value":"/ Four channels: Red, Green, Blue, Alpha","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":432259,"byte_end":432301,"line_start":129,"line_end":129,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3640},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":432371,"byte_end":432377,"line_start":133,"line_end":133,"column_start":5,"column_end":11},"name":"Custom","qualname":"::pnm::header::ArbitraryTuplType::Custom","value":"ArbitraryTuplType::Custom(String)","parent":{"krate":0,"index":3627},"children":[],"decl_id":null,"docs":" An image format which is not standardized\n","sig":null,"attributes":[{"value":"/ An image format which is not standardized","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":432321,"byte_end":432366,"line_start":132,"line_end":132,"column_start":5,"column_end":50}}]},{"kind":"Enum","id":{"krate":0,"index":3627},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":431881,"byte_end":431898,"line_start":113,"line_end":113,"column_start":10,"column_end":27},"name":"ArbitraryTuplType","qualname":"::pnm::header::ArbitraryTuplType","value":"ArbitraryTuplType::{BlackAndWhite, BlackAndWhiteAlpha, Grayscale, GrayscaleAlpha, RGB, RGBAlpha, Custom}","parent":null,"children":[{"krate":0,"index":3628},{"krate":0,"index":3630},{"krate":0,"index":3632},{"krate":0,"index":3634},{"krate":0,"index":3636},{"krate":0,"index":3638},{"krate":0,"index":3640}],"decl_id":null,"docs":" Standardized tuple type specifiers in the header of a `pam`.\n","sig":null,"attributes":[{"value":"/ Standardized tuple type specifiers in the header of a `pam`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":431783,"byte_end":431847,"line_start":111,"line_end":111,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1908},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":432498,"byte_end":432512,"line_start":138,"line_end":138,"column_start":12,"column_end":26},"name":"magic_constant","qualname":"<PNMSubtype>::magic_constant","value":"fn (self) -> &'static [u8; 2]","parent":null,"children":[],"decl_id":null,"docs":" Get the two magic constant bytes corresponding to this format subtype.\n","sig":null,"attributes":[{"value":"/ Get the two magic constant bytes corresponding to this format subtype.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":432412,"byte_end":432486,"line_start":137,"line_end":137,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1910},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":433091,"byte_end":433106,"line_start":151,"line_end":151,"column_start":12,"column_end":27},"name":"sample_encoding","qualname":"<PNMSubtype>::sample_encoding","value":"fn (self) -> SampleEncoding","parent":null,"children":[],"decl_id":null,"docs":" Whether samples are stored as binary or as decimal ascii\n","sig":null,"attributes":[{"value":"/ Whether samples are stored as binary or as decimal ascii","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":433019,"byte_end":433079,"line_start":150,"line_end":150,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1912},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":433469,"byte_end":433476,"line_start":163,"line_end":163,"column_start":12,"column_end":19},"name":"subtype","qualname":"<PNMHeader>::subtype","value":"fn (&self) -> PNMSubtype","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the format subtype from which the header was created.\n","sig":null,"attributes":[{"value":"/ Retrieve the format subtype from which the header was created.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":433391,"byte_end":433457,"line_start":162,"line_end":162,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1913},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":433991,"byte_end":433996,"line_start":173,"line_end":173,"column_start":12,"column_end":17},"name":"width","qualname":"<PNMHeader>::width","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The width of the image this header is for.\n","sig":null,"attributes":[{"value":"/ The width of the image this header is for.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":433933,"byte_end":433979,"line_start":172,"line_end":172,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1914},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":434414,"byte_end":434420,"line_start":183,"line_end":183,"column_start":12,"column_end":18},"name":"height","qualname":"<PNMHeader>::height","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The height of the image this header is for.\n","sig":null,"attributes":[{"value":"/ The height of the image this header is for.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":434355,"byte_end":434402,"line_start":182,"line_end":182,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1915},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":434878,"byte_end":434892,"line_start":193,"line_end":193,"column_start":12,"column_end":26},"name":"maximal_sample","qualname":"<PNMHeader>::maximal_sample","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The biggest value a sample can have. In other words, the colour resolution.\n","sig":null,"attributes":[{"value":"/ The biggest value a sample can have. In other words, the colour resolution.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":434787,"byte_end":434866,"line_start":192,"line_end":192,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1916},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":435310,"byte_end":435319,"line_start":203,"line_end":203,"column_start":12,"column_end":21},"name":"as_bitmap","qualname":"<PNMHeader>::as_bitmap","value":"fn (&self) -> Option<&BitmapHeader>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the underlying bitmap header if any\n","sig":null,"attributes":[{"value":"/ Retrieve the underlying bitmap header if any","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":435250,"byte_end":435298,"line_start":202,"line_end":202,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1917},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":435550,"byte_end":435560,"line_start":211,"line_end":211,"column_start":12,"column_end":22},"name":"as_graymap","qualname":"<PNMHeader>::as_graymap","value":"fn (&self) -> Option<&GraymapHeader>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the underlying graymap header if any\n","sig":null,"attributes":[{"value":"/ Retrieve the underlying graymap header if any","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":435489,"byte_end":435538,"line_start":210,"line_end":210,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1918},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":435794,"byte_end":435803,"line_start":219,"line_end":219,"column_start":12,"column_end":21},"name":"as_pixmap","qualname":"<PNMHeader>::as_pixmap","value":"fn (&self) -> Option<&PixmapHeader>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the underlying pixmap header if any\n","sig":null,"attributes":[{"value":"/ Retrieve the underlying pixmap header if any","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":435734,"byte_end":435782,"line_start":218,"line_end":218,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1919},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":436036,"byte_end":436048,"line_start":227,"line_end":227,"column_start":12,"column_end":24},"name":"as_arbitrary","qualname":"<PNMHeader>::as_arbitrary","value":"fn (&self) -> Option<&ArbitraryHeader>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the underlying arbitrary header if any\n","sig":null,"attributes":[{"value":"/ Retrieve the underlying arbitrary header if any","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":435973,"byte_end":436024,"line_start":226,"line_end":226,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1920},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":436288,"byte_end":436293,"line_start":235,"line_end":235,"column_start":12,"column_end":17},"name":"write","qualname":"<PNMHeader>::write","value":"fn (&self, writer: &mut dyn io::Write) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Write the header back into a binary stream\n","sig":null,"attributes":[{"value":"/ Write the header back into a binary stream","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":436230,"byte_end":436276,"line_start":234,"line_end":234,"column_start":5,"column_end":51}}]},{"kind":"Mod","id":{"krate":0,"index":1929},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/tga/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tga","qualname":"::tga","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/tga/mod.rs","parent":null,"children":[{"krate":0,"index":1930},{"krate":0,"index":1931}],"decl_id":null,"docs":" Decoding of TGA Images","sig":null,"attributes":[{"value":"cfg(feature = \"tga\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":2498,"byte_end":2521,"line_start":102,"line_end":102,"column_start":1,"column_end":24}},{"value":"! Decoding of TGA Images","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/tga/mod.rs","byte_start":440352,"byte_end":440378,"line_start":1,"line_end":1,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/tga/mod.rs","byte_start":440379,"byte_end":440382,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! # Related Links","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/tga/mod.rs","byte_start":440383,"byte_end":440402,"line_start":3,"line_end":3,"column_start":1,"column_end":20}},{"value":"! <http://googlesites.inequation.org/tgautilities>","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/tga/mod.rs","byte_start":440403,"byte_end":440455,"line_start":4,"line_end":4,"column_start":1,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":1984},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/tga/decoder.rs","byte_start":444993,"byte_end":445003,"line_start":156,"line_end":156,"column_start":12,"column_end":22},"name":"TGADecoder","qualname":"::tga::decoder::TGADecoder","value":"TGADecoder {  }","parent":null,"children":[{"krate":0,"index":1986},{"krate":0,"index":1987},{"krate":0,"index":1988},{"krate":0,"index":1989},{"krate":0,"index":1990},{"krate":0,"index":1991},{"krate":0,"index":1992},{"krate":0,"index":1993},{"krate":0,"index":1994},{"krate":0,"index":1995},{"krate":0,"index":1996}],"decl_id":null,"docs":" The representation of a TGA decoder\n","sig":null,"attributes":[{"value":"/ The representation of a TGA decoder","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/tga/decoder.rs","byte_start":444942,"byte_end":444981,"line_start":155,"line_end":155,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1999},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/tga/decoder.rs","byte_start":445429,"byte_end":445432,"line_start":177,"line_end":177,"column_start":12,"column_end":15},"name":"new","qualname":"<TGADecoder<R>>::new","value":"fn (r: R) -> ImageResult<TGADecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream `r`\n","sig":null,"attributes":[{"value":"/ Create a new decoder that decodes from the stream `r`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/tga/decoder.rs","byte_start":445360,"byte_end":445417,"line_start":176,"line_end":176,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":2024},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/tga/decoder.rs","byte_start":457438,"byte_end":457447,"line_start":526,"line_end":526,"column_start":12,"column_end":21},"name":"TGAReader","qualname":"::tga::decoder::TGAReader","value":"TGAReader {  }","parent":null,"children":[{"krate":0,"index":2026},{"krate":0,"index":2027}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2032},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/tiff.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tiff","qualname":"::tiff","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/tiff.rs","parent":null,"children":[{"krate":0,"index":2033},{"krate":0,"index":2034},{"krate":0,"index":2040},{"krate":0,"index":2041},{"krate":0,"index":2042},{"krate":0,"index":2043},{"krate":0,"index":2047},{"krate":0,"index":2048},{"krate":0,"index":2053},{"krate":0,"index":2056},{"krate":0,"index":2058},{"krate":0,"index":2060},{"krate":0,"index":2065},{"krate":0,"index":2069},{"krate":0,"index":2077},{"krate":0,"index":2080}],"decl_id":null,"docs":" Decoding and Encoding of TIFF Images","sig":null,"attributes":[{"value":"cfg(feature = \"tiff\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":2535,"byte_end":2559,"line_start":104,"line_end":104,"column_start":1,"column_end":25}},{"value":"! Decoding and Encoding of TIFF Images","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/tiff.rs","byte_start":457733,"byte_end":457773,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/tiff.rs","byte_start":457774,"byte_end":457777,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! TIFF (Tagged Image File Format) is a versatile image format that supports","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/tiff.rs","byte_start":457778,"byte_end":457855,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"! lossless and lossy compression.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/tiff.rs","byte_start":457856,"byte_end":457891,"line_start":4,"line_end":4,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/tiff.rs","byte_start":457892,"byte_end":457895,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! # Related Links","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/tiff.rs","byte_start":457896,"byte_end":457915,"line_start":6,"line_end":6,"column_start":1,"column_end":20}},{"value":"! * <http://partners.adobe.com/public/developer/tiff/index.html> - The TIFF specification","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/tiff.rs","byte_start":457916,"byte_end":458007,"line_start":7,"line_end":7,"column_start":1,"column_end":92}}]},{"kind":"Struct","id":{"krate":0,"index":2048},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/tiff.rs","byte_start":458265,"byte_end":458276,"line_start":20,"line_end":20,"column_start":12,"column_end":23},"name":"TIFFDecoder","qualname":"::tiff::TIFFDecoder","value":"TIFFDecoder {  }","parent":null,"children":[{"krate":0,"index":2050},{"krate":0,"index":2051},{"krate":0,"index":2052}],"decl_id":null,"docs":" Decoder for TIFF images.\n","sig":null,"attributes":[{"value":"/ Decoder for TIFF images.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/tiff.rs","byte_start":458225,"byte_end":458253,"line_start":19,"line_end":19,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2055},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/tiff.rs","byte_start":458497,"byte_end":458500,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"new","qualname":"<TIFFDecoder<R>>::new","value":"fn (r: R) -> Result<TIFFDecoder<R>, ImageError>","parent":null,"children":[],"decl_id":null,"docs":" Create a new TIFFDecoder.\n","sig":null,"attributes":[{"value":"/ Create a new TIFFDecoder.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/tiff.rs","byte_start":458456,"byte_end":458485,"line_start":31,"line_end":31,"column_start":5,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":2060},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/tiff.rs","byte_start":459881,"byte_end":459891,"line_start":70,"line_end":70,"column_start":12,"column_end":22},"name":"TiffReader","qualname":"::tiff::TiffReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[{"value":"/ Wrapper struct around a `Cursor<Vec<u8>>`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/tiff.rs","byte_start":459824,"byte_end":459869,"line_start":69,"line_end":69,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":2077},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/tiff.rs","byte_start":461034,"byte_end":461045,"line_start":109,"line_end":109,"column_start":12,"column_end":23},"name":"TiffEncoder","qualname":"::tiff::TiffEncoder","value":"TiffEncoder {  }","parent":null,"children":[{"krate":0,"index":2079}],"decl_id":null,"docs":" Encoder for tiff images\n","sig":null,"attributes":[{"value":"/ Encoder for tiff images","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/tiff.rs","byte_start":460995,"byte_end":461022,"line_start":108,"line_end":108,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2082},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/tiff.rs","byte_start":461173,"byte_end":461176,"line_start":115,"line_end":115,"column_start":12,"column_end":15},"name":"new","qualname":"<TiffEncoder<W>>::new","value":"fn (w: W) -> TiffEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to `w`\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to `w`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/tiff.rs","byte_start":461107,"byte_end":461161,"line_start":114,"line_end":114,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2083},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/tiff.rs","byte_start":461416,"byte_end":461422,"line_start":124,"line_end":124,"column_start":12,"column_end":18},"name":"encode","qualname":"<TiffEncoder<W>>::encode","value":"fn (self, data: &[u8], width: u32, height: u32, color: ColorType) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image `image`\n that has dimensions `width` and `height`\n and `ColorType` `c`.","sig":null,"attributes":[{"value":"/ Encodes the image `image`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/tiff.rs","byte_start":461240,"byte_end":461269,"line_start":119,"line_end":119,"column_start":5,"column_end":34}},{"value":"/ that has dimensions `width` and `height`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/tiff.rs","byte_start":461274,"byte_end":461318,"line_start":120,"line_end":120,"column_start":5,"column_end":49}},{"value":"/ and `ColorType` `c`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/tiff.rs","byte_start":461323,"byte_end":461347,"line_start":121,"line_end":121,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/tiff.rs","byte_start":461352,"byte_end":461355,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ 16-bit colortypes are not yet supported.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/tiff.rs","byte_start":461360,"byte_end":461404,"line_start":123,"line_end":123,"column_start":5,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":2084},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/webp/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"webp","qualname":"::webp","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/webp/mod.rs","parent":null,"children":[{"krate":0,"index":2085},{"krate":0,"index":2086},{"krate":0,"index":2132},{"krate":0,"index":2138}],"decl_id":null,"docs":" Decoding of Webp Images\n","sig":null,"attributes":[{"value":"cfg(feature = \"webp\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":2574,"byte_end":2598,"line_start":106,"line_end":106,"column_start":1,"column_end":25}},{"value":"! Decoding of Webp Images","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/webp/mod.rs","byte_start":462061,"byte_end":462088,"line_start":1,"line_end":1,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":2103},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/webp/decoder.rs","byte_start":462584,"byte_end":462595,"line_start":18,"line_end":18,"column_start":12,"column_end":23},"name":"WebpDecoder","qualname":"::webp::decoder::WebpDecoder","value":"WebpDecoder {  }","parent":null,"children":[{"krate":0,"index":2105},{"krate":0,"index":2106},{"krate":0,"index":2107}],"decl_id":null,"docs":" Webp Image format decoder. Currently only supportes the luma channel (meaning that decoded\n images will be grayscale).\n","sig":null,"attributes":[{"value":"/ Webp Image format decoder. Currently only supportes the luma channel (meaning that decoded","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/webp/decoder.rs","byte_start":462447,"byte_end":462541,"line_start":16,"line_end":16,"column_start":1,"column_end":95}},{"value":"/ images will be grayscale).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/webp/decoder.rs","byte_start":462542,"byte_end":462572,"line_start":17,"line_end":17,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2110},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/webp/decoder.rs","byte_start":462807,"byte_end":462810,"line_start":27,"line_end":27,"column_start":12,"column_end":15},"name":"new","qualname":"<WebpDecoder<R>>::new","value":"fn (r: R) -> ImageResult<WebpDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new WebpDecoder from the Reader ```r```.\n This function takes ownership of the Reader.\n","sig":null,"attributes":[{"value":"/ Create a new WebpDecoder from the Reader ```r```.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/webp/decoder.rs","byte_start":462689,"byte_end":462742,"line_start":25,"line_end":25,"column_start":5,"column_end":58}},{"value":"/ This function takes ownership of the Reader.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/webp/decoder.rs","byte_start":462747,"byte_end":462795,"line_start":26,"line_end":26,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":2115},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/webp/decoder.rs","byte_start":464792,"byte_end":464802,"line_start":103,"line_end":103,"column_start":12,"column_end":22},"name":"WebpReader","qualname":"::webp::decoder::WebpReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[{"value":"/ Wrapper struct around a `Cursor<Vec<u8>>`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/webp/decoder.rs","byte_start":464735,"byte_end":464780,"line_start":102,"line_end":102,"column_start":1,"column_end":46}}]},{"kind":"Mod","id":{"krate":0,"index":2138},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/webp/vp8.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"vp8","qualname":"::webp::vp8","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/webp/vp8.rs","parent":null,"children":[{"krate":0,"index":2139},{"krate":0,"index":2142},{"krate":0,"index":2143},{"krate":0,"index":2144},{"krate":0,"index":2145},{"krate":0,"index":2146},{"krate":0,"index":2149},{"krate":0,"index":2150},{"krate":0,"index":2151},{"krate":0,"index":2152},{"krate":0,"index":2153},{"krate":0,"index":2154},{"krate":0,"index":2155},{"krate":0,"index":2156},{"krate":0,"index":2157},{"krate":0,"index":2158},{"krate":0,"index":2159},{"krate":0,"index":2160},{"krate":0,"index":2161},{"krate":0,"index":2162},{"krate":0,"index":2163},{"krate":0,"index":2164},{"krate":0,"index":2165},{"krate":0,"index":2166},{"krate":0,"index":3662},{"krate":0,"index":3687},{"krate":0,"index":3686},{"krate":0,"index":3684},{"krate":0,"index":3681},{"krate":0,"index":3682},{"krate":0,"index":3678},{"krate":0,"index":3679},{"krate":0,"index":3689},{"krate":0,"index":3711},{"krate":0,"index":3710},{"krate":0,"index":3708},{"krate":0,"index":3705},{"krate":0,"index":3706},{"krate":0,"index":3702},{"krate":0,"index":3703},{"krate":0,"index":3713},{"krate":0,"index":3753},{"krate":0,"index":3752},{"krate":0,"index":3750},{"krate":0,"index":3747},{"krate":0,"index":3748},{"krate":0,"index":3744},{"krate":0,"index":3745},{"krate":0,"index":2167},{"krate":0,"index":2168},{"krate":0,"index":2170},{"krate":0,"index":2172},{"krate":0,"index":2174},{"krate":0,"index":2176},{"krate":0,"index":2180},{"krate":0,"index":2182},{"krate":0,"index":2184},{"krate":0,"index":2189},{"krate":0,"index":2190},{"krate":0,"index":2191},{"krate":0,"index":2192},{"krate":0,"index":2193},{"krate":0,"index":2194},{"krate":0,"index":2195},{"krate":0,"index":2196},{"krate":0,"index":2197},{"krate":0,"index":2198},{"krate":0,"index":2199},{"krate":0,"index":2200},{"krate":0,"index":2201},{"krate":0,"index":2202},{"krate":0,"index":2203},{"krate":0,"index":2205},{"krate":0,"index":2208},{"krate":0,"index":2210},{"krate":0,"index":3755},{"krate":0,"index":3757},{"krate":0,"index":2212},{"krate":0,"index":2214},{"krate":0,"index":2220},{"krate":0,"index":3759},{"krate":0,"index":3772},{"krate":0,"index":3768},{"krate":0,"index":3767},{"krate":0,"index":3774},{"krate":0,"index":3789},{"krate":0,"index":3787},{"krate":0,"index":3785},{"krate":0,"index":3791},{"krate":0,"index":3804},{"krate":0,"index":3803},{"krate":0,"index":3801},{"krate":0,"index":2228},{"krate":0,"index":2251},{"krate":0,"index":2277},{"krate":0,"index":2280},{"krate":0,"index":2282},{"krate":0,"index":2284},{"krate":0,"index":2286},{"krate":0,"index":2288},{"krate":0,"index":2290},{"krate":0,"index":2292},{"krate":0,"index":2295},{"krate":0,"index":2296},{"krate":0,"index":2297},{"krate":0,"index":2298},{"krate":0,"index":2299},{"krate":0,"index":2300},{"krate":0,"index":2301},{"krate":0,"index":2302},{"krate":0,"index":2303},{"krate":0,"index":2304},{"krate":0,"index":2305},{"krate":0,"index":2306},{"krate":0,"index":2307},{"krate":0,"index":2308},{"krate":0,"index":2309},{"krate":0,"index":2310},{"krate":0,"index":2311},{"krate":0,"index":2312},{"krate":0,"index":2313},{"krate":0,"index":2314},{"krate":0,"index":2315}],"decl_id":null,"docs":" An implementation of the VP8 Video Codec","sig":null,"attributes":[{"value":"! An implementation of the VP8 Video Codec","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/webp/vp8.rs","byte_start":468286,"byte_end":468330,"line_start":1,"line_end":1,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/webp/vp8.rs","byte_start":468331,"byte_end":468334,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module contains a partial implementation of the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/webp/vp8.rs","byte_start":468335,"byte_end":468391,"line_start":3,"line_end":3,"column_start":1,"column_end":57}},{"value":"! VP8 video format as defined in RFC-6386.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/webp/vp8.rs","byte_start":468392,"byte_end":468436,"line_start":4,"line_end":4,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/webp/vp8.rs","byte_start":468437,"byte_end":468440,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! It decodes Keyframes only sans Loop Filtering.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/webp/vp8.rs","byte_start":468441,"byte_end":468491,"line_start":6,"line_end":6,"column_start":1,"column_end":51}},{"value":"! VP8 is the underpinning of the Webp image format","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/webp/vp8.rs","byte_start":468492,"byte_end":468544,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/webp/vp8.rs","byte_start":468545,"byte_end":468548,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! # Related Links","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/webp/vp8.rs","byte_start":468549,"byte_end":468568,"line_start":9,"line_end":9,"column_start":1,"column_end":20}},{"value":"! * [rfc-6386](http://tools.ietf.org/html/rfc6386) - The VP8 Data Format and Decoding Guide","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/webp/vp8.rs","byte_start":468569,"byte_end":468662,"line_start":10,"line_end":10,"column_start":1,"column_end":94}},{"value":"! * [VP8.pdf](http://static.googleusercontent.com/media/research.google.com/en//pubs/archive/37073.pdf) - An overview of","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/webp/vp8.rs","byte_start":468663,"byte_end":468785,"line_start":11,"line_end":11,"column_start":1,"column_end":123}},{"value":"! of the VP8 format","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/webp/vp8.rs","byte_start":468786,"byte_end":468807,"line_start":12,"line_end":12,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/webp/vp8.rs","byte_start":468808,"byte_end":468811,"line_start":13,"line_end":13,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":3774},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/webp/vp8.rs","byte_start":497046,"byte_end":497051,"line_start":789,"line_end":789,"column_start":12,"column_end":17},"name":"Frame","qualname":"::webp::vp8::Frame","value":"Frame { width, height, ybuf, keyframe, for_display, pixel_type }","parent":null,"children":[{"krate":0,"index":3775},{"krate":0,"index":3776},{"krate":0,"index":3777},{"krate":0,"index":3778},{"krate":0,"index":3779},{"krate":0,"index":3780},{"krate":0,"index":3781},{"krate":0,"index":3782},{"krate":0,"index":3783},{"krate":0,"index":3784}],"decl_id":null,"docs":" A Representation of the last decoded video frame\n","sig":null,"attributes":[{"value":"/ A Representation of the last decoded video frame","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/webp/vp8.rs","byte_start":496949,"byte_end":497001,"line_start":787,"line_end":787,"column_start":1,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":3775},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/webp/vp8.rs","byte_start":497098,"byte_end":497103,"line_start":791,"line_end":791,"column_start":9,"column_end":14},"name":"width","qualname":"::webp::vp8::Frame::width","value":"u16","parent":{"krate":0,"index":3774},"children":[],"decl_id":null,"docs":" The width of the luma plane\n","sig":null,"attributes":[{"value":"/ The width of the luma plane","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/webp/vp8.rs","byte_start":497058,"byte_end":497089,"line_start":790,"line_end":790,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":3776},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/webp/vp8.rs","byte_start":497156,"byte_end":497162,"line_start":794,"line_end":794,"column_start":9,"column_end":15},"name":"height","qualname":"::webp::vp8::Frame::height","value":"u16","parent":{"krate":0,"index":3774},"children":[],"decl_id":null,"docs":" The height of the luma plane\n","sig":null,"attributes":[{"value":"/ The height of the luma plane","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/webp/vp8.rs","byte_start":497115,"byte_end":497147,"line_start":793,"line_end":793,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":3777},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/webp/vp8.rs","byte_start":497214,"byte_end":497218,"line_start":797,"line_end":797,"column_start":9,"column_end":13},"name":"ybuf","qualname":"::webp::vp8::Frame::ybuf","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":3774},"children":[],"decl_id":null,"docs":" The luma plane of the frame\n","sig":null,"attributes":[{"value":"/ The luma plane of the frame","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/webp/vp8.rs","byte_start":497174,"byte_end":497205,"line_start":796,"line_end":796,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":3778},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/webp/vp8.rs","byte_start":497289,"byte_end":497297,"line_start":800,"line_end":800,"column_start":9,"column_end":17},"name":"keyframe","qualname":"::webp::vp8::Frame::keyframe","value":"bool","parent":{"krate":0,"index":3774},"children":[],"decl_id":null,"docs":" Indicates whether this frame is a keyframe\n","sig":null,"attributes":[{"value":"/ Indicates whether this frame is a keyframe","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/webp/vp8.rs","byte_start":497234,"byte_end":497280,"line_start":799,"line_end":799,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":3780},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/webp/vp8.rs","byte_start":497393,"byte_end":497404,"line_start":805,"line_end":805,"column_start":9,"column_end":20},"name":"for_display","qualname":"::webp::vp8::Frame::for_display","value":"bool","parent":{"krate":0,"index":3774},"children":[],"decl_id":null,"docs":" Indicates whether this frame is intended for display\n","sig":null,"attributes":[{"value":"/ Indicates whether this frame is intended for display","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/webp/vp8.rs","byte_start":497328,"byte_end":497384,"line_start":804,"line_end":804,"column_start":5,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":3781},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/webp/vp8.rs","byte_start":497535,"byte_end":497545,"line_start":810,"line_end":810,"column_start":9,"column_end":19},"name":"pixel_type","qualname":"::webp::vp8::Frame::pixel_type","value":"u8","parent":{"krate":0,"index":3774},"children":[],"decl_id":null,"docs":" The pixel type of the frame as defined by Section 9.2\n of the VP8 Specification\n","sig":null,"attributes":[{"value":"/ The pixel type of the frame as defined by Section 9.2","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/webp/vp8.rs","byte_start":497436,"byte_end":497493,"line_start":808,"line_end":808,"column_start":5,"column_end":62}},{"value":"/ of the VP8 Specification","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/webp/vp8.rs","byte_start":497498,"byte_end":497526,"line_start":809,"line_end":809,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":2228},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/webp/vp8.rs","byte_start":497921,"byte_end":497931,"line_start":838,"line_end":838,"column_start":12,"column_end":22},"name":"VP8Decoder","qualname":"::webp::vp8::VP8Decoder","value":"VP8Decoder {  }","parent":null,"children":[{"krate":0,"index":2230},{"krate":0,"index":2231},{"krate":0,"index":2232},{"krate":0,"index":2233},{"krate":0,"index":2234},{"krate":0,"index":2235},{"krate":0,"index":2236},{"krate":0,"index":2237},{"krate":0,"index":2239},{"krate":0,"index":2241},{"krate":0,"index":2242},{"krate":0,"index":2244},{"krate":0,"index":2245},{"krate":0,"index":2246},{"krate":0,"index":2247},{"krate":0,"index":2248},{"krate":0,"index":2249},{"krate":0,"index":2250}],"decl_id":null,"docs":" VP8 Decoder","sig":null,"attributes":[{"value":"/ VP8 Decoder","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/webp/vp8.rs","byte_start":497863,"byte_end":497878,"line_start":835,"line_end":835,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/webp/vp8.rs","byte_start":497879,"byte_end":497882,"line_start":836,"line_end":836,"column_start":1,"column_end":4}},{"value":"/ Only decodes keyframes","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/webp/vp8.rs","byte_start":497883,"byte_end":497909,"line_start":837,"line_end":837,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2253},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/webp/vp8.rs","byte_start":498595,"byte_end":498598,"line_start":873,"line_end":873,"column_start":12,"column_end":15},"name":"new","qualname":"<VP8Decoder<R>>::new","value":"fn (r: R) -> VP8Decoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder.\n The reader must present a raw vp8 bitstream to the decoder\n","sig":null,"attributes":[{"value":"/ Create a new decoder.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/webp/vp8.rs","byte_start":498491,"byte_end":498516,"line_start":871,"line_end":871,"column_start":5,"column_end":30}},{"value":"/ The reader must present a raw vp8 bitstream to the decoder","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/webp/vp8.rs","byte_start":498521,"byte_end":498583,"line_start":872,"line_end":872,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2275},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/webp/vp8.rs","byte_start":518410,"byte_end":518422,"line_start":1486,"line_end":1486,"column_start":12,"column_end":24},"name":"decode_frame","qualname":"<VP8Decoder<R>>::decode_frame","value":"fn (&mut self) -> ImageResult<&Frame>","parent":null,"children":[],"decl_id":null,"docs":" Decodes the current frame and returns a reference to it\n","sig":null,"attributes":[{"value":"/ Decodes the current frame and returns a reference to it","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/webp/vp8.rs","byte_start":518339,"byte_end":518398,"line_start":1485,"line_end":1485,"column_start":5,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":2321},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/animation.rs","byte_start":535684,"byte_end":535690,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"Frames","qualname":"::animation::Frames","value":"Frames {  }","parent":null,"children":[{"krate":0,"index":2323}],"decl_id":null,"docs":" An implementation dependent iterator, reading the frames as requested\n","sig":null,"attributes":[{"value":"/ An implementation dependent iterator, reading the frames as requested","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/animation.rs","byte_start":535599,"byte_end":535672,"line_start":8,"line_end":8,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":2326},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/animation.rs","byte_start":535870,"byte_end":535873,"line_start":15,"line_end":15,"column_start":12,"column_end":15},"name":"new","qualname":"<Frames>::new","value":"fn (iterator: Box<dyn Iterator<Item = ImageResult<Frame>> + 'a>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Frames` from an implementation specific iterator.\n","sig":null,"attributes":[{"value":"/ Creates a new `Frames` from an implementation specific iterator.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/animation.rs","byte_start":535790,"byte_end":535858,"line_start":14,"line_end":14,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":2327},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/animation.rs","byte_start":536265,"byte_end":536279,"line_start":24,"line_end":24,"column_start":12,"column_end":26},"name":"collect_frames","qualname":"<Frames>::collect_frames","value":"fn (self) -> ImageResult<Vec<Frame>>","parent":null,"children":[],"decl_id":null,"docs":" Steps through the iterator from the current frame until the end and pushes each frame into\n a `Vec`.\n If en error is encountered that error is returned instead.","sig":null,"attributes":[{"value":"/ Steps through the iterator from the current frame until the end and pushes each frame into","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/animation.rs","byte_start":535984,"byte_end":536078,"line_start":19,"line_end":19,"column_start":5,"column_end":99}},{"value":"/ a `Vec`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/animation.rs","byte_start":536083,"byte_end":536095,"line_start":20,"line_end":20,"column_start":5,"column_end":17}},{"value":"/ If en error is encountered that error is returned instead.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/animation.rs","byte_start":536100,"byte_end":536162,"line_start":21,"line_end":21,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/animation.rs","byte_start":536167,"byte_end":536170,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ Note: This is equivalent to `Frames::collect::<ImageResult<Vec<Frame>>>()`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/animation.rs","byte_start":536175,"byte_end":536253,"line_start":23,"line_end":23,"column_start":5,"column_end":83}}]},{"kind":"Struct","id":{"krate":0,"index":3806},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/animation.rs","byte_start":536568,"byte_end":536573,"line_start":38,"line_end":38,"column_start":12,"column_end":17},"name":"Frame","qualname":"::animation::Frame","value":"Frame {  }","parent":null,"children":[{"krate":0,"index":3807},{"krate":0,"index":3808},{"krate":0,"index":3809},{"krate":0,"index":3810}],"decl_id":null,"docs":" A single animation frame\n","sig":null,"attributes":[{"value":"/ A single animation frame","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/animation.rs","byte_start":536511,"byte_end":536539,"line_start":36,"line_end":36,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2333},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/animation.rs","byte_start":536780,"byte_end":536783,"line_start":50,"line_end":50,"column_start":12,"column_end":15},"name":"new","qualname":"<Frame>::new","value":"fn (buffer: RgbaImage) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Contructs a new frame\n","sig":null,"attributes":[{"value":"/ Contructs a new frame","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/animation.rs","byte_start":536743,"byte_end":536768,"line_start":49,"line_end":49,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2334},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/animation.rs","byte_start":536992,"byte_end":537002,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Frame>::from_parts","value":"fn (buffer: RgbaImage, left: u32, top: u32, delay: Ratio<u16>) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Contructs a new frame\n","sig":null,"attributes":[{"value":"/ Contructs a new frame","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/animation.rs","byte_start":536955,"byte_end":536980,"line_start":59,"line_end":59,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2335},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/animation.rs","byte_start":537219,"byte_end":537224,"line_start":70,"line_end":70,"column_start":12,"column_end":17},"name":"delay","qualname":"<Frame>::delay","value":"fn (&self) -> Ratio<u16>","parent":null,"children":[],"decl_id":null,"docs":" Delay of this frame\n","sig":null,"attributes":[{"value":"/ Delay of this frame","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/animation.rs","byte_start":537184,"byte_end":537207,"line_start":69,"line_end":69,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2336},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/animation.rs","byte_start":537318,"byte_end":537324,"line_start":75,"line_end":75,"column_start":12,"column_end":18},"name":"buffer","qualname":"<Frame>::buffer","value":"fn (&self) -> &RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns the image buffer\n","sig":null,"attributes":[{"value":"/ Returns the image buffer","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/animation.rs","byte_start":537278,"byte_end":537306,"line_start":74,"line_end":74,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2337},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/animation.rs","byte_start":537420,"byte_end":537431,"line_start":80,"line_end":80,"column_start":12,"column_end":23},"name":"into_buffer","qualname":"<Frame>::into_buffer","value":"fn (self) -> RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns the image buffer\n","sig":null,"attributes":[{"value":"/ Returns the image buffer","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/animation.rs","byte_start":537380,"byte_end":537408,"line_start":79,"line_end":79,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2338},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/animation.rs","byte_start":537520,"byte_end":537524,"line_start":85,"line_end":85,"column_start":12,"column_end":16},"name":"left","qualname":"<Frame>::left","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the x offset\n","sig":null,"attributes":[{"value":"/ Returns the x offset","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/animation.rs","byte_start":537484,"byte_end":537508,"line_start":84,"line_end":84,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2339},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/animation.rs","byte_start":537606,"byte_end":537609,"line_start":90,"line_end":90,"column_start":12,"column_end":15},"name":"top","qualname":"<Frame>::top","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the y offset\n","sig":null,"attributes":[{"value":"/ Returns the y offset","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/animation.rs","byte_start":537570,"byte_end":537594,"line_start":89,"line_end":89,"column_start":5,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":2376},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":538245,"byte_end":538250,"line_start":19,"line_end":19,"column_start":11,"column_end":16},"name":"Pixel","qualname":"::buffer::Pixel","value":"Pixel: Copy + Clone","parent":null,"children":[{"krate":0,"index":2377},{"krate":0,"index":2378},{"krate":0,"index":2379},{"krate":0,"index":2380},{"krate":0,"index":2381},{"krate":0,"index":2382},{"krate":0,"index":2383},{"krate":0,"index":2384},{"krate":0,"index":2385},{"krate":0,"index":2386},{"krate":0,"index":2387},{"krate":0,"index":2388},{"krate":0,"index":2389},{"krate":0,"index":2390},{"krate":0,"index":2391},{"krate":0,"index":2392},{"krate":0,"index":2393},{"krate":0,"index":2394},{"krate":0,"index":2395},{"krate":0,"index":2396},{"krate":0,"index":2398},{"krate":0,"index":2400},{"krate":0,"index":2403},{"krate":0,"index":2406},{"krate":0,"index":2409},{"krate":0,"index":2412},{"krate":0,"index":2414},{"krate":0,"index":2416},{"krate":0,"index":2417}],"decl_id":null,"docs":" A generalized pixel.","sig":null,"attributes":[{"value":"/ A generalized pixel.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":538120,"byte_end":538144,"line_start":16,"line_end":16,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":538145,"byte_end":538148,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ A pixel object is usually not used standalone but as a view into an image buffer.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":538149,"byte_end":538234,"line_start":18,"line_end":18,"column_start":1,"column_end":86}}]},{"kind":"Type","id":{"krate":0,"index":2377},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":538314,"byte_end":538322,"line_start":21,"line_end":21,"column_start":10,"column_end":18},"name":"Subpixel","qualname":"::buffer::Pixel::Subpixel","value":"type Subpixel: Primitive;","parent":{"krate":0,"index":2376},"children":[],"decl_id":null,"docs":" The underlying subpixel type.\n","sig":null,"attributes":[{"value":"/ The underlying subpixel type.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":538271,"byte_end":538304,"line_start":20,"line_end":20,"column_start":5,"column_end":38}}]},{"kind":"Const","id":{"krate":0,"index":2378},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":538397,"byte_end":538410,"line_start":24,"line_end":24,"column_start":11,"column_end":24},"name":"CHANNEL_COUNT","qualname":"::buffer::Pixel::CHANNEL_COUNT","value":"u8","parent":{"krate":0,"index":2376},"children":[],"decl_id":null,"docs":" The number of channels of this pixel type.\n","sig":null,"attributes":[{"value":"/ The number of channels of this pixel type.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":538340,"byte_end":538386,"line_start":23,"line_end":23,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2379},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":538553,"byte_end":538566,"line_start":27,"line_end":27,"column_start":8,"column_end":21},"name":"channel_count","qualname":"::buffer::Pixel::channel_count","value":"fn () -> u8","parent":{"krate":0,"index":2376},"children":[],"decl_id":null,"docs":" Returns the number of channels of this pixel type.\n","sig":null,"attributes":[{"value":"/ Returns the number of channels of this pixel type.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":538420,"byte_end":538474,"line_start":25,"line_end":25,"column_start":5,"column_end":59}},{"value":"deprecated(note = \"please use CHANNEL_COUNT associated constant\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":538479,"byte_end":538545,"line_start":26,"line_end":26,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2380},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":538662,"byte_end":538670,"line_start":32,"line_end":32,"column_start":8,"column_end":16},"name":"channels","qualname":"::buffer::Pixel::channels","value":"fn (&self) -> &[Self::Subpixel]","parent":{"krate":0,"index":2376},"children":[],"decl_id":null,"docs":" Returns the components as a slice.\n","sig":null,"attributes":[{"value":"/ Returns the components as a slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":538616,"byte_end":538654,"line_start":31,"line_end":31,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2381},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":538758,"byte_end":538770,"line_start":35,"line_end":35,"column_start":8,"column_end":20},"name":"channels_mut","qualname":"::buffer::Pixel::channels_mut","value":"fn (&mut self) -> &mut [Self::Subpixel]","parent":{"krate":0,"index":2376},"children":[],"decl_id":null,"docs":" Returns the components as a mutable slice\n","sig":null,"attributes":[{"value":"/ Returns the components as a mutable slice","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":538705,"byte_end":538750,"line_start":34,"line_end":34,"column_start":5,"column_end":50}}]},{"kind":"Const","id":{"krate":0,"index":2382},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":538936,"byte_end":538947,"line_start":39,"line_end":39,"column_start":11,"column_end":22},"name":"COLOR_MODEL","qualname":"::buffer::Pixel::COLOR_MODEL","value":"&'static str","parent":{"krate":0,"index":2376},"children":[],"decl_id":null,"docs":" A string that can help to interpret the meaning each channel\n See [gimp babl](http://gegl.org/babl/).\n","sig":null,"attributes":[{"value":"/ A string that can help to interpret the meaning each channel","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":538813,"byte_end":538877,"line_start":37,"line_end":37,"column_start":5,"column_end":69}},{"value":"/ See [gimp babl](http://gegl.org/babl/).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":538882,"byte_end":538925,"line_start":38,"line_end":38,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2383},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":539164,"byte_end":539175,"line_start":43,"line_end":43,"column_start":8,"column_end":19},"name":"color_model","qualname":"::buffer::Pixel::color_model","value":"fn () -> &'static str","parent":{"krate":0,"index":2376},"children":[],"decl_id":null,"docs":" Returns a string that can help to interpret the meaning each channel\n See [gimp babl](http://gegl.org/babl/).\n","sig":null,"attributes":[{"value":"/ Returns a string that can help to interpret the meaning each channel","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":538967,"byte_end":539039,"line_start":40,"line_end":40,"column_start":5,"column_end":77}},{"value":"/ See [gimp babl](http://gegl.org/babl/).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":539044,"byte_end":539087,"line_start":41,"line_end":41,"column_start":5,"column_end":48}},{"value":"deprecated(note = \"please use COLOR_MODEL associated constant\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":539092,"byte_end":539156,"line_start":42,"line_end":42,"column_start":5,"column_end":69}}]},{"kind":"Const","id":{"krate":0,"index":2384},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":539279,"byte_end":539289,"line_start":48,"line_end":48,"column_start":11,"column_end":21},"name":"COLOR_TYPE","qualname":"::buffer::Pixel::COLOR_TYPE","value":"ColorType","parent":{"krate":0,"index":2376},"children":[],"decl_id":null,"docs":" ColorType for this pixel format\n","sig":null,"attributes":[{"value":"/ ColorType for this pixel format","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":539233,"byte_end":539268,"line_start":47,"line_end":47,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2385},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":539429,"byte_end":539439,"line_start":51,"line_end":51,"column_start":8,"column_end":18},"name":"color_type","qualname":"::buffer::Pixel::color_type","value":"fn () -> ColorType","parent":{"krate":0,"index":2376},"children":[],"decl_id":null,"docs":" Returns the ColorType for this pixel format\n","sig":null,"attributes":[{"value":"/ Returns the ColorType for this pixel format","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":539306,"byte_end":539353,"line_start":49,"line_end":49,"column_start":5,"column_end":52}},{"value":"deprecated(note = \"please use COLOR_TYPE associated constant\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":539358,"byte_end":539421,"line_start":50,"line_end":50,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2386},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":539677,"byte_end":539686,"line_start":59,"line_end":59,"column_start":8,"column_end":17},"name":"channels4","qualname":"::buffer::Pixel::channels4","value":"fn (&self) -> (Self::Subpixel, Self::Subpixel, Self::Subpixel, Self::Subpixel)","parent":{"krate":0,"index":2376},"children":[],"decl_id":null,"docs":" Returns the channels of this pixel as a 4 tuple. If the pixel\n has less than 4 channels the remainder is filled with the maximum value","sig":null,"attributes":[{"value":"/ Returns the channels of this pixel as a 4 tuple. If the pixel","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":539493,"byte_end":539558,"line_start":55,"line_end":55,"column_start":5,"column_end":70}},{"value":"/ has less than 4 channels the remainder is filled with the maximum value","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":539563,"byte_end":539638,"line_start":56,"line_end":56,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":539643,"byte_end":539646,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ TODO deprecate","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":539651,"byte_end":539669,"line_start":58,"line_end":58,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":2387},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":539989,"byte_end":540002,"line_start":72,"line_end":72,"column_start":8,"column_end":21},"name":"from_channels","qualname":"::buffer::Pixel::from_channels","value":"fn (a: Self::Subpixel, b: Self::Subpixel, c: Self::Subpixel, d: Self::Subpixel) -> Self","parent":{"krate":0,"index":2376},"children":[],"decl_id":null,"docs":" Construct a pixel from the 4 channels a, b, c and d.\n If the pixel does not contain 4 channels the extra are ignored.","sig":null,"attributes":[{"value":"/ Construct a pixel from the 4 channels a, b, c and d.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":539822,"byte_end":539878,"line_start":68,"line_end":68,"column_start":5,"column_end":61}},{"value":"/ If the pixel does not contain 4 channels the extra are ignored.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":539883,"byte_end":539950,"line_start":69,"line_end":69,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":539955,"byte_end":539958,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ TODO deprecate","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":539963,"byte_end":539981,"line_start":71,"line_end":71,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":2388},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":540356,"byte_end":540366,"line_start":83,"line_end":83,"column_start":8,"column_end":18},"name":"from_slice","qualname":"::buffer::Pixel::from_slice","value":"fn (slice: &[Self::Subpixel]) -> &Self","parent":{"krate":0,"index":2376},"children":[],"decl_id":null,"docs":" Returns a view into a slice.","sig":null,"attributes":[{"value":"/ Returns a view into a slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":540132,"byte_end":540164,"line_start":79,"line_end":79,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":540169,"byte_end":540172,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ Note: The slice length is not checked on creation. Thus the caller has to ensure","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":540177,"byte_end":540261,"line_start":81,"line_end":81,"column_start":5,"column_end":89}},{"value":"/ that the slice is long enough to present panics if the pixel is used later on.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":540266,"byte_end":540348,"line_start":82,"line_end":82,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":2389},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":540646,"byte_end":540660,"line_start":89,"line_end":89,"column_start":8,"column_end":22},"name":"from_slice_mut","qualname":"::buffer::Pixel::from_slice_mut","value":"fn (slice: &mut [Self::Subpixel]) -> &mut Self","parent":{"krate":0,"index":2376},"children":[],"decl_id":null,"docs":" Returns mutable view into a mutable slice.","sig":null,"attributes":[{"value":"/ Returns mutable view into a mutable slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":540408,"byte_end":540454,"line_start":85,"line_end":85,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":540459,"byte_end":540462,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Note: The slice length is not checked on creation. Thus the caller has to ensure","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":540467,"byte_end":540551,"line_start":87,"line_end":87,"column_start":5,"column_end":89}},{"value":"/ that the slice is long enough to present panics if the pixel is used later on.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":540556,"byte_end":540638,"line_start":88,"line_end":88,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":2390},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":540747,"byte_end":540753,"line_start":92,"line_end":92,"column_start":8,"column_end":14},"name":"to_rgb","qualname":"::buffer::Pixel::to_rgb","value":"fn (&self) -> Rgb<Self::Subpixel>","parent":{"krate":0,"index":2376},"children":[],"decl_id":null,"docs":" Convert this pixel to RGB\n","sig":null,"attributes":[{"value":"/ Convert this pixel to RGB","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":540710,"byte_end":540739,"line_start":91,"line_end":91,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2391},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":540849,"byte_end":540856,"line_start":95,"line_end":95,"column_start":8,"column_end":15},"name":"to_rgba","qualname":"::buffer::Pixel::to_rgba","value":"fn (&self) -> Rgba<Self::Subpixel>","parent":{"krate":0,"index":2376},"children":[],"decl_id":null,"docs":" Convert this pixel to RGB with an alpha channel\n","sig":null,"attributes":[{"value":"/ Convert this pixel to RGB with an alpha channel","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":540790,"byte_end":540841,"line_start":94,"line_end":94,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2392},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":540932,"byte_end":540939,"line_start":98,"line_end":98,"column_start":8,"column_end":15},"name":"to_luma","qualname":"::buffer::Pixel::to_luma","value":"fn (&self) -> Luma<Self::Subpixel>","parent":{"krate":0,"index":2376},"children":[],"decl_id":null,"docs":" Convert this pixel to luma\n","sig":null,"attributes":[{"value":"/ Convert this pixel to luma","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":540894,"byte_end":540924,"line_start":97,"line_end":97,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2393},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":541037,"byte_end":541050,"line_start":101,"line_end":101,"column_start":8,"column_end":21},"name":"to_luma_alpha","qualname":"::buffer::Pixel::to_luma_alpha","value":"fn (&self) -> LumaA<Self::Subpixel>","parent":{"krate":0,"index":2376},"children":[],"decl_id":null,"docs":" Convert this pixel to luma with an alpha channel\n","sig":null,"attributes":[{"value":"/ Convert this pixel to luma with an alpha channel","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":540977,"byte_end":541029,"line_start":100,"line_end":100,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2394},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":541126,"byte_end":541132,"line_start":104,"line_end":104,"column_start":8,"column_end":14},"name":"to_bgr","qualname":"::buffer::Pixel::to_bgr","value":"fn (&self) -> Bgr<Self::Subpixel>","parent":{"krate":0,"index":2376},"children":[],"decl_id":null,"docs":" Convert this pixel to BGR\n","sig":null,"attributes":[{"value":"/ Convert this pixel to BGR","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":541089,"byte_end":541118,"line_start":103,"line_end":103,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2395},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":541228,"byte_end":541235,"line_start":107,"line_end":107,"column_start":8,"column_end":15},"name":"to_bgra","qualname":"::buffer::Pixel::to_bgra","value":"fn (&self) -> Bgra<Self::Subpixel>","parent":{"krate":0,"index":2376},"children":[],"decl_id":null,"docs":" Convert this pixel to BGR with an alpha channel\n","sig":null,"attributes":[{"value":"/ Convert this pixel to BGR with an alpha channel","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":541169,"byte_end":541220,"line_start":106,"line_end":106,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2396},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":541342,"byte_end":541345,"line_start":110,"line_end":110,"column_start":8,"column_end":11},"name":"map","qualname":"::buffer::Pixel::map","value":"fn <F> (&self, f: F) -> Self","parent":{"krate":0,"index":2376},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel of this pixel.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel of this pixel.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":541273,"byte_end":541334,"line_start":109,"line_end":109,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2398},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":541506,"byte_end":541511,"line_start":115,"line_end":115,"column_start":8,"column_end":13},"name":"apply","qualname":"::buffer::Pixel::apply","value":"fn <F> (&mut self, f: F) -> ()","parent":{"krate":0,"index":2376},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel of this pixel.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel of this pixel.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":541437,"byte_end":541498,"line_start":114,"line_end":114,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2400},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":541736,"byte_end":541750,"line_start":121,"line_end":121,"column_start":8,"column_end":22},"name":"map_with_alpha","qualname":"::buffer::Pixel::map_with_alpha","value":"fn <F, G> (&self, f: F, g: G) -> Self","parent":{"krate":0,"index":2376},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel except the alpha channel.\n Apply the function ```g``` to the alpha channel.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel except the alpha channel.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":541599,"byte_end":541671,"line_start":119,"line_end":119,"column_start":5,"column_end":77}},{"value":"/ Apply the function ```g``` to the alpha channel.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":541676,"byte_end":541728,"line_start":120,"line_end":120,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2403},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":542056,"byte_end":542072,"line_start":128,"line_end":128,"column_start":8,"column_end":24},"name":"apply_with_alpha","qualname":"::buffer::Pixel::apply_with_alpha","value":"fn <F, G> (&mut self, f: F, g: G) -> ()","parent":{"krate":0,"index":2376},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel except the alpha channel.\n Apply the function ```g``` to the alpha channel. Works in-place.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel except the alpha channel.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":541903,"byte_end":541975,"line_start":126,"line_end":126,"column_start":5,"column_end":77}},{"value":"/ Apply the function ```g``` to the alpha channel. Works in-place.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":541980,"byte_end":542048,"line_start":127,"line_end":127,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":2406},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":542301,"byte_end":542318,"line_start":134,"line_end":134,"column_start":8,"column_end":25},"name":"map_without_alpha","qualname":"::buffer::Pixel::map_without_alpha","value":"fn <F> (&self, f: F) -> Self","parent":{"krate":0,"index":2376},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel except the alpha channel.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel except the alpha channel.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":542221,"byte_end":542293,"line_start":133,"line_end":133,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2409},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":542610,"byte_end":542629,"line_start":145,"line_end":145,"column_start":8,"column_end":27},"name":"apply_without_alpha","qualname":"::buffer::Pixel::apply_without_alpha","value":"fn <F> (&mut self, f: F) -> ()","parent":{"krate":0,"index":2376},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel except the alpha channel.\n Works in place.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel except the alpha channel.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":542506,"byte_end":542578,"line_start":143,"line_end":143,"column_start":5,"column_end":77}},{"value":"/ Works in place.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":542583,"byte_end":542602,"line_start":144,"line_end":144,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":2412},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":542872,"byte_end":542876,"line_start":154,"line_end":154,"column_start":8,"column_end":12},"name":"map2","qualname":"::buffer::Pixel::map2","value":"fn <F> (&self, other: &Self, f: F) -> Self","parent":{"krate":0,"index":2376},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel of this pixel and\n ```other``` pairwise.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel of this pixel and","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":542770,"byte_end":542834,"line_start":152,"line_end":152,"column_start":5,"column_end":69}},{"value":"/ ```other``` pairwise.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":542839,"byte_end":542864,"line_start":153,"line_end":153,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2414},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":543116,"byte_end":543122,"line_start":160,"line_end":160,"column_start":8,"column_end":14},"name":"apply2","qualname":"::buffer::Pixel::apply2","value":"fn <F> (&mut self, other: &Self, f: F) -> ()","parent":{"krate":0,"index":2376},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel of this pixel and\n ```other``` pairwise. Works in-place.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel of this pixel and","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":542998,"byte_end":543062,"line_start":158,"line_end":158,"column_start":5,"column_end":69}},{"value":"/ ```other``` pairwise. Works in-place.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":543067,"byte_end":543108,"line_start":159,"line_end":159,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2416},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":543269,"byte_end":543275,"line_start":165,"line_end":165,"column_start":8,"column_end":14},"name":"invert","qualname":"::buffer::Pixel::invert","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":2376},"children":[],"decl_id":null,"docs":" Invert this pixel\n","sig":null,"attributes":[{"value":"/ Invert this pixel","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":543240,"byte_end":543261,"line_start":164,"line_end":164,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2417},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":543386,"byte_end":543391,"line_start":168,"line_end":168,"column_start":8,"column_end":13},"name":"blend","qualname":"::buffer::Pixel::blend","value":"fn (&mut self, other: &Self) -> ()","parent":{"krate":0,"index":2376},"children":[],"decl_id":null,"docs":" Blend the color of a given pixel into ourself, taking into account alpha channels\n","sig":null,"attributes":[{"value":"/ Blend the color of a given pixel into ourself, taking into account alpha channels","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":543293,"byte_end":543378,"line_start":167,"line_end":167,"column_start":5,"column_end":90}}]},{"kind":"Struct","id":{"krate":0,"index":2418},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":543461,"byte_end":543467,"line_start":172,"line_end":172,"column_start":12,"column_end":18},"name":"Pixels","qualname":"::buffer::Pixels","value":"Pixels {  }","parent":null,"children":[{"krate":0,"index":2421}],"decl_id":null,"docs":" Iterate over pixel refs.\n","sig":null,"attributes":[{"value":"/ Iterate over pixel refs.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":543421,"byte_end":543449,"line_start":171,"line_end":171,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":2437},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":544236,"byte_end":544245,"line_start":211,"line_end":211,"column_start":12,"column_end":21},"name":"PixelsMut","qualname":"::buffer::PixelsMut","value":"PixelsMut {  }","parent":null,"children":[{"krate":0,"index":2440}],"decl_id":null,"docs":" Iterate over mutable pixel refs.\n","sig":null,"attributes":[{"value":"/ Iterate over mutable pixel refs.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":544188,"byte_end":544224,"line_start":210,"line_end":210,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2456},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":545069,"byte_end":545073,"line_start":252,"line_end":252,"column_start":12,"column_end":16},"name":"Rows","qualname":"::buffer::Rows","value":"Rows {  }","parent":null,"children":[{"krate":0,"index":2459}],"decl_id":null,"docs":" Iterate over rows of an image\n","sig":null,"attributes":[{"value":"/ Iterate over rows of an image","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":545024,"byte_end":545057,"line_start":251,"line_end":251,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":2475},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":546002,"byte_end":546009,"line_start":295,"line_end":295,"column_start":12,"column_end":19},"name":"RowsMut","qualname":"::buffer::RowsMut","value":"RowsMut {  }","parent":null,"children":[{"krate":0,"index":2478}],"decl_id":null,"docs":" Iterate over mutable rows of an image\n","sig":null,"attributes":[{"value":"/ Iterate over mutable rows of an image","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":545949,"byte_end":545990,"line_start":294,"line_end":294,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":2494},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":546969,"byte_end":546984,"line_start":338,"line_end":338,"column_start":12,"column_end":27},"name":"EnumeratePixels","qualname":"::buffer::EnumeratePixels","value":"EnumeratePixels {  }","parent":null,"children":[{"krate":0,"index":2497},{"krate":0,"index":2498},{"krate":0,"index":2499},{"krate":0,"index":2500}],"decl_id":null,"docs":" Enumerate the pixels of an image.\n","sig":null,"attributes":[{"value":"/ Enumerate the pixels of an image.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":546920,"byte_end":546957,"line_start":337,"line_end":337,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":2511},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":547732,"byte_end":547745,"line_start":376,"line_end":376,"column_start":12,"column_end":25},"name":"EnumerateRows","qualname":"::buffer::EnumerateRows","value":"EnumerateRows {  }","parent":null,"children":[{"krate":0,"index":2514},{"krate":0,"index":2515},{"krate":0,"index":2516}],"decl_id":null,"docs":" Enumerate the rows of an image.\n","sig":null,"attributes":[{"value":"/ Enumerate the rows of an image.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":547685,"byte_end":547720,"line_start":375,"line_end":375,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":2527},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":548608,"byte_end":548626,"line_start":419,"line_end":419,"column_start":12,"column_end":30},"name":"EnumeratePixelsMut","qualname":"::buffer::EnumeratePixelsMut","value":"EnumeratePixelsMut {  }","parent":null,"children":[{"krate":0,"index":2530},{"krate":0,"index":2531},{"krate":0,"index":2532},{"krate":0,"index":2533}],"decl_id":null,"docs":" Enumerate the pixels of an image.\n","sig":null,"attributes":[{"value":"/ Enumerate the pixels of an image.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":548559,"byte_end":548596,"line_start":418,"line_end":418,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":2544},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":549391,"byte_end":549407,"line_start":457,"line_end":457,"column_start":12,"column_end":28},"name":"EnumerateRowsMut","qualname":"::buffer::EnumerateRowsMut","value":"EnumerateRowsMut {  }","parent":null,"children":[{"krate":0,"index":2547},{"krate":0,"index":2548},{"krate":0,"index":2549}],"decl_id":null,"docs":" Enumerate the rows of an image.\n","sig":null,"attributes":[{"value":"/ Enumerate the rows of an image.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":549344,"byte_end":549379,"line_start":456,"line_end":456,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3813},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":550292,"byte_end":550303,"line_start":501,"line_end":501,"column_start":12,"column_end":23},"name":"ImageBuffer","qualname":"::buffer::ImageBuffer","value":"ImageBuffer {  }","parent":null,"children":[{"krate":0,"index":3816},{"krate":0,"index":3817},{"krate":0,"index":3818},{"krate":0,"index":3819}],"decl_id":null,"docs":" Generic image buffer\n","sig":null,"attributes":[{"value":"/ Generic image buffer","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":550239,"byte_end":550263,"line_start":499,"line_end":499,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":2563},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":551061,"byte_end":551069,"line_start":523,"line_end":523,"column_start":12,"column_end":20},"name":"from_raw","qualname":"<ImageBuffer<P, Container>>::from_raw","value":"fn (width: u32, height: u32, buf: Container) -> Option<ImageBuffer<P, Container>>","parent":null,"children":[],"decl_id":null,"docs":" Contructs a buffer from a generic container\n (for example a `Vec` or a slice)","sig":null,"attributes":[{"value":"/ Contructs a buffer from a generic container","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":550776,"byte_end":550823,"line_start":518,"line_end":518,"column_start":5,"column_end":52}},{"value":"/ (for example a `Vec` or a slice)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":550828,"byte_end":550864,"line_start":519,"line_end":519,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":550869,"byte_end":550872,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the container is not big enough (including when the image dimensions","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":550877,"byte_end":550967,"line_start":521,"line_end":521,"column_start":5,"column_end":95}},{"value":"/ necessitate an allocation of more bytes than supported by the container).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":550972,"byte_end":551049,"line_start":522,"line_end":522,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2564},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":551475,"byte_end":551483,"line_start":537,"line_end":537,"column_start":12,"column_end":20},"name":"into_raw","qualname":"<ImageBuffer<P, Container>>::into_raw","value":"fn (self) -> Container","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying raw buffer\n","sig":null,"attributes":[{"value":"/ Returns the underlying raw buffer","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":551426,"byte_end":551463,"line_start":536,"line_end":536,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2565},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":551585,"byte_end":551595,"line_start":542,"line_end":542,"column_start":12,"column_end":22},"name":"dimensions","qualname":"<ImageBuffer<P, Container>>::dimensions","value":"fn (&self) -> (u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" The width and height of this image.\n","sig":null,"attributes":[{"value":"/ The width and height of this image.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":551534,"byte_end":551573,"line_start":541,"line_end":541,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2566},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":551704,"byte_end":551709,"line_start":547,"line_end":547,"column_start":12,"column_end":17},"name":"width","qualname":"<ImageBuffer<P, Container>>::width","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The width of this image.\n","sig":null,"attributes":[{"value":"/ The width of this image.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":551664,"byte_end":551692,"line_start":546,"line_end":546,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2567},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":551797,"byte_end":551803,"line_start":552,"line_end":552,"column_start":12,"column_end":18},"name":"height","qualname":"<ImageBuffer<P, Container>>::height","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The height of this image.\n","sig":null,"attributes":[{"value":"/ The height of this image.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":551756,"byte_end":551785,"line_start":551,"line_end":551,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2568},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":551917,"byte_end":551923,"line_start":557,"line_end":557,"column_start":12,"column_end":18},"name":"pixels","qualname":"<ImageBuffer<P, Container>>::pixels","value":"fn (&self) -> Pixels<P>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the pixels of this image.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the pixels of this image.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":551851,"byte_end":551905,"line_start":556,"line_end":556,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2569},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":552124,"byte_end":552128,"line_start":564,"line_end":564,"column_start":12,"column_end":16},"name":"rows","qualname":"<ImageBuffer<P, Container>>::rows","value":"fn (&self) -> Rows<P>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the rows of this image.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the rows of this image.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":552060,"byte_end":552112,"line_start":563,"line_end":563,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2570},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":552471,"byte_end":552487,"line_start":575,"line_end":575,"column_start":12,"column_end":28},"name":"enumerate_pixels","qualname":"<ImageBuffer<P, Container>>::enumerate_pixels","value":"fn (&self) -> EnumeratePixels<P>","parent":null,"children":[],"decl_id":null,"docs":" Enumerates over the pixels of the image.\n The iterator yields the coordinates of each pixel\n along with a reference to them.\n","sig":null,"attributes":[{"value":"/ Enumerates over the pixels of the image.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":552317,"byte_end":552361,"line_start":572,"line_end":572,"column_start":5,"column_end":49}},{"value":"/ The iterator yields the coordinates of each pixel","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":552366,"byte_end":552419,"line_start":573,"line_end":573,"column_start":5,"column_end":58}},{"value":"/ along with a reference to them.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":552424,"byte_end":552459,"line_start":574,"line_end":574,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2571},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":552819,"byte_end":552833,"line_start":587,"line_end":587,"column_start":12,"column_end":26},"name":"enumerate_rows","qualname":"<ImageBuffer<P, Container>>::enumerate_rows","value":"fn (&self) -> EnumerateRows<P>","parent":null,"children":[],"decl_id":null,"docs":" Enumerates over the rows of the image.\n The iterator yields the y-coordinate of each row\n along with a reference to them.\n","sig":null,"attributes":[{"value":"/ Enumerates over the rows of the image.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":552668,"byte_end":552710,"line_start":584,"line_end":584,"column_start":5,"column_end":47}},{"value":"/ The iterator yields the y-coordinate of each row","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":552715,"byte_end":552767,"line_start":585,"line_end":585,"column_start":5,"column_end":57}},{"value":"/ along with a reference to them.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":552772,"byte_end":552807,"line_start":586,"line_end":586,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2572},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":553154,"byte_end":553163,"line_start":600,"line_end":600,"column_start":12,"column_end":21},"name":"get_pixel","qualname":"<ImageBuffer<P, Container>>::get_pixel","value":"fn (&self, x: u32, y: u32) -> &P","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the pixel at location `(x, y)`","sig":null,"attributes":[{"value":"/ Gets a reference to the pixel at location `(x, y)`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":552988,"byte_end":553042,"line_start":595,"line_end":595,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":553047,"byte_end":553050,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":553055,"byte_end":553067,"line_start":597,"line_end":597,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":553072,"byte_end":553075,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of the bounds `(width, height)`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":553080,"byte_end":553142,"line_start":599,"line_end":599,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2580},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":554889,"byte_end":554902,"line_start":641,"line_end":641,"column_start":12,"column_end":25},"name":"sample_layout","qualname":"<ImageBuffer<P, Container>>::sample_layout","value":"fn (&self) -> SampleLayout","parent":null,"children":[],"decl_id":null,"docs":" Get the format of the buffer when viewed as a matrix of samples.\n","sig":null,"attributes":[{"value":"/ Get the format of the buffer when viewed as a matrix of samples.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":554809,"byte_end":554877,"line_start":640,"line_end":640,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":2581},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":555516,"byte_end":555533,"line_start":652,"line_end":652,"column_start":12,"column_end":29},"name":"into_flat_samples","qualname":"<ImageBuffer<P, Container>>::into_flat_samples","value":"fn (self) -> FlatSamples<Container>","parent":null,"children":[],"decl_id":null,"docs":" Return the raw sample buffer with its stride an dimension information.","sig":null,"attributes":[{"value":"/ Return the raw sample buffer with its stride an dimension information.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":555105,"byte_end":555179,"line_start":646,"line_end":646,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":555184,"byte_end":555187,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ The returned buffer is guaranteed to be well formed in all cases. It is layed out by","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":555192,"byte_end":555280,"line_start":648,"line_end":648,"column_start":5,"column_end":93}},{"value":"/ colors, width then height, meaning `channel_stride <= width_stride <= height_stride`. All","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":555285,"byte_end":555378,"line_start":649,"line_end":649,"column_start":5,"column_end":98}},{"value":"/ strides are in numbers of elements but those are mostly `u8` in which case the strides are","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":555383,"byte_end":555477,"line_start":650,"line_end":650,"column_start":5,"column_end":99}},{"value":"/ also byte strides.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":555482,"byte_end":555504,"line_start":651,"line_end":651,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2582},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":555979,"byte_end":555994,"line_start":667,"line_end":667,"column_start":12,"column_end":27},"name":"as_flat_samples","qualname":"<ImageBuffer<P, Container>>::as_flat_samples","value":"fn (&self) -> FlatSamples<&[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Return a view on the raw sample buffer.","sig":null,"attributes":[{"value":"/ Return a view on the raw sample buffer.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":555874,"byte_end":555917,"line_start":664,"line_end":664,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":555922,"byte_end":555925,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ See `flattened` for more details.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":555930,"byte_end":555967,"line_start":666,"line_end":666,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2586},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":556513,"byte_end":556523,"line_start":686,"line_end":686,"column_start":12,"column_end":22},"name":"pixels_mut","qualname":"<ImageBuffer<P, Container>>::pixels_mut","value":"fn (&mut self) -> PixelsMut<P>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the mutable pixels of this image.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the mutable pixels of this image.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":556439,"byte_end":556501,"line_start":685,"line_end":685,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2587},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":556746,"byte_end":556754,"line_start":693,"line_end":693,"column_start":12,"column_end":20},"name":"rows_mut","qualname":"<ImageBuffer<P, Container>>::rows_mut","value":"fn (&mut self) -> RowsMut<P>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the mutable rows of this image.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the mutable rows of this image.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":556674,"byte_end":556734,"line_start":692,"line_end":692,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":2588},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":557119,"byte_end":557139,"line_start":704,"line_end":704,"column_start":12,"column_end":32},"name":"enumerate_pixels_mut","qualname":"<ImageBuffer<P, Container>>::enumerate_pixels_mut","value":"fn (&mut self) -> EnumeratePixelsMut<P>","parent":null,"children":[],"decl_id":null,"docs":" Enumerates over the pixels of the image.\n The iterator yields the coordinates of each pixel\n along with a mutable reference to them.\n","sig":null,"attributes":[{"value":"/ Enumerates over the pixels of the image.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":556957,"byte_end":557001,"line_start":701,"line_end":701,"column_start":5,"column_end":49}},{"value":"/ The iterator yields the coordinates of each pixel","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":557006,"byte_end":557059,"line_start":702,"line_end":702,"column_start":5,"column_end":58}},{"value":"/ along with a mutable reference to them.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":557064,"byte_end":557107,"line_start":703,"line_end":703,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2589},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":557513,"byte_end":557531,"line_start":717,"line_end":717,"column_start":12,"column_end":30},"name":"enumerate_rows_mut","qualname":"<ImageBuffer<P, Container>>::enumerate_rows_mut","value":"fn (&mut self) -> EnumerateRowsMut<P>","parent":null,"children":[],"decl_id":null,"docs":" Enumerates over the rows of the image.\n The iterator yields the y-coordinate of each row\n along with a mutable reference to them.\n","sig":null,"attributes":[{"value":"/ Enumerates over the rows of the image.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":557354,"byte_end":557396,"line_start":714,"line_end":714,"column_start":5,"column_end":47}},{"value":"/ The iterator yields the y-coordinate of each row","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":557401,"byte_end":557453,"line_start":715,"line_end":715,"column_start":5,"column_end":57}},{"value":"/ along with a mutable reference to them.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":557458,"byte_end":557501,"line_start":716,"line_end":716,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2590},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":557894,"byte_end":557907,"line_start":731,"line_end":731,"column_start":12,"column_end":25},"name":"get_pixel_mut","qualname":"<ImageBuffer<P, Container>>::get_pixel_mut","value":"fn (&mut self, x: u32, y: u32) -> &mut P","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the mutable pixel at location `(x, y)`","sig":null,"attributes":[{"value":"/ Gets a reference to the mutable pixel at location `(x, y)`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":557720,"byte_end":557782,"line_start":726,"line_end":726,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":557787,"byte_end":557790,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":557795,"byte_end":557807,"line_start":728,"line_end":728,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":557812,"byte_end":557815,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of the bounds `(width, height)`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":557820,"byte_end":557882,"line_start":730,"line_end":730,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2591},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":558356,"byte_end":558365,"line_start":743,"line_end":743,"column_start":12,"column_end":21},"name":"put_pixel","qualname":"<ImageBuffer<P, Container>>::put_pixel","value":"fn (&mut self, x: u32, y: u32, pixel: P) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Puts a pixel at location `(x, y)`","sig":null,"attributes":[{"value":"/ Puts a pixel at location `(x, y)`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":558207,"byte_end":558244,"line_start":738,"line_end":738,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":558249,"byte_end":558252,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":558257,"byte_end":558269,"line_start":740,"line_end":740,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":558274,"byte_end":558277,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of the bounds `(width, height)`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":558282,"byte_end":558344,"line_start":742,"line_end":742,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2595},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":558780,"byte_end":558784,"line_start":757,"line_end":757,"column_start":12,"column_end":16},"name":"save","qualname":"<ImageBuffer<P, Container>>::save","value":"fn <Q> (&self, path: Q) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Saves the buffer to a file at the path specified.","sig":null,"attributes":[{"value":"/ Saves the buffer to a file at the path specified.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":558589,"byte_end":558642,"line_start":753,"line_end":753,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":558647,"byte_end":558650,"line_start":754,"line_end":754,"column_start":5,"column_end":8}},{"value":"/ The image format is derived from the file extension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":558655,"byte_end":558711,"line_start":755,"line_end":755,"column_start":5,"column_end":61}},{"value":"/ Currently only jpeg and png files are supported.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":558716,"byte_end":558768,"line_start":756,"line_end":756,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2600},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":559417,"byte_end":559433,"line_start":782,"line_end":782,"column_start":12,"column_end":28},"name":"save_with_format","qualname":"<ImageBuffer<P, Container>>::save_with_format","value":"fn <Q> (&self, path: Q, format: ImageFormat) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Saves the buffer to a file at the specified path in\n the specified format.","sig":null,"attributes":[{"value":"/ Saves the buffer to a file at the specified path in","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":559210,"byte_end":559265,"line_start":777,"line_end":777,"column_start":5,"column_end":60}},{"value":"/ the specified format.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":559270,"byte_end":559295,"line_start":778,"line_end":778,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":559300,"byte_end":559303,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ See [`save_buffer_with_format`](fn.save_buffer_with_format.html) for","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":559308,"byte_end":559380,"line_start":780,"line_end":780,"column_start":5,"column_end":77}},{"value":"/ supported types.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":559385,"byte_end":559405,"line_start":781,"line_end":781,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":2648},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":565976,"byte_end":565979,"line_start":995,"line_end":995,"column_start":12,"column_end":15},"name":"new","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::new","value":"fn (width: u32, height: u32) -> ImageBuffer<P, Vec<P::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new image buffer based on a `Vec<P::Subpixel>`.","sig":null,"attributes":[{"value":"/ Creates a new image buffer based on a `Vec<P::Subpixel>`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":565786,"byte_end":565847,"line_start":990,"line_end":990,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":565852,"byte_end":565855,"line_start":991,"line_end":991,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":565860,"byte_end":565872,"line_start":992,"line_end":992,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":565877,"byte_end":565880,"line_start":993,"line_end":993,"column_start":5,"column_end":8}},{"value":"/ Panics when the resulting image is larger the the maximum size of a vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":565885,"byte_end":565964,"line_start":994,"line_end":994,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":2649},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":566517,"byte_end":566527,"line_start":1011,"line_end":1011,"column_start":12,"column_end":22},"name":"from_pixel","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::from_pixel","value":"fn (width: u32, height: u32, pixel: P) -> ImageBuffer<P, Vec<P::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new ImageBuffer by copying a pixel","sig":null,"attributes":[{"value":"/ Constructs a new ImageBuffer by copying a pixel","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":566337,"byte_end":566388,"line_start":1006,"line_end":1006,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":566393,"byte_end":566396,"line_start":1007,"line_end":1007,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":566401,"byte_end":566413,"line_start":1008,"line_end":1008,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":566418,"byte_end":566421,"line_start":1009,"line_end":1009,"column_start":5,"column_end":8}},{"value":"/ Panics when the resulting image is larger the the maximum size of a vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":566426,"byte_end":566505,"line_start":1010,"line_end":1010,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":2650},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":567042,"byte_end":567049,"line_start":1026,"line_end":1026,"column_start":12,"column_end":19},"name":"from_fn","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::from_fn","value":"fn <F> (width: u32, height: u32, mut f: F) -> ImageBuffer<P, Vec<P::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new ImageBuffer by repeated application of the supplied function.","sig":null,"attributes":[{"value":"/ Constructs a new ImageBuffer by repeated application of the supplied function.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":566748,"byte_end":566830,"line_start":1019,"line_end":1019,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":566835,"byte_end":566838,"line_start":1020,"line_end":1020,"column_start":5,"column_end":8}},{"value":"/ The arguments to the function are the pixel's x and y coordinates.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":566843,"byte_end":566913,"line_start":1021,"line_end":1021,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":566918,"byte_end":566921,"line_start":1022,"line_end":1022,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":566926,"byte_end":566938,"line_start":1023,"line_end":1023,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":566943,"byte_end":566946,"line_start":1024,"line_end":1024,"column_start":5,"column_end":8}},{"value":"/ Panics when the resulting image is larger the the maximum size of a vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":566951,"byte_end":567030,"line_start":1025,"line_end":1025,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":2652},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":567460,"byte_end":567468,"line_start":1039,"line_end":1039,"column_start":12,"column_end":20},"name":"from_vec","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::from_vec","value":"fn (width: u32, height: u32, buf: Vec<P::Subpixel>) -> Option<ImageBuffer<P, Vec<P::Subpixel>>>","parent":null,"children":[],"decl_id":null,"docs":" Creates an image buffer out of an existing buffer.\n Returns None if the buffer is not big enough.\n","sig":null,"attributes":[{"value":"/ Creates an image buffer out of an existing buffer.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":567340,"byte_end":567394,"line_start":1037,"line_end":1037,"column_start":5,"column_end":59}},{"value":"/ Returns None if the buffer is not big enough.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":567399,"byte_end":567448,"line_start":1038,"line_end":1038,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2653},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":567755,"byte_end":567763,"line_start":1049,"line_end":1049,"column_start":12,"column_end":20},"name":"into_vec","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::into_vec","value":"fn (self) -> Vec<P::Subpixel>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the image buffer and returns the underlying data\n as an owned buffer\n","sig":null,"attributes":[{"value":"/ Consumes the image buffer and returns the underlying data","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":567655,"byte_end":567716,"line_start":1047,"line_end":1047,"column_start":5,"column_end":66}},{"value":"/ as an owned buffer","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":567721,"byte_end":567743,"line_start":1048,"line_end":1048,"column_start":5,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":2654},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":567891,"byte_end":567904,"line_start":1055,"line_end":1055,"column_start":11,"column_end":24},"name":"ConvertBuffer","qualname":"::buffer::ConvertBuffer","value":"ConvertBuffer<T>","parent":null,"children":[{"krate":0,"index":2656}],"decl_id":null,"docs":" Provides color conversions for whole image buffers.\n","sig":null,"attributes":[{"value":"/ Provides color conversions for whole image buffers.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":567825,"byte_end":567880,"line_start":1054,"line_end":1054,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2656},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":568091,"byte_end":568098,"line_start":1060,"line_end":1060,"column_start":8,"column_end":15},"name":"convert","qualname":"::buffer::ConvertBuffer::convert","value":"fn (&self) -> T","parent":{"krate":0,"index":2654},"children":[],"decl_id":null,"docs":" Converts `self` to a buffer of type T","sig":null,"attributes":[{"value":"/ Converts `self` to a buffer of type T","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":567914,"byte_end":567955,"line_start":1056,"line_end":1056,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":567960,"byte_end":567963,"line_start":1057,"line_end":1057,"column_start":5,"column_end":8}},{"value":"/ A generic implementation is provided to convert any image buffer to a image buffer","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":567968,"byte_end":568054,"line_start":1058,"line_end":1058,"column_start":5,"column_end":91}},{"value":"/ based on a `Vec<T>`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":568059,"byte_end":568083,"line_start":1059,"line_end":1059,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2658},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":568366,"byte_end":568380,"line_start":1068,"line_end":1068,"column_start":12,"column_end":26},"name":"expand_palette","qualname":"<GrayImage>::expand_palette","value":"fn (self, palette: &[(u8, u8, u8)], transparent_idx: Option<u8>) -> RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Expands a color palette by re-using the existing buffer.\n Assumes 8 bit per pixel. Uses an optionally transparent index to\n adjust it's alpha value accordingly.\n","sig":null,"attributes":[{"value":"/ Expands a color palette by re-using the existing buffer.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":568176,"byte_end":568236,"line_start":1065,"line_end":1065,"column_start":5,"column_end":65}},{"value":"/ Assumes 8 bit per pixel. Uses an optionally transparent index to","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":568241,"byte_end":568309,"line_start":1066,"line_end":1066,"column_start":5,"column_end":73}},{"value":"/ adjust it's alpha value accordingly.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":568314,"byte_end":568354,"line_start":1067,"line_end":1067,"column_start":5,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":2667},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":570124,"byte_end":570132,"line_start":1120,"line_end":1120,"column_start":10,"column_end":18},"name":"RgbImage","qualname":"::buffer::RgbImage","value":"ImageBuffer<Rgb<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Sendable Rgb image buffer\n","sig":null,"attributes":[{"value":"/ Sendable Rgb image buffer","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":570085,"byte_end":570114,"line_start":1119,"line_end":1119,"column_start":1,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":2668},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":570221,"byte_end":570230,"line_start":1122,"line_end":1122,"column_start":10,"column_end":19},"name":"RgbaImage","qualname":"::buffer::RgbaImage","value":"ImageBuffer<Rgba<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Sendable Rgb + alpha channel image buffer\n","sig":null,"attributes":[{"value":"/ Sendable Rgb + alpha channel image buffer","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":570166,"byte_end":570211,"line_start":1121,"line_end":1121,"column_start":1,"column_end":46}}]},{"kind":"Type","id":{"krate":0,"index":2669},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":570310,"byte_end":570319,"line_start":1124,"line_end":1124,"column_start":10,"column_end":19},"name":"GrayImage","qualname":"::buffer::GrayImage","value":"ImageBuffer<Luma<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Sendable grayscale image buffer\n","sig":null,"attributes":[{"value":"/ Sendable grayscale image buffer","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":570265,"byte_end":570300,"line_start":1123,"line_end":1123,"column_start":1,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":2670},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":570415,"byte_end":570429,"line_start":1126,"line_end":1126,"column_start":10,"column_end":24},"name":"GrayAlphaImage","qualname":"::buffer::GrayAlphaImage","value":"ImageBuffer<LumaA<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Sendable grayscale + alpha channel image buffer\n","sig":null,"attributes":[{"value":"/ Sendable grayscale + alpha channel image buffer","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":570354,"byte_end":570405,"line_start":1125,"line_end":1125,"column_start":1,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3825},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":577459,"byte_end":577463,"line_start":12,"line_end":12,"column_start":5,"column_end":9},"name":"Gray","qualname":"::color::ColorType::Gray","value":"ColorType::Gray(u8)","parent":{"krate":0,"index":3824},"children":[],"decl_id":null,"docs":" Pixel is grayscale\n","sig":null,"attributes":[{"value":"/ Pixel is grayscale","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":577432,"byte_end":577454,"line_start":11,"line_end":11,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3828},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":577517,"byte_end":577520,"line_start":15,"line_end":15,"column_start":5,"column_end":8},"name":"RGB","qualname":"::color::ColorType::RGB","value":"ColorType::RGB(u8)","parent":{"krate":0,"index":3824},"children":[],"decl_id":null,"docs":" Pixel contains R, G and B channels\n","sig":null,"attributes":[{"value":"/ Pixel contains R, G and B channels","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":577474,"byte_end":577512,"line_start":14,"line_end":14,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3831},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":577578,"byte_end":577585,"line_start":18,"line_end":18,"column_start":5,"column_end":12},"name":"Palette","qualname":"::color::ColorType::Palette","value":"ColorType::Palette(u8)","parent":{"krate":0,"index":3824},"children":[],"decl_id":null,"docs":" Pixel is an index into a color palette\n","sig":null,"attributes":[{"value":"/ Pixel is an index into a color palette","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":577531,"byte_end":577573,"line_start":17,"line_end":17,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3834},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":577645,"byte_end":577650,"line_start":21,"line_end":21,"column_start":5,"column_end":10},"name":"GrayA","qualname":"::color::ColorType::GrayA","value":"ColorType::GrayA(u8)","parent":{"krate":0,"index":3824},"children":[],"decl_id":null,"docs":" Pixel is grayscale with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is grayscale with an alpha channel","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":577596,"byte_end":577640,"line_start":20,"line_end":20,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3837},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":577704,"byte_end":577708,"line_start":24,"line_end":24,"column_start":5,"column_end":9},"name":"RGBA","qualname":"::color::ColorType::RGBA","value":"ColorType::RGBA(u8)","parent":{"krate":0,"index":3824},"children":[],"decl_id":null,"docs":" Pixel is RGB with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is RGB with an alpha channel","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":577661,"byte_end":577699,"line_start":23,"line_end":23,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3840},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":577762,"byte_end":577765,"line_start":27,"line_end":27,"column_start":5,"column_end":8},"name":"BGR","qualname":"::color::ColorType::BGR","value":"ColorType::BGR(u8)","parent":{"krate":0,"index":3824},"children":[],"decl_id":null,"docs":" Pixel contains B, G and R channels\n","sig":null,"attributes":[{"value":"/ Pixel contains B, G and R channels","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":577719,"byte_end":577757,"line_start":26,"line_end":26,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3843},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":577819,"byte_end":577823,"line_start":30,"line_end":30,"column_start":5,"column_end":9},"name":"BGRA","qualname":"::color::ColorType::BGRA","value":"ColorType::BGRA(u8)","parent":{"krate":0,"index":3824},"children":[],"decl_id":null,"docs":" Pixel is BGR with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is BGR with an alpha channel","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":577776,"byte_end":577814,"line_start":29,"line_end":29,"column_start":5,"column_end":43}}]},{"kind":"Enum","id":{"krate":0,"index":3824},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":577416,"byte_end":577425,"line_start":10,"line_end":10,"column_start":10,"column_end":19},"name":"ColorType","qualname":"::color::ColorType","value":"ColorType::{Gray, RGB, Palette, GrayA, RGBA, BGR, BGRA}","parent":null,"children":[{"krate":0,"index":3825},{"krate":0,"index":3828},{"krate":0,"index":3831},{"krate":0,"index":3834},{"krate":0,"index":3837},{"krate":0,"index":3840},{"krate":0,"index":3843}],"decl_id":null,"docs":" An enumeration over supported color types and their bit depths\n","sig":null,"attributes":[{"value":"/ An enumeration over supported color types and their bit depths","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":577289,"byte_end":577355,"line_start":8,"line_end":8,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2684},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":577937,"byte_end":577951,"line_start":36,"line_end":36,"column_start":12,"column_end":26},"name":"bits_per_pixel","qualname":"<ColorType>::bits_per_pixel","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bits contained in a pixel of this `ColorType`\n","sig":null,"attributes":[{"value":"/ Returns the number of bits contained in a pixel of this `ColorType`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":577854,"byte_end":577925,"line_start":35,"line_end":35,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":2685},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":578085,"byte_end":578098,"line_start":41,"line_end":41,"column_start":12,"column_end":25},"name":"channel_count","qualname":"<ColorType>::channel_count","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of color channels that make up this pixel\n","sig":null,"attributes":[{"value":"/ Returns the number of color channels that make up this pixel","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":578009,"byte_end":578073,"line_start":40,"line_end":40,"column_start":5,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":4131},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":583258,"byte_end":583261,"line_start":232,"line_end":232,"column_start":5,"column_end":8},"name":"Rgb","qualname":"::color::Rgb","value":"","parent":null,"children":[],"decl_id":null,"docs":"RGB colors\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":579168,"byte_end":579178,"line_start":80,"line_end":80,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":579179,"byte_end":579201,"line_start":81,"line_end":81,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":4160},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":583308,"byte_end":583311,"line_start":233,"line_end":233,"column_start":5,"column_end":8},"name":"Bgr","qualname":"::color::Bgr","value":"","parent":null,"children":[],"decl_id":null,"docs":"BGR colors\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":579168,"byte_end":579178,"line_start":80,"line_end":80,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":579179,"byte_end":579201,"line_start":81,"line_end":81,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":4189},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":583358,"byte_end":583362,"line_start":234,"line_end":234,"column_start":5,"column_end":9},"name":"Luma","qualname":"::color::Luma","value":"","parent":null,"children":[],"decl_id":null,"docs":"Grayscale colors\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":579168,"byte_end":579178,"line_start":80,"line_end":80,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":579179,"byte_end":579201,"line_start":81,"line_end":81,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":4218},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":583414,"byte_end":583418,"line_start":235,"line_end":235,"column_start":5,"column_end":9},"name":"Rgba","qualname":"::color::Rgba","value":"","parent":null,"children":[],"decl_id":null,"docs":"RGB colors + alpha channel\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":579168,"byte_end":579178,"line_start":80,"line_end":80,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":579179,"byte_end":579201,"line_start":81,"line_end":81,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":4247},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":583483,"byte_end":583487,"line_start":236,"line_end":236,"column_start":5,"column_end":9},"name":"Bgra","qualname":"::color::Bgra","value":"","parent":null,"children":[],"decl_id":null,"docs":"BGR colors + alpha channel\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":579168,"byte_end":579178,"line_start":80,"line_end":80,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":579179,"byte_end":579201,"line_start":81,"line_end":81,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":4276},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":583552,"byte_end":583557,"line_start":237,"line_end":237,"column_start":5,"column_end":10},"name":"LumaA","qualname":"::color::LumaA","value":"","parent":null,"children":[],"decl_id":null,"docs":"Grayscale colors + alpha channel\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":579168,"byte_end":579178,"line_start":80,"line_end":80,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":579179,"byte_end":579201,"line_start":81,"line_end":81,"column_start":1,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":2689},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":583698,"byte_end":583707,"line_start":241,"line_end":241,"column_start":11,"column_end":20},"name":"FromColor","qualname":"::color::FromColor","value":"FromColor<Other>","parent":null,"children":[{"krate":0,"index":2691}],"decl_id":null,"docs":" Provides color conversions for the different pixel types.\n","sig":null,"attributes":[{"value":"/ Provides color conversions for the different pixel types.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":583626,"byte_end":583687,"line_start":240,"line_end":240,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2691},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":583797,"byte_end":583807,"line_start":243,"line_end":243,"column_start":8,"column_end":18},"name":"from_color","qualname":"::color::FromColor::from_color","value":"fn (&mut self, &Other) -> ()","parent":{"krate":0,"index":2689},"children":[],"decl_id":null,"docs":" Changes `self` to represent `Other` in the color space of `Self`\n","sig":null,"attributes":[{"value":"/ Changes `self` to represent `Other` in the color space of `Self`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":583721,"byte_end":583789,"line_start":242,"line_end":242,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4306},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":606043,"byte_end":606053,"line_start":37,"line_end":37,"column_start":5,"column_end":15},"name":"ImageLuma8","qualname":"::dynimage::DynamicImage::ImageLuma8","value":"DynamicImage::ImageLuma8(GrayImage)","parent":{"krate":0,"index":4305},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Luma\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 8-bit Luma","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":605996,"byte_end":606038,"line_start":36,"line_end":36,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4309},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":606129,"byte_end":606140,"line_start":40,"line_end":40,"column_start":5,"column_end":16},"name":"ImageLumaA8","qualname":"::dynimage::DynamicImage::ImageLumaA8","value":"DynamicImage::ImageLumaA8(GrayAlphaImage)","parent":{"krate":0,"index":4305},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Luma with alpha\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 8-bit Luma with alpha","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":606071,"byte_end":606124,"line_start":39,"line_end":39,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4312},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":606209,"byte_end":606218,"line_start":43,"line_end":43,"column_start":5,"column_end":14},"name":"ImageRgb8","qualname":"::dynimage::DynamicImage::ImageRgb8","value":"DynamicImage::ImageRgb8(RgbImage)","parent":{"krate":0,"index":4305},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Rgb\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 8-bit Rgb","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":606163,"byte_end":606204,"line_start":42,"line_end":42,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4315},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":606292,"byte_end":606302,"line_start":46,"line_end":46,"column_start":5,"column_end":15},"name":"ImageRgba8","qualname":"::dynimage::DynamicImage::ImageRgba8","value":"DynamicImage::ImageRgba8(RgbaImage)","parent":{"krate":0,"index":4305},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Rgb with alpha\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 8-bit Rgb with alpha","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":606235,"byte_end":606287,"line_start":45,"line_end":45,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4318},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":606366,"byte_end":606375,"line_start":49,"line_end":49,"column_start":5,"column_end":14},"name":"ImageBgr8","qualname":"::dynimage::DynamicImage::ImageBgr8","value":"DynamicImage::ImageBgr8(BgrImage)","parent":{"krate":0,"index":4305},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Bgr\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 8-bit Bgr","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":606320,"byte_end":606361,"line_start":48,"line_end":48,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4321},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":606449,"byte_end":606459,"line_start":52,"line_end":52,"column_start":5,"column_end":15},"name":"ImageBgra8","qualname":"::dynimage::DynamicImage::ImageBgra8","value":"DynamicImage::ImageBgra8(BgraImage)","parent":{"krate":0,"index":4305},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Bgr with alpha\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 8-bit Bgr with alpha","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":606392,"byte_end":606444,"line_start":51,"line_end":51,"column_start":5,"column_end":57}}]},{"kind":"Enum","id":{"krate":0,"index":4305},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":605977,"byte_end":605989,"line_start":35,"line_end":35,"column_start":10,"column_end":22},"name":"DynamicImage","qualname":"::dynimage::DynamicImage","value":"DynamicImage::{ImageLuma8, ImageLumaA8, ImageRgb8, ImageRgba8, ImageBgr8, ImageBgra8}","parent":null,"children":[{"krate":0,"index":4306},{"krate":0,"index":4309},{"krate":0,"index":4312},{"krate":0,"index":4315},{"krate":0,"index":4318},{"krate":0,"index":4321}],"decl_id":null,"docs":" A Dynamic Image\n","sig":null,"attributes":[{"value":"/ A Dynamic Image","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":605931,"byte_end":605950,"line_start":33,"line_end":33,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2861},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":609240,"byte_end":609249,"line_start":103,"line_end":103,"column_start":12,"column_end":21},"name":"new_luma8","qualname":"<DynamicImage>::new_luma8","value":"fn (w: u32, h: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of grey pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of grey pixels.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":609166,"byte_end":609228,"line_start":102,"line_end":102,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2862},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":609452,"byte_end":609463,"line_start":109,"line_end":109,"column_start":12,"column_end":23},"name":"new_luma_a8","qualname":"<DynamicImage>::new_luma_a8","value":"fn (w: u32, h: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of grey\n pixels with transparency.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of grey","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":609352,"byte_end":609406,"line_start":107,"line_end":107,"column_start":5,"column_end":59}},{"value":"/ pixels with transparency.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":609411,"byte_end":609440,"line_start":108,"line_end":108,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2863},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":609640,"byte_end":609648,"line_start":114,"line_end":114,"column_start":12,"column_end":20},"name":"new_rgb8","qualname":"<DynamicImage>::new_rgb8","value":"fn (w: u32, h: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of RGB pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of RGB pixels.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":609567,"byte_end":609628,"line_start":113,"line_end":113,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2864},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":609824,"byte_end":609833,"line_start":119,"line_end":119,"column_start":12,"column_end":21},"name":"new_rgba8","qualname":"<DynamicImage>::new_rgba8","value":"fn (w: u32, h: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of RGBA pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of RGBA pixels.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":609750,"byte_end":609812,"line_start":118,"line_end":118,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2865},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":610010,"byte_end":610019,"line_start":124,"line_end":124,"column_start":12,"column_end":21},"name":"new_bgra8","qualname":"<DynamicImage>::new_bgra8","value":"fn (w: u32, h: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of BGRA pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of BGRA pixels.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":609936,"byte_end":609998,"line_start":123,"line_end":123,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2866},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":610195,"byte_end":610203,"line_start":129,"line_end":129,"column_start":12,"column_end":20},"name":"new_bgr8","qualname":"<DynamicImage>::new_bgr8","value":"fn (w: u32, h: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of BGR pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of BGR pixels.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":610122,"byte_end":610183,"line_start":128,"line_end":128,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2867},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":610367,"byte_end":610379,"line_start":134,"line_end":134,"column_start":12,"column_end":24},"name":"from_decoder","qualname":"<DynamicImage>::from_decoder","value":"fn <'a> (decoder: impl ImageDecoder<'a>) -> ImageResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Decodes an encoded image into a dynamic image.\n","sig":null,"attributes":[{"value":"/ Decodes an encoded image into a dynamic image.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":610305,"byte_end":610355,"line_start":133,"line_end":133,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2870},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":610557,"byte_end":610563,"line_start":141,"line_end":141,"column_start":12,"column_end":18},"name":"to_rgb","qualname":"<DynamicImage>::to_rgb","value":"fn (&self) -> RgbImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an RGB image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as an RGB image.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":610496,"byte_end":610545,"line_start":140,"line_end":140,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2871},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":610732,"byte_end":610739,"line_start":148,"line_end":148,"column_start":12,"column_end":19},"name":"to_rgba","qualname":"<DynamicImage>::to_rgba","value":"fn (&self) -> RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an RGBA image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as an RGBA image.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":610670,"byte_end":610720,"line_start":147,"line_end":147,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2872},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":610908,"byte_end":610914,"line_start":155,"line_end":155,"column_start":12,"column_end":18},"name":"to_bgr","qualname":"<DynamicImage>::to_bgr","value":"fn (&self) -> BgrImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an BGR image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as an BGR image.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":610847,"byte_end":610896,"line_start":154,"line_end":154,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2873},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":611083,"byte_end":611090,"line_start":162,"line_end":162,"column_start":12,"column_end":19},"name":"to_bgra","qualname":"<DynamicImage>::to_bgra","value":"fn (&self) -> BgraImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an BGRA image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as an BGRA image.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":611021,"byte_end":611071,"line_start":161,"line_end":161,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2874},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":611259,"byte_end":611266,"line_start":169,"line_end":169,"column_start":12,"column_end":19},"name":"to_luma","qualname":"<DynamicImage>::to_luma","value":"fn (&self) -> GrayImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as a Luma image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as a Luma image.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":611198,"byte_end":611247,"line_start":168,"line_end":168,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2875},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":611436,"byte_end":611449,"line_start":176,"line_end":176,"column_start":12,"column_end":25},"name":"to_luma_alpha","qualname":"<DynamicImage>::to_luma_alpha","value":"fn (&self) -> GrayAlphaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as a LumaA image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as a LumaA image.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":611374,"byte_end":611424,"line_start":175,"line_end":175,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2876},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":611741,"byte_end":611749,"line_start":186,"line_end":186,"column_start":12,"column_end":20},"name":"into_rgb","qualname":"<DynamicImage>::into_rgb","value":"fn (self) -> RgbImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a RGB image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a RGB image.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":611562,"byte_end":611608,"line_start":182,"line_end":182,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":611613,"byte_end":611616,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":611621,"byte_end":611691,"line_start":184,"line_end":184,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":611696,"byte_end":611729,"line_start":185,"line_end":185,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2877},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":612066,"byte_end":612075,"line_start":197,"line_end":197,"column_start":12,"column_end":21},"name":"into_rgba","qualname":"<DynamicImage>::into_rgba","value":"fn (self) -> RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a RGBA image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a RGBA image.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":611886,"byte_end":611933,"line_start":193,"line_end":193,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":611938,"byte_end":611941,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":611946,"byte_end":612016,"line_start":195,"line_end":195,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":612021,"byte_end":612054,"line_start":196,"line_end":196,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2878},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":612394,"byte_end":612402,"line_start":208,"line_end":208,"column_start":12,"column_end":20},"name":"into_bgr","qualname":"<DynamicImage>::into_bgr","value":"fn (self) -> BgrImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a BGR image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a BGR image.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":612215,"byte_end":612261,"line_start":204,"line_end":204,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":612266,"byte_end":612269,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":612274,"byte_end":612344,"line_start":206,"line_end":206,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":612349,"byte_end":612382,"line_start":207,"line_end":207,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2879},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":612719,"byte_end":612728,"line_start":219,"line_end":219,"column_start":12,"column_end":21},"name":"into_bgra","qualname":"<DynamicImage>::into_bgra","value":"fn (self) -> BgraImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a BGRA image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a BGRA image.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":612539,"byte_end":612586,"line_start":215,"line_end":215,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":612591,"byte_end":612594,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":612599,"byte_end":612669,"line_start":217,"line_end":217,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":612674,"byte_end":612707,"line_start":218,"line_end":218,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2880},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":613048,"byte_end":613057,"line_start":230,"line_end":230,"column_start":12,"column_end":21},"name":"into_luma","qualname":"<DynamicImage>::into_luma","value":"fn (self) -> GrayImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a Luma image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a Luma image.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":612868,"byte_end":612915,"line_start":226,"line_end":226,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":612920,"byte_end":612923,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":612928,"byte_end":612998,"line_start":228,"line_end":228,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":613003,"byte_end":613036,"line_start":229,"line_end":229,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2881},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":613378,"byte_end":613393,"line_start":241,"line_end":241,"column_start":12,"column_end":27},"name":"into_luma_alpha","qualname":"<DynamicImage>::into_luma_alpha","value":"fn (self) -> GrayAlphaImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a LumaA image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a LumaA image.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":613197,"byte_end":613245,"line_start":237,"line_end":237,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":613250,"byte_end":613253,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":613258,"byte_end":613328,"line_start":239,"line_end":239,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":613333,"byte_end":613366,"line_start":240,"line_end":240,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2882},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":613628,"byte_end":613632,"line_start":249,"line_end":249,"column_start":12,"column_end":16},"name":"crop","qualname":"<DynamicImage>::crop","value":"fn (&mut self, x: u32, y: u32, width: u32, height: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Return a cut out of this image delimited by the bounding rectangle.\n","sig":null,"attributes":[{"value":"/ Return a cut out of this image delimited by the bounding rectangle.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":613545,"byte_end":613616,"line_start":248,"line_end":248,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":2883},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":613861,"byte_end":613868,"line_start":254,"line_end":254,"column_start":12,"column_end":19},"name":"as_rgb8","qualname":"<DynamicImage>::as_rgb8","value":"fn (&self) -> Option<&RgbImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit RGB image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 8bit RGB image","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":613806,"byte_end":613849,"line_start":253,"line_end":253,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2884},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":614083,"byte_end":614094,"line_start":262,"line_end":262,"column_start":12,"column_end":23},"name":"as_mut_rgb8","qualname":"<DynamicImage>::as_mut_rgb8","value":"fn (&mut self) -> Option<&mut RgbImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit RGB image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 8bit RGB image","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":614020,"byte_end":614071,"line_start":261,"line_end":261,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2885},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":614313,"byte_end":614320,"line_start":270,"line_end":270,"column_start":12,"column_end":19},"name":"as_bgr8","qualname":"<DynamicImage>::as_bgr8","value":"fn (&self) -> Option<&BgrImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit BGR image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 8bit BGR image","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":614258,"byte_end":614301,"line_start":269,"line_end":269,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2886},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":614535,"byte_end":614546,"line_start":278,"line_end":278,"column_start":12,"column_end":23},"name":"as_mut_bgr8","qualname":"<DynamicImage>::as_mut_bgr8","value":"fn (&mut self) -> Option<&mut BgrImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit BGR image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 8bit BGR image","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":614472,"byte_end":614523,"line_start":277,"line_end":277,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2887},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":614766,"byte_end":614774,"line_start":286,"line_end":286,"column_start":12,"column_end":20},"name":"as_rgba8","qualname":"<DynamicImage>::as_rgba8","value":"fn (&self) -> Option<&RgbaImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit RGBA image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 8bit RGBA image","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":614710,"byte_end":614754,"line_start":285,"line_end":285,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2888},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":614992,"byte_end":615004,"line_start":294,"line_end":294,"column_start":12,"column_end":24},"name":"as_mut_rgba8","qualname":"<DynamicImage>::as_mut_rgba8","value":"fn (&mut self) -> Option<&mut RgbaImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit RGBA image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 8bit RGBA image","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":614928,"byte_end":614980,"line_start":293,"line_end":293,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2889},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":615226,"byte_end":615234,"line_start":302,"line_end":302,"column_start":12,"column_end":20},"name":"as_bgra8","qualname":"<DynamicImage>::as_bgra8","value":"fn (&self) -> Option<&BgraImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit BGRA image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 8bit BGRA image","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":615170,"byte_end":615214,"line_start":301,"line_end":301,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2890},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":615452,"byte_end":615464,"line_start":310,"line_end":310,"column_start":12,"column_end":24},"name":"as_mut_bgra8","qualname":"<DynamicImage>::as_mut_bgra8","value":"fn (&mut self) -> Option<&mut BgraImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit RGBA image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 8bit RGBA image","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":615388,"byte_end":615440,"line_start":309,"line_end":309,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2891},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":615691,"byte_end":615699,"line_start":318,"line_end":318,"column_start":12,"column_end":20},"name":"as_luma8","qualname":"<DynamicImage>::as_luma8","value":"fn (&self) -> Option<&GrayImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit Grayscale image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 8bit Grayscale image","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":615630,"byte_end":615679,"line_start":317,"line_end":317,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2892},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":615922,"byte_end":615934,"line_start":326,"line_end":326,"column_start":12,"column_end":24},"name":"as_mut_luma8","qualname":"<DynamicImage>::as_mut_luma8","value":"fn (&mut self) -> Option<&mut GrayImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit Grayscale image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 8bit Grayscale image","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":615853,"byte_end":615910,"line_start":325,"line_end":325,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2893},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":616183,"byte_end":616197,"line_start":334,"line_end":334,"column_start":12,"column_end":26},"name":"as_luma_alpha8","qualname":"<DynamicImage>::as_luma_alpha8","value":"fn (&self) -> Option<&GrayAlphaImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit Grayscale image with an alpha channel\n","sig":null,"attributes":[{"value":"/ Return a reference to an 8bit Grayscale image with an alpha channel","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":616100,"byte_end":616171,"line_start":333,"line_end":333,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":2894},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":616448,"byte_end":616466,"line_start":342,"line_end":342,"column_start":12,"column_end":30},"name":"as_mut_luma_alpha8","qualname":"<DynamicImage>::as_mut_luma_alpha8","value":"fn (&mut self) -> Option<&mut GrayAlphaImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit Grayscale image with an alpha channel\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 8bit Grayscale image with an alpha channel","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":616357,"byte_end":616436,"line_start":341,"line_end":341,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":2895},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":616698,"byte_end":616708,"line_start":350,"line_end":350,"column_start":12,"column_end":22},"name":"raw_pixels","qualname":"<DynamicImage>::raw_pixels","value":"fn (&self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Return this image's pixels as a byte vector.\n","sig":null,"attributes":[{"value":"/ Return this image's pixels as a byte vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":616638,"byte_end":616686,"line_start":349,"line_end":349,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2896},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":616824,"byte_end":616839,"line_start":355,"line_end":355,"column_start":12,"column_end":27},"name":"as_flat_samples","qualname":"<DynamicImage>::as_flat_samples","value":"fn (&self) -> FlatSamples<&[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Return a view on the raw sample buffer.\n","sig":null,"attributes":[{"value":"/ Return a view on the raw sample buffer.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":616769,"byte_end":616812,"line_start":354,"line_end":354,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2897},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":616987,"byte_end":616992,"line_start":360,"line_end":360,"column_start":12,"column_end":17},"name":"color","qualname":"<DynamicImage>::color","value":"fn (&self) -> color::ColorType","parent":null,"children":[],"decl_id":null,"docs":" Return this image's color type.\n","sig":null,"attributes":[{"value":"/ Return this image's color type.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":616940,"byte_end":616975,"line_start":359,"line_end":359,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2898},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":617540,"byte_end":617549,"line_start":372,"line_end":372,"column_start":12,"column_end":21},"name":"grayscale","qualname":"<DynamicImage>::grayscale","value":"fn (&self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Return a grayscale version of this image.\n","sig":null,"attributes":[{"value":"/ Return a grayscale version of this image.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":617483,"byte_end":617528,"line_start":371,"line_end":371,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2899},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":618272,"byte_end":618278,"line_start":385,"line_end":385,"column_start":12,"column_end":18},"name":"invert","qualname":"<DynamicImage>::invert","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Invert the colors of this image.\n This method operates inplace.\n","sig":null,"attributes":[{"value":"/ Invert the colors of this image.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":618186,"byte_end":618222,"line_start":383,"line_end":383,"column_start":5,"column_end":41}},{"value":"/ This method operates inplace.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":618227,"byte_end":618260,"line_start":384,"line_end":384,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2900},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":618642,"byte_end":618648,"line_start":393,"line_end":393,"column_start":12,"column_end":18},"name":"resize","qualname":"<DynamicImage>::resize","value":"fn (&self, nwidth: u32, nheight: u32, filter: imageops::FilterType) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Resize this image using the specified filter algorithm.\n Returns a new image. The image's aspect ratio is preserved.\n The image is scaled to the maximum possible size that fits\n within the bounds specified by ```nwidth``` and ```nheight```.\n","sig":null,"attributes":[{"value":"/ Resize this image using the specified filter algorithm.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":618365,"byte_end":618424,"line_start":389,"line_end":389,"column_start":5,"column_end":64}},{"value":"/ Returns a new image. The image's aspect ratio is preserved.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":618429,"byte_end":618492,"line_start":390,"line_end":390,"column_start":5,"column_end":68}},{"value":"/ The image is scaled to the maximum possible size that fits","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":618497,"byte_end":618559,"line_start":391,"line_end":391,"column_start":5,"column_end":67}},{"value":"/ within the bounds specified by ```nwidth``` and ```nheight```.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":618564,"byte_end":618630,"line_start":392,"line_end":392,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2901},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":619112,"byte_end":619124,"line_start":403,"line_end":403,"column_start":12,"column_end":24},"name":"resize_exact","qualname":"<DynamicImage>::resize_exact","value":"fn (&self, nwidth: u32, nheight: u32, filter: imageops::FilterType) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Resize this image using the specified filter algorithm.\n Returns a new image. Does not preserve aspect ratio.\n ```nwidth``` and ```nheight``` are the new image's dimensions\n","sig":null,"attributes":[{"value":"/ Resize this image using the specified filter algorithm.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":618910,"byte_end":618969,"line_start":400,"line_end":400,"column_start":5,"column_end":64}},{"value":"/ Returns a new image. Does not preserve aspect ratio.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":618974,"byte_end":619030,"line_start":401,"line_end":401,"column_start":5,"column_end":61}},{"value":"/ ```nwidth``` and ```nheight``` are the new image's dimensions","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":619035,"byte_end":619100,"line_start":402,"line_end":402,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2902},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":619815,"byte_end":619824,"line_start":420,"line_end":420,"column_start":12,"column_end":21},"name":"thumbnail","qualname":"<DynamicImage>::thumbnail","value":"fn (&self, nwidth: u32, nheight: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Scale this image down to fit within a specific size.\n Returns a new image. The image's aspect ratio is preserved.\n The image is scaled to the maximum possible size that fits\n within the bounds specified by ```nwidth``` and ```nheight```.","sig":null,"attributes":[{"value":"/ Scale this image down to fit within a specific size.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":619340,"byte_end":619396,"line_start":412,"line_end":412,"column_start":5,"column_end":61}},{"value":"/ Returns a new image. The image's aspect ratio is preserved.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":619401,"byte_end":619464,"line_start":413,"line_end":413,"column_start":5,"column_end":68}},{"value":"/ The image is scaled to the maximum possible size that fits","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":619469,"byte_end":619531,"line_start":414,"line_end":414,"column_start":5,"column_end":67}},{"value":"/ within the bounds specified by ```nwidth``` and ```nheight```.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":619536,"byte_end":619602,"line_start":415,"line_end":415,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":619607,"byte_end":619610,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ This method uses a fast integer algorithm where each source","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":619615,"byte_end":619678,"line_start":417,"line_end":417,"column_start":5,"column_end":68}},{"value":"/ pixel contributes to exactly one target pixel.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":619683,"byte_end":619733,"line_start":418,"line_end":418,"column_start":5,"column_end":55}},{"value":"/ May give aliasing artifacts if new size is close to old size.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":619738,"byte_end":619803,"line_start":419,"line_end":419,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2903},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":620432,"byte_end":620447,"line_start":432,"line_end":432,"column_start":12,"column_end":27},"name":"thumbnail_exact","qualname":"<DynamicImage>::thumbnail_exact","value":"fn (&self, nwidth: u32, nheight: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Scale this image down to a specific size.\n Returns a new image. Does not preserve aspect ratio.\n ```nwidth``` and ```nheight``` are the new image's dimensions.\n This method uses a fast integer algorithm where each source\n pixel contributes to exactly one target pixel.\n May give aliasing artifacts if new size is close to old size.\n","sig":null,"attributes":[{"value":"/ Scale this image down to a specific size.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":620050,"byte_end":620095,"line_start":426,"line_end":426,"column_start":5,"column_end":50}},{"value":"/ Returns a new image. Does not preserve aspect ratio.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":620100,"byte_end":620156,"line_start":427,"line_end":427,"column_start":5,"column_end":61}},{"value":"/ ```nwidth``` and ```nheight``` are the new image's dimensions.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":620161,"byte_end":620227,"line_start":428,"line_end":428,"column_start":5,"column_end":71}},{"value":"/ This method uses a fast integer algorithm where each source","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":620232,"byte_end":620295,"line_start":429,"line_end":429,"column_start":5,"column_end":68}},{"value":"/ pixel contributes to exactly one target pixel.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":620300,"byte_end":620350,"line_start":430,"line_end":430,"column_start":5,"column_end":55}},{"value":"/ May give aliasing artifacts if new size is close to old size.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":620355,"byte_end":620420,"line_start":431,"line_end":431,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2904},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":620967,"byte_end":620981,"line_start":442,"line_end":442,"column_start":12,"column_end":26},"name":"resize_to_fill","qualname":"<DynamicImage>::resize_to_fill","value":"fn (&self, nwidth: u32, nheight: u32, filter: imageops::FilterType) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Resize this image using the specified filter algorithm.\n Returns a new image. The image's aspect ratio is preserved.\n The image is scaled to the maximum possible size that fits\n within the larger (relative to aspect ratio) of the bounds\n specified by ```nwidth``` and ```nheight```, then cropped to\n fit within the other bound.\n","sig":null,"attributes":[{"value":"/ Resize this image using the specified filter algorithm.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":620589,"byte_end":620648,"line_start":436,"line_end":436,"column_start":5,"column_end":64}},{"value":"/ Returns a new image. The image's aspect ratio is preserved.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":620653,"byte_end":620716,"line_start":437,"line_end":437,"column_start":5,"column_end":68}},{"value":"/ The image is scaled to the maximum possible size that fits","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":620721,"byte_end":620783,"line_start":438,"line_end":438,"column_start":5,"column_end":67}},{"value":"/ within the larger (relative to aspect ratio) of the bounds","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":620788,"byte_end":620850,"line_start":439,"line_end":439,"column_start":5,"column_end":67}},{"value":"/ specified by ```nwidth``` and ```nheight```, then cropped to","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":620855,"byte_end":620919,"line_start":440,"line_end":440,"column_start":5,"column_end":69}},{"value":"/ fit within the other bound.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":620924,"byte_end":620955,"line_start":441,"line_end":441,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2905},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":621801,"byte_end":621805,"line_start":465,"line_end":465,"column_start":12,"column_end":16},"name":"blur","qualname":"<DynamicImage>::blur","value":"fn (&self, sigma: f32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Performs a Gaussian blur on this image.\n ```sigma``` is a measure of how much to blur by.\n","sig":null,"attributes":[{"value":"/ Performs a Gaussian blur on this image.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":621689,"byte_end":621732,"line_start":463,"line_end":463,"column_start":5,"column_end":48}},{"value":"/ ```sigma``` is a measure of how much to blur by.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":621737,"byte_end":621789,"line_start":464,"line_end":464,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2906},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":622183,"byte_end":622192,"line_start":474,"line_end":474,"column_start":12,"column_end":21},"name":"unsharpen","qualname":"<DynamicImage>::unsharpen","value":"fn (&self, sigma: f32, threshold: i32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Performs an unsharpen mask on this image.\n ```sigma``` is the amount to blur the image by.\n ```threshold``` is a control of how much to sharpen.","sig":null,"attributes":[{"value":"/ Performs an unsharpen mask on this image.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":621917,"byte_end":621962,"line_start":469,"line_end":469,"column_start":5,"column_end":50}},{"value":"/ ```sigma``` is the amount to blur the image by.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":621967,"byte_end":622018,"line_start":470,"line_end":470,"column_start":5,"column_end":56}},{"value":"/ ```threshold``` is a control of how much to sharpen.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":622023,"byte_end":622079,"line_start":471,"line_end":471,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":622084,"byte_end":622087,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ See <https://en.wikipedia.org/wiki/Unsharp_masking#Digital_unsharp_masking>","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":622092,"byte_end":622171,"line_start":473,"line_end":473,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":2907},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":622401,"byte_end":622410,"line_start":479,"line_end":479,"column_start":12,"column_end":21},"name":"filter3x3","qualname":"<DynamicImage>::filter3x3","value":"fn (&self, kernel: &[f32]) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Filters this image with the specified 3x3 kernel.\n","sig":null,"attributes":[{"value":"/ Filters this image with the specified 3x3 kernel.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":622336,"byte_end":622389,"line_start":478,"line_end":478,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2908},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":622820,"byte_end":622835,"line_start":490,"line_end":490,"column_start":12,"column_end":27},"name":"adjust_contrast","qualname":"<DynamicImage>::adjust_contrast","value":"fn (&self, c: f32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Adjust the contrast of this image.\n ```contrast``` is the amount to adjust the contrast by.\n Negative values decrease the contrast and positive values increase the contrast.\n","sig":null,"attributes":[{"value":"/ Adjust the contrast of this image.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":622617,"byte_end":622655,"line_start":487,"line_end":487,"column_start":5,"column_end":43}},{"value":"/ ```contrast``` is the amount to adjust the contrast by.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":622660,"byte_end":622719,"line_start":488,"line_end":488,"column_start":5,"column_end":64}},{"value":"/ Negative values decrease the contrast and positive values increase the contrast.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":622724,"byte_end":622808,"line_start":489,"line_end":489,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":2909},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":623135,"byte_end":623143,"line_start":497,"line_end":497,"column_start":12,"column_end":20},"name":"brighten","qualname":"<DynamicImage>::brighten","value":"fn (&self, value: i32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Brighten the pixels of this image.\n ```value``` is the amount to brighten each pixel by.\n Negative values decrease the brightness and positive values increase it.\n","sig":null,"attributes":[{"value":"/ Brighten the pixels of this image.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":622943,"byte_end":622981,"line_start":494,"line_end":494,"column_start":5,"column_end":43}},{"value":"/ ```value``` is the amount to brighten each pixel by.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":622986,"byte_end":623042,"line_start":495,"line_end":495,"column_start":5,"column_end":61}},{"value":"/ Negative values decrease the brightness and positive values increase it.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":623047,"byte_end":623123,"line_start":496,"line_end":496,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":2910},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":623491,"byte_end":623500,"line_start":505,"line_end":505,"column_start":12,"column_end":21},"name":"huerotate","qualname":"<DynamicImage>::huerotate","value":"fn (&self, value: i32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Hue rotate the supplied image.\n `value` is the degrees to rotate each pixel by.\n 0 and 360 do nothing, the rest rotates by the given degree value.\n just like the css webkit filter hue-rotate(180)\n","sig":null,"attributes":[{"value":"/ Hue rotate the supplied image.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":623259,"byte_end":623293,"line_start":501,"line_end":501,"column_start":5,"column_end":39}},{"value":"/ `value` is the degrees to rotate each pixel by.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":623298,"byte_end":623349,"line_start":502,"line_end":502,"column_start":5,"column_end":56}},{"value":"/ 0 and 360 do nothing, the rest rotates by the given degree value.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":623354,"byte_end":623423,"line_start":503,"line_end":503,"column_start":5,"column_end":74}},{"value":"/ just like the css webkit filter hue-rotate(180)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":623428,"byte_end":623479,"line_start":504,"line_end":504,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2911},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":623659,"byte_end":623664,"line_start":510,"line_end":510,"column_start":12,"column_end":17},"name":"flipv","qualname":"<DynamicImage>::flipv","value":"fn (&self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Flip this image vertically\n","sig":null,"attributes":[{"value":"/ Flip this image vertically","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":623617,"byte_end":623647,"line_start":509,"line_end":509,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2912},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":623810,"byte_end":623815,"line_start":515,"line_end":515,"column_start":12,"column_end":17},"name":"fliph","qualname":"<DynamicImage>::fliph","value":"fn (&self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Flip this image horizontally\n","sig":null,"attributes":[{"value":"/ Flip this image horizontally","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":623766,"byte_end":623798,"line_start":514,"line_end":514,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2913},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":623974,"byte_end":623982,"line_start":520,"line_end":520,"column_start":12,"column_end":20},"name":"rotate90","qualname":"<DynamicImage>::rotate90","value":"fn (&self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Rotate this image 90 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate this image 90 degrees clockwise.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":623919,"byte_end":623962,"line_start":519,"line_end":519,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2914},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":624135,"byte_end":624144,"line_start":525,"line_end":525,"column_start":12,"column_end":21},"name":"rotate180","qualname":"<DynamicImage>::rotate180","value":"fn (&self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Rotate this image 180 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate this image 180 degrees clockwise.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":624079,"byte_end":624123,"line_start":524,"line_end":524,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2915},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":624298,"byte_end":624307,"line_start":530,"line_end":530,"column_start":12,"column_end":21},"name":"rotate270","qualname":"<DynamicImage>::rotate270","value":"fn (&self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Rotate this image 270 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate this image 270 degrees clockwise.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":624242,"byte_end":624286,"line_start":529,"line_end":529,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2916},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":624462,"byte_end":624470,"line_start":535,"line_end":535,"column_start":12,"column_end":20},"name":"write_to","qualname":"<DynamicImage>::write_to","value":"fn <W, F> (&self, w: &mut W, format: F) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encode this image and write it to ```w```\n","sig":null,"attributes":[{"value":"/ Encode this image and write it to ```w```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":624405,"byte_end":624450,"line_start":534,"line_end":534,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2919},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":627697,"byte_end":627701,"line_start":625,"line_end":625,"column_start":12,"column_end":16},"name":"save","qualname":"<DynamicImage>::save","value":"fn <Q> (&self, path: Q) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Saves the buffer to a file at the path specified.","sig":null,"attributes":[{"value":"/ Saves the buffer to a file at the path specified.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":627563,"byte_end":627616,"line_start":622,"line_end":622,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":627621,"byte_end":627624,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ The image format is derived from the file extension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":627629,"byte_end":627685,"line_start":624,"line_end":624,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2921},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":628072,"byte_end":628088,"line_start":639,"line_end":639,"column_start":12,"column_end":28},"name":"save_with_format","qualname":"<DynamicImage>::save_with_format","value":"fn <Q> (&self, path: Q, format: ImageFormat) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Saves the buffer to a file at the specified path in\n the specified format.","sig":null,"attributes":[{"value":"/ Saves the buffer to a file at the specified path in","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":627865,"byte_end":627920,"line_start":634,"line_end":634,"column_start":5,"column_end":60}},{"value":"/ the specified format.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":627925,"byte_end":627950,"line_start":635,"line_end":635,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":627955,"byte_end":627958,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ See [`save_buffer_with_format`](fn.save_buffer_with_format.html) for","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":627963,"byte_end":628035,"line_start":637,"line_end":637,"column_start":5,"column_end":77}},{"value":"/ supported types.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":628040,"byte_end":628060,"line_start":638,"line_end":638,"column_start":5,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2941},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":633851,"byte_end":633855,"line_start":796,"line_end":796,"column_start":8,"column_end":12},"name":"open","qualname":"::dynimage::open","value":"fn <P> (path: P) -> ImageResult<DynamicImage>","parent":null,"children":[],"decl_id":null,"docs":" Open the image located at the path specified.\n The image's format is determined from the path's file extension.","sig":null,"attributes":[{"value":"/ Open the image located at the path specified.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":633549,"byte_end":633598,"line_start":789,"line_end":789,"column_start":1,"column_end":50}},{"value":"/ The image's format is determined from the path's file extension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":633599,"byte_end":633667,"line_start":790,"line_end":790,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":633668,"byte_end":633671,"line_start":791,"line_end":791,"column_start":1,"column_end":4}},{"value":"/ Try [`io::Reader`] for more advanced uses, including guessing the format based on the file's","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":633672,"byte_end":633768,"line_start":792,"line_end":792,"column_start":1,"column_end":97}},{"value":"/ content before its path.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":633769,"byte_end":633797,"line_start":793,"line_end":793,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":633798,"byte_end":633801,"line_start":794,"line_end":794,"column_start":1,"column_end":4}},{"value":"/ [`io::Reader`]: io/struct.Reader.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":633802,"byte_end":633843,"line_start":795,"line_end":795,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":2943},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":634410,"byte_end":634426,"line_start":811,"line_end":811,"column_start":8,"column_end":24},"name":"image_dimensions","qualname":"::dynimage::image_dimensions","value":"fn <P> (path: P) -> ImageResult<(u32, u32)>","parent":null,"children":[],"decl_id":null,"docs":" Read the dimensions of the image located at the specified path.\n This is faster than fully loading the image and then getting its dimensions.","sig":null,"attributes":[{"value":"/ Read the dimensions of the image located at the specified path.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":634045,"byte_end":634112,"line_start":804,"line_end":804,"column_start":1,"column_end":68}},{"value":"/ This is faster than fully loading the image and then getting its dimensions.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":634113,"byte_end":634193,"line_start":805,"line_end":805,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":634194,"byte_end":634197,"line_start":806,"line_end":806,"column_start":1,"column_end":4}},{"value":"/ Try [`io::Reader`] for more advanced uses, including guessing the format based on the file's","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":634198,"byte_end":634294,"line_start":807,"line_end":807,"column_start":1,"column_end":97}},{"value":"/ content before its path or manually supplying the format.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":634295,"byte_end":634356,"line_start":808,"line_end":808,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":634357,"byte_end":634360,"line_start":809,"line_end":809,"column_start":1,"column_end":4}},{"value":"/ [`io::Reader`]: io/struct.Reader.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":634361,"byte_end":634402,"line_start":810,"line_end":810,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":2945},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":635001,"byte_end":635012,"line_start":826,"line_end":826,"column_start":8,"column_end":19},"name":"save_buffer","qualname":"::dynimage::save_buffer","value":"fn <P> (path: P, buf: &[u8], width: u32, height: u32, color: color::ColorType) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Saves the supplied buffer to a file at the path specified.","sig":null,"attributes":[{"value":"/ Saves the supplied buffer to a file at the path specified.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":634626,"byte_end":634688,"line_start":819,"line_end":819,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":634689,"byte_end":634692,"line_start":820,"line_end":820,"column_start":1,"column_end":4}},{"value":"/ The image format is derived from the file extension. The buffer is assumed to have","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":634693,"byte_end":634779,"line_start":821,"line_end":821,"column_start":1,"column_end":87}},{"value":"/ the correct format according to the specified color type.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":634780,"byte_end":634841,"line_start":822,"line_end":822,"column_start":1,"column_end":62}},{"value":"/ This will lead to corrupted files if the buffer contains malformed data. Currently only","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":634843,"byte_end":634934,"line_start":824,"line_end":824,"column_start":1,"column_end":92}},{"value":"/ jpeg, png, ico, pnm, bmp and tiff files are supported.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":634935,"byte_end":634993,"line_start":825,"line_end":825,"column_start":1,"column_end":59}}]},{"kind":"Function","id":{"krate":0,"index":2947},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":635665,"byte_end":635688,"line_start":848,"line_end":848,"column_start":8,"column_end":31},"name":"save_buffer_with_format","qualname":"::dynimage::save_buffer_with_format","value":"fn <P> (path: P, buf: &[u8], width: u32, height: u32, color: color::ColorType, format: ImageFormat) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Saves the supplied buffer to a file at the path specified\n in the specified format.","sig":null,"attributes":[{"value":"/ Saves the supplied buffer to a file at the path specified","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":635317,"byte_end":635378,"line_start":840,"line_end":840,"column_start":1,"column_end":62}},{"value":"/ in the specified format.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":635379,"byte_end":635407,"line_start":841,"line_end":841,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":635408,"byte_end":635411,"line_start":842,"line_end":842,"column_start":1,"column_end":4}},{"value":"/ The buffer is assumed to have the correct format according","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":635412,"byte_end":635474,"line_start":843,"line_end":843,"column_start":1,"column_end":63}},{"value":"/ to the specified color type.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":635475,"byte_end":635507,"line_start":844,"line_end":844,"column_start":1,"column_end":33}},{"value":"/ This will lead to corrupted files if the buffer contains","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":635508,"byte_end":635568,"line_start":845,"line_end":845,"column_start":1,"column_end":61}},{"value":"/ malformed data. Currently only jpeg, png, ico, bmp and","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":635569,"byte_end":635627,"line_start":846,"line_end":846,"column_start":1,"column_end":59}},{"value":"/ tiff files are supported.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":635628,"byte_end":635657,"line_start":847,"line_end":847,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":2949},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":636250,"byte_end":636266,"line_start":871,"line_end":871,"column_start":8,"column_end":24},"name":"load_from_memory","qualname":"::dynimage::load_from_memory","value":"fn (buffer: &[u8]) -> ImageResult<DynamicImage>","parent":null,"children":[],"decl_id":null,"docs":" Create a new image from a byte slice","sig":null,"attributes":[{"value":"/ Create a new image from a byte slice","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":636006,"byte_end":636046,"line_start":863,"line_end":863,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":636047,"byte_end":636050,"line_start":864,"line_end":864,"column_start":1,"column_end":4}},{"value":"/ Makes an educated guess about the image format.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":636051,"byte_end":636102,"line_start":865,"line_end":865,"column_start":1,"column_end":52}},{"value":"/ TGA is not supported by this function.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":636103,"byte_end":636145,"line_start":866,"line_end":866,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":636146,"byte_end":636149,"line_start":867,"line_end":867,"column_start":1,"column_end":4}},{"value":"/ Try [`io::Reader`] for more advanced uses.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":636150,"byte_end":636196,"line_start":868,"line_end":868,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":636197,"byte_end":636200,"line_start":869,"line_end":869,"column_start":1,"column_end":4}},{"value":"/ [`io::Reader`]: io/struct.Reader.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":636201,"byte_end":636242,"line_start":870,"line_end":870,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":2950},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":636748,"byte_end":636776,"line_start":886,"line_end":886,"column_start":8,"column_end":36},"name":"load_from_memory_with_format","qualname":"::dynimage::load_from_memory_with_format","value":"fn (buf: &[u8], format: ImageFormat) -> ImageResult<DynamicImage>","parent":null,"children":[],"decl_id":null,"docs":" Create a new image from a byte slice","sig":null,"attributes":[{"value":"/ Create a new image from a byte slice","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":636421,"byte_end":636461,"line_start":876,"line_end":876,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":636462,"byte_end":636465,"line_start":877,"line_end":877,"column_start":1,"column_end":4}},{"value":"/ This is just a simple wrapper that constructs an `std::io::Cursor` around the buffer and then","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":636466,"byte_end":636563,"line_start":878,"line_end":878,"column_start":1,"column_end":98}},{"value":"/ calls `load` with that reader.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":636564,"byte_end":636598,"line_start":879,"line_end":879,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":636599,"byte_end":636602,"line_start":880,"line_end":880,"column_start":1,"column_end":4}},{"value":"/ Try [`io::Reader`] for more advanced uses.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":636603,"byte_end":636649,"line_start":881,"line_end":881,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":636650,"byte_end":636653,"line_start":882,"line_end":882,"column_start":1,"column_end":4}},{"value":"/ [`load`]: fn.load.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":636654,"byte_end":636680,"line_start":883,"line_end":883,"column_start":1,"column_end":27}},{"value":"/ [`io::Reader`]: io/struct.Reader.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":636681,"byte_end":636722,"line_start":884,"line_end":884,"column_start":1,"column_end":42}},{"value":"inline(always)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":636723,"byte_end":636740,"line_start":885,"line_end":885,"column_start":1,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4327},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":642206,"byte_end":642217,"line_start":24,"line_end":24,"column_start":5,"column_end":16},"name":"FormatError","qualname":"::image::ImageError::FormatError","value":"ImageError::FormatError(String)","parent":{"krate":0,"index":4326},"children":[],"decl_id":null,"docs":" The Image is not formatted properly\n","sig":null,"attributes":[{"value":"/ The Image is not formatted properly","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":642162,"byte_end":642201,"line_start":23,"line_end":23,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4330},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":642297,"byte_end":642311,"line_start":27,"line_end":27,"column_start":5,"column_end":19},"name":"DimensionError","qualname":"::image::ImageError::DimensionError","value":"ImageError::DimensionError","parent":{"krate":0,"index":4326},"children":[],"decl_id":null,"docs":" The Image's dimensions are either too small or too large\n","sig":null,"attributes":[{"value":"/ The Image's dimensions are either too small or too large","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":642232,"byte_end":642292,"line_start":26,"line_end":26,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4332},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":642373,"byte_end":642389,"line_start":30,"line_end":30,"column_start":5,"column_end":21},"name":"UnsupportedError","qualname":"::image::ImageError::UnsupportedError","value":"ImageError::UnsupportedError(String)","parent":{"krate":0,"index":4326},"children":[],"decl_id":null,"docs":" The Decoder does not support this image format\n","sig":null,"attributes":[{"value":"/ The Decoder does not support this image format","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":642318,"byte_end":642368,"line_start":29,"line_end":29,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4335},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":642457,"byte_end":642473,"line_start":33,"line_end":33,"column_start":5,"column_end":21},"name":"UnsupportedColor","qualname":"::image::ImageError::UnsupportedColor","value":"ImageError::UnsupportedColor(ColorType)","parent":{"krate":0,"index":4326},"children":[],"decl_id":null,"docs":" The Decoder does not support this color type\n","sig":null,"attributes":[{"value":"/ The Decoder does not support this color type","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":642404,"byte_end":642452,"line_start":32,"line_end":32,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4338},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":642571,"byte_end":642584,"line_start":37,"line_end":37,"column_start":5,"column_end":18},"name":"NotEnoughData","qualname":"::image::ImageError::NotEnoughData","value":"ImageError::NotEnoughData","parent":{"krate":0,"index":4326},"children":[],"decl_id":null,"docs":" Not enough data was provided to the Decoder\n to decode the image\n","sig":null,"attributes":[{"value":"/ Not enough data was provided to the Decoder","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":642491,"byte_end":642538,"line_start":35,"line_end":35,"column_start":5,"column_end":52}},{"value":"/ to decode the image","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":642543,"byte_end":642566,"line_start":36,"line_end":36,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4340},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":642646,"byte_end":642653,"line_start":40,"line_end":40,"column_start":5,"column_end":12},"name":"IoError","qualname":"::image::ImageError::IoError","value":"ImageError::IoError(io::Error)","parent":{"krate":0,"index":4326},"children":[],"decl_id":null,"docs":" An I/O Error occurred while decoding the image\n","sig":null,"attributes":[{"value":"/ An I/O Error occurred while decoding the image","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":642591,"byte_end":642641,"line_start":39,"line_end":39,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4343},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":642717,"byte_end":642725,"line_start":43,"line_end":43,"column_start":5,"column_end":13},"name":"ImageEnd","qualname":"::image::ImageError::ImageEnd","value":"ImageError::ImageEnd","parent":{"krate":0,"index":4326},"children":[],"decl_id":null,"docs":" The end of the image has been reached\n","sig":null,"attributes":[{"value":"/ The end of the image has been reached","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":642671,"byte_end":642712,"line_start":42,"line_end":42,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4345},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":642799,"byte_end":642817,"line_start":46,"line_end":46,"column_start":5,"column_end":23},"name":"InsufficientMemory","qualname":"::image::ImageError::InsufficientMemory","value":"ImageError::InsufficientMemory","parent":{"krate":0,"index":4326},"children":[],"decl_id":null,"docs":" There is not enough memory to complete the given operation\n","sig":null,"attributes":[{"value":"/ There is not enough memory to complete the given operation","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":642732,"byte_end":642794,"line_start":45,"line_end":45,"column_start":5,"column_end":67}}]},{"kind":"Enum","id":{"krate":0,"index":4326},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":642145,"byte_end":642155,"line_start":22,"line_end":22,"column_start":10,"column_end":20},"name":"ImageError","qualname":"::image::ImageError","value":"ImageError::{FormatError, DimensionError, UnsupportedError, UnsupportedColor, NotEnoughData, IoError, ImageEnd, InsufficientMemory}","parent":null,"children":[{"krate":0,"index":4327},{"krate":0,"index":4330},{"krate":0,"index":4332},{"krate":0,"index":4335},{"krate":0,"index":4338},{"krate":0,"index":4340},{"krate":0,"index":4343},{"krate":0,"index":4345}],"decl_id":null,"docs":" An enumeration of Image errors\n","sig":null,"attributes":[{"value":"/ An enumeration of Image errors","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":642084,"byte_end":642118,"line_start":20,"line_end":20,"column_start":1,"column_end":35}}]},{"kind":"Type","id":{"krate":0,"index":2975},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":644430,"byte_end":644441,"line_start":98,"line_end":98,"column_start":10,"column_end":21},"name":"ImageResult","qualname":"::image::ImageResult","value":"Result<T, ImageError>","parent":null,"children":[],"decl_id":null,"docs":" Result of an image decoding/encoding process\n","sig":null,"attributes":[{"value":"/ Result of an image decoding/encoding process","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":644372,"byte_end":644420,"line_start":97,"line_end":97,"column_start":1,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4350},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":644677,"byte_end":644680,"line_start":105,"line_end":105,"column_start":5,"column_end":8},"name":"PNG","qualname":"::image::ImageFormat::PNG","value":"ImageFormat::PNG","parent":{"krate":0,"index":4349},"children":[],"decl_id":null,"docs":" An Image in PNG Format\n","sig":null,"attributes":[{"value":"/ An Image in PNG Format","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":644646,"byte_end":644672,"line_start":104,"line_end":104,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4352},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":644719,"byte_end":644723,"line_start":108,"line_end":108,"column_start":5,"column_end":9},"name":"JPEG","qualname":"::image::ImageFormat::JPEG","value":"ImageFormat::JPEG","parent":{"krate":0,"index":4349},"children":[],"decl_id":null,"docs":" An Image in JPEG Format\n","sig":null,"attributes":[{"value":"/ An Image in JPEG Format","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":644687,"byte_end":644714,"line_start":107,"line_end":107,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4354},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":644761,"byte_end":644764,"line_start":111,"line_end":111,"column_start":5,"column_end":8},"name":"GIF","qualname":"::image::ImageFormat::GIF","value":"ImageFormat::GIF","parent":{"krate":0,"index":4349},"children":[],"decl_id":null,"docs":" An Image in GIF Format\n","sig":null,"attributes":[{"value":"/ An Image in GIF Format","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":644730,"byte_end":644756,"line_start":110,"line_end":110,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4356},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":644803,"byte_end":644807,"line_start":114,"line_end":114,"column_start":5,"column_end":9},"name":"WEBP","qualname":"::image::ImageFormat::WEBP","value":"ImageFormat::WEBP","parent":{"krate":0,"index":4349},"children":[],"decl_id":null,"docs":" An Image in WEBP Format\n","sig":null,"attributes":[{"value":"/ An Image in WEBP Format","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":644771,"byte_end":644798,"line_start":113,"line_end":113,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4358},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":644853,"byte_end":644856,"line_start":117,"line_end":117,"column_start":5,"column_end":8},"name":"PNM","qualname":"::image::ImageFormat::PNM","value":"ImageFormat::PNM","parent":{"krate":0,"index":4349},"children":[],"decl_id":null,"docs":" An Image in general PNM Format\n","sig":null,"attributes":[{"value":"/ An Image in general PNM Format","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":644814,"byte_end":644848,"line_start":116,"line_end":116,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4360},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":644895,"byte_end":644899,"line_start":120,"line_end":120,"column_start":5,"column_end":9},"name":"TIFF","qualname":"::image::ImageFormat::TIFF","value":"ImageFormat::TIFF","parent":{"krate":0,"index":4349},"children":[],"decl_id":null,"docs":" An Image in TIFF Format\n","sig":null,"attributes":[{"value":"/ An Image in TIFF Format","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":644863,"byte_end":644890,"line_start":119,"line_end":119,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4362},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":644937,"byte_end":644940,"line_start":123,"line_end":123,"column_start":5,"column_end":8},"name":"TGA","qualname":"::image::ImageFormat::TGA","value":"ImageFormat::TGA","parent":{"krate":0,"index":4349},"children":[],"decl_id":null,"docs":" An Image in TGA Format\n","sig":null,"attributes":[{"value":"/ An Image in TGA Format","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":644906,"byte_end":644932,"line_start":122,"line_end":122,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4364},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":644978,"byte_end":644981,"line_start":126,"line_end":126,"column_start":5,"column_end":8},"name":"BMP","qualname":"::image::ImageFormat::BMP","value":"ImageFormat::BMP","parent":{"krate":0,"index":4349},"children":[],"decl_id":null,"docs":" An Image in BMP Format\n","sig":null,"attributes":[{"value":"/ An Image in BMP Format","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":644947,"byte_end":644973,"line_start":125,"line_end":125,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4366},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":645019,"byte_end":645022,"line_start":129,"line_end":129,"column_start":5,"column_end":8},"name":"ICO","qualname":"::image::ImageFormat::ICO","value":"ImageFormat::ICO","parent":{"krate":0,"index":4349},"children":[],"decl_id":null,"docs":" An Image in ICO Format\n","sig":null,"attributes":[{"value":"/ An Image in ICO Format","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":644988,"byte_end":645014,"line_start":128,"line_end":128,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4368},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":645069,"byte_end":645072,"line_start":132,"line_end":132,"column_start":5,"column_end":8},"name":"HDR","qualname":"::image::ImageFormat::HDR","value":"ImageFormat::HDR","parent":{"krate":0,"index":4349},"children":[],"decl_id":null,"docs":" An Image in Radiance HDR Format\n","sig":null,"attributes":[{"value":"/ An Image in Radiance HDR Format","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":645029,"byte_end":645064,"line_start":131,"line_end":131,"column_start":5,"column_end":40}}]},{"kind":"Enum","id":{"krate":0,"index":4349},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":644628,"byte_end":644639,"line_start":103,"line_end":103,"column_start":10,"column_end":21},"name":"ImageFormat","qualname":"::image::ImageFormat","value":"ImageFormat::{PNG, JPEG, GIF, WEBP, PNM, TIFF, TGA, BMP, ICO, HDR}","parent":null,"children":[{"krate":0,"index":4350},{"krate":0,"index":4352},{"krate":0,"index":4354},{"krate":0,"index":4356},{"krate":0,"index":4358},{"krate":0,"index":4360},{"krate":0,"index":4362},{"krate":0,"index":4364},{"krate":0,"index":4366},{"krate":0,"index":4368}],"decl_id":null,"docs":" An enumeration of supported image formats.\n Not all formats support both encoding and decoding.\n","sig":null,"attributes":[{"value":"/ An enumeration of supported image formats.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":644471,"byte_end":644517,"line_start":100,"line_end":100,"column_start":1,"column_end":47}},{"value":"/ Not all formats support both encoding and decoding.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":644518,"byte_end":644573,"line_start":101,"line_end":101,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2978},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":645179,"byte_end":645188,"line_start":137,"line_end":137,"column_start":12,"column_end":21},"name":"from_path","qualname":"<ImageFormat>::from_path","value":"fn <P> (path: P) -> ImageResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Return the image format specified by the path's file extension.\n","sig":null,"attributes":[{"value":"/ Return the image format specified by the path's file extension.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":645100,"byte_end":645167,"line_start":136,"line_end":136,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4382},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":645639,"byte_end":645642,"line_start":149,"line_end":149,"column_start":5,"column_end":8},"name":"PNG","qualname":"::image::ImageOutputFormat::PNG","value":"ImageOutputFormat::PNG","parent":{"krate":0,"index":4381},"children":[],"decl_id":null,"docs":" An Image in PNG Format\n","sig":null,"attributes":[{"value":"cfg(feature = \"png_codec\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":645574,"byte_end":645603,"line_start":147,"line_end":147,"column_start":5,"column_end":34}},{"value":"/ An Image in PNG Format","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":645608,"byte_end":645634,"line_start":148,"line_end":148,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4384},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":645733,"byte_end":645737,"line_start":153,"line_end":153,"column_start":5,"column_end":9},"name":"JPEG","qualname":"::image::ImageOutputFormat::JPEG","value":"ImageOutputFormat::JPEG(u8)","parent":{"krate":0,"index":4381},"children":[],"decl_id":null,"docs":" An Image in JPEG Format with specified quality\n","sig":null,"attributes":[{"value":"cfg(feature = \"jpeg\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":645649,"byte_end":645673,"line_start":151,"line_end":151,"column_start":5,"column_end":29}},{"value":"/ An Image in JPEG Format with specified quality","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":645678,"byte_end":645728,"line_start":152,"line_end":152,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4387},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":645819,"byte_end":645822,"line_start":157,"line_end":157,"column_start":5,"column_end":8},"name":"PNM","qualname":"::image::ImageOutputFormat::PNM","value":"ImageOutputFormat::PNM(PNMSubtype)","parent":{"krate":0,"index":4381},"children":[],"decl_id":null,"docs":" An Image in one of the PNM Formats\n","sig":null,"attributes":[{"value":"cfg(feature = \"pnm\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":645748,"byte_end":645771,"line_start":155,"line_end":155,"column_start":5,"column_end":28}},{"value":"/ An Image in one of the PNM Formats","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":645776,"byte_end":645814,"line_start":156,"line_end":156,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4390},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":645906,"byte_end":645909,"line_start":161,"line_end":161,"column_start":5,"column_end":8},"name":"GIF","qualname":"::image::ImageOutputFormat::GIF","value":"ImageOutputFormat::GIF","parent":{"krate":0,"index":4381},"children":[],"decl_id":null,"docs":" An Image in GIF Format\n","sig":null,"attributes":[{"value":"cfg(feature = \"gif_codec\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":645841,"byte_end":645870,"line_start":159,"line_end":159,"column_start":5,"column_end":34}},{"value":"/ An Image in GIF Format","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":645875,"byte_end":645901,"line_start":160,"line_end":160,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4392},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":645975,"byte_end":645978,"line_start":165,"line_end":165,"column_start":5,"column_end":8},"name":"ICO","qualname":"::image::ImageOutputFormat::ICO","value":"ImageOutputFormat::ICO","parent":{"krate":0,"index":4381},"children":[],"decl_id":null,"docs":" An Image in ICO Format\n","sig":null,"attributes":[{"value":"cfg(feature = \"ico\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":645916,"byte_end":645939,"line_start":163,"line_end":163,"column_start":5,"column_end":28}},{"value":"/ An Image in ICO Format","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":645944,"byte_end":645970,"line_start":164,"line_end":164,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4394},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":646044,"byte_end":646047,"line_start":169,"line_end":169,"column_start":5,"column_end":8},"name":"BMP","qualname":"::image::ImageOutputFormat::BMP","value":"ImageOutputFormat::BMP","parent":{"krate":0,"index":4381},"children":[],"decl_id":null,"docs":" An Image in BMP Format\n","sig":null,"attributes":[{"value":"cfg(feature = \"bmp\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":645985,"byte_end":646008,"line_start":167,"line_end":167,"column_start":5,"column_end":28}},{"value":"/ An Image in BMP Format","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":646013,"byte_end":646039,"line_start":168,"line_end":168,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4396},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":646299,"byte_end":646310,"line_start":174,"line_end":174,"column_start":5,"column_end":16},"name":"Unsupported","qualname":"::image::ImageOutputFormat::Unsupported","value":"ImageOutputFormat::Unsupported(String)","parent":{"krate":0,"index":4381},"children":[],"decl_id":null,"docs":" A value for signalling an error: An unsupported format was requested\n","sig":null,"attributes":[{"value":"/ A value for signalling an error: An unsupported format was requested","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":646054,"byte_end":646126,"line_start":171,"line_end":171,"column_start":5,"column_end":77}}]},{"kind":"Enum","id":{"krate":0,"index":4381},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":645550,"byte_end":645567,"line_start":146,"line_end":146,"column_start":10,"column_end":27},"name":"ImageOutputFormat","qualname":"::image::ImageOutputFormat","value":"ImageOutputFormat::{PNG, JPEG, PNM, GIF, ICO, BMP, Unsupported}","parent":null,"children":[{"krate":0,"index":4382},{"krate":0,"index":4384},{"krate":0,"index":4387},{"krate":0,"index":4390},{"krate":0,"index":4392},{"krate":0,"index":4394},{"krate":0,"index":4396}],"decl_id":null,"docs":" An enumeration of supported image formats for encoding.\n","sig":null,"attributes":[{"value":"/ An enumeration of supported image formats for encoding.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":645442,"byte_end":645501,"line_start":144,"line_end":144,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":4410},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":653630,"byte_end":653638,"line_start":355,"line_end":355,"column_start":12,"column_end":20},"name":"Progress","qualname":"::image::Progress","value":"Progress {  }","parent":null,"children":[{"krate":0,"index":4411},{"krate":0,"index":4412}],"decl_id":null,"docs":" Represents the progress of an image operation.\n","sig":null,"attributes":[{"value":"/ Represents the progress of an image operation.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":653523,"byte_end":653573,"line_start":353,"line_end":353,"column_start":1,"column_end":51}}]},{"kind":"Trait","id":{"krate":0,"index":2999},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":653730,"byte_end":653742,"line_start":361,"line_end":361,"column_start":11,"column_end":23},"name":"ImageDecoder","qualname":"::image::ImageDecoder","value":"ImageDecoder<'a>: Sized","parent":null,"children":[{"krate":0,"index":3001},{"krate":0,"index":3002},{"krate":0,"index":3003},{"krate":0,"index":3004},{"krate":0,"index":3005},{"krate":0,"index":3006},{"krate":0,"index":3007},{"krate":0,"index":3008},{"krate":0,"index":3010}],"decl_id":null,"docs":" The trait that all decoders implement\n","sig":null,"attributes":[{"value":"/ The trait that all decoders implement","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":653678,"byte_end":653719,"line_start":360,"line_end":360,"column_start":1,"column_end":42}}]},{"kind":"Type","id":{"krate":0,"index":3001},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":653819,"byte_end":653825,"line_start":363,"line_end":363,"column_start":10,"column_end":16},"name":"Reader","qualname":"::image::ImageDecoder::Reader","value":"type Reader: Read + 'a;","parent":{"krate":0,"index":2999},"children":[],"decl_id":null,"docs":" The type of reader produced by `into_reader`.\n","sig":null,"attributes":[{"value":"/ The type of reader produced by `into_reader`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":653760,"byte_end":653809,"line_start":362,"line_end":362,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3002},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":653915,"byte_end":653925,"line_start":366,"line_end":366,"column_start":8,"column_end":18},"name":"dimensions","qualname":"::image::ImageDecoder::dimensions","value":"fn (&self) -> (u64, u64)","parent":{"krate":0,"index":2999},"children":[],"decl_id":null,"docs":" Returns a tuple containing the width and height of the image\n","sig":null,"attributes":[{"value":"/ Returns a tuple containing the width and height of the image","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":653843,"byte_end":653907,"line_start":365,"line_end":365,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":3003},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":654023,"byte_end":654032,"line_start":369,"line_end":369,"column_start":8,"column_end":17},"name":"colortype","qualname":"::image::ImageDecoder::colortype","value":"fn (&self) -> ColorType","parent":{"krate":0,"index":2999},"children":[],"decl_id":null,"docs":" Returns the color type of the image e.g. RGB(8) (8bit RGB)\n","sig":null,"attributes":[{"value":"/ Returns the color type of the image e.g. RGB(8) (8bit RGB)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":653953,"byte_end":654015,"line_start":368,"line_end":368,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3004},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":654325,"byte_end":654336,"line_start":374,"line_end":374,"column_start":8,"column_end":19},"name":"into_reader","qualname":"::image::ImageDecoder::into_reader","value":"fn (self) -> ImageResult<Self::Reader>","parent":{"krate":0,"index":2999},"children":[],"decl_id":null,"docs":" Returns a reader that can be used to obtain the bytes of the image. For the best\n performance, always try to read at least `scanline_bytes` from the reader at a time. Reading\n fewer bytes will cause the reader to perform internal buffering.\n","sig":null,"attributes":[{"value":"/ Returns a reader that can be used to obtain the bytes of the image. For the best","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":654059,"byte_end":654143,"line_start":371,"line_end":371,"column_start":5,"column_end":89}},{"value":"/ performance, always try to read at least `scanline_bytes` from the reader at a time. Reading","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":654148,"byte_end":654244,"line_start":372,"line_end":372,"column_start":5,"column_end":101}},{"value":"/ fewer bytes will cause the reader to perform internal buffering.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":654249,"byte_end":654317,"line_start":373,"line_end":373,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3005},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":654508,"byte_end":654517,"line_start":378,"line_end":378,"column_start":8,"column_end":17},"name":"row_bytes","qualname":"::image::ImageDecoder::row_bytes","value":"fn (&self) -> u64","parent":{"krate":0,"index":2999},"children":[],"decl_id":null,"docs":" Returns the number of bytes in a single row of the image. All decoders will pad image rows\n to a byte boundary.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes in a single row of the image. All decoders will pad image rows","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":654378,"byte_end":654472,"line_start":376,"line_end":376,"column_start":5,"column_end":99}},{"value":"/ to a byte boundary.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":654477,"byte_end":654500,"line_start":377,"line_end":377,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3006},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":654695,"byte_end":654706,"line_start":383,"line_end":383,"column_start":8,"column_end":19},"name":"total_bytes","qualname":"::image::ImageDecoder::total_bytes","value":"fn (&self) -> u64","parent":{"krate":0,"index":2999},"children":[],"decl_id":null,"docs":" Returns the total number of bytes in the image.\n","sig":null,"attributes":[{"value":"/ Returns the total number of bytes in the image.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":654636,"byte_end":654687,"line_start":382,"line_end":382,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3007},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":654939,"byte_end":654953,"line_start":389,"line_end":389,"column_start":8,"column_end":22},"name":"scanline_bytes","qualname":"::image::ImageDecoder::scanline_bytes","value":"fn (&self) -> u64","parent":{"krate":0,"index":2999},"children":[],"decl_id":null,"docs":" Returns the minimum number of bytes that can be efficiently read from this decoder. This may\n be as few as 1 or as many as `total_bytes()`.\n","sig":null,"attributes":[{"value":"/ Returns the minimum number of bytes that can be efficiently read from this decoder. This may","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":654781,"byte_end":654877,"line_start":387,"line_end":387,"column_start":5,"column_end":101}},{"value":"/ be as few as 1 or as many as `total_bytes()`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":654882,"byte_end":654931,"line_start":388,"line_end":388,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3008},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":655055,"byte_end":655065,"line_start":394,"line_end":394,"column_start":8,"column_end":18},"name":"read_image","qualname":"::image::ImageDecoder::read_image","value":"fn (self) -> ImageResult<Vec<u8>>","parent":{"krate":0,"index":2999},"children":[],"decl_id":null,"docs":" Returns all the bytes in the image.\n","sig":null,"attributes":[{"value":"/ Returns all the bytes in the image.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":655008,"byte_end":655047,"line_start":393,"line_end":393,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":3010},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":655277,"byte_end":655301,"line_start":400,"line_end":400,"column_start":8,"column_end":32},"name":"read_image_with_progress","qualname":"::image::ImageDecoder::read_image_with_progress","value":"fn <F> (self, progress_callback: F) -> ImageResult<Vec<u8>>","parent":{"krate":0,"index":2999},"children":[],"decl_id":null,"docs":" Same as `read_image` but periodically calls the provided callback to give updates on loading\n progress.\n","sig":null,"attributes":[{"value":"/ Same as `read_image` but periodically calls the provided callback to give updates on loading","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":655155,"byte_end":655251,"line_start":398,"line_end":398,"column_start":5,"column_end":101}},{"value":"/ progress.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":655256,"byte_end":655269,"line_start":399,"line_end":399,"column_start":5,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":3012},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":656416,"byte_end":656431,"line_start":437,"line_end":437,"column_start":11,"column_end":26},"name":"ImageDecoderExt","qualname":"::image::ImageDecoderExt","value":"ImageDecoderExt<'a>: ImageDecoder<'a> + Sized","parent":null,"children":[{"krate":0,"index":3014},{"krate":0,"index":3016}],"decl_id":null,"docs":" ImageDecoderExt trait\n","sig":null,"attributes":[{"value":"/ ImageDecoderExt trait","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":656380,"byte_end":656405,"line_start":436,"line_end":436,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":3014},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":656520,"byte_end":656529,"line_start":439,"line_end":439,"column_start":8,"column_end":17},"name":"read_rect","qualname":"::image::ImageDecoderExt::read_rect","value":"fn (&mut self, x: u64, y: u64, width: u64, height: u64, buf: &mut [u8]) -> ImageResult<()>","parent":{"krate":0,"index":3012},"children":[],"decl_id":null,"docs":" Read a rectangular section of the image.\n","sig":null,"attributes":[{"value":"/ Read a rectangular section of the image.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":656468,"byte_end":656512,"line_start":438,"line_end":438,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3016},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":656840,"byte_end":656863,"line_start":451,"line_end":451,"column_start":8,"column_end":31},"name":"read_rect_with_progress","qualname":"::image::ImageDecoderExt::read_rect_with_progress","value":"fn <F> (&mut self, x: u64, y: u64, width: u64, height: u64, buf: &mut [u8], progress_callback: F) -> ImageResult<()>","parent":{"krate":0,"index":3012},"children":[],"decl_id":null,"docs":" Read a rectangular section of the image, periodically reporting progress.\n","sig":null,"attributes":[{"value":"/ Read a rectangular section of the image, periodically reporting progress.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":656755,"byte_end":656832,"line_start":450,"line_end":450,"column_start":5,"column_end":82}}]},{"kind":"Trait","id":{"krate":0,"index":3018},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":657094,"byte_end":657110,"line_start":463,"line_end":463,"column_start":11,"column_end":27},"name":"AnimationDecoder","qualname":"::image::AnimationDecoder","value":"AnimationDecoder<'a>","parent":null,"children":[{"krate":0,"index":3020}],"decl_id":null,"docs":" AnimationDecoder trait\n","sig":null,"attributes":[{"value":"/ AnimationDecoder trait","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":657057,"byte_end":657083,"line_start":462,"line_end":462,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":3020},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":657182,"byte_end":657193,"line_start":465,"line_end":465,"column_start":8,"column_end":19},"name":"into_frames","qualname":"::image::AnimationDecoder::into_frames","value":"fn (self) -> Frames<'a>","parent":{"krate":0,"index":3018},"children":[],"decl_id":null,"docs":" Consume the decoder producing a series of frames.\n","sig":null,"attributes":[{"value":"/ Consume the decoder producing a series of frames.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":657121,"byte_end":657174,"line_start":464,"line_end":464,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":3021},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":657258,"byte_end":657264,"line_start":469,"line_end":469,"column_start":12,"column_end":18},"name":"Pixels","qualname":"::image::Pixels","value":"Pixels {  }","parent":null,"children":[{"krate":0,"index":3024},{"krate":0,"index":3025},{"krate":0,"index":3026},{"krate":0,"index":3027},{"krate":0,"index":3028}],"decl_id":null,"docs":" Immutable pixel iterator\n","sig":null,"attributes":[{"value":"/ Immutable pixel iterator","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":657218,"byte_end":657246,"line_start":468,"line_end":468,"column_start":1,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":3034},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":657897,"byte_end":657913,"line_start":500,"line_end":500,"column_start":11,"column_end":27},"name":"GenericImageView","qualname":"::image::GenericImageView","value":"GenericImageView","parent":null,"children":[{"krate":0,"index":3035},{"krate":0,"index":3036},{"krate":0,"index":3037},{"krate":0,"index":3038},{"krate":0,"index":3039},{"krate":0,"index":3040},{"krate":0,"index":3041},{"krate":0,"index":3042},{"krate":0,"index":3043},{"krate":0,"index":3044},{"krate":0,"index":3045},{"krate":0,"index":3046}],"decl_id":null,"docs":" Trait to inspect an image.\n","sig":null,"attributes":[{"value":"/ Trait to inspect an image.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":657856,"byte_end":657886,"line_start":499,"line_end":499,"column_start":1,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":3035},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":657952,"byte_end":657957,"line_start":502,"line_end":502,"column_start":10,"column_end":15},"name":"Pixel","qualname":"::image::GenericImageView::Pixel","value":"type Pixel: Pixel;","parent":{"krate":0,"index":3034},"children":[],"decl_id":null,"docs":" The type of pixel.\n","sig":null,"attributes":[{"value":"/ The type of pixel.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":657920,"byte_end":657942,"line_start":501,"line_end":501,"column_start":5,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":3036},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":658191,"byte_end":658205,"line_start":507,"line_end":507,"column_start":10,"column_end":24},"name":"InnerImageView","qualname":"::image::GenericImageView::InnerImageView","value":"type InnerImageView: GenericImageView<Pixel = Self::Pixel>;","parent":{"krate":0,"index":3034},"children":[],"decl_id":null,"docs":" Underlying image type. This is mainly used by SubImages in order to\n always have a reference to the original image. This allows for less\n indirections and it eases the use of nested SubImages.\n","sig":null,"attributes":[{"value":"/ Underlying image type. This is mainly used by SubImages in order to","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":657971,"byte_end":658042,"line_start":504,"line_end":504,"column_start":5,"column_end":76}},{"value":"/ always have a reference to the original image. This allows for less","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":658047,"byte_end":658118,"line_start":505,"line_end":505,"column_start":5,"column_end":76}},{"value":"/ indirections and it eases the use of nested SubImages.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":658123,"byte_end":658181,"line_start":506,"line_end":506,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3037},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":658298,"byte_end":658308,"line_start":510,"line_end":510,"column_start":8,"column_end":18},"name":"dimensions","qualname":"::image::GenericImageView::dimensions","value":"fn (&self) -> (u32, u32)","parent":{"krate":0,"index":3034},"children":[],"decl_id":null,"docs":" The width and height of this image.\n","sig":null,"attributes":[{"value":"/ The width and height of this image.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":658251,"byte_end":658290,"line_start":509,"line_end":509,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":3038},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":658372,"byte_end":658377,"line_start":513,"line_end":513,"column_start":8,"column_end":13},"name":"width","qualname":"::image::GenericImageView::width","value":"fn (&self) -> u32","parent":{"krate":0,"index":3034},"children":[],"decl_id":null,"docs":" The width of this image.\n","sig":null,"attributes":[{"value":"/ The width of this image.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":658336,"byte_end":658364,"line_start":512,"line_end":512,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":3039},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":658492,"byte_end":658498,"line_start":519,"line_end":519,"column_start":8,"column_end":14},"name":"height","qualname":"::image::GenericImageView::height","value":"fn (&self) -> u32","parent":{"krate":0,"index":3034},"children":[],"decl_id":null,"docs":" The height of this image.\n","sig":null,"attributes":[{"value":"/ The height of this image.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":658455,"byte_end":658484,"line_start":518,"line_end":518,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":3040},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":658625,"byte_end":658631,"line_start":525,"line_end":525,"column_start":8,"column_end":14},"name":"bounds","qualname":"::image::GenericImageView::bounds","value":"fn (&self) -> (u32, u32, u32, u32)","parent":{"krate":0,"index":3034},"children":[],"decl_id":null,"docs":" The bounding rectangle of this image.\n","sig":null,"attributes":[{"value":"/ The bounding rectangle of this image.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":658576,"byte_end":658617,"line_start":524,"line_end":524,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":3041},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":658748,"byte_end":658757,"line_start":528,"line_end":528,"column_start":8,"column_end":17},"name":"in_bounds","qualname":"::image::GenericImageView::in_bounds","value":"fn (&self, x: u32, y: u32) -> bool","parent":{"krate":0,"index":3034},"children":[],"decl_id":null,"docs":" Returns true if this x, y coordinate is contained inside the image.\n","sig":null,"attributes":[{"value":"/ Returns true if this x, y coordinate is contained inside the image.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":658669,"byte_end":658740,"line_start":527,"line_end":527,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":3042},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":659080,"byte_end":659089,"line_start":540,"line_end":540,"column_start":8,"column_end":17},"name":"get_pixel","qualname":"::image::GenericImageView::get_pixel","value":"fn (&self, x: u32, y: u32) -> Self::Pixel","parent":{"krate":0,"index":3034},"children":[],"decl_id":null,"docs":" Returns the pixel located at (x, y)","sig":null,"attributes":[{"value":"/ Returns the pixel located at (x, y)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":658905,"byte_end":658944,"line_start":533,"line_end":533,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":658949,"byte_end":658952,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":658957,"byte_end":658969,"line_start":535,"line_end":535,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":658974,"byte_end":658977,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of bounds.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":658982,"byte_end":659022,"line_start":537,"line_end":537,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":659027,"byte_end":659030,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ TODO: change this signature to &P","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":659035,"byte_end":659072,"line_start":539,"line_end":539,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3043},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":659276,"byte_end":659292,"line_start":545,"line_end":545,"column_start":15,"column_end":31},"name":"unsafe_get_pixel","qualname":"::image::GenericImageView::unsafe_get_pixel","value":"fn (&self, x: u32, y: u32) -> Self::Pixel","parent":{"krate":0,"index":3034},"children":[],"decl_id":null,"docs":" Returns the pixel located at (x, y)","sig":null,"attributes":[{"value":"/ Returns the pixel located at (x, y)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":659134,"byte_end":659173,"line_start":542,"line_end":542,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":659178,"byte_end":659181,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ This function can be implemented in a way that ignores bounds checking.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":659186,"byte_end":659261,"line_start":544,"line_end":544,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":3044},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":659524,"byte_end":659530,"line_start":552,"line_end":552,"column_start":8,"column_end":14},"name":"pixels","qualname":"::image::GenericImageView::pixels","value":"fn (&self) -> Pixels<Self>","parent":{"krate":0,"index":3034},"children":[],"decl_id":null,"docs":" Returns an Iterator over the pixels of this image.\n The iterator yields the coordinates of each pixel\n along with their value\n","sig":null,"attributes":[{"value":"/ Returns an Iterator over the pixels of this image.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":659373,"byte_end":659427,"line_start":549,"line_end":549,"column_start":5,"column_end":59}},{"value":"/ The iterator yields the coordinates of each pixel","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":659432,"byte_end":659485,"line_start":550,"line_end":550,"column_start":5,"column_end":58}},{"value":"/ along with their value","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":659490,"byte_end":659516,"line_start":551,"line_end":551,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3045},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":659800,"byte_end":659805,"line_start":565,"line_end":565,"column_start":8,"column_end":13},"name":"inner","qualname":"::image::GenericImageView::inner","value":"fn (&self) -> &Self::InnerImageView","parent":{"krate":0,"index":3034},"children":[],"decl_id":null,"docs":" Returns a reference to the underlying image.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying image.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":659744,"byte_end":659792,"line_start":564,"line_end":564,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":3046},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":660002,"byte_end":660006,"line_start":569,"line_end":569,"column_start":8,"column_end":12},"name":"view","qualname":"::image::GenericImageView::view","value":"fn (&self, x: u32, y: u32, width: u32, height: u32) -> SubImage<&Self::InnerImageView>","parent":{"krate":0,"index":3034},"children":[],"decl_id":null,"docs":" Returns an subimage that is an immutable view into this image.\n You can use [`GenericImage::sub_image`] if you need a mutable view instead.\n","sig":null,"attributes":[{"value":"/ Returns an subimage that is an immutable view into this image.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":659844,"byte_end":659910,"line_start":567,"line_end":567,"column_start":5,"column_end":71}},{"value":"/ You can use [`GenericImage::sub_image`] if you need a mutable view instead.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":659915,"byte_end":659994,"line_start":568,"line_end":568,"column_start":5,"column_end":84}}]},{"kind":"Trait","id":{"krate":0,"index":3047},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":660205,"byte_end":660217,"line_start":575,"line_end":575,"column_start":11,"column_end":23},"name":"GenericImage","qualname":"::image::GenericImage","value":"GenericImage: GenericImageView","parent":null,"children":[{"krate":0,"index":3048},{"krate":0,"index":3049},{"krate":0,"index":3050},{"krate":0,"index":3051},{"krate":0,"index":3052},{"krate":0,"index":3053},{"krate":0,"index":3055},{"krate":0,"index":3057},{"krate":0,"index":3058}],"decl_id":null,"docs":" A trait for manipulating images.\n","sig":null,"attributes":[{"value":"/ A trait for manipulating images.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":660158,"byte_end":660194,"line_start":574,"line_end":574,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":3048},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":660462,"byte_end":660472,"line_start":579,"line_end":579,"column_start":10,"column_end":20},"name":"InnerImage","qualname":"::image::GenericImage::InnerImage","value":"type InnerImage: GenericImage<Pixel = Self::Pixel>;","parent":{"krate":0,"index":3047},"children":[],"decl_id":null,"docs":" Underlying image type. This is mainly used by SubImages in order to\n always have a reference to the original image. This allows for less\n indirections and it eases the use of nested SubImages.\n","sig":null,"attributes":[{"value":"/ Underlying image type. This is mainly used by SubImages in order to","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":660242,"byte_end":660313,"line_start":576,"line_end":576,"column_start":5,"column_end":76}},{"value":"/ always have a reference to the original image. This allows for less","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":660318,"byte_end":660389,"line_start":577,"line_end":577,"column_start":5,"column_end":76}},{"value":"/ indirections and it eases the use of nested SubImages.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":660394,"byte_end":660452,"line_start":578,"line_end":578,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3049},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":660662,"byte_end":660675,"line_start":586,"line_end":586,"column_start":8,"column_end":21},"name":"get_pixel_mut","qualname":"::image::GenericImage::get_pixel_mut","value":"fn (&mut self, x: u32, y: u32) -> &mut Self::Pixel","parent":{"krate":0,"index":3047},"children":[],"decl_id":null,"docs":" Gets a reference to the mutable pixel at location `(x, y)`","sig":null,"attributes":[{"value":"/ Gets a reference to the mutable pixel at location `(x, y)`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":660514,"byte_end":660576,"line_start":581,"line_end":581,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":660581,"byte_end":660584,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":660589,"byte_end":660601,"line_start":583,"line_end":583,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":660606,"byte_end":660609,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of bounds.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":660614,"byte_end":660654,"line_start":585,"line_end":585,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3050},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":660849,"byte_end":660858,"line_start":593,"line_end":593,"column_start":8,"column_end":17},"name":"put_pixel","qualname":"::image::GenericImage::put_pixel","value":"fn (&mut self, x: u32, y: u32, pixel: Self::Pixel) -> ()","parent":{"krate":0,"index":3047},"children":[],"decl_id":null,"docs":" Put a pixel at location (x, y)","sig":null,"attributes":[{"value":"/ Put a pixel at location (x, y)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":660729,"byte_end":660763,"line_start":588,"line_end":588,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":660768,"byte_end":660771,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":660776,"byte_end":660788,"line_start":590,"line_end":590,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":660793,"byte_end":660796,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of bounds.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":660801,"byte_end":660841,"line_start":592,"line_end":592,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3051},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":661050,"byte_end":661066,"line_start":598,"line_end":598,"column_start":15,"column_end":31},"name":"unsafe_put_pixel","qualname":"::image::GenericImage::unsafe_put_pixel","value":"fn (&mut self, x: u32, y: u32, pixel: Self::Pixel) -> ()","parent":{"krate":0,"index":3047},"children":[],"decl_id":null,"docs":" Puts a pixel at location (x, y)","sig":null,"attributes":[{"value":"/ Puts a pixel at location (x, y)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":660912,"byte_end":660947,"line_start":595,"line_end":595,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":660952,"byte_end":660955,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ This function can be implemented in a way that ignores bounds checking.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":660960,"byte_end":661035,"line_start":597,"line_end":597,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":3052},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":661333,"byte_end":661344,"line_start":605,"line_end":605,"column_start":8,"column_end":19},"name":"blend_pixel","qualname":"::image::GenericImage::blend_pixel","value":"fn (&mut self, x: u32, y: u32, pixel: Self::Pixel) -> ()","parent":{"krate":0,"index":3047},"children":[],"decl_id":null,"docs":" Put a pixel at location (x, y), taking into account alpha channels","sig":null,"attributes":[{"value":"/ Put a pixel at location (x, y), taking into account alpha channels","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":661164,"byte_end":661234,"line_start":602,"line_end":602,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":661239,"byte_end":661242,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ DEPRECATED: This method will be removed. Blend the pixel directly instead.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":661247,"byte_end":661325,"line_start":604,"line_end":604,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":3053},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":661823,"byte_end":661832,"line_start":617,"line_end":617,"column_start":8,"column_end":17},"name":"copy_from","qualname":"::image::GenericImage::copy_from","value":"fn <O> (&mut self, other: &O, x: u32, y: u32) -> bool","parent":{"krate":0,"index":3047},"children":[],"decl_id":null,"docs":" Copies all of the pixels from another image into this image.","sig":null,"attributes":[{"value":"/ Copies all of the pixels from another image into this image.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":661398,"byte_end":661462,"line_start":607,"line_end":607,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":661467,"byte_end":661470,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ The other image is copied with the top-left corner of the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":661475,"byte_end":661536,"line_start":609,"line_end":609,"column_start":5,"column_end":66}},{"value":"/ other image placed at (x, y).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":661541,"byte_end":661574,"line_start":610,"line_end":610,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":661579,"byte_end":661582,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ In order to copy only a piece of the other image, use [`GenericImageView::view`].","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":661587,"byte_end":661672,"line_start":612,"line_end":612,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":661677,"byte_end":661680,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":661685,"byte_end":661698,"line_start":614,"line_end":614,"column_start":5,"column_end":18}},{"value":"/ `true` if the copy was successful, `false` if the image could not","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":661703,"byte_end":661772,"line_start":615,"line_end":615,"column_start":5,"column_end":74}},{"value":"/ be copied due to size constraints.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":661777,"byte_end":661815,"line_start":616,"line_end":616,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3055},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":662748,"byte_end":662759,"line_start":643,"line_end":643,"column_start":8,"column_end":19},"name":"copy_within","qualname":"::image::GenericImage::copy_within","value":"fn (&mut self, source: Rect, x: u32, y: u32) -> bool","parent":{"krate":0,"index":3047},"children":[],"decl_id":null,"docs":" Copies all of the pixels from one part of this image to another part of this image.","sig":null,"attributes":[{"value":"/ Copies all of the pixels from one part of this image to another part of this image.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":662400,"byte_end":662487,"line_start":636,"line_end":636,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":662492,"byte_end":662495,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ The destination rectangle of the copy is specified with the top-left corner placed at (x, y).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":662500,"byte_end":662597,"line_start":638,"line_end":638,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":662602,"byte_end":662605,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":662610,"byte_end":662623,"line_start":640,"line_end":640,"column_start":5,"column_end":18}},{"value":"/ `true` if the copy was successful, `false` if the image could not","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":662628,"byte_end":662697,"line_start":641,"line_end":641,"column_start":5,"column_end":74}},{"value":"/ be copied due to size constraints.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":662702,"byte_end":662740,"line_start":642,"line_end":642,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3057},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":664417,"byte_end":664426,"line_start":679,"line_end":679,"column_start":8,"column_end":17},"name":"inner_mut","qualname":"::image::GenericImage::inner_mut","value":"fn (&mut self) -> &mut Self::InnerImage","parent":{"krate":0,"index":3047},"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying image.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying image.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":664353,"byte_end":664409,"line_start":678,"line_end":678,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3058},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":664621,"byte_end":664630,"line_start":683,"line_end":683,"column_start":8,"column_end":17},"name":"sub_image","qualname":"::image::GenericImage::sub_image","value":"fn (&mut self, x: u32, y: u32, width: u32, height: u32) -> SubImage<&mut Self::InnerImage>","parent":{"krate":0,"index":3047},"children":[],"decl_id":null,"docs":" Returns a mutable subimage that is a view into this image.\n If you want an immutable subimage instead, use [`GenericImageView::view`]\n","sig":null,"attributes":[{"value":"/ Returns a mutable subimage that is a view into this image.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":664469,"byte_end":664531,"line_start":681,"line_end":681,"column_start":5,"column_end":67}},{"value":"/ If you want an immutable subimage instead, use [`GenericImageView::view`]","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":664536,"byte_end":664613,"line_start":682,"line_end":682,"column_start":5,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":3059},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":665121,"byte_end":665129,"line_start":700,"line_end":700,"column_start":12,"column_end":20},"name":"SubImage","qualname":"::image::SubImage","value":"SubImage {  }","parent":null,"children":[{"krate":0,"index":3061},{"krate":0,"index":3062},{"krate":0,"index":3063},{"krate":0,"index":3064},{"krate":0,"index":3065}],"decl_id":null,"docs":" A View into another image","sig":null,"attributes":[{"value":"/ A View into another image","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":664837,"byte_end":664866,"line_start":694,"line_end":694,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":664867,"byte_end":664870,"line_start":695,"line_end":695,"column_start":1,"column_end":4}},{"value":"/ Instances of this struct can be created using:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":664871,"byte_end":664921,"line_start":696,"line_end":696,"column_start":1,"column_end":51}},{"value":"/   - [`GenericImage::sub_image`] to create a mutable view,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":664922,"byte_end":664983,"line_start":697,"line_end":697,"column_start":1,"column_end":62}},{"value":"/   - [`GenericImageView::view`] to create an immutable view,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":664984,"byte_end":665047,"line_start":698,"line_end":698,"column_start":1,"column_end":64}},{"value":"/   - [`SubImage::new`] to instantiate the struct directly.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":665048,"byte_end":665109,"line_start":699,"line_end":699,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3072},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":665517,"byte_end":665520,"line_start":716,"line_end":716,"column_start":12,"column_end":15},"name":"new","qualname":"<SubImage<I>>::new","value":"fn (image: I, x: u32, y: u32, width: u32, height: u32) -> SubImage<I>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new subimage\n","sig":null,"attributes":[{"value":"/ Construct a new subimage","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":665477,"byte_end":665505,"line_start":715,"line_end":715,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":3073},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":665809,"byte_end":665822,"line_start":727,"line_end":727,"column_start":12,"column_end":25},"name":"change_bounds","qualname":"<SubImage<I>>::change_bounds","value":"fn (&mut self, x: u32, y: u32, width: u32, height: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Change the coordinates of this subimage.\n","sig":null,"attributes":[{"value":"/ Change the coordinates of this subimage.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":665753,"byte_end":665797,"line_start":726,"line_end":726,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3074},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":666056,"byte_end":666064,"line_start":735,"line_end":735,"column_start":12,"column_end":20},"name":"to_image","qualname":"<SubImage<I>>::to_image","value":"fn (&self) -> ImageBuffer<DerefPixel<I>, Vec<DerefSubpixel<I>>>","parent":null,"children":[],"decl_id":null,"docs":" Convert this subimage to an ImageBuffer\n","sig":null,"attributes":[{"value":"/ Convert this subimage to an ImageBuffer","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":666001,"byte_end":666044,"line_start":734,"line_end":734,"column_start":5,"column_end":48}}]},{"kind":"Trait","id":{"krate":0,"index":3098},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/traits.rs","byte_start":678577,"byte_end":678586,"line_start":9,"line_end":9,"column_start":11,"column_end":20},"name":"Primitive","qualname":"::traits::Primitive","value":"Primitive: Copy + NumCast + Num + PartialOrd<Self> + Clone + Bounded","parent":null,"children":[],"decl_id":null,"docs":" Primitive trait from old stdlib\n","sig":null,"attributes":[{"value":"/ Primitive trait from old stdlib","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/traits.rs","byte_start":678531,"byte_end":678566,"line_start":8,"line_end":8,"column_start":1,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":3111},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/traits.rs","byte_start":679108,"byte_end":679119,"line_start":26,"line_end":26,"column_start":11,"column_end":22},"name":"Enlargeable","qualname":"::traits::Enlargeable","value":"Enlargeable: Sized + Bounded + NumCast","parent":null,"children":[{"krate":0,"index":3112},{"krate":0,"index":3113}],"decl_id":null,"docs":" An Enlargable::Larger value should be enough to calculate\n the sum (average) of a few hundred or thousand Enlargeable values.\n","sig":null,"attributes":[{"value":"/ An Enlargable::Larger value should be enough to calculate","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/traits.rs","byte_start":678965,"byte_end":679026,"line_start":24,"line_end":24,"column_start":1,"column_end":62}},{"value":"/ the sum (average) of a few hundred or thousand Enlargeable values.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/traits.rs","byte_start":679027,"byte_end":679097,"line_start":25,"line_end":25,"column_start":1,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":3112},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/traits.rs","byte_start":679158,"byte_end":679164,"line_start":27,"line_end":27,"column_start":10,"column_end":16},"name":"Larger","qualname":"::traits::Enlargeable::Larger","value":"type Larger: Primitive + AddAssign + 'static;","parent":{"krate":0,"index":3111},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3113},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/traits.rs","byte_start":679207,"byte_end":679217,"line_start":29,"line_end":29,"column_start":8,"column_end":18},"name":"clamp_from","qualname":"::traits::Enlargeable::clamp_from","value":"fn (n: Self::Larger) -> Self","parent":{"krate":0,"index":3111},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/math/nq.rs","byte_start":6028,"byte_end":6036,"line_start":73,"line_end":73,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":118},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/colorops.rs","byte_start":43721,"byte_end":43728,"line_start":194,"line_end":194,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/colorops.rs","byte_start":44172,"byte_end":44180,"line_start":215,"line_end":215,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":59114,"byte_end":59126,"line_start":363,"line_end":363,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":77882,"byte_end":77888,"line_start":67,"line_end":67,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":79254,"byte_end":79260,"line_start":114,"line_end":114,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":399},{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":80025,"byte_end":80031,"line_start":136,"line_end":136,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/free_functions.rs","byte_start":94488,"byte_end":94498,"line_start":296,"line_end":296,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":467}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":98483,"byte_end":98495,"line_start":108,"line_end":108,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":493},{"krate":0,"index":495},{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":506},{"krate":0,"index":507}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":111090,"byte_end":111093,"line_start":421,"line_end":421,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":511}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":111351,"byte_end":111362,"line_start":436,"line_end":436,"column_start":14,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":519},{"krate":0,"index":521},{"krate":0,"index":523},{"krate":0,"index":526},{"krate":0,"index":528},{"krate":0,"index":530},{"krate":0,"index":532},{"krate":0,"index":534},{"krate":0,"index":536},{"krate":0,"index":538},{"krate":0,"index":540},{"krate":0,"index":542},{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":552},{"krate":0,"index":553}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":133094,"byte_end":133098,"line_start":971,"line_end":971,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":560},{"krate":0,"index":561},{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":566}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":138664,"byte_end":138671,"line_start":1103,"line_end":1103,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":575},{"krate":0,"index":576},{"krate":0,"index":577},{"krate":0,"index":578}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":143047,"byte_end":143058,"line_start":1217,"line_end":1217,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":583},{"krate":0,"index":584}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":143667,"byte_end":143678,"line_start":1236,"line_end":1236,"column_start":43,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":588}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":144282,"byte_end":144286,"line_start":1254,"line_end":1254,"column_start":45,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":601}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":145533,"byte_end":145540,"line_start":1299,"line_end":1299,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":613}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":146807,"byte_end":146814,"line_start":1344,"line_end":1344,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":621}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":147709,"byte_end":147719,"line_start":1373,"line_end":1373,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":623}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":148111,"byte_end":148121,"line_start":1384,"line_end":1384,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":625}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/bmp/decoder.rs","byte_start":156758,"byte_end":156769,"line_start":96,"line_end":96,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":691},{"krate":0,"index":692}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/bmp/decoder.rs","byte_start":165273,"byte_end":165281,"line_start":360,"line_end":360,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":715},{"krate":0,"index":716}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/bmp/decoder.rs","byte_start":166739,"byte_end":166748,"line_start":406,"line_end":406,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":718}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/bmp/decoder.rs","byte_start":168024,"byte_end":168039,"line_start":461,"line_end":461,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":760},{"krate":0,"index":761}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/bmp/decoder.rs","byte_start":169895,"byte_end":169905,"line_start":513,"line_end":513,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":766},{"krate":0,"index":767},{"krate":0,"index":769},{"krate":0,"index":770},{"krate":0,"index":771},{"krate":0,"index":772},{"krate":0,"index":773},{"krate":0,"index":774},{"krate":0,"index":775},{"krate":0,"index":776},{"krate":0,"index":779},{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":783},{"krate":0,"index":785},{"krate":0,"index":788},{"krate":0,"index":790},{"krate":0,"index":793},{"krate":0,"index":795},{"krate":0,"index":796}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/bmp/decoder.rs","byte_start":200446,"byte_end":200455,"line_start":1287,"line_end":1287,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":804},{"krate":0,"index":805}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/bmp/decoder.rs","byte_start":200875,"byte_end":200885,"line_start":1301,"line_end":1301,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":809},{"krate":0,"index":810},{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":813}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/bmp/decoder.rs","byte_start":201469,"byte_end":201479,"line_start":1325,"line_end":1325,"column_start":55,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":817}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/bmp/encoder.rs","byte_start":203101,"byte_end":203111,"line_start":15,"line_end":15,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":837},{"krate":0,"index":838},{"krate":0,"index":840},{"krate":0,"index":841},{"krate":0,"index":842},{"krate":0,"index":843}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dxt.rs","byte_start":215614,"byte_end":215624,"line_start":31,"line_end":31,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":863},{"krate":0,"index":864},{"krate":0,"index":865}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dxt.rs","byte_start":216583,"byte_end":216593,"line_start":67,"line_end":67,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":875},{"krate":0,"index":876}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dxt.rs","byte_start":218241,"byte_end":218251,"line_start":113,"line_end":113,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":880},{"krate":0,"index":881},{"krate":0,"index":882},{"krate":0,"index":883},{"krate":0,"index":884},{"krate":0,"index":885}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dxt.rs","byte_start":219424,"byte_end":219434,"line_start":152,"line_end":152,"column_start":55,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":889}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dxt.rs","byte_start":220396,"byte_end":220405,"line_start":182,"line_end":182,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":899}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dxt.rs","byte_start":220665,"byte_end":220675,"line_start":194,"line_end":194,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":906},{"krate":0,"index":907}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/gif.rs","byte_start":244304,"byte_end":244311,"line_start":53,"line_end":53,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":993}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/gif.rs","byte_start":244727,"byte_end":244736,"line_start":67,"line_end":67,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1001},{"krate":0,"index":1002}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/gif.rs","byte_start":245149,"byte_end":245156,"line_start":81,"line_end":81,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1006},{"krate":0,"index":1007},{"krate":0,"index":1008},{"krate":0,"index":1009},{"krate":0,"index":1010}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/gif.rs","byte_start":246808,"byte_end":246824,"line_start":135,"line_end":135,"column_start":15,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1020}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/gif.rs","byte_start":247433,"byte_end":247449,"line_start":157,"line_end":157,"column_start":28,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1023},{"krate":0,"index":1024}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/gif.rs","byte_start":252351,"byte_end":252358,"line_start":285,"line_end":285,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1030}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/gif.rs","byte_start":252621,"byte_end":252628,"line_start":297,"line_end":297,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1037},{"krate":0,"index":1038},{"krate":0,"index":1041},{"krate":0,"index":1043},{"krate":0,"index":1045}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/gif.rs","byte_start":254855,"byte_end":254865,"line_start":359,"line_end":359,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1047}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":256059,"byte_end":256069,"line_start":24,"line_end":24,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1077},{"krate":0,"index":1078},{"krate":0,"index":1079}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":257479,"byte_end":257488,"line_start":70,"line_end":70,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1088},{"krate":0,"index":1089}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":257904,"byte_end":257914,"line_start":84,"line_end":84,"column_start":48,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1093},{"krate":0,"index":1094},{"krate":0,"index":1095},{"krate":0,"index":1096},{"krate":0,"index":1097}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":258526,"byte_end":258536,"line_start":109,"line_end":109,"column_start":58,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":1101}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":259835,"byte_end":259845,"line_start":168,"line_end":168,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1109},{"krate":0,"index":1110},{"krate":0,"index":1112}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":262127,"byte_end":262137,"line_start":233,"line_end":233,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1118},{"krate":0,"index":1119},{"krate":0,"index":1121},{"krate":0,"index":1122},{"krate":0,"index":1123},{"krate":0,"index":1128},{"krate":0,"index":1130}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":267914,"byte_end":267924,"line_start":388,"line_end":388,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1134},{"krate":0,"index":1135},{"krate":0,"index":1136}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":268824,"byte_end":268847,"line_start":416,"line_end":416,"column_start":18,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1148}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":269140,"byte_end":269163,"line_start":429,"line_end":429,"column_start":31,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1151},{"krate":0,"index":1152},{"krate":0,"index":1153}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":270870,"byte_end":270893,"line_start":478,"line_end":478,"column_start":40,"column_end":63},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":277638,"byte_end":277649,"line_start":666,"line_end":666,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1175},{"krate":0,"index":1176}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":284212,"byte_end":284218,"line_start":831,"line_end":831,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1189}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":284488,"byte_end":284494,"line_start":839,"line_end":839,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1193}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/encoder.rs","byte_start":288221,"byte_end":288231,"line_start":11,"line_end":11,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1222},{"krate":0,"index":1223}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/encoder.rs","byte_start":290788,"byte_end":290799,"line_start":88,"line_end":88,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1235}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/encoder.rs","byte_start":290925,"byte_end":290936,"line_start":94,"line_end":94,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1238},{"krate":0,"index":1239}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/encoder.rs","byte_start":291637,"byte_end":291657,"line_start":123,"line_end":123,"column_start":10,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1247}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/encoder.rs","byte_start":291916,"byte_end":291936,"line_start":133,"line_end":133,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1250},{"krate":0,"index":1251}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/ico/decoder.rs","byte_start":304540,"byte_end":304550,"line_start":42,"line_end":42,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1298}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/ico/decoder.rs","byte_start":306969,"byte_end":306977,"line_start":117,"line_end":117,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1306},{"krate":0,"index":1307},{"krate":0,"index":1308},{"krate":0,"index":1309},{"krate":0,"index":1311},{"krate":0,"index":1314}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/ico/decoder.rs","byte_start":308290,"byte_end":308299,"line_start":165,"line_end":165,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1323},{"krate":0,"index":1324}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/ico/decoder.rs","byte_start":308719,"byte_end":308729,"line_start":179,"line_end":179,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1328},{"krate":0,"index":1329},{"krate":0,"index":1330},{"krate":0,"index":1331},{"krate":0,"index":1332}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/ico/encoder.rs","byte_start":313540,"byte_end":313550,"line_start":20,"line_end":20,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1352},{"krate":0,"index":1353}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/jpeg/decoder.rs","byte_start":316742,"byte_end":316753,"line_start":16,"line_end":16,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1382}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/jpeg/decoder.rs","byte_start":317455,"byte_end":317465,"line_start":38,"line_end":38,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1390},{"krate":0,"index":1391}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/jpeg/decoder.rs","byte_start":317878,"byte_end":317889,"line_start":52,"line_end":52,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1395},{"krate":0,"index":1396},{"krate":0,"index":1397},{"krate":0,"index":1398},{"krate":0,"index":1399}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/jpeg/decoder.rs","byte_start":319328,"byte_end":319337,"line_start":106,"line_end":106,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1402}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/jpeg/decoder.rs","byte_start":319649,"byte_end":319659,"line_start":117,"line_end":117,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1405}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/jpeg/encoder.rs","byte_start":325711,"byte_end":325720,"line_start":166,"line_end":166,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1458},{"krate":0,"index":1459},{"krate":0,"index":1460},{"krate":0,"index":1461},{"krate":0,"index":1462},{"krate":0,"index":1463}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/jpeg/encoder.rs","byte_start":328747,"byte_end":328758,"line_start":289,"line_end":289,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1477},{"krate":0,"index":1478},{"krate":0,"index":1480},{"krate":0,"index":1481},{"krate":0,"index":1484}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/png.rs","byte_start":354383,"byte_end":354392,"line_start":27,"line_end":27,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1542}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/png.rs","byte_start":355120,"byte_end":355129,"line_start":51,"line_end":51,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1545},{"krate":0,"index":1546}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/png.rs","byte_start":356383,"byte_end":356393,"line_start":97,"line_end":97,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1553}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/png.rs","byte_start":356878,"byte_end":356888,"line_start":111,"line_end":111,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1557},{"krate":0,"index":1558},{"krate":0,"index":1559},{"krate":0,"index":1560},{"krate":0,"index":1561},{"krate":0,"index":1562}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/png.rs","byte_start":357712,"byte_end":357722,"line_start":145,"line_end":145,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1568},{"krate":0,"index":1569}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/png.rs","byte_start":359092,"byte_end":359101,"line_start":175,"line_end":175,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1573}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/png.rs","byte_start":360194,"byte_end":360204,"line_start":205,"line_end":205,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1579}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/autobreak.rs","byte_start":367311,"byte_end":367320,"line_start":15,"line_end":15,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1607},{"krate":0,"index":1608}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/autobreak.rs","byte_start":368581,"byte_end":368590,"line_start":58,"line_end":58,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1611},{"krate":0,"index":1612}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/autobreak.rs","byte_start":369216,"byte_end":369225,"line_start":82,"line_end":82,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1615}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/decoder.rs","byte_start":371616,"byte_end":371626,"line_start":52,"line_end":52,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1670},{"krate":0,"index":1671},{"krate":0,"index":1672},{"krate":0,"index":1673},{"krate":0,"index":1674},{"krate":0,"index":1675}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/decoder.rs","byte_start":384820,"byte_end":384829,"line_start":409,"line_end":409,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/decoder.rs","byte_start":384958,"byte_end":384967,"line_start":413,"line_end":413,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1707},{"krate":0,"index":1708}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/decoder.rs","byte_start":385380,"byte_end":385390,"line_start":427,"line_end":427,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1712},{"krate":0,"index":1713},{"krate":0,"index":1714},{"krate":0,"index":1715},{"krate":0,"index":1716}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/decoder.rs","byte_start":385852,"byte_end":385862,"line_start":447,"line_end":447,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1719},{"krate":0,"index":1720},{"krate":0,"index":1723},{"krate":0,"index":1725}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/decoder.rs","byte_start":387530,"byte_end":387539,"line_start":489,"line_end":489,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1727}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/decoder.rs","byte_start":388926,"byte_end":388928,"line_start":532,"line_end":532,"column_start":17,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1738},{"krate":0,"index":1739},{"krate":0,"index":1740}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/decoder.rs","byte_start":389628,"byte_end":389631,"line_start":561,"line_end":561,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1743},{"krate":0,"index":1744},{"krate":0,"index":1745}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/decoder.rs","byte_start":390890,"byte_end":390896,"line_start":600,"line_end":600,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1747},{"krate":0,"index":1748},{"krate":0,"index":1750}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/decoder.rs","byte_start":392400,"byte_end":392405,"line_start":650,"line_end":650,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1753},{"krate":0,"index":1754},{"krate":0,"index":1756}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/decoder.rs","byte_start":393235,"byte_end":393247,"line_start":680,"line_end":680,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1758}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/decoder.rs","byte_start":393372,"byte_end":393385,"line_start":686,"line_end":686,"column_start":31,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1760}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/decoder.rs","byte_start":393765,"byte_end":393777,"line_start":698,"line_end":698,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1762}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/decoder.rs","byte_start":394153,"byte_end":394168,"line_start":710,"line_end":710,"column_start":31,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1764}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/encoder.rs","byte_start":408911,"byte_end":408921,"line_start":76,"line_end":76,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1834},{"krate":0,"index":1835},{"krate":0,"index":1836},{"krate":0,"index":1837},{"krate":0,"index":1838},{"krate":0,"index":1841},{"krate":0,"index":1842},{"krate":0,"index":1843}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/encoder.rs","byte_start":416196,"byte_end":416214,"line_start":272,"line_end":272,"column_start":10,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1846}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/encoder.rs","byte_start":417347,"byte_end":417362,"line_start":307,"line_end":307,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1851}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/encoder.rs","byte_start":417850,"byte_end":417867,"line_start":324,"line_end":324,"column_start":10,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1854}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/encoder.rs","byte_start":421371,"byte_end":421389,"line_start":415,"line_end":415,"column_start":10,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1857}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/encoder.rs","byte_start":423520,"byte_end":423533,"line_start":474,"line_end":474,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1860},{"krate":0,"index":1861}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/encoder.rs","byte_start":423843,"byte_end":423855,"line_start":487,"line_end":487,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1868},{"krate":0,"index":1870}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/encoder.rs","byte_start":425272,"byte_end":425283,"line_start":532,"line_end":532,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1874},{"krate":0,"index":1875},{"krate":0,"index":1878}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/encoder.rs","byte_start":426994,"byte_end":427005,"line_start":586,"line_end":586,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1881}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/encoder.rs","byte_start":427124,"byte_end":427135,"line_start":592,"line_end":592,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1884}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/encoder.rs","byte_start":427236,"byte_end":427249,"line_start":598,"line_end":598,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1887}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":432395,"byte_end":432405,"line_start":136,"line_end":136,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1908},{"krate":0,"index":1910}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":433375,"byte_end":433384,"line_start":161,"line_end":161,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1912},{"krate":0,"index":1913},{"krate":0,"index":1914},{"krate":0,"index":1915},{"krate":0,"index":1916},{"krate":0,"index":1917},{"krate":0,"index":1918},{"krate":0,"index":1919},{"krate":0,"index":1920}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":439564,"byte_end":439573,"line_start":314,"line_end":314,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1922}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":439766,"byte_end":439775,"line_start":323,"line_end":323,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1924}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":439969,"byte_end":439978,"line_start":332,"line_end":332,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1926}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":440173,"byte_end":440182,"line_start":341,"line_end":341,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1928}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/tga/decoder.rs","byte_start":441086,"byte_end":441095,"line_start":21,"line_end":21,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1970},{"krate":0,"index":1971},{"krate":0,"index":1972},{"krate":0,"index":1973}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/tga/decoder.rs","byte_start":442940,"byte_end":442946,"line_start":84,"line_end":84,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1975},{"krate":0,"index":1976}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/tga/decoder.rs","byte_start":444215,"byte_end":444223,"line_start":129,"line_end":129,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1982},{"krate":0,"index":1983}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/tga/decoder.rs","byte_start":445340,"byte_end":445350,"line_start":175,"line_end":175,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1999},{"krate":0,"index":2000},{"krate":0,"index":2001},{"krate":0,"index":2002},{"krate":0,"index":2003},{"krate":0,"index":2004},{"krate":0,"index":2005},{"krate":0,"index":2007},{"krate":0,"index":2008},{"krate":0,"index":2009},{"krate":0,"index":2010},{"krate":0,"index":2011},{"krate":0,"index":2012},{"krate":0,"index":2013},{"krate":0,"index":2014}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/tga/decoder.rs","byte_start":456647,"byte_end":456657,"line_start":492,"line_end":492,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":2018},{"krate":0,"index":2019},{"krate":0,"index":2020},{"krate":0,"index":2021},{"krate":0,"index":2022},{"krate":0,"index":2023}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/tga/decoder.rs","byte_start":457542,"byte_end":457551,"line_start":530,"line_end":530,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2030}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/tiff.rs","byte_start":458410,"byte_end":458421,"line_start":28,"line_end":28,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2055}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/tiff.rs","byte_start":458844,"byte_end":458854,"line_start":45,"line_end":45,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2057}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/tiff.rs","byte_start":459323,"byte_end":459332,"line_start":56,"line_end":56,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2059}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/tiff.rs","byte_start":459946,"byte_end":459956,"line_start":71,"line_end":71,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2067},{"krate":0,"index":2068}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/tiff.rs","byte_start":460376,"byte_end":460387,"line_start":85,"line_end":85,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2072},{"krate":0,"index":2073},{"krate":0,"index":2074},{"krate":0,"index":2075},{"krate":0,"index":2076}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/tiff.rs","byte_start":461086,"byte_end":461097,"line_start":113,"line_end":113,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2082},{"krate":0,"index":2083}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/webp/decoder.rs","byte_start":462668,"byte_end":462679,"line_start":24,"line_end":24,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2110},{"krate":0,"index":2111},{"krate":0,"index":2112},{"krate":0,"index":2113},{"krate":0,"index":2114}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/webp/decoder.rs","byte_start":464857,"byte_end":464867,"line_start":104,"line_end":104,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2122},{"krate":0,"index":2123}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/webp/decoder.rs","byte_start":465280,"byte_end":465291,"line_start":118,"line_end":118,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2127},{"krate":0,"index":2128},{"krate":0,"index":2129},{"krate":0,"index":2130},{"krate":0,"index":2131}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/webp/vp8.rs","byte_start":494059,"byte_end":494069,"line_start":674,"line_end":674,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2221},{"krate":0,"index":2222},{"krate":0,"index":2223},{"krate":0,"index":2224},{"krate":0,"index":2225},{"krate":0,"index":2226},{"krate":0,"index":2227}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/webp/vp8.rs","byte_start":498471,"byte_end":498481,"line_start":870,"line_end":870,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2253},{"krate":0,"index":2256},{"krate":0,"index":2257},{"krate":0,"index":2258},{"krate":0,"index":2261},{"krate":0,"index":2262},{"krate":0,"index":2263},{"krate":0,"index":2265},{"krate":0,"index":2269},{"krate":0,"index":2270},{"krate":0,"index":2271},{"krate":0,"index":2275}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/webp/vp8.rs","byte_start":519474,"byte_end":519482,"line_start":1521,"line_end":1521,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2278},{"krate":0,"index":2279}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/webp/vp8.rs","byte_start":520099,"byte_end":520107,"line_start":1544,"line_end":1544,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2281}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/webp/vp8.rs","byte_start":520172,"byte_end":520182,"line_start":1550,"line_end":1550,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2283}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/webp/vp8.rs","byte_start":520471,"byte_end":520481,"line_start":1562,"line_end":1562,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2285}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/webp/vp8.rs","byte_start":520548,"byte_end":520557,"line_start":1568,"line_end":1568,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2287}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/webp/vp8.rs","byte_start":521094,"byte_end":521103,"line_start":1586,"line_end":1586,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2289}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/animation.rs","byte_start":535773,"byte_end":535779,"line_start":13,"line_end":13,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2326},{"krate":0,"index":2327}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/animation.rs","byte_start":536369,"byte_end":536375,"line_start":29,"line_end":29,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2330},{"krate":0,"index":2331}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/animation.rs","byte_start":536731,"byte_end":536736,"line_start":48,"line_end":48,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2333},{"krate":0,"index":2334},{"krate":0,"index":2335},{"krate":0,"index":2336},{"krate":0,"index":2337},{"krate":0,"index":2338},{"krate":0,"index":2339}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":543593,"byte_end":543599,"line_start":179,"line_end":179,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2425},{"krate":0,"index":2426}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":543843,"byte_end":543849,"line_start":191,"line_end":191,"column_start":47,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2431}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":543998,"byte_end":544004,"line_start":200,"line_end":200,"column_start":49,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2435}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":544374,"byte_end":544383,"line_start":218,"line_end":218,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2444},{"krate":0,"index":2445}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":544639,"byte_end":544648,"line_start":230,"line_end":230,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2450}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":544797,"byte_end":544806,"line_start":239,"line_end":239,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2454}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":545210,"byte_end":545214,"line_start":259,"line_end":259,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2463},{"krate":0,"index":2464}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":545537,"byte_end":545541,"line_start":273,"line_end":273,"column_start":47,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2469}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":545690,"byte_end":545694,"line_start":282,"line_end":282,"column_start":49,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2473}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":546149,"byte_end":546156,"line_start":302,"line_end":302,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2482},{"krate":0,"index":2483}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":546492,"byte_end":546499,"line_start":316,"line_end":316,"column_start":47,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2488}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":546648,"byte_end":546655,"line_start":325,"line_end":325,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2492}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":547151,"byte_end":547166,"line_start":348,"line_end":348,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2504},{"krate":0,"index":2505}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":547569,"byte_end":547584,"line_start":366,"line_end":366,"column_start":47,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":2510}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":547896,"byte_end":547909,"line_start":385,"line_end":385,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2520},{"krate":0,"index":2521}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":548447,"byte_end":548460,"line_start":409,"line_end":409,"column_start":47,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2526}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":548796,"byte_end":548814,"line_start":429,"line_end":429,"column_start":38,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2537},{"krate":0,"index":2538}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":549225,"byte_end":549243,"line_start":447,"line_end":447,"column_start":47,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":2543}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":549561,"byte_end":549577,"line_start":466,"line_end":466,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2553},{"krate":0,"index":2554}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":550124,"byte_end":550140,"line_start":490,"line_end":490,"column_start":47,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2559}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":550642,"byte_end":550653,"line_start":512,"line_end":512,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2563},{"krate":0,"index":2564},{"krate":0,"index":2565},{"krate":0,"index":2566},{"krate":0,"index":2567},{"krate":0,"index":2568},{"krate":0,"index":2569},{"krate":0,"index":2570},{"krate":0,"index":2571},{"krate":0,"index":2572},{"krate":0,"index":2573},{"krate":0,"index":2575},{"krate":0,"index":2578},{"krate":0,"index":2579},{"krate":0,"index":2580},{"krate":0,"index":2581},{"krate":0,"index":2582}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":556294,"byte_end":556305,"line_start":679,"line_end":679,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2586},{"krate":0,"index":2587},{"krate":0,"index":2588},{"krate":0,"index":2589},{"krate":0,"index":2590},{"krate":0,"index":2591}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":558475,"byte_end":558486,"line_start":748,"line_end":748,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2595}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":559096,"byte_end":559107,"line_start":772,"line_end":772,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2600}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":559808,"byte_end":559819,"line_start":798,"line_end":798,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2605},{"krate":0,"index":2606}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":560083,"byte_end":560094,"line_start":811,"line_end":811,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2610}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":560360,"byte_end":560371,"line_start":822,"line_end":822,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2614},{"krate":0,"index":2615}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":560642,"byte_end":560653,"line_start":835,"line_end":835,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2619}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":560914,"byte_end":560925,"line_start":846,"line_end":846,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2623}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":561284,"byte_end":561295,"line_start":861,"line_end":861,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2627},{"krate":0,"index":2628},{"krate":0,"index":2629},{"krate":0,"index":2630},{"krate":0,"index":2631},{"krate":0,"index":2632},{"krate":0,"index":2633}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":562119,"byte_end":562130,"line_start":894,"line_end":894,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2637},{"krate":0,"index":2638},{"krate":0,"index":2639},{"krate":0,"index":2640},{"krate":0,"index":2641},{"krate":0,"index":2642},{"krate":0,"index":2643}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":565715,"byte_end":565726,"line_start":986,"line_end":986,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2648},{"krate":0,"index":2649},{"krate":0,"index":2650},{"krate":0,"index":2652},{"krate":0,"index":2653}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":568160,"byte_end":568169,"line_start":1064,"line_end":1064,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2658}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":569567,"byte_end":569578,"line_start":1102,"line_end":1102,"column_start":67,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":2666}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":577838,"byte_end":577847,"line_start":34,"line_end":34,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2684},{"krate":0,"index":2685}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":583887,"byte_end":583888,"line_start":247,"line_end":247,"column_start":32,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2694}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":584044,"byte_end":584048,"line_start":255,"line_end":255,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2697}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":584427,"byte_end":584431,"line_start":265,"line_end":265,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2700}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":584813,"byte_end":584817,"line_start":275,"line_end":275,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2703}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":585195,"byte_end":585199,"line_start":286,"line_end":286,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2706}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":585579,"byte_end":585583,"line_start":297,"line_end":297,"column_start":54,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2709}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":585778,"byte_end":585783,"line_start":305,"line_end":305,"column_start":53,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2712}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":586200,"byte_end":586205,"line_start":316,"line_end":316,"column_start":53,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2715}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":586621,"byte_end":586626,"line_start":327,"line_end":327,"column_start":52,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2718}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":587044,"byte_end":587049,"line_start":338,"line_end":338,"column_start":52,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2721}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":587468,"byte_end":587473,"line_start":349,"line_end":349,"column_start":53,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2724}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":587732,"byte_end":587736,"line_start":359,"line_end":359,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2727}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":588037,"byte_end":588041,"line_start":370,"line_end":370,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2730}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":588343,"byte_end":588347,"line_start":381,"line_end":381,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2733}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":588649,"byte_end":588653,"line_start":393,"line_end":393,"column_start":54,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2736}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":588956,"byte_end":588960,"line_start":406,"line_end":406,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2739}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":589285,"byte_end":589289,"line_start":420,"line_end":420,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2742}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":589591,"byte_end":589595,"line_start":432,"line_end":432,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2745}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":589898,"byte_end":589902,"line_start":444,"line_end":444,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2748}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":590203,"byte_end":590207,"line_start":455,"line_end":455,"column_start":54,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2751}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":590508,"byte_end":590512,"line_start":466,"line_end":466,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2754}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":590838,"byte_end":590841,"line_start":481,"line_end":481,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2757}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":591111,"byte_end":591114,"line_start":492,"line_end":492,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2760}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":591382,"byte_end":591385,"line_start":502,"line_end":502,"column_start":52,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2763}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":591650,"byte_end":591653,"line_start":512,"line_end":512,"column_start":54,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2766}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":591917,"byte_end":591920,"line_start":522,"line_end":522,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2769}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":592206,"byte_end":592209,"line_start":534,"line_end":534,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2772}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":592477,"byte_end":592480,"line_start":544,"line_end":544,"column_start":52,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2775}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":592745,"byte_end":592748,"line_start":555,"line_end":555,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2778}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":593018,"byte_end":593021,"line_start":565,"line_end":565,"column_start":54,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2781}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":593285,"byte_end":593288,"line_start":575,"line_end":575,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2784}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":593664,"byte_end":593669,"line_start":592,"line_end":592,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2789}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":594674,"byte_end":594678,"line_start":625,"line_end":625,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2792}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":594788,"byte_end":594792,"line_start":631,"line_end":631,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2795}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":597000,"byte_end":597004,"line_start":689,"line_end":689,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2798}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":599210,"byte_end":599213,"line_start":745,"line_end":745,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2801}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":599322,"byte_end":599325,"line_start":751,"line_end":751,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2804}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":599544,"byte_end":599549,"line_start":764,"line_end":764,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2809}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":599722,"byte_end":599726,"line_start":773,"line_end":773,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2812}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":599914,"byte_end":599918,"line_start":784,"line_end":784,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2815}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":600131,"byte_end":600135,"line_start":795,"line_end":795,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2818}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":600348,"byte_end":600351,"line_start":806,"line_end":806,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2821}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":600613,"byte_end":600616,"line_start":820,"line_end":820,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2824}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":609147,"byte_end":609159,"line_start":101,"line_end":101,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2861},{"krate":0,"index":2862},{"krate":0,"index":2863},{"krate":0,"index":2864},{"krate":0,"index":2865},{"krate":0,"index":2866},{"krate":0,"index":2867},{"krate":0,"index":2870},{"krate":0,"index":2871},{"krate":0,"index":2872},{"krate":0,"index":2873},{"krate":0,"index":2874},{"krate":0,"index":2875},{"krate":0,"index":2876},{"krate":0,"index":2877},{"krate":0,"index":2878},{"krate":0,"index":2879},{"krate":0,"index":2880},{"krate":0,"index":2881},{"krate":0,"index":2882},{"krate":0,"index":2883},{"krate":0,"index":2884},{"krate":0,"index":2885},{"krate":0,"index":2886},{"krate":0,"index":2887},{"krate":0,"index":2888},{"krate":0,"index":2889},{"krate":0,"index":2890},{"krate":0,"index":2891},{"krate":0,"index":2892},{"krate":0,"index":2893},{"krate":0,"index":2894},{"krate":0,"index":2895},{"krate":0,"index":2896},{"krate":0,"index":2897},{"krate":0,"index":2898},{"krate":0,"index":2899},{"krate":0,"index":2900},{"krate":0,"index":2901},{"krate":0,"index":2902},{"krate":0,"index":2903},{"krate":0,"index":2904},{"krate":0,"index":2905},{"krate":0,"index":2906},{"krate":0,"index":2907},{"krate":0,"index":2908},{"krate":0,"index":2909},{"krate":0,"index":2910},{"krate":0,"index":2911},{"krate":0,"index":2912},{"krate":0,"index":2913},{"krate":0,"index":2914},{"krate":0,"index":2915},{"krate":0,"index":2916},{"krate":0,"index":2919},{"krate":0,"index":2921}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":628338,"byte_end":628350,"line_start":650,"line_end":650,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2924},{"krate":0,"index":2925},{"krate":0,"index":2926},{"krate":0,"index":2927},{"krate":0,"index":2928},{"krate":0,"index":2929}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":628870,"byte_end":628882,"line_start":672,"line_end":672,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2931},{"krate":0,"index":2932},{"krate":0,"index":2933},{"krate":0,"index":2934},{"krate":0,"index":2935}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":642844,"byte_end":642854,"line_start":49,"line_end":49,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2970}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":644063,"byte_end":644073,"line_start":82,"line_end":82,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2972}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":644273,"byte_end":644283,"line_start":91,"line_end":91,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2974}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":645082,"byte_end":645093,"line_start":135,"line_end":135,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2978}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":646350,"byte_end":646367,"line_start":177,"line_end":177,"column_start":28,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2981}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":647502,"byte_end":647517,"line_start":211,"line_end":211,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2989},{"krate":0,"index":2990}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":657408,"byte_end":657414,"line_start":477,"line_end":477,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3032},{"krate":0,"index":3033}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":665459,"byte_end":665467,"line_start":714,"line_end":714,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3072},{"krate":0,"index":3073},{"krate":0,"index":3074}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":666604,"byte_end":666612,"line_start":755,"line_end":755,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3077},{"krate":0,"index":3078},{"krate":0,"index":3079},{"krate":0,"index":3080},{"krate":0,"index":3081},{"krate":0,"index":3082},{"krate":0,"index":3083}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":667433,"byte_end":667441,"line_start":787,"line_end":787,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3086},{"krate":0,"index":3087},{"krate":0,"index":3088},{"krate":0,"index":3089},{"krate":0,"index":3090},{"krate":0,"index":3091}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":2038,"byte_end":2042,"line_start":74,"line_end":74,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":84}},{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/math/mod.rs","byte_start":3525,"byte_end":3527,"line_start":2,"line_end":2,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":85}},{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/math/mod.rs","byte_start":3537,"byte_end":3542,"line_start":3,"line_end":3,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":123}},{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":2083,"byte_end":2091,"line_start":77,"line_end":77,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":128}},{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/mod.rs","byte_start":19605,"byte_end":19613,"line_start":28,"line_end":28,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":210}},{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":2117,"byte_end":2119,"line_start":80,"line_end":80,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":368}},{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":2165,"byte_end":2169,"line_start":83,"line_end":83,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":469}},{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":2220,"byte_end":2223,"line_start":87,"line_end":87,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":626}},{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":2257,"byte_end":2260,"line_start":89,"line_end":89,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":846}},{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":2300,"byte_end":2303,"line_start":91,"line_end":91,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":958}},{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":2337,"byte_end":2340,"line_start":93,"line_end":93,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1049}},{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":2374,"byte_end":2377,"line_start":95,"line_end":95,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1259}},{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":2412,"byte_end":2416,"line_start":97,"line_end":97,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1360}},{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":2456,"byte_end":2459,"line_start":99,"line_end":99,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1524}},{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":2493,"byte_end":2496,"line_start":101,"line_end":101,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1581}},{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":2530,"byte_end":2533,"line_start":103,"line_end":103,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1929}},{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":2568,"byte_end":2572,"line_start":105,"line_end":105,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":2032}},{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/lib.rs","byte_start":2607,"byte_end":2611,"line_start":107,"line_end":107,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":2084}},{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/webp/mod.rs","byte_start":462164,"byte_end":462167,"line_start":8,"line_end":8,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":2138}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/math/nq.rs","byte_start":6028,"byte_end":6036,"line_start":73,"line_end":73,"column_start":6,"column_end":14},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":101},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/colorops.rs","byte_start":43721,"byte_end":43728,"line_start":194,"line_end":194,"column_start":19,"column_end":26},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":3165},"to":{"krate":0,"index":249}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/colorops.rs","byte_start":44172,"byte_end":44180,"line_start":215,"line_end":215,"column_start":23,"column_end":31},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":101},"to":{"krate":0,"index":249}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/imageops/sample.rs","byte_start":59114,"byte_end":59126,"line_start":363,"line_end":363,"column_start":34,"column_end":46},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":308},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":77882,"byte_end":77888,"line_start":67,"line_end":67,"column_start":15,"column_end":21},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":386},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":79254,"byte_end":79260,"line_start":114,"line_end":114,"column_start":6,"column_end":12},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":386},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/reader.rs","byte_start":80025,"byte_end":80031,"line_start":136,"line_end":136,"column_start":25,"column_end":31},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":386},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/io/free_functions.rs","byte_start":94488,"byte_end":94498,"line_start":296,"line_end":296,"column_start":26,"column_end":36},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":4326},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":98483,"byte_end":98495,"line_start":108,"line_end":108,"column_start":6,"column_end":18},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":3197},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":111090,"byte_end":111093,"line_start":421,"line_end":421,"column_start":6,"column_end":9},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":3219},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":111351,"byte_end":111362,"line_start":436,"line_end":436,"column_start":14,"column_end":25},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":3186},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":133094,"byte_end":133098,"line_start":971,"line_end":971,"column_start":24,"column_end":28},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":3247},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":138664,"byte_end":138671,"line_start":1103,"line_end":1103,"column_start":24,"column_end":31},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":3260},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":143047,"byte_end":143058,"line_start":1217,"line_end":1217,"column_start":40,"column_end":51},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":3186},"to":{"krate":2,"index":2154}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":143667,"byte_end":143678,"line_start":1236,"line_end":1236,"column_start":43,"column_end":54},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":3186},"to":{"krate":2,"index":2158}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":144282,"byte_end":144286,"line_start":1254,"line_end":1254,"column_start":45,"column_end":49},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":3247},"to":{"krate":0,"index":3034}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":145533,"byte_end":145540,"line_start":1299,"line_end":1299,"column_start":45,"column_end":52},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":3260},"to":{"krate":0,"index":3034}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":146807,"byte_end":146814,"line_start":1344,"line_end":1344,"column_start":41,"column_end":48},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":3260},"to":{"krate":0,"index":3047}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":147709,"byte_end":147719,"line_start":1373,"line_end":1373,"column_start":22,"column_end":32},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":4326},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/flat.rs","byte_start":148111,"byte_end":148121,"line_start":1384,"line_end":1384,"column_start":21,"column_end":31},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":3297},"to":{"krate":2,"index":1671}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/bmp/decoder.rs","byte_start":156758,"byte_end":156769,"line_start":96,"line_end":96,"column_start":23,"column_end":34},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":686},"to":{"krate":2,"index":4852}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/bmp/decoder.rs","byte_start":165273,"byte_end":165281,"line_start":360,"line_end":360,"column_start":6,"column_end":14},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":3379},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/bmp/decoder.rs","byte_start":166739,"byte_end":166748,"line_start":406,"line_end":406,"column_start":6,"column_end":15},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":3389},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/bmp/decoder.rs","byte_start":168024,"byte_end":168039,"line_start":461,"line_end":461,"column_start":32,"column_end":47},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":752},"to":{"krate":2,"index":4852}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/bmp/decoder.rs","byte_start":169895,"byte_end":169905,"line_start":513,"line_end":513,"column_start":22,"column_end":32},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":719},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/bmp/decoder.rs","byte_start":200446,"byte_end":200455,"line_start":1287,"line_end":1287,"column_start":18,"column_end":27},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":797},"to":{"krate":1,"index":2885}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/bmp/decoder.rs","byte_start":200875,"byte_end":200885,"line_start":1301,"line_end":1301,"column_start":52,"column_end":62},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":719},"to":{"krate":0,"index":2999}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/bmp/decoder.rs","byte_start":201469,"byte_end":201479,"line_start":1325,"line_end":1325,"column_start":55,"column_end":65},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":719},"to":{"krate":0,"index":3012}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/bmp/encoder.rs","byte_start":203101,"byte_end":203111,"line_start":15,"line_end":15,"column_start":25,"column_end":35},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":830},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dxt.rs","byte_start":215614,"byte_end":215624,"line_start":31,"line_end":31,"column_start":6,"column_end":16},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":3403},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dxt.rs","byte_start":216583,"byte_end":216593,"line_start":67,"line_end":67,"column_start":15,"column_end":25},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":866},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dxt.rs","byte_start":218241,"byte_end":218251,"line_start":113,"line_end":113,"column_start":45,"column_end":55},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":866},"to":{"krate":0,"index":2999}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dxt.rs","byte_start":219424,"byte_end":219434,"line_start":152,"line_end":152,"column_start":55,"column_end":65},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":866},"to":{"krate":0,"index":3012}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dxt.rs","byte_start":220396,"byte_end":220405,"line_start":182,"line_end":182,"column_start":24,"column_end":33},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":893},"to":{"krate":1,"index":2885}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dxt.rs","byte_start":220665,"byte_end":220675,"line_start":194,"line_end":194,"column_start":16,"column_end":26},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":901},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/gif.rs","byte_start":244304,"byte_end":244311,"line_start":53,"line_end":53,"column_start":15,"column_end":22},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":988},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/gif.rs","byte_start":244727,"byte_end":244736,"line_start":67,"line_end":67,"column_start":18,"column_end":27},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":994},"to":{"krate":1,"index":2885}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/gif.rs","byte_start":245149,"byte_end":245156,"line_start":81,"line_end":81,"column_start":45,"column_end":52},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":988},"to":{"krate":0,"index":2999}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/gif.rs","byte_start":246808,"byte_end":246824,"line_start":135,"line_end":135,"column_start":15,"column_end":31},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1012},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/gif.rs","byte_start":247433,"byte_end":247449,"line_start":157,"line_end":157,"column_start":28,"column_end":44},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1012},"to":{"krate":2,"index":4852}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/gif.rs","byte_start":252351,"byte_end":252358,"line_start":285,"line_end":285,"column_start":49,"column_end":56},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":988},"to":{"krate":0,"index":3018}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/gif.rs","byte_start":252621,"byte_end":252628,"line_start":297,"line_end":297,"column_start":16,"column_end":23},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1031},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/gif.rs","byte_start":254855,"byte_end":254865,"line_start":359,"line_end":359,"column_start":35,"column_end":45},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":4326},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":256059,"byte_end":256069,"line_start":24,"line_end":24,"column_start":18,"column_end":28},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":3421},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":257479,"byte_end":257488,"line_start":70,"line_end":70,"column_start":18,"column_end":27},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1081},"to":{"krate":1,"index":2885}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":257904,"byte_end":257914,"line_start":84,"line_end":84,"column_start":48,"column_end":58},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":3421},"to":{"krate":0,"index":2999}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":258526,"byte_end":258536,"line_start":109,"line_end":109,"column_start":58,"column_end":68},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":3421},"to":{"krate":0,"index":3012}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":259835,"byte_end":259845,"line_start":168,"line_end":168,"column_start":6,"column_end":16},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":3438},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":262127,"byte_end":262137,"line_start":233,"line_end":233,"column_start":18,"column_end":28},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":3429},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":267914,"byte_end":267924,"line_start":388,"line_end":388,"column_start":35,"column_end":45},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":3429},"to":{"krate":2,"index":4759}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":268824,"byte_end":268847,"line_start":416,"line_end":416,"column_start":18,"column_end":41},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1137},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":269140,"byte_end":269163,"line_start":429,"line_end":429,"column_start":31,"column_end":54},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1137},"to":{"krate":2,"index":4852}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":270870,"byte_end":270893,"line_start":478,"line_end":478,"column_start":40,"column_end":63},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1137},"to":{"krate":2,"index":4807}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":277638,"byte_end":277649,"line_start":666,"line_end":666,"column_start":6,"column_end":17},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":3458},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":284212,"byte_end":284218,"line_start":831,"line_end":831,"column_start":46,"column_end":52},"kind":{"Impl":{"id":54}},"from":{"krate":2,"index":29668},"to":{"krate":0,"index":1184}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/decoder.rs","byte_start":284488,"byte_end":284494,"line_start":839,"line_end":839,"column_start":46,"column_end":52},"kind":{"Impl":{"id":55}},"from":{"krate":2,"index":29668},"to":{"krate":0,"index":1184}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/encoder.rs","byte_start":288221,"byte_end":288231,"line_start":11,"line_end":11,"column_start":16,"column_end":26},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1217},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/encoder.rs","byte_start":290788,"byte_end":290799,"line_start":88,"line_end":88,"column_start":10,"column_end":21},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1229},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/encoder.rs","byte_start":290925,"byte_end":290936,"line_start":94,"line_end":94,"column_start":23,"column_end":34},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1229},"to":{"krate":2,"index":4852}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/encoder.rs","byte_start":291637,"byte_end":291657,"line_start":123,"line_end":123,"column_start":10,"column_end":30},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1241},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/hdr/encoder.rs","byte_start":291916,"byte_end":291936,"line_start":133,"line_end":133,"column_start":23,"column_end":43},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1241},"to":{"krate":2,"index":4852}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/ico/decoder.rs","byte_start":304540,"byte_end":304550,"line_start":42,"line_end":42,"column_start":22,"column_end":32},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1284},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/ico/decoder.rs","byte_start":306969,"byte_end":306977,"line_start":117,"line_end":117,"column_start":6,"column_end":14},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":3488},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/ico/decoder.rs","byte_start":308290,"byte_end":308299,"line_start":165,"line_end":165,"column_start":18,"column_end":27},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1316},"to":{"krate":1,"index":2885}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/ico/decoder.rs","byte_start":308719,"byte_end":308729,"line_start":179,"line_end":179,"column_start":52,"column_end":62},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1284},"to":{"krate":0,"index":2999}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/ico/encoder.rs","byte_start":313540,"byte_end":313550,"line_start":20,"line_end":20,"column_start":16,"column_end":26},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1347},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/jpeg/decoder.rs","byte_start":316742,"byte_end":316753,"line_start":16,"line_end":16,"column_start":15,"column_end":26},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1376},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/jpeg/decoder.rs","byte_start":317455,"byte_end":317465,"line_start":38,"line_end":38,"column_start":18,"column_end":28},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1383},"to":{"krate":1,"index":2885}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/jpeg/decoder.rs","byte_start":317878,"byte_end":317889,"line_start":52,"line_end":52,"column_start":45,"column_end":56},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1376},"to":{"krate":0,"index":2999}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/jpeg/decoder.rs","byte_start":319328,"byte_end":319337,"line_start":106,"line_end":106,"column_start":42,"column_end":51},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":3824},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/jpeg/decoder.rs","byte_start":319649,"byte_end":319659,"line_start":117,"line_end":117,"column_start":36,"column_end":46},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":4326},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/jpeg/encoder.rs","byte_start":325711,"byte_end":325720,"line_start":166,"line_end":166,"column_start":25,"column_end":34},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1449},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/jpeg/encoder.rs","byte_start":328747,"byte_end":328758,"line_start":289,"line_end":289,"column_start":20,"column_end":31},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1464},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/png.rs","byte_start":354383,"byte_end":354392,"line_start":27,"line_end":27,"column_start":15,"column_end":24},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1535},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/png.rs","byte_start":355120,"byte_end":355129,"line_start":51,"line_end":51,"column_start":24,"column_end":33},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1535},"to":{"krate":1,"index":2885}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/png.rs","byte_start":356383,"byte_end":356393,"line_start":97,"line_end":97,"column_start":15,"column_end":25},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1547},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/png.rs","byte_start":356878,"byte_end":356888,"line_start":111,"line_end":111,"column_start":45,"column_end":55},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1547},"to":{"krate":0,"index":2999}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/png.rs","byte_start":357712,"byte_end":357722,"line_start":145,"line_end":145,"column_start":16,"column_end":26},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1563},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/png.rs","byte_start":359092,"byte_end":359101,"line_start":175,"line_end":175,"column_start":48,"column_end":57},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":3824},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/png.rs","byte_start":360194,"byte_end":360204,"line_start":205,"line_end":205,"column_start":35,"column_end":45},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":4326},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/autobreak.rs","byte_start":367311,"byte_end":367320,"line_start":15,"line_end":15,"column_start":20,"column_end":29},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1598},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/autobreak.rs","byte_start":368581,"byte_end":368590,"line_start":58,"line_end":58,"column_start":34,"column_end":43},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1598},"to":{"krate":1,"index":2943}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/autobreak.rs","byte_start":369216,"byte_end":369225,"line_start":82,"line_end":82,"column_start":29,"column_end":38},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1598},"to":{"krate":2,"index":2097}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/decoder.rs","byte_start":371616,"byte_end":371626,"line_start":52,"line_end":52,"column_start":15,"column_end":25},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1663},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/decoder.rs","byte_start":375073,"byte_end":375080,"line_start":152,"line_end":152,"column_start":21,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":2966},"to":{"krate":0,"index":1676}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/decoder.rs","byte_start":384820,"byte_end":384829,"line_start":409,"line_end":409,"column_start":32,"column_end":41},"kind":{"Impl":{"id":84}},"from":{"krate":1,"index":2336},"to":{"krate":0,"index":1676}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/decoder.rs","byte_start":384958,"byte_end":384967,"line_start":413,"line_end":413,"column_start":18,"column_end":27},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1700},"to":{"krate":1,"index":2885}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/decoder.rs","byte_start":385380,"byte_end":385390,"line_start":427,"line_end":427,"column_start":45,"column_end":55},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1663},"to":{"krate":0,"index":2999}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/decoder.rs","byte_start":385852,"byte_end":385862,"line_start":447,"line_end":447,"column_start":15,"column_end":25},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1663},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/decoder.rs","byte_start":387530,"byte_end":387539,"line_start":489,"line_end":489,"column_start":6,"column_end":15},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":3519},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/decoder.rs","byte_start":388926,"byte_end":388928,"line_start":532,"line_end":532,"column_start":17,"column_end":19},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1653},"to":{"krate":0,"index":1649}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/decoder.rs","byte_start":389628,"byte_end":389631,"line_start":561,"line_end":561,"column_start":17,"column_end":20},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1655},"to":{"krate":0,"index":1649}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/decoder.rs","byte_start":390890,"byte_end":390896,"line_start":600,"line_end":600,"column_start":17,"column_end":23},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1657},"to":{"krate":0,"index":1649}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/decoder.rs","byte_start":392400,"byte_end":392405,"line_start":650,"line_end":650,"column_start":17,"column_end":22},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1659},"to":{"krate":0,"index":1649}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/decoder.rs","byte_start":393235,"byte_end":393247,"line_start":680,"line_end":680,"column_start":31,"column_end":43},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":3588},"to":{"krate":0,"index":1661}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/decoder.rs","byte_start":393372,"byte_end":393385,"line_start":686,"line_end":686,"column_start":31,"column_end":44},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":3597},"to":{"krate":0,"index":1661}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/decoder.rs","byte_start":393765,"byte_end":393777,"line_start":698,"line_end":698,"column_start":31,"column_end":43},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":3607},"to":{"krate":0,"index":1661}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/decoder.rs","byte_start":394153,"byte_end":394168,"line_start":710,"line_end":710,"column_start":31,"column_end":46},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":3617},"to":{"krate":0,"index":1661}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/encoder.rs","byte_start":408911,"byte_end":408921,"line_start":76,"line_end":76,"column_start":16,"column_end":26},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1796},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/encoder.rs","byte_start":416196,"byte_end":416214,"line_start":272,"line_end":272,"column_start":10,"column_end":28},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1800},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/encoder.rs","byte_start":417347,"byte_end":417362,"line_start":307,"line_end":307,"column_start":10,"column_end":25},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1806},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/encoder.rs","byte_start":417850,"byte_end":417867,"line_start":324,"line_end":324,"column_start":10,"column_end":27},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/encoder.rs","byte_start":421371,"byte_end":421389,"line_start":415,"line_end":415,"column_start":10,"column_end":28},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1814},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/encoder.rs","byte_start":423520,"byte_end":423533,"line_start":474,"line_end":474,"column_start":10,"column_end":23},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1818},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/encoder.rs","byte_start":423843,"byte_end":423855,"line_start":487,"line_end":487,"column_start":10,"column_end":22},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1862},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/encoder.rs","byte_start":425272,"byte_end":425283,"line_start":532,"line_end":532,"column_start":10,"column_end":21},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":3535},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/encoder.rs","byte_start":426994,"byte_end":427005,"line_start":586,"line_end":586,"column_start":29,"column_end":40},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":3535},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/encoder.rs","byte_start":427124,"byte_end":427135,"line_start":592,"line_end":592,"column_start":30,"column_end":41},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":3535},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/encoder.rs","byte_start":427236,"byte_end":427249,"line_start":598,"line_end":598,"column_start":10,"column_end":23},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1823},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":432395,"byte_end":432405,"line_start":136,"line_end":136,"column_start":6,"column_end":16},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":3564},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":433375,"byte_end":433384,"line_start":161,"line_end":161,"column_start":6,"column_end":15},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1891},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":439564,"byte_end":439573,"line_start":314,"line_end":314,"column_start":29,"column_end":38},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1891},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":439766,"byte_end":439775,"line_start":323,"line_end":323,"column_start":30,"column_end":39},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1891},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":439969,"byte_end":439978,"line_start":332,"line_end":332,"column_start":29,"column_end":38},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1891},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/pnm/header.rs","byte_start":440173,"byte_end":440182,"line_start":341,"line_end":341,"column_start":32,"column_end":41},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1891},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/tga/decoder.rs","byte_start":441086,"byte_end":441095,"line_start":21,"line_end":21,"column_start":6,"column_end":15},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1945},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/tga/decoder.rs","byte_start":442940,"byte_end":442946,"line_start":84,"line_end":84,"column_start":6,"column_end":12},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":3647},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/tga/decoder.rs","byte_start":444215,"byte_end":444223,"line_start":129,"line_end":129,"column_start":6,"column_end":14},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1977},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/tga/decoder.rs","byte_start":445340,"byte_end":445350,"line_start":175,"line_end":175,"column_start":22,"column_end":32},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1984},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/tga/decoder.rs","byte_start":456647,"byte_end":456657,"line_start":492,"line_end":492,"column_start":52,"column_end":62},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1984},"to":{"krate":0,"index":2999}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/tga/decoder.rs","byte_start":457542,"byte_end":457551,"line_start":530,"line_end":530,"column_start":31,"column_end":40},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":2024},"to":{"krate":1,"index":2885}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/tiff.rs","byte_start":458410,"byte_end":458421,"line_start":28,"line_end":28,"column_start":9,"column_end":20},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":2048},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/tiff.rs","byte_start":458844,"byte_end":458854,"line_start":45,"line_end":45,"column_start":32,"column_end":42},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":4326},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/tiff.rs","byte_start":459323,"byte_end":459332,"line_start":56,"line_end":56,"column_start":32,"column_end":41},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":3824},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/tiff.rs","byte_start":459946,"byte_end":459956,"line_start":71,"line_end":71,"column_start":18,"column_end":28},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":2060},"to":{"krate":1,"index":2885}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/tiff.rs","byte_start":460376,"byte_end":460387,"line_start":85,"line_end":85,"column_start":52,"column_end":63},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":2048},"to":{"krate":0,"index":2999}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/tiff.rs","byte_start":461086,"byte_end":461097,"line_start":113,"line_end":113,"column_start":23,"column_end":34},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":2077},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/webp/decoder.rs","byte_start":462668,"byte_end":462679,"line_start":24,"line_end":24,"column_start":15,"column_end":26},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":2103},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/webp/decoder.rs","byte_start":464857,"byte_end":464867,"line_start":104,"line_end":104,"column_start":18,"column_end":28},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":2115},"to":{"krate":1,"index":2885}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/webp/decoder.rs","byte_start":465280,"byte_end":465291,"line_start":118,"line_end":118,"column_start":45,"column_end":56},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":2103},"to":{"krate":0,"index":2999}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/webp/vp8.rs","byte_start":494059,"byte_end":494069,"line_start":674,"line_end":674,"column_start":6,"column_end":16},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":2214},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/webp/vp8.rs","byte_start":498471,"byte_end":498481,"line_start":870,"line_end":870,"column_start":15,"column_end":25},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":2228},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/webp/vp8.rs","byte_start":519474,"byte_end":519482,"line_start":1521,"line_end":1521,"column_start":6,"column_end":14},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":3662},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/webp/vp8.rs","byte_start":520099,"byte_end":520107,"line_start":1544,"line_end":1544,"column_start":18,"column_end":26},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":3662},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/webp/vp8.rs","byte_start":520172,"byte_end":520182,"line_start":1550,"line_end":1550,"column_start":6,"column_end":16},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":3689},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/webp/vp8.rs","byte_start":520471,"byte_end":520481,"line_start":1562,"line_end":1562,"column_start":18,"column_end":28},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":3689},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/webp/vp8.rs","byte_start":520548,"byte_end":520557,"line_start":1568,"line_end":1568,"column_start":6,"column_end":15},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":3713},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/webp/vp8.rs","byte_start":521094,"byte_end":521103,"line_start":1586,"line_end":1586,"column_start":18,"column_end":27},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":3713},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/animation.rs","byte_start":535773,"byte_end":535779,"line_start":13,"line_end":13,"column_start":10,"column_end":16},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":2321},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/animation.rs","byte_start":536369,"byte_end":536375,"line_start":29,"line_end":29,"column_start":23,"column_end":29},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":2321},"to":{"krate":2,"index":4852}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/animation.rs","byte_start":536731,"byte_end":536736,"line_start":48,"line_end":48,"column_start":6,"column_end":11},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":3806},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":538252,"byte_end":538256,"line_start":19,"line_end":19,"column_start":18,"column_end":22},"kind":"SuperTrait","from":{"krate":2,"index":1914},"to":{"krate":0,"index":2376}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":538259,"byte_end":538264,"line_start":19,"line_end":19,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":1606},"to":{"krate":0,"index":2376}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":543593,"byte_end":543599,"line_start":179,"line_end":179,"column_start":38,"column_end":44},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":2418},"to":{"krate":2,"index":4852}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":543843,"byte_end":543849,"line_start":191,"line_end":191,"column_start":47,"column_end":53},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":2418},"to":{"krate":2,"index":4807}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":543998,"byte_end":544004,"line_start":200,"line_end":200,"column_start":49,"column_end":55},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":2418},"to":{"krate":2,"index":4778}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":544374,"byte_end":544383,"line_start":218,"line_end":218,"column_start":38,"column_end":47},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":2437},"to":{"krate":2,"index":4852}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":544639,"byte_end":544648,"line_start":230,"line_end":230,"column_start":47,"column_end":56},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":2437},"to":{"krate":2,"index":4807}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":544797,"byte_end":544806,"line_start":239,"line_end":239,"column_start":49,"column_end":58},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":2437},"to":{"krate":2,"index":4778}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":545210,"byte_end":545214,"line_start":259,"line_end":259,"column_start":38,"column_end":42},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":2456},"to":{"krate":2,"index":4852}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":545537,"byte_end":545541,"line_start":273,"line_end":273,"column_start":47,"column_end":51},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":2456},"to":{"krate":2,"index":4807}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":545690,"byte_end":545694,"line_start":282,"line_end":282,"column_start":49,"column_end":53},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":2456},"to":{"krate":2,"index":4778}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":546149,"byte_end":546156,"line_start":302,"line_end":302,"column_start":38,"column_end":45},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":2475},"to":{"krate":2,"index":4852}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":546492,"byte_end":546499,"line_start":316,"line_end":316,"column_start":47,"column_end":54},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":2475},"to":{"krate":2,"index":4807}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":546648,"byte_end":546655,"line_start":325,"line_end":325,"column_start":49,"column_end":56},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":2475},"to":{"krate":2,"index":4778}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":547151,"byte_end":547166,"line_start":348,"line_end":348,"column_start":38,"column_end":53},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":2494},"to":{"krate":2,"index":4852}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":547569,"byte_end":547584,"line_start":366,"line_end":366,"column_start":47,"column_end":62},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":2494},"to":{"krate":2,"index":4807}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":547896,"byte_end":547909,"line_start":385,"line_end":385,"column_start":38,"column_end":51},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":2511},"to":{"krate":2,"index":4852}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":548447,"byte_end":548460,"line_start":409,"line_end":409,"column_start":47,"column_end":60},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":2511},"to":{"krate":2,"index":4807}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":548796,"byte_end":548814,"line_start":429,"line_end":429,"column_start":38,"column_end":56},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":2527},"to":{"krate":2,"index":4852}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":549225,"byte_end":549243,"line_start":447,"line_end":447,"column_start":47,"column_end":65},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":2527},"to":{"krate":2,"index":4807}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":549561,"byte_end":549577,"line_start":466,"line_end":466,"column_start":38,"column_end":54},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":2544},"to":{"krate":2,"index":4852}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":550124,"byte_end":550140,"line_start":490,"line_end":490,"column_start":47,"column_end":63},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":2544},"to":{"krate":2,"index":4807}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":550642,"byte_end":550653,"line_start":512,"line_end":512,"column_start":20,"column_end":31},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":3813},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":556294,"byte_end":556305,"line_start":679,"line_end":679,"column_start":20,"column_end":31},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":3813},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":558475,"byte_end":558486,"line_start":748,"line_end":748,"column_start":20,"column_end":31},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":3813},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":559096,"byte_end":559107,"line_start":772,"line_end":772,"column_start":20,"column_end":31},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":3813},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":559808,"byte_end":559819,"line_start":798,"line_end":798,"column_start":30,"column_end":41},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":3813},"to":{"krate":2,"index":2073}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":560083,"byte_end":560094,"line_start":811,"line_end":811,"column_start":33,"column_end":44},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":3813},"to":{"krate":2,"index":2086}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":560360,"byte_end":560371,"line_start":822,"line_end":822,"column_start":42,"column_end":53},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":3813},"to":{"krate":2,"index":2154}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":560642,"byte_end":560653,"line_start":835,"line_end":835,"column_start":45,"column_end":56},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":3813},"to":{"krate":2,"index":2158}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":560914,"byte_end":560925,"line_start":846,"line_end":846,"column_start":30,"column_end":41},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":3813},"to":{"krate":2,"index":1606}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":561284,"byte_end":561295,"line_start":861,"line_end":861,"column_start":41,"column_end":52},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":3813},"to":{"krate":0,"index":3034}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":562119,"byte_end":562130,"line_start":894,"line_end":894,"column_start":37,"column_end":48},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":3813},"to":{"krate":0,"index":3047}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":565715,"byte_end":565726,"line_start":986,"line_end":986,"column_start":26,"column_end":37},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":3813},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":568160,"byte_end":568169,"line_start":1064,"line_end":1064,"column_start":6,"column_end":15},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":2669},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/buffer.rs","byte_start":569567,"byte_end":569578,"line_start":1102,"line_end":1102,"column_start":67,"column_end":78},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":3813},"to":{"krate":0,"index":2654}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":577838,"byte_end":577847,"line_start":34,"line_end":34,"column_start":6,"column_end":15},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":3824},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":583887,"byte_end":583888,"line_start":247,"line_end":247,"column_start":32,"column_end":33},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":2693},"to":{"krate":0,"index":2689}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":584044,"byte_end":584048,"line_start":255,"line_end":255,"column_start":53,"column_end":57},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":4189},"to":{"krate":0,"index":2689}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":584427,"byte_end":584431,"line_start":265,"line_end":265,"column_start":53,"column_end":57},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":4189},"to":{"krate":0,"index":2689}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":584813,"byte_end":584817,"line_start":275,"line_end":275,"column_start":52,"column_end":56},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":4189},"to":{"krate":0,"index":2689}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":585195,"byte_end":585199,"line_start":286,"line_end":286,"column_start":52,"column_end":56},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":4189},"to":{"krate":0,"index":2689}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":585579,"byte_end":585583,"line_start":297,"line_end":297,"column_start":54,"column_end":58},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":4189},"to":{"krate":0,"index":2689}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":585778,"byte_end":585783,"line_start":305,"line_end":305,"column_start":53,"column_end":58},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":4276},"to":{"krate":0,"index":2689}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":586200,"byte_end":586205,"line_start":316,"line_end":316,"column_start":53,"column_end":58},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":4276},"to":{"krate":0,"index":2689}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":586621,"byte_end":586626,"line_start":327,"line_end":327,"column_start":52,"column_end":57},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":4276},"to":{"krate":0,"index":2689}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":587044,"byte_end":587049,"line_start":338,"line_end":338,"column_start":52,"column_end":57},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":4276},"to":{"krate":0,"index":2689}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":587468,"byte_end":587473,"line_start":349,"line_end":349,"column_start":53,"column_end":58},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":4276},"to":{"krate":0,"index":2689}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":587732,"byte_end":587736,"line_start":359,"line_end":359,"column_start":52,"column_end":56},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":4218},"to":{"krate":0,"index":2689}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":588037,"byte_end":588041,"line_start":370,"line_end":370,"column_start":52,"column_end":56},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":4218},"to":{"krate":0,"index":2689}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":588343,"byte_end":588347,"line_start":381,"line_end":381,"column_start":53,"column_end":57},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":4218},"to":{"krate":0,"index":2689}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":588649,"byte_end":588653,"line_start":393,"line_end":393,"column_start":54,"column_end":58},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":4218},"to":{"krate":0,"index":2689}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":588956,"byte_end":588960,"line_start":406,"line_end":406,"column_start":53,"column_end":57},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":4218},"to":{"krate":0,"index":2689}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":589285,"byte_end":589289,"line_start":420,"line_end":420,"column_start":52,"column_end":56},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":4247},"to":{"krate":0,"index":2689}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":589591,"byte_end":589595,"line_start":432,"line_end":432,"column_start":52,"column_end":56},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":4247},"to":{"krate":0,"index":2689}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":589898,"byte_end":589902,"line_start":444,"line_end":444,"column_start":53,"column_end":57},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":4247},"to":{"krate":0,"index":2689}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":590203,"byte_end":590207,"line_start":455,"line_end":455,"column_start":54,"column_end":58},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":4247},"to":{"krate":0,"index":2689}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":590508,"byte_end":590512,"line_start":466,"line_end":466,"column_start":53,"column_end":57},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":4247},"to":{"krate":0,"index":2689}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":590838,"byte_end":590841,"line_start":481,"line_end":481,"column_start":53,"column_end":56},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":4131},"to":{"krate":0,"index":2689}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":591111,"byte_end":591114,"line_start":492,"line_end":492,"column_start":53,"column_end":56},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":4131},"to":{"krate":0,"index":2689}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":591382,"byte_end":591385,"line_start":502,"line_end":502,"column_start":52,"column_end":55},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":4131},"to":{"krate":0,"index":2689}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":591650,"byte_end":591653,"line_start":512,"line_end":512,"column_start":54,"column_end":57},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":4131},"to":{"krate":0,"index":2689}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":591917,"byte_end":591920,"line_start":522,"line_end":522,"column_start":53,"column_end":56},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":4131},"to":{"krate":0,"index":2689}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":592206,"byte_end":592209,"line_start":534,"line_end":534,"column_start":53,"column_end":56},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":4160},"to":{"krate":0,"index":2689}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":592477,"byte_end":592480,"line_start":544,"line_end":544,"column_start":52,"column_end":55},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":4160},"to":{"krate":0,"index":2689}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":592745,"byte_end":592748,"line_start":555,"line_end":555,"column_start":53,"column_end":56},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":4160},"to":{"krate":0,"index":2689}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":593018,"byte_end":593021,"line_start":565,"line_end":565,"column_start":54,"column_end":57},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":4160},"to":{"krate":0,"index":2689}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":593285,"byte_end":593288,"line_start":575,"line_end":575,"column_start":53,"column_end":56},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":4160},"to":{"krate":0,"index":2689}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":593664,"byte_end":593669,"line_start":592,"line_end":592,"column_start":30,"column_end":35},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":4276},"to":{"krate":0,"index":2785}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":594674,"byte_end":594678,"line_start":625,"line_end":625,"column_start":30,"column_end":34},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":4189},"to":{"krate":0,"index":2785}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":594788,"byte_end":594792,"line_start":631,"line_end":631,"column_start":30,"column_end":34},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":4218},"to":{"krate":0,"index":2785}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":597000,"byte_end":597004,"line_start":689,"line_end":689,"column_start":30,"column_end":34},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":4247},"to":{"krate":0,"index":2785}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":599210,"byte_end":599213,"line_start":745,"line_end":745,"column_start":30,"column_end":33},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":4131},"to":{"krate":0,"index":2785}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":599322,"byte_end":599325,"line_start":751,"line_end":751,"column_start":30,"column_end":33},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":4160},"to":{"krate":0,"index":2785}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":599544,"byte_end":599549,"line_start":764,"line_end":764,"column_start":31,"column_end":36},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":4276},"to":{"krate":0,"index":2805}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":599722,"byte_end":599726,"line_start":773,"line_end":773,"column_start":31,"column_end":35},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":4189},"to":{"krate":0,"index":2805}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":599914,"byte_end":599918,"line_start":784,"line_end":784,"column_start":31,"column_end":35},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":4218},"to":{"krate":0,"index":2805}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":600131,"byte_end":600135,"line_start":795,"line_end":795,"column_start":31,"column_end":35},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":4247},"to":{"krate":0,"index":2805}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":600348,"byte_end":600351,"line_start":806,"line_end":806,"column_start":31,"column_end":34},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":4131},"to":{"krate":0,"index":2805}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/color.rs","byte_start":600613,"byte_end":600616,"line_start":820,"line_end":820,"column_start":31,"column_end":34},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":4160},"to":{"krate":0,"index":2805}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":609147,"byte_end":609159,"line_start":101,"line_end":101,"column_start":6,"column_end":18},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":4305},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":628338,"byte_end":628350,"line_start":650,"line_end":650,"column_start":27,"column_end":39},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":4305},"to":{"krate":0,"index":3034}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/dynimage.rs","byte_start":628870,"byte_end":628882,"line_start":672,"line_end":672,"column_start":23,"column_end":35},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":4305},"to":{"krate":0,"index":3047}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":642844,"byte_end":642854,"line_start":49,"line_end":49,"column_start":23,"column_end":33},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":4326},"to":{"krate":2,"index":6074}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":644063,"byte_end":644073,"line_start":82,"line_end":82,"column_start":16,"column_end":26},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":4326},"to":{"krate":1,"index":1634}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":644273,"byte_end":644283,"line_start":91,"line_end":91,"column_start":26,"column_end":36},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":4326},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":645082,"byte_end":645093,"line_start":135,"line_end":135,"column_start":6,"column_end":17},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":4349},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":646350,"byte_end":646367,"line_start":177,"line_end":177,"column_start":28,"column_end":45},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":4381},"to":{"krate":2,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":647502,"byte_end":647517,"line_start":211,"line_end":211,"column_start":6,"column_end":21},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":2982},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":653748,"byte_end":653753,"line_start":361,"line_end":361,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":1909},"to":{"krate":0,"index":2999}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":656437,"byte_end":656449,"line_start":437,"line_end":437,"column_start":32,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":2999},"to":{"krate":0,"index":3012}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":656456,"byte_end":656461,"line_start":437,"line_end":437,"column_start":51,"column_end":56},"kind":"SuperTrait","from":{"krate":2,"index":1909},"to":{"krate":0,"index":3012}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":657408,"byte_end":657414,"line_start":477,"line_end":477,"column_start":44,"column_end":50},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":3021},"to":{"krate":2,"index":4852}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":660219,"byte_end":660235,"line_start":575,"line_end":575,"column_start":25,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":3034},"to":{"krate":0,"index":3047}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":665459,"byte_end":665467,"line_start":714,"line_end":714,"column_start":9,"column_end":17},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":3059},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":666604,"byte_end":666612,"line_start":755,"line_end":755,"column_start":30,"column_end":38},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":3059},"to":{"krate":0,"index":3034}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/image.rs","byte_start":667433,"byte_end":667441,"line_start":787,"line_end":787,"column_start":26,"column_end":34},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":3059},"to":{"krate":0,"index":3047}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/traits.rs","byte_start":678588,"byte_end":678592,"line_start":9,"line_end":9,"column_start":22,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":1914},"to":{"krate":0,"index":3098}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/traits.rs","byte_start":678595,"byte_end":678602,"line_start":9,"line_end":9,"column_start":29,"column_end":36},"kind":"SuperTrait","from":{"krate":18,"index":176},"to":{"krate":0,"index":3098}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/traits.rs","byte_start":678605,"byte_end":678608,"line_start":9,"line_end":9,"column_start":39,"column_end":42},"kind":"SuperTrait","from":{"krate":18,"index":589},"to":{"krate":0,"index":3098}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/traits.rs","byte_start":678611,"byte_end":678621,"line_start":9,"line_end":9,"column_start":45,"column_end":55},"kind":"SuperTrait","from":{"krate":2,"index":1671},"to":{"krate":0,"index":3098}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/traits.rs","byte_start":678630,"byte_end":678635,"line_start":9,"line_end":9,"column_start":64,"column_end":69},"kind":"SuperTrait","from":{"krate":2,"index":1606},"to":{"krate":0,"index":3098}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/traits.rs","byte_start":678638,"byte_end":678645,"line_start":9,"line_end":9,"column_start":72,"column_end":79},"kind":"SuperTrait","from":{"krate":18,"index":92},"to":{"krate":0,"index":3098}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/traits.rs","byte_start":679121,"byte_end":679126,"line_start":26,"line_end":26,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":1909},"to":{"krate":0,"index":3111}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/traits.rs","byte_start":679129,"byte_end":679136,"line_start":26,"line_end":26,"column_start":32,"column_end":39},"kind":"SuperTrait","from":{"krate":18,"index":92},"to":{"krate":0,"index":3111}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/image-0.22.5/./src/traits.rs","byte_start":679139,"byte_end":679146,"line_start":26,"line_end":26,"column_start":42,"column_end":49},"kind":"SuperTrait","from":{"krate":18,"index":176},"to":{"krate":0,"index":3111}}]}