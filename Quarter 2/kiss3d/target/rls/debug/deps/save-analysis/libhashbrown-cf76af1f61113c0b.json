{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0","program":"/home/farjad-ali/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","hashbrown","--edition=2018","/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"raw\"","-C","metadata=cf76af1f61113c0b","-C","extra-filename=-cf76af1f61113c0b","--out-dir","/home/farjad-ali/Rust/Quarter 2/kiss3d/target/rls/debug/deps","-L","dependency=/home/farjad-ali/Rust/Quarter 2/kiss3d/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/farjad-ali/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/farjad-ali/Rust/Quarter 2/kiss3d/target/rls/debug/deps/libhashbrown-cf76af1f61113c0b.rmeta"},"prelude":{"crate_id":{"name":"hashbrown","disambiguator":[16731230451928029902,11361204978456882515]},"crate_root":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src","external_crates":[{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[16347567532895737325,10433174518283571136]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[6035154360143295752,3120051156278071757]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[17970804288108720841,8277620835330235672]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[16732030649177302276,7623982932271952002]}}],"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/lib.rs","byte_start":0,"byte_end":3193,"line_start":1,"line_end":112,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/lib.rs","byte_start":1401,"byte_end":1402,"line_start":48,"line_end":48,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"RawDrain, RawIter, RawTable, RawIntoIter, Bucket","parent":{"krate":0,"index":8}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/lib.rs","byte_start":1401,"byte_end":1402,"line_start":48,"line_end":48,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":1368}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/lib.rs","byte_start":1401,"byte_end":1402,"line_start":48,"line_end":48,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":1370}},{"kind":"Use","ref_id":{"krate":0,"index":327},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/lib.rs","byte_start":2731,"byte_end":2738,"line_start":97,"line_end":97,"column_start":21,"column_end":28},"alias_span":null,"name":"HashMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1044},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/lib.rs","byte_start":2760,"byte_end":2767,"line_start":98,"line_end":98,"column_start":21,"column_end":28},"alias_span":null,"name":"HashSet","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/lib.rs","byte_start":0,"byte_end":3193,"line_start":1,"line_end":112,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":994},{"krate":0,"index":1019},{"krate":0,"index":1368},{"krate":0,"index":1370},{"krate":0,"index":1372},{"krate":0,"index":1373},{"krate":0,"index":1424},{"krate":0,"index":1438},{"krate":0,"index":1434},{"krate":0,"index":1435},{"krate":0,"index":1431},{"krate":0,"index":1432},{"krate":0,"index":1429}],"decl_id":null,"docs":" This crate is a Rust port of Google's high-performance [SwissTable] hash\n map, adapted to make it a drop-in replacement for Rust's standard `HashMap`\n and `HashSet` types.","sig":null,"attributes":[{"value":"! This crate is a Rust port of Google's high-performance [SwissTable] hash","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/lib.rs","byte_start":0,"byte_end":76,"line_start":1,"line_end":1,"column_start":1,"column_end":77}},{"value":"! map, adapted to make it a drop-in replacement for Rust's standard `HashMap`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/lib.rs","byte_start":77,"byte_end":156,"line_start":2,"line_end":2,"column_start":1,"column_end":80}},{"value":"! and `HashSet` types.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/lib.rs","byte_start":157,"byte_end":181,"line_start":3,"line_end":3,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/lib.rs","byte_start":182,"byte_end":185,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! The original C++ version of [SwissTable] can be found [here], and this","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/lib.rs","byte_start":186,"byte_end":260,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"! [CppCon talk] gives an overview of how the algorithm works.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/lib.rs","byte_start":261,"byte_end":324,"line_start":6,"line_end":6,"column_start":1,"column_end":64}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/lib.rs","byte_start":325,"byte_end":328,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! [SwissTable]: https://abseil.io/blog/20180927-swisstables","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/lib.rs","byte_start":329,"byte_end":390,"line_start":8,"line_end":8,"column_start":1,"column_end":62}},{"value":"! [here]: https://github.com/abseil/abseil-cpp/blob/master/absl/container/internal/raw_hash_set.h","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/lib.rs","byte_start":391,"byte_end":490,"line_start":9,"line_end":9,"column_start":1,"column_end":100}},{"value":"! [CppCon talk]: https://www.youtube.com/watch?v=ncHmEUmJZf4","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/lib.rs","byte_start":491,"byte_end":553,"line_start":10,"line_end":10,"column_start":1,"column_end":63}},{"value":"no_std","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/lib.rs","byte_start":555,"byte_end":565,"line_start":12,"line_end":12,"column_start":1,"column_end":11}},{"value":"allow(clippy :: doc_markdown, clippy :: module_name_repetitions, clippy ::\n        must_use_candidate, clippy :: option_if_let_else)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/lib.rs","byte_start":691,"byte_end":829,"line_start":17,"line_end":22,"column_start":1,"column_end":3}},{"value":"warn(missing_docs)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/lib.rs","byte_start":830,"byte_end":852,"line_start":23,"line_end":23,"column_start":1,"column_end":23}},{"value":"warn(rust_2018_idioms)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/lib.rs","byte_start":853,"byte_end":879,"line_start":24,"line_end":24,"column_start":1,"column_end":27}}]},{"kind":"Mod","id":{"krate":0,"index":8},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/lib.rs","byte_start":1229,"byte_end":1232,"line_start":43,"line_end":43,"column_start":9,"column_end":12},"name":"raw","qualname":"::raw","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":9},{"krate":0,"index":302}],"decl_id":null,"docs":" Experimental and unsafe `RawTable` API. This module is only available if the\n `raw` feature is enabled.\n","sig":null,"attributes":[{"value":"cfg(feature = \"raw\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/lib.rs","byte_start":1086,"byte_end":1109,"line_start":40,"line_end":40,"column_start":1,"column_end":24}},{"value":"/ Experimental and unsafe `RawTable` API. This module is only available if the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/lib.rs","byte_start":1110,"byte_end":1190,"line_start":41,"line_end":41,"column_start":1,"column_end":81}},{"value":"/ `raw` feature is enabled.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/lib.rs","byte_start":1191,"byte_end":1220,"line_start":42,"line_end":42,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":76},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":14673,"byte_end":14679,"line_start":272,"line_end":272,"column_start":12,"column_end":18},"name":"Bucket","qualname":"::raw::inner::Bucket","value":"Bucket {  }","parent":null,"children":[{"krate":0,"index":78}],"decl_id":null,"docs":" A reference to a hash table bucket containing a `T`.","sig":null,"attributes":[{"value":"/ A reference to a hash table bucket containing a `T`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":14410,"byte_end":14466,"line_start":267,"line_end":267,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":14467,"byte_end":14470,"line_start":268,"line_end":268,"column_start":1,"column_end":4}},{"value":"/ This is usually just a pointer to the element itself. However if the element","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":14471,"byte_end":14551,"line_start":269,"line_end":269,"column_start":1,"column_end":81}},{"value":"/ is a ZST, then we instead track the index of the element in the table so","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":14552,"byte_end":14628,"line_start":270,"line_end":270,"column_start":1,"column_end":77}},{"value":"/ that `erase` works properly.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":14629,"byte_end":14661,"line_start":271,"line_end":271,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":16039,"byte_end":16045,"line_start":313,"line_end":313,"column_start":19,"column_end":25},"name":"as_ptr","qualname":"<Bucket<T>>::as_ptr","value":"fn (&self) -> *mut T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":16718,"byte_end":16722,"line_start":333,"line_end":333,"column_start":19,"column_end":23},"name":"drop","qualname":"<Bucket<T>>::drop","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":16844,"byte_end":16848,"line_start":337,"line_end":337,"column_start":19,"column_end":23},"name":"read","qualname":"<Bucket<T>>::read","value":"fn (&self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":16965,"byte_end":16970,"line_start":341,"line_end":341,"column_start":19,"column_end":24},"name":"write","qualname":"<Bucket<T>>::write","value":"fn (&self, val: T) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":17095,"byte_end":17101,"line_start":345,"line_end":345,"column_start":19,"column_end":25},"name":"as_ref","qualname":"<Bucket<T>>::as_ref","value":"fn <'a> (&self) -> &'a T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":17221,"byte_end":17227,"line_start":349,"line_end":349,"column_start":19,"column_end":25},"name":"as_mut","qualname":"<Bucket<T>>::as_mut","value":"fn <'a> (&self) -> &'a mut T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":17355,"byte_end":17379,"line_start":353,"line_end":353,"column_start":19,"column_end":43},"name":"copy_from_nonoverlapping","qualname":"<Bucket<T>>::copy_from_nonoverlapping","value":"fn (&self, other: &Self) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":98},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":17531,"byte_end":17539,"line_start":359,"line_end":359,"column_start":12,"column_end":20},"name":"RawTable","qualname":"::raw::inner::RawTable","value":"RawTable {  }","parent":null,"children":[{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104}],"decl_id":null,"docs":" A raw hash table with an unsafe API.\n","sig":null,"attributes":[{"value":"/ A raw hash table with an unsafe API.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":17479,"byte_end":17519,"line_start":358,"line_end":358,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":18483,"byte_end":18486,"line_start":385,"line_end":385,"column_start":18,"column_end":21},"name":"new","qualname":"<RawTable<T>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty hash table without allocating any memory.","sig":null,"attributes":[{"value":"/ Creates a new empty hash table without allocating any memory.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":18107,"byte_end":18172,"line_start":379,"line_end":379,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":18177,"byte_end":18180,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ In effect this returns a table with exactly 1 bucket. However we can","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":18185,"byte_end":18257,"line_start":381,"line_end":381,"column_start":5,"column_end":77}},{"value":"/ leave the data pointer dangling since that bucket is never written to","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":18262,"byte_end":18335,"line_start":382,"line_end":382,"column_start":5,"column_end":78}},{"value":"/ due to our load factor forcing us to always have at least 1 free bucket.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":18340,"byte_end":18416,"line_start":383,"line_end":383,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":20909,"byte_end":20926,"line_start":451,"line_end":451,"column_start":12,"column_end":29},"name":"try_with_capacity","qualname":"<RawTable<T>>::try_with_capacity","value":"fn (capacity: usize) -> Result<Self, TryReserveError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to allocate a new hash table with at least enough capacity\n for inserting the given number of elements without reallocating.\n","sig":null,"attributes":[{"value":"/ Attempts to allocate a new hash table with at least enough capacity","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":20725,"byte_end":20796,"line_start":448,"line_end":448,"column_start":5,"column_end":76}},{"value":"/ for inserting the given number of elements without reallocating.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":20801,"byte_end":20869,"line_start":449,"line_end":449,"column_start":5,"column_end":73}},{"value":"cfg(feature = \"raw\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":20874,"byte_end":20897,"line_start":450,"line_end":450,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":21205,"byte_end":21218,"line_start":457,"line_end":457,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<RawTable<T>>::with_capacity","value":"fn (capacity: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Allocates a new hash table with at least enough capacity for inserting\n the given number of elements without reallocating.\n","sig":null,"attributes":[{"value":"/ Allocates a new hash table with at least enough capacity for inserting","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":21060,"byte_end":21134,"line_start":455,"line_end":455,"column_start":5,"column_end":79}},{"value":"/ the given number of elements without reallocating.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":21139,"byte_end":21193,"line_start":456,"line_end":456,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":22106,"byte_end":22114,"line_start":478,"line_end":478,"column_start":19,"column_end":27},"name":"data_end","qualname":"<RawTable<T>>::data_end","value":"fn (&self) -> NonNull<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns pointer to one past last element of data table.\n","sig":null,"attributes":[{"value":"/ Returns pointer to one past last element of data table.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":21979,"byte_end":22038,"line_start":476,"line_end":476,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":22574,"byte_end":22586,"line_start":491,"line_end":491,"column_start":19,"column_end":31},"name":"bucket_index","qualname":"<RawTable<T>>::bucket_index","value":"fn (&self, bucket: &Bucket<T>) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the index of a bucket from a `Bucket`.\n","sig":null,"attributes":[{"value":"/ Returns the index of a bucket from a `Bucket`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":22456,"byte_end":22506,"line_start":489,"line_end":489,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":23045,"byte_end":23051,"line_start":504,"line_end":504,"column_start":19,"column_end":25},"name":"bucket","qualname":"<RawTable<T>>::bucket","value":"fn (&self, index: usize) -> Bucket<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pointer to an element in the table.\n","sig":null,"attributes":[{"value":"/ Returns a pointer to an element in the table.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":22928,"byte_end":22977,"line_start":502,"line_end":502,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":23447,"byte_end":23460,"line_start":513,"line_end":513,"column_start":19,"column_end":32},"name":"erase_no_drop","qualname":"<RawTable<T>>::erase_no_drop","value":"fn (&mut self, item: &Bucket<T>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Erases an element from the table without dropping it.\n","sig":null,"attributes":[{"value":"/ Erases an element from the table without dropping it.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":23249,"byte_end":23306,"line_start":510,"line_end":510,"column_start":5,"column_end":62}},{"value":"deprecated(since = \"0.8.1\", note = \"use erase or remove instead\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":23360,"byte_end":23428,"line_start":512,"line_end":512,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":24790,"byte_end":24795,"line_start":542,"line_end":542,"column_start":19,"column_end":24},"name":"erase","qualname":"<RawTable<T>>::erase","value":"fn (&mut self, item: Bucket<T>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Erases an element from the table, dropping it in place.\n","sig":null,"attributes":[{"value":"/ Erases an element from the table, dropping it in place.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":24593,"byte_end":24652,"line_start":538,"line_end":538,"column_start":5,"column_end":64}},{"value":"allow(clippy :: needless_pass_by_value)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":24706,"byte_end":24746,"line_start":540,"line_end":540,"column_start":5,"column_end":45}},{"value":"allow(deprecated)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":24751,"byte_end":24771,"line_start":541,"line_end":541,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":25157,"byte_end":25163,"line_start":552,"line_end":552,"column_start":19,"column_end":25},"name":"remove","qualname":"<RawTable<T>>::remove","value":"fn (&mut self, item: Bucket<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":" Removes an element from the table, returning it.\n","sig":null,"attributes":[{"value":"/ Removes an element from the table, returning it.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":24967,"byte_end":25019,"line_start":548,"line_end":548,"column_start":5,"column_end":57}},{"value":"allow(clippy :: needless_pass_by_value)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":25073,"byte_end":25113,"line_start":550,"line_end":550,"column_start":5,"column_end":45}},{"value":"allow(deprecated)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":25118,"byte_end":25138,"line_start":551,"line_end":551,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":29056,"byte_end":29069,"line_start":639,"line_end":639,"column_start":12,"column_end":25},"name":"clear_no_drop","qualname":"<RawTable<T>>::clear_no_drop","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Marks all table buckets as empty without dropping their contents.\n","sig":null,"attributes":[{"value":"/ Marks all table buckets as empty without dropping their contents.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":28926,"byte_end":28995,"line_start":637,"line_end":637,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":29481,"byte_end":29486,"line_start":651,"line_end":651,"column_start":12,"column_end":17},"name":"clear","qualname":"<RawTable<T>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Removes all elements from the table without freeing the backing memory.\n","sig":null,"attributes":[{"value":"/ Removes all elements from the table without freeing the backing memory.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":29345,"byte_end":29420,"line_start":649,"line_end":649,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":29971,"byte_end":29980,"line_start":666,"line_end":666,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<RawTable<T>>::shrink_to","value":"fn (&mut self, min_size: usize, hasher: impl Fn(&T) -> u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the table to fit `max(self.len(), min_size)` elements.\n","sig":null,"attributes":[{"value":"/ Shrinks the table to fit `max(self.len(), min_size)` elements.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":29844,"byte_end":29910,"line_start":664,"line_end":664,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":31439,"byte_end":31446,"line_start":704,"line_end":704,"column_start":12,"column_end":19},"name":"reserve","qualname":"<RawTable<T>>::reserve","value":"fn (&mut self, additional: usize, hasher: impl Fn(&T) -> u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Ensures that at least `additional` items can be inserted into the table\n without reallocation.\n","sig":null,"attributes":[{"value":"/ Ensures that at least `additional` items can be inserted into the table","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":31273,"byte_end":31348,"line_start":701,"line_end":701,"column_start":5,"column_end":80}},{"value":"/ without reallocation.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":31353,"byte_end":31378,"line_start":702,"line_end":702,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":32026,"byte_end":32037,"line_start":719,"line_end":719,"column_start":12,"column_end":23},"name":"try_reserve","qualname":"<RawTable<T>>::try_reserve","value":"fn (&mut self, additional: usize, hasher: impl Fn(&T) -> u64) -> Result<(), TryReserveError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to ensure that at least `additional` items can be inserted into\n the table without reallocation.\n","sig":null,"attributes":[{"value":"/ Tries to ensure that at least `additional` items can be inserted into","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":31852,"byte_end":31925,"line_start":716,"line_end":716,"column_start":5,"column_end":78}},{"value":"/ the table without reallocation.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":31930,"byte_end":31965,"line_start":717,"line_end":717,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":40463,"byte_end":40469,"line_start":917,"line_end":917,"column_start":12,"column_end":18},"name":"insert","qualname":"<RawTable<T>>::insert","value":"fn (&mut self, hash: u64, value: T, hasher: impl Fn(&T) -> u64) -> Bucket<T>","parent":null,"children":[],"decl_id":null,"docs":" Inserts a new element into the table.","sig":null,"attributes":[{"value":"/ Inserts a new element into the table.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":40275,"byte_end":40316,"line_start":913,"line_end":913,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":40321,"byte_end":40324,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/ This does not check if the given element already exists in the table.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":40329,"byte_end":40402,"line_start":915,"line_end":915,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":41696,"byte_end":41710,"line_start":946,"line_end":946,"column_start":12,"column_end":26},"name":"insert_no_grow","qualname":"<RawTable<T>>::insert_no_grow","value":"fn (&mut self, hash: u64, value: T) -> Bucket<T>","parent":null,"children":[],"decl_id":null,"docs":" Inserts a new element into the table, without growing the table.","sig":null,"attributes":[{"value":"/ Inserts a new element into the table, without growing the table.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":41333,"byte_end":41401,"line_start":939,"line_end":939,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":41406,"byte_end":41409,"line_start":940,"line_end":940,"column_start":5,"column_end":8}},{"value":"/ There must be enough space in the table to insert the new element.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":41414,"byte_end":41484,"line_start":941,"line_end":941,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":41489,"byte_end":41492,"line_start":942,"line_end":942,"column_start":5,"column_end":8}},{"value":"/ This does not check if the given element already exists in the table.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":41497,"byte_end":41570,"line_start":943,"line_end":943,"column_start":5,"column_end":78}},{"value":"cfg(any(feature = \"raw\", feature = \"rustc-internal-api\"))","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":41624,"byte_end":41684,"line_start":945,"line_end":945,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":42619,"byte_end":42638,"line_start":970,"line_end":970,"column_start":19,"column_end":38},"name":"replace_bucket_with","qualname":"<RawTable<T>>::replace_bucket_with","value":"fn <F> (&mut self, bucket: Bucket<T>, f: F) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Temporary removes a bucket, applying the given function to the removed\n element and optionally put back the returned value in the same bucket.","sig":null,"attributes":[{"value":"/ Temporary removes a bucket, applying the given function to the removed","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":42249,"byte_end":42323,"line_start":963,"line_end":963,"column_start":5,"column_end":79}},{"value":"/ element and optionally put back the returned value in the same bucket.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":42328,"byte_end":42402,"line_start":964,"line_end":964,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":42407,"byte_end":42410,"line_start":965,"line_end":965,"column_start":5,"column_end":8}},{"value":"/ Returns `true` if the bucket still contains an element","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":42415,"byte_end":42473,"line_start":966,"line_end":966,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":42478,"byte_end":42481,"line_start":967,"line_end":967,"column_start":5,"column_end":8}},{"value":"/ This does not check if the given bucket is actually occupied.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":42486,"byte_end":42551,"line_start":968,"line_end":968,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":43308,"byte_end":43312,"line_start":992,"line_end":992,"column_start":12,"column_end":16},"name":"find","qualname":"<RawTable<T>>::find","value":"fn (&self, hash: u64, mut eq: impl FnMut(&T) -> bool) -> Option<Bucket<T>>","parent":null,"children":[],"decl_id":null,"docs":" Searches for an element in the table.\n","sig":null,"attributes":[{"value":"/ Searches for an element in the table.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":43241,"byte_end":43282,"line_start":990,"line_end":990,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":43287,"byte_end":43296,"line_start":991,"line_end":991,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":43926,"byte_end":43934,"line_start":1009,"line_end":1009,"column_start":12,"column_end":20},"name":"capacity","qualname":"<RawTable<T>>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements the map can hold without reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of elements the map can hold without reallocating.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":43643,"byte_end":43716,"line_start":1004,"line_end":1004,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":43721,"byte_end":43724,"line_start":1005,"line_end":1005,"column_start":5,"column_end":8}},{"value":"/ This number is a lower bound; the table might be able to hold","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":43729,"byte_end":43794,"line_start":1006,"line_end":1006,"column_start":5,"column_end":70}},{"value":"/ more, but is guaranteed to be able to hold at least this many.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":43799,"byte_end":43865,"line_start":1007,"line_end":1007,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":44111,"byte_end":44114,"line_start":1015,"line_end":1015,"column_start":12,"column_end":15},"name":"len","qualname":"<RawTable<T>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the table.\n","sig":null,"attributes":[{"value":"/ Returns the number of elements in the table.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":44002,"byte_end":44050,"line_start":1013,"line_end":1013,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":44271,"byte_end":44278,"line_start":1021,"line_end":1021,"column_start":12,"column_end":19},"name":"buckets","qualname":"<RawTable<T>>::buckets","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of buckets in the table.\n","sig":null,"attributes":[{"value":"/ Returns the number of buckets in the table.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":44163,"byte_end":44210,"line_start":1019,"line_end":1019,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":45099,"byte_end":45103,"line_start":1043,"line_end":1043,"column_start":19,"column_end":23},"name":"iter","qualname":"<RawTable<T>>::iter","value":"fn (&self) -> RawIter<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over every element in the table. It is up to\n the caller to ensure that the `RawTable` outlives the `RawIter`.\n Because we cannot make the `next` method unsafe on the `RawIter`\n struct, we have to make the `iter` method unsafe.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over every element in the table. It is up to","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":44759,"byte_end":44827,"line_start":1038,"line_end":1038,"column_start":5,"column_end":73}},{"value":"/ the caller to ensure that the `RawTable` outlives the `RawIter`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":44832,"byte_end":44900,"line_start":1039,"line_end":1039,"column_start":5,"column_end":73}},{"value":"/ Because we cannot make the `next` method unsafe on the `RawIter`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":44905,"byte_end":44973,"line_start":1040,"line_end":1040,"column_start":5,"column_end":73}},{"value":"/ struct, we have to make the `iter` method unsafe.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":44978,"byte_end":45031,"line_start":1041,"line_end":1041,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":45808,"byte_end":45817,"line_start":1059,"line_end":1059,"column_start":19,"column_end":28},"name":"iter_hash","qualname":"<RawTable<T>>::iter_hash","value":"fn (&self, hash: u64) -> RawIterHash<'_, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over occupied buckets that could match a given hash.","sig":null,"attributes":[{"value":"/ Returns an iterator over occupied buckets that could match a given hash.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":45340,"byte_end":45416,"line_start":1051,"line_end":1051,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":45421,"byte_end":45424,"line_start":1052,"line_end":1052,"column_start":5,"column_end":8}},{"value":"/ In rare cases, the iterator may return a bucket with a different hash.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":45429,"byte_end":45503,"line_start":1053,"line_end":1053,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":45508,"byte_end":45511,"line_start":1054,"line_end":1054,"column_start":5,"column_end":8}},{"value":"/ It is up to the caller to ensure that the `RawTable` outlives the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":45516,"byte_end":45585,"line_start":1055,"line_end":1055,"column_start":5,"column_end":74}},{"value":"/ `RawIterHash`. Because we cannot make the `next` method unsafe on the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":45590,"byte_end":45663,"line_start":1056,"line_end":1056,"column_start":5,"column_end":78}},{"value":"/ `RawIterHash` struct, we have to make the `iter_hash` method unsafe.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":45668,"byte_end":45740,"line_start":1057,"line_end":1057,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":46297,"byte_end":46302,"line_start":1070,"line_end":1070,"column_start":19,"column_end":24},"name":"drain","qualname":"<RawTable<T>>::drain","value":"fn (&mut self) -> RawDrain<'_, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator which removes all elements from the table without\n freeing the memory.","sig":null,"attributes":[{"value":"/ Returns an iterator which removes all elements from the table without","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":45908,"byte_end":45981,"line_start":1063,"line_end":1063,"column_start":5,"column_end":78}},{"value":"/ freeing the memory.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":45986,"byte_end":46009,"line_start":1064,"line_end":1064,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":46014,"byte_end":46017,"line_start":1065,"line_end":1065,"column_start":5,"column_end":8}},{"value":"/ It is up to the caller to ensure that the `RawTable` outlives the `RawDrain`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":46022,"byte_end":46103,"line_start":1066,"line_end":1066,"column_start":5,"column_end":86}},{"value":"/ Because we cannot make the `next` method unsafe on the `RawDrain`,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":46108,"byte_end":46178,"line_start":1067,"line_end":1067,"column_start":5,"column_end":75}},{"value":"/ we have to make the `drain` method unsafe.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":46183,"byte_end":46229,"line_start":1068,"line_end":1068,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":46965,"byte_end":46980,"line_start":1085,"line_end":1085,"column_start":19,"column_end":34},"name":"drain_iter_from","qualname":"<RawTable<T>>::drain_iter_from","value":"fn (&mut self, iter: RawIter<T>) -> RawDrain<'_, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator which removes all elements from the table without\n freeing the memory.","sig":null,"attributes":[{"value":"/ Returns an iterator which removes all elements from the table without","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":46413,"byte_end":46486,"line_start":1075,"line_end":1075,"column_start":5,"column_end":78}},{"value":"/ freeing the memory.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":46491,"byte_end":46514,"line_start":1076,"line_end":1076,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":46519,"byte_end":46522,"line_start":1077,"line_end":1077,"column_start":5,"column_end":8}},{"value":"/ It is up to the caller to ensure that the `RawTable` outlives the `RawDrain`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":46527,"byte_end":46608,"line_start":1078,"line_end":1078,"column_start":5,"column_end":86}},{"value":"/ Because we cannot make the `next` method unsafe on the `RawDrain`,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":46613,"byte_end":46683,"line_start":1079,"line_end":1079,"column_start":5,"column_end":75}},{"value":"/ we have to make the `drain` method unsafe.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":46688,"byte_end":46734,"line_start":1080,"line_end":1080,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":46739,"byte_end":46742,"line_start":1081,"line_end":1081,"column_start":5,"column_end":8}},{"value":"/ Iteration starts at the provided iterator's current location.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":46747,"byte_end":46812,"line_start":1082,"line_end":1082,"column_start":5,"column_end":70}},{"value":"/ You must ensure that the iterator covers all items that remain in the table.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":46817,"byte_end":46897,"line_start":1083,"line_end":1083,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":47772,"byte_end":47786,"line_start":1103,"line_end":1103,"column_start":19,"column_end":33},"name":"into_iter_from","qualname":"<RawTable<T>>::into_iter_from","value":"fn (self, iter: RawIter<T>) -> RawIntoIter<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator which consumes all elements from the table.","sig":null,"attributes":[{"value":"/ Returns an iterator which consumes all elements from the table.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":47288,"byte_end":47355,"line_start":1095,"line_end":1095,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":47360,"byte_end":47363,"line_start":1096,"line_end":1096,"column_start":5,"column_end":8}},{"value":"/ It is up to the caller to ensure that the `RawTable` outlives the `RawIntoIter`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":47368,"byte_end":47452,"line_start":1097,"line_end":1097,"column_start":5,"column_end":89}},{"value":"/ Because we cannot make the `next` method unsafe on the `RawIntoIter`,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":47457,"byte_end":47530,"line_start":1098,"line_end":1098,"column_start":5,"column_end":78}},{"value":"/ we have to make the `into_iter_from` method unsafe.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":47535,"byte_end":47590,"line_start":1099,"line_end":1099,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":47595,"byte_end":47598,"line_start":1100,"line_end":1100,"column_start":5,"column_end":8}},{"value":"/ Iteration starts at the provided iterator's current location.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":47603,"byte_end":47668,"line_start":1101,"line_end":1101,"column_start":5,"column_end":70}},{"value":"/ You must ensure that the iterator covers all items that remain in the table.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":47673,"byte_end":47753,"line_start":1102,"line_end":1102,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":53936,"byte_end":53958,"line_start":1273,"line_end":1273,"column_start":12,"column_end":34},"name":"clone_from_with_hasher","qualname":"<RawTable<T>>::clone_from_with_hasher","value":"fn (&mut self, source: &Self, hasher: impl Fn(&T) -> u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Variant of `clone_from` to use when a hasher is available.\n","sig":null,"attributes":[{"value":"/ Variant of `clone_from` to use when a hasher is available.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":53834,"byte_end":53896,"line_start":1271,"line_end":1271,"column_start":5,"column_end":67}},{"value":"cfg(feature = \"raw\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":53901,"byte_end":53924,"line_start":1272,"line_end":1272,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":213},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":62986,"byte_end":62993,"line_start":1517,"line_end":1517,"column_start":12,"column_end":19},"name":"RawIter","qualname":"::raw::inner::RawIter","value":"RawIter {  }","parent":null,"children":[{"krate":0,"index":215},{"krate":0,"index":216}],"decl_id":null,"docs":" Iterator which returns a raw pointer to every full bucket in the table.","sig":null,"attributes":[{"value":"/ Iterator which returns a raw pointer to every full bucket in the table.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":62179,"byte_end":62254,"line_start":1505,"line_end":1505,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":62255,"byte_end":62258,"line_start":1506,"line_end":1506,"column_start":1,"column_end":4}},{"value":"/ For maximum flexibility this iterator is not bound by a lifetime, but you","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":62259,"byte_end":62336,"line_start":1507,"line_end":1507,"column_start":1,"column_end":78}},{"value":"/ must observe several rules when using it:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":62337,"byte_end":62382,"line_start":1508,"line_end":1508,"column_start":1,"column_end":46}},{"value":"/ - You must not free the hash table while iterating (including via growing/shrinking).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":62383,"byte_end":62472,"line_start":1509,"line_end":1509,"column_start":1,"column_end":90}},{"value":"/ - It is fine to erase a bucket that has been yielded by the iterator.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":62473,"byte_end":62546,"line_start":1510,"line_end":1510,"column_start":1,"column_end":74}},{"value":"/ - Erasing a bucket that has not yet been yielded by the iterator may still","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":62547,"byte_end":62625,"line_start":1511,"line_end":1511,"column_start":1,"column_end":79}},{"value":"/   result in the iterator yielding that bucket (unless `reflect_remove` is called).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":62626,"byte_end":62712,"line_start":1512,"line_end":1512,"column_start":1,"column_end":87}},{"value":"/ - It is unspecified whether an element inserted after the iterator was","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":62713,"byte_end":62787,"line_start":1513,"line_end":1513,"column_start":1,"column_end":75}},{"value":"/   created will be yielded by that iterator (unless `reflect_insert` is called).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":62788,"byte_end":62871,"line_start":1514,"line_end":1514,"column_start":1,"column_end":84}},{"value":"/ - The order in which the iterator yields bucket is unspecified and may","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":62872,"byte_end":62946,"line_start":1515,"line_end":1515,"column_start":1,"column_end":75}},{"value":"/   change in the future.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":62947,"byte_end":62974,"line_start":1516,"line_end":1516,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":63536,"byte_end":63550,"line_start":1531,"line_end":1531,"column_start":12,"column_end":26},"name":"reflect_remove","qualname":"<RawIter<T>>::reflect_remove","value":"fn (&mut self, b: &Bucket<T>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Refresh the iterator so that it reflects a removal from the given bucket.","sig":null,"attributes":[{"value":"/ Refresh the iterator so that it reflects a removal from the given bucket.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":63083,"byte_end":63160,"line_start":1523,"line_end":1523,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":63165,"byte_end":63168,"line_start":1524,"line_end":1524,"column_start":5,"column_end":8}},{"value":"/ For the iterator to remain valid, this method must be called once","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":63173,"byte_end":63242,"line_start":1525,"line_end":1525,"column_start":5,"column_end":74}},{"value":"/ for each removed bucket before `next` is called again.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":63247,"byte_end":63305,"line_start":1526,"line_end":1526,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":63310,"byte_end":63313,"line_start":1527,"line_end":1527,"column_start":5,"column_end":8}},{"value":"/ This method should be called _before_ the removal is made. It is not necessary to call this","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":63318,"byte_end":63413,"line_start":1528,"line_end":1528,"column_start":5,"column_end":100}},{"value":"/ method if you are removing an item that this iterator yielded in the past.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":63418,"byte_end":63496,"line_start":1529,"line_end":1529,"column_start":5,"column_end":83}},{"value":"cfg(feature = \"raw\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":63501,"byte_end":63524,"line_start":1530,"line_end":1530,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":64136,"byte_end":64150,"line_start":1545,"line_end":1545,"column_start":12,"column_end":26},"name":"reflect_insert","qualname":"<RawIter<T>>::reflect_insert","value":"fn (&mut self, b: &Bucket<T>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Refresh the iterator so that it reflects an insertion into the given bucket.","sig":null,"attributes":[{"value":"/ Refresh the iterator so that it reflects an insertion into the given bucket.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":63634,"byte_end":63714,"line_start":1535,"line_end":1535,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":63719,"byte_end":63722,"line_start":1536,"line_end":1536,"column_start":5,"column_end":8}},{"value":"/ For the iterator to remain valid, this method must be called once","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":63727,"byte_end":63796,"line_start":1537,"line_end":1537,"column_start":5,"column_end":74}},{"value":"/ for each insert before `next` is called again.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":63801,"byte_end":63851,"line_start":1538,"line_end":1538,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":63856,"byte_end":63859,"line_start":1539,"line_end":1539,"column_start":5,"column_end":8}},{"value":"/ This method does not guarantee that an insertion of a bucket witha greater","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":63864,"byte_end":63942,"line_start":1540,"line_end":1540,"column_start":5,"column_end":83}},{"value":"/ index than the last one yielded will be reflected in the iterator.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":63947,"byte_end":64017,"line_start":1541,"line_end":1541,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":64022,"byte_end":64025,"line_start":1542,"line_end":1542,"column_start":5,"column_end":8}},{"value":"/ This method should be called _after_ the given insert is made.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":64030,"byte_end":64096,"line_start":1543,"line_end":1543,"column_start":5,"column_end":71}},{"value":"cfg(feature = \"raw\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":64101,"byte_end":64124,"line_start":1544,"line_end":1544,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":234},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":70043,"byte_end":70054,"line_start":1677,"line_end":1677,"column_start":12,"column_end":23},"name":"RawIntoIter","qualname":"::raw::inner::RawIntoIter","value":"RawIntoIter {  }","parent":null,"children":[{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238}],"decl_id":null,"docs":" Iterator which consumes a table and returns elements.\n","sig":null,"attributes":[{"value":"/ Iterator which consumes a table and returns elements.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":69974,"byte_end":70031,"line_start":1676,"line_end":1676,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":70240,"byte_end":70244,"line_start":1685,"line_end":1685,"column_start":12,"column_end":16},"name":"iter","qualname":"<RawIntoIter<T>>::iter","value":"fn (&self) -> RawIter<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":258},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":72055,"byte_end":72063,"line_start":1750,"line_end":1750,"column_start":12,"column_end":20},"name":"RawDrain","qualname":"::raw::inner::RawDrain","value":"RawDrain {  }","parent":null,"children":[{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264}],"decl_id":null,"docs":" Iterator which consumes elements without freeing the table storage.\n","sig":null,"attributes":[{"value":"/ Iterator which consumes elements without freeing the table storage.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":71972,"byte_end":72043,"line_start":1749,"line_end":1749,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":72582,"byte_end":72586,"line_start":1766,"line_end":1766,"column_start":12,"column_end":16},"name":"iter","qualname":"<RawDrain>::iter","value":"fn (&self) -> RawIter<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":284},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":74135,"byte_end":74146,"line_start":1820,"line_end":1820,"column_start":12,"column_end":23},"name":"RawIterHash","qualname":"::raw::inner::RawIterHash","value":"RawIterHash {  }","parent":null,"children":[{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292}],"decl_id":null,"docs":" Iterator over occupied buckets that could match a given hash.","sig":null,"attributes":[{"value":"/ Iterator over occupied buckets that could match a given hash.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":73979,"byte_end":74044,"line_start":1817,"line_end":1817,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":74045,"byte_end":74048,"line_start":1818,"line_end":1818,"column_start":1,"column_end":4}},{"value":"/ In rare cases, the iterator may return a bucket with a different hash.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":74049,"byte_end":74123,"line_start":1819,"line_end":1819,"column_start":1,"column_end":75}}]},{"kind":"Enum","id":{"krate":0,"index":326},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":80344,"byte_end":80362,"line_start":17,"line_end":17,"column_start":10,"column_end":28},"name":"DefaultHashBuilder","qualname":"::map::DefaultHashBuilder","value":"DefaultHashBuilder::{}","parent":null,"children":[],"decl_id":null,"docs":" Dummy default hasher for `HashMap`.\n","sig":null,"attributes":[{"value":"/ Dummy default hasher for `HashMap`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":80264,"byte_end":80303,"line_start":15,"line_end":15,"column_start":1,"column_end":40}},{"value":"cfg(not(feature = \"ahash\"))","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":80304,"byte_end":80334,"line_start":16,"line_end":16,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":327},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":86633,"byte_end":86640,"line_start":188,"line_end":188,"column_start":12,"column_end":19},"name":"HashMap","qualname":"::map::HashMap","value":"HashMap {  }","parent":null,"children":[{"krate":0,"index":331},{"krate":0,"index":332}],"decl_id":null,"docs":" A hash map implemented with quadratic probing and SIMD lookup.","sig":null,"attributes":[{"value":"/ A hash map implemented with quadratic probing and SIMD lookup.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":80367,"byte_end":80433,"line_start":19,"line_end":19,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":80434,"byte_end":80437,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The default hashing algorithm is currently [`AHash`], though this is","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":80438,"byte_end":80510,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ subject to change at any point in the future. This hash function is very","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":80511,"byte_end":80587,"line_start":22,"line_end":22,"column_start":1,"column_end":77}},{"value":"/ fast for all types of keys, but this algorithm will typically *not* protect","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":80588,"byte_end":80667,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ against attacks such as HashDoS.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":80668,"byte_end":80704,"line_start":24,"line_end":24,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":80705,"byte_end":80708,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ The hashing algorithm can be replaced on a per-`HashMap` basis using the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":80709,"byte_end":80785,"line_start":26,"line_end":26,"column_start":1,"column_end":77}},{"value":"/ [`default`], [`with_hasher`], and [`with_capacity_and_hasher`] methods. Many","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":80786,"byte_end":80866,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/ alternative algorithms are available on crates.io, such as the [`fnv`] crate.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":80867,"byte_end":80948,"line_start":28,"line_end":28,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":80949,"byte_end":80952,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ It is required that the keys implement the [`Eq`] and [`Hash`] traits, although","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":80953,"byte_end":81036,"line_start":30,"line_end":30,"column_start":1,"column_end":84}},{"value":"/ this can frequently be achieved by using `#[derive(PartialEq, Eq, Hash)]`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":81037,"byte_end":81115,"line_start":31,"line_end":31,"column_start":1,"column_end":79}},{"value":"/ If you implement these yourself, it is important that the following","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":81116,"byte_end":81187,"line_start":32,"line_end":32,"column_start":1,"column_end":72}},{"value":"/ property holds:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":81188,"byte_end":81207,"line_start":33,"line_end":33,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":81208,"byte_end":81211,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":81212,"byte_end":81223,"line_start":35,"line_end":35,"column_start":1,"column_end":12}},{"value":"/ k1 == k2 -> hash(k1) == hash(k2)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":81224,"byte_end":81260,"line_start":36,"line_end":36,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":81261,"byte_end":81268,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":81269,"byte_end":81272,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ In other words, if two keys are equal, their hashes must be equal.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":81273,"byte_end":81343,"line_start":39,"line_end":39,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":81344,"byte_end":81347,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ It is a logic error for a key to be modified in such a way that the key's","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":81348,"byte_end":81425,"line_start":41,"line_end":41,"column_start":1,"column_end":78}},{"value":"/ hash, as determined by the [`Hash`] trait, or its equality, as determined by","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":81426,"byte_end":81506,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/ the [`Eq`] trait, changes while it is in the map. This is normally only","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":81507,"byte_end":81582,"line_start":43,"line_end":43,"column_start":1,"column_end":76}},{"value":"/ possible through [`Cell`], [`RefCell`], global state, I/O, or unsafe code.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":81583,"byte_end":81661,"line_start":44,"line_end":44,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":81662,"byte_end":81665,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ It is also a logic error for the [`Hash`] implementation of a key to panic.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":81666,"byte_end":81745,"line_start":46,"line_end":46,"column_start":1,"column_end":80}},{"value":"/ This is generally only possible if the trait is implemented manually. If a","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":81746,"byte_end":81824,"line_start":47,"line_end":47,"column_start":1,"column_end":79}},{"value":"/ panic does occur then the contents of the `HashMap` may become corrupted and","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":81825,"byte_end":81905,"line_start":48,"line_end":48,"column_start":1,"column_end":81}},{"value":"/ some items may be dropped from the table.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":81906,"byte_end":81951,"line_start":49,"line_end":49,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":81952,"byte_end":81955,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":81956,"byte_end":81970,"line_start":51,"line_end":51,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":81971,"byte_end":81974,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":81975,"byte_end":81982,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":81983,"byte_end":82010,"line_start":54,"line_end":54,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":82011,"byte_end":82014,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ // Type inference lets us omit an explicit type signature (which","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":82015,"byte_end":82083,"line_start":56,"line_end":56,"column_start":1,"column_end":69}},{"value":"/ // would be `HashMap<String, String>` in this example).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":82084,"byte_end":82143,"line_start":57,"line_end":57,"column_start":1,"column_end":60}},{"value":"/ let mut book_reviews = HashMap::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":82144,"byte_end":82186,"line_start":58,"line_end":58,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":82187,"byte_end":82190,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ // Review some books.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":82191,"byte_end":82216,"line_start":60,"line_end":60,"column_start":1,"column_end":26}},{"value":"/ book_reviews.insert(","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":82217,"byte_end":82241,"line_start":61,"line_end":61,"column_start":1,"column_end":25}},{"value":"/     \"Adventures of Huckleberry Finn\".to_string(),","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":82242,"byte_end":82295,"line_start":62,"line_end":62,"column_start":1,"column_end":54}},{"value":"/     \"My favorite book.\".to_string(),","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":82296,"byte_end":82336,"line_start":63,"line_end":63,"column_start":1,"column_end":41}},{"value":"/ );","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":82337,"byte_end":82343,"line_start":64,"line_end":64,"column_start":1,"column_end":7}},{"value":"/ book_reviews.insert(","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":82344,"byte_end":82368,"line_start":65,"line_end":65,"column_start":1,"column_end":25}},{"value":"/     \"Grimms' Fairy Tales\".to_string(),","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":82369,"byte_end":82411,"line_start":66,"line_end":66,"column_start":1,"column_end":43}},{"value":"/     \"Masterpiece.\".to_string(),","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":82412,"byte_end":82447,"line_start":67,"line_end":67,"column_start":1,"column_end":36}},{"value":"/ );","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":82448,"byte_end":82454,"line_start":68,"line_end":68,"column_start":1,"column_end":7}},{"value":"/ book_reviews.insert(","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":82455,"byte_end":82479,"line_start":69,"line_end":69,"column_start":1,"column_end":25}},{"value":"/     \"Pride and Prejudice\".to_string(),","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":82480,"byte_end":82522,"line_start":70,"line_end":70,"column_start":1,"column_end":43}},{"value":"/     \"Very enjoyable.\".to_string(),","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":82523,"byte_end":82561,"line_start":71,"line_end":71,"column_start":1,"column_end":39}},{"value":"/ );","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":82562,"byte_end":82568,"line_start":72,"line_end":72,"column_start":1,"column_end":7}},{"value":"/ book_reviews.insert(","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":82569,"byte_end":82593,"line_start":73,"line_end":73,"column_start":1,"column_end":25}},{"value":"/     \"The Adventures of Sherlock Holmes\".to_string(),","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":82594,"byte_end":82650,"line_start":74,"line_end":74,"column_start":1,"column_end":57}},{"value":"/     \"Eye lyked it alot.\".to_string(),","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":82651,"byte_end":82692,"line_start":75,"line_end":75,"column_start":1,"column_end":42}},{"value":"/ );","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":82693,"byte_end":82699,"line_start":76,"line_end":76,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":82700,"byte_end":82703,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ // Check for a specific one.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":82704,"byte_end":82736,"line_start":78,"line_end":78,"column_start":1,"column_end":33}},{"value":"/ // When collections store owned values (String), they can still be","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":82737,"byte_end":82807,"line_start":79,"line_end":79,"column_start":1,"column_end":71}},{"value":"/ // queried using references (&str).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":82808,"byte_end":82847,"line_start":80,"line_end":80,"column_start":1,"column_end":40}},{"value":"/ if !book_reviews.contains_key(\"Les Misérables\") {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":82848,"byte_end":82902,"line_start":81,"line_end":81,"column_start":1,"column_end":54}},{"value":"/     println!(\"We've got {} reviews, but Les Misérables ain't one.\",","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":82903,"byte_end":82975,"line_start":82,"line_end":82,"column_start":1,"column_end":72}},{"value":"/              book_reviews.len());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":82976,"byte_end":83013,"line_start":83,"line_end":83,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":83014,"byte_end":83019,"line_start":84,"line_end":84,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":83020,"byte_end":83023,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ // oops, this review has a lot of spelling mistakes, let's delete it.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":83024,"byte_end":83097,"line_start":86,"line_end":86,"column_start":1,"column_end":74}},{"value":"/ book_reviews.remove(\"The Adventures of Sherlock Holmes\");","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":83098,"byte_end":83159,"line_start":87,"line_end":87,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":83160,"byte_end":83163,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ // Look up the values associated with some keys.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":83164,"byte_end":83216,"line_start":89,"line_end":89,"column_start":1,"column_end":53}},{"value":"/ let to_find = [\"Pride and Prejudice\", \"Alice's Adventure in Wonderland\"];","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":83217,"byte_end":83294,"line_start":90,"line_end":90,"column_start":1,"column_end":78}},{"value":"/ for &book in &to_find {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":83295,"byte_end":83322,"line_start":91,"line_end":91,"column_start":1,"column_end":28}},{"value":"/     match book_reviews.get(book) {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":83323,"byte_end":83361,"line_start":92,"line_end":92,"column_start":1,"column_end":39}},{"value":"/         Some(review) => println!(\"{}: {}\", book, review),","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":83362,"byte_end":83423,"line_start":93,"line_end":93,"column_start":1,"column_end":62}},{"value":"/         None => println!(\"{} is unreviewed.\", book)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":83424,"byte_end":83479,"line_start":94,"line_end":94,"column_start":1,"column_end":56}},{"value":"/     }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":83480,"byte_end":83489,"line_start":95,"line_end":95,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":83490,"byte_end":83495,"line_start":96,"line_end":96,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":83496,"byte_end":83499,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ // Look up the value for a key (will panic if the key is not found).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":83500,"byte_end":83572,"line_start":98,"line_end":98,"column_start":1,"column_end":73}},{"value":"/ println!(\"Review for Jane: {}\", book_reviews[\"Pride and Prejudice\"]);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":83573,"byte_end":83646,"line_start":99,"line_end":99,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":83647,"byte_end":83650,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ // Iterate over everything.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":83651,"byte_end":83682,"line_start":101,"line_end":101,"column_start":1,"column_end":32}},{"value":"/ for (book, review) in &book_reviews {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":83683,"byte_end":83724,"line_start":102,"line_end":102,"column_start":1,"column_end":42}},{"value":"/     println!(\"{}: \\\"{}\\\"\", book, review);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":83725,"byte_end":83770,"line_start":103,"line_end":103,"column_start":1,"column_end":46}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":83771,"byte_end":83776,"line_start":104,"line_end":104,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":83777,"byte_end":83784,"line_start":105,"line_end":105,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":83785,"byte_end":83788,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ `HashMap` also implements an [`Entry API`](#method.entry), which allows","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":83789,"byte_end":83864,"line_start":107,"line_end":107,"column_start":1,"column_end":76}},{"value":"/ for more complex methods of getting, setting, updating and removing keys and","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":83865,"byte_end":83945,"line_start":108,"line_end":108,"column_start":1,"column_end":81}},{"value":"/ their values:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":83946,"byte_end":83963,"line_start":109,"line_end":109,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":83964,"byte_end":83967,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":83968,"byte_end":83975,"line_start":111,"line_end":111,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":83976,"byte_end":84003,"line_start":112,"line_end":112,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":84004,"byte_end":84007,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ // type inference lets us omit an explicit type signature (which","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":84008,"byte_end":84076,"line_start":114,"line_end":114,"column_start":1,"column_end":69}},{"value":"/ // would be `HashMap<&str, u8>` in this example).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":84077,"byte_end":84130,"line_start":115,"line_end":115,"column_start":1,"column_end":54}},{"value":"/ let mut player_stats = HashMap::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":84131,"byte_end":84173,"line_start":116,"line_end":116,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":84174,"byte_end":84177,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ fn random_stat_buff() -> u8 {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":84178,"byte_end":84211,"line_start":118,"line_end":118,"column_start":1,"column_end":34}},{"value":"/     // could actually return some random value here - let's just return","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":84212,"byte_end":84287,"line_start":119,"line_end":119,"column_start":1,"column_end":76}},{"value":"/     // some fixed value for now","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":84288,"byte_end":84323,"line_start":120,"line_end":120,"column_start":1,"column_end":36}},{"value":"/     42","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":84324,"byte_end":84334,"line_start":121,"line_end":121,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":84335,"byte_end":84340,"line_start":122,"line_end":122,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":84341,"byte_end":84344,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ // insert a key only if it doesn't already exist","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":84345,"byte_end":84397,"line_start":124,"line_end":124,"column_start":1,"column_end":53}},{"value":"/ player_stats.entry(\"health\").or_insert(100);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":84398,"byte_end":84446,"line_start":125,"line_end":125,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":84447,"byte_end":84450,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ // insert a key using a function that provides a new value only if it","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":84451,"byte_end":84524,"line_start":127,"line_end":127,"column_start":1,"column_end":74}},{"value":"/ // doesn't already exist","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":84525,"byte_end":84553,"line_start":128,"line_end":128,"column_start":1,"column_end":29}},{"value":"/ player_stats.entry(\"defence\").or_insert_with(random_stat_buff);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":84554,"byte_end":84621,"line_start":129,"line_end":129,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":84622,"byte_end":84625,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ // update a key, guarding against the key possibly not being set","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":84626,"byte_end":84694,"line_start":131,"line_end":131,"column_start":1,"column_end":69}},{"value":"/ let stat = player_stats.entry(\"attack\").or_insert(100);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":84695,"byte_end":84754,"line_start":132,"line_end":132,"column_start":1,"column_end":60}},{"value":"/ *stat += random_stat_buff();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":84755,"byte_end":84787,"line_start":133,"line_end":133,"column_start":1,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":84788,"byte_end":84795,"line_start":134,"line_end":134,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":84796,"byte_end":84799,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ The easiest way to use `HashMap` with a custom key type is to derive [`Eq`] and [`Hash`].","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":84800,"byte_end":84893,"line_start":136,"line_end":136,"column_start":1,"column_end":94}},{"value":"/ We must also derive [`PartialEq`].","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":84894,"byte_end":84932,"line_start":137,"line_end":137,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":84933,"byte_end":84936,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":84937,"byte_end":84996,"line_start":139,"line_end":139,"column_start":1,"column_end":60}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":84997,"byte_end":85061,"line_start":140,"line_end":140,"column_start":1,"column_end":65}},{"value":"/ [`PartialEq`]: https://doc.rust-lang.org/std/cmp/trait.PartialEq.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":85062,"byte_end":85135,"line_start":141,"line_end":141,"column_start":1,"column_end":74}},{"value":"/ [`RefCell`]: https://doc.rust-lang.org/std/cell/struct.RefCell.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":85136,"byte_end":85207,"line_start":142,"line_end":142,"column_start":1,"column_end":72}},{"value":"/ [`Cell`]: https://doc.rust-lang.org/std/cell/struct.Cell.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":85208,"byte_end":85273,"line_start":143,"line_end":143,"column_start":1,"column_end":66}},{"value":"/ [`default`]: #method.default","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":85274,"byte_end":85306,"line_start":144,"line_end":144,"column_start":1,"column_end":33}},{"value":"/ [`with_hasher`]: #method.with_hasher","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":85307,"byte_end":85347,"line_start":145,"line_end":145,"column_start":1,"column_end":41}},{"value":"/ [`with_capacity_and_hasher`]: #method.with_capacity_and_hasher","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":85348,"byte_end":85414,"line_start":146,"line_end":146,"column_start":1,"column_end":67}},{"value":"/ [`fnv`]: https://crates.io/crates/fnv","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":85415,"byte_end":85456,"line_start":147,"line_end":147,"column_start":1,"column_end":42}},{"value":"/ [`AHash`]: https://crates.io/crates/ahash","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":85457,"byte_end":85502,"line_start":148,"line_end":148,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":85503,"byte_end":85506,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":85507,"byte_end":85514,"line_start":150,"line_end":150,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":85515,"byte_end":85542,"line_start":151,"line_end":151,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":85543,"byte_end":85546,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ #[derive(Hash, Eq, PartialEq, Debug)]","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":85547,"byte_end":85588,"line_start":153,"line_end":153,"column_start":1,"column_end":42}},{"value":"/ struct Viking {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":85589,"byte_end":85608,"line_start":154,"line_end":154,"column_start":1,"column_end":20}},{"value":"/     name: String,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":85609,"byte_end":85630,"line_start":155,"line_end":155,"column_start":1,"column_end":22}},{"value":"/     country: String,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":85631,"byte_end":85655,"line_start":156,"line_end":156,"column_start":1,"column_end":25}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":85656,"byte_end":85661,"line_start":157,"line_end":157,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":85662,"byte_end":85665,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ impl Viking {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":85666,"byte_end":85683,"line_start":159,"line_end":159,"column_start":1,"column_end":18}},{"value":"/     /// Creates a new Viking.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":85684,"byte_end":85717,"line_start":160,"line_end":160,"column_start":1,"column_end":34}},{"value":"/     fn new(name: &str, country: &str) -> Viking {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":85718,"byte_end":85771,"line_start":161,"line_end":161,"column_start":1,"column_end":54}},{"value":"/         Viking { name: name.to_string(), country: country.to_string() }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":85772,"byte_end":85847,"line_start":162,"line_end":162,"column_start":1,"column_end":76}},{"value":"/     }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":85848,"byte_end":85857,"line_start":163,"line_end":163,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":85858,"byte_end":85863,"line_start":164,"line_end":164,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":85864,"byte_end":85867,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ // Use a HashMap to store the vikings' health points.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":85868,"byte_end":85925,"line_start":166,"line_end":166,"column_start":1,"column_end":58}},{"value":"/ let mut vikings = HashMap::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":85926,"byte_end":85963,"line_start":167,"line_end":167,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":85964,"byte_end":85967,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ vikings.insert(Viking::new(\"Einar\", \"Norway\"), 25);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":85968,"byte_end":86023,"line_start":169,"line_end":169,"column_start":1,"column_end":56}},{"value":"/ vikings.insert(Viking::new(\"Olaf\", \"Denmark\"), 24);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":86024,"byte_end":86079,"line_start":170,"line_end":170,"column_start":1,"column_end":56}},{"value":"/ vikings.insert(Viking::new(\"Harald\", \"Iceland\"), 12);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":86080,"byte_end":86137,"line_start":171,"line_end":171,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":86138,"byte_end":86141,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ // Use derived implementation to print the status of the vikings.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":86142,"byte_end":86211,"line_start":173,"line_end":173,"column_start":1,"column_end":70}},{"value":"/ for (viking, health) in &vikings {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":86212,"byte_end":86250,"line_start":174,"line_end":174,"column_start":1,"column_end":39}},{"value":"/     println!(\"{:?} has {} hp\", viking, health);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":86251,"byte_end":86302,"line_start":175,"line_end":175,"column_start":1,"column_end":52}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":86303,"byte_end":86308,"line_start":176,"line_end":176,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":86309,"byte_end":86316,"line_start":177,"line_end":177,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":86317,"byte_end":86320,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ A `HashMap` with fixed list of elements can be initialized from an array:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":86321,"byte_end":86398,"line_start":179,"line_end":179,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":86399,"byte_end":86402,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":86403,"byte_end":86410,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":86411,"byte_end":86438,"line_start":182,"line_end":182,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":86439,"byte_end":86442,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ let timber_resources: HashMap<&str, i32> = [(\"Norway\", 100), (\"Denmark\", 50), (\"Iceland\", 10)]","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":86443,"byte_end":86541,"line_start":184,"line_end":184,"column_start":1,"column_end":99}},{"value":"/     .iter().cloned().collect();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":86542,"byte_end":86577,"line_start":185,"line_end":185,"column_start":1,"column_end":36}},{"value":"/ // use the values stored in map","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":86578,"byte_end":86613,"line_start":186,"line_end":186,"column_start":1,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":86614,"byte_end":86621,"line_start":187,"line_end":187,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":89564,"byte_end":89575,"line_start":278,"line_end":278,"column_start":18,"column_end":29},"name":"with_hasher","qualname":"<HashMap<K, V, S>>::with_hasher","value":"fn (hash_builder: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashMap` which will use the given hash builder to hash\n keys.","sig":null,"attributes":[{"value":"/ Creates an empty `HashMap` which will use the given hash builder to hash","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":88557,"byte_end":88633,"line_start":252,"line_end":252,"column_start":5,"column_end":81}},{"value":"/ keys.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":88638,"byte_end":88647,"line_start":253,"line_end":253,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":88652,"byte_end":88655,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ The created map has the default initial capacity.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":88660,"byte_end":88713,"line_start":255,"line_end":255,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":88718,"byte_end":88721,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ Warning: `hash_builder` is normally randomly generated, and","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":88726,"byte_end":88789,"line_start":257,"line_end":257,"column_start":5,"column_end":68}},{"value":"/ is designed to allow HashMaps to be resistant to attacks that","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":88794,"byte_end":88859,"line_start":258,"line_end":258,"column_start":5,"column_end":70}},{"value":"/ cause many collisions and very poor performance. Setting it","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":88864,"byte_end":88927,"line_start":259,"line_end":259,"column_start":5,"column_end":68}},{"value":"/ manually using this function can expose a DoS attack vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":88932,"byte_end":88996,"line_start":260,"line_end":260,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":89001,"byte_end":89004,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ The `hash_builder` passed should implement the [`BuildHasher`] trait for","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":89009,"byte_end":89085,"line_start":262,"line_end":262,"column_start":5,"column_end":81}},{"value":"/ the HashMap to be useful, see its documentation for details.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":89090,"byte_end":89154,"line_start":263,"line_end":263,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":89159,"byte_end":89162,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":89167,"byte_end":89181,"line_start":265,"line_end":265,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":89186,"byte_end":89189,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":89194,"byte_end":89201,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":89206,"byte_end":89233,"line_start":268,"line_end":268,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::DefaultHashBuilder;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":89238,"byte_end":89286,"line_start":269,"line_end":269,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":89291,"byte_end":89294,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ let s = DefaultHashBuilder::default();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":89299,"byte_end":89341,"line_start":271,"line_end":271,"column_start":5,"column_end":47}},{"value":"/ let mut map = HashMap::with_hasher(s);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":89346,"byte_end":89388,"line_start":272,"line_end":272,"column_start":5,"column_end":47}},{"value":"/ map.insert(1, 2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":89393,"byte_end":89414,"line_start":273,"line_end":273,"column_start":5,"column_end":26}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":89419,"byte_end":89426,"line_start":274,"line_end":274,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":89431,"byte_end":89434,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ [`BuildHasher`]: ../../std/hash/trait.BuildHasher.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":89439,"byte_end":89497,"line_start":276,"line_end":276,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":347},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":90830,"byte_end":90854,"line_start":312,"line_end":312,"column_start":12,"column_end":36},"name":"with_capacity_and_hasher","qualname":"<HashMap<K, V, S>>::with_capacity_and_hasher","value":"fn (capacity: usize, hash_builder: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashMap` with the specified capacity, using `hash_builder`\n to hash the keys.","sig":null,"attributes":[{"value":"/ Creates an empty `HashMap` with the specified capacity, using `hash_builder`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":89701,"byte_end":89781,"line_start":285,"line_end":285,"column_start":5,"column_end":85}},{"value":"/ to hash the keys.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":89786,"byte_end":89807,"line_start":286,"line_end":286,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":89812,"byte_end":89815,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ The hash map will be able to hold at least `capacity` elements without","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":89820,"byte_end":89894,"line_start":288,"line_end":288,"column_start":5,"column_end":79}},{"value":"/ reallocating. If `capacity` is 0, the hash map will not allocate.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":89899,"byte_end":89968,"line_start":289,"line_end":289,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":89973,"byte_end":89976,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ Warning: `hash_builder` is normally randomly generated, and","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":89981,"byte_end":90044,"line_start":291,"line_end":291,"column_start":5,"column_end":68}},{"value":"/ is designed to allow HashMaps to be resistant to attacks that","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":90049,"byte_end":90114,"line_start":292,"line_end":292,"column_start":5,"column_end":70}},{"value":"/ cause many collisions and very poor performance. Setting it","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":90119,"byte_end":90182,"line_start":293,"line_end":293,"column_start":5,"column_end":68}},{"value":"/ manually using this function can expose a DoS attack vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":90187,"byte_end":90251,"line_start":294,"line_end":294,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":90256,"byte_end":90259,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ The `hash_builder` passed should implement the [`BuildHasher`] trait for","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":90264,"byte_end":90340,"line_start":296,"line_end":296,"column_start":5,"column_end":81}},{"value":"/ the HashMap to be useful, see its documentation for details.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":90345,"byte_end":90409,"line_start":297,"line_end":297,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":90414,"byte_end":90417,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":90422,"byte_end":90436,"line_start":299,"line_end":299,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":90441,"byte_end":90444,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":90449,"byte_end":90456,"line_start":301,"line_end":301,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":90461,"byte_end":90488,"line_start":302,"line_end":302,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::DefaultHashBuilder;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":90493,"byte_end":90541,"line_start":303,"line_end":303,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":90546,"byte_end":90549,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ let s = DefaultHashBuilder::default();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":90554,"byte_end":90596,"line_start":305,"line_end":305,"column_start":5,"column_end":47}},{"value":"/ let mut map = HashMap::with_capacity_and_hasher(10, s);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":90601,"byte_end":90660,"line_start":306,"line_end":306,"column_start":5,"column_end":64}},{"value":"/ map.insert(1, 2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":90665,"byte_end":90686,"line_start":307,"line_end":307,"column_start":5,"column_end":26}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":90691,"byte_end":90698,"line_start":308,"line_end":308,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":90703,"byte_end":90706,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ [`BuildHasher`]: ../../std/hash/trait.BuildHasher.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":90711,"byte_end":90769,"line_start":310,"line_end":310,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":91547,"byte_end":91553,"line_start":334,"line_end":334,"column_start":12,"column_end":18},"name":"hasher","qualname":"<HashMap<K, V, S>>::hasher","value":"fn (&self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the map's [`BuildHasher`].","sig":null,"attributes":[{"value":"/ Returns a reference to the map's [`BuildHasher`].","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":91015,"byte_end":91068,"line_start":319,"line_end":319,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":91073,"byte_end":91076,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ [`BuildHasher`]: https://doc.rust-lang.org/std/hash/trait.BuildHasher.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":91081,"byte_end":91159,"line_start":321,"line_end":321,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":91164,"byte_end":91167,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":91172,"byte_end":91186,"line_start":323,"line_end":323,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":91191,"byte_end":91194,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":91199,"byte_end":91206,"line_start":325,"line_end":325,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":91211,"byte_end":91238,"line_start":326,"line_end":326,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::DefaultHashBuilder;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":91243,"byte_end":91291,"line_start":327,"line_end":327,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":91296,"byte_end":91299,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ let hasher = DefaultHashBuilder::default();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":91304,"byte_end":91351,"line_start":329,"line_end":329,"column_start":5,"column_end":52}},{"value":"/ let map: HashMap<i32, i32> = HashMap::with_hasher(hasher);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":91356,"byte_end":91418,"line_start":330,"line_end":330,"column_start":5,"column_end":67}},{"value":"/ let hasher: &DefaultHashBuilder = map.hasher();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":91423,"byte_end":91474,"line_start":331,"line_end":331,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":91479,"byte_end":91486,"line_start":332,"line_end":332,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":92097,"byte_end":92105,"line_start":351,"line_end":351,"column_start":12,"column_end":20},"name":"capacity","qualname":"<HashMap<K, V, S>>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements the map can hold without reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of elements the map can hold without reallocating.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":91607,"byte_end":91680,"line_start":338,"line_end":338,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":91685,"byte_end":91688,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ This number is a lower bound; the `HashMap<K, V>` might be able to hold","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":91693,"byte_end":91768,"line_start":340,"line_end":340,"column_start":5,"column_end":80}},{"value":"/ more, but is guaranteed to be able to hold at least this many.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":91773,"byte_end":91839,"line_start":341,"line_end":341,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":91844,"byte_end":91847,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":91852,"byte_end":91866,"line_start":343,"line_end":343,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":91871,"byte_end":91874,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":91879,"byte_end":91886,"line_start":345,"line_end":345,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":91891,"byte_end":91918,"line_start":346,"line_end":346,"column_start":5,"column_end":32}},{"value":"/ let map: HashMap<i32, i32> = HashMap::with_capacity(100);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":91923,"byte_end":91984,"line_start":347,"line_end":347,"column_start":5,"column_end":66}},{"value":"/ assert!(map.capacity() >= 100);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":91989,"byte_end":92024,"line_start":348,"line_end":348,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":92029,"byte_end":92036,"line_start":349,"line_end":349,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":92629,"byte_end":92633,"line_start":373,"line_end":373,"column_start":12,"column_end":16},"name":"keys","qualname":"<HashMap<K, V, S>>::keys","value":"fn (&self) -> Keys<'_, K, V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all keys in arbitrary order.\n The iterator element type is `&'a K`.","sig":null,"attributes":[{"value":"/ An iterator visiting all keys in arbitrary order.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":92165,"byte_end":92218,"line_start":355,"line_end":355,"column_start":5,"column_end":58}},{"value":"/ The iterator element type is `&'a K`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":92223,"byte_end":92264,"line_start":356,"line_end":356,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":92269,"byte_end":92272,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":92277,"byte_end":92291,"line_start":358,"line_end":358,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":92296,"byte_end":92299,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":92304,"byte_end":92311,"line_start":360,"line_end":360,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":92316,"byte_end":92343,"line_start":361,"line_end":361,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":92348,"byte_end":92351,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":92356,"byte_end":92389,"line_start":363,"line_end":363,"column_start":5,"column_end":38}},{"value":"/ map.insert(\"a\", 1);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":92394,"byte_end":92417,"line_start":364,"line_end":364,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"b\", 2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":92422,"byte_end":92445,"line_start":365,"line_end":365,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"c\", 3);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":92450,"byte_end":92473,"line_start":366,"line_end":366,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":92478,"byte_end":92481,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ for key in map.keys() {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":92486,"byte_end":92513,"line_start":368,"line_end":368,"column_start":5,"column_end":32}},{"value":"/     println!(\"{}\", key);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":92518,"byte_end":92546,"line_start":369,"line_end":369,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":92551,"byte_end":92556,"line_start":370,"line_end":370,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":92561,"byte_end":92568,"line_start":371,"line_end":371,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":351},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":93176,"byte_end":93182,"line_start":395,"line_end":395,"column_start":12,"column_end":18},"name":"values","qualname":"<HashMap<K, V, S>>::values","value":"fn (&self) -> Values<'_, K, V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all values in arbitrary order.\n The iterator element type is `&'a V`.","sig":null,"attributes":[{"value":"/ An iterator visiting all values in arbitrary order.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":92708,"byte_end":92763,"line_start":377,"line_end":377,"column_start":5,"column_end":60}},{"value":"/ The iterator element type is `&'a V`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":92768,"byte_end":92809,"line_start":378,"line_end":378,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":92814,"byte_end":92817,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":92822,"byte_end":92836,"line_start":380,"line_end":380,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":92841,"byte_end":92844,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":92849,"byte_end":92856,"line_start":382,"line_end":382,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":92861,"byte_end":92888,"line_start":383,"line_end":383,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":92893,"byte_end":92896,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":92901,"byte_end":92934,"line_start":385,"line_end":385,"column_start":5,"column_end":38}},{"value":"/ map.insert(\"a\", 1);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":92939,"byte_end":92962,"line_start":386,"line_end":386,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"b\", 2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":92967,"byte_end":92990,"line_start":387,"line_end":387,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"c\", 3);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":92995,"byte_end":93018,"line_start":388,"line_end":388,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":93023,"byte_end":93026,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ for val in map.values() {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":93031,"byte_end":93060,"line_start":390,"line_end":390,"column_start":5,"column_end":34}},{"value":"/     println!(\"{}\", val);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":93065,"byte_end":93093,"line_start":391,"line_end":391,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":93098,"byte_end":93103,"line_start":392,"line_end":392,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":93108,"byte_end":93115,"line_start":393,"line_end":393,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":93835,"byte_end":93845,"line_start":422,"line_end":422,"column_start":12,"column_end":22},"name":"values_mut","qualname":"<HashMap<K, V, S>>::values_mut","value":"fn (&mut self) -> ValuesMut<'_, K, V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all values mutably in arbitrary order.\n The iterator element type is `&'a mut V`.","sig":null,"attributes":[{"value":"/ An iterator visiting all values mutably in arbitrary order.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":93261,"byte_end":93324,"line_start":399,"line_end":399,"column_start":5,"column_end":68}},{"value":"/ The iterator element type is `&'a mut V`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":93329,"byte_end":93374,"line_start":400,"line_end":400,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":93379,"byte_end":93382,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":93387,"byte_end":93401,"line_start":402,"line_end":402,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":93406,"byte_end":93409,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":93414,"byte_end":93421,"line_start":404,"line_end":404,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":93426,"byte_end":93453,"line_start":405,"line_end":405,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":93458,"byte_end":93461,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":93466,"byte_end":93499,"line_start":407,"line_end":407,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":93504,"byte_end":93507,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"a\", 1);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":93512,"byte_end":93535,"line_start":409,"line_end":409,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"b\", 2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":93540,"byte_end":93563,"line_start":410,"line_end":410,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"c\", 3);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":93568,"byte_end":93591,"line_start":411,"line_end":411,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":93596,"byte_end":93599,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ for val in map.values_mut() {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":93604,"byte_end":93637,"line_start":413,"line_end":413,"column_start":5,"column_end":38}},{"value":"/     *val = *val + 10;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":93642,"byte_end":93667,"line_start":414,"line_end":414,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":93672,"byte_end":93677,"line_start":415,"line_end":415,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":93682,"byte_end":93685,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ for val in map.values() {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":93690,"byte_end":93719,"line_start":417,"line_end":417,"column_start":5,"column_end":34}},{"value":"/     println!(\"{}\", val);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":93724,"byte_end":93752,"line_start":418,"line_end":418,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":93757,"byte_end":93762,"line_start":419,"line_end":419,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":93767,"byte_end":93774,"line_start":420,"line_end":420,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":353},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":94468,"byte_end":94472,"line_start":446,"line_end":446,"column_start":12,"column_end":16},"name":"iter","qualname":"<HashMap<K, V, S>>::iter","value":"fn (&self) -> Iter<'_, K, V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all key-value pairs in arbitrary order.\n The iterator element type is `(&'a K, &'a V)`.","sig":null,"attributes":[{"value":"/ An iterator visiting all key-value pairs in arbitrary order.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":93959,"byte_end":94023,"line_start":428,"line_end":428,"column_start":5,"column_end":69}},{"value":"/ The iterator element type is `(&'a K, &'a V)`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":94028,"byte_end":94078,"line_start":429,"line_end":429,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":94083,"byte_end":94086,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":94091,"byte_end":94105,"line_start":431,"line_end":431,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":94110,"byte_end":94113,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":94118,"byte_end":94125,"line_start":433,"line_end":433,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":94130,"byte_end":94157,"line_start":434,"line_end":434,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":94162,"byte_end":94165,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":94170,"byte_end":94203,"line_start":436,"line_end":436,"column_start":5,"column_end":38}},{"value":"/ map.insert(\"a\", 1);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":94208,"byte_end":94231,"line_start":437,"line_end":437,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"b\", 2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":94236,"byte_end":94259,"line_start":438,"line_end":438,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"c\", 3);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":94264,"byte_end":94287,"line_start":439,"line_end":439,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":94292,"byte_end":94295,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ for (key, val) in map.iter() {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":94300,"byte_end":94334,"line_start":441,"line_end":441,"column_start":5,"column_end":39}},{"value":"/     println!(\"key: {} val: {}\", key, val);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":94339,"byte_end":94385,"line_start":442,"line_end":442,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":94390,"byte_end":94395,"line_start":443,"line_end":443,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":94400,"byte_end":94407,"line_start":444,"line_end":444,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":354},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":95372,"byte_end":95380,"line_start":480,"line_end":480,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<HashMap<K, V, S>>::iter_mut","value":"fn (&mut self) -> IterMut<'_, K, V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all key-value pairs in arbitrary order,\n with mutable references to the values.\n The iterator element type is `(&'a K, &'a mut V)`.","sig":null,"attributes":[{"value":"/ An iterator visiting all key-value pairs in arbitrary order,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":94707,"byte_end":94771,"line_start":456,"line_end":456,"column_start":5,"column_end":69}},{"value":"/ with mutable references to the values.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":94776,"byte_end":94818,"line_start":457,"line_end":457,"column_start":5,"column_end":47}},{"value":"/ The iterator element type is `(&'a K, &'a mut V)`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":94823,"byte_end":94877,"line_start":458,"line_end":458,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":94882,"byte_end":94885,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":94890,"byte_end":94904,"line_start":460,"line_end":460,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":94909,"byte_end":94912,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":94917,"byte_end":94924,"line_start":462,"line_end":462,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":94929,"byte_end":94956,"line_start":463,"line_end":463,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":94961,"byte_end":94964,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":94969,"byte_end":95002,"line_start":465,"line_end":465,"column_start":5,"column_end":38}},{"value":"/ map.insert(\"a\", 1);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":95007,"byte_end":95030,"line_start":466,"line_end":466,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"b\", 2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":95035,"byte_end":95058,"line_start":467,"line_end":467,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"c\", 3);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":95063,"byte_end":95086,"line_start":468,"line_end":468,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":95091,"byte_end":95094,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ // Update all values","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":95099,"byte_end":95123,"line_start":470,"line_end":470,"column_start":5,"column_end":29}},{"value":"/ for (_, val) in map.iter_mut() {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":95128,"byte_end":95164,"line_start":471,"line_end":471,"column_start":5,"column_end":41}},{"value":"/     *val *= 2;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":95169,"byte_end":95187,"line_start":472,"line_end":472,"column_start":5,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":95192,"byte_end":95197,"line_start":473,"line_end":473,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":95202,"byte_end":95205,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ for (key, val) in &map {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":95210,"byte_end":95238,"line_start":475,"line_end":475,"column_start":5,"column_end":33}},{"value":"/     println!(\"key: {} val: {}\", key, val);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":95243,"byte_end":95289,"line_start":476,"line_end":476,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":95294,"byte_end":95299,"line_start":477,"line_end":477,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":95304,"byte_end":95311,"line_start":478,"line_end":478,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":355},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":96097,"byte_end":96100,"line_start":509,"line_end":509,"column_start":12,"column_end":15},"name":"len","qualname":"<HashMap<K, V, S>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the map.","sig":null,"attributes":[{"value":"/ Returns the number of elements in the map.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":95765,"byte_end":95811,"line_start":496,"line_end":496,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":95816,"byte_end":95819,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":95824,"byte_end":95838,"line_start":498,"line_end":498,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":95843,"byte_end":95846,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":95851,"byte_end":95858,"line_start":500,"line_end":500,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":95863,"byte_end":95890,"line_start":501,"line_end":501,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":95895,"byte_end":95898,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ let mut a = HashMap::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":95903,"byte_end":95934,"line_start":503,"line_end":503,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(a.len(), 0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":95939,"byte_end":95966,"line_start":504,"line_end":504,"column_start":5,"column_end":32}},{"value":"/ a.insert(1, \"a\");","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":95971,"byte_end":95992,"line_start":505,"line_end":505,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(a.len(), 1);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":95997,"byte_end":96024,"line_start":506,"line_end":506,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":96029,"byte_end":96036,"line_start":507,"line_end":507,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":356},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":96491,"byte_end":96499,"line_start":526,"line_end":526,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<HashMap<K, V, S>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the map contains no elements.","sig":null,"attributes":[{"value":"/ Returns `true` if the map contains no elements.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":96155,"byte_end":96206,"line_start":513,"line_end":513,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":96211,"byte_end":96214,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":96219,"byte_end":96233,"line_start":515,"line_end":515,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":96238,"byte_end":96241,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":96246,"byte_end":96253,"line_start":517,"line_end":517,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":96258,"byte_end":96285,"line_start":518,"line_end":518,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":96290,"byte_end":96293,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ let mut a = HashMap::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":96298,"byte_end":96329,"line_start":520,"line_end":520,"column_start":5,"column_end":36}},{"value":"/ assert!(a.is_empty());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":96334,"byte_end":96360,"line_start":521,"line_end":521,"column_start":5,"column_end":31}},{"value":"/ a.insert(1, \"a\");","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":96365,"byte_end":96386,"line_start":522,"line_end":522,"column_start":5,"column_end":26}},{"value":"/ assert!(!a.is_empty());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":96391,"byte_end":96418,"line_start":523,"line_end":523,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":96423,"byte_end":96430,"line_start":524,"line_end":524,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":97092,"byte_end":97097,"line_start":550,"line_end":550,"column_start":12,"column_end":17},"name":"drain","qualname":"<HashMap<K, V, S>>::drain","value":"fn (&mut self) -> Drain<'_, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Clears the map, returning all key-value pairs as an iterator. Keeps the\n allocated memory for reuse.","sig":null,"attributes":[{"value":"/ Clears the map, returning all key-value pairs as an iterator. Keeps the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":96552,"byte_end":96627,"line_start":530,"line_end":530,"column_start":5,"column_end":80}},{"value":"/ allocated memory for reuse.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":96632,"byte_end":96663,"line_start":531,"line_end":531,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":96668,"byte_end":96671,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":96676,"byte_end":96690,"line_start":533,"line_end":533,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":96695,"byte_end":96698,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":96703,"byte_end":96710,"line_start":535,"line_end":535,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":96715,"byte_end":96742,"line_start":536,"line_end":536,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":96747,"byte_end":96750,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ let mut a = HashMap::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":96755,"byte_end":96786,"line_start":538,"line_end":538,"column_start":5,"column_end":36}},{"value":"/ a.insert(1, \"a\");","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":96791,"byte_end":96812,"line_start":539,"line_end":539,"column_start":5,"column_end":26}},{"value":"/ a.insert(2, \"b\");","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":96817,"byte_end":96838,"line_start":540,"line_end":540,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":96843,"byte_end":96846,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ for (k, v) in a.drain().take(1) {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":96851,"byte_end":96888,"line_start":542,"line_end":542,"column_start":5,"column_end":42}},{"value":"/     assert!(k == 1 || k == 2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":96893,"byte_end":96927,"line_start":543,"line_end":543,"column_start":5,"column_end":39}},{"value":"/     assert!(v == \"a\" || v == \"b\");","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":96932,"byte_end":96970,"line_start":544,"line_end":544,"column_start":5,"column_end":43}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":96975,"byte_end":96980,"line_start":545,"line_end":545,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":96985,"byte_end":96988,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ assert!(a.is_empty());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":96993,"byte_end":97019,"line_start":547,"line_end":547,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":97024,"byte_end":97031,"line_start":548,"line_end":548,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":97721,"byte_end":97727,"line_start":572,"line_end":572,"column_start":12,"column_end":18},"name":"retain","qualname":"<HashMap<K, V, S>>::retain","value":"fn <F> (&mut self, mut f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Retains only the elements specified by the predicate.","sig":null,"attributes":[{"value":"/ Retains only the elements specified by the predicate.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":97302,"byte_end":97359,"line_start":559,"line_end":559,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":97364,"byte_end":97367,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ In other words, remove all pairs `(k, v)` such that `f(&k,&mut v)` returns `false`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":97372,"byte_end":97459,"line_start":561,"line_end":561,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":97464,"byte_end":97467,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":97472,"byte_end":97486,"line_start":563,"line_end":563,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":97491,"byte_end":97494,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":97499,"byte_end":97506,"line_start":565,"line_end":565,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":97511,"byte_end":97538,"line_start":566,"line_end":566,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":97543,"byte_end":97546,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<i32, i32> = (0..8).map(|x|(x, x*10)).collect();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":97551,"byte_end":97623,"line_start":568,"line_end":568,"column_start":5,"column_end":77}},{"value":"/ map.retain(|&k, _| k % 2 == 0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":97628,"byte_end":97663,"line_start":569,"line_end":569,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(map.len(), 4);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":97668,"byte_end":97697,"line_start":570,"line_end":570,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":97702,"byte_end":97709,"line_start":571,"line_end":571,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":360},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":99143,"byte_end":99155,"line_start":613,"line_end":613,"column_start":12,"column_end":24},"name":"drain_filter","qualname":"<HashMap<K, V, S>>::drain_filter","value":"fn <F> (&mut self, f: F) -> DrainFilter<'_, K, V, F>","parent":null,"children":[],"decl_id":null,"docs":" Drains elements which are true under the given predicate,\n and returns an iterator over the removed items.","sig":null,"attributes":[{"value":"/ Drains elements which are true under the given predicate,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":98144,"byte_end":98205,"line_start":587,"line_end":587,"column_start":5,"column_end":66}},{"value":"/ and returns an iterator over the removed items.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":98210,"byte_end":98261,"line_start":588,"line_end":588,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":98266,"byte_end":98269,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ In other words, move all pairs `(k, v)` such that `f(&k,&mut v)` returns `true` out","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":98274,"byte_end":98361,"line_start":590,"line_end":590,"column_start":5,"column_end":92}},{"value":"/ into another iterator.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":98366,"byte_end":98392,"line_start":591,"line_end":591,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":98397,"byte_end":98400,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ When the returned DrainedFilter is dropped, any remaining elements that satisfy","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":98405,"byte_end":98488,"line_start":593,"line_end":593,"column_start":5,"column_end":88}},{"value":"/ the predicate are dropped from the table.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":98493,"byte_end":98538,"line_start":594,"line_end":594,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":98543,"byte_end":98546,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":98551,"byte_end":98565,"line_start":596,"line_end":596,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":98570,"byte_end":98573,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":98578,"byte_end":98585,"line_start":598,"line_end":598,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":98590,"byte_end":98617,"line_start":599,"line_end":599,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":98622,"byte_end":98625,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<i32, i32> = (0..8).map(|x| (x, x)).collect();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":98630,"byte_end":98700,"line_start":601,"line_end":601,"column_start":5,"column_end":75}},{"value":"/ let drained: HashMap<i32, i32> = map.drain_filter(|k, _v| k % 2 == 0).collect();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":98705,"byte_end":98789,"line_start":602,"line_end":602,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":98794,"byte_end":98797,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ let mut evens = drained.keys().cloned().collect::<Vec<_>>();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":98802,"byte_end":98866,"line_start":604,"line_end":604,"column_start":5,"column_end":69}},{"value":"/ let mut odds = map.keys().cloned().collect::<Vec<_>>();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":98871,"byte_end":98930,"line_start":605,"line_end":605,"column_start":5,"column_end":64}},{"value":"/ evens.sort();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":98935,"byte_end":98952,"line_start":606,"line_end":606,"column_start":5,"column_end":22}},{"value":"/ odds.sort();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":98957,"byte_end":98973,"line_start":607,"line_end":607,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":98978,"byte_end":98981,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(evens, vec![0, 2, 4, 6]);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":98986,"byte_end":99026,"line_start":609,"line_end":609,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(odds, vec![1, 3, 5, 7]);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":99031,"byte_end":99070,"line_start":610,"line_end":610,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":99075,"byte_end":99082,"line_start":611,"line_end":611,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":99828,"byte_end":99833,"line_start":640,"line_end":640,"column_start":12,"column_end":17},"name":"clear","qualname":"<HashMap<K, V, S>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears the map, removing all key-value pairs. Keeps the allocated memory\n for reuse.","sig":null,"attributes":[{"value":"/ Clears the map, removing all key-value pairs. Keeps the allocated memory","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":99461,"byte_end":99537,"line_start":626,"line_end":626,"column_start":5,"column_end":81}},{"value":"/ for reuse.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":99542,"byte_end":99556,"line_start":627,"line_end":627,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":99561,"byte_end":99564,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":99569,"byte_end":99583,"line_start":629,"line_end":629,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":99588,"byte_end":99591,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":99596,"byte_end":99603,"line_start":631,"line_end":631,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":99608,"byte_end":99635,"line_start":632,"line_end":632,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":99640,"byte_end":99643,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ let mut a = HashMap::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":99648,"byte_end":99679,"line_start":634,"line_end":634,"column_start":5,"column_end":36}},{"value":"/ a.insert(1, \"a\");","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":99684,"byte_end":99705,"line_start":635,"line_end":635,"column_start":5,"column_end":26}},{"value":"/ a.clear();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":99710,"byte_end":99724,"line_start":636,"line_end":636,"column_start":5,"column_end":19}},{"value":"/ assert!(a.is_empty());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":99729,"byte_end":99755,"line_start":637,"line_end":637,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":99760,"byte_end":99767,"line_start":638,"line_end":638,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":367},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":100555,"byte_end":100562,"line_start":668,"line_end":668,"column_start":12,"column_end":19},"name":"reserve","qualname":"<HashMap<K, V, S>>::reserve","value":"fn (&mut self, additional: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more elements to be inserted\n in the `HashMap`. The collection may reserve more space to avoid\n frequent reallocations.","sig":null,"attributes":[{"value":"/ Reserves capacity for at least `additional` more elements to be inserted","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":99965,"byte_end":100041,"line_start":650,"line_end":650,"column_start":5,"column_end":81}},{"value":"/ in the `HashMap`. The collection may reserve more space to avoid","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":100046,"byte_end":100114,"line_start":651,"line_end":651,"column_start":5,"column_end":73}},{"value":"/ frequent reallocations.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":100119,"byte_end":100146,"line_start":652,"line_end":652,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":100151,"byte_end":100154,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":100159,"byte_end":100171,"line_start":654,"line_end":654,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":100176,"byte_end":100179,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ Panics if the new allocation size overflows [`usize`].","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":100184,"byte_end":100242,"line_start":656,"line_end":656,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":100247,"byte_end":100250,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ [`usize`]: https://doc.rust-lang.org/std/primitive.usize.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":100255,"byte_end":100320,"line_start":658,"line_end":658,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":100325,"byte_end":100328,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":100333,"byte_end":100347,"line_start":660,"line_end":660,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":100352,"byte_end":100355,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":100360,"byte_end":100367,"line_start":662,"line_end":662,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":100372,"byte_end":100399,"line_start":663,"line_end":663,"column_start":5,"column_end":32}},{"value":"/ let mut map: HashMap<&str, i32> = HashMap::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":100404,"byte_end":100457,"line_start":664,"line_end":664,"column_start":5,"column_end":58}},{"value":"/ map.reserve(10);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":100462,"byte_end":100482,"line_start":665,"line_end":665,"column_start":5,"column_end":25}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":100487,"byte_end":100494,"line_start":666,"line_end":666,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":369},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":101375,"byte_end":101386,"line_start":691,"line_end":691,"column_start":12,"column_end":23},"name":"try_reserve","qualname":"<HashMap<K, V, S>>::try_reserve","value":"fn (&mut self, additional: usize) -> Result<(), TryReserveError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to reserve capacity for at least `additional` more elements to be inserted\n in the given `HashMap<K,V>`. The collection may reserve more space to avoid\n frequent reallocations.","sig":null,"attributes":[{"value":"/ Tries to reserve capacity for at least `additional` more elements to be inserted","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":100741,"byte_end":100825,"line_start":674,"line_end":674,"column_start":5,"column_end":89}},{"value":"/ in the given `HashMap<K,V>`. The collection may reserve more space to avoid","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":100830,"byte_end":100909,"line_start":675,"line_end":675,"column_start":5,"column_end":84}},{"value":"/ frequent reallocations.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":100914,"byte_end":100941,"line_start":676,"line_end":676,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":100946,"byte_end":100949,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":100954,"byte_end":100966,"line_start":678,"line_end":678,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":100971,"byte_end":100974,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ If the capacity overflows, or the allocator reports a failure, then an error","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":100979,"byte_end":101059,"line_start":680,"line_end":680,"column_start":5,"column_end":85}},{"value":"/ is returned.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":101064,"byte_end":101080,"line_start":681,"line_end":681,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":101085,"byte_end":101088,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":101093,"byte_end":101107,"line_start":683,"line_end":683,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":101112,"byte_end":101115,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":101120,"byte_end":101127,"line_start":685,"line_end":685,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":101132,"byte_end":101159,"line_start":686,"line_end":686,"column_start":5,"column_end":32}},{"value":"/ let mut map: HashMap<&str, isize> = HashMap::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":101164,"byte_end":101219,"line_start":687,"line_end":687,"column_start":5,"column_end":60}},{"value":"/ map.try_reserve(10).expect(\"why is the test harness OOMing on 10 bytes?\");","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":101224,"byte_end":101302,"line_start":688,"line_end":688,"column_start":5,"column_end":83}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":101307,"byte_end":101314,"line_start":689,"line_end":689,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":102205,"byte_end":102218,"line_start":714,"line_end":714,"column_start":12,"column_end":25},"name":"shrink_to_fit","qualname":"<HashMap<K, V, S>>::shrink_to_fit","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the capacity of the map as much as possible. It will drop\n down as much as possible while maintaining the internal rules\n and possibly leaving some space in accordance with the resize policy.","sig":null,"attributes":[{"value":"/ Shrinks the capacity of the map as much as possible. It will drop","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":101599,"byte_end":101668,"line_start":697,"line_end":697,"column_start":5,"column_end":74}},{"value":"/ down as much as possible while maintaining the internal rules","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":101673,"byte_end":101738,"line_start":698,"line_end":698,"column_start":5,"column_end":70}},{"value":"/ and possibly leaving some space in accordance with the resize policy.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":101743,"byte_end":101816,"line_start":699,"line_end":699,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":101821,"byte_end":101824,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":101829,"byte_end":101843,"line_start":701,"line_end":701,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":101848,"byte_end":101851,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":101856,"byte_end":101863,"line_start":703,"line_end":703,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":101868,"byte_end":101895,"line_start":704,"line_end":704,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":101900,"byte_end":101903,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<i32, i32> = HashMap::with_capacity(100);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":101908,"byte_end":101973,"line_start":706,"line_end":706,"column_start":5,"column_end":70}},{"value":"/ map.insert(1, 2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":101978,"byte_end":101999,"line_start":707,"line_end":707,"column_start":5,"column_end":26}},{"value":"/ map.insert(3, 4);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":102004,"byte_end":102025,"line_start":708,"line_end":708,"column_start":5,"column_end":26}},{"value":"/ assert!(map.capacity() >= 100);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":102030,"byte_end":102065,"line_start":709,"line_end":709,"column_start":5,"column_end":40}},{"value":"/ map.shrink_to_fit();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":102070,"byte_end":102094,"line_start":710,"line_end":710,"column_start":5,"column_end":29}},{"value":"/ assert!(map.capacity() >= 2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":102099,"byte_end":102132,"line_start":711,"line_end":711,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":102137,"byte_end":102144,"line_start":712,"line_end":712,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":103226,"byte_end":103235,"line_start":743,"line_end":743,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<HashMap<K, V, S>>::shrink_to","value":"fn (&mut self, min_capacity: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the capacity of the map with a lower limit. It will drop\n down no lower than the supplied limit while maintaining the internal rules\n and possibly leaving some space in accordance with the resize policy.","sig":null,"attributes":[{"value":"/ Shrinks the capacity of the map with a lower limit. It will drop","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":102358,"byte_end":102426,"line_start":719,"line_end":719,"column_start":5,"column_end":73}},{"value":"/ down no lower than the supplied limit while maintaining the internal rules","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":102431,"byte_end":102509,"line_start":720,"line_end":720,"column_start":5,"column_end":83}},{"value":"/ and possibly leaving some space in accordance with the resize policy.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":102514,"byte_end":102587,"line_start":721,"line_end":721,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":102592,"byte_end":102595,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ This function does nothing if the current capacity is smaller than the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":102600,"byte_end":102674,"line_start":723,"line_end":723,"column_start":5,"column_end":79}},{"value":"/ supplied minimum capacity.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":102679,"byte_end":102709,"line_start":724,"line_end":724,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":102714,"byte_end":102717,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":102722,"byte_end":102736,"line_start":726,"line_end":726,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":102741,"byte_end":102744,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":102749,"byte_end":102756,"line_start":728,"line_end":728,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":102761,"byte_end":102788,"line_start":729,"line_end":729,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":102793,"byte_end":102796,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<i32, i32> = HashMap::with_capacity(100);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":102801,"byte_end":102866,"line_start":731,"line_end":731,"column_start":5,"column_end":70}},{"value":"/ map.insert(1, 2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":102871,"byte_end":102892,"line_start":732,"line_end":732,"column_start":5,"column_end":26}},{"value":"/ map.insert(3, 4);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":102897,"byte_end":102918,"line_start":733,"line_end":733,"column_start":5,"column_end":26}},{"value":"/ assert!(map.capacity() >= 100);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":102923,"byte_end":102958,"line_start":734,"line_end":734,"column_start":5,"column_end":40}},{"value":"/ map.shrink_to(10);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":102963,"byte_end":102985,"line_start":735,"line_end":735,"column_start":5,"column_end":27}},{"value":"/ assert!(map.capacity() >= 10);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":102990,"byte_end":103024,"line_start":736,"line_end":736,"column_start":5,"column_end":39}},{"value":"/ map.shrink_to(0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":103029,"byte_end":103050,"line_start":737,"line_end":737,"column_start":5,"column_end":26}},{"value":"/ assert!(map.capacity() >= 2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":103055,"byte_end":103088,"line_start":738,"line_end":738,"column_start":5,"column_end":38}},{"value":"/ map.shrink_to(10);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":103093,"byte_end":103115,"line_start":739,"line_end":739,"column_start":5,"column_end":27}},{"value":"/ assert!(map.capacity() >= 2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":103120,"byte_end":103153,"line_start":740,"line_end":740,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":103158,"byte_end":103165,"line_start":741,"line_end":741,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":375},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":104030,"byte_end":104035,"line_start":769,"line_end":769,"column_start":12,"column_end":17},"name":"entry","qualname":"<HashMap<K, V, S>>::entry","value":"fn (&mut self, key: K) -> Entry<'_, K, V, S>","parent":null,"children":[],"decl_id":null,"docs":" Gets the given key's corresponding entry in the map for in-place manipulation.","sig":null,"attributes":[{"value":"/ Gets the given key's corresponding entry in the map for in-place manipulation.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":103420,"byte_end":103502,"line_start":749,"line_end":749,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":103507,"byte_end":103510,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":103515,"byte_end":103529,"line_start":751,"line_end":751,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":103534,"byte_end":103537,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":103542,"byte_end":103549,"line_start":753,"line_end":753,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":103554,"byte_end":103581,"line_start":754,"line_end":754,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":103586,"byte_end":103589,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ let mut letters = HashMap::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":103594,"byte_end":103631,"line_start":756,"line_end":756,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":103636,"byte_end":103639,"line_start":757,"line_end":757,"column_start":5,"column_end":8}},{"value":"/ for ch in \"a short treatise on fungi\".chars() {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":103644,"byte_end":103695,"line_start":758,"line_end":758,"column_start":5,"column_end":56}},{"value":"/     let counter = letters.entry(ch).or_insert(0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":103700,"byte_end":103753,"line_start":759,"line_end":759,"column_start":5,"column_end":58}},{"value":"/     *counter += 1;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":103758,"byte_end":103780,"line_start":760,"line_end":760,"column_start":5,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":103785,"byte_end":103790,"line_start":761,"line_end":761,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":103795,"byte_end":103798,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(letters[&'s'], 2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":103803,"byte_end":103836,"line_start":763,"line_end":763,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(letters[&'t'], 3);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":103841,"byte_end":103874,"line_start":764,"line_end":764,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(letters[&'u'], 1);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":103879,"byte_end":103912,"line_start":765,"line_end":765,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(letters.get(&'y'), None);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":103917,"byte_end":103957,"line_start":766,"line_end":766,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":103962,"byte_end":103969,"line_start":767,"line_end":767,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":377},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":105182,"byte_end":105185,"line_start":807,"line_end":807,"column_start":12,"column_end":15},"name":"get","qualname":"<HashMap<K, V, S>>::get","value":"fn <Q> (&self, k: &Q) -> Option<&V>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the value corresponding to the key.","sig":null,"attributes":[{"value":"/ Returns a reference to the value corresponding to the key.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":104534,"byte_end":104596,"line_start":787,"line_end":787,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":104601,"byte_end":104604,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":104609,"byte_end":104672,"line_start":789,"line_end":789,"column_start":5,"column_end":68}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":104677,"byte_end":104744,"line_start":790,"line_end":790,"column_start":5,"column_end":72}},{"value":"/ the key type.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":104749,"byte_end":104766,"line_start":791,"line_end":791,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":104771,"byte_end":104774,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":104779,"byte_end":104838,"line_start":793,"line_end":793,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":104843,"byte_end":104907,"line_start":794,"line_end":794,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":104912,"byte_end":104915,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":104920,"byte_end":104934,"line_start":796,"line_end":796,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":104939,"byte_end":104942,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":104947,"byte_end":104954,"line_start":798,"line_end":798,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":104959,"byte_end":104986,"line_start":799,"line_end":799,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":104991,"byte_end":104994,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":104999,"byte_end":105032,"line_start":801,"line_end":801,"column_start":5,"column_end":38}},{"value":"/ map.insert(1, \"a\");","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":105037,"byte_end":105060,"line_start":802,"line_end":802,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(map.get(&1), Some(&\"a\"));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":105065,"byte_end":105105,"line_start":803,"line_end":803,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(map.get(&2), None);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":105110,"byte_end":105144,"line_start":804,"line_end":804,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":105149,"byte_end":105156,"line_start":805,"line_end":805,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":105161,"byte_end":105170,"line_start":806,"line_end":806,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":106151,"byte_end":106164,"line_start":839,"line_end":839,"column_start":12,"column_end":25},"name":"get_key_value","qualname":"<HashMap<K, V, S>>::get_key_value","value":"fn <Q> (&self, k: &Q) -> Option<(&K, &V)>","parent":null,"children":[],"decl_id":null,"docs":" Returns the key-value pair corresponding to the supplied key.","sig":null,"attributes":[{"value":"/ Returns the key-value pair corresponding to the supplied key.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":105465,"byte_end":105530,"line_start":819,"line_end":819,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":105535,"byte_end":105538,"line_start":820,"line_end":820,"column_start":5,"column_end":8}},{"value":"/ The supplied key may be any borrowed form of the map's key type, but","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":105543,"byte_end":105615,"line_start":821,"line_end":821,"column_start":5,"column_end":77}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":105620,"byte_end":105687,"line_start":822,"line_end":822,"column_start":5,"column_end":72}},{"value":"/ the key type.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":105692,"byte_end":105709,"line_start":823,"line_end":823,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":105714,"byte_end":105717,"line_start":824,"line_end":824,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":105722,"byte_end":105781,"line_start":825,"line_end":825,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":105786,"byte_end":105850,"line_start":826,"line_end":826,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":105855,"byte_end":105858,"line_start":827,"line_end":827,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":105863,"byte_end":105877,"line_start":828,"line_end":828,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":105882,"byte_end":105885,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":105890,"byte_end":105897,"line_start":830,"line_end":830,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":105902,"byte_end":105929,"line_start":831,"line_end":831,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":105934,"byte_end":105937,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":105942,"byte_end":105975,"line_start":833,"line_end":833,"column_start":5,"column_end":38}},{"value":"/ map.insert(1, \"a\");","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":105980,"byte_end":106003,"line_start":834,"line_end":834,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(map.get_key_value(&1), Some((&1, &\"a\")));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":106008,"byte_end":106064,"line_start":835,"line_end":835,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(map.get_key_value(&2), None);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":106069,"byte_end":106113,"line_start":836,"line_end":836,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":106118,"byte_end":106125,"line_start":837,"line_end":837,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":106130,"byte_end":106139,"line_start":838,"line_end":838,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":382},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":107502,"byte_end":107519,"line_start":879,"line_end":879,"column_start":12,"column_end":29},"name":"get_key_value_mut","qualname":"<HashMap<K, V, S>>::get_key_value_mut","value":"fn <Q> (&mut self, k: &Q) -> Option<(&K, &mut V)>","parent":null,"children":[],"decl_id":null,"docs":" Returns the key-value pair corresponding to the supplied key, with a mutable reference to value.","sig":null,"attributes":[{"value":"/ Returns the key-value pair corresponding to the supplied key, with a mutable reference to value.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":106634,"byte_end":106734,"line_start":855,"line_end":855,"column_start":5,"column_end":105}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":106739,"byte_end":106742,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ The supplied key may be any borrowed form of the map's key type, but","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":106747,"byte_end":106819,"line_start":857,"line_end":857,"column_start":5,"column_end":77}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":106824,"byte_end":106891,"line_start":858,"line_end":858,"column_start":5,"column_end":72}},{"value":"/ the key type.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":106896,"byte_end":106913,"line_start":859,"line_end":859,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":106918,"byte_end":106921,"line_start":860,"line_end":860,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":106926,"byte_end":106985,"line_start":861,"line_end":861,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":106990,"byte_end":107054,"line_start":862,"line_end":862,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":107059,"byte_end":107062,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":107067,"byte_end":107081,"line_start":864,"line_end":864,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":107086,"byte_end":107089,"line_start":865,"line_end":865,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":107094,"byte_end":107101,"line_start":866,"line_end":866,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":107106,"byte_end":107133,"line_start":867,"line_end":867,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":107138,"byte_end":107141,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":107146,"byte_end":107179,"line_start":869,"line_end":869,"column_start":5,"column_end":38}},{"value":"/ map.insert(1, \"a\");","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":107184,"byte_end":107207,"line_start":870,"line_end":870,"column_start":5,"column_end":28}},{"value":"/ let (k, v) = map.get_key_value_mut(&1).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":107212,"byte_end":107264,"line_start":871,"line_end":871,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(k, &1);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":107269,"byte_end":107291,"line_start":872,"line_end":872,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(v, &mut \"a\");","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":107296,"byte_end":107324,"line_start":873,"line_end":873,"column_start":5,"column_end":33}},{"value":"/ *v = \"b\";","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":107329,"byte_end":107342,"line_start":874,"line_end":874,"column_start":5,"column_end":18}},{"value":"/ assert_eq!(map.get_key_value_mut(&1), Some((&1, &mut \"b\")));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":107347,"byte_end":107411,"line_start":875,"line_end":875,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(map.get_key_value_mut(&2), None);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":107416,"byte_end":107464,"line_start":876,"line_end":876,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":107469,"byte_end":107476,"line_start":877,"line_end":877,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":107481,"byte_end":107490,"line_start":878,"line_end":878,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":108708,"byte_end":108720,"line_start":915,"line_end":915,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<HashMap<K, V, S>>::contains_key","value":"fn <Q> (&self, k: &Q) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the map contains a value for the specified key.","sig":null,"attributes":[{"value":"/ Returns `true` if the map contains a value for the specified key.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":108005,"byte_end":108074,"line_start":895,"line_end":895,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":108079,"byte_end":108082,"line_start":896,"line_end":896,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":108087,"byte_end":108150,"line_start":897,"line_end":897,"column_start":5,"column_end":68}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":108155,"byte_end":108222,"line_start":898,"line_end":898,"column_start":5,"column_end":72}},{"value":"/ the key type.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":108227,"byte_end":108244,"line_start":899,"line_end":899,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":108249,"byte_end":108252,"line_start":900,"line_end":900,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":108257,"byte_end":108316,"line_start":901,"line_end":901,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":108321,"byte_end":108385,"line_start":902,"line_end":902,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":108390,"byte_end":108393,"line_start":903,"line_end":903,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":108398,"byte_end":108412,"line_start":904,"line_end":904,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":108417,"byte_end":108420,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":108425,"byte_end":108432,"line_start":906,"line_end":906,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":108437,"byte_end":108464,"line_start":907,"line_end":907,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":108469,"byte_end":108472,"line_start":908,"line_end":908,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":108477,"byte_end":108510,"line_start":909,"line_end":909,"column_start":5,"column_end":38}},{"value":"/ map.insert(1, \"a\");","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":108515,"byte_end":108538,"line_start":910,"line_end":910,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(map.contains_key(&1), true);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":108543,"byte_end":108586,"line_start":911,"line_end":911,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(map.contains_key(&2), false);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":108591,"byte_end":108635,"line_start":912,"line_end":912,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":108640,"byte_end":108647,"line_start":913,"line_end":913,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":109571,"byte_end":109578,"line_start":945,"line_end":945,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<HashMap<K, V, S>>::get_mut","value":"fn <Q> (&mut self, k: &Q) -> Option<&mut V>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the value corresponding to the key.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the value corresponding to the key.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":108855,"byte_end":108925,"line_start":923,"line_end":923,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":108930,"byte_end":108933,"line_start":924,"line_end":924,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":108938,"byte_end":109001,"line_start":925,"line_end":925,"column_start":5,"column_end":68}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":109006,"byte_end":109073,"line_start":926,"line_end":926,"column_start":5,"column_end":72}},{"value":"/ the key type.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":109078,"byte_end":109095,"line_start":927,"line_end":927,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":109100,"byte_end":109103,"line_start":928,"line_end":928,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":109108,"byte_end":109167,"line_start":929,"line_end":929,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":109172,"byte_end":109236,"line_start":930,"line_end":930,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":109241,"byte_end":109244,"line_start":931,"line_end":931,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":109249,"byte_end":109263,"line_start":932,"line_end":932,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":109268,"byte_end":109271,"line_start":933,"line_end":933,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":109276,"byte_end":109283,"line_start":934,"line_end":934,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":109288,"byte_end":109315,"line_start":935,"line_end":935,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":109320,"byte_end":109323,"line_start":936,"line_end":936,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":109328,"byte_end":109361,"line_start":937,"line_end":937,"column_start":5,"column_end":38}},{"value":"/ map.insert(1, \"a\");","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":109366,"byte_end":109389,"line_start":938,"line_end":938,"column_start":5,"column_end":28}},{"value":"/ if let Some(x) = map.get_mut(&1) {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":109394,"byte_end":109432,"line_start":939,"line_end":939,"column_start":5,"column_end":43}},{"value":"/     *x = \"b\";","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":109437,"byte_end":109454,"line_start":940,"line_end":940,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":109459,"byte_end":109464,"line_start":941,"line_end":941,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(map[&1], \"b\");","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":109469,"byte_end":109498,"line_start":942,"line_end":942,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":109503,"byte_end":109510,"line_start":943,"line_end":943,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":110946,"byte_end":110952,"line_start":984,"line_end":984,"column_start":12,"column_end":18},"name":"insert","qualname":"<HashMap<K, V, S>>::insert","value":"fn (&mut self, k: K, v: V) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Inserts a key-value pair into the map.","sig":null,"attributes":[{"value":"/ Inserts a key-value pair into the map.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":109971,"byte_end":110013,"line_start":958,"line_end":958,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":110018,"byte_end":110021,"line_start":959,"line_end":959,"column_start":5,"column_end":8}},{"value":"/ If the map did not have this key present, [`None`] is returned.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":110026,"byte_end":110093,"line_start":960,"line_end":960,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":110098,"byte_end":110101,"line_start":961,"line_end":961,"column_start":5,"column_end":8}},{"value":"/ If the map did have this key present, the value is updated, and the old","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":110106,"byte_end":110181,"line_start":962,"line_end":962,"column_start":5,"column_end":80}},{"value":"/ value is returned. The key is not updated, though; this matters for","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":110186,"byte_end":110257,"line_start":963,"line_end":963,"column_start":5,"column_end":76}},{"value":"/ types that can be `==` without being identical. See the [module-level","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":110262,"byte_end":110335,"line_start":964,"line_end":964,"column_start":5,"column_end":78}},{"value":"/ documentation] for more.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":110340,"byte_end":110368,"line_start":965,"line_end":965,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":110373,"byte_end":110376,"line_start":966,"line_end":966,"column_start":5,"column_end":8}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":110381,"byte_end":110461,"line_start":967,"line_end":967,"column_start":5,"column_end":85}},{"value":"/ [module-level documentation]: index.html#insert-and-complex-keys","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":110466,"byte_end":110534,"line_start":968,"line_end":968,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":110539,"byte_end":110542,"line_start":969,"line_end":969,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":110547,"byte_end":110561,"line_start":970,"line_end":970,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":110566,"byte_end":110569,"line_start":971,"line_end":971,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":110574,"byte_end":110581,"line_start":972,"line_end":972,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":110586,"byte_end":110613,"line_start":973,"line_end":973,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":110618,"byte_end":110621,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":110626,"byte_end":110659,"line_start":975,"line_end":975,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(map.insert(37, \"a\"), None);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":110664,"byte_end":110706,"line_start":976,"line_end":976,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(map.is_empty(), false);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":110711,"byte_end":110749,"line_start":977,"line_end":977,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":110754,"byte_end":110757,"line_start":978,"line_end":978,"column_start":5,"column_end":8}},{"value":"/ map.insert(37, \"b\");","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":110762,"byte_end":110786,"line_start":979,"line_end":979,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(map.insert(37, \"c\"), Some(\"b\"));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":110791,"byte_end":110838,"line_start":980,"line_end":980,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(map[&37], \"c\");","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":110843,"byte_end":110873,"line_start":981,"line_end":981,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":110878,"byte_end":110885,"line_start":982,"line_end":982,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":112169,"byte_end":112175,"line_start":1019,"line_end":1019,"column_start":12,"column_end":18},"name":"remove","qualname":"<HashMap<K, V, S>>::remove","value":"fn <Q> (&mut self, k: &Q) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Removes a key from the map, returning the value at the key if the key\n was previously in the map.","sig":null,"attributes":[{"value":"/ Removes a key from the map, returning the value at the key if the key","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":111435,"byte_end":111508,"line_start":998,"line_end":998,"column_start":5,"column_end":78}},{"value":"/ was previously in the map.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":111513,"byte_end":111543,"line_start":999,"line_end":999,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":111548,"byte_end":111551,"line_start":1000,"line_end":1000,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":111556,"byte_end":111619,"line_start":1001,"line_end":1001,"column_start":5,"column_end":68}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":111624,"byte_end":111691,"line_start":1002,"line_end":1002,"column_start":5,"column_end":72}},{"value":"/ the key type.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":111696,"byte_end":111713,"line_start":1003,"line_end":1003,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":111718,"byte_end":111721,"line_start":1004,"line_end":1004,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":111726,"byte_end":111785,"line_start":1005,"line_end":1005,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":111790,"byte_end":111854,"line_start":1006,"line_end":1006,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":111859,"byte_end":111862,"line_start":1007,"line_end":1007,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":111867,"byte_end":111881,"line_start":1008,"line_end":1008,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":111886,"byte_end":111889,"line_start":1009,"line_end":1009,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":111894,"byte_end":111901,"line_start":1010,"line_end":1010,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":111906,"byte_end":111933,"line_start":1011,"line_end":1011,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":111938,"byte_end":111941,"line_start":1012,"line_end":1012,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":111946,"byte_end":111979,"line_start":1013,"line_end":1013,"column_start":5,"column_end":38}},{"value":"/ map.insert(1, \"a\");","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":111984,"byte_end":112007,"line_start":1014,"line_end":1014,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(map.remove(&1), Some(\"a\"));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":112012,"byte_end":112054,"line_start":1015,"line_end":1015,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(map.remove(&1), None);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":112059,"byte_end":112096,"line_start":1016,"line_end":1016,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":112101,"byte_end":112108,"line_start":1017,"line_end":1017,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":113206,"byte_end":113218,"line_start":1052,"line_end":1052,"column_start":12,"column_end":24},"name":"remove_entry","qualname":"<HashMap<K, V, S>>::remove_entry","value":"fn <Q> (&mut self, k: &Q) -> Option<(K, V)>","parent":null,"children":[],"decl_id":null,"docs":" Removes a key from the map, returning the stored key and value if the\n key was previously in the map.","sig":null,"attributes":[{"value":"/ Removes a key from the map, returning the stored key and value if the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":112457,"byte_end":112530,"line_start":1031,"line_end":1031,"column_start":5,"column_end":78}},{"value":"/ key was previously in the map.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":112535,"byte_end":112569,"line_start":1032,"line_end":1032,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":112574,"byte_end":112577,"line_start":1033,"line_end":1033,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":112582,"byte_end":112645,"line_start":1034,"line_end":1034,"column_start":5,"column_end":68}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":112650,"byte_end":112717,"line_start":1035,"line_end":1035,"column_start":5,"column_end":72}},{"value":"/ the key type.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":112722,"byte_end":112739,"line_start":1036,"line_end":1036,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":112744,"byte_end":112747,"line_start":1037,"line_end":1037,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":112752,"byte_end":112811,"line_start":1038,"line_end":1038,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":112816,"byte_end":112880,"line_start":1039,"line_end":1039,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":112885,"byte_end":112888,"line_start":1040,"line_end":1040,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":112893,"byte_end":112907,"line_start":1041,"line_end":1041,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":112912,"byte_end":112915,"line_start":1042,"line_end":1042,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":112920,"byte_end":112927,"line_start":1043,"line_end":1043,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":112932,"byte_end":112959,"line_start":1044,"line_end":1044,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":112964,"byte_end":112967,"line_start":1045,"line_end":1045,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":112972,"byte_end":113005,"line_start":1046,"line_end":1046,"column_start":5,"column_end":38}},{"value":"/ map.insert(1, \"a\");","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":113010,"byte_end":113033,"line_start":1047,"line_end":1047,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(map.remove_entry(&1), Some((1, \"a\")));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":113038,"byte_end":113091,"line_start":1048,"line_end":1048,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(map.remove(&1), None);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":113096,"byte_end":113133,"line_start":1049,"line_end":1049,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":113138,"byte_end":113145,"line_start":1050,"line_end":1050,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":115579,"byte_end":115592,"line_start":1101,"line_end":1101,"column_start":12,"column_end":25},"name":"raw_entry_mut","qualname":"<HashMap<K, V, S>>::raw_entry_mut","value":"fn (&mut self) -> RawEntryBuilderMut<'_, K, V, S>","parent":null,"children":[],"decl_id":null,"docs":" Creates a raw entry builder for the HashMap.","sig":null,"attributes":[{"value":"/ Creates a raw entry builder for the HashMap.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":113639,"byte_end":113687,"line_start":1069,"line_end":1069,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":113692,"byte_end":113695,"line_start":1070,"line_end":1070,"column_start":5,"column_end":8}},{"value":"/ Raw entries provide the lowest level of control for searching and","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":113700,"byte_end":113769,"line_start":1071,"line_end":1071,"column_start":5,"column_end":74}},{"value":"/ manipulating a map. They must be manually initialized with a hash and","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":113774,"byte_end":113847,"line_start":1072,"line_end":1072,"column_start":5,"column_end":78}},{"value":"/ then manually searched. After this, insertions into a vacant entry","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":113852,"byte_end":113922,"line_start":1073,"line_end":1073,"column_start":5,"column_end":75}},{"value":"/ still require an owned key to be provided.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":113927,"byte_end":113973,"line_start":1074,"line_end":1074,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":113978,"byte_end":113981,"line_start":1075,"line_end":1075,"column_start":5,"column_end":8}},{"value":"/ Raw entries are useful for such exotic situations as:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":113986,"byte_end":114043,"line_start":1076,"line_end":1076,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":114048,"byte_end":114051,"line_start":1077,"line_end":1077,"column_start":5,"column_end":8}},{"value":"/ * Hash memoization","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":114056,"byte_end":114078,"line_start":1078,"line_end":1078,"column_start":5,"column_end":27}},{"value":"/ * Deferring the creation of an owned key until it is known to be required","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":114083,"byte_end":114160,"line_start":1079,"line_end":1079,"column_start":5,"column_end":82}},{"value":"/ * Using a search key that doesn't work with the Borrow trait","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":114165,"byte_end":114229,"line_start":1080,"line_end":1080,"column_start":5,"column_end":69}},{"value":"/ * Using custom comparison logic without newtype wrappers","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":114234,"byte_end":114294,"line_start":1081,"line_end":1081,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":114299,"byte_end":114302,"line_start":1082,"line_end":1082,"column_start":5,"column_end":8}},{"value":"/ Because raw entries provide much more low-level control, it's much easier","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":114307,"byte_end":114384,"line_start":1083,"line_end":1083,"column_start":5,"column_end":82}},{"value":"/ to put the HashMap into an inconsistent state which, while memory-safe,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":114389,"byte_end":114464,"line_start":1084,"line_end":1084,"column_start":5,"column_end":80}},{"value":"/ will cause the map to produce seemingly random results. Higher-level and","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":114469,"byte_end":114545,"line_start":1085,"line_end":1085,"column_start":5,"column_end":81}},{"value":"/ more foolproof APIs like `entry` should be preferred when possible.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":114550,"byte_end":114621,"line_start":1086,"line_end":1086,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":114626,"byte_end":114629,"line_start":1087,"line_end":1087,"column_start":5,"column_end":8}},{"value":"/ In particular, the hash used to initialized the raw entry must still be","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":114634,"byte_end":114709,"line_start":1088,"line_end":1088,"column_start":5,"column_end":80}},{"value":"/ consistent with the hash of the key that is ultimately stored in the entry.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":114714,"byte_end":114793,"line_start":1089,"line_end":1089,"column_start":5,"column_end":84}},{"value":"/ This is because implementations of HashMap may need to recompute hashes","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":114798,"byte_end":114873,"line_start":1090,"line_end":1090,"column_start":5,"column_end":80}},{"value":"/ when resizing, at which point only the keys are available.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":114878,"byte_end":114940,"line_start":1091,"line_end":1091,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":114945,"byte_end":114948,"line_start":1092,"line_end":1092,"column_start":5,"column_end":8}},{"value":"/ Raw entries give mutable access to the keys. This must not be used","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":114953,"byte_end":115023,"line_start":1093,"line_end":1093,"column_start":5,"column_end":75}},{"value":"/ to modify how the key would compare or hash, as the map will not re-evaluate","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":115028,"byte_end":115108,"line_start":1094,"line_end":1094,"column_start":5,"column_end":85}},{"value":"/ where the key should go, meaning the keys may become \"lost\" if their","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":115113,"byte_end":115185,"line_start":1095,"line_end":1095,"column_start":5,"column_end":77}},{"value":"/ location does not reflect their state. For instance, if you change a key","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":115190,"byte_end":115266,"line_start":1096,"line_end":1096,"column_start":5,"column_end":81}},{"value":"/ so that the map now contains keys which compare equal, search may start","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":115271,"byte_end":115346,"line_start":1097,"line_end":1097,"column_start":5,"column_end":80}},{"value":"/ acting erratically, with two keys randomly masking each other. Implementations","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":115351,"byte_end":115433,"line_start":1098,"line_end":1098,"column_start":5,"column_end":87}},{"value":"/ are free to assume this doesn't happen (within the limits of memory-safety).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":115438,"byte_end":115518,"line_start":1099,"line_end":1099,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":116430,"byte_end":116439,"line_start":1121,"line_end":1121,"column_start":12,"column_end":21},"name":"raw_entry","qualname":"<HashMap<K, V, S>>::raw_entry","value":"fn (&self) -> RawEntryBuilder<'_, K, V, S>","parent":null,"children":[],"decl_id":null,"docs":" Creates a raw immutable entry builder for the HashMap.","sig":null,"attributes":[{"value":"/ Creates a raw immutable entry builder for the HashMap.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":115693,"byte_end":115751,"line_start":1105,"line_end":1105,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":115756,"byte_end":115759,"line_start":1106,"line_end":1106,"column_start":5,"column_end":8}},{"value":"/ Raw entries provide the lowest level of control for searching and","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":115764,"byte_end":115833,"line_start":1107,"line_end":1107,"column_start":5,"column_end":74}},{"value":"/ manipulating a map. They must be manually initialized with a hash and","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":115838,"byte_end":115911,"line_start":1108,"line_end":1108,"column_start":5,"column_end":78}},{"value":"/ then manually searched.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":115916,"byte_end":115943,"line_start":1109,"line_end":1109,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":115948,"byte_end":115951,"line_start":1110,"line_end":1110,"column_start":5,"column_end":8}},{"value":"/ This is useful for","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":115956,"byte_end":115978,"line_start":1111,"line_end":1111,"column_start":5,"column_end":27}},{"value":"/ * Hash memoization","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":115983,"byte_end":116005,"line_start":1112,"line_end":1112,"column_start":5,"column_end":27}},{"value":"/ * Using a search key that doesn't work with the Borrow trait","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":116010,"byte_end":116074,"line_start":1113,"line_end":1113,"column_start":5,"column_end":69}},{"value":"/ * Using custom comparison logic without newtype wrappers","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":116079,"byte_end":116139,"line_start":1114,"line_end":1114,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":116144,"byte_end":116147,"line_start":1115,"line_end":1115,"column_start":5,"column_end":8}},{"value":"/ Unless you are in such a situation, higher-level and more foolproof APIs like","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":116152,"byte_end":116233,"line_start":1116,"line_end":1116,"column_start":5,"column_end":86}},{"value":"/ `get` should be preferred.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":116238,"byte_end":116268,"line_start":1117,"line_end":1117,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":116273,"byte_end":116276,"line_start":1118,"line_end":1118,"column_start":5,"column_end":8}},{"value":"/ Immutable raw entries have very limited use; you might instead want `raw_entry_mut`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":116281,"byte_end":116369,"line_start":1119,"line_end":1119,"column_start":5,"column_end":93}}]},{"kind":"Struct","id":{"krate":0,"index":432},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":118173,"byte_end":118177,"line_start":1197,"line_end":1197,"column_start":12,"column_end":16},"name":"Iter","qualname":"::map::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":436},{"krate":0,"index":437}],"decl_id":null,"docs":" An iterator over the entries of a `HashMap`.","sig":null,"attributes":[{"value":"/ An iterator over the entries of a `HashMap`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":117918,"byte_end":117966,"line_start":1190,"line_end":1190,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":117967,"byte_end":117970,"line_start":1191,"line_end":1191,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`iter`] method on [`HashMap`]. See its","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":117971,"byte_end":118046,"line_start":1192,"line_end":1192,"column_start":1,"column_end":76}},{"value":"/ documentation for more.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":118047,"byte_end":118074,"line_start":1193,"line_end":1193,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":118075,"byte_end":118078,"line_start":1194,"line_end":1194,"column_start":1,"column_end":4}},{"value":"/ [`iter`]: struct.HashMap.html#method.iter","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":118079,"byte_end":118124,"line_start":1195,"line_end":1195,"column_start":1,"column_end":46}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":118125,"byte_end":118161,"line_start":1196,"line_end":1196,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":446},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":118997,"byte_end":119004,"line_start":1226,"line_end":1226,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::map::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":450},{"krate":0,"index":451}],"decl_id":null,"docs":" A mutable iterator over the entries of a `HashMap`.","sig":null,"attributes":[{"value":"/ A mutable iterator over the entries of a `HashMap`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":118723,"byte_end":118778,"line_start":1219,"line_end":1219,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":118779,"byte_end":118782,"line_start":1220,"line_end":1220,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`iter_mut`] method on [`HashMap`]. See its","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":118783,"byte_end":118862,"line_start":1221,"line_end":1221,"column_start":1,"column_end":80}},{"value":"/ documentation for more.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":118863,"byte_end":118890,"line_start":1222,"line_end":1222,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":118891,"byte_end":118894,"line_start":1223,"line_end":1223,"column_start":1,"column_end":4}},{"value":"/ [`iter_mut`]: struct.HashMap.html#method.iter_mut","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":118895,"byte_end":118948,"line_start":1224,"line_end":1224,"column_start":1,"column_end":54}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":118949,"byte_end":118985,"line_start":1225,"line_end":1225,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":459},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":120003,"byte_end":120011,"line_start":1255,"line_end":1255,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::map::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":462}],"decl_id":null,"docs":" An owning iterator over the entries of a `HashMap`.","sig":null,"attributes":[{"value":"/ An owning iterator over the entries of a `HashMap`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":119687,"byte_end":119742,"line_start":1248,"line_end":1248,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":119743,"byte_end":119746,"line_start":1249,"line_end":1249,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`into_iter`] method on [`HashMap`]","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":119747,"byte_end":119818,"line_start":1250,"line_end":1250,"column_start":1,"column_end":72}},{"value":"/ (provided by the `IntoIterator` trait). See its documentation for more.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":119819,"byte_end":119894,"line_start":1251,"line_end":1251,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":119895,"byte_end":119898,"line_start":1252,"line_end":1252,"column_start":1,"column_end":4}},{"value":"/ [`into_iter`]: struct.HashMap.html#method.into_iter","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":119899,"byte_end":119954,"line_start":1253,"line_end":1253,"column_start":1,"column_end":56}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":119955,"byte_end":119991,"line_start":1254,"line_end":1254,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":467},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":120606,"byte_end":120610,"line_start":1277,"line_end":1277,"column_start":12,"column_end":16},"name":"Keys","qualname":"::map::Keys","value":"Keys {  }","parent":null,"children":[{"krate":0,"index":471}],"decl_id":null,"docs":" An iterator over the keys of a `HashMap`.","sig":null,"attributes":[{"value":"/ An iterator over the keys of a `HashMap`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":120354,"byte_end":120399,"line_start":1270,"line_end":1270,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":120400,"byte_end":120403,"line_start":1271,"line_end":1271,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`keys`] method on [`HashMap`]. See its","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":120404,"byte_end":120479,"line_start":1272,"line_end":1272,"column_start":1,"column_end":76}},{"value":"/ documentation for more.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":120480,"byte_end":120507,"line_start":1273,"line_end":1273,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":120508,"byte_end":120511,"line_start":1274,"line_end":1274,"column_start":1,"column_end":4}},{"value":"/ [`keys`]: struct.HashMap.html#method.keys","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":120512,"byte_end":120557,"line_start":1275,"line_end":1275,"column_start":1,"column_end":46}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":120558,"byte_end":120594,"line_start":1276,"line_end":1276,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":480},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":121334,"byte_end":121340,"line_start":1304,"line_end":1304,"column_start":12,"column_end":18},"name":"Values","qualname":"::map::Values","value":"Values {  }","parent":null,"children":[{"krate":0,"index":484}],"decl_id":null,"docs":" An iterator over the values of a `HashMap`.","sig":null,"attributes":[{"value":"/ An iterator over the values of a `HashMap`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":121074,"byte_end":121121,"line_start":1297,"line_end":1297,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":121122,"byte_end":121125,"line_start":1298,"line_end":1298,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`values`] method on [`HashMap`]. See its","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":121126,"byte_end":121203,"line_start":1299,"line_end":1299,"column_start":1,"column_end":78}},{"value":"/ documentation for more.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":121204,"byte_end":121231,"line_start":1300,"line_end":1300,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":121232,"byte_end":121235,"line_start":1301,"line_end":1301,"column_start":1,"column_end":4}},{"value":"/ [`values`]: struct.HashMap.html#method.values","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":121236,"byte_end":121285,"line_start":1302,"line_end":1302,"column_start":1,"column_end":50}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":121286,"byte_end":121322,"line_start":1303,"line_end":1303,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":493},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":122076,"byte_end":122081,"line_start":1331,"line_end":1331,"column_start":12,"column_end":17},"name":"Drain","qualname":"::map::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":497}],"decl_id":null,"docs":" A draining iterator over the entries of a `HashMap`.","sig":null,"attributes":[{"value":"/ A draining iterator over the entries of a `HashMap`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":121810,"byte_end":121866,"line_start":1324,"line_end":1324,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":121867,"byte_end":121870,"line_start":1325,"line_end":1325,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`drain`] method on [`HashMap`]. See its","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":121871,"byte_end":121947,"line_start":1326,"line_end":1326,"column_start":1,"column_end":77}},{"value":"/ documentation for more.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":121948,"byte_end":121975,"line_start":1327,"line_end":1327,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":121976,"byte_end":121979,"line_start":1328,"line_end":1328,"column_start":1,"column_end":4}},{"value":"/ [`drain`]: struct.HashMap.html#method.drain","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":121980,"byte_end":122027,"line_start":1329,"line_end":1329,"column_start":1,"column_end":48}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":122028,"byte_end":122064,"line_start":1330,"line_end":1330,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":502},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":122751,"byte_end":122762,"line_start":1353,"line_end":1353,"column_start":12,"column_end":23},"name":"DrainFilter","qualname":"::map::DrainFilter","value":"DrainFilter {  }","parent":null,"children":[{"krate":0,"index":507},{"krate":0,"index":508}],"decl_id":null,"docs":" A draining iterator over entries of a `HashMap` which don't satisfy the predicate `f`.","sig":null,"attributes":[{"value":"/ A draining iterator over entries of a `HashMap` which don't satisfy the predicate `f`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":122430,"byte_end":122520,"line_start":1346,"line_end":1346,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":122521,"byte_end":122524,"line_start":1347,"line_end":1347,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`drain_filter`] method on [`HashMap`]. See its","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":122525,"byte_end":122608,"line_start":1348,"line_end":1348,"column_start":1,"column_end":84}},{"value":"/ documentation for more.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":122609,"byte_end":122636,"line_start":1349,"line_end":1349,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":122637,"byte_end":122640,"line_start":1350,"line_end":1350,"column_start":1,"column_end":4}},{"value":"/ [`drain_filter`]: struct.HashMap.html#method.drain_filter","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":122641,"byte_end":122702,"line_start":1351,"line_end":1351,"column_start":1,"column_end":62}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":122703,"byte_end":122739,"line_start":1352,"line_end":1352,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":545},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":124880,"byte_end":124889,"line_start":1434,"line_end":1434,"column_start":12,"column_end":21},"name":"ValuesMut","qualname":"::map::ValuesMut","value":"ValuesMut {  }","parent":null,"children":[{"krate":0,"index":549}],"decl_id":null,"docs":" A mutable iterator over the values of a `HashMap`.","sig":null,"attributes":[{"value":"/ A mutable iterator over the values of a `HashMap`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":124601,"byte_end":124655,"line_start":1427,"line_end":1427,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":124656,"byte_end":124659,"line_start":1428,"line_end":1428,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`values_mut`] method on [`HashMap`]. See its","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":124660,"byte_end":124741,"line_start":1429,"line_end":1429,"column_start":1,"column_end":82}},{"value":"/ documentation for more.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":124742,"byte_end":124769,"line_start":1430,"line_end":1430,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":124770,"byte_end":124773,"line_start":1431,"line_end":1431,"column_start":1,"column_end":4}},{"value":"/ [`values_mut`]: struct.HashMap.html#method.values_mut","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":124774,"byte_end":124831,"line_start":1432,"line_end":1432,"column_start":1,"column_end":58}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":124832,"byte_end":124868,"line_start":1433,"line_end":1433,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":550},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":125176,"byte_end":125194,"line_start":1443,"line_end":1443,"column_start":12,"column_end":30},"name":"RawEntryBuilderMut","qualname":"::map::RawEntryBuilderMut","value":"RawEntryBuilderMut {  }","parent":null,"children":[{"krate":0,"index":555}],"decl_id":null,"docs":" A builder for computing where in a [`HashMap`] a key-value pair would be stored.","sig":null,"attributes":[{"value":"/ A builder for computing where in a [`HashMap`] a key-value pair would be stored.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":124935,"byte_end":125019,"line_start":1438,"line_end":1438,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":125020,"byte_end":125023,"line_start":1439,"line_end":1439,"column_start":1,"column_end":4}},{"value":"/ See the [`HashMap::raw_entry_mut`] docs for usage examples.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":125024,"byte_end":125087,"line_start":1440,"line_end":1440,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":125088,"byte_end":125091,"line_start":1441,"line_end":1441,"column_start":1,"column_end":4}},{"value":"/ [`HashMap::raw_entry_mut`]: struct.HashMap.html#method.raw_entry_mut","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":125092,"byte_end":125164,"line_start":1442,"line_end":1442,"column_start":1,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":561},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":125799,"byte_end":125807,"line_start":1460,"line_end":1460,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::map::RawEntryMut::Occupied","value":"RawEntryMut::Occupied(RawOccupiedEntryMut<'a, K, V, S>)","parent":{"krate":0,"index":556},"children":[],"decl_id":null,"docs":" An occupied entry.\n","sig":null,"attributes":[{"value":"/ An occupied entry.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":125772,"byte_end":125794,"line_start":1459,"line_end":1459,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":564},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":125871,"byte_end":125877,"line_start":1462,"line_end":1462,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::map::RawEntryMut::Vacant","value":"RawEntryMut::Vacant(RawVacantEntryMut<'a, K, V, S>)","parent":{"krate":0,"index":556},"children":[],"decl_id":null,"docs":" A vacant entry.\n","sig":null,"attributes":[{"value":"/ A vacant entry.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":125847,"byte_end":125866,"line_start":1461,"line_end":1461,"column_start":5,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":556},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":125741,"byte_end":125752,"line_start":1458,"line_end":1458,"column_start":10,"column_end":21},"name":"RawEntryMut","qualname":"::map::RawEntryMut","value":"RawEntryMut::{Occupied, Vacant}","parent":null,"children":[{"krate":0,"index":561},{"krate":0,"index":564}],"decl_id":null,"docs":" A view into a single entry in a map, which may either be vacant or occupied.","sig":null,"attributes":[{"value":"/ A view into a single entry in a map, which may either be vacant or occupied.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":125248,"byte_end":125328,"line_start":1447,"line_end":1447,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":125329,"byte_end":125332,"line_start":1448,"line_end":1448,"column_start":1,"column_end":4}},{"value":"/ This is a lower-level version of [`Entry`].","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":125333,"byte_end":125380,"line_start":1449,"line_end":1449,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":125381,"byte_end":125384,"line_start":1450,"line_end":1450,"column_start":1,"column_end":4}},{"value":"/ This `enum` is constructed through the [`raw_entry_mut`] method on [`HashMap`],","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":125385,"byte_end":125468,"line_start":1451,"line_end":1451,"column_start":1,"column_end":84}},{"value":"/ then calling one of the methods of that [`RawEntryBuilderMut`].","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":125469,"byte_end":125536,"line_start":1452,"line_end":1452,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":125537,"byte_end":125540,"line_start":1453,"line_end":1453,"column_start":1,"column_end":4}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":125541,"byte_end":125577,"line_start":1454,"line_end":1454,"column_start":1,"column_end":37}},{"value":"/ [`Entry`]: enum.Entry.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":125578,"byte_end":125608,"line_start":1455,"line_end":1455,"column_start":1,"column_end":31}},{"value":"/ [`raw_entry_mut`]: struct.HashMap.html#method.raw_entry_mut","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":125609,"byte_end":125672,"line_start":1456,"line_end":1456,"column_start":1,"column_end":64}},{"value":"/ [`RawEntryBuilderMut`]: struct.RawEntryBuilderMut.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":125673,"byte_end":125731,"line_start":1457,"line_end":1457,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":567},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":126066,"byte_end":126085,"line_start":1469,"line_end":1469,"column_start":12,"column_end":31},"name":"RawOccupiedEntryMut","qualname":"::map::RawOccupiedEntryMut","value":"RawOccupiedEntryMut {  }","parent":null,"children":[{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":574}],"decl_id":null,"docs":" A view into an occupied entry in a `HashMap`.\n It is part of the [`RawEntryMut`] enum.","sig":null,"attributes":[{"value":"/ A view into an occupied entry in a `HashMap`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":125914,"byte_end":125963,"line_start":1465,"line_end":1465,"column_start":1,"column_end":50}},{"value":"/ It is part of the [`RawEntryMut`] enum.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":125964,"byte_end":126007,"line_start":1466,"line_end":1466,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":126008,"byte_end":126011,"line_start":1467,"line_end":1467,"column_start":1,"column_end":4}},{"value":"/ [`RawEntryMut`]: enum.RawEntryMut.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":126012,"byte_end":126054,"line_start":1468,"line_end":1468,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":583},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":126566,"byte_end":126583,"line_start":1494,"line_end":1494,"column_start":12,"column_end":29},"name":"RawVacantEntryMut","qualname":"::map::RawVacantEntryMut","value":"RawVacantEntryMut {  }","parent":null,"children":[{"krate":0,"index":588},{"krate":0,"index":589}],"decl_id":null,"docs":" A view into a vacant entry in a `HashMap`.\n It is part of the [`RawEntryMut`] enum.","sig":null,"attributes":[{"value":"/ A view into a vacant entry in a `HashMap`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":126417,"byte_end":126463,"line_start":1490,"line_end":1490,"column_start":1,"column_end":47}},{"value":"/ It is part of the [`RawEntryMut`] enum.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":126464,"byte_end":126507,"line_start":1491,"line_end":1491,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":126508,"byte_end":126511,"line_start":1492,"line_end":1492,"column_start":1,"column_end":4}},{"value":"/ [`RawEntryMut`]: enum.RawEntryMut.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":126512,"byte_end":126554,"line_start":1493,"line_end":1493,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":590},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":126893,"byte_end":126908,"line_start":1504,"line_end":1504,"column_start":12,"column_end":27},"name":"RawEntryBuilder","qualname":"::map::RawEntryBuilder","value":"RawEntryBuilder {  }","parent":null,"children":[{"krate":0,"index":595}],"decl_id":null,"docs":" A builder for computing where in a [`HashMap`] a key-value pair would be stored.","sig":null,"attributes":[{"value":"/ A builder for computing where in a [`HashMap`] a key-value pair would be stored.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":126664,"byte_end":126748,"line_start":1499,"line_end":1499,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":126749,"byte_end":126752,"line_start":1500,"line_end":1500,"column_start":1,"column_end":4}},{"value":"/ See the [`HashMap::raw_entry`] docs for usage examples.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":126753,"byte_end":126812,"line_start":1501,"line_end":1501,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":126813,"byte_end":126816,"line_start":1502,"line_end":1502,"column_start":1,"column_end":4}},{"value":"/ [`HashMap::raw_entry`]: struct.HashMap.html#method.raw_entry","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":126817,"byte_end":126881,"line_start":1503,"line_end":1503,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":601},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":127166,"byte_end":127174,"line_start":1512,"line_end":1512,"column_start":12,"column_end":20},"name":"from_key","qualname":"<RawEntryBuilderMut>::from_key","value":"fn <Q> (self, k: &Q) -> RawEntryMut<'a, K, V, S>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `RawEntryMut` from the given key.\n","sig":null,"attributes":[{"value":"/ Creates a `RawEntryMut` from the given key.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":127014,"byte_end":127061,"line_start":1509,"line_end":1509,"column_start":5,"column_end":52}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":127115,"byte_end":127154,"line_start":1511,"line_end":1511,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":603},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":127601,"byte_end":127624,"line_start":1526,"line_end":1526,"column_start":12,"column_end":35},"name":"from_key_hashed_nocheck","qualname":"<RawEntryBuilderMut>::from_key_hashed_nocheck","value":"fn <Q> (self, hash: u64, k: &Q) -> RawEntryMut<'a, K, V, S>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `RawEntryMut` from the given key and its hash.\n","sig":null,"attributes":[{"value":"/ Creates a `RawEntryMut` from the given key and its hash.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":127471,"byte_end":127531,"line_start":1523,"line_end":1523,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":127536,"byte_end":127545,"line_start":1524,"line_end":1524,"column_start":5,"column_end":14}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":127550,"byte_end":127589,"line_start":1525,"line_end":1525,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":611},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":128010,"byte_end":128019,"line_start":1539,"line_end":1539,"column_start":12,"column_end":21},"name":"from_hash","qualname":"<RawEntryBuilderMut>::from_hash","value":"fn <F> (self, hash: u64, is_match: F) -> RawEntryMut<'a, K, V, S>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `RawEntryMut` from the given hash.\n","sig":null,"attributes":[{"value":"/ Creates a `RawEntryMut` from the given hash.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":127857,"byte_end":127905,"line_start":1536,"line_end":1536,"column_start":5,"column_end":53}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":127959,"byte_end":127998,"line_start":1538,"line_end":1538,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":623},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":129014,"byte_end":129022,"line_start":1569,"line_end":1569,"column_start":12,"column_end":20},"name":"from_key","qualname":"<RawEntryBuilder>::from_key","value":"fn <Q> (self, k: &Q) -> Option<(&'a K, &'a V)>","parent":null,"children":[],"decl_id":null,"docs":" Access an entry by key.\n","sig":null,"attributes":[{"value":"/ Access an entry by key.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":128882,"byte_end":128909,"line_start":1566,"line_end":1566,"column_start":5,"column_end":32}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":128963,"byte_end":129002,"line_start":1568,"line_end":1568,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":625},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":129464,"byte_end":129487,"line_start":1583,"line_end":1583,"column_start":12,"column_end":35},"name":"from_key_hashed_nocheck","qualname":"<RawEntryBuilder>::from_key_hashed_nocheck","value":"fn <Q> (self, hash: u64, k: &Q) -> Option<(&'a K, &'a V)>","parent":null,"children":[],"decl_id":null,"docs":" Access an entry by a key and its hash.\n","sig":null,"attributes":[{"value":"/ Access an entry by a key and its hash.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":129317,"byte_end":129359,"line_start":1580,"line_end":1580,"column_start":5,"column_end":47}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":129413,"byte_end":129452,"line_start":1582,"line_end":1582,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":631},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":130227,"byte_end":130236,"line_start":1608,"line_end":1608,"column_start":12,"column_end":21},"name":"from_hash","qualname":"<RawEntryBuilder>::from_hash","value":"fn <F> (self, hash: u64, is_match: F) -> Option<(&'a K, &'a V)>","parent":null,"children":[],"decl_id":null,"docs":" Access an entry by hash.\n","sig":null,"attributes":[{"value":"/ Access an entry by hash.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":130094,"byte_end":130122,"line_start":1605,"line_end":1605,"column_start":5,"column_end":33}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":130176,"byte_end":130215,"line_start":1607,"line_end":1607,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":638},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":130880,"byte_end":130886,"line_start":1630,"line_end":1630,"column_start":12,"column_end":18},"name":"insert","qualname":"<RawEntryMut>::insert","value":"fn (self, key: K, value: V) -> RawOccupiedEntryMut<'a, K, V, S>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry, and returns a RawOccupiedEntryMut.","sig":null,"attributes":[{"value":"/ Sets the value of the entry, and returns a RawOccupiedEntryMut.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":130436,"byte_end":130503,"line_start":1617,"line_end":1617,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":130508,"byte_end":130511,"line_start":1618,"line_end":1618,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":130516,"byte_end":130530,"line_start":1619,"line_end":1619,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":130535,"byte_end":130538,"line_start":1620,"line_end":1620,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":130543,"byte_end":130550,"line_start":1621,"line_end":1621,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":130555,"byte_end":130582,"line_start":1622,"line_end":1622,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":130587,"byte_end":130590,"line_start":1623,"line_end":1623,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":130595,"byte_end":130648,"line_start":1624,"line_end":1624,"column_start":5,"column_end":58}},{"value":"/ let entry = map.raw_entry_mut().from_key(\"horseyland\").insert(\"horseyland\", 37);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":130653,"byte_end":130737,"line_start":1625,"line_end":1625,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":130742,"byte_end":130745,"line_start":1626,"line_end":1626,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(entry.remove_entry(), (\"horseyland\", 37));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":130750,"byte_end":130807,"line_start":1627,"line_end":1627,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":130812,"byte_end":130819,"line_start":1628,"line_end":1628,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":639},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":131866,"byte_end":131875,"line_start":1661,"line_end":1661,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<RawEntryMut>::or_insert","value":"fn (self, default_key: K, default_val: V) -> (&'a mut K, &'a mut V)","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the default if empty, and returns\n mutable references to the key and value in the entry.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the default if empty, and returns","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":131243,"byte_end":131325,"line_start":1644,"line_end":1644,"column_start":5,"column_end":87}},{"value":"/ mutable references to the key and value in the entry.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":131330,"byte_end":131387,"line_start":1645,"line_end":1645,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":131392,"byte_end":131395,"line_start":1646,"line_end":1646,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":131400,"byte_end":131414,"line_start":1647,"line_end":1647,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":131419,"byte_end":131422,"line_start":1648,"line_end":1648,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":131427,"byte_end":131434,"line_start":1649,"line_end":1649,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":131439,"byte_end":131466,"line_start":1650,"line_end":1650,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":131471,"byte_end":131474,"line_start":1651,"line_end":1651,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":131479,"byte_end":131532,"line_start":1652,"line_end":1652,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":131537,"byte_end":131540,"line_start":1653,"line_end":1653,"column_start":5,"column_end":8}},{"value":"/ map.raw_entry_mut().from_key(\"poneyland\").or_insert(\"poneyland\", 3);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":131545,"byte_end":131617,"line_start":1654,"line_end":1654,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(map[\"poneyland\"], 3);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":131622,"byte_end":131658,"line_start":1655,"line_end":1655,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":131663,"byte_end":131666,"line_start":1656,"line_end":1656,"column_start":5,"column_end":8}},{"value":"/ *map.raw_entry_mut().from_key(\"poneyland\").or_insert(\"poneyland\", 10).1 *= 2;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":131671,"byte_end":131752,"line_start":1657,"line_end":1657,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(map[\"poneyland\"], 6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":131757,"byte_end":131793,"line_start":1658,"line_end":1658,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":131798,"byte_end":131805,"line_start":1659,"line_end":1659,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":640},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":132779,"byte_end":132793,"line_start":1689,"line_end":1689,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<RawEntryMut>::or_insert_with","value":"fn <F> (self, default: F) -> (&'a mut K, &'a mut V)","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the result of the default function if empty,\n and returns mutable references to the key and value in the entry.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the result of the default function if empty,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":132189,"byte_end":132282,"line_start":1672,"line_end":1672,"column_start":5,"column_end":98}},{"value":"/ and returns mutable references to the key and value in the entry.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":132287,"byte_end":132356,"line_start":1673,"line_end":1673,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":132361,"byte_end":132364,"line_start":1674,"line_end":1674,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":132369,"byte_end":132383,"line_start":1675,"line_end":1675,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":132388,"byte_end":132391,"line_start":1676,"line_end":1676,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":132396,"byte_end":132403,"line_start":1677,"line_end":1677,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":132408,"byte_end":132435,"line_start":1678,"line_end":1678,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":132440,"byte_end":132443,"line_start":1679,"line_end":1679,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, String> = HashMap::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":132448,"byte_end":132504,"line_start":1680,"line_end":1680,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":132509,"byte_end":132512,"line_start":1681,"line_end":1681,"column_start":5,"column_end":8}},{"value":"/ map.raw_entry_mut().from_key(\"poneyland\").or_insert_with(|| {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":132517,"byte_end":132582,"line_start":1682,"line_end":1682,"column_start":5,"column_end":70}},{"value":"/     (\"poneyland\", \"hoho\".to_string())","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":132587,"byte_end":132628,"line_start":1683,"line_end":1683,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":132633,"byte_end":132640,"line_start":1684,"line_end":1684,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":132645,"byte_end":132648,"line_start":1685,"line_end":1685,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], \"hoho\".to_string());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":132653,"byte_end":132706,"line_start":1686,"line_end":1686,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":132711,"byte_end":132718,"line_start":1687,"line_end":1687,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":642},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":133889,"byte_end":133899,"line_start":1727,"line_end":1727,"column_start":12,"column_end":22},"name":"and_modify","qualname":"<RawEntryMut>::and_modify","value":"fn <F> (self, f: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Provides in-place mutable access to an occupied entry before any\n potential inserts into the map.","sig":null,"attributes":[{"value":"/ Provides in-place mutable access to an occupied entry before any","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":133172,"byte_end":133240,"line_start":1704,"line_end":1704,"column_start":5,"column_end":73}},{"value":"/ potential inserts into the map.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":133245,"byte_end":133280,"line_start":1705,"line_end":1705,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":133285,"byte_end":133288,"line_start":1706,"line_end":1706,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":133293,"byte_end":133307,"line_start":1707,"line_end":1707,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":133312,"byte_end":133315,"line_start":1708,"line_end":1708,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":133320,"byte_end":133327,"line_start":1709,"line_end":1709,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":133332,"byte_end":133359,"line_start":1710,"line_end":1710,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":133364,"byte_end":133367,"line_start":1711,"line_end":1711,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":133372,"byte_end":133425,"line_start":1712,"line_end":1712,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":133430,"byte_end":133433,"line_start":1713,"line_end":1713,"column_start":5,"column_end":8}},{"value":"/ map.raw_entry_mut()","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":133438,"byte_end":133461,"line_start":1714,"line_end":1714,"column_start":5,"column_end":28}},{"value":"/    .from_key(\"poneyland\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":133466,"byte_end":133495,"line_start":1715,"line_end":1715,"column_start":5,"column_end":34}},{"value":"/    .and_modify(|_k, v| { *v += 1 })","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":133500,"byte_end":133539,"line_start":1716,"line_end":1716,"column_start":5,"column_end":44}},{"value":"/    .or_insert(\"poneyland\", 42);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":133544,"byte_end":133579,"line_start":1717,"line_end":1717,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(map[\"poneyland\"], 42);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":133584,"byte_end":133621,"line_start":1718,"line_end":1718,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":133626,"byte_end":133629,"line_start":1719,"line_end":1719,"column_start":5,"column_end":8}},{"value":"/ map.raw_entry_mut()","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":133634,"byte_end":133657,"line_start":1720,"line_end":1720,"column_start":5,"column_end":28}},{"value":"/    .from_key(\"poneyland\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":133662,"byte_end":133691,"line_start":1721,"line_end":1721,"column_start":5,"column_end":34}},{"value":"/    .and_modify(|_k, v| { *v += 1 })","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":133696,"byte_end":133735,"line_start":1722,"line_end":1722,"column_start":5,"column_end":44}},{"value":"/    .or_insert(\"poneyland\", 0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":133740,"byte_end":133774,"line_start":1723,"line_end":1723,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(map[\"poneyland\"], 43);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":133779,"byte_end":133816,"line_start":1724,"line_end":1724,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":133821,"byte_end":133828,"line_start":1725,"line_end":1725,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":644},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":135985,"byte_end":136007,"line_start":1799,"line_end":1799,"column_start":12,"column_end":34},"name":"and_replace_entry_with","qualname":"<RawEntryMut>::and_replace_entry_with","value":"fn <F> (self, f: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Provides shared access to the key and owned access to the value of\n an occupied entry and allows to replace or remove it based on the\n value of the returned option.","sig":null,"attributes":[{"value":"/ Provides shared access to the key and owned access to the value of","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":134320,"byte_end":134390,"line_start":1743,"line_end":1743,"column_start":5,"column_end":75}},{"value":"/ an occupied entry and allows to replace or remove it based on the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":134395,"byte_end":134464,"line_start":1744,"line_end":1744,"column_start":5,"column_end":74}},{"value":"/ value of the returned option.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":134469,"byte_end":134502,"line_start":1745,"line_end":1745,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":134507,"byte_end":134510,"line_start":1746,"line_end":1746,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":134515,"byte_end":134529,"line_start":1747,"line_end":1747,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":134534,"byte_end":134537,"line_start":1748,"line_end":1748,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":134542,"byte_end":134549,"line_start":1749,"line_end":1749,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":134554,"byte_end":134581,"line_start":1750,"line_end":1750,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::RawEntryMut;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":134586,"byte_end":134627,"line_start":1751,"line_end":1751,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":134632,"byte_end":134635,"line_start":1752,"line_end":1752,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":134640,"byte_end":134693,"line_start":1753,"line_end":1753,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":134698,"byte_end":134701,"line_start":1754,"line_end":1754,"column_start":5,"column_end":8}},{"value":"/ let entry = map","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":134706,"byte_end":134725,"line_start":1755,"line_end":1755,"column_start":5,"column_end":24}},{"value":"/     .raw_entry_mut()","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":134730,"byte_end":134754,"line_start":1756,"line_end":1756,"column_start":5,"column_end":29}},{"value":"/     .from_key(\"poneyland\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":134759,"byte_end":134789,"line_start":1757,"line_end":1757,"column_start":5,"column_end":35}},{"value":"/     .and_replace_entry_with(|_k, _v| panic!());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":134794,"byte_end":134845,"line_start":1758,"line_end":1758,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":134850,"byte_end":134853,"line_start":1759,"line_end":1759,"column_start":5,"column_end":8}},{"value":"/ match entry {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":134858,"byte_end":134875,"line_start":1760,"line_end":1760,"column_start":5,"column_end":22}},{"value":"/     RawEntryMut::Vacant(_) => {},","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":134880,"byte_end":134917,"line_start":1761,"line_end":1761,"column_start":5,"column_end":42}},{"value":"/     RawEntryMut::Occupied(_) => panic!(),","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":134922,"byte_end":134967,"line_start":1762,"line_end":1762,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":134972,"byte_end":134977,"line_start":1763,"line_end":1763,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":134982,"byte_end":134985,"line_start":1764,"line_end":1764,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"poneyland\", 42);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":134990,"byte_end":135022,"line_start":1765,"line_end":1765,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":135027,"byte_end":135030,"line_start":1766,"line_end":1766,"column_start":5,"column_end":8}},{"value":"/ let entry = map","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":135035,"byte_end":135054,"line_start":1767,"line_end":1767,"column_start":5,"column_end":24}},{"value":"/     .raw_entry_mut()","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":135059,"byte_end":135083,"line_start":1768,"line_end":1768,"column_start":5,"column_end":29}},{"value":"/     .from_key(\"poneyland\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":135088,"byte_end":135118,"line_start":1769,"line_end":1769,"column_start":5,"column_end":35}},{"value":"/     .and_replace_entry_with(|k, v| {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":135123,"byte_end":135163,"line_start":1770,"line_end":1770,"column_start":5,"column_end":45}},{"value":"/         assert_eq!(k, &\"poneyland\");","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":135168,"byte_end":135208,"line_start":1771,"line_end":1771,"column_start":5,"column_end":45}},{"value":"/         assert_eq!(v, 42);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":135213,"byte_end":135243,"line_start":1772,"line_end":1772,"column_start":5,"column_end":35}},{"value":"/         Some(v + 1)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":135248,"byte_end":135271,"line_start":1773,"line_end":1773,"column_start":5,"column_end":28}},{"value":"/     });","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":135276,"byte_end":135287,"line_start":1774,"line_end":1774,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":135292,"byte_end":135295,"line_start":1775,"line_end":1775,"column_start":5,"column_end":8}},{"value":"/ match entry {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":135300,"byte_end":135317,"line_start":1776,"line_end":1776,"column_start":5,"column_end":22}},{"value":"/     RawEntryMut::Occupied(e) => {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":135322,"byte_end":135359,"line_start":1777,"line_end":1777,"column_start":5,"column_end":42}},{"value":"/         assert_eq!(e.key(), &\"poneyland\");","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":135364,"byte_end":135410,"line_start":1778,"line_end":1778,"column_start":5,"column_end":51}},{"value":"/         assert_eq!(e.get(), &43);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":135415,"byte_end":135452,"line_start":1779,"line_end":1779,"column_start":5,"column_end":42}},{"value":"/     },","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":135457,"byte_end":135467,"line_start":1780,"line_end":1780,"column_start":5,"column_end":15}},{"value":"/     RawEntryMut::Vacant(_) => panic!(),","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":135472,"byte_end":135515,"line_start":1781,"line_end":1781,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":135520,"byte_end":135525,"line_start":1782,"line_end":1782,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":135530,"byte_end":135533,"line_start":1783,"line_end":1783,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 43);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":135538,"byte_end":135575,"line_start":1784,"line_end":1784,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":135580,"byte_end":135583,"line_start":1785,"line_end":1785,"column_start":5,"column_end":8}},{"value":"/ let entry = map","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":135588,"byte_end":135607,"line_start":1786,"line_end":1786,"column_start":5,"column_end":24}},{"value":"/     .raw_entry_mut()","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":135612,"byte_end":135636,"line_start":1787,"line_end":1787,"column_start":5,"column_end":29}},{"value":"/     .from_key(\"poneyland\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":135641,"byte_end":135671,"line_start":1788,"line_end":1788,"column_start":5,"column_end":35}},{"value":"/     .and_replace_entry_with(|_k, _v| None);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":135676,"byte_end":135723,"line_start":1789,"line_end":1789,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":135728,"byte_end":135731,"line_start":1790,"line_end":1790,"column_start":5,"column_end":8}},{"value":"/ match entry {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":135736,"byte_end":135753,"line_start":1791,"line_end":1791,"column_start":5,"column_end":22}},{"value":"/     RawEntryMut::Vacant(_) => {},","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":135758,"byte_end":135795,"line_start":1792,"line_end":1792,"column_start":5,"column_end":42}},{"value":"/     RawEntryMut::Occupied(_) => panic!(),","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":135800,"byte_end":135845,"line_start":1793,"line_end":1793,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":135850,"byte_end":135855,"line_start":1794,"line_end":1794,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":135860,"byte_end":135863,"line_start":1795,"line_end":1795,"column_start":5,"column_end":8}},{"value":"/ assert!(!map.contains_key(\"poneyland\"));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":135868,"byte_end":135912,"line_start":1796,"line_end":1796,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":135917,"byte_end":135924,"line_start":1797,"line_end":1797,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":651},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":136406,"byte_end":136409,"line_start":1813,"line_end":1813,"column_start":12,"column_end":15},"name":"key","qualname":"<RawOccupiedEntryMut>::key","value":"fn (&self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the key in the entry.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the key in the entry.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":136300,"byte_end":136345,"line_start":1811,"line_end":1811,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":652},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":136591,"byte_end":136598,"line_start":1819,"line_end":1819,"column_start":12,"column_end":19},"name":"key_mut","qualname":"<RawOccupiedEntryMut>::key_mut","value":"fn (&mut self) -> &mut K","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the key in the entry.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the key in the entry.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":136477,"byte_end":136530,"line_start":1817,"line_end":1817,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":653},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":136859,"byte_end":136867,"line_start":1826,"line_end":1826,"column_start":12,"column_end":20},"name":"into_key","qualname":"<RawOccupiedEntryMut>::into_key","value":"fn (self) -> &'a mut K","parent":null,"children":[],"decl_id":null,"docs":" Converts the entry into a mutable reference to the key in the entry\n with a lifetime bound to the map itself.\n","sig":null,"attributes":[{"value":"/ Converts the entry into a mutable reference to the key in the entry","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":136678,"byte_end":136749,"line_start":1823,"line_end":1823,"column_start":5,"column_end":76}},{"value":"/ with a lifetime bound to the map itself.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":136754,"byte_end":136798,"line_start":1824,"line_end":1824,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":654},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":137053,"byte_end":137056,"line_start":1832,"line_end":1832,"column_start":12,"column_end":15},"name":"get","qualname":"<RawOccupiedEntryMut>::get","value":"fn (&self) -> &V","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the value in the entry.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the value in the entry.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":136945,"byte_end":136992,"line_start":1830,"line_end":1830,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":655},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":137315,"byte_end":137323,"line_start":1839,"line_end":1839,"column_start":12,"column_end":20},"name":"into_mut","qualname":"<RawOccupiedEntryMut>::into_mut","value":"fn (self) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Converts the OccupiedEntry into a mutable reference to the value in the entry\n with a lifetime bound to the map itself.\n","sig":null,"attributes":[{"value":"/ Converts the OccupiedEntry into a mutable reference to the value in the entry","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":137124,"byte_end":137205,"line_start":1836,"line_end":1836,"column_start":5,"column_end":86}},{"value":"/ with a lifetime bound to the map itself.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":137210,"byte_end":137254,"line_start":1837,"line_end":1837,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":656},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":137517,"byte_end":137524,"line_start":1845,"line_end":1845,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<RawOccupiedEntryMut>::get_mut","value":"fn (&mut self) -> &mut V","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the value in the entry.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the value in the entry.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":137401,"byte_end":137456,"line_start":1843,"line_end":1843,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":657},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":137720,"byte_end":137733,"line_start":1851,"line_end":1851,"column_start":12,"column_end":25},"name":"get_key_value","qualname":"<RawOccupiedEntryMut>::get_key_value","value":"fn (&mut self) -> (&K, &V)","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the key and value in the entry.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the key and value in the entry.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":137604,"byte_end":137659,"line_start":1849,"line_end":1849,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":658},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":138006,"byte_end":138023,"line_start":1860,"line_end":1860,"column_start":12,"column_end":29},"name":"get_key_value_mut","qualname":"<RawOccupiedEntryMut>::get_key_value_mut","value":"fn (&mut self) -> (&mut K, &mut V)","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the key and value in the entry.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the key and value in the entry.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":137882,"byte_end":137945,"line_start":1858,"line_end":1858,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":659},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":138391,"byte_end":138405,"line_start":1870,"line_end":1870,"column_start":12,"column_end":26},"name":"into_key_value","qualname":"<RawOccupiedEntryMut>::into_key_value","value":"fn (self) -> (&'a mut K, &'a mut V)","parent":null,"children":[],"decl_id":null,"docs":" Converts the OccupiedEntry into a mutable reference to the key and value in the entry\n with a lifetime bound to the map itself.\n","sig":null,"attributes":[{"value":"/ Converts the OccupiedEntry into a mutable reference to the key and value in the entry","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":138192,"byte_end":138281,"line_start":1867,"line_end":1867,"column_start":5,"column_end":94}},{"value":"/ with a lifetime bound to the map itself.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":138286,"byte_end":138330,"line_start":1868,"line_end":1868,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":660},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":138703,"byte_end":138709,"line_start":1879,"line_end":1879,"column_start":12,"column_end":18},"name":"insert","qualname":"<RawOccupiedEntryMut>::insert","value":"fn (&mut self, value: V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry, and returns the entry's old value.\n","sig":null,"attributes":[{"value":"/ Sets the value of the entry, and returns the entry's old value.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":138575,"byte_end":138642,"line_start":1877,"line_end":1877,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":661},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":138921,"byte_end":138931,"line_start":1885,"line_end":1885,"column_start":12,"column_end":22},"name":"insert_key","qualname":"<RawOccupiedEntryMut>::insert_key","value":"fn (&mut self, key: K) -> K","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry, and returns the entry's old value.\n","sig":null,"attributes":[{"value":"/ Sets the value of the entry, and returns the entry's old value.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":138793,"byte_end":138860,"line_start":1883,"line_end":1883,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":662},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":139125,"byte_end":139131,"line_start":1891,"line_end":1891,"column_start":12,"column_end":18},"name":"remove","qualname":"<RawOccupiedEntryMut>::remove","value":"fn (self) -> V","parent":null,"children":[],"decl_id":null,"docs":" Takes the value out of the entry, and returns it.\n","sig":null,"attributes":[{"value":"/ Takes the value out of the entry, and returns it.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":139011,"byte_end":139064,"line_start":1889,"line_end":1889,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":663},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":139304,"byte_end":139316,"line_start":1897,"line_end":1897,"column_start":12,"column_end":24},"name":"remove_entry","qualname":"<RawOccupiedEntryMut>::remove_entry","value":"fn (self) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Take the ownership of the key and value from the map.\n","sig":null,"attributes":[{"value":"/ Take the ownership of the key and value from the map.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":139186,"byte_end":139243,"line_start":1895,"line_end":1895,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":664},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":139629,"byte_end":139647,"line_start":1905,"line_end":1905,"column_start":12,"column_end":30},"name":"replace_entry_with","qualname":"<RawOccupiedEntryMut>::replace_entry_with","value":"fn <F> (self, f: F) -> RawEntryMut<'a, K, V, S>","parent":null,"children":[],"decl_id":null,"docs":" Provides shared access to the key and owned access to the value of\n the entry and allows to replace or remove it based on the\n value of the returned option.\n","sig":null,"attributes":[{"value":"/ Provides shared access to the key and owned access to the value of","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":139394,"byte_end":139464,"line_start":1901,"line_end":1901,"column_start":5,"column_end":75}},{"value":"/ the entry and allows to replace or remove it based on the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":139469,"byte_end":139530,"line_start":1902,"line_end":1902,"column_start":5,"column_end":66}},{"value":"/ value of the returned option.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":139535,"byte_end":139568,"line_start":1903,"line_end":1903,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":673},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":140506,"byte_end":140512,"line_start":1932,"line_end":1932,"column_start":12,"column_end":18},"name":"insert","qualname":"<RawVacantEntryMut>::insert","value":"fn (self, key: K, value: V) -> (&'a mut K, &'a mut V)","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry with the VacantEntry's key,\n and returns a mutable reference to it.\n","sig":null,"attributes":[{"value":"/ Sets the value of the entry with the VacantEntry's key,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":140339,"byte_end":140398,"line_start":1929,"line_end":1929,"column_start":5,"column_end":64}},{"value":"/ and returns a mutable reference to it.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":140403,"byte_end":140445,"line_start":1930,"line_end":1930,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":674},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":140991,"byte_end":141012,"line_start":1946,"line_end":1946,"column_start":12,"column_end":33},"name":"insert_hashed_nocheck","qualname":"<RawVacantEntryMut>::insert_hashed_nocheck","value":"fn (self, hash: u64, key: K, value: V) -> (&'a mut K, &'a mut V)","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry with the VacantEntry's key,\n and returns a mutable reference to it.\n","sig":null,"attributes":[{"value":"/ Sets the value of the entry with the VacantEntry's key,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":140785,"byte_end":140844,"line_start":1942,"line_end":1942,"column_start":5,"column_end":64}},{"value":"/ and returns a mutable reference to it.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":140849,"byte_end":140891,"line_start":1943,"line_end":1943,"column_start":5,"column_end":47}},{"value":"allow(clippy :: shadow_unrelated)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":140945,"byte_end":140979,"line_start":1945,"line_end":1945,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":676},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":141391,"byte_end":141409,"line_start":1957,"line_end":1957,"column_start":12,"column_end":30},"name":"insert_with_hasher","qualname":"<RawVacantEntryMut>::insert_with_hasher","value":"fn <H> (self, hash: u64, key: K, value: V, hasher: H) -> (&'a mut K, &'a mut V)","parent":null,"children":[],"decl_id":null,"docs":" Set the value of an entry with a custom hasher function.\n","sig":null,"attributes":[{"value":"/ Set the value of an entry with a custom hasher function.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":141270,"byte_end":141330,"line_start":1955,"line_end":1955,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":711},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":143847,"byte_end":143855,"line_start":2039,"line_end":2039,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::map::Entry::Occupied","value":"Entry::Occupied(OccupiedEntry<'a, K, V, S>)","parent":{"krate":0,"index":706},"children":[],"decl_id":null,"docs":" An occupied entry.\n","sig":null,"attributes":[{"value":"/ An occupied entry.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":143820,"byte_end":143842,"line_start":2038,"line_end":2038,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":714},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":143914,"byte_end":143920,"line_start":2042,"line_end":2042,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::map::Entry::Vacant","value":"Entry::Vacant(VacantEntry<'a, K, V, S>)","parent":{"krate":0,"index":706},"children":[],"decl_id":null,"docs":" A vacant entry.\n","sig":null,"attributes":[{"value":"/ A vacant entry.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":143890,"byte_end":143909,"line_start":2041,"line_end":2041,"column_start":5,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":706},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":143795,"byte_end":143800,"line_start":2037,"line_end":2037,"column_start":10,"column_end":15},"name":"Entry","qualname":"::map::Entry","value":"Entry::{Occupied, Vacant}","parent":null,"children":[{"krate":0,"index":711},{"krate":0,"index":714}],"decl_id":null,"docs":" A view into a single entry in a map, which may either be vacant or occupied.","sig":null,"attributes":[{"value":"/ A view into a single entry in a map, which may either be vacant or occupied.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":143539,"byte_end":143619,"line_start":2031,"line_end":2031,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":143620,"byte_end":143623,"line_start":2032,"line_end":2032,"column_start":1,"column_end":4}},{"value":"/ This `enum` is constructed from the [`entry`] method on [`HashMap`].","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":143624,"byte_end":143696,"line_start":2033,"line_end":2033,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":143697,"byte_end":143700,"line_start":2034,"line_end":2034,"column_start":1,"column_end":4}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":143701,"byte_end":143737,"line_start":2035,"line_end":2035,"column_start":1,"column_end":37}},{"value":"/ [`entry`]: struct.HashMap.html#method.entry","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":143738,"byte_end":143785,"line_start":2036,"line_end":2036,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":722},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":144406,"byte_end":144419,"line_start":2058,"line_end":2058,"column_start":12,"column_end":25},"name":"OccupiedEntry","qualname":"::map::OccupiedEntry","value":"OccupiedEntry {  }","parent":null,"children":[{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":729},{"krate":0,"index":730}],"decl_id":null,"docs":" A view into an occupied entry in a `HashMap`.\n It is part of the [`Entry`] enum.","sig":null,"attributes":[{"value":"/ A view into an occupied entry in a `HashMap`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":144272,"byte_end":144321,"line_start":2054,"line_end":2054,"column_start":1,"column_end":50}},{"value":"/ It is part of the [`Entry`] enum.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":144322,"byte_end":144359,"line_start":2055,"line_end":2055,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":144360,"byte_end":144363,"line_start":2056,"line_end":2056,"column_start":1,"column_end":4}},{"value":"/ [`Entry`]: enum.Entry.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":144364,"byte_end":144394,"line_start":2057,"line_end":2057,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":744},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":145159,"byte_end":145170,"line_start":2093,"line_end":2093,"column_start":12,"column_end":23},"name":"VacantEntry","qualname":"::map::VacantEntry","value":"VacantEntry {  }","parent":null,"children":[{"krate":0,"index":749},{"krate":0,"index":750},{"krate":0,"index":751}],"decl_id":null,"docs":" A view into a vacant entry in a `HashMap`.\n It is part of the [`Entry`] enum.","sig":null,"attributes":[{"value":"/ A view into a vacant entry in a `HashMap`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":145028,"byte_end":145074,"line_start":2089,"line_end":2089,"column_start":1,"column_end":47}},{"value":"/ It is part of the [`Entry`] enum.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":145075,"byte_end":145112,"line_start":2090,"line_end":2090,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":145113,"byte_end":145116,"line_start":2091,"line_end":2091,"column_start":1,"column_end":4}},{"value":"/ [`Entry`]: enum.Entry.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":145117,"byte_end":145147,"line_start":2092,"line_end":2092,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":898},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":152752,"byte_end":152758,"line_start":2371,"line_end":2371,"column_start":12,"column_end":18},"name":"insert","qualname":"<Entry>::insert","value":"fn (self, value: V) -> OccupiedEntry<'a, K, V, S>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry, and returns an OccupiedEntry.","sig":null,"attributes":[{"value":"/ Sets the value of the entry, and returns an OccupiedEntry.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":152360,"byte_end":152422,"line_start":2358,"line_end":2358,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":152427,"byte_end":152430,"line_start":2359,"line_end":2359,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":152435,"byte_end":152449,"line_start":2360,"line_end":2360,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":152454,"byte_end":152457,"line_start":2361,"line_end":2361,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":152462,"byte_end":152469,"line_start":2362,"line_end":2362,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":152474,"byte_end":152501,"line_start":2363,"line_end":2363,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":152506,"byte_end":152509,"line_start":2364,"line_end":2364,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":152514,"byte_end":152567,"line_start":2365,"line_end":2365,"column_start":5,"column_end":58}},{"value":"/ let entry = map.entry(\"horseyland\").insert(37);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":152572,"byte_end":152623,"line_start":2366,"line_end":2366,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":152628,"byte_end":152631,"line_start":2367,"line_end":2367,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(entry.key(), &\"horseyland\");","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":152636,"byte_end":152679,"line_start":2368,"line_end":2368,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":152684,"byte_end":152691,"line_start":2369,"line_end":2369,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":899},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":153634,"byte_end":153643,"line_start":2402,"line_end":2402,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<Entry>::or_insert","value":"fn (self, default: V) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the default if empty, and returns\n a mutable reference to the value in the entry.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the default if empty, and returns","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":153084,"byte_end":153166,"line_start":2385,"line_end":2385,"column_start":5,"column_end":87}},{"value":"/ a mutable reference to the value in the entry.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":153171,"byte_end":153221,"line_start":2386,"line_end":2386,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":153226,"byte_end":153229,"line_start":2387,"line_end":2387,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":153234,"byte_end":153248,"line_start":2388,"line_end":2388,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":153253,"byte_end":153256,"line_start":2389,"line_end":2389,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":153261,"byte_end":153268,"line_start":2390,"line_end":2390,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":153273,"byte_end":153300,"line_start":2391,"line_end":2391,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":153305,"byte_end":153308,"line_start":2392,"line_end":2392,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":153313,"byte_end":153366,"line_start":2393,"line_end":2393,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":153371,"byte_end":153374,"line_start":2394,"line_end":2394,"column_start":5,"column_end":8}},{"value":"/ map.entry(\"poneyland\").or_insert(3);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":153379,"byte_end":153419,"line_start":2395,"line_end":2395,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(map[\"poneyland\"], 3);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":153424,"byte_end":153460,"line_start":2396,"line_end":2396,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":153465,"byte_end":153468,"line_start":2397,"line_end":2397,"column_start":5,"column_end":8}},{"value":"/ *map.entry(\"poneyland\").or_insert(10) *= 2;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":153473,"byte_end":153520,"line_start":2398,"line_end":2398,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(map[\"poneyland\"], 6);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":153525,"byte_end":153561,"line_start":2399,"line_end":2399,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":153566,"byte_end":153573,"line_start":2400,"line_end":2400,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":900},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":154433,"byte_end":154447,"line_start":2429,"line_end":2429,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<Entry>::or_insert_with","value":"fn <F> (self, default: F) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the result of the default function if empty,\n and returns a mutable reference to the value in the entry.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the result of the default function if empty,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":153889,"byte_end":153982,"line_start":2413,"line_end":2413,"column_start":5,"column_end":98}},{"value":"/ and returns a mutable reference to the value in the entry.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":153987,"byte_end":154049,"line_start":2414,"line_end":2414,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":154054,"byte_end":154057,"line_start":2415,"line_end":2415,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":154062,"byte_end":154076,"line_start":2416,"line_end":2416,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":154081,"byte_end":154084,"line_start":2417,"line_end":2417,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":154089,"byte_end":154096,"line_start":2418,"line_end":2418,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":154101,"byte_end":154128,"line_start":2419,"line_end":2419,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":154133,"byte_end":154136,"line_start":2420,"line_end":2420,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, String> = HashMap::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":154141,"byte_end":154197,"line_start":2421,"line_end":2421,"column_start":5,"column_end":61}},{"value":"/ let s = \"hoho\".to_string();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":154202,"byte_end":154233,"line_start":2422,"line_end":2422,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":154238,"byte_end":154241,"line_start":2423,"line_end":2423,"column_start":5,"column_end":8}},{"value":"/ map.entry(\"poneyland\").or_insert_with(|| s);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":154246,"byte_end":154294,"line_start":2424,"line_end":2424,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":154299,"byte_end":154302,"line_start":2425,"line_end":2425,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], \"hoho\".to_string());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":154307,"byte_end":154360,"line_start":2426,"line_end":2426,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":154365,"byte_end":154372,"line_start":2427,"line_end":2427,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":902},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":155275,"byte_end":155293,"line_start":2456,"line_end":2456,"column_start":12,"column_end":30},"name":"or_insert_with_key","qualname":"<Entry>::or_insert_with_key","value":"fn <F> (self, default: F) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting, if empty, the result of the default function,\n which takes the key as its argument, and returns a mutable reference to the value in the\n entry.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting, if empty, the result of the default function,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":154713,"byte_end":154808,"line_start":2440,"line_end":2440,"column_start":5,"column_end":100}},{"value":"/ which takes the key as its argument, and returns a mutable reference to the value in the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":154813,"byte_end":154905,"line_start":2441,"line_end":2441,"column_start":5,"column_end":97}},{"value":"/ entry.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":154910,"byte_end":154920,"line_start":2442,"line_end":2442,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":154925,"byte_end":154928,"line_start":2443,"line_end":2443,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":154933,"byte_end":154947,"line_start":2444,"line_end":2444,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":154952,"byte_end":154955,"line_start":2445,"line_end":2445,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":154960,"byte_end":154967,"line_start":2446,"line_end":2446,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":154972,"byte_end":154999,"line_start":2447,"line_end":2447,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":155004,"byte_end":155007,"line_start":2448,"line_end":2448,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, usize> = HashMap::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":155012,"byte_end":155067,"line_start":2449,"line_end":2449,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":155072,"byte_end":155075,"line_start":2450,"line_end":2450,"column_start":5,"column_end":8}},{"value":"/ map.entry(\"poneyland\").or_insert_with_key(|key| key.chars().count());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":155080,"byte_end":155153,"line_start":2451,"line_end":2451,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":155158,"byte_end":155161,"line_start":2452,"line_end":2452,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 9);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":155166,"byte_end":155202,"line_start":2453,"line_end":2453,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":155207,"byte_end":155214,"line_start":2454,"line_end":2454,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":904},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":155964,"byte_end":155967,"line_start":2481,"line_end":2481,"column_start":12,"column_end":15},"name":"key","qualname":"<Entry>::key","value":"fn (&self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to this entry's key.","sig":null,"attributes":[{"value":"/ Returns a reference to this entry's key.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":155638,"byte_end":155682,"line_start":2470,"line_end":2470,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":155687,"byte_end":155690,"line_start":2471,"line_end":2471,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":155695,"byte_end":155709,"line_start":2472,"line_end":2472,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":155714,"byte_end":155717,"line_start":2473,"line_end":2473,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":155722,"byte_end":155729,"line_start":2474,"line_end":2474,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":155734,"byte_end":155761,"line_start":2475,"line_end":2475,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":155766,"byte_end":155769,"line_start":2476,"line_end":2476,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":155774,"byte_end":155827,"line_start":2477,"line_end":2477,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(map.entry(\"poneyland\").key(), &\"poneyland\");","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":155832,"byte_end":155891,"line_start":2478,"line_end":2478,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":155896,"byte_end":155903,"line_start":2479,"line_end":2479,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":905},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":156756,"byte_end":156766,"line_start":2509,"line_end":2509,"column_start":12,"column_end":22},"name":"and_modify","qualname":"<Entry>::and_modify","value":"fn <F> (self, f: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Provides in-place mutable access to an occupied entry before any\n potential inserts into the map.","sig":null,"attributes":[{"value":"/ Provides in-place mutable access to an occupied entry before any","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":156134,"byte_end":156202,"line_start":2488,"line_end":2488,"column_start":5,"column_end":73}},{"value":"/ potential inserts into the map.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":156207,"byte_end":156242,"line_start":2489,"line_end":2489,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":156247,"byte_end":156250,"line_start":2490,"line_end":2490,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":156255,"byte_end":156269,"line_start":2491,"line_end":2491,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":156274,"byte_end":156277,"line_start":2492,"line_end":2492,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":156282,"byte_end":156289,"line_start":2493,"line_end":2493,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":156294,"byte_end":156321,"line_start":2494,"line_end":2494,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":156326,"byte_end":156329,"line_start":2495,"line_end":2495,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":156334,"byte_end":156387,"line_start":2496,"line_end":2496,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":156392,"byte_end":156395,"line_start":2497,"line_end":2497,"column_start":5,"column_end":8}},{"value":"/ map.entry(\"poneyland\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":156400,"byte_end":156426,"line_start":2498,"line_end":2498,"column_start":5,"column_end":31}},{"value":"/    .and_modify(|e| { *e += 1 })","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":156431,"byte_end":156466,"line_start":2499,"line_end":2499,"column_start":5,"column_end":40}},{"value":"/    .or_insert(42);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":156471,"byte_end":156493,"line_start":2500,"line_end":2500,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(map[\"poneyland\"], 42);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":156498,"byte_end":156535,"line_start":2501,"line_end":2501,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":156540,"byte_end":156543,"line_start":2502,"line_end":2502,"column_start":5,"column_end":8}},{"value":"/ map.entry(\"poneyland\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":156548,"byte_end":156574,"line_start":2503,"line_end":2503,"column_start":5,"column_end":31}},{"value":"/    .and_modify(|e| { *e += 1 })","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":156579,"byte_end":156614,"line_start":2504,"line_end":2504,"column_start":5,"column_end":40}},{"value":"/    .or_insert(42);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":156619,"byte_end":156641,"line_start":2505,"line_end":2505,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(map[\"poneyland\"], 43);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":156646,"byte_end":156683,"line_start":2506,"line_end":2506,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":156688,"byte_end":156695,"line_start":2507,"line_end":2507,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":907},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":158686,"byte_end":158708,"line_start":2577,"line_end":2577,"column_start":12,"column_end":34},"name":"and_replace_entry_with","qualname":"<Entry>::and_replace_entry_with","value":"fn <F> (self, f: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Provides shared access to the key and owned access to the value of\n an occupied entry and allows to replace or remove it based on the\n value of the returned option.","sig":null,"attributes":[{"value":"/ Provides shared access to the key and owned access to the value of","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":157066,"byte_end":157136,"line_start":2522,"line_end":2522,"column_start":5,"column_end":75}},{"value":"/ an occupied entry and allows to replace or remove it based on the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":157141,"byte_end":157210,"line_start":2523,"line_end":2523,"column_start":5,"column_end":74}},{"value":"/ value of the returned option.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":157215,"byte_end":157248,"line_start":2524,"line_end":2524,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":157253,"byte_end":157256,"line_start":2525,"line_end":2525,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":157261,"byte_end":157275,"line_start":2526,"line_end":2526,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":157280,"byte_end":157283,"line_start":2527,"line_end":2527,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":157288,"byte_end":157295,"line_start":2528,"line_end":2528,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":157300,"byte_end":157327,"line_start":2529,"line_end":2529,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::Entry;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":157332,"byte_end":157367,"line_start":2530,"line_end":2530,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":157372,"byte_end":157375,"line_start":2531,"line_end":2531,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":157380,"byte_end":157433,"line_start":2532,"line_end":2532,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":157438,"byte_end":157441,"line_start":2533,"line_end":2533,"column_start":5,"column_end":8}},{"value":"/ let entry = map","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":157446,"byte_end":157465,"line_start":2534,"line_end":2534,"column_start":5,"column_end":24}},{"value":"/     .entry(\"poneyland\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":157470,"byte_end":157497,"line_start":2535,"line_end":2535,"column_start":5,"column_end":32}},{"value":"/     .and_replace_entry_with(|_k, _v| panic!());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":157502,"byte_end":157553,"line_start":2536,"line_end":2536,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":157558,"byte_end":157561,"line_start":2537,"line_end":2537,"column_start":5,"column_end":8}},{"value":"/ match entry {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":157566,"byte_end":157583,"line_start":2538,"line_end":2538,"column_start":5,"column_end":22}},{"value":"/     Entry::Vacant(e) => {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":157588,"byte_end":157617,"line_start":2539,"line_end":2539,"column_start":5,"column_end":34}},{"value":"/         assert_eq!(e.key(), &\"poneyland\");","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":157622,"byte_end":157668,"line_start":2540,"line_end":2540,"column_start":5,"column_end":51}},{"value":"/     }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":157673,"byte_end":157682,"line_start":2541,"line_end":2541,"column_start":5,"column_end":14}},{"value":"/     Entry::Occupied(_) => panic!(),","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":157687,"byte_end":157726,"line_start":2542,"line_end":2542,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":157731,"byte_end":157736,"line_start":2543,"line_end":2543,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":157741,"byte_end":157744,"line_start":2544,"line_end":2544,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"poneyland\", 42);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":157749,"byte_end":157781,"line_start":2545,"line_end":2545,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":157786,"byte_end":157789,"line_start":2546,"line_end":2546,"column_start":5,"column_end":8}},{"value":"/ let entry = map","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":157794,"byte_end":157813,"line_start":2547,"line_end":2547,"column_start":5,"column_end":24}},{"value":"/     .entry(\"poneyland\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":157818,"byte_end":157845,"line_start":2548,"line_end":2548,"column_start":5,"column_end":32}},{"value":"/     .and_replace_entry_with(|k, v| {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":157850,"byte_end":157890,"line_start":2549,"line_end":2549,"column_start":5,"column_end":45}},{"value":"/         assert_eq!(k, &\"poneyland\");","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":157895,"byte_end":157935,"line_start":2550,"line_end":2550,"column_start":5,"column_end":45}},{"value":"/         assert_eq!(v, 42);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":157940,"byte_end":157970,"line_start":2551,"line_end":2551,"column_start":5,"column_end":35}},{"value":"/         Some(v + 1)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":157975,"byte_end":157998,"line_start":2552,"line_end":2552,"column_start":5,"column_end":28}},{"value":"/     });","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":158003,"byte_end":158014,"line_start":2553,"line_end":2553,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":158019,"byte_end":158022,"line_start":2554,"line_end":2554,"column_start":5,"column_end":8}},{"value":"/ match entry {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":158027,"byte_end":158044,"line_start":2555,"line_end":2555,"column_start":5,"column_end":22}},{"value":"/     Entry::Occupied(e) => {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":158049,"byte_end":158080,"line_start":2556,"line_end":2556,"column_start":5,"column_end":36}},{"value":"/         assert_eq!(e.key(), &\"poneyland\");","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":158085,"byte_end":158131,"line_start":2557,"line_end":2557,"column_start":5,"column_end":51}},{"value":"/         assert_eq!(e.get(), &43);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":158136,"byte_end":158173,"line_start":2558,"line_end":2558,"column_start":5,"column_end":42}},{"value":"/     }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":158178,"byte_end":158187,"line_start":2559,"line_end":2559,"column_start":5,"column_end":14}},{"value":"/     Entry::Vacant(_) => panic!(),","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":158192,"byte_end":158229,"line_start":2560,"line_end":2560,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":158234,"byte_end":158239,"line_start":2561,"line_end":2561,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":158244,"byte_end":158247,"line_start":2562,"line_end":2562,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 43);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":158252,"byte_end":158289,"line_start":2563,"line_end":2563,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":158294,"byte_end":158297,"line_start":2564,"line_end":2564,"column_start":5,"column_end":8}},{"value":"/ let entry = map","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":158302,"byte_end":158321,"line_start":2565,"line_end":2565,"column_start":5,"column_end":24}},{"value":"/     .entry(\"poneyland\")","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":158326,"byte_end":158353,"line_start":2566,"line_end":2566,"column_start":5,"column_end":32}},{"value":"/     .and_replace_entry_with(|_k, _v| None);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":158358,"byte_end":158405,"line_start":2567,"line_end":2567,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":158410,"byte_end":158413,"line_start":2568,"line_end":2568,"column_start":5,"column_end":8}},{"value":"/ match entry {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":158418,"byte_end":158435,"line_start":2569,"line_end":2569,"column_start":5,"column_end":22}},{"value":"/     Entry::Vacant(e) => assert_eq!(e.key(), &\"poneyland\"),","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":158440,"byte_end":158502,"line_start":2570,"line_end":2570,"column_start":5,"column_end":67}},{"value":"/     Entry::Occupied(_) => panic!(),","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":158507,"byte_end":158546,"line_start":2571,"line_end":2571,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":158551,"byte_end":158556,"line_start":2572,"line_end":2572,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":158561,"byte_end":158564,"line_start":2573,"line_end":2573,"column_start":5,"column_end":8}},{"value":"/ assert!(!map.contains_key(\"poneyland\"));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":158569,"byte_end":158613,"line_start":2574,"line_end":2574,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":158618,"byte_end":158625,"line_start":2575,"line_end":2575,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":914},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":159450,"byte_end":159460,"line_start":2603,"line_end":2603,"column_start":12,"column_end":22},"name":"or_default","qualname":"<Entry>::or_default","value":"fn (self) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the default value if empty,\n and returns a mutable reference to the value in the entry.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the default value if empty,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":158984,"byte_end":159060,"line_start":2589,"line_end":2589,"column_start":5,"column_end":81}},{"value":"/ and returns a mutable reference to the value in the entry.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":159065,"byte_end":159127,"line_start":2590,"line_end":2590,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":159132,"byte_end":159135,"line_start":2591,"line_end":2591,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":159140,"byte_end":159154,"line_start":2592,"line_end":2592,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":159159,"byte_end":159162,"line_start":2593,"line_end":2593,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":159167,"byte_end":159174,"line_start":2594,"line_end":2594,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":159179,"byte_end":159206,"line_start":2595,"line_end":2595,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":159211,"byte_end":159214,"line_start":2596,"line_end":2596,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, Option<u32>> = HashMap::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":159219,"byte_end":159280,"line_start":2597,"line_end":2597,"column_start":5,"column_end":66}},{"value":"/ map.entry(\"poneyland\").or_default();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":159285,"byte_end":159325,"line_start":2598,"line_end":2598,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":159330,"byte_end":159333,"line_start":2599,"line_end":2599,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], None);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":159338,"byte_end":159377,"line_start":2600,"line_end":2600,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":159382,"byte_end":159389,"line_start":2601,"line_end":2601,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":920},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":160127,"byte_end":160130,"line_start":2628,"line_end":2628,"column_start":12,"column_end":15},"name":"key","qualname":"<OccupiedEntry>::key","value":"fn (&self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the key in the entry.","sig":null,"attributes":[{"value":"/ Gets a reference to the key in the entry.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":159754,"byte_end":159799,"line_start":2616,"line_end":2616,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":159804,"byte_end":159807,"line_start":2617,"line_end":2617,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":159812,"byte_end":159826,"line_start":2618,"line_end":2618,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":159831,"byte_end":159834,"line_start":2619,"line_end":2619,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":159839,"byte_end":159846,"line_start":2620,"line_end":2620,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":159851,"byte_end":159878,"line_start":2621,"line_end":2621,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":159883,"byte_end":159886,"line_start":2622,"line_end":2622,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":159891,"byte_end":159944,"line_start":2623,"line_end":2623,"column_start":5,"column_end":58}},{"value":"/ map.entry(\"poneyland\").or_insert(12);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":159949,"byte_end":159990,"line_start":2624,"line_end":2624,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(map.entry(\"poneyland\").key(), &\"poneyland\");","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":159995,"byte_end":160054,"line_start":2625,"line_end":2625,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":160059,"byte_end":160066,"line_start":2626,"line_end":2626,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":921},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":160783,"byte_end":160795,"line_start":2651,"line_end":2651,"column_start":12,"column_end":24},"name":"remove_entry","qualname":"<OccupiedEntry>::remove_entry","value":"fn (self) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Take the ownership of the key and value from the map.","sig":null,"attributes":[{"value":"/ Take the ownership of the key and value from the map.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":160198,"byte_end":160255,"line_start":2632,"line_end":2632,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":160260,"byte_end":160263,"line_start":2633,"line_end":2633,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":160268,"byte_end":160282,"line_start":2634,"line_end":2634,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":160287,"byte_end":160290,"line_start":2635,"line_end":2635,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":160295,"byte_end":160302,"line_start":2636,"line_end":2636,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":160307,"byte_end":160334,"line_start":2637,"line_end":2637,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::Entry;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":160339,"byte_end":160374,"line_start":2638,"line_end":2638,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":160379,"byte_end":160382,"line_start":2639,"line_end":2639,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":160387,"byte_end":160440,"line_start":2640,"line_end":2640,"column_start":5,"column_end":58}},{"value":"/ map.entry(\"poneyland\").or_insert(12);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":160445,"byte_end":160486,"line_start":2641,"line_end":2641,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":160491,"byte_end":160494,"line_start":2642,"line_end":2642,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(o) = map.entry(\"poneyland\") {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":160499,"byte_end":160555,"line_start":2643,"line_end":2643,"column_start":5,"column_end":61}},{"value":"/     // We delete the entry from the map.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":160560,"byte_end":160604,"line_start":2644,"line_end":2644,"column_start":5,"column_end":49}},{"value":"/     o.remove_entry();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":160609,"byte_end":160634,"line_start":2645,"line_end":2645,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":160639,"byte_end":160644,"line_start":2646,"line_end":2646,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":160649,"byte_end":160652,"line_start":2647,"line_end":2647,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.contains_key(\"poneyland\"), false);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":160657,"byte_end":160710,"line_start":2648,"line_end":2648,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":160715,"byte_end":160722,"line_start":2649,"line_end":2649,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":922},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":161347,"byte_end":161350,"line_start":2671,"line_end":2671,"column_start":12,"column_end":15},"name":"get","qualname":"<OccupiedEntry>::get","value":"fn (&self) -> &V","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the value in the entry.","sig":null,"attributes":[{"value":"/ Gets a reference to the value in the entry.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":160879,"byte_end":160926,"line_start":2655,"line_end":2655,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":160931,"byte_end":160934,"line_start":2656,"line_end":2656,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":160939,"byte_end":160953,"line_start":2657,"line_end":2657,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":160958,"byte_end":160961,"line_start":2658,"line_end":2658,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":160966,"byte_end":160973,"line_start":2659,"line_end":2659,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":160978,"byte_end":161005,"line_start":2660,"line_end":2660,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::Entry;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":161010,"byte_end":161045,"line_start":2661,"line_end":2661,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":161050,"byte_end":161053,"line_start":2662,"line_end":2662,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":161058,"byte_end":161111,"line_start":2663,"line_end":2663,"column_start":5,"column_end":58}},{"value":"/ map.entry(\"poneyland\").or_insert(12);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":161116,"byte_end":161157,"line_start":2664,"line_end":2664,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":161162,"byte_end":161165,"line_start":2665,"line_end":2665,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(o) = map.entry(\"poneyland\") {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":161170,"byte_end":161226,"line_start":2666,"line_end":2666,"column_start":5,"column_end":61}},{"value":"/     assert_eq!(o.get(), &12);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":161231,"byte_end":161264,"line_start":2667,"line_end":2667,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":161269,"byte_end":161274,"line_start":2668,"line_end":2668,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":161279,"byte_end":161286,"line_start":2669,"line_end":2669,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":923},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":162310,"byte_end":162317,"line_start":2703,"line_end":2703,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OccupiedEntry>::get_mut","value":"fn (&mut self) -> &mut V","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the value in the entry.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the value in the entry.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":161418,"byte_end":161473,"line_start":2675,"line_end":2675,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":161478,"byte_end":161481,"line_start":2676,"line_end":2676,"column_start":5,"column_end":8}},{"value":"/ If you need a reference to the `OccupiedEntry` which may outlive the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":161486,"byte_end":161558,"line_start":2677,"line_end":2677,"column_start":5,"column_end":77}},{"value":"/ destruction of the `Entry` value, see [`into_mut`].","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":161563,"byte_end":161618,"line_start":2678,"line_end":2678,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":161623,"byte_end":161626,"line_start":2679,"line_end":2679,"column_start":5,"column_end":8}},{"value":"/ [`into_mut`]: #method.into_mut","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":161631,"byte_end":161665,"line_start":2680,"line_end":2680,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":161670,"byte_end":161673,"line_start":2681,"line_end":2681,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":161678,"byte_end":161692,"line_start":2682,"line_end":2682,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":161697,"byte_end":161700,"line_start":2683,"line_end":2683,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":161705,"byte_end":161712,"line_start":2684,"line_end":2684,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":161717,"byte_end":161744,"line_start":2685,"line_end":2685,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::Entry;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":161749,"byte_end":161784,"line_start":2686,"line_end":2686,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":161789,"byte_end":161792,"line_start":2687,"line_end":2687,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":161797,"byte_end":161850,"line_start":2688,"line_end":2688,"column_start":5,"column_end":58}},{"value":"/ map.entry(\"poneyland\").or_insert(12);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":161855,"byte_end":161896,"line_start":2689,"line_end":2689,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":161901,"byte_end":161904,"line_start":2690,"line_end":2690,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 12);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":161909,"byte_end":161946,"line_start":2691,"line_end":2691,"column_start":5,"column_end":42}},{"value":"/ if let Entry::Occupied(mut o) = map.entry(\"poneyland\") {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":161951,"byte_end":162011,"line_start":2692,"line_end":2692,"column_start":5,"column_end":65}},{"value":"/     *o.get_mut() += 10;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":162016,"byte_end":162043,"line_start":2693,"line_end":2693,"column_start":5,"column_end":32}},{"value":"/     assert_eq!(*o.get(), 22);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":162048,"byte_end":162081,"line_start":2694,"line_end":2694,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":162086,"byte_end":162089,"line_start":2695,"line_end":2695,"column_start":5,"column_end":8}},{"value":"/     // We can use the same Entry multiple times.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":162094,"byte_end":162146,"line_start":2696,"line_end":2696,"column_start":5,"column_end":57}},{"value":"/     *o.get_mut() += 2;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":162151,"byte_end":162177,"line_start":2697,"line_end":2697,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":162182,"byte_end":162187,"line_start":2698,"line_end":2698,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":162192,"byte_end":162195,"line_start":2699,"line_end":2699,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 24);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":162200,"byte_end":162237,"line_start":2700,"line_end":2700,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":162242,"byte_end":162249,"line_start":2701,"line_end":2701,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":924},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":163169,"byte_end":163177,"line_start":2731,"line_end":2731,"column_start":12,"column_end":20},"name":"into_mut","qualname":"<OccupiedEntry>::into_mut","value":"fn (self) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Converts the OccupiedEntry into a mutable reference to the value in the entry\n with a lifetime bound to the map itself.","sig":null,"attributes":[{"value":"/ Converts the OccupiedEntry into a mutable reference to the value in the entry","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":162397,"byte_end":162478,"line_start":2707,"line_end":2707,"column_start":5,"column_end":86}},{"value":"/ with a lifetime bound to the map itself.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":162483,"byte_end":162527,"line_start":2708,"line_end":2708,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":162532,"byte_end":162535,"line_start":2709,"line_end":2709,"column_start":5,"column_end":8}},{"value":"/ If you need multiple references to the `OccupiedEntry`, see [`get_mut`].","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":162540,"byte_end":162616,"line_start":2710,"line_end":2710,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":162621,"byte_end":162624,"line_start":2711,"line_end":2711,"column_start":5,"column_end":8}},{"value":"/ [`get_mut`]: #method.get_mut","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":162629,"byte_end":162661,"line_start":2712,"line_end":2712,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":162666,"byte_end":162669,"line_start":2713,"line_end":2713,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":162674,"byte_end":162688,"line_start":2714,"line_end":2714,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":162693,"byte_end":162696,"line_start":2715,"line_end":2715,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":162701,"byte_end":162708,"line_start":2716,"line_end":2716,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":162713,"byte_end":162740,"line_start":2717,"line_end":2717,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::Entry;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":162745,"byte_end":162780,"line_start":2718,"line_end":2718,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":162785,"byte_end":162788,"line_start":2719,"line_end":2719,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":162793,"byte_end":162846,"line_start":2720,"line_end":2720,"column_start":5,"column_end":58}},{"value":"/ map.entry(\"poneyland\").or_insert(12);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":162851,"byte_end":162892,"line_start":2721,"line_end":2721,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":162897,"byte_end":162900,"line_start":2722,"line_end":2722,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 12);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":162905,"byte_end":162942,"line_start":2723,"line_end":2723,"column_start":5,"column_end":42}},{"value":"/ if let Entry::Occupied(o) = map.entry(\"poneyland\") {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":162947,"byte_end":163003,"line_start":2724,"line_end":2724,"column_start":5,"column_end":61}},{"value":"/     *o.into_mut() += 10;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":163008,"byte_end":163036,"line_start":2725,"line_end":2725,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":163041,"byte_end":163046,"line_start":2726,"line_end":2726,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":163051,"byte_end":163054,"line_start":2727,"line_end":2727,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 22);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":163059,"byte_end":163096,"line_start":2728,"line_end":2728,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":163101,"byte_end":163108,"line_start":2729,"line_end":2729,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":925},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":163801,"byte_end":163807,"line_start":2753,"line_end":2753,"column_start":12,"column_end":18},"name":"insert","qualname":"<OccupiedEntry>::insert","value":"fn (&mut self, mut value: V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry, and returns the entry's old value.","sig":null,"attributes":[{"value":"/ Sets the value of the entry, and returns the entry's old value.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":163255,"byte_end":163322,"line_start":2735,"line_end":2735,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":163327,"byte_end":163330,"line_start":2736,"line_end":2736,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":163335,"byte_end":163349,"line_start":2737,"line_end":2737,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":163354,"byte_end":163357,"line_start":2738,"line_end":2738,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":163362,"byte_end":163369,"line_start":2739,"line_end":2739,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":163374,"byte_end":163401,"line_start":2740,"line_end":2740,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::Entry;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":163406,"byte_end":163441,"line_start":2741,"line_end":2741,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":163446,"byte_end":163449,"line_start":2742,"line_end":2742,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":163454,"byte_end":163507,"line_start":2743,"line_end":2743,"column_start":5,"column_end":58}},{"value":"/ map.entry(\"poneyland\").or_insert(12);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":163512,"byte_end":163553,"line_start":2744,"line_end":2744,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":163558,"byte_end":163561,"line_start":2745,"line_end":2745,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(mut o) = map.entry(\"poneyland\") {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":163566,"byte_end":163626,"line_start":2746,"line_end":2746,"column_start":5,"column_end":65}},{"value":"/     assert_eq!(o.insert(15), 12);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":163631,"byte_end":163668,"line_start":2747,"line_end":2747,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":163673,"byte_end":163678,"line_start":2748,"line_end":2748,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":163683,"byte_end":163686,"line_start":2749,"line_end":2749,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 15);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":163691,"byte_end":163728,"line_start":2750,"line_end":2750,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":163733,"byte_end":163740,"line_start":2751,"line_end":2751,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":926},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":164489,"byte_end":164495,"line_start":2777,"line_end":2777,"column_start":12,"column_end":18},"name":"remove","qualname":"<OccupiedEntry>::remove","value":"fn (self) -> V","parent":null,"children":[],"decl_id":null,"docs":" Takes the value out of the entry, and returns it.","sig":null,"attributes":[{"value":"/ Takes the value out of the entry, and returns it.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":163947,"byte_end":164000,"line_start":2759,"line_end":2759,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":164005,"byte_end":164008,"line_start":2760,"line_end":2760,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":164013,"byte_end":164027,"line_start":2761,"line_end":2761,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":164032,"byte_end":164035,"line_start":2762,"line_end":2762,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":164040,"byte_end":164047,"line_start":2763,"line_end":2763,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":164052,"byte_end":164079,"line_start":2764,"line_end":2764,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::Entry;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":164084,"byte_end":164119,"line_start":2765,"line_end":2765,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":164124,"byte_end":164127,"line_start":2766,"line_end":2766,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":164132,"byte_end":164185,"line_start":2767,"line_end":2767,"column_start":5,"column_end":58}},{"value":"/ map.entry(\"poneyland\").or_insert(12);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":164190,"byte_end":164231,"line_start":2768,"line_end":2768,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":164236,"byte_end":164239,"line_start":2769,"line_end":2769,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(o) = map.entry(\"poneyland\") {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":164244,"byte_end":164300,"line_start":2770,"line_end":2770,"column_start":5,"column_end":61}},{"value":"/     assert_eq!(o.remove(), 12);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":164305,"byte_end":164340,"line_start":2771,"line_end":2771,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":164345,"byte_end":164350,"line_start":2772,"line_end":2772,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":164355,"byte_end":164358,"line_start":2773,"line_end":2773,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.contains_key(\"poneyland\"), false);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":164363,"byte_end":164416,"line_start":2774,"line_end":2774,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":164421,"byte_end":164428,"line_start":2775,"line_end":2775,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":927},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":165315,"byte_end":165328,"line_start":2802,"line_end":2802,"column_start":12,"column_end":25},"name":"replace_entry","qualname":"<OccupiedEntry>::replace_entry","value":"fn (self, value: V) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Replaces the entry, returning the old key and value. The new key in the hash map will be\n the key used to create this entry.","sig":null,"attributes":[{"value":"/ Replaces the entry, returning the old key and value. The new key in the hash map will be","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":164550,"byte_end":164642,"line_start":2781,"line_end":2781,"column_start":5,"column_end":97}},{"value":"/ the key used to create this entry.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":164647,"byte_end":164685,"line_start":2782,"line_end":2782,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":164690,"byte_end":164693,"line_start":2783,"line_end":2783,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":164698,"byte_end":164712,"line_start":2784,"line_end":2784,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":164717,"byte_end":164720,"line_start":2785,"line_end":2785,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":164725,"byte_end":164732,"line_start":2786,"line_end":2786,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_map::{Entry, HashMap};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":164737,"byte_end":164783,"line_start":2787,"line_end":2787,"column_start":5,"column_end":51}},{"value":"/ use std::rc::Rc;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":164788,"byte_end":164808,"line_start":2788,"line_end":2788,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":164813,"byte_end":164816,"line_start":2789,"line_end":2789,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<Rc<String>, u32> = HashMap::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":164821,"byte_end":164880,"line_start":2790,"line_end":2790,"column_start":5,"column_end":64}},{"value":"/ map.insert(Rc::new(\"Stringthing\".to_string()), 15);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":164885,"byte_end":164940,"line_start":2791,"line_end":2791,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":164945,"byte_end":164948,"line_start":2792,"line_end":2792,"column_start":5,"column_end":8}},{"value":"/ let my_key = Rc::new(\"Stringthing\".to_string());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":164953,"byte_end":165005,"line_start":2793,"line_end":2793,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":165010,"byte_end":165013,"line_start":2794,"line_end":2794,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(entry) = map.entry(my_key) {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":165018,"byte_end":165073,"line_start":2795,"line_end":2795,"column_start":5,"column_end":60}},{"value":"/     // Also replace the key with a handle to our other key.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":165078,"byte_end":165141,"line_start":2796,"line_end":2796,"column_start":5,"column_end":68}},{"value":"/     let (old_key, old_value): (Rc<String>, u32) = entry.replace_entry(16);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":165146,"byte_end":165224,"line_start":2797,"line_end":2797,"column_start":5,"column_end":83}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":165229,"byte_end":165234,"line_start":2798,"line_end":2798,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":165239,"byte_end":165242,"line_start":2799,"line_end":2799,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":165247,"byte_end":165254,"line_start":2800,"line_end":2800,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":928},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":166489,"byte_end":166500,"line_start":2836,"line_end":2836,"column_start":12,"column_end":23},"name":"replace_key","qualname":"<OccupiedEntry>::replace_key","value":"fn (self) -> K","parent":null,"children":[],"decl_id":null,"docs":" Replaces the key in the hash map with the key used to create this entry.","sig":null,"attributes":[{"value":"/ Replaces the key in the hash map with the key used to create this entry.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":165578,"byte_end":165654,"line_start":2811,"line_end":2811,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":165659,"byte_end":165662,"line_start":2812,"line_end":2812,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":165667,"byte_end":165681,"line_start":2813,"line_end":2813,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":165686,"byte_end":165689,"line_start":2814,"line_end":2814,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":165694,"byte_end":165701,"line_start":2815,"line_end":2815,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_map::{Entry, HashMap};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":165706,"byte_end":165752,"line_start":2816,"line_end":2816,"column_start":5,"column_end":51}},{"value":"/ use std::rc::Rc;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":165757,"byte_end":165777,"line_start":2817,"line_end":2817,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":165782,"byte_end":165785,"line_start":2818,"line_end":2818,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<Rc<String>, u32> = HashMap::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":165790,"byte_end":165849,"line_start":2819,"line_end":2819,"column_start":5,"column_end":64}},{"value":"/ let mut known_strings: Vec<Rc<String>> = Vec::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":165854,"byte_end":165910,"line_start":2820,"line_end":2820,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":165915,"byte_end":165918,"line_start":2821,"line_end":2821,"column_start":5,"column_end":8}},{"value":"/ // Initialise known strings, run program, etc.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":165923,"byte_end":165973,"line_start":2822,"line_end":2822,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":165978,"byte_end":165981,"line_start":2823,"line_end":2823,"column_start":5,"column_end":8}},{"value":"/ reclaim_memory(&mut map, &known_strings);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":165986,"byte_end":166031,"line_start":2824,"line_end":2824,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":166036,"byte_end":166039,"line_start":2825,"line_end":2825,"column_start":5,"column_end":8}},{"value":"/ fn reclaim_memory(map: &mut HashMap<Rc<String>, u32>, known_strings: &[Rc<String>] ) {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":166044,"byte_end":166134,"line_start":2826,"line_end":2826,"column_start":5,"column_end":95}},{"value":"/     for s in known_strings {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":166139,"byte_end":166171,"line_start":2827,"line_end":2827,"column_start":5,"column_end":37}},{"value":"/         if let Entry::Occupied(entry) = map.entry(s.clone()) {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":166176,"byte_end":166242,"line_start":2828,"line_end":2828,"column_start":5,"column_end":71}},{"value":"/             // Replaces the entry's key with our version of it in `known_strings`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":166247,"byte_end":166333,"line_start":2829,"line_end":2829,"column_start":5,"column_end":91}},{"value":"/             entry.replace_key();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":166338,"byte_end":166374,"line_start":2830,"line_end":2830,"column_start":5,"column_end":41}},{"value":"/         }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":166379,"byte_end":166392,"line_start":2831,"line_end":2831,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":166397,"byte_end":166406,"line_start":2832,"line_end":2832,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":166411,"byte_end":166416,"line_start":2833,"line_end":2833,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":166421,"byte_end":166428,"line_start":2834,"line_end":2834,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":929},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":168144,"byte_end":168162,"line_start":2890,"line_end":2890,"column_start":12,"column_end":30},"name":"replace_entry_with","qualname":"<OccupiedEntry>::replace_entry_with","value":"fn <F> (self, f: F) -> Entry<'a, K, V, S>","parent":null,"children":[],"decl_id":null,"docs":" Provides shared access to the key and owned access to the value of\n the entry and allows to replace or remove it based on the\n value of the returned option.","sig":null,"attributes":[{"value":"/ Provides shared access to the key and owned access to the value of","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":166630,"byte_end":166700,"line_start":2841,"line_end":2841,"column_start":5,"column_end":75}},{"value":"/ the entry and allows to replace or remove it based on the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":166705,"byte_end":166766,"line_start":2842,"line_end":2842,"column_start":5,"column_end":66}},{"value":"/ value of the returned option.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":166771,"byte_end":166804,"line_start":2843,"line_end":2843,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":166809,"byte_end":166812,"line_start":2844,"line_end":2844,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":166817,"byte_end":166831,"line_start":2845,"line_end":2845,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":166836,"byte_end":166839,"line_start":2846,"line_end":2846,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":166844,"byte_end":166851,"line_start":2847,"line_end":2847,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":166856,"byte_end":166883,"line_start":2848,"line_end":2848,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::Entry;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":166888,"byte_end":166923,"line_start":2849,"line_end":2849,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":166928,"byte_end":166931,"line_start":2850,"line_end":2850,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":166936,"byte_end":166989,"line_start":2851,"line_end":2851,"column_start":5,"column_end":58}},{"value":"/ map.insert(\"poneyland\", 42);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":166994,"byte_end":167026,"line_start":2852,"line_end":2852,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":167031,"byte_end":167034,"line_start":2853,"line_end":2853,"column_start":5,"column_end":8}},{"value":"/ let entry = match map.entry(\"poneyland\") {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":167039,"byte_end":167085,"line_start":2854,"line_end":2854,"column_start":5,"column_end":51}},{"value":"/     Entry::Occupied(e) => {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":167090,"byte_end":167121,"line_start":2855,"line_end":2855,"column_start":5,"column_end":36}},{"value":"/         e.replace_entry_with(|k, v| {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":167126,"byte_end":167167,"line_start":2856,"line_end":2856,"column_start":5,"column_end":46}},{"value":"/             assert_eq!(k, &\"poneyland\");","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":167172,"byte_end":167216,"line_start":2857,"line_end":2857,"column_start":5,"column_end":49}},{"value":"/             assert_eq!(v, 42);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":167221,"byte_end":167255,"line_start":2858,"line_end":2858,"column_start":5,"column_end":39}},{"value":"/             Some(v + 1)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":167260,"byte_end":167287,"line_start":2859,"line_end":2859,"column_start":5,"column_end":32}},{"value":"/         })","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":167292,"byte_end":167306,"line_start":2860,"line_end":2860,"column_start":5,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":167311,"byte_end":167320,"line_start":2861,"line_end":2861,"column_start":5,"column_end":14}},{"value":"/     Entry::Vacant(_) => panic!(),","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":167325,"byte_end":167362,"line_start":2862,"line_end":2862,"column_start":5,"column_end":42}},{"value":"/ };","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":167367,"byte_end":167373,"line_start":2863,"line_end":2863,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":167378,"byte_end":167381,"line_start":2864,"line_end":2864,"column_start":5,"column_end":8}},{"value":"/ match entry {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":167386,"byte_end":167403,"line_start":2865,"line_end":2865,"column_start":5,"column_end":22}},{"value":"/     Entry::Occupied(e) => {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":167408,"byte_end":167439,"line_start":2866,"line_end":2866,"column_start":5,"column_end":36}},{"value":"/         assert_eq!(e.key(), &\"poneyland\");","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":167444,"byte_end":167490,"line_start":2867,"line_end":2867,"column_start":5,"column_end":51}},{"value":"/         assert_eq!(e.get(), &43);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":167495,"byte_end":167532,"line_start":2868,"line_end":2868,"column_start":5,"column_end":42}},{"value":"/     }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":167537,"byte_end":167546,"line_start":2869,"line_end":2869,"column_start":5,"column_end":14}},{"value":"/     Entry::Vacant(_) => panic!(),","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":167551,"byte_end":167588,"line_start":2870,"line_end":2870,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":167593,"byte_end":167598,"line_start":2871,"line_end":2871,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":167603,"byte_end":167606,"line_start":2872,"line_end":2872,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 43);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":167611,"byte_end":167648,"line_start":2873,"line_end":2873,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":167653,"byte_end":167656,"line_start":2874,"line_end":2874,"column_start":5,"column_end":8}},{"value":"/ let entry = match map.entry(\"poneyland\") {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":167661,"byte_end":167707,"line_start":2875,"line_end":2875,"column_start":5,"column_end":51}},{"value":"/     Entry::Occupied(e) => e.replace_entry_with(|_k, _v| None),","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":167712,"byte_end":167778,"line_start":2876,"line_end":2876,"column_start":5,"column_end":71}},{"value":"/     Entry::Vacant(_) => panic!(),","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":167783,"byte_end":167820,"line_start":2877,"line_end":2877,"column_start":5,"column_end":42}},{"value":"/ };","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":167825,"byte_end":167831,"line_start":2878,"line_end":2878,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":167836,"byte_end":167839,"line_start":2879,"line_end":2879,"column_start":5,"column_end":8}},{"value":"/ match entry {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":167844,"byte_end":167861,"line_start":2880,"line_end":2880,"column_start":5,"column_end":22}},{"value":"/     Entry::Vacant(e) => {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":167866,"byte_end":167895,"line_start":2881,"line_end":2881,"column_start":5,"column_end":34}},{"value":"/         assert_eq!(e.key(), &\"poneyland\");","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":167900,"byte_end":167946,"line_start":2882,"line_end":2882,"column_start":5,"column_end":51}},{"value":"/     }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":167951,"byte_end":167960,"line_start":2883,"line_end":2883,"column_start":5,"column_end":14}},{"value":"/     Entry::Occupied(_) => panic!(),","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":167965,"byte_end":168004,"line_start":2884,"line_end":2884,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":168009,"byte_end":168014,"line_start":2885,"line_end":2885,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":168019,"byte_end":168022,"line_start":2886,"line_end":2886,"column_start":5,"column_end":8}},{"value":"/ assert!(!map.contains_key(\"poneyland\"));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":168027,"byte_end":168071,"line_start":2887,"line_end":2887,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":168076,"byte_end":168083,"line_start":2888,"line_end":2888,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":937},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":169425,"byte_end":169428,"line_start":2934,"line_end":2934,"column_start":12,"column_end":15},"name":"key","qualname":"<VacantEntry>::key","value":"fn (&self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the key that would be used when inserting a value\n through the `VacantEntry`.","sig":null,"attributes":[{"value":"/ Gets a reference to the key that would be used when inserting a value","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":169035,"byte_end":169108,"line_start":2922,"line_end":2922,"column_start":5,"column_end":78}},{"value":"/ through the `VacantEntry`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":169113,"byte_end":169143,"line_start":2923,"line_end":2923,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":169148,"byte_end":169151,"line_start":2924,"line_end":2924,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":169156,"byte_end":169170,"line_start":2925,"line_end":2925,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":169175,"byte_end":169178,"line_start":2926,"line_end":2926,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":169183,"byte_end":169190,"line_start":2927,"line_end":2927,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":169195,"byte_end":169222,"line_start":2928,"line_end":2928,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":169227,"byte_end":169230,"line_start":2929,"line_end":2929,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":169235,"byte_end":169288,"line_start":2930,"line_end":2930,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(map.entry(\"poneyland\").key(), &\"poneyland\");","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":169293,"byte_end":169352,"line_start":2931,"line_end":2931,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":169357,"byte_end":169364,"line_start":2932,"line_end":2932,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":938},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":169864,"byte_end":169872,"line_start":2953,"line_end":2953,"column_start":12,"column_end":20},"name":"into_key","qualname":"<VacantEntry>::into_key","value":"fn (self) -> K","parent":null,"children":[],"decl_id":null,"docs":" Take ownership of the key.","sig":null,"attributes":[{"value":"/ Take ownership of the key.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":169473,"byte_end":169503,"line_start":2938,"line_end":2938,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":169508,"byte_end":169511,"line_start":2939,"line_end":2939,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":169516,"byte_end":169530,"line_start":2940,"line_end":2940,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":169535,"byte_end":169538,"line_start":2941,"line_end":2941,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":169543,"byte_end":169550,"line_start":2942,"line_end":2942,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":169555,"byte_end":169582,"line_start":2943,"line_end":2943,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::Entry;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":169587,"byte_end":169622,"line_start":2944,"line_end":2944,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":169627,"byte_end":169630,"line_start":2945,"line_end":2945,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":169635,"byte_end":169688,"line_start":2946,"line_end":2946,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":169693,"byte_end":169696,"line_start":2947,"line_end":2947,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Vacant(v) = map.entry(\"poneyland\") {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":169701,"byte_end":169755,"line_start":2948,"line_end":2948,"column_start":5,"column_end":59}},{"value":"/     v.into_key();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":169760,"byte_end":169781,"line_start":2949,"line_end":2949,"column_start":5,"column_end":26}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":169786,"byte_end":169791,"line_start":2950,"line_end":2950,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":169796,"byte_end":169803,"line_start":2951,"line_end":2951,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":939},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":170423,"byte_end":170429,"line_start":2974,"line_end":2974,"column_start":12,"column_end":18},"name":"insert","qualname":"<VacantEntry>::insert","value":"fn (self, value: V) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry with the VacantEntry's key,\n and returns a mutable reference to it.","sig":null,"attributes":[{"value":"/ Sets the value of the entry with the VacantEntry's key,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":169914,"byte_end":169973,"line_start":2957,"line_end":2957,"column_start":5,"column_end":64}},{"value":"/ and returns a mutable reference to it.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":169978,"byte_end":170020,"line_start":2958,"line_end":2958,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":170025,"byte_end":170028,"line_start":2959,"line_end":2959,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":170033,"byte_end":170047,"line_start":2960,"line_end":2960,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":170052,"byte_end":170055,"line_start":2961,"line_end":2961,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":170060,"byte_end":170067,"line_start":2962,"line_end":2962,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":170072,"byte_end":170099,"line_start":2963,"line_end":2963,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::Entry;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":170104,"byte_end":170139,"line_start":2964,"line_end":2964,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":170144,"byte_end":170147,"line_start":2965,"line_end":2965,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":170152,"byte_end":170205,"line_start":2966,"line_end":2966,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":170210,"byte_end":170213,"line_start":2967,"line_end":2967,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Vacant(o) = map.entry(\"poneyland\") {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":170218,"byte_end":170272,"line_start":2968,"line_end":2968,"column_start":5,"column_end":59}},{"value":"/     o.insert(37);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":170277,"byte_end":170298,"line_start":2969,"line_end":2969,"column_start":5,"column_end":26}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":170303,"byte_end":170308,"line_start":2970,"line_end":2970,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(map[\"poneyland\"], 37);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":170313,"byte_end":170350,"line_start":2971,"line_end":2971,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":170355,"byte_end":170362,"line_start":2972,"line_end":2972,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1044},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":219128,"byte_end":219135,"line_start":114,"line_end":114,"column_start":12,"column_end":19},"name":"HashSet","qualname":"::set::HashSet","value":"HashSet {  }","parent":null,"children":[{"krate":0,"index":1047}],"decl_id":null,"docs":" A hash set implemented as a `HashMap` where the value is `()`.","sig":null,"attributes":[{"value":"/ A hash set implemented as a `HashMap` where the value is `()`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":215756,"byte_end":215822,"line_start":19,"line_end":19,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":215823,"byte_end":215826,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ As with the [`HashMap`] type, a `HashSet` requires that the elements","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":215827,"byte_end":215899,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ implement the [`Eq`] and [`Hash`] traits. This can frequently be achieved by","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":215900,"byte_end":215980,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"/ using `#[derive(PartialEq, Eq, Hash)]`. If you implement these yourself,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":215981,"byte_end":216057,"line_start":23,"line_end":23,"column_start":1,"column_end":77}},{"value":"/ it is important that the following property holds:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":216058,"byte_end":216112,"line_start":24,"line_end":24,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":216113,"byte_end":216116,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":216117,"byte_end":216128,"line_start":26,"line_end":26,"column_start":1,"column_end":12}},{"value":"/ k1 == k2 -> hash(k1) == hash(k2)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":216129,"byte_end":216165,"line_start":27,"line_end":27,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":216166,"byte_end":216173,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":216174,"byte_end":216177,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ In other words, if two keys are equal, their hashes must be equal.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":216178,"byte_end":216248,"line_start":30,"line_end":30,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":216249,"byte_end":216252,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":216253,"byte_end":216256,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ It is a logic error for an item to be modified in such a way that the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":216257,"byte_end":216330,"line_start":33,"line_end":33,"column_start":1,"column_end":74}},{"value":"/ item's hash, as determined by the [`Hash`] trait, or its equality, as","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":216331,"byte_end":216404,"line_start":34,"line_end":34,"column_start":1,"column_end":74}},{"value":"/ determined by the [`Eq`] trait, changes while it is in the set. This is","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":216405,"byte_end":216480,"line_start":35,"line_end":35,"column_start":1,"column_end":76}},{"value":"/ normally only possible through [`Cell`], [`RefCell`], global state, I/O, or","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":216481,"byte_end":216560,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/ unsafe code.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":216561,"byte_end":216577,"line_start":37,"line_end":37,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":216578,"byte_end":216581,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ It is also a logic error for the [`Hash`] implementation of a key to panic.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":216582,"byte_end":216661,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ This is generally only possible if the trait is implemented manually. If a","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":216662,"byte_end":216740,"line_start":40,"line_end":40,"column_start":1,"column_end":79}},{"value":"/ panic does occur then the contents of the `HashSet` may become corrupted and","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":216741,"byte_end":216821,"line_start":41,"line_end":41,"column_start":1,"column_end":81}},{"value":"/ some items may be dropped from the table.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":216822,"byte_end":216867,"line_start":42,"line_end":42,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":216868,"byte_end":216871,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":216872,"byte_end":216886,"line_start":44,"line_end":44,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":216887,"byte_end":216890,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":216891,"byte_end":216898,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":216899,"byte_end":216926,"line_start":47,"line_end":47,"column_start":1,"column_end":28}},{"value":"/ // Type inference lets us omit an explicit type signature (which","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":216927,"byte_end":216995,"line_start":48,"line_end":48,"column_start":1,"column_end":69}},{"value":"/ // would be `HashSet<String>` in this example).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":216996,"byte_end":217047,"line_start":49,"line_end":49,"column_start":1,"column_end":52}},{"value":"/ let mut books = HashSet::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":217048,"byte_end":217083,"line_start":50,"line_end":50,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":217084,"byte_end":217087,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ // Add some books.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":217088,"byte_end":217110,"line_start":52,"line_end":52,"column_start":1,"column_end":23}},{"value":"/ books.insert(\"A Dance With Dragons\".to_string());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":217111,"byte_end":217164,"line_start":53,"line_end":53,"column_start":1,"column_end":54}},{"value":"/ books.insert(\"To Kill a Mockingbird\".to_string());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":217165,"byte_end":217219,"line_start":54,"line_end":54,"column_start":1,"column_end":55}},{"value":"/ books.insert(\"The Odyssey\".to_string());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":217220,"byte_end":217264,"line_start":55,"line_end":55,"column_start":1,"column_end":45}},{"value":"/ books.insert(\"The Great Gatsby\".to_string());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":217265,"byte_end":217314,"line_start":56,"line_end":56,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":217315,"byte_end":217318,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ // Check for a specific one.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":217319,"byte_end":217351,"line_start":58,"line_end":58,"column_start":1,"column_end":33}},{"value":"/ if !books.contains(\"The Winds of Winter\") {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":217352,"byte_end":217399,"line_start":59,"line_end":59,"column_start":1,"column_end":48}},{"value":"/     println!(\"We have {} books, but The Winds of Winter ain't one.\",","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":217400,"byte_end":217472,"line_start":60,"line_end":60,"column_start":1,"column_end":73}},{"value":"/              books.len());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":217473,"byte_end":217503,"line_start":61,"line_end":61,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":217504,"byte_end":217509,"line_start":62,"line_end":62,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":217510,"byte_end":217513,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ // Remove a book.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":217514,"byte_end":217535,"line_start":64,"line_end":64,"column_start":1,"column_end":22}},{"value":"/ books.remove(\"The Odyssey\");","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":217536,"byte_end":217568,"line_start":65,"line_end":65,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":217569,"byte_end":217572,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ // Iterate over everything.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":217573,"byte_end":217604,"line_start":67,"line_end":67,"column_start":1,"column_end":32}},{"value":"/ for book in &books {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":217605,"byte_end":217629,"line_start":68,"line_end":68,"column_start":1,"column_end":25}},{"value":"/     println!(\"{}\", book);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":217630,"byte_end":217659,"line_start":69,"line_end":69,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":217660,"byte_end":217665,"line_start":70,"line_end":70,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":217666,"byte_end":217673,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":217674,"byte_end":217677,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ The easiest way to use `HashSet` with a custom type is to derive","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":217678,"byte_end":217746,"line_start":73,"line_end":73,"column_start":1,"column_end":69}},{"value":"/ [`Eq`] and [`Hash`]. We must also derive [`PartialEq`], this will in the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":217747,"byte_end":217823,"line_start":74,"line_end":74,"column_start":1,"column_end":77}},{"value":"/ future be implied by [`Eq`].","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":217824,"byte_end":217856,"line_start":75,"line_end":75,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":217857,"byte_end":217860,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":217861,"byte_end":217868,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":217869,"byte_end":217896,"line_start":78,"line_end":78,"column_start":1,"column_end":28}},{"value":"/ #[derive(Hash, Eq, PartialEq, Debug)]","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":217897,"byte_end":217938,"line_start":79,"line_end":79,"column_start":1,"column_end":42}},{"value":"/ struct Viking {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":217939,"byte_end":217958,"line_start":80,"line_end":80,"column_start":1,"column_end":20}},{"value":"/     name: String,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":217959,"byte_end":217980,"line_start":81,"line_end":81,"column_start":1,"column_end":22}},{"value":"/     power: usize,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":217981,"byte_end":218002,"line_start":82,"line_end":82,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":218003,"byte_end":218008,"line_start":83,"line_end":83,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":218009,"byte_end":218012,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ let mut vikings = HashSet::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":218013,"byte_end":218050,"line_start":85,"line_end":85,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":218051,"byte_end":218054,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ vikings.insert(Viking { name: \"Einar\".to_string(), power: 9 });","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":218055,"byte_end":218122,"line_start":87,"line_end":87,"column_start":1,"column_end":68}},{"value":"/ vikings.insert(Viking { name: \"Einar\".to_string(), power: 9 });","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":218123,"byte_end":218190,"line_start":88,"line_end":88,"column_start":1,"column_end":68}},{"value":"/ vikings.insert(Viking { name: \"Olaf\".to_string(), power: 4 });","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":218191,"byte_end":218257,"line_start":89,"line_end":89,"column_start":1,"column_end":67}},{"value":"/ vikings.insert(Viking { name: \"Harald\".to_string(), power: 8 });","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":218258,"byte_end":218326,"line_start":90,"line_end":90,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":218327,"byte_end":218330,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ // Use derived implementation to print the vikings.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":218331,"byte_end":218386,"line_start":92,"line_end":92,"column_start":1,"column_end":56}},{"value":"/ for x in &vikings {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":218387,"byte_end":218410,"line_start":93,"line_end":93,"column_start":1,"column_end":24}},{"value":"/     println!(\"{:?}\", x);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":218411,"byte_end":218439,"line_start":94,"line_end":94,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":218440,"byte_end":218445,"line_start":95,"line_end":95,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":218446,"byte_end":218453,"line_start":96,"line_end":96,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":218454,"byte_end":218457,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ A `HashSet` with fixed list of elements can be initialized from an array:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":218458,"byte_end":218535,"line_start":98,"line_end":98,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":218536,"byte_end":218539,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":218540,"byte_end":218547,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":218548,"byte_end":218575,"line_start":101,"line_end":101,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":218576,"byte_end":218579,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ let viking_names: HashSet<&'static str> =","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":218580,"byte_end":218625,"line_start":103,"line_end":103,"column_start":1,"column_end":46}},{"value":"/     [ \"Einar\", \"Olaf\", \"Harald\" ].iter().cloned().collect();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":218626,"byte_end":218690,"line_start":104,"line_end":104,"column_start":1,"column_end":65}},{"value":"/ // use the values stored in the set","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":218691,"byte_end":218730,"line_start":105,"line_end":105,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":218731,"byte_end":218738,"line_start":106,"line_end":106,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":218739,"byte_end":218742,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ [`Cell`]: https://doc.rust-lang.org/std/cell/struct.Cell.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":218743,"byte_end":218808,"line_start":108,"line_end":108,"column_start":1,"column_end":66}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":218809,"byte_end":218868,"line_start":109,"line_end":109,"column_start":1,"column_end":60}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":218869,"byte_end":218933,"line_start":110,"line_end":110,"column_start":1,"column_end":65}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":218934,"byte_end":218970,"line_start":111,"line_end":111,"column_start":1,"column_end":37}},{"value":"/ [`PartialEq`]: https://doc.rust-lang.org/std/cmp/trait.PartialEq.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":218971,"byte_end":219044,"line_start":112,"line_end":112,"column_start":1,"column_end":74}},{"value":"/ [`RefCell`]: https://doc.rust-lang.org/std/cell/struct.RefCell.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":219045,"byte_end":219116,"line_start":113,"line_end":113,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1056},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":221625,"byte_end":221636,"line_start":198,"line_end":198,"column_start":18,"column_end":29},"name":"with_hasher","qualname":"<HashSet<T, S>>::with_hasher","value":"fn (hasher: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty hash set which will use the given hasher to hash\n keys.","sig":null,"attributes":[{"value":"/ Creates a new empty hash set which will use the given hasher to hash","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":220607,"byte_end":220679,"line_start":171,"line_end":171,"column_start":5,"column_end":77}},{"value":"/ keys.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":220684,"byte_end":220693,"line_start":172,"line_end":172,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":220698,"byte_end":220701,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The hash set is also created with the default initial capacity.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":220706,"byte_end":220773,"line_start":174,"line_end":174,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":220778,"byte_end":220781,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ Warning: `hasher` is normally randomly generated, and","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":220786,"byte_end":220843,"line_start":176,"line_end":176,"column_start":5,"column_end":62}},{"value":"/ is designed to allow `HashSet`s to be resistant to attacks that","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":220848,"byte_end":220915,"line_start":177,"line_end":177,"column_start":5,"column_end":72}},{"value":"/ cause many collisions and very poor performance. Setting it","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":220920,"byte_end":220983,"line_start":178,"line_end":178,"column_start":5,"column_end":68}},{"value":"/ manually using this function can expose a DoS attack vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":220988,"byte_end":221052,"line_start":179,"line_end":179,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":221057,"byte_end":221060,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ The `hash_builder` passed should implement the [`BuildHasher`] trait for","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":221065,"byte_end":221141,"line_start":181,"line_end":181,"column_start":5,"column_end":81}},{"value":"/ the HashMap to be useful, see its documentation for details.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":221146,"byte_end":221210,"line_start":182,"line_end":182,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":221215,"byte_end":221218,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":221223,"byte_end":221226,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":221231,"byte_end":221245,"line_start":185,"line_end":185,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":221250,"byte_end":221253,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":221258,"byte_end":221265,"line_start":187,"line_end":187,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":221270,"byte_end":221297,"line_start":188,"line_end":188,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::DefaultHashBuilder;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":221302,"byte_end":221350,"line_start":189,"line_end":189,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":221355,"byte_end":221358,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ let s = DefaultHashBuilder::default();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":221363,"byte_end":221405,"line_start":191,"line_end":191,"column_start":5,"column_end":47}},{"value":"/ let mut set = HashSet::with_hasher(s);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":221410,"byte_end":221452,"line_start":192,"line_end":192,"column_start":5,"column_end":47}},{"value":"/ set.insert(2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":221457,"byte_end":221475,"line_start":193,"line_end":193,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":221480,"byte_end":221487,"line_start":194,"line_end":194,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":221492,"byte_end":221495,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ [`BuildHasher`]: ../../std/hash/trait.BuildHasher.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":221500,"byte_end":221558,"line_start":196,"line_end":196,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1057},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":222857,"byte_end":222881,"line_start":231,"line_end":231,"column_start":12,"column_end":36},"name":"with_capacity_and_hasher","qualname":"<HashSet<T, S>>::with_capacity_and_hasher","value":"fn (capacity: usize, hasher: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashSet` with the specified capacity, using\n `hasher` to hash the keys.","sig":null,"attributes":[{"value":"/ Creates an empty `HashSet` with the specified capacity, using","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":221741,"byte_end":221806,"line_start":204,"line_end":204,"column_start":5,"column_end":70}},{"value":"/ `hasher` to hash the keys.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":221811,"byte_end":221841,"line_start":205,"line_end":205,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":221846,"byte_end":221849,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ The hash set will be able to hold at least `capacity` elements without","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":221854,"byte_end":221928,"line_start":207,"line_end":207,"column_start":5,"column_end":79}},{"value":"/ reallocating. If `capacity` is 0, the hash set will not allocate.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":221933,"byte_end":222002,"line_start":208,"line_end":208,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":222007,"byte_end":222010,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ Warning: `hasher` is normally randomly generated, and","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":222015,"byte_end":222072,"line_start":210,"line_end":210,"column_start":5,"column_end":62}},{"value":"/ is designed to allow `HashSet`s to be resistant to attacks that","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":222077,"byte_end":222144,"line_start":211,"line_end":211,"column_start":5,"column_end":72}},{"value":"/ cause many collisions and very poor performance. Setting it","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":222149,"byte_end":222212,"line_start":212,"line_end":212,"column_start":5,"column_end":68}},{"value":"/ manually using this function can expose a DoS attack vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":222217,"byte_end":222281,"line_start":213,"line_end":213,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":222286,"byte_end":222289,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ The `hash_builder` passed should implement the [`BuildHasher`] trait for","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":222294,"byte_end":222370,"line_start":215,"line_end":215,"column_start":5,"column_end":81}},{"value":"/ the HashMap to be useful, see its documentation for details.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":222375,"byte_end":222439,"line_start":216,"line_end":216,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":222444,"byte_end":222447,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":222452,"byte_end":222466,"line_start":218,"line_end":218,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":222471,"byte_end":222474,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":222479,"byte_end":222486,"line_start":220,"line_end":220,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":222491,"byte_end":222518,"line_start":221,"line_end":221,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::DefaultHashBuilder;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":222523,"byte_end":222571,"line_start":222,"line_end":222,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":222576,"byte_end":222579,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ let s = DefaultHashBuilder::default();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":222584,"byte_end":222626,"line_start":224,"line_end":224,"column_start":5,"column_end":47}},{"value":"/ let mut set = HashSet::with_capacity_and_hasher(10, s);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":222631,"byte_end":222690,"line_start":225,"line_end":225,"column_start":5,"column_end":64}},{"value":"/ set.insert(1);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":222695,"byte_end":222713,"line_start":226,"line_end":226,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":222718,"byte_end":222725,"line_start":227,"line_end":227,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":222730,"byte_end":222733,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ [`BuildHasher`]: ../../std/hash/trait.BuildHasher.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":222738,"byte_end":222796,"line_start":229,"line_end":229,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1058},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":223352,"byte_end":223360,"line_start":247,"line_end":247,"column_start":12,"column_end":20},"name":"capacity","qualname":"<HashSet<T, S>>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements the set can hold without reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of elements the set can hold without reallocating.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":223026,"byte_end":223099,"line_start":237,"line_end":237,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":223104,"byte_end":223107,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":223112,"byte_end":223126,"line_start":239,"line_end":239,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":223131,"byte_end":223134,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":223139,"byte_end":223146,"line_start":241,"line_end":241,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":223151,"byte_end":223178,"line_start":242,"line_end":242,"column_start":5,"column_end":32}},{"value":"/ let set: HashSet<i32> = HashSet::with_capacity(100);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":223183,"byte_end":223239,"line_start":243,"line_end":243,"column_start":5,"column_end":61}},{"value":"/ assert!(set.capacity() >= 100);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":223244,"byte_end":223279,"line_start":244,"line_end":244,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":223284,"byte_end":223291,"line_start":245,"line_end":245,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1059},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":223885,"byte_end":223889,"line_start":268,"line_end":268,"column_start":12,"column_end":16},"name":"iter","qualname":"<HashSet<T, S>>::iter","value":"fn (&self) -> Iter<'_, T>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all elements in arbitrary order.\n The iterator element type is `&'a T`.","sig":null,"attributes":[{"value":"/ An iterator visiting all elements in arbitrary order.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":223418,"byte_end":223475,"line_start":251,"line_end":251,"column_start":5,"column_end":62}},{"value":"/ The iterator element type is `&'a T`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":223480,"byte_end":223521,"line_start":252,"line_end":252,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":223526,"byte_end":223529,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":223534,"byte_end":223548,"line_start":254,"line_end":254,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":223553,"byte_end":223556,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":223561,"byte_end":223568,"line_start":256,"line_end":256,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":223573,"byte_end":223600,"line_start":257,"line_end":257,"column_start":5,"column_end":32}},{"value":"/ let mut set = HashSet::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":223605,"byte_end":223638,"line_start":258,"line_end":258,"column_start":5,"column_end":38}},{"value":"/ set.insert(\"a\");","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":223643,"byte_end":223663,"line_start":259,"line_end":259,"column_start":5,"column_end":25}},{"value":"/ set.insert(\"b\");","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":223668,"byte_end":223688,"line_start":260,"line_end":260,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":223693,"byte_end":223696,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ // Will print in an arbitrary order.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":223701,"byte_end":223741,"line_start":262,"line_end":262,"column_start":5,"column_end":45}},{"value":"/ for x in set.iter() {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":223746,"byte_end":223771,"line_start":263,"line_end":263,"column_start":5,"column_end":30}},{"value":"/     println!(\"{}\", x);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":223776,"byte_end":223802,"line_start":264,"line_end":264,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":223807,"byte_end":223812,"line_start":265,"line_end":265,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":223817,"byte_end":223824,"line_start":266,"line_end":266,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1060},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":224312,"byte_end":224315,"line_start":287,"line_end":287,"column_start":12,"column_end":15},"name":"len","qualname":"<HashSet<T, S>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the set.","sig":null,"attributes":[{"value":"/ Returns the number of elements in the set.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":223985,"byte_end":224031,"line_start":274,"line_end":274,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":224036,"byte_end":224039,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":224044,"byte_end":224058,"line_start":276,"line_end":276,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":224063,"byte_end":224066,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":224071,"byte_end":224078,"line_start":278,"line_end":278,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":224083,"byte_end":224110,"line_start":279,"line_end":279,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":224115,"byte_end":224118,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ let mut v = HashSet::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":224123,"byte_end":224154,"line_start":281,"line_end":281,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(v.len(), 0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":224159,"byte_end":224186,"line_start":282,"line_end":282,"column_start":5,"column_end":32}},{"value":"/ v.insert(1);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":224191,"byte_end":224207,"line_start":283,"line_end":283,"column_start":5,"column_end":21}},{"value":"/ assert_eq!(v.len(), 1);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":224212,"byte_end":224239,"line_start":284,"line_end":284,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":224244,"byte_end":224251,"line_start":285,"line_end":285,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1061},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":224699,"byte_end":224707,"line_start":304,"line_end":304,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<HashSet<T, S>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no elements.","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no elements.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":224368,"byte_end":224419,"line_start":291,"line_end":291,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":224424,"byte_end":224427,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":224432,"byte_end":224446,"line_start":293,"line_end":293,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":224451,"byte_end":224454,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":224459,"byte_end":224466,"line_start":295,"line_end":295,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":224471,"byte_end":224498,"line_start":296,"line_end":296,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":224503,"byte_end":224506,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ let mut v = HashSet::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":224511,"byte_end":224542,"line_start":298,"line_end":298,"column_start":5,"column_end":36}},{"value":"/ assert!(v.is_empty());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":224547,"byte_end":224573,"line_start":299,"line_end":299,"column_start":5,"column_end":31}},{"value":"/ v.insert(1);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":224578,"byte_end":224594,"line_start":300,"line_end":300,"column_start":5,"column_end":21}},{"value":"/ assert!(!v.is_empty());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":224599,"byte_end":224626,"line_start":301,"line_end":301,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":224631,"byte_end":224638,"line_start":302,"line_end":302,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1062},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":225255,"byte_end":225260,"line_start":326,"line_end":326,"column_start":12,"column_end":17},"name":"drain","qualname":"<HashSet<T, S>>::drain","value":"fn (&mut self) -> Drain<'_, T>","parent":null,"children":[],"decl_id":null,"docs":" Clears the set, returning all elements in an iterator.","sig":null,"attributes":[{"value":"/ Clears the set, returning all elements in an iterator.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":224764,"byte_end":224822,"line_start":308,"line_end":308,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":224827,"byte_end":224830,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":224835,"byte_end":224849,"line_start":310,"line_end":310,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":224854,"byte_end":224857,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":224862,"byte_end":224869,"line_start":312,"line_end":312,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":224874,"byte_end":224901,"line_start":313,"line_end":313,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":224906,"byte_end":224909,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ let mut set: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":224914,"byte_end":224980,"line_start":315,"line_end":315,"column_start":5,"column_end":71}},{"value":"/ assert!(!set.is_empty());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":224985,"byte_end":225014,"line_start":316,"line_end":316,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":225019,"byte_end":225022,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ // print 1, 2, 3 in an arbitrary order","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":225027,"byte_end":225069,"line_start":318,"line_end":318,"column_start":5,"column_end":47}},{"value":"/ for i in set.drain() {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":225074,"byte_end":225100,"line_start":319,"line_end":319,"column_start":5,"column_end":31}},{"value":"/     println!(\"{}\", i);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":225105,"byte_end":225131,"line_start":320,"line_end":320,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":225136,"byte_end":225141,"line_start":321,"line_end":321,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":225146,"byte_end":225149,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ assert!(set.is_empty());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":225154,"byte_end":225182,"line_start":323,"line_end":323,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":225187,"byte_end":225194,"line_start":324,"line_end":324,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1063},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":225791,"byte_end":225797,"line_start":346,"line_end":346,"column_start":12,"column_end":18},"name":"retain","qualname":"<HashSet<T, S>>::retain","value":"fn <F> (&mut self, mut f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Retains only the elements specified by the predicate.","sig":null,"attributes":[{"value":"/ Retains only the elements specified by the predicate.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":225363,"byte_end":225420,"line_start":332,"line_end":332,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":225425,"byte_end":225428,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ In other words, remove all elements `e` such that `f(&e)` returns `false`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":225433,"byte_end":225511,"line_start":334,"line_end":334,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":225516,"byte_end":225519,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":225524,"byte_end":225538,"line_start":336,"line_end":336,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":225543,"byte_end":225546,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":225551,"byte_end":225558,"line_start":338,"line_end":338,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":225563,"byte_end":225590,"line_start":339,"line_end":339,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":225595,"byte_end":225598,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ let xs = [1,2,3,4,5,6];","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":225603,"byte_end":225630,"line_start":341,"line_end":341,"column_start":5,"column_end":32}},{"value":"/ let mut set: HashSet<i32> = xs.iter().cloned().collect();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":225635,"byte_end":225696,"line_start":342,"line_end":342,"column_start":5,"column_end":66}},{"value":"/ set.retain(|&k| k % 2 == 0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":225701,"byte_end":225733,"line_start":343,"line_end":343,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(set.len(), 3);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":225738,"byte_end":225767,"line_start":344,"line_end":344,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":225772,"byte_end":225779,"line_start":345,"line_end":345,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1066},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":226867,"byte_end":226879,"line_start":379,"line_end":379,"column_start":12,"column_end":24},"name":"drain_filter","qualname":"<HashSet<T, S>>::drain_filter","value":"fn <F> (&mut self, f: F) -> DrainFilter<'_, T, F>","parent":null,"children":[],"decl_id":null,"docs":" Drains elements which are true under the given predicate,\n and returns an iterator over the removed items.","sig":null,"attributes":[{"value":"/ Drains elements which are true under the given predicate,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":225917,"byte_end":225978,"line_start":353,"line_end":353,"column_start":5,"column_end":66}},{"value":"/ and returns an iterator over the removed items.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":225983,"byte_end":226034,"line_start":354,"line_end":354,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":226039,"byte_end":226042,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ In other words, move all elements `e` such that `f(&e)` returns `true` out","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":226047,"byte_end":226125,"line_start":356,"line_end":356,"column_start":5,"column_end":83}},{"value":"/ into another iterator.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":226130,"byte_end":226156,"line_start":357,"line_end":357,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":226161,"byte_end":226164,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ When the returned DrainedFilter is dropped, any remaining elements that satisfy","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":226169,"byte_end":226252,"line_start":359,"line_end":359,"column_start":5,"column_end":88}},{"value":"/ the predicate are dropped from the set.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":226257,"byte_end":226300,"line_start":360,"line_end":360,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":226305,"byte_end":226308,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":226313,"byte_end":226327,"line_start":362,"line_end":362,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":226332,"byte_end":226335,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":226340,"byte_end":226347,"line_start":364,"line_end":364,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":226352,"byte_end":226379,"line_start":365,"line_end":365,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":226384,"byte_end":226387,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ let mut set: HashSet<i32> = (0..8).collect();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":226392,"byte_end":226441,"line_start":367,"line_end":367,"column_start":5,"column_end":54}},{"value":"/ let drained: HashSet<i32> = set.drain_filter(|v| v % 2 == 0).collect();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":226446,"byte_end":226521,"line_start":368,"line_end":368,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":226526,"byte_end":226529,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ let mut evens = drained.into_iter().collect::<Vec<_>>();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":226534,"byte_end":226594,"line_start":370,"line_end":370,"column_start":5,"column_end":65}},{"value":"/ let mut odds = set.into_iter().collect::<Vec<_>>();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":226599,"byte_end":226654,"line_start":371,"line_end":371,"column_start":5,"column_end":60}},{"value":"/ evens.sort();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":226659,"byte_end":226676,"line_start":372,"line_end":372,"column_start":5,"column_end":22}},{"value":"/ odds.sort();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":226681,"byte_end":226697,"line_start":373,"line_end":373,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":226702,"byte_end":226705,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(evens, vec![0, 2, 4, 6]);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":226710,"byte_end":226750,"line_start":375,"line_end":375,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(odds, vec![1, 3, 5, 7]);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":226755,"byte_end":226794,"line_start":376,"line_end":376,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":226799,"byte_end":226806,"line_start":377,"line_end":377,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1068},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":227489,"byte_end":227494,"line_start":405,"line_end":405,"column_start":12,"column_end":17},"name":"clear","qualname":"<HashSet<T, S>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears the set, removing all values.","sig":null,"attributes":[{"value":"/ Clears the set, removing all values.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":227182,"byte_end":227222,"line_start":392,"line_end":392,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":227227,"byte_end":227230,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":227235,"byte_end":227249,"line_start":394,"line_end":394,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":227254,"byte_end":227257,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":227262,"byte_end":227269,"line_start":396,"line_end":396,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":227274,"byte_end":227301,"line_start":397,"line_end":397,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":227306,"byte_end":227309,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ let mut v = HashSet::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":227314,"byte_end":227345,"line_start":399,"line_end":399,"column_start":5,"column_end":36}},{"value":"/ v.insert(1);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":227350,"byte_end":227366,"line_start":400,"line_end":400,"column_start":5,"column_end":21}},{"value":"/ v.clear();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":227371,"byte_end":227385,"line_start":401,"line_end":401,"column_start":5,"column_end":19}},{"value":"/ assert!(v.is_empty());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":227390,"byte_end":227416,"line_start":402,"line_end":402,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":227421,"byte_end":227428,"line_start":403,"line_end":403,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1069},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":228071,"byte_end":228077,"line_start":424,"line_end":424,"column_start":12,"column_end":18},"name":"hasher","qualname":"<HashSet<T, S>>::hasher","value":"fn (&self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the set's [`BuildHasher`].","sig":null,"attributes":[{"value":"/ Returns a reference to the set's [`BuildHasher`].","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":227544,"byte_end":227597,"line_start":409,"line_end":409,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":227602,"byte_end":227605,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ [`BuildHasher`]: https://doc.rust-lang.org/std/hash/trait.BuildHasher.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":227610,"byte_end":227688,"line_start":411,"line_end":411,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":227693,"byte_end":227696,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":227701,"byte_end":227715,"line_start":413,"line_end":413,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":227720,"byte_end":227723,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":227728,"byte_end":227735,"line_start":415,"line_end":415,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":227740,"byte_end":227767,"line_start":416,"line_end":416,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::DefaultHashBuilder;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":227772,"byte_end":227820,"line_start":417,"line_end":417,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":227825,"byte_end":227828,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ let hasher = DefaultHashBuilder::default();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":227833,"byte_end":227880,"line_start":419,"line_end":419,"column_start":5,"column_end":52}},{"value":"/ let set: HashSet<i32> = HashSet::with_hasher(hasher);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":227885,"byte_end":227942,"line_start":420,"line_end":420,"column_start":5,"column_end":62}},{"value":"/ let hasher: &DefaultHashBuilder = set.hasher();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":227947,"byte_end":227998,"line_start":421,"line_end":421,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":228003,"byte_end":228010,"line_start":422,"line_end":422,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1073},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":228746,"byte_end":228753,"line_start":451,"line_end":451,"column_start":12,"column_end":19},"name":"reserve","qualname":"<HashSet<T, S>>::reserve","value":"fn (&mut self, additional: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more elements to be inserted\n in the `HashSet`. The collection may reserve more space to avoid\n frequent reallocations.","sig":null,"attributes":[{"value":"/ Reserves capacity for at least `additional` more elements to be inserted","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":228203,"byte_end":228279,"line_start":434,"line_end":434,"column_start":5,"column_end":81}},{"value":"/ in the `HashSet`. The collection may reserve more space to avoid","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":228284,"byte_end":228352,"line_start":435,"line_end":435,"column_start":5,"column_end":73}},{"value":"/ frequent reallocations.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":228357,"byte_end":228384,"line_start":436,"line_end":436,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":228389,"byte_end":228392,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":228397,"byte_end":228409,"line_start":438,"line_end":438,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":228414,"byte_end":228417,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ Panics if the new allocation size overflows `usize`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":228422,"byte_end":228478,"line_start":440,"line_end":440,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":228483,"byte_end":228486,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":228491,"byte_end":228505,"line_start":442,"line_end":442,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":228510,"byte_end":228513,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":228518,"byte_end":228525,"line_start":444,"line_end":444,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":228530,"byte_end":228557,"line_start":445,"line_end":445,"column_start":5,"column_end":32}},{"value":"/ let mut set: HashSet<i32> = HashSet::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":228562,"byte_end":228609,"line_start":446,"line_end":446,"column_start":5,"column_end":52}},{"value":"/ set.reserve(10);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":228614,"byte_end":228634,"line_start":447,"line_end":447,"column_start":5,"column_end":25}},{"value":"/ assert!(set.capacity() >= 10);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":228639,"byte_end":228673,"line_start":448,"line_end":448,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":228678,"byte_end":228685,"line_start":449,"line_end":449,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1074},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":229460,"byte_end":229471,"line_start":472,"line_end":472,"column_start":12,"column_end":23},"name":"try_reserve","qualname":"<HashSet<T, S>>::try_reserve","value":"fn (&mut self, additional: usize) -> Result<(), TryReserveError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to reserve capacity for at least `additional` more elements to be inserted\n in the given `HashSet<K,V>`. The collection may reserve more space to avoid\n frequent reallocations.","sig":null,"attributes":[{"value":"/ Tries to reserve capacity for at least `additional` more elements to be inserted","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":228834,"byte_end":228918,"line_start":455,"line_end":455,"column_start":5,"column_end":89}},{"value":"/ in the given `HashSet<K,V>`. The collection may reserve more space to avoid","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":228923,"byte_end":229002,"line_start":456,"line_end":456,"column_start":5,"column_end":84}},{"value":"/ frequent reallocations.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":229007,"byte_end":229034,"line_start":457,"line_end":457,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":229039,"byte_end":229042,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":229047,"byte_end":229059,"line_start":459,"line_end":459,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":229064,"byte_end":229067,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ If the capacity overflows, or the allocator reports a failure, then an error","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":229072,"byte_end":229152,"line_start":461,"line_end":461,"column_start":5,"column_end":85}},{"value":"/ is returned.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":229157,"byte_end":229173,"line_start":462,"line_end":462,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":229178,"byte_end":229181,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":229186,"byte_end":229200,"line_start":464,"line_end":464,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":229205,"byte_end":229208,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":229213,"byte_end":229220,"line_start":466,"line_end":466,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":229225,"byte_end":229252,"line_start":467,"line_end":467,"column_start":5,"column_end":32}},{"value":"/ let mut set: HashSet<i32> = HashSet::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":229257,"byte_end":229304,"line_start":468,"line_end":468,"column_start":5,"column_end":52}},{"value":"/ set.try_reserve(10).expect(\"why is the test harness OOMing on 10 bytes?\");","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":229309,"byte_end":229387,"line_start":469,"line_end":469,"column_start":5,"column_end":83}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":229392,"byte_end":229399,"line_start":470,"line_end":470,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1075},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":230168,"byte_end":230181,"line_start":493,"line_end":493,"column_start":12,"column_end":25},"name":"shrink_to_fit","qualname":"<HashSet<T, S>>::shrink_to_fit","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the capacity of the set as much as possible. It will drop\n down as much as possible while maintaining the internal rules\n and possibly leaving some space in accordance with the resize policy.","sig":null,"attributes":[{"value":"/ Shrinks the capacity of the set as much as possible. It will drop","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":229587,"byte_end":229656,"line_start":476,"line_end":476,"column_start":5,"column_end":74}},{"value":"/ down as much as possible while maintaining the internal rules","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":229661,"byte_end":229726,"line_start":477,"line_end":477,"column_start":5,"column_end":70}},{"value":"/ and possibly leaving some space in accordance with the resize policy.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":229731,"byte_end":229804,"line_start":478,"line_end":478,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":229809,"byte_end":229812,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":229817,"byte_end":229831,"line_start":480,"line_end":480,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":229836,"byte_end":229839,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":229844,"byte_end":229851,"line_start":482,"line_end":482,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":229856,"byte_end":229883,"line_start":483,"line_end":483,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":229888,"byte_end":229891,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ let mut set = HashSet::with_capacity(100);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":229896,"byte_end":229942,"line_start":485,"line_end":485,"column_start":5,"column_end":51}},{"value":"/ set.insert(1);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":229947,"byte_end":229965,"line_start":486,"line_end":486,"column_start":5,"column_end":23}},{"value":"/ set.insert(2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":229970,"byte_end":229988,"line_start":487,"line_end":487,"column_start":5,"column_end":23}},{"value":"/ assert!(set.capacity() >= 100);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":229993,"byte_end":230028,"line_start":488,"line_end":488,"column_start":5,"column_end":40}},{"value":"/ set.shrink_to_fit();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":230033,"byte_end":230057,"line_start":489,"line_end":489,"column_start":5,"column_end":29}},{"value":"/ assert!(set.capacity() >= 2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":230062,"byte_end":230095,"line_start":490,"line_end":490,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":230100,"byte_end":230107,"line_start":491,"line_end":491,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1076},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":230997,"byte_end":231006,"line_start":519,"line_end":519,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<HashSet<T, S>>::shrink_to","value":"fn (&mut self, min_capacity: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the capacity of the set with a lower limit. It will drop\n down no lower than the supplied limit while maintaining the internal rules\n and possibly leaving some space in accordance with the resize policy.","sig":null,"attributes":[{"value":"/ Shrinks the capacity of the set with a lower limit. It will drop","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":230239,"byte_end":230307,"line_start":497,"line_end":497,"column_start":5,"column_end":73}},{"value":"/ down no lower than the supplied limit while maintaining the internal rules","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":230312,"byte_end":230390,"line_start":498,"line_end":498,"column_start":5,"column_end":83}},{"value":"/ and possibly leaving some space in accordance with the resize policy.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":230395,"byte_end":230468,"line_start":499,"line_end":499,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":230473,"byte_end":230476,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ Panics if the current capacity is smaller than the supplied","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":230481,"byte_end":230544,"line_start":501,"line_end":501,"column_start":5,"column_end":68}},{"value":"/ minimum capacity.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":230549,"byte_end":230570,"line_start":502,"line_end":502,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":230575,"byte_end":230578,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":230583,"byte_end":230597,"line_start":504,"line_end":504,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":230602,"byte_end":230605,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":230610,"byte_end":230617,"line_start":506,"line_end":506,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":230622,"byte_end":230649,"line_start":507,"line_end":507,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":230654,"byte_end":230657,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ let mut set = HashSet::with_capacity(100);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":230662,"byte_end":230708,"line_start":509,"line_end":509,"column_start":5,"column_end":51}},{"value":"/ set.insert(1);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":230713,"byte_end":230731,"line_start":510,"line_end":510,"column_start":5,"column_end":23}},{"value":"/ set.insert(2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":230736,"byte_end":230754,"line_start":511,"line_end":511,"column_start":5,"column_end":23}},{"value":"/ assert!(set.capacity() >= 100);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":230759,"byte_end":230794,"line_start":512,"line_end":512,"column_start":5,"column_end":40}},{"value":"/ set.shrink_to(10);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":230799,"byte_end":230821,"line_start":513,"line_end":513,"column_start":5,"column_end":27}},{"value":"/ assert!(set.capacity() >= 10);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":230826,"byte_end":230860,"line_start":514,"line_end":514,"column_start":5,"column_end":39}},{"value":"/ set.shrink_to(0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":230865,"byte_end":230886,"line_start":515,"line_end":515,"column_start":5,"column_end":26}},{"value":"/ assert!(set.capacity() >= 2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":230891,"byte_end":230924,"line_start":516,"line_end":516,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":230929,"byte_end":230936,"line_start":517,"line_end":517,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1077},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":231948,"byte_end":231958,"line_start":547,"line_end":547,"column_start":12,"column_end":22},"name":"difference","qualname":"<HashSet<T, S>>::difference","value":"fn <'a> (&'a self, other: &'a Self) -> Difference<'a, T, S>","parent":null,"children":[],"decl_id":null,"docs":" Visits the values representing the difference,\n i.e., the values that are in `self` but not in `other`.","sig":null,"attributes":[{"value":"/ Visits the values representing the difference,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":231093,"byte_end":231143,"line_start":523,"line_end":523,"column_start":5,"column_end":55}},{"value":"/ i.e., the values that are in `self` but not in `other`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":231148,"byte_end":231207,"line_start":524,"line_end":524,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":231212,"byte_end":231215,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":231220,"byte_end":231234,"line_start":526,"line_end":526,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":231239,"byte_end":231242,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":231247,"byte_end":231254,"line_start":528,"line_end":528,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":231259,"byte_end":231286,"line_start":529,"line_end":529,"column_start":5,"column_end":32}},{"value":"/ let a: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":231291,"byte_end":231351,"line_start":530,"line_end":530,"column_start":5,"column_end":65}},{"value":"/ let b: HashSet<_> = [4, 2, 3, 4].iter().cloned().collect();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":231356,"byte_end":231419,"line_start":531,"line_end":531,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":231424,"byte_end":231427,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ // Can be seen as `a - b`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":231432,"byte_end":231462,"line_start":533,"line_end":533,"column_start":5,"column_end":35}},{"value":"/ for x in a.difference(&b) {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":231467,"byte_end":231498,"line_start":534,"line_end":534,"column_start":5,"column_end":36}},{"value":"/     println!(\"{}\", x); // Print 1","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":231503,"byte_end":231540,"line_start":535,"line_end":535,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":231545,"byte_end":231550,"line_start":536,"line_end":536,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":231555,"byte_end":231558,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ let diff: HashSet<_> = a.difference(&b).collect();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":231563,"byte_end":231617,"line_start":538,"line_end":538,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(diff, [1].iter().collect());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":231622,"byte_end":231665,"line_start":539,"line_end":539,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":231670,"byte_end":231673,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ // Note that difference is not symmetric,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":231678,"byte_end":231723,"line_start":541,"line_end":541,"column_start":5,"column_end":50}},{"value":"/ // and `b - a` means something else:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":231728,"byte_end":231768,"line_start":542,"line_end":542,"column_start":5,"column_end":45}},{"value":"/ let diff: HashSet<_> = b.difference(&a).collect();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":231773,"byte_end":231827,"line_start":543,"line_end":543,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(diff, [4].iter().collect());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":231832,"byte_end":231875,"line_start":544,"line_end":544,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":231880,"byte_end":231887,"line_start":545,"line_end":545,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1079},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":232907,"byte_end":232927,"line_start":576,"line_end":576,"column_start":12,"column_end":32},"name":"symmetric_difference","qualname":"<HashSet<T, S>>::symmetric_difference","value":"fn <'a> (&'a self, other: &'a Self) -> SymmetricDifference<'a, T, S>","parent":null,"children":[],"decl_id":null,"docs":" Visits the values representing the symmetric difference,\n i.e., the values that are in `self` or in `other` but not in both.","sig":null,"attributes":[{"value":"/ Visits the values representing the symmetric difference,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":232108,"byte_end":232168,"line_start":554,"line_end":554,"column_start":5,"column_end":65}},{"value":"/ i.e., the values that are in `self` or in `other` but not in both.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":232173,"byte_end":232243,"line_start":555,"line_end":555,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":232248,"byte_end":232251,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":232256,"byte_end":232270,"line_start":557,"line_end":557,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":232275,"byte_end":232278,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":232283,"byte_end":232290,"line_start":559,"line_end":559,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":232295,"byte_end":232322,"line_start":560,"line_end":560,"column_start":5,"column_end":32}},{"value":"/ let a: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":232327,"byte_end":232387,"line_start":561,"line_end":561,"column_start":5,"column_end":65}},{"value":"/ let b: HashSet<_> = [4, 2, 3, 4].iter().cloned().collect();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":232392,"byte_end":232455,"line_start":562,"line_end":562,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":232460,"byte_end":232463,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ // Print 1, 4 in arbitrary order.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":232468,"byte_end":232505,"line_start":564,"line_end":564,"column_start":5,"column_end":42}},{"value":"/ for x in a.symmetric_difference(&b) {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":232510,"byte_end":232551,"line_start":565,"line_end":565,"column_start":5,"column_end":46}},{"value":"/     println!(\"{}\", x);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":232556,"byte_end":232582,"line_start":566,"line_end":566,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":232587,"byte_end":232592,"line_start":567,"line_end":567,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":232597,"byte_end":232600,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ let diff1: HashSet<_> = a.symmetric_difference(&b).collect();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":232605,"byte_end":232670,"line_start":569,"line_end":569,"column_start":5,"column_end":70}},{"value":"/ let diff2: HashSet<_> = b.symmetric_difference(&a).collect();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":232675,"byte_end":232740,"line_start":570,"line_end":570,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":232745,"byte_end":232748,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(diff1, diff2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":232753,"byte_end":232782,"line_start":572,"line_end":572,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(diff1, [1, 4].iter().collect());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":232787,"byte_end":232834,"line_start":573,"line_end":573,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":232839,"byte_end":232846,"line_start":574,"line_end":574,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1081},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":233781,"byte_end":233793,"line_start":601,"line_end":601,"column_start":12,"column_end":24},"name":"intersection","qualname":"<HashSet<T, S>>::intersection","value":"fn <'a> (&'a self, other: &'a Self) -> Intersection<'a, T, S>","parent":null,"children":[],"decl_id":null,"docs":" Visits the values representing the intersection,\n i.e., the values that are both in `self` and `other`.","sig":null,"attributes":[{"value":"/ Visits the values representing the intersection,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":233117,"byte_end":233169,"line_start":582,"line_end":582,"column_start":5,"column_end":57}},{"value":"/ i.e., the values that are both in `self` and `other`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":233174,"byte_end":233231,"line_start":583,"line_end":583,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":233236,"byte_end":233239,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":233244,"byte_end":233258,"line_start":585,"line_end":585,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":233263,"byte_end":233266,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":233271,"byte_end":233278,"line_start":587,"line_end":587,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":233283,"byte_end":233310,"line_start":588,"line_end":588,"column_start":5,"column_end":32}},{"value":"/ let a: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":233315,"byte_end":233375,"line_start":589,"line_end":589,"column_start":5,"column_end":65}},{"value":"/ let b: HashSet<_> = [4, 2, 3, 4].iter().cloned().collect();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":233380,"byte_end":233443,"line_start":590,"line_end":590,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":233448,"byte_end":233451,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ // Print 2, 3 in arbitrary order.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":233456,"byte_end":233493,"line_start":592,"line_end":592,"column_start":5,"column_end":42}},{"value":"/ for x in a.intersection(&b) {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":233498,"byte_end":233531,"line_start":593,"line_end":593,"column_start":5,"column_end":38}},{"value":"/     println!(\"{}\", x);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":233536,"byte_end":233562,"line_start":594,"line_end":594,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":233567,"byte_end":233572,"line_start":595,"line_end":595,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":233577,"byte_end":233580,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ let intersection: HashSet<_> = a.intersection(&b).collect();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":233585,"byte_end":233649,"line_start":597,"line_end":597,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(intersection, [2, 3].iter().collect());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":233654,"byte_end":233708,"line_start":598,"line_end":598,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":233713,"byte_end":233720,"line_start":599,"line_end":599,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1083},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":234751,"byte_end":234756,"line_start":632,"line_end":632,"column_start":12,"column_end":17},"name":"union","qualname":"<HashSet<T, S>>::union","value":"fn <'a> (&'a self, other: &'a Self) -> Union<'a, T, S>","parent":null,"children":[],"decl_id":null,"docs":" Visits the values representing the union,\n i.e., all the values in `self` or `other`, without duplicates.","sig":null,"attributes":[{"value":"/ Visits the values representing the union,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":234101,"byte_end":234146,"line_start":613,"line_end":613,"column_start":5,"column_end":50}},{"value":"/ i.e., all the values in `self` or `other`, without duplicates.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":234151,"byte_end":234217,"line_start":614,"line_end":614,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":234222,"byte_end":234225,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":234230,"byte_end":234244,"line_start":616,"line_end":616,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":234249,"byte_end":234252,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":234257,"byte_end":234264,"line_start":618,"line_end":618,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":234269,"byte_end":234296,"line_start":619,"line_end":619,"column_start":5,"column_end":32}},{"value":"/ let a: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":234301,"byte_end":234361,"line_start":620,"line_end":620,"column_start":5,"column_end":65}},{"value":"/ let b: HashSet<_> = [4, 2, 3, 4].iter().cloned().collect();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":234366,"byte_end":234429,"line_start":621,"line_end":621,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":234434,"byte_end":234437,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ // Print 1, 2, 3, 4 in arbitrary order.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":234442,"byte_end":234485,"line_start":623,"line_end":623,"column_start":5,"column_end":48}},{"value":"/ for x in a.union(&b) {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":234490,"byte_end":234516,"line_start":624,"line_end":624,"column_start":5,"column_end":31}},{"value":"/     println!(\"{}\", x);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":234521,"byte_end":234547,"line_start":625,"line_end":625,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":234552,"byte_end":234557,"line_start":626,"line_end":626,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":234562,"byte_end":234565,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ let union: HashSet<_> = a.union(&b).collect();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":234570,"byte_end":234620,"line_start":628,"line_end":628,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(union, [1, 2, 3, 4].iter().collect());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":234625,"byte_end":234678,"line_start":629,"line_end":629,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":234683,"byte_end":234690,"line_start":630,"line_end":630,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1085},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":235736,"byte_end":235744,"line_start":662,"line_end":662,"column_start":12,"column_end":20},"name":"contains","qualname":"<HashSet<T, S>>::contains","value":"fn <Q> (&self, value: &Q) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains a value.","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains a value.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":235056,"byte_end":235103,"line_start":643,"line_end":643,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":235108,"byte_end":235111,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ The value may be any borrowed form of the set's value type, but","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":235116,"byte_end":235183,"line_start":645,"line_end":645,"column_start":5,"column_end":72}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":235188,"byte_end":235255,"line_start":646,"line_end":646,"column_start":5,"column_end":72}},{"value":"/ the value type.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":235260,"byte_end":235279,"line_start":647,"line_end":647,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":235284,"byte_end":235287,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":235292,"byte_end":235306,"line_start":649,"line_end":649,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":235311,"byte_end":235314,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":235319,"byte_end":235326,"line_start":651,"line_end":651,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":235331,"byte_end":235358,"line_start":652,"line_end":652,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":235363,"byte_end":235366,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ let set: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":235371,"byte_end":235433,"line_start":654,"line_end":654,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(set.contains(&1), true);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":235438,"byte_end":235477,"line_start":655,"line_end":655,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(set.contains(&4), false);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":235482,"byte_end":235522,"line_start":656,"line_end":656,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":235527,"byte_end":235534,"line_start":657,"line_end":657,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":235539,"byte_end":235542,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":235547,"byte_end":235606,"line_start":659,"line_end":659,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":235611,"byte_end":235675,"line_start":660,"line_end":660,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1087},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":236606,"byte_end":236609,"line_start":689,"line_end":689,"column_start":12,"column_end":15},"name":"get","qualname":"<HashSet<T, S>>::get","value":"fn <Q> (&self, value: &Q) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the value in the set, if any, that is equal to the given value.","sig":null,"attributes":[{"value":"/ Returns a reference to the value in the set, if any, that is equal to the given value.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":235890,"byte_end":235980,"line_start":670,"line_end":670,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":235985,"byte_end":235988,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ The value may be any borrowed form of the set's value type, but","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":235993,"byte_end":236060,"line_start":672,"line_end":672,"column_start":5,"column_end":72}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":236065,"byte_end":236132,"line_start":673,"line_end":673,"column_start":5,"column_end":72}},{"value":"/ the value type.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":236137,"byte_end":236156,"line_start":674,"line_end":674,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":236161,"byte_end":236164,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":236169,"byte_end":236183,"line_start":676,"line_end":676,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":236188,"byte_end":236191,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":236196,"byte_end":236203,"line_start":678,"line_end":678,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":236208,"byte_end":236235,"line_start":679,"line_end":679,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":236240,"byte_end":236243,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/ let set: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":236248,"byte_end":236310,"line_start":681,"line_end":681,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(set.get(&2), Some(&2));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":236315,"byte_end":236353,"line_start":682,"line_end":682,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(set.get(&4), None);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":236358,"byte_end":236392,"line_start":683,"line_end":683,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":236397,"byte_end":236404,"line_start":684,"line_end":684,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":236409,"byte_end":236412,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":236417,"byte_end":236476,"line_start":686,"line_end":686,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":236481,"byte_end":236545,"line_start":687,"line_end":687,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1089},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":237438,"byte_end":237451,"line_start":716,"line_end":716,"column_start":12,"column_end":25},"name":"get_or_insert","qualname":"<HashSet<T, S>>::get_or_insert","value":"fn (&mut self, value: T) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Inserts the given `value` into the set if it is not present, then\n returns a reference to the value in the set.","sig":null,"attributes":[{"value":"/ Inserts the given `value` into the set if it is not present, then","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":236901,"byte_end":236970,"line_start":701,"line_end":701,"column_start":5,"column_end":74}},{"value":"/ returns a reference to the value in the set.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":236975,"byte_end":237023,"line_start":702,"line_end":702,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":237028,"byte_end":237031,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":237036,"byte_end":237050,"line_start":704,"line_end":704,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":237055,"byte_end":237058,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":237063,"byte_end":237070,"line_start":706,"line_end":706,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":237075,"byte_end":237102,"line_start":707,"line_end":707,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":237107,"byte_end":237110,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ let mut set: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":237115,"byte_end":237181,"line_start":709,"line_end":709,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(set.len(), 3);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":237186,"byte_end":237215,"line_start":710,"line_end":710,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(set.get_or_insert(2), &2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":237220,"byte_end":237261,"line_start":711,"line_end":711,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(set.get_or_insert(100), &100);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":237266,"byte_end":237311,"line_start":712,"line_end":712,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(set.len(), 4); // 100 was inserted","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":237316,"byte_end":237365,"line_start":713,"line_end":713,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":237370,"byte_end":237377,"line_start":714,"line_end":714,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1090},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":238442,"byte_end":238461,"line_start":745,"line_end":745,"column_start":12,"column_end":31},"name":"get_or_insert_owned","qualname":"<HashSet<T, S>>::get_or_insert_owned","value":"fn <Q> (&mut self, value: &Q) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Inserts an owned copy of the given `value` into the set if it is not\n present, then returns a reference to the value in the set.","sig":null,"attributes":[{"value":"/ Inserts an owned copy of the given `value` into the set if it is not","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":237806,"byte_end":237878,"line_start":726,"line_end":726,"column_start":5,"column_end":77}},{"value":"/ present, then returns a reference to the value in the set.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":237883,"byte_end":237945,"line_start":727,"line_end":727,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":237950,"byte_end":237953,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":237958,"byte_end":237972,"line_start":729,"line_end":729,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":237977,"byte_end":237980,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":237985,"byte_end":237992,"line_start":731,"line_end":731,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":237997,"byte_end":238024,"line_start":732,"line_end":732,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":238029,"byte_end":238032,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ let mut set: HashSet<String> = [\"cat\", \"dog\", \"horse\"]","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":238037,"byte_end":238095,"line_start":734,"line_end":734,"column_start":5,"column_end":63}},{"value":"/     .iter().map(|&pet| pet.to_owned()).collect();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":238100,"byte_end":238153,"line_start":735,"line_end":735,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":238158,"byte_end":238161,"line_start":736,"line_end":736,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(set.len(), 3);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":238166,"byte_end":238195,"line_start":737,"line_end":737,"column_start":5,"column_end":34}},{"value":"/ for &pet in &[\"cat\", \"dog\", \"fish\"] {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":238200,"byte_end":238241,"line_start":738,"line_end":738,"column_start":5,"column_end":46}},{"value":"/     let value = set.get_or_insert_owned(pet);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":238246,"byte_end":238295,"line_start":739,"line_end":739,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(value, pet);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":238300,"byte_end":238331,"line_start":740,"line_end":740,"column_start":5,"column_end":36}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":238336,"byte_end":238341,"line_start":741,"line_end":741,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(set.len(), 4); // a new \"fish\" was inserted","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":238346,"byte_end":238404,"line_start":742,"line_end":742,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":238409,"byte_end":238416,"line_start":743,"line_end":743,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":238421,"byte_end":238430,"line_start":744,"line_end":744,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1093},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":239618,"byte_end":239636,"line_start":778,"line_end":778,"column_start":12,"column_end":30},"name":"get_or_insert_with","qualname":"<HashSet<T, S>>::get_or_insert_with","value":"fn <Q, F> (&mut self, value: &Q, f: F) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Inserts a value computed from `f` into the set if the given `value` is\n not present, then returns a reference to the value in the set.","sig":null,"attributes":[{"value":"/ Inserts a value computed from `f` into the set if the given `value` is","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":238927,"byte_end":239001,"line_start":759,"line_end":759,"column_start":5,"column_end":79}},{"value":"/ not present, then returns a reference to the value in the set.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":239006,"byte_end":239072,"line_start":760,"line_end":760,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":239077,"byte_end":239080,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":239085,"byte_end":239099,"line_start":762,"line_end":762,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":239104,"byte_end":239107,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":239112,"byte_end":239119,"line_start":764,"line_end":764,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":239124,"byte_end":239151,"line_start":765,"line_end":765,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":239156,"byte_end":239159,"line_start":766,"line_end":766,"column_start":5,"column_end":8}},{"value":"/ let mut set: HashSet<String> = [\"cat\", \"dog\", \"horse\"]","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":239164,"byte_end":239222,"line_start":767,"line_end":767,"column_start":5,"column_end":63}},{"value":"/     .iter().map(|&pet| pet.to_owned()).collect();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":239227,"byte_end":239280,"line_start":768,"line_end":768,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":239285,"byte_end":239288,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(set.len(), 3);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":239293,"byte_end":239322,"line_start":770,"line_end":770,"column_start":5,"column_end":34}},{"value":"/ for &pet in &[\"cat\", \"dog\", \"fish\"] {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":239327,"byte_end":239368,"line_start":771,"line_end":771,"column_start":5,"column_end":46}},{"value":"/     let value = set.get_or_insert_with(pet, str::to_owned);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":239373,"byte_end":239436,"line_start":772,"line_end":772,"column_start":5,"column_end":68}},{"value":"/     assert_eq!(value, pet);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":239441,"byte_end":239472,"line_start":773,"line_end":773,"column_start":5,"column_end":36}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":239477,"byte_end":239482,"line_start":774,"line_end":774,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(set.len(), 4); // a new \"fish\" was inserted","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":239487,"byte_end":239545,"line_start":775,"line_end":775,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":239550,"byte_end":239557,"line_start":776,"line_end":776,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1097},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":240642,"byte_end":240653,"line_start":810,"line_end":810,"column_start":12,"column_end":23},"name":"is_disjoint","qualname":"<HashSet<T, S>>::is_disjoint","value":"fn (&self, other: &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` has no elements in common with `other`.\n This is equivalent to checking for an empty intersection.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` has no elements in common with `other`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":240110,"byte_end":240178,"line_start":793,"line_end":793,"column_start":5,"column_end":73}},{"value":"/ This is equivalent to checking for an empty intersection.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":240183,"byte_end":240244,"line_start":794,"line_end":794,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":240249,"byte_end":240252,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":240257,"byte_end":240271,"line_start":796,"line_end":796,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":240276,"byte_end":240279,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":240284,"byte_end":240291,"line_start":798,"line_end":798,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":240296,"byte_end":240323,"line_start":799,"line_end":799,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":240328,"byte_end":240331,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ let a: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":240336,"byte_end":240396,"line_start":801,"line_end":801,"column_start":5,"column_end":65}},{"value":"/ let mut b = HashSet::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":240401,"byte_end":240432,"line_start":802,"line_end":802,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":240437,"byte_end":240440,"line_start":803,"line_end":803,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.is_disjoint(&b), true);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":240445,"byte_end":240485,"line_start":804,"line_end":804,"column_start":5,"column_end":45}},{"value":"/ b.insert(4);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":240490,"byte_end":240506,"line_start":805,"line_end":805,"column_start":5,"column_end":21}},{"value":"/ assert_eq!(a.is_disjoint(&b), true);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":240511,"byte_end":240551,"line_start":806,"line_end":806,"column_start":5,"column_end":45}},{"value":"/ b.insert(1);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":240556,"byte_end":240572,"line_start":807,"line_end":807,"column_start":5,"column_end":21}},{"value":"/ assert_eq!(a.is_disjoint(&b), false);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":240577,"byte_end":240618,"line_start":808,"line_end":808,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":240623,"byte_end":240630,"line_start":809,"line_end":809,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1099},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":241275,"byte_end":241284,"line_start":831,"line_end":831,"column_start":12,"column_end":21},"name":"is_subset","qualname":"<HashSet<T, S>>::is_subset","value":"fn (&self, other: &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set is a subset of another,\n i.e., `other` contains at least all the values in `self`.","sig":null,"attributes":[{"value":"/ Returns `true` if the set is a subset of another,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":240744,"byte_end":240797,"line_start":814,"line_end":814,"column_start":5,"column_end":58}},{"value":"/ i.e., `other` contains at least all the values in `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":240802,"byte_end":240863,"line_start":815,"line_end":815,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":240868,"byte_end":240871,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":240876,"byte_end":240890,"line_start":817,"line_end":817,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":240895,"byte_end":240898,"line_start":818,"line_end":818,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":240903,"byte_end":240910,"line_start":819,"line_end":819,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":240915,"byte_end":240942,"line_start":820,"line_end":820,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":240947,"byte_end":240950,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ let sup: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":240955,"byte_end":241017,"line_start":822,"line_end":822,"column_start":5,"column_end":67}},{"value":"/ let mut set = HashSet::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":241022,"byte_end":241055,"line_start":823,"line_end":823,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":241060,"byte_end":241063,"line_start":824,"line_end":824,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(set.is_subset(&sup), true);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":241068,"byte_end":241110,"line_start":825,"line_end":825,"column_start":5,"column_end":47}},{"value":"/ set.insert(2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":241115,"byte_end":241133,"line_start":826,"line_end":826,"column_start":5,"column_end":23}},{"value":"/ assert_eq!(set.is_subset(&sup), true);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":241138,"byte_end":241180,"line_start":827,"line_end":827,"column_start":5,"column_end":47}},{"value":"/ set.insert(4);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":241185,"byte_end":241203,"line_start":828,"line_end":828,"column_start":5,"column_end":23}},{"value":"/ assert_eq!(set.is_subset(&sup), false);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":241208,"byte_end":241251,"line_start":829,"line_end":829,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":241256,"byte_end":241263,"line_start":830,"line_end":830,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1101},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":242028,"byte_end":242039,"line_start":856,"line_end":856,"column_start":12,"column_end":23},"name":"is_superset","qualname":"<HashSet<T, S>>::is_superset","value":"fn (&self, other: &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set is a superset of another,\n i.e., `self` contains at least all the values in `other`.","sig":null,"attributes":[{"value":"/ Returns `true` if the set is a superset of another,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":241403,"byte_end":241458,"line_start":835,"line_end":835,"column_start":5,"column_end":60}},{"value":"/ i.e., `self` contains at least all the values in `other`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":241463,"byte_end":241524,"line_start":836,"line_end":836,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":241529,"byte_end":241532,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":241537,"byte_end":241551,"line_start":838,"line_end":838,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":241556,"byte_end":241559,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":241564,"byte_end":241571,"line_start":840,"line_end":840,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":241576,"byte_end":241603,"line_start":841,"line_end":841,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":241608,"byte_end":241611,"line_start":842,"line_end":842,"column_start":5,"column_end":8}},{"value":"/ let sub: HashSet<_> = [1, 2].iter().cloned().collect();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":241616,"byte_end":241675,"line_start":843,"line_end":843,"column_start":5,"column_end":64}},{"value":"/ let mut set = HashSet::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":241680,"byte_end":241713,"line_start":844,"line_end":844,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":241718,"byte_end":241721,"line_start":845,"line_end":845,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(set.is_superset(&sub), false);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":241726,"byte_end":241771,"line_start":846,"line_end":846,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":241776,"byte_end":241779,"line_start":847,"line_end":847,"column_start":5,"column_end":8}},{"value":"/ set.insert(0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":241784,"byte_end":241802,"line_start":848,"line_end":848,"column_start":5,"column_end":23}},{"value":"/ set.insert(1);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":241807,"byte_end":241825,"line_start":849,"line_end":849,"column_start":5,"column_end":23}},{"value":"/ assert_eq!(set.is_superset(&sub), false);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":241830,"byte_end":241875,"line_start":850,"line_end":850,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":241880,"byte_end":241883,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/ set.insert(2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":241888,"byte_end":241906,"line_start":852,"line_end":852,"column_start":5,"column_end":23}},{"value":"/ assert_eq!(set.is_superset(&sub), true);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":241911,"byte_end":241955,"line_start":853,"line_end":853,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":241960,"byte_end":241967,"line_start":854,"line_end":854,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1102},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":242620,"byte_end":242626,"line_start":878,"line_end":878,"column_start":12,"column_end":18},"name":"insert","qualname":"<HashSet<T, S>>::insert","value":"fn (&mut self, value: T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Adds a value to the set.","sig":null,"attributes":[{"value":"/ Adds a value to the set.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":242112,"byte_end":242140,"line_start":860,"line_end":860,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":242145,"byte_end":242148,"line_start":861,"line_end":861,"column_start":5,"column_end":8}},{"value":"/ If the set did not have this value present, `true` is returned.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":242153,"byte_end":242220,"line_start":862,"line_end":862,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":242225,"byte_end":242228,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ If the set did have this value present, `false` is returned.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":242233,"byte_end":242297,"line_start":864,"line_end":864,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":242302,"byte_end":242305,"line_start":865,"line_end":865,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":242310,"byte_end":242324,"line_start":866,"line_end":866,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":242329,"byte_end":242332,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":242337,"byte_end":242344,"line_start":868,"line_end":868,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":242349,"byte_end":242376,"line_start":869,"line_end":869,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":242381,"byte_end":242384,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ let mut set = HashSet::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":242389,"byte_end":242422,"line_start":871,"line_end":871,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":242427,"byte_end":242430,"line_start":872,"line_end":872,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(set.insert(2), true);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":242435,"byte_end":242471,"line_start":873,"line_end":873,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(set.insert(2), false);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":242476,"byte_end":242513,"line_start":874,"line_end":874,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(set.len(), 1);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":242518,"byte_end":242547,"line_start":875,"line_end":875,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":242552,"byte_end":242559,"line_start":876,"line_end":876,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1103},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":243261,"byte_end":243268,"line_start":898,"line_end":898,"column_start":12,"column_end":19},"name":"replace","qualname":"<HashSet<T, S>>::replace","value":"fn (&mut self, value: T) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Adds a value to the set, replacing the existing value, if any, that is equal to the given\n one. Returns the replaced value.","sig":null,"attributes":[{"value":"/ Adds a value to the set, replacing the existing value, if any, that is equal to the given","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":242714,"byte_end":242807,"line_start":882,"line_end":882,"column_start":5,"column_end":98}},{"value":"/ one. Returns the replaced value.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":242812,"byte_end":242848,"line_start":883,"line_end":883,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":242853,"byte_end":242856,"line_start":884,"line_end":884,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":242861,"byte_end":242875,"line_start":885,"line_end":885,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":242880,"byte_end":242883,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":242888,"byte_end":242895,"line_start":887,"line_end":887,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":242900,"byte_end":242927,"line_start":888,"line_end":888,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":242932,"byte_end":242935,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ let mut set = HashSet::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":242940,"byte_end":242973,"line_start":890,"line_end":890,"column_start":5,"column_end":38}},{"value":"/ set.insert(Vec::<i32>::new());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":242978,"byte_end":243012,"line_start":891,"line_end":891,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":243017,"byte_end":243020,"line_start":892,"line_end":892,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(set.get(&[][..]).unwrap().capacity(), 0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":243025,"byte_end":243081,"line_start":893,"line_end":893,"column_start":5,"column_end":61}},{"value":"/ set.replace(Vec::with_capacity(10));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":243086,"byte_end":243126,"line_start":894,"line_end":894,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(set.get(&[][..]).unwrap().capacity(), 10);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":243131,"byte_end":243188,"line_start":895,"line_end":895,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":243193,"byte_end":243200,"line_start":896,"line_end":896,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1104},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":244276,"byte_end":244282,"line_start":930,"line_end":930,"column_start":12,"column_end":18},"name":"remove","qualname":"<HashSet<T, S>>::remove","value":"fn <Q> (&mut self, value: &Q) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Removes a value from the set. Returns whether the value was\n present in the set.","sig":null,"attributes":[{"value":"/ Removes a value from the set. Returns whether the value was","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":243554,"byte_end":243617,"line_start":908,"line_end":908,"column_start":5,"column_end":68}},{"value":"/ present in the set.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":243622,"byte_end":243645,"line_start":909,"line_end":909,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":243650,"byte_end":243653,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ The value may be any borrowed form of the set's value type, but","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":243658,"byte_end":243725,"line_start":911,"line_end":911,"column_start":5,"column_end":72}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":243730,"byte_end":243797,"line_start":912,"line_end":912,"column_start":5,"column_end":72}},{"value":"/ the value type.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":243802,"byte_end":243821,"line_start":913,"line_end":913,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":243826,"byte_end":243829,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":243834,"byte_end":243848,"line_start":915,"line_end":915,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":243853,"byte_end":243856,"line_start":916,"line_end":916,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":243861,"byte_end":243868,"line_start":917,"line_end":917,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":243873,"byte_end":243900,"line_start":918,"line_end":918,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":243905,"byte_end":243908,"line_start":919,"line_end":919,"column_start":5,"column_end":8}},{"value":"/ let mut set = HashSet::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":243913,"byte_end":243946,"line_start":920,"line_end":920,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":243951,"byte_end":243954,"line_start":921,"line_end":921,"column_start":5,"column_end":8}},{"value":"/ set.insert(2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":243959,"byte_end":243977,"line_start":922,"line_end":922,"column_start":5,"column_end":23}},{"value":"/ assert_eq!(set.remove(&2), true);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":243982,"byte_end":244019,"line_start":923,"line_end":923,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(set.remove(&2), false);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":244024,"byte_end":244062,"line_start":924,"line_end":924,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":244067,"byte_end":244074,"line_start":925,"line_end":925,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":244079,"byte_end":244082,"line_start":926,"line_end":926,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":244087,"byte_end":244146,"line_start":927,"line_end":927,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":244151,"byte_end":244215,"line_start":928,"line_end":928,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1106},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":245152,"byte_end":245156,"line_start":957,"line_end":957,"column_start":12,"column_end":16},"name":"take","qualname":"<HashSet<T, S>>::take","value":"fn <Q> (&mut self, value: &Q) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes and returns the value in the set, if any, that is equal to the given one.","sig":null,"attributes":[{"value":"/ Removes and returns the value in the set, if any, that is equal to the given one.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":244436,"byte_end":244521,"line_start":938,"line_end":938,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":244526,"byte_end":244529,"line_start":939,"line_end":939,"column_start":5,"column_end":8}},{"value":"/ The value may be any borrowed form of the set's value type, but","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":244534,"byte_end":244601,"line_start":940,"line_end":940,"column_start":5,"column_end":72}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":244606,"byte_end":244673,"line_start":941,"line_end":941,"column_start":5,"column_end":72}},{"value":"/ the value type.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":244678,"byte_end":244697,"line_start":942,"line_end":942,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":244702,"byte_end":244705,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":244710,"byte_end":244724,"line_start":944,"line_end":944,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":244729,"byte_end":244732,"line_start":945,"line_end":945,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":244737,"byte_end":244744,"line_start":946,"line_end":946,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":244749,"byte_end":244776,"line_start":947,"line_end":947,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":244781,"byte_end":244784,"line_start":948,"line_end":948,"column_start":5,"column_end":8}},{"value":"/ let mut set: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":244789,"byte_end":244855,"line_start":949,"line_end":949,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(set.take(&2), Some(2));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":244860,"byte_end":244898,"line_start":950,"line_end":950,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(set.take(&2), None);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":244903,"byte_end":244938,"line_start":951,"line_end":951,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":244943,"byte_end":244950,"line_start":952,"line_end":952,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":244955,"byte_end":244958,"line_start":953,"line_end":953,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":244963,"byte_end":245022,"line_start":954,"line_end":954,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":245027,"byte_end":245091,"line_start":955,"line_end":955,"column_start":5,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":1161},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":251274,"byte_end":251278,"line_start":1208,"line_end":1208,"column_start":12,"column_end":16},"name":"Iter","qualname":"::set::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":1164}],"decl_id":null,"docs":" An iterator over the items of a `HashSet`.","sig":null,"attributes":[{"value":"/ An iterator over the items of a `HashSet`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":251021,"byte_end":251067,"line_start":1201,"line_end":1201,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":251068,"byte_end":251071,"line_start":1202,"line_end":1202,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`iter`] method on [`HashSet`].","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":251072,"byte_end":251139,"line_start":1203,"line_end":1203,"column_start":1,"column_end":68}},{"value":"/ See its documentation for more.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":251140,"byte_end":251175,"line_start":1204,"line_end":1204,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":251176,"byte_end":251179,"line_start":1205,"line_end":1205,"column_start":1,"column_end":4}},{"value":"/ [`HashSet`]: struct.HashSet.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":251180,"byte_end":251216,"line_start":1206,"line_end":1206,"column_start":1,"column_end":37}},{"value":"/ [`iter`]: struct.HashSet.html#method.iter","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":251217,"byte_end":251262,"line_start":1207,"line_end":1207,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":1165},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":251632,"byte_end":251640,"line_start":1219,"line_end":1219,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::set::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":1167}],"decl_id":null,"docs":" An owning iterator over the items of a `HashSet`.","sig":null,"attributes":[{"value":"/ An owning iterator over the items of a `HashSet`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":251318,"byte_end":251371,"line_start":1212,"line_end":1212,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":251372,"byte_end":251375,"line_start":1213,"line_end":1213,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`into_iter`] method on [`HashSet`]","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":251376,"byte_end":251447,"line_start":1214,"line_end":1214,"column_start":1,"column_end":72}},{"value":"/ (provided by the `IntoIterator` trait). See its documentation for more.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":251448,"byte_end":251523,"line_start":1215,"line_end":1215,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":251524,"byte_end":251527,"line_start":1216,"line_end":1216,"column_start":1,"column_end":4}},{"value":"/ [`HashSet`]: struct.HashSet.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":251528,"byte_end":251564,"line_start":1217,"line_end":1217,"column_start":1,"column_end":37}},{"value":"/ [`into_iter`]: struct.HashSet.html#method.into_iter","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":251565,"byte_end":251620,"line_start":1218,"line_end":1218,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1168},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":251945,"byte_end":251950,"line_start":1230,"line_end":1230,"column_start":12,"column_end":17},"name":"Drain","qualname":"::set::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":1171}],"decl_id":null,"docs":" A draining iterator over the items of a `HashSet`.","sig":null,"attributes":[{"value":"/ A draining iterator over the items of a `HashSet`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":251681,"byte_end":251735,"line_start":1223,"line_end":1223,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":251736,"byte_end":251739,"line_start":1224,"line_end":1224,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`drain`] method on [`HashSet`].","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":251740,"byte_end":251808,"line_start":1225,"line_end":1225,"column_start":1,"column_end":69}},{"value":"/ See its documentation for more.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":251809,"byte_end":251844,"line_start":1226,"line_end":1226,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":251845,"byte_end":251848,"line_start":1227,"line_end":1227,"column_start":1,"column_end":4}},{"value":"/ [`HashSet`]: struct.HashSet.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":251849,"byte_end":251885,"line_start":1228,"line_end":1228,"column_start":1,"column_end":37}},{"value":"/ [`drain`]: struct.HashSet.html#method.drain","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":251886,"byte_end":251933,"line_start":1229,"line_end":1229,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":1172},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":252317,"byte_end":252328,"line_start":1241,"line_end":1241,"column_start":12,"column_end":23},"name":"DrainFilter","qualname":"::set::DrainFilter","value":"DrainFilter {  }","parent":null,"children":[{"krate":0,"index":1176},{"krate":0,"index":1177}],"decl_id":null,"docs":" A draining iterator over entries of a `HashSet` which don't satisfy the predicate `f`.","sig":null,"attributes":[{"value":"/ A draining iterator over entries of a `HashSet` which don't satisfy the predicate `f`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":251996,"byte_end":252086,"line_start":1234,"line_end":1234,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":252087,"byte_end":252090,"line_start":1235,"line_end":1235,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`drain_filter`] method on [`HashSet`]. See its","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":252091,"byte_end":252174,"line_start":1236,"line_end":1236,"column_start":1,"column_end":84}},{"value":"/ documentation for more.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":252175,"byte_end":252202,"line_start":1237,"line_end":1237,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":252203,"byte_end":252206,"line_start":1238,"line_end":1238,"column_start":1,"column_end":4}},{"value":"/ [`drain_filter`]: struct.HashSet.html#method.drain_filter","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":252207,"byte_end":252268,"line_start":1239,"line_end":1239,"column_start":1,"column_end":62}},{"value":"/ [`HashSet`]: struct.HashSet.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":252269,"byte_end":252305,"line_start":1240,"line_end":1240,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1178},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":252730,"byte_end":252742,"line_start":1256,"line_end":1256,"column_start":12,"column_end":24},"name":"Intersection","qualname":"::set::Intersection","value":"Intersection {  }","parent":null,"children":[{"krate":0,"index":1182},{"krate":0,"index":1183}],"decl_id":null,"docs":" A lazy iterator producing elements in the intersection of `HashSet`s.","sig":null,"attributes":[{"value":"/ A lazy iterator producing elements in the intersection of `HashSet`s.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":252426,"byte_end":252499,"line_start":1249,"line_end":1249,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":252500,"byte_end":252503,"line_start":1250,"line_end":1250,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`intersection`] method on [`HashSet`].","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":252504,"byte_end":252579,"line_start":1251,"line_end":1251,"column_start":1,"column_end":76}},{"value":"/ See its documentation for more.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":252580,"byte_end":252615,"line_start":1252,"line_end":1252,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":252616,"byte_end":252619,"line_start":1253,"line_end":1253,"column_start":1,"column_end":4}},{"value":"/ [`HashSet`]: struct.HashSet.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":252620,"byte_end":252656,"line_start":1254,"line_end":1254,"column_start":1,"column_end":37}},{"value":"/ [`intersection`]: struct.HashSet.html#method.intersection","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":252657,"byte_end":252718,"line_start":1255,"line_end":1255,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":1184},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":253162,"byte_end":253172,"line_start":1270,"line_end":1270,"column_start":12,"column_end":22},"name":"Difference","qualname":"::set::Difference","value":"Difference {  }","parent":null,"children":[{"krate":0,"index":1188},{"krate":0,"index":1189}],"decl_id":null,"docs":" A lazy iterator producing elements in the difference of `HashSet`s.","sig":null,"attributes":[{"value":"/ A lazy iterator producing elements in the difference of `HashSet`s.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":252866,"byte_end":252937,"line_start":1263,"line_end":1263,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":252938,"byte_end":252941,"line_start":1264,"line_end":1264,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`difference`] method on [`HashSet`].","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":252942,"byte_end":253015,"line_start":1265,"line_end":1265,"column_start":1,"column_end":74}},{"value":"/ See its documentation for more.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":253016,"byte_end":253051,"line_start":1266,"line_end":1266,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":253052,"byte_end":253055,"line_start":1267,"line_end":1267,"column_start":1,"column_end":4}},{"value":"/ [`HashSet`]: struct.HashSet.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":253056,"byte_end":253092,"line_start":1268,"line_end":1268,"column_start":1,"column_end":37}},{"value":"/ [`difference`]: struct.HashSet.html#method.difference","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":253093,"byte_end":253150,"line_start":1269,"line_end":1269,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":1190},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":253632,"byte_end":253651,"line_start":1284,"line_end":1284,"column_start":12,"column_end":31},"name":"SymmetricDifference","qualname":"::set::SymmetricDifference","value":"SymmetricDifference {  }","parent":null,"children":[{"krate":0,"index":1194}],"decl_id":null,"docs":" A lazy iterator producing elements in the symmetric difference of `HashSet`s.","sig":null,"attributes":[{"value":"/ A lazy iterator producing elements in the symmetric difference of `HashSet`s.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":253296,"byte_end":253377,"line_start":1277,"line_end":1277,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":253378,"byte_end":253381,"line_start":1278,"line_end":1278,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`symmetric_difference`] method on","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":253382,"byte_end":253452,"line_start":1279,"line_end":1279,"column_start":1,"column_end":71}},{"value":"/ [`HashSet`]. See its documentation for more.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":253453,"byte_end":253501,"line_start":1280,"line_end":1280,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":253502,"byte_end":253505,"line_start":1281,"line_end":1281,"column_start":1,"column_end":4}},{"value":"/ [`HashSet`]: struct.HashSet.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":253506,"byte_end":253542,"line_start":1282,"line_end":1282,"column_start":1,"column_end":37}},{"value":"/ [`symmetric_difference`]: struct.HashSet.html#method.symmetric_difference","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":253543,"byte_end":253620,"line_start":1283,"line_end":1283,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":1195},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":254004,"byte_end":254009,"line_start":1295,"line_end":1295,"column_start":12,"column_end":17},"name":"Union","qualname":"::set::Union","value":"Union {  }","parent":null,"children":[{"krate":0,"index":1199}],"decl_id":null,"docs":" A lazy iterator producing elements in the union of `HashSet`s.","sig":null,"attributes":[{"value":"/ A lazy iterator producing elements in the union of `HashSet`s.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":253728,"byte_end":253794,"line_start":1288,"line_end":1288,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":253795,"byte_end":253798,"line_start":1289,"line_end":1289,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`union`] method on [`HashSet`].","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":253799,"byte_end":253867,"line_start":1290,"line_end":1290,"column_start":1,"column_end":69}},{"value":"/ See its documentation for more.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":253868,"byte_end":253903,"line_start":1291,"line_end":1291,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":253904,"byte_end":253907,"line_start":1292,"line_end":1292,"column_start":1,"column_end":4}},{"value":"/ [`HashSet`]: struct.HashSet.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":253908,"byte_end":253944,"line_start":1293,"line_end":1293,"column_start":1,"column_end":37}},{"value":"/ [`union`]: struct.HashSet.html#method.union","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":253945,"byte_end":253992,"line_start":1294,"line_end":1294,"column_start":1,"column_end":48}}]},{"kind":"Mod","id":{"krate":0,"index":1368},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/lib.rs","byte_start":1687,"byte_end":1695,"line_start":65,"line_end":65,"column_start":9,"column_end":17},"name":"hash_map","qualname":"::hash_map","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1369}],"decl_id":null,"docs":" A hash map implemented with quadratic probing and SIMD lookup.\n","sig":null,"attributes":[{"value":"! A hash map implemented with quadratic probing and SIMD lookup.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/lib.rs","byte_start":1702,"byte_end":1768,"line_start":66,"line_end":66,"column_start":5,"column_end":71}}]},{"kind":"Mod","id":{"krate":0,"index":1370},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/lib.rs","byte_start":2242,"byte_end":2250,"line_start":82,"line_end":82,"column_start":9,"column_end":17},"name":"hash_set","qualname":"::hash_set","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1371}],"decl_id":null,"docs":" A hash set implemented as a `HashMap` where the value is `()`.\n","sig":null,"attributes":[{"value":"! A hash set implemented as a `HashMap` where the value is `()`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/lib.rs","byte_start":2257,"byte_end":2323,"line_start":83,"line_end":83,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1425},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/lib.rs","byte_start":3002,"byte_end":3018,"line_start":105,"line_end":105,"column_start":5,"column_end":21},"name":"CapacityOverflow","qualname":"::TryReserveError::CapacityOverflow","value":"TryReserveError::CapacityOverflow","parent":{"krate":0,"index":1424},"children":[],"decl_id":null,"docs":" Error due to the computed capacity exceeding the collection's maximum\n (usually `isize::MAX` bytes).\n","sig":null,"attributes":[{"value":"/ Error due to the computed capacity exceeding the collection's maximum","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/lib.rs","byte_start":2886,"byte_end":2959,"line_start":103,"line_end":103,"column_start":5,"column_end":78}},{"value":"/ (usually `isize::MAX` bytes).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/lib.rs","byte_start":2964,"byte_end":2997,"line_start":104,"line_end":104,"column_start":5,"column_end":38}}]},{"kind":"StructVariant","id":{"krate":0,"index":1427},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/lib.rs","byte_start":3072,"byte_end":3082,"line_start":108,"line_end":108,"column_start":5,"column_end":15},"name":"AllocError","qualname":"::TryReserveError::AllocError","value":"TryReserveError::AllocError { layout }","parent":{"krate":0,"index":1424},"children":[],"decl_id":null,"docs":" The memory allocator returned an error\n","sig":null,"attributes":[{"value":"/ The memory allocator returned an error","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/lib.rs","byte_start":3025,"byte_end":3067,"line_start":107,"line_end":107,"column_start":5,"column_end":47}}]},{"kind":"Enum","id":{"krate":0,"index":1424},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/lib.rs","byte_start":2864,"byte_end":2879,"line_start":102,"line_end":102,"column_start":10,"column_end":25},"name":"TryReserveError","qualname":"::TryReserveError","value":"TryReserveError::{CapacityOverflow, AllocError}","parent":null,"children":[{"krate":0,"index":1425},{"krate":0,"index":1427}],"decl_id":null,"docs":" The error type for `try_reserve` methods.\n","sig":null,"attributes":[{"value":"/ The error type for `try_reserve` methods.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/lib.rs","byte_start":2770,"byte_end":2815,"line_start":100,"line_end":100,"column_start":1,"column_end":46}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/sse2.rs","byte_start":5702656,"byte_end":5702661,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1383},{"krate":0,"index":1384},{"krate":0,"index":1393},{"krate":0,"index":1394},{"krate":0,"index":1395},{"krate":0,"index":1396},{"krate":0,"index":1397},{"krate":0,"index":1398},{"krate":0,"index":1399},{"krate":0,"index":1400}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/bitmask.rs","byte_start":76628,"byte_end":76635,"line_start":20,"line_end":20,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/bitmask.rs","byte_start":79249,"byte_end":79256,"line_start":99,"line_end":99,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/bitmask.rs","byte_start":79544,"byte_end":79555,"line_start":113,"line_end":113,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":45},{"krate":0,"index":46}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":7417,"byte_end":7428,"line_start":73,"line_end":73,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":56},{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":10159,"byte_end":10167,"line_start":153,"line_end":153,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":70},{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":15090,"byte_end":15096,"line_start":282,"line_end":282,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":15122,"byte_end":15128,"line_start":284,"line_end":284,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":15261,"byte_end":15267,"line_start":291,"line_end":291,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":95},{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":18089,"byte_end":18097,"line_start":378,"line_end":378,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":126},{"krate":0,"index":128},{"krate":0,"index":130},{"krate":0,"index":132},{"krate":0,"index":134},{"krate":0,"index":138},{"krate":0,"index":141},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":146},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":48890,"byte_end":48898,"line_start":1136,"line_end":1136,"column_start":25,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":48943,"byte_end":48951,"line_start":1137,"line_end":1137,"column_start":25,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":48998,"byte_end":49006,"line_start":1139,"line_end":1139,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":165},{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":51430,"byte_end":51438,"line_start":1204,"line_end":1204,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1422}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":52221,"byte_end":52229,"line_start":1228,"line_end":1228,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":176},{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":56182,"byte_end":56190,"line_start":1334,"line_end":1334,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":56612,"byte_end":56620,"line_start":1350,"line_end":1350,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":57462,"byte_end":57474,"line_start":1381,"line_end":1381,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":60297,"byte_end":60309,"line_start":1450,"line_end":1450,"column_start":25,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":60340,"byte_end":60352,"line_start":1451,"line_end":1451,"column_start":25,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":60378,"byte_end":60390,"line_start":1453,"line_end":1453,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":205}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":60680,"byte_end":60692,"line_start":1465,"line_end":1465,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":62159,"byte_end":62171,"line_start":1503,"line_end":1503,"column_start":27,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":63066,"byte_end":63073,"line_start":1522,"line_end":1522,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":69012,"byte_end":69019,"line_start":1640,"line_end":1640,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":69227,"byte_end":69234,"line_start":1650,"line_end":1650,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":69919,"byte_end":69926,"line_start":1673,"line_end":1673,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":69959,"byte_end":69966,"line_start":1674,"line_end":1674,"column_start":27,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":70163,"byte_end":70174,"line_start":1683,"line_end":1683,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":70327,"byte_end":70338,"line_start":1690,"line_end":1690,"column_start":25,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":70383,"byte_end":70394,"line_start":1691,"line_end":1691,"column_start":25,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":71034,"byte_end":71045,"line_start":1713,"line_end":1713,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":248}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":71558,"byte_end":71569,"line_start":1732,"line_end":1732,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":71909,"byte_end":71920,"line_start":1746,"line_end":1746,"column_start":31,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":71953,"byte_end":71964,"line_start":1747,"line_end":1747,"column_start":27,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":72504,"byte_end":72512,"line_start":1764,"line_end":1764,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":267}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":72669,"byte_end":72677,"line_start":1771,"line_end":1771,"column_start":25,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":72726,"byte_end":72734,"line_start":1772,"line_end":1772,"column_start":25,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":72777,"byte_end":72785,"line_start":1774,"line_end":1774,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":73513,"byte_end":73521,"line_start":1797,"line_end":1797,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":73914,"byte_end":73922,"line_start":1814,"line_end":1814,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":73959,"byte_end":73967,"line_start":1815,"line_end":1815,"column_start":27,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":74499,"byte_end":74510,"line_start":1837,"line_end":1837,"column_start":13,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":75081,"byte_end":75092,"line_start":1858,"line_end":1858,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":301}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":86793,"byte_end":86800,"line_start":193,"line_end":193,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":337},{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":88534,"byte_end":88541,"line_start":251,"line_end":251,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":360},{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":99898,"byte_end":99905,"line_start":645,"line_end":645,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":367},{"krate":0,"index":369},{"krate":0,"index":371},{"krate":0,"index":373},{"krate":0,"index":375},{"krate":0,"index":377},{"krate":0,"index":379},{"krate":0,"index":382},{"krate":0,"index":385},{"krate":0,"index":387},{"krate":0,"index":390},{"krate":0,"index":393},{"krate":0,"index":395}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":113616,"byte_end":113623,"line_start":1068,"line_end":1068,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":402},{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":116556,"byte_end":116563,"line_start":1126,"line_end":1126,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":116884,"byte_end":116891,"line_start":1142,"line_end":1142,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":116985,"byte_end":116992,"line_start":1150,"line_end":1150,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":419}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":117188,"byte_end":117195,"line_start":1160,"line_end":1160,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":424}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":117485,"byte_end":117492,"line_start":1171,"line_end":1171,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":430},{"krate":0,"index":431}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":118338,"byte_end":118342,"line_start":1203,"line_end":1203,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":441}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":118580,"byte_end":118584,"line_start":1213,"line_end":1213,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":445}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":119362,"byte_end":119369,"line_start":1235,"line_end":1235,"column_start":40,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":119395,"byte_end":119402,"line_start":1237,"line_end":1237,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":458}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":120066,"byte_end":120074,"line_start":1259,"line_end":1259,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":466}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":120729,"byte_end":120733,"line_start":1282,"line_end":1282,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":475}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":120931,"byte_end":120935,"line_start":1291,"line_end":1291,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":479}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":121459,"byte_end":121465,"line_start":1309,"line_end":1309,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":488}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":121665,"byte_end":121671,"line_start":1318,"line_end":1318,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":492}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":122141,"byte_end":122146,"line_start":1335,"line_end":1335,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":501}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":122897,"byte_end":122908,"line_start":1361,"line_end":1361,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":514}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":123302,"byte_end":123318,"line_start":1377,"line_end":1377,"column_start":28,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":522}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":123468,"byte_end":123479,"line_start":1384,"line_end":1384,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":529}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":123850,"byte_end":123861,"line_start":1401,"line_end":1401,"column_start":33,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":124108,"byte_end":124124,"line_start":1409,"line_end":1409,"column_start":12,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":543}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":126222,"byte_end":126241,"line_start":1475,"line_end":1475,"column_start":31,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":126334,"byte_end":126353,"line_start":1482,"line_end":1482,"column_start":31,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":126976,"byte_end":126994,"line_start":1508,"line_end":1508,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":601},{"krate":0,"index":603}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":127819,"byte_end":127837,"line_start":1535,"line_end":1535,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":611},{"krate":0,"index":614}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":128847,"byte_end":128862,"line_start":1565,"line_end":1565,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":623},{"krate":0,"index":625},{"krate":0,"index":628},{"krate":0,"index":631}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":130405,"byte_end":130416,"line_start":1616,"line_end":1616,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":642},{"krate":0,"index":644}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":136261,"byte_end":136280,"line_start":1810,"line_end":1810,"column_start":19,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":651},{"krate":0,"index":652},{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":656},{"krate":0,"index":657},{"krate":0,"index":658},{"krate":0,"index":659},{"krate":0,"index":660},{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":663},{"krate":0,"index":664}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":140302,"byte_end":140319,"line_start":1928,"line_end":1928,"column_start":19,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":676},{"krate":0,"index":679}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":142386,"byte_end":142404,"line_start":1995,"line_end":1995,"column_start":25,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":685}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":142581,"byte_end":142592,"line_start":2001,"line_end":2001,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":690}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":142926,"byte_end":142945,"line_start":2010,"line_end":2010,"column_start":39,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":695}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":143203,"byte_end":143220,"line_start":2019,"line_end":2019,"column_start":25,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":700}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":143385,"byte_end":143400,"line_start":2025,"line_end":2025,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":705}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":143989,"byte_end":143994,"line_start":2045,"line_end":2045,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":721}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":144566,"byte_end":144579,"line_start":2065,"line_end":2065,"column_start":31,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":144672,"byte_end":144685,"line_start":2072,"line_end":2072,"column_start":31,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":144787,"byte_end":144800,"line_start":2080,"line_end":2080,"column_start":39,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":743}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":145284,"byte_end":145295,"line_start":2099,"line_end":2099,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":756}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":145992,"byte_end":145999,"line_start":2125,"line_end":2125,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":777},{"krate":0,"index":778},{"krate":0,"index":779}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":146778,"byte_end":146782,"line_start":2154,"line_end":2154,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":784},{"krate":0,"index":785},{"krate":0,"index":786}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":147353,"byte_end":147357,"line_start":2173,"line_end":2173,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":790}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":147511,"byte_end":147515,"line_start":2180,"line_end":2180,"column_start":30,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":147558,"byte_end":147565,"line_start":2182,"line_end":2182,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":798},{"krate":0,"index":799},{"krate":0,"index":800}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":148148,"byte_end":148155,"line_start":2201,"line_end":2201,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":804}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":148308,"byte_end":148315,"line_start":2207,"line_end":2207,"column_start":30,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":148356,"byte_end":148363,"line_start":2209,"line_end":2209,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":811}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":148569,"byte_end":148577,"line_start":2219,"line_end":2219,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":815},{"krate":0,"index":816},{"krate":0,"index":817}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":148908,"byte_end":148916,"line_start":2231,"line_end":2231,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":821}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":149065,"byte_end":149073,"line_start":2237,"line_end":2237,"column_start":30,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":149124,"byte_end":149132,"line_start":2239,"line_end":2239,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":828}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":149294,"byte_end":149298,"line_start":2245,"line_end":2245,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":833},{"krate":0,"index":834},{"krate":0,"index":835}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":149770,"byte_end":149774,"line_start":2261,"line_end":2261,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":839}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":149927,"byte_end":149931,"line_start":2267,"line_end":2267,"column_start":30,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":149974,"byte_end":149980,"line_start":2269,"line_end":2269,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":847},{"krate":0,"index":848},{"krate":0,"index":849}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":150452,"byte_end":150458,"line_start":2285,"line_end":2285,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":853}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":150611,"byte_end":150617,"line_start":2291,"line_end":2291,"column_start":30,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":150660,"byte_end":150669,"line_start":2293,"line_end":2293,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":861},{"krate":0,"index":862},{"krate":0,"index":863}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":151149,"byte_end":151158,"line_start":2309,"line_end":2309,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":867}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":151311,"byte_end":151320,"line_start":2315,"line_end":2315,"column_start":30,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":151361,"byte_end":151370,"line_start":2317,"line_end":2317,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":874}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":151586,"byte_end":151591,"line_start":2327,"line_end":2327,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":879},{"krate":0,"index":880},{"krate":0,"index":881}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":151926,"byte_end":151931,"line_start":2339,"line_end":2339,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":885}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":152084,"byte_end":152089,"line_start":2345,"line_end":2345,"column_start":30,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":152130,"byte_end":152135,"line_start":2347,"line_end":2347,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":892}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":152335,"byte_end":152340,"line_start":2357,"line_end":2357,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":898},{"krate":0,"index":899},{"krate":0,"index":900},{"krate":0,"index":902},{"krate":0,"index":904},{"krate":0,"index":905},{"krate":0,"index":907}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":158959,"byte_end":158964,"line_start":2588,"line_end":2588,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":914}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":159721,"byte_end":159734,"line_start":2615,"line_end":2615,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":920},{"krate":0,"index":921},{"krate":0,"index":922},{"krate":0,"index":923},{"krate":0,"index":924},{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":929}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":169004,"byte_end":169015,"line_start":2921,"line_end":2921,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":937},{"krate":0,"index":938},{"krate":0,"index":939},{"krate":0,"index":941}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":171294,"byte_end":171301,"line_start":3005,"line_end":3005,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":947}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":171874,"byte_end":171881,"line_start":3023,"line_end":3023,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":954}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":173328,"byte_end":173335,"line_start":3068,"line_end":3068,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":962}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/scopeguard.rs","byte_start":214620,"byte_end":214630,"line_start":20,"line_end":20,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1009},{"krate":0,"index":1010}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/scopeguard.rs","byte_start":214818,"byte_end":214828,"line_start":31,"line_end":31,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1014}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/scopeguard.rs","byte_start":215007,"byte_end":215017,"line_start":41,"line_end":41,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1018}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":219242,"byte_end":219249,"line_start":118,"line_end":118,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1051},{"krate":0,"index":1052}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":220587,"byte_end":220594,"line_start":170,"line_end":170,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1056},{"krate":0,"index":1057},{"krate":0,"index":1058},{"krate":0,"index":1059},{"krate":0,"index":1060},{"krate":0,"index":1061},{"krate":0,"index":1062},{"krate":0,"index":1063},{"krate":0,"index":1066},{"krate":0,"index":1068},{"krate":0,"index":1069}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":228139,"byte_end":228146,"line_start":429,"line_end":429,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1073},{"krate":0,"index":1074},{"krate":0,"index":1075},{"krate":0,"index":1076},{"krate":0,"index":1077},{"krate":0,"index":1079},{"krate":0,"index":1081},{"krate":0,"index":1083},{"krate":0,"index":1085},{"krate":0,"index":1087},{"krate":0,"index":1089},{"krate":0,"index":1090},{"krate":0,"index":1093},{"krate":0,"index":1097},{"krate":0,"index":1099},{"krate":0,"index":1101},{"krate":0,"index":1102},{"krate":0,"index":1103},{"krate":0,"index":1104},{"krate":0,"index":1106}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":245473,"byte_end":245480,"line_start":970,"line_end":970,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1111}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":245728,"byte_end":245735,"line_start":984,"line_end":984,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":245817,"byte_end":245824,"line_start":991,"line_end":991,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1119}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":246045,"byte_end":246052,"line_start":1001,"line_end":1001,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1123}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":246360,"byte_end":246367,"line_start":1014,"line_end":1014,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1128}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":246933,"byte_end":246940,"line_start":1037,"line_end":1037,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1135}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":247505,"byte_end":247512,"line_start":1060,"line_end":1060,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1140}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":254332,"byte_end":254339,"line_start":1309,"line_end":1309,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1210},{"krate":0,"index":1211},{"krate":0,"index":1212}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":255214,"byte_end":255218,"line_start":1341,"line_end":1341,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1215}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":255402,"byte_end":255406,"line_start":1349,"line_end":1349,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1219},{"krate":0,"index":1220},{"krate":0,"index":1221}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":255735,"byte_end":255739,"line_start":1361,"line_end":1361,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1225}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":255885,"byte_end":255889,"line_start":1367,"line_end":1367,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":255936,"byte_end":255940,"line_start":1369,"line_end":1369,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1230}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":256097,"byte_end":256105,"line_start":1375,"line_end":1375,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1233},{"krate":0,"index":1234},{"krate":0,"index":1235}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":256557,"byte_end":256565,"line_start":1391,"line_end":1391,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1238}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":256707,"byte_end":256715,"line_start":1397,"line_end":1397,"column_start":27,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":256758,"byte_end":256766,"line_start":1399,"line_end":1399,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1243}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":256980,"byte_end":256985,"line_start":1406,"line_end":1406,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1247},{"krate":0,"index":1248},{"krate":0,"index":1249}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":257441,"byte_end":257446,"line_start":1422,"line_end":1422,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1252}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":257592,"byte_end":257597,"line_start":1428,"line_end":1428,"column_start":27,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":257644,"byte_end":257649,"line_start":1430,"line_end":1430,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1257}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":257870,"byte_end":257881,"line_start":1437,"line_end":1437,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1263}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":258192,"byte_end":258203,"line_start":1451,"line_end":1451,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1267},{"krate":0,"index":1268},{"krate":0,"index":1270}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":258620,"byte_end":258631,"line_start":1470,"line_end":1470,"column_start":30,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":258694,"byte_end":258706,"line_start":1472,"line_end":1472,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1277}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":258925,"byte_end":258937,"line_start":1482,"line_end":1482,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1282},{"krate":0,"index":1283},{"krate":0,"index":1284}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":259475,"byte_end":259487,"line_start":1506,"line_end":1506,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1288}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":259712,"byte_end":259724,"line_start":1516,"line_end":1516,"column_start":30,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":259805,"byte_end":259815,"line_start":1523,"line_end":1523,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1295}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":260032,"byte_end":260042,"line_start":1533,"line_end":1533,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1300},{"krate":0,"index":1301},{"krate":0,"index":1302}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":260584,"byte_end":260594,"line_start":1557,"line_end":1557,"column_start":30,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":260680,"byte_end":260690,"line_start":1564,"line_end":1564,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1309}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":260907,"byte_end":260926,"line_start":1574,"line_end":1574,"column_start":22,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1313}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":261132,"byte_end":261151,"line_start":1583,"line_end":1583,"column_start":29,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1318},{"krate":0,"index":1319},{"krate":0,"index":1320}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":261523,"byte_end":261542,"line_start":1600,"line_end":1600,"column_start":30,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":261628,"byte_end":261647,"line_start":1607,"line_end":1607,"column_start":27,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1327}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":261864,"byte_end":261869,"line_start":1617,"line_end":1617,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1331}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":262062,"byte_end":262067,"line_start":1626,"line_end":1626,"column_start":30,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":262153,"byte_end":262158,"line_start":1633,"line_end":1633,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1338}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":262382,"byte_end":262387,"line_start":1643,"line_end":1643,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1343},{"krate":0,"index":1344},{"krate":0,"index":1345}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/sse2.rs","byte_start":5702656,"byte_end":5702661,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1402},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/bitmask.rs","byte_start":76628,"byte_end":76635,"line_start":20,"line_end":20,"column_start":6,"column_end":13},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1408},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/bitmask.rs","byte_start":79249,"byte_end":79256,"line_start":99,"line_end":99,"column_start":23,"column_end":30},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1408},"to":{"krate":1,"index":4759}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/bitmask.rs","byte_start":79544,"byte_end":79555,"line_start":113,"line_end":113,"column_start":19,"column_end":30},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":41},"to":{"krate":1,"index":4852}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":7417,"byte_end":7428,"line_start":73,"line_end":73,"column_start":6,"column_end":17},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1414},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":10159,"byte_end":10167,"line_start":153,"line_end":153,"column_start":19,"column_end":27},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":65},"to":{"krate":1,"index":4852}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":15090,"byte_end":15096,"line_start":282,"line_end":282,"column_start":25,"column_end":31},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":76},"to":{"krate":1,"index":1904}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":15122,"byte_end":15128,"line_start":284,"line_end":284,"column_start":19,"column_end":25},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":76},"to":{"krate":1,"index":1606}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":15261,"byte_end":15267,"line_start":291,"line_end":291,"column_start":9,"column_end":15},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":76},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":18089,"byte_end":18097,"line_start":378,"line_end":378,"column_start":9,"column_end":17},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":98},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":48890,"byte_end":48898,"line_start":1136,"line_end":1136,"column_start":25,"column_end":33},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":98},"to":{"krate":1,"index":1904}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":48943,"byte_end":48951,"line_start":1137,"line_end":1137,"column_start":25,"column_end":33},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":98},"to":{"krate":1,"index":1916}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":48998,"byte_end":49006,"line_start":1139,"line_end":1139,"column_start":26,"column_end":34},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":98},"to":{"krate":1,"index":1606}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":51430,"byte_end":51438,"line_start":1204,"line_end":1204,"column_start":34,"column_end":42},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":98},"to":{"krate":0,"index":169}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":52221,"byte_end":52229,"line_start":1228,"line_end":1228,"column_start":16,"column_end":24},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":98},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":56182,"byte_end":56190,"line_start":1334,"line_end":1334,"column_start":18,"column_end":26},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":98},"to":{"krate":1,"index":2097}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":56612,"byte_end":56620,"line_start":1350,"line_end":1350,"column_start":26,"column_end":34},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":98},"to":{"krate":1,"index":4759}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":57462,"byte_end":57474,"line_start":1381,"line_end":1381,"column_start":9,"column_end":21},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":190},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":60297,"byte_end":60309,"line_start":1450,"line_end":1450,"column_start":25,"column_end":37},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":190},"to":{"krate":1,"index":1904}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":60340,"byte_end":60352,"line_start":1451,"line_end":1451,"column_start":25,"column_end":37},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":190},"to":{"krate":1,"index":1916}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":60378,"byte_end":60390,"line_start":1453,"line_end":1453,"column_start":19,"column_end":31},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":190},"to":{"krate":1,"index":1606}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":60680,"byte_end":60692,"line_start":1465,"line_end":1465,"column_start":22,"column_end":34},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":190},"to":{"krate":1,"index":4852}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":62159,"byte_end":62171,"line_start":1503,"line_end":1503,"column_start":27,"column_end":39},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":190},"to":{"krate":1,"index":5114}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":63066,"byte_end":63073,"line_start":1522,"line_end":1522,"column_start":9,"column_end":16},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":213},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":69012,"byte_end":69019,"line_start":1640,"line_end":1640,"column_start":19,"column_end":26},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":213},"to":{"krate":1,"index":1606}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":69227,"byte_end":69234,"line_start":1650,"line_end":1650,"column_start":22,"column_end":29},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":213},"to":{"krate":1,"index":4852}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":69919,"byte_end":69926,"line_start":1673,"line_end":1673,"column_start":31,"column_end":38},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":213},"to":{"krate":1,"index":4807}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":69959,"byte_end":69966,"line_start":1674,"line_end":1674,"column_start":27,"column_end":34},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":213},"to":{"krate":1,"index":5114}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":70163,"byte_end":70174,"line_start":1683,"line_end":1683,"column_start":9,"column_end":20},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":234},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":70327,"byte_end":70338,"line_start":1690,"line_end":1690,"column_start":25,"column_end":36},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":234},"to":{"krate":1,"index":1904}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":70383,"byte_end":70394,"line_start":1691,"line_end":1691,"column_start":25,"column_end":36},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":234},"to":{"krate":1,"index":1916}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":71034,"byte_end":71045,"line_start":1713,"line_end":1713,"column_start":18,"column_end":29},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":234},"to":{"krate":1,"index":2097}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":71558,"byte_end":71569,"line_start":1732,"line_end":1732,"column_start":22,"column_end":33},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":234},"to":{"krate":1,"index":4852}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":71909,"byte_end":71920,"line_start":1746,"line_end":1746,"column_start":31,"column_end":42},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":234},"to":{"krate":1,"index":4807}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":71953,"byte_end":71964,"line_start":1747,"line_end":1747,"column_start":27,"column_end":38},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":234},"to":{"krate":1,"index":5114}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":72504,"byte_end":72512,"line_start":1764,"line_end":1764,"column_start":9,"column_end":17},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":258},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":72669,"byte_end":72677,"line_start":1771,"line_end":1771,"column_start":25,"column_end":33},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":258},"to":{"krate":1,"index":1904}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":72726,"byte_end":72734,"line_start":1772,"line_end":1772,"column_start":25,"column_end":33},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":258},"to":{"krate":1,"index":1916}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":72777,"byte_end":72785,"line_start":1774,"line_end":1774,"column_start":18,"column_end":26},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":258},"to":{"krate":1,"index":2097}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":73513,"byte_end":73521,"line_start":1797,"line_end":1797,"column_start":22,"column_end":30},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":258},"to":{"krate":1,"index":4852}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":73914,"byte_end":73922,"line_start":1814,"line_end":1814,"column_start":31,"column_end":39},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":258},"to":{"krate":1,"index":4807}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":73959,"byte_end":73967,"line_start":1815,"line_end":1815,"column_start":27,"column_end":35},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":258},"to":{"krate":1,"index":5114}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":74499,"byte_end":74510,"line_start":1837,"line_end":1837,"column_start":13,"column_end":24},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":284},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/raw/mod.rs","byte_start":75081,"byte_end":75092,"line_start":1858,"line_end":1858,"column_start":26,"column_end":37},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":284},"to":{"krate":1,"index":4852}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":86793,"byte_end":86800,"line_start":193,"line_end":193,"column_start":46,"column_end":53},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":327},"to":{"krate":1,"index":1606}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":88534,"byte_end":88541,"line_start":251,"line_end":251,"column_start":15,"column_end":22},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":327},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":99898,"byte_end":99905,"line_start":645,"line_end":645,"column_start":15,"column_end":22},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":327},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":113616,"byte_end":113623,"line_start":1068,"line_end":1068,"column_start":15,"column_end":22},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":327},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":116556,"byte_end":116563,"line_start":1126,"line_end":1126,"column_start":29,"column_end":36},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":327},"to":{"krate":1,"index":1634}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":116884,"byte_end":116891,"line_start":1142,"line_end":1142,"column_start":22,"column_end":29},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":327},"to":{"krate":1,"index":1639}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":116985,"byte_end":116992,"line_start":1150,"line_end":1150,"column_start":25,"column_end":32},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":327},"to":{"krate":1,"index":6069}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":117188,"byte_end":117195,"line_start":1160,"line_end":1160,"column_start":27,"column_end":34},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":327},"to":{"krate":1,"index":1895}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":117485,"byte_end":117492,"line_start":1171,"line_end":1171,"column_start":40,"column_end":47},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":327},"to":{"krate":1,"index":2154}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":118338,"byte_end":118342,"line_start":1203,"line_end":1203,"column_start":22,"column_end":26},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":432},"to":{"krate":1,"index":1606}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":118580,"byte_end":118584,"line_start":1213,"line_end":1213,"column_start":41,"column_end":45},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":432},"to":{"krate":1,"index":6069}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":119362,"byte_end":119369,"line_start":1235,"line_end":1235,"column_start":40,"column_end":47},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":446},"to":{"krate":1,"index":1904}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":119395,"byte_end":119402,"line_start":1237,"line_end":1237,"column_start":12,"column_end":19},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":446},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":120066,"byte_end":120074,"line_start":1259,"line_end":1259,"column_start":12,"column_end":20},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":459},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":120729,"byte_end":120733,"line_start":1282,"line_end":1282,"column_start":22,"column_end":26},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":467},"to":{"krate":1,"index":1606}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":120931,"byte_end":120935,"line_start":1291,"line_end":1291,"column_start":34,"column_end":38},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":467},"to":{"krate":1,"index":6069}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":121459,"byte_end":121465,"line_start":1309,"line_end":1309,"column_start":22,"column_end":28},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":480},"to":{"krate":1,"index":1606}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":121665,"byte_end":121671,"line_start":1318,"line_end":1318,"column_start":34,"column_end":40},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":480},"to":{"krate":1,"index":6069}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":122141,"byte_end":122146,"line_start":1335,"line_end":1335,"column_start":12,"column_end":17},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":493},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":122897,"byte_end":122908,"line_start":1361,"line_end":1361,"column_start":28,"column_end":39},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":502},"to":{"krate":1,"index":2097}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":123302,"byte_end":123318,"line_start":1377,"line_end":1377,"column_start":28,"column_end":44},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":515},"to":{"krate":1,"index":2097}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":123468,"byte_end":123479,"line_start":1384,"line_end":1384,"column_start":28,"column_end":39},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":502},"to":{"krate":1,"index":4852}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":123850,"byte_end":123861,"line_start":1401,"line_end":1401,"column_start":33,"column_end":44},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":502},"to":{"krate":1,"index":5114}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":124108,"byte_end":124124,"line_start":1409,"line_end":1409,"column_start":12,"column_end":28},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":534},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":126222,"byte_end":126241,"line_start":1475,"line_end":1475,"column_start":31,"column_end":50},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":567},"to":{"krate":1,"index":1904}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":126334,"byte_end":126353,"line_start":1482,"line_end":1482,"column_start":31,"column_end":50},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":567},"to":{"krate":1,"index":1916}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":126976,"byte_end":126994,"line_start":1508,"line_end":1508,"column_start":19,"column_end":37},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":550},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":127819,"byte_end":127837,"line_start":1535,"line_end":1535,"column_start":19,"column_end":37},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":550},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":128847,"byte_end":128862,"line_start":1565,"line_end":1565,"column_start":19,"column_end":34},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":590},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":130405,"byte_end":130416,"line_start":1616,"line_end":1616,"column_start":19,"column_end":30},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":556},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":136261,"byte_end":136280,"line_start":1810,"line_end":1810,"column_start":19,"column_end":38},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":567},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":140302,"byte_end":140319,"line_start":1928,"line_end":1928,"column_start":19,"column_end":36},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":583},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":142386,"byte_end":142404,"line_start":1995,"line_end":1995,"column_start":25,"column_end":43},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":550},"to":{"krate":1,"index":6069}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":142581,"byte_end":142592,"line_start":2001,"line_end":2001,"column_start":39,"column_end":50},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":556},"to":{"krate":1,"index":6069}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":142926,"byte_end":142945,"line_start":2010,"line_end":2010,"column_start":39,"column_end":58},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":567},"to":{"krate":1,"index":6069}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":143203,"byte_end":143220,"line_start":2019,"line_end":2019,"column_start":25,"column_end":42},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":583},"to":{"krate":1,"index":6069}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":143385,"byte_end":143400,"line_start":2025,"line_end":2025,"column_start":25,"column_end":40},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":590},"to":{"krate":1,"index":6069}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":143989,"byte_end":143994,"line_start":2045,"line_end":2045,"column_start":39,"column_end":44},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":706},"to":{"krate":1,"index":6069}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":144566,"byte_end":144579,"line_start":2065,"line_end":2065,"column_start":31,"column_end":44},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":722},"to":{"krate":1,"index":1904}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":144672,"byte_end":144685,"line_start":2072,"line_end":2072,"column_start":31,"column_end":44},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":722},"to":{"krate":1,"index":1916}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":144787,"byte_end":144800,"line_start":2080,"line_end":2080,"column_start":39,"column_end":52},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":722},"to":{"krate":1,"index":6069}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":145284,"byte_end":145295,"line_start":2099,"line_end":2099,"column_start":32,"column_end":43},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":744},"to":{"krate":1,"index":6069}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":145992,"byte_end":145999,"line_start":2125,"line_end":2125,"column_start":32,"column_end":39},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":327},"to":{"krate":1,"index":4759}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":146778,"byte_end":146782,"line_start":2154,"line_end":2154,"column_start":29,"column_end":33},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":432},"to":{"krate":1,"index":4852}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":147353,"byte_end":147357,"line_start":2173,"line_end":2173,"column_start":34,"column_end":38},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":432},"to":{"krate":1,"index":4807}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":147511,"byte_end":147515,"line_start":2180,"line_end":2180,"column_start":30,"column_end":34},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":432},"to":{"krate":1,"index":5114}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":147558,"byte_end":147565,"line_start":2182,"line_end":2182,"column_start":29,"column_end":36},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":446},"to":{"krate":1,"index":4852}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":148148,"byte_end":148155,"line_start":2201,"line_end":2201,"column_start":34,"column_end":41},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":446},"to":{"krate":1,"index":4807}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":148308,"byte_end":148315,"line_start":2207,"line_end":2207,"column_start":30,"column_end":37},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":446},"to":{"krate":1,"index":5114}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":148356,"byte_end":148363,"line_start":2209,"line_end":2209,"column_start":27,"column_end":34},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":446},"to":{"krate":1,"index":6069}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":148569,"byte_end":148577,"line_start":2219,"line_end":2219,"column_start":25,"column_end":33},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":459},"to":{"krate":1,"index":4852}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":148908,"byte_end":148916,"line_start":2231,"line_end":2231,"column_start":34,"column_end":42},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":459},"to":{"krate":1,"index":4807}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":149065,"byte_end":149073,"line_start":2237,"line_end":2237,"column_start":30,"column_end":38},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":459},"to":{"krate":1,"index":5114}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":149124,"byte_end":149132,"line_start":2239,"line_end":2239,"column_start":41,"column_end":49},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":459},"to":{"krate":1,"index":6069}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":149294,"byte_end":149298,"line_start":2245,"line_end":2245,"column_start":29,"column_end":33},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":467},"to":{"krate":1,"index":4852}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":149770,"byte_end":149774,"line_start":2261,"line_end":2261,"column_start":34,"column_end":38},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":467},"to":{"krate":1,"index":4807}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":149927,"byte_end":149931,"line_start":2267,"line_end":2267,"column_start":30,"column_end":34},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":467},"to":{"krate":1,"index":5114}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":149974,"byte_end":149980,"line_start":2269,"line_end":2269,"column_start":29,"column_end":35},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":480},"to":{"krate":1,"index":4852}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":150452,"byte_end":150458,"line_start":2285,"line_end":2285,"column_start":34,"column_end":40},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":480},"to":{"krate":1,"index":4807}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":150611,"byte_end":150617,"line_start":2291,"line_end":2291,"column_start":30,"column_end":36},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":480},"to":{"krate":1,"index":5114}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":150660,"byte_end":150669,"line_start":2293,"line_end":2293,"column_start":29,"column_end":38},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":545},"to":{"krate":1,"index":4852}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":151149,"byte_end":151158,"line_start":2309,"line_end":2309,"column_start":34,"column_end":43},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":545},"to":{"krate":1,"index":4807}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":151311,"byte_end":151320,"line_start":2315,"line_end":2315,"column_start":30,"column_end":39},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":545},"to":{"krate":1,"index":5114}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":151361,"byte_end":151370,"line_start":2317,"line_end":2317,"column_start":27,"column_end":36},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":545},"to":{"krate":1,"index":6069}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":151586,"byte_end":151591,"line_start":2327,"line_end":2327,"column_start":29,"column_end":34},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":493},"to":{"krate":1,"index":4852}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":151926,"byte_end":151931,"line_start":2339,"line_end":2339,"column_start":34,"column_end":39},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":493},"to":{"krate":1,"index":4807}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":152084,"byte_end":152089,"line_start":2345,"line_end":2345,"column_start":30,"column_end":35},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":493},"to":{"krate":1,"index":5114}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":152130,"byte_end":152135,"line_start":2347,"line_end":2347,"column_start":27,"column_end":32},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":493},"to":{"krate":1,"index":6069}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":152335,"byte_end":152340,"line_start":2357,"line_end":2357,"column_start":19,"column_end":24},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":706},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":158959,"byte_end":158964,"line_start":2588,"line_end":2588,"column_start":28,"column_end":33},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":706},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":159721,"byte_end":159734,"line_start":2615,"line_end":2615,"column_start":19,"column_end":32},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":722},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":169004,"byte_end":169015,"line_start":2921,"line_end":2921,"column_start":19,"column_end":30},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":744},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":171294,"byte_end":171301,"line_start":3005,"line_end":3005,"column_start":40,"column_end":47},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":327},"to":{"krate":1,"index":4755}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":171874,"byte_end":171881,"line_start":3023,"line_end":3023,"column_start":34,"column_end":41},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":327},"to":{"krate":1,"index":4768}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/map.rs","byte_start":173328,"byte_end":173335,"line_start":3068,"line_end":3068,"column_start":46,"column_end":53},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":327},"to":{"krate":1,"index":4768}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/scopeguard.rs","byte_start":214620,"byte_end":214630,"line_start":20,"line_end":20,"column_start":22,"column_end":32},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":998},"to":{"krate":1,"index":2073}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/scopeguard.rs","byte_start":214818,"byte_end":214828,"line_start":31,"line_end":31,"column_start":25,"column_end":35},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":998},"to":{"krate":1,"index":2086}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/scopeguard.rs","byte_start":215007,"byte_end":215017,"line_start":41,"line_end":41,"column_start":21,"column_end":31},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":998},"to":{"krate":1,"index":2097}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":219242,"byte_end":219249,"line_start":118,"line_end":118,"column_start":36,"column_end":43},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1044},"to":{"krate":1,"index":1606}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":220587,"byte_end":220594,"line_start":170,"line_end":170,"column_start":12,"column_end":19},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1044},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":228139,"byte_end":228146,"line_start":429,"line_end":429,"column_start":12,"column_end":19},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1044},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":245473,"byte_end":245480,"line_start":970,"line_end":970,"column_start":26,"column_end":33},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1044},"to":{"krate":1,"index":1634}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":245728,"byte_end":245735,"line_start":984,"line_end":984,"column_start":19,"column_end":26},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1044},"to":{"krate":1,"index":1639}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":245817,"byte_end":245824,"line_start":991,"line_end":991,"column_start":27,"column_end":34},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1044},"to":{"krate":1,"index":6069}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":246045,"byte_end":246052,"line_start":1001,"line_end":1001,"column_start":32,"column_end":39},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1044},"to":{"krate":1,"index":4755}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":246360,"byte_end":246367,"line_start":1014,"line_end":1014,"column_start":26,"column_end":33},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":1044},"to":{"krate":1,"index":4768}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":246933,"byte_end":246940,"line_start":1037,"line_end":1037,"column_start":34,"column_end":41},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":1044},"to":{"krate":1,"index":4768}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":247505,"byte_end":247512,"line_start":1060,"line_end":1060,"column_start":24,"column_end":31},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":1044},"to":{"krate":1,"index":1895}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":254332,"byte_end":254339,"line_start":1309,"line_end":1309,"column_start":29,"column_end":36},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":1044},"to":{"krate":1,"index":4759}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":255214,"byte_end":255218,"line_start":1341,"line_end":1341,"column_start":19,"column_end":23},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":1161},"to":{"krate":1,"index":1606}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":255402,"byte_end":255406,"line_start":1349,"line_end":1349,"column_start":26,"column_end":30},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":1161},"to":{"krate":1,"index":4852}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":255735,"byte_end":255739,"line_start":1361,"line_end":1361,"column_start":35,"column_end":39},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":1161},"to":{"krate":1,"index":4807}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":255885,"byte_end":255889,"line_start":1367,"line_end":1367,"column_start":27,"column_end":31},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":1161},"to":{"krate":1,"index":5114}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":255936,"byte_end":255940,"line_start":1369,"line_end":1369,"column_start":36,"column_end":40},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":1161},"to":{"krate":1,"index":6069}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":256097,"byte_end":256105,"line_start":1375,"line_end":1375,"column_start":22,"column_end":30},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":1165},"to":{"krate":1,"index":4852}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":256557,"byte_end":256565,"line_start":1391,"line_end":1391,"column_start":31,"column_end":39},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":1165},"to":{"krate":1,"index":4807}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":256707,"byte_end":256715,"line_start":1397,"line_end":1397,"column_start":27,"column_end":35},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":1165},"to":{"krate":1,"index":5114}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":256758,"byte_end":256766,"line_start":1399,"line_end":1399,"column_start":36,"column_end":44},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":1165},"to":{"krate":1,"index":6069}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":256980,"byte_end":256985,"line_start":1406,"line_end":1406,"column_start":22,"column_end":27},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":1168},"to":{"krate":1,"index":4852}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":257441,"byte_end":257446,"line_start":1422,"line_end":1422,"column_start":31,"column_end":36},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":1168},"to":{"krate":1,"index":4807}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":257592,"byte_end":257597,"line_start":1428,"line_end":1428,"column_start":27,"column_end":32},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":1168},"to":{"krate":1,"index":5114}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":257644,"byte_end":257649,"line_start":1430,"line_end":1430,"column_start":36,"column_end":41},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":1168},"to":{"krate":1,"index":6069}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":257870,"byte_end":257881,"line_start":1437,"line_end":1437,"column_start":25,"column_end":36},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":1172},"to":{"krate":1,"index":2097}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":258192,"byte_end":258203,"line_start":1451,"line_end":1451,"column_start":25,"column_end":36},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":1172},"to":{"krate":1,"index":4852}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":258620,"byte_end":258631,"line_start":1470,"line_end":1470,"column_start":30,"column_end":41},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":1172},"to":{"krate":1,"index":5114}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":258694,"byte_end":258706,"line_start":1472,"line_end":1472,"column_start":22,"column_end":34},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":1178},"to":{"krate":1,"index":1606}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":258925,"byte_end":258937,"line_start":1482,"line_end":1482,"column_start":29,"column_end":41},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":1178},"to":{"krate":1,"index":4852}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":259475,"byte_end":259487,"line_start":1506,"line_end":1506,"column_start":27,"column_end":39},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":1178},"to":{"krate":1,"index":6069}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":259712,"byte_end":259724,"line_start":1516,"line_end":1516,"column_start":30,"column_end":42},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":1178},"to":{"krate":1,"index":5114}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":259805,"byte_end":259815,"line_start":1523,"line_end":1523,"column_start":22,"column_end":32},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":1184},"to":{"krate":1,"index":1606}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":260032,"byte_end":260042,"line_start":1533,"line_end":1533,"column_start":29,"column_end":39},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":1184},"to":{"krate":1,"index":4852}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":260584,"byte_end":260594,"line_start":1557,"line_end":1557,"column_start":30,"column_end":40},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":1184},"to":{"krate":1,"index":5114}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":260680,"byte_end":260690,"line_start":1564,"line_end":1564,"column_start":27,"column_end":37},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":1184},"to":{"krate":1,"index":6069}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":260907,"byte_end":260926,"line_start":1574,"line_end":1574,"column_start":22,"column_end":41},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":1190},"to":{"krate":1,"index":1606}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":261132,"byte_end":261151,"line_start":1583,"line_end":1583,"column_start":29,"column_end":48},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":1190},"to":{"krate":1,"index":4852}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":261523,"byte_end":261542,"line_start":1600,"line_end":1600,"column_start":30,"column_end":49},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":1190},"to":{"krate":1,"index":5114}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":261628,"byte_end":261647,"line_start":1607,"line_end":1607,"column_start":27,"column_end":46},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":1190},"to":{"krate":1,"index":6069}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":261864,"byte_end":261869,"line_start":1617,"line_end":1617,"column_start":22,"column_end":27},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":1195},"to":{"krate":1,"index":1606}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":262062,"byte_end":262067,"line_start":1626,"line_end":1626,"column_start":30,"column_end":35},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":1195},"to":{"krate":1,"index":5114}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":262153,"byte_end":262158,"line_start":1633,"line_end":1633,"column_start":27,"column_end":32},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":1195},"to":{"krate":1,"index":6069}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.0/src/set.rs","byte_start":262382,"byte_end":262387,"line_start":1643,"line_end":1643,"column_start":29,"column_end":34},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":1195},"to":{"krate":1,"index":4852}}]}