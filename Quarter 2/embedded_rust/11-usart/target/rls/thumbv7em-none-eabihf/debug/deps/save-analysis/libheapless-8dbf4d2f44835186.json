{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5","program":"/home/farjad-ali/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","heapless","--edition=2018","/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"cas\"","--cfg","feature=\"default\"","-C","metadata=8dbf4d2f44835186","-C","extra-filename=-8dbf4d2f44835186","--out-dir","/home/farjad-ali/Rust/Quarter 2/embedded_rust/11-usart/target/rls/thumbv7em-none-eabihf/debug/deps","--target","thumbv7em-none-eabihf","-L","dependency=/home/farjad-ali/Rust/Quarter 2/embedded_rust/11-usart/target/rls/thumbv7em-none-eabihf/debug/deps","-L","dependency=/home/farjad-ali/Rust/Quarter 2/embedded_rust/11-usart/target/rls/debug/deps","--extern","as_slice=/home/farjad-ali/Rust/Quarter 2/embedded_rust/11-usart/target/rls/thumbv7em-none-eabihf/debug/deps/libas_slice-de61d1af46372b3b.rmeta","--extern","generic_array=/home/farjad-ali/Rust/Quarter 2/embedded_rust/11-usart/target/rls/thumbv7em-none-eabihf/debug/deps/libgeneric_array-7bb19e4411b26ca5.rmeta","--extern","hash32=/home/farjad-ali/Rust/Quarter 2/embedded_rust/11-usart/target/rls/thumbv7em-none-eabihf/debug/deps/libhash32-211a45ab4112758d.rmeta","--extern","stable_deref_trait=/home/farjad-ali/Rust/Quarter 2/embedded_rust/11-usart/target/rls/thumbv7em-none-eabihf/debug/deps/libstable_deref_trait-aec8b759105389bd.rmeta","--cap-lints","allow","--cfg","armv7m","--cfg","has_cas","--cfg","has_atomics","--error-format=json","--sysroot","/home/farjad-ali/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/farjad-ali/Rust/Quarter 2/embedded_rust/11-usart/target/rls/thumbv7em-none-eabihf/debug/deps/libheapless-8dbf4d2f44835186.rmeta"},"prelude":{"crate_id":{"name":"heapless","disambiguator":[15139927627115181445,6448516916201186500]},"crate_root":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src","external_crates":[{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[16410780912699979615,14786055825151821009]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[16250002860209205769,6607268543709446693]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[14103481253267247487,17467155086432962609]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","num":4,"id":{"name":"generic_array","disambiguator":[10616777522099223402,12595951863927918193]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","num":5,"id":{"name":"typenum","disambiguator":[5527154902614117398,2488479521681713790]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","num":6,"id":{"name":"hash32","disambiguator":[7944099121553749648,5110475799697952972]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","num":7,"id":{"name":"byteorder","disambiguator":[4586218745050012410,5516193696011204404]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","num":8,"id":{"name":"as_slice","disambiguator":[11716226698236209174,15510150420740182695]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","num":9,"id":{"name":"generic_array","disambiguator":[16676433861474099338,2165757215028005619]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/singleton.rs","num":10,"id":{"name":"stable_deref_trait","disambiguator":[238294044864312315,18385378109712252382]}}],"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":0,"byte_end":4243,"line_start":1,"line_end":113,"column_start":1,"column_end":12}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":926},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":3523,"byte_end":3533,"line_start":78,"line_end":78,"column_start":22,"column_end":32},"alias_span":null,"name":"BinaryHeap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":2247},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":3567,"byte_end":3573,"line_start":79,"line_end":79,"column_start":33,"column_end":39},"alias_span":null,"name":"consts","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":343},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":3598,"byte_end":3609,"line_start":80,"line_end":80,"column_start":24,"column_end":35},"alias_span":null,"name":"ArrayLength","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":39},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":3630,"byte_end":3641,"line_start":81,"line_end":81,"column_start":20,"column_end":31},"alias_span":null,"name":"FnvIndexMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":84},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":3643,"byte_end":3651,"line_start":81,"line_end":81,"column_start":33,"column_end":41},"alias_span":null,"name":"IndexMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":276},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":3673,"byte_end":3684,"line_start":82,"line_end":82,"column_start":20,"column_end":31},"alias_span":null,"name":"FnvIndexSet","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":279},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":3686,"byte_end":3694,"line_start":82,"line_end":82,"column_start":33,"column_end":41},"alias_span":null,"name":"IndexSet","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":441},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":3717,"byte_end":3726,"line_start":83,"line_end":83,"column_start":21,"column_end":30},"alias_span":null,"name":"LinearMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":613},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":3744,"byte_end":3750,"line_start":84,"line_end":84,"column_start":17,"column_end":23},"alias_span":null,"name":"String","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":726},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":3765,"byte_end":3768,"line_start":85,"line_end":85,"column_start":14,"column_end":17},"alias_span":null,"name":"Vec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2321},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":3787,"byte_end":3800,"line_start":86,"line_end":86,"column_start":18,"column_end":31},"alias_span":null,"name":"HistoryBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1280},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":162848,"byte_end":162852,"line_start":241,"line_end":241,"column_start":16,"column_end":20},"alias_span":null,"name":"Node","value":"","parent":{"krate":0,"index":1157}},{"kind":"Use","ref_id":{"krate":0,"index":1398},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":184754,"byte_end":184762,"line_start":92,"line_end":92,"column_start":17,"column_end":25},"alias_span":null,"name":"Consumer","value":"","parent":{"krate":0,"index":1365}},{"kind":"Use","ref_id":{"krate":0,"index":1412},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":184764,"byte_end":184772,"line_start":92,"line_end":92,"column_start":27,"column_end":35},"alias_span":null,"name":"Producer","value":"","parent":{"krate":0,"index":1365}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":0,"byte_end":4243,"line_start":1,"line_end":113,"column_start":1,"column_end":12},"name":"","qualname":"::","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":257},{"krate":0,"index":426},{"krate":0,"index":594},{"krate":0,"index":692},{"krate":0,"index":869},{"krate":0,"index":904},{"krate":0,"index":1026},{"krate":0,"index":1055},{"krate":0,"index":1157},{"krate":0,"index":1365},{"krate":0,"index":1566}],"decl_id":null,"docs":" `static` friendly data structures that don't require dynamic memory allocation","sig":null,"attributes":[{"value":"! `static` friendly data structures that don't require dynamic memory allocation","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":0,"byte_end":82,"line_start":1,"line_end":1,"column_start":1,"column_end":83}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":83,"byte_end":86,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! The core principle behind `heapless` is that its data structures are backed by a *static* memory","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":87,"byte_end":187,"line_start":3,"line_end":3,"column_start":1,"column_end":101}},{"value":"! allocation. For example, you can think of `heapless::Vec` as an alternative version of","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":188,"byte_end":278,"line_start":4,"line_end":4,"column_start":1,"column_end":91}},{"value":"! `std::Vec` with fixed capacity and that can't be re-allocated on the fly (e.g. via `push`).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":279,"byte_end":374,"line_start":5,"line_end":5,"column_start":1,"column_end":96}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":375,"byte_end":378,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! All `heapless` data structures store their memory allocation *inline* and specify their capacity","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":379,"byte_end":479,"line_start":7,"line_end":7,"column_start":1,"column_end":101}},{"value":"! via their type parameter `N`. This means that you can instantiate a `heapless` data structure on","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":480,"byte_end":580,"line_start":8,"line_end":8,"column_start":1,"column_end":101}},{"value":"! the stack, in a `static` variable, or even in the heap.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":581,"byte_end":640,"line_start":9,"line_end":9,"column_start":1,"column_end":60}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":641,"byte_end":644,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":645,"byte_end":652,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"! use heapless::Vec; // fixed capacity `std::Vec`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":653,"byte_end":704,"line_start":12,"line_end":12,"column_start":1,"column_end":52}},{"value":"! use heapless::consts::U8; // type level integer used to specify capacity","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":705,"byte_end":781,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":782,"byte_end":785,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"! // on the stack","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":786,"byte_end":805,"line_start":15,"line_end":15,"column_start":1,"column_end":20}},{"value":"! let mut xs: Vec<u8, U8> = Vec::new(); // can hold up to 8 elements","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":806,"byte_end":876,"line_start":16,"line_end":16,"column_start":1,"column_end":71}},{"value":"! xs.push(42).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":877,"byte_end":902,"line_start":17,"line_end":17,"column_start":1,"column_end":26}},{"value":"! assert_eq!(xs.pop(), Some(42));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":903,"byte_end":938,"line_start":18,"line_end":18,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":939,"byte_end":942,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! // in a `static` variable","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":943,"byte_end":972,"line_start":20,"line_end":20,"column_start":1,"column_end":30}},{"value":"! // (because `const-fn` has not been fully stabilized you need to use the helper structs in","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":973,"byte_end":1067,"line_start":21,"line_end":21,"column_start":1,"column_end":95}},{"value":"! // the `i` module, which must be wrapped in a tuple struct)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":1068,"byte_end":1131,"line_start":22,"line_end":22,"column_start":1,"column_end":64}},{"value":"! static mut XS: Vec<u8, U8> = Vec(heapless::i::Vec::new());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":1132,"byte_end":1194,"line_start":23,"line_end":23,"column_start":1,"column_end":63}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":1195,"byte_end":1198,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"! let xs = unsafe { &mut XS };","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":1199,"byte_end":1231,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":1232,"byte_end":1235,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"! xs.push(42);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":1236,"byte_end":1252,"line_start":27,"line_end":27,"column_start":1,"column_end":17}},{"value":"! assert_eq!(xs.pop(), Some(42));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":1253,"byte_end":1288,"line_start":28,"line_end":28,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":1289,"byte_end":1292,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"! // in the heap (though kind of pointless because no reallocation)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":1293,"byte_end":1362,"line_start":30,"line_end":30,"column_start":1,"column_end":70}},{"value":"! let mut ys: Box<Vec<u8, U8>> = Box::new(Vec::new());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":1363,"byte_end":1419,"line_start":31,"line_end":31,"column_start":1,"column_end":57}},{"value":"! ys.push(42).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":1420,"byte_end":1445,"line_start":32,"line_end":32,"column_start":1,"column_end":26}},{"value":"! assert_eq!(ys.pop(), Some(42));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":1446,"byte_end":1481,"line_start":33,"line_end":33,"column_start":1,"column_end":36}},{"value":"! ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":1482,"byte_end":1489,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":1490,"byte_end":1493,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"! Because they have fixed capacity `heapless` data structures don't implicitly reallocate. This","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":1494,"byte_end":1591,"line_start":36,"line_end":36,"column_start":1,"column_end":98}},{"value":"! means that operations like `heapless::Vec.push` are *truly* constant time rather than amortized","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":1592,"byte_end":1691,"line_start":37,"line_end":37,"column_start":1,"column_end":100}},{"value":"! constant time with potentially unbounded (depends on the allocator) worst case execution time","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":1692,"byte_end":1789,"line_start":38,"line_end":38,"column_start":1,"column_end":98}},{"value":"! (which is bad / unacceptable for hard real time applications).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":1790,"byte_end":1856,"line_start":39,"line_end":39,"column_start":1,"column_end":67}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":1857,"byte_end":1860,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"! `heapless` data structures don't use a memory allocator which means no risk of an uncatchable","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":1861,"byte_end":1958,"line_start":41,"line_end":41,"column_start":1,"column_end":98}},{"value":"! Out Of Memory (OOM) condition while performing operations on them. It's certainly possible to","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":1959,"byte_end":2056,"line_start":42,"line_end":42,"column_start":1,"column_end":98}},{"value":"! run out of capacity while growing `heapless` data structures, but the API lets you handle this","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":2057,"byte_end":2155,"line_start":43,"line_end":43,"column_start":1,"column_end":99}},{"value":"! possibility by returning a `Result` on operations that may exhaust the capacity of the data","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":2156,"byte_end":2251,"line_start":44,"line_end":44,"column_start":1,"column_end":96}},{"value":"! structure.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":2252,"byte_end":2266,"line_start":45,"line_end":45,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":2267,"byte_end":2270,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"! List of currently implemented data structures:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":2271,"byte_end":2321,"line_start":47,"line_end":47,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":2322,"byte_end":2325,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"! - [`BinaryHeap`](binary_heap/struct.BinaryHeap.html) -- priority queue","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":2326,"byte_end":2400,"line_start":49,"line_end":49,"column_start":1,"column_end":75}},{"value":"! - [`IndexMap`](struct.IndexMap.html) -- hash table","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":2401,"byte_end":2455,"line_start":50,"line_end":50,"column_start":1,"column_end":55}},{"value":"! - [`IndexSet`](struct.IndexSet.html) -- hash set","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":2456,"byte_end":2508,"line_start":51,"line_end":51,"column_start":1,"column_end":53}},{"value":"! - [`LinearMap`](struct.LinearMap.html)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":2509,"byte_end":2551,"line_start":52,"line_end":52,"column_start":1,"column_end":43}},{"value":"! - [`Pool`](pool/struct.Pool.html) -- lock-free memory pool","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":2552,"byte_end":2614,"line_start":53,"line_end":53,"column_start":1,"column_end":63}},{"value":"! - [`String`](struct.String.html)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":2615,"byte_end":2651,"line_start":54,"line_end":54,"column_start":1,"column_end":37}},{"value":"! - [`Vec`](struct.Vec.html)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":2652,"byte_end":2682,"line_start":55,"line_end":55,"column_start":1,"column_end":31}},{"value":"! - [`mpmc::Q*`](mpmc/index.html) -- multiple producer multiple consumer lock-free queue","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":2683,"byte_end":2773,"line_start":56,"line_end":56,"column_start":1,"column_end":91}},{"value":"! - [`spsc::Queue`](spsc/struct.Queue.html) -- single producer single consumer lock-free queue","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":2774,"byte_end":2870,"line_start":57,"line_end":57,"column_start":1,"column_end":97}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":2871,"byte_end":2874,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"! # Optional Features","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":2875,"byte_end":2898,"line_start":59,"line_end":59,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":2899,"byte_end":2902,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"! The `heapless` crate provides the following optional Cargo features:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":2903,"byte_end":2975,"line_start":61,"line_end":61,"column_start":1,"column_end":73}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":2976,"byte_end":2979,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"! - `ufmt-impl`: Implement [`ufmt_write::uWrite`] for `String<N>` and `Vec<u8, N>`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":2980,"byte_end":3064,"line_start":63,"line_end":63,"column_start":1,"column_end":85}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":3065,"byte_end":3068,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"! [`ufmt_write::uWrite`]: https://docs.rs/ufmt-write/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":3069,"byte_end":3124,"line_start":65,"line_end":65,"column_start":1,"column_end":56}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":3125,"byte_end":3128,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"! # Minimum Supported Rust Version (MSRV)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":3129,"byte_end":3172,"line_start":67,"line_end":67,"column_start":1,"column_end":44}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":3173,"byte_end":3176,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"! This crate is guaranteed to compile on stable Rust 1.36 and up with its default set of features.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":3177,"byte_end":3277,"line_start":69,"line_end":69,"column_start":1,"column_end":101}},{"value":"! It *might* compile on older versions but that may change in any new patch release.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":3278,"byte_end":3364,"line_start":70,"line_end":70,"column_start":1,"column_end":87}},{"value":"no_std","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":3389,"byte_end":3395,"line_start":72,"line_end":72,"column_start":24,"column_end":30}},{"value":"deny(missing_docs)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":3398,"byte_end":3420,"line_start":73,"line_end":73,"column_start":1,"column_end":23}},{"value":"deny(rust_2018_compatibility)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":3421,"byte_end":3454,"line_start":74,"line_end":74,"column_start":1,"column_end":34}},{"value":"deny(rust_2018_idioms)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":3455,"byte_end":3481,"line_start":75,"line_end":75,"column_start":1,"column_end":27}},{"value":"deny(warnings)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":3482,"byte_end":3500,"line_start":76,"line_end":76,"column_start":1,"column_end":19}}]},{"kind":"Type","id":{"krate":0,"index":39},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":4596,"byte_end":4607,"line_start":16,"line_end":16,"column_start":10,"column_end":21},"name":"FnvIndexMap","qualname":"::indexmap::FnvIndexMap","value":"IndexMap<K, V, N, BuildHasherDefault<FnvHasher>>","parent":null,"children":[],"decl_id":null,"docs":" An `IndexMap` using the default FNV hasher\n","sig":null,"attributes":[{"value":"/ An `IndexMap` using the default FNV hasher","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":4540,"byte_end":4586,"line_start":15,"line_end":15,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":1639},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":5031,"byte_end":5037,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"name":"Bucket","qualname":"::indexmap::Bucket","value":"Bucket {  }","parent":null,"children":[{"krate":0,"index":1642},{"krate":0,"index":1643},{"krate":0,"index":1644}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1649},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":5156,"byte_end":5159,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"Pos","qualname":"::indexmap::Pos","value":"Pos {  }","parent":null,"children":[{"krate":0,"index":1650}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":84},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":14706,"byte_end":14714,"line_start":329,"line_end":329,"column_start":12,"column_end":20},"name":"IndexMap","qualname":"::indexmap::IndexMap","value":"IndexMap {  }","parent":null,"children":[{"krate":0,"index":89},{"krate":0,"index":90}],"decl_id":null,"docs":" Fixed capacity [`IndexMap`](https://docs.rs/indexmap/1/indexmap/map/struct.IndexMap.html)","sig":null,"attributes":[{"value":"/ Fixed capacity [`IndexMap`](https://docs.rs/indexmap/1/indexmap/map/struct.IndexMap.html)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":13082,"byte_end":13175,"line_start":287,"line_end":287,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":13176,"byte_end":13179,"line_start":288,"line_end":288,"column_start":1,"column_end":4}},{"value":"/ Note that the capacity of the `IndexMap` must be a power of 2.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":13180,"byte_end":13246,"line_start":289,"line_end":289,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":13247,"byte_end":13250,"line_start":290,"line_end":290,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":13251,"byte_end":13265,"line_start":291,"line_end":291,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":13266,"byte_end":13269,"line_start":292,"line_end":292,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":13270,"byte_end":13277,"line_start":293,"line_end":293,"column_start":1,"column_end":8}},{"value":"/ use heapless::FnvIndexMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":13278,"byte_end":13308,"line_start":294,"line_end":294,"column_start":1,"column_end":31}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":13309,"byte_end":13337,"line_start":295,"line_end":295,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":13338,"byte_end":13341,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/ // A hash map with a capacity of 16 key-value pairs allocated on the stack","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":13342,"byte_end":13420,"line_start":297,"line_end":297,"column_start":1,"column_end":79}},{"value":"/ let mut book_reviews = FnvIndexMap::<_, _, U16>::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":13421,"byte_end":13480,"line_start":298,"line_end":298,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":13481,"byte_end":13484,"line_start":299,"line_end":299,"column_start":1,"column_end":4}},{"value":"/ // review some books.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":13485,"byte_end":13510,"line_start":300,"line_end":300,"column_start":1,"column_end":26}},{"value":"/ book_reviews.insert(\"Adventures of Huckleberry Finn\",    \"My favorite book.\").unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":13511,"byte_end":13602,"line_start":301,"line_end":301,"column_start":1,"column_end":92}},{"value":"/ book_reviews.insert(\"Grimms' Fairy Tales\",               \"Masterpiece.\").unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":13603,"byte_end":13689,"line_start":302,"line_end":302,"column_start":1,"column_end":87}},{"value":"/ book_reviews.insert(\"Pride and Prejudice\",               \"Very enjoyable.\").unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":13690,"byte_end":13779,"line_start":303,"line_end":303,"column_start":1,"column_end":90}},{"value":"/ book_reviews.insert(\"The Adventures of Sherlock Holmes\", \"Eye lyked it alot.\").unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":13780,"byte_end":13872,"line_start":304,"line_end":304,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":13873,"byte_end":13876,"line_start":305,"line_end":305,"column_start":1,"column_end":4}},{"value":"/ // check for a specific one.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":13877,"byte_end":13909,"line_start":306,"line_end":306,"column_start":1,"column_end":33}},{"value":"/ if !book_reviews.contains_key(\"Les Misérables\") {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":13910,"byte_end":13964,"line_start":307,"line_end":307,"column_start":1,"column_end":54}},{"value":"/     println!(\"We've got {} reviews, but Les Misérables ain't one.\",","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":13965,"byte_end":14037,"line_start":308,"line_end":308,"column_start":1,"column_end":72}},{"value":"/              book_reviews.len());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":14038,"byte_end":14075,"line_start":309,"line_end":309,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":14076,"byte_end":14081,"line_start":310,"line_end":310,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":14082,"byte_end":14085,"line_start":311,"line_end":311,"column_start":1,"column_end":4}},{"value":"/ // oops, this review has a lot of spelling mistakes, let's delete it.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":14086,"byte_end":14159,"line_start":312,"line_end":312,"column_start":1,"column_end":74}},{"value":"/ book_reviews.remove(\"The Adventures of Sherlock Holmes\");","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":14160,"byte_end":14221,"line_start":313,"line_end":313,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":14222,"byte_end":14225,"line_start":314,"line_end":314,"column_start":1,"column_end":4}},{"value":"/ // look up the values associated with some keys.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":14226,"byte_end":14278,"line_start":315,"line_end":315,"column_start":1,"column_end":53}},{"value":"/ let to_find = [\"Pride and Prejudice\", \"Alice's Adventure in Wonderland\"];","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":14279,"byte_end":14356,"line_start":316,"line_end":316,"column_start":1,"column_end":78}},{"value":"/ for book in &to_find {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":14357,"byte_end":14383,"line_start":317,"line_end":317,"column_start":1,"column_end":27}},{"value":"/     match book_reviews.get(book) {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":14384,"byte_end":14422,"line_start":318,"line_end":318,"column_start":1,"column_end":39}},{"value":"/         Some(review) => println!(\"{}: {}\", book, review),","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":14423,"byte_end":14484,"line_start":319,"line_end":319,"column_start":1,"column_end":62}},{"value":"/         None => println!(\"{} is unreviewed.\", book)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":14485,"byte_end":14540,"line_start":320,"line_end":320,"column_start":1,"column_end":56}},{"value":"/     }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":14541,"byte_end":14550,"line_start":321,"line_end":321,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":14551,"byte_end":14556,"line_start":322,"line_end":322,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":14557,"byte_end":14560,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ // iterate over everything.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":14561,"byte_end":14592,"line_start":324,"line_end":324,"column_start":1,"column_end":32}},{"value":"/ for (book, review) in &book_reviews {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":14593,"byte_end":14634,"line_start":325,"line_end":325,"column_start":1,"column_end":42}},{"value":"/     println!(\"{}: \\\"{}\\\"\", book, review);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":14635,"byte_end":14680,"line_start":326,"line_end":326,"column_start":1,"column_end":46}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":14681,"byte_end":14686,"line_start":327,"line_end":327,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":14687,"byte_end":14694,"line_start":328,"line_end":328,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":15253,"byte_end":15256,"line_start":348,"line_end":348,"column_start":12,"column_end":15},"name":"new","qualname":"<IndexMap<K, V, N, BuildHasherDefault<S>>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `IndexMap`.","sig":null,"attributes":[{"value":"/ Creates an empty `IndexMap`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":15128,"byte_end":15160,"line_start":345,"line_end":345,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":15165,"byte_end":15168,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ **NOTE** This constructor will become a `const fn` in the future","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":15173,"byte_end":15241,"line_start":347,"line_end":347,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":15631,"byte_end":15639,"line_start":364,"line_end":364,"column_start":12,"column_end":20},"name":"capacity","qualname":"<IndexMap<K, V, N, S>>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements the map can hold\n","sig":null,"attributes":[{"value":"/ Returns the number of elements the map can hold","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":15568,"byte_end":15619,"line_start":363,"line_end":363,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":16123,"byte_end":16127,"line_start":383,"line_end":383,"column_start":12,"column_end":16},"name":"keys","qualname":"<IndexMap<K, V, N, S>>::keys","value":"fn (&self) -> impl Iterator<Item = &K>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the keys of the map, in their order","sig":null,"attributes":[{"value":"/ Return an iterator over the keys of the map, in their order","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":15691,"byte_end":15754,"line_start":368,"line_end":368,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":15759,"byte_end":15762,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":15767,"byte_end":15774,"line_start":370,"line_end":370,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":15779,"byte_end":15809,"line_start":371,"line_end":371,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":15814,"byte_end":15842,"line_start":372,"line_end":372,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":15847,"byte_end":15850,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ let mut map = FnvIndexMap::<_, _, U16>::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":15855,"byte_end":15905,"line_start":374,"line_end":374,"column_start":5,"column_end":55}},{"value":"/ map.insert(\"a\", 1).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":15910,"byte_end":15942,"line_start":375,"line_end":375,"column_start":5,"column_end":37}},{"value":"/ map.insert(\"b\", 2).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":15947,"byte_end":15979,"line_start":376,"line_end":376,"column_start":5,"column_end":37}},{"value":"/ map.insert(\"c\", 3).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":15984,"byte_end":16016,"line_start":377,"line_end":377,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":16021,"byte_end":16024,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ for key in map.keys() {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":16029,"byte_end":16056,"line_start":379,"line_end":379,"column_start":5,"column_end":32}},{"value":"/     println!(\"{}\", key);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":16061,"byte_end":16089,"line_start":380,"line_end":380,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":16094,"byte_end":16099,"line_start":381,"line_end":381,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":16104,"byte_end":16111,"line_start":382,"line_end":382,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":16671,"byte_end":16677,"line_start":402,"line_end":402,"column_start":12,"column_end":18},"name":"values","qualname":"<IndexMap<K, V, N, S>>::values","value":"fn (&self) -> impl Iterator<Item = &V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the values of the map, in their order","sig":null,"attributes":[{"value":"/ Return an iterator over the values of the map, in their order","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":16235,"byte_end":16300,"line_start":387,"line_end":387,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":16305,"byte_end":16308,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":16313,"byte_end":16320,"line_start":389,"line_end":389,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":16325,"byte_end":16355,"line_start":390,"line_end":390,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":16360,"byte_end":16388,"line_start":391,"line_end":391,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":16393,"byte_end":16396,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ let mut map = FnvIndexMap::<_, _, U16>::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":16401,"byte_end":16451,"line_start":393,"line_end":393,"column_start":5,"column_end":55}},{"value":"/ map.insert(\"a\", 1).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":16456,"byte_end":16488,"line_start":394,"line_end":394,"column_start":5,"column_end":37}},{"value":"/ map.insert(\"b\", 2).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":16493,"byte_end":16525,"line_start":395,"line_end":395,"column_start":5,"column_end":37}},{"value":"/ map.insert(\"c\", 3).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":16530,"byte_end":16562,"line_start":396,"line_end":396,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":16567,"byte_end":16570,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ for val in map.values() {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":16575,"byte_end":16604,"line_start":398,"line_end":398,"column_start":5,"column_end":34}},{"value":"/     println!(\"{}\", val);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":16609,"byte_end":16637,"line_start":399,"line_end":399,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":16642,"byte_end":16647,"line_start":400,"line_end":400,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":16652,"byte_end":16659,"line_start":401,"line_end":401,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":17329,"byte_end":17339,"line_start":425,"line_end":425,"column_start":12,"column_end":22},"name":"values_mut","qualname":"<IndexMap<K, V, N, S>>::values_mut","value":"fn (&mut self) -> impl Iterator<Item = &mut V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over mutable references to the the values of the map, in their order","sig":null,"attributes":[{"value":"/ Return an iterator over mutable references to the the values of the map, in their order","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":16787,"byte_end":16878,"line_start":406,"line_end":406,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":16883,"byte_end":16886,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":16891,"byte_end":16898,"line_start":408,"line_end":408,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":16903,"byte_end":16933,"line_start":409,"line_end":409,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":16938,"byte_end":16966,"line_start":410,"line_end":410,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":16971,"byte_end":16974,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ let mut map = FnvIndexMap::<_, _, U16>::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":16979,"byte_end":17029,"line_start":412,"line_end":412,"column_start":5,"column_end":55}},{"value":"/ map.insert(\"a\", 1).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":17034,"byte_end":17066,"line_start":413,"line_end":413,"column_start":5,"column_end":37}},{"value":"/ map.insert(\"b\", 2).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":17071,"byte_end":17103,"line_start":414,"line_end":414,"column_start":5,"column_end":37}},{"value":"/ map.insert(\"c\", 3).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":17108,"byte_end":17140,"line_start":415,"line_end":415,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":17145,"byte_end":17148,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ for val in map.values_mut() {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":17153,"byte_end":17186,"line_start":417,"line_end":417,"column_start":5,"column_end":38}},{"value":"/     *val += 10;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":17191,"byte_end":17210,"line_start":418,"line_end":418,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":17215,"byte_end":17220,"line_start":419,"line_end":419,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":17225,"byte_end":17228,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ for val in map.values() {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":17233,"byte_end":17262,"line_start":421,"line_end":421,"column_start":5,"column_end":34}},{"value":"/     println!(\"{}\", val);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":17267,"byte_end":17295,"line_start":422,"line_end":422,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":17300,"byte_end":17305,"line_start":423,"line_end":423,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":17310,"byte_end":17317,"line_start":424,"line_end":424,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":17933,"byte_end":17937,"line_start":444,"line_end":444,"column_start":12,"column_end":16},"name":"iter","qualname":"<IndexMap<K, V, N, S>>::iter","value":"fn (&self) -> Iter<'_, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the key-value pairs of the map, in their order","sig":null,"attributes":[{"value":"/ Return an iterator over the key-value pairs of the map, in their order","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":17465,"byte_end":17539,"line_start":429,"line_end":429,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":17544,"byte_end":17547,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":17552,"byte_end":17559,"line_start":431,"line_end":431,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":17564,"byte_end":17594,"line_start":432,"line_end":432,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":17599,"byte_end":17627,"line_start":433,"line_end":433,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":17632,"byte_end":17635,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ let mut map = FnvIndexMap::<_, _, U16>::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":17640,"byte_end":17690,"line_start":435,"line_end":435,"column_start":5,"column_end":55}},{"value":"/ map.insert(\"a\", 1).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":17695,"byte_end":17727,"line_start":436,"line_end":436,"column_start":5,"column_end":37}},{"value":"/ map.insert(\"b\", 2).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":17732,"byte_end":17764,"line_start":437,"line_end":437,"column_start":5,"column_end":37}},{"value":"/ map.insert(\"c\", 3).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":17769,"byte_end":17801,"line_start":438,"line_end":438,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":17806,"byte_end":17809,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ for (key, val) in map.iter() {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":17814,"byte_end":17848,"line_start":440,"line_end":440,"column_start":5,"column_end":39}},{"value":"/     println!(\"key: {} val: {}\", key, val);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":17853,"byte_end":17899,"line_start":441,"line_end":441,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":17904,"byte_end":17909,"line_start":442,"line_end":442,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":17914,"byte_end":17921,"line_start":443,"line_end":443,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":18588,"byte_end":18596,"line_start":469,"line_end":469,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<IndexMap<K, V, N, S>>::iter_mut","value":"fn (&mut self) -> IterMut<'_, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the key-value pairs of the map, in their order","sig":null,"attributes":[{"value":"/ Return an iterator over the key-value pairs of the map, in their order","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":18045,"byte_end":18119,"line_start":450,"line_end":450,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":18124,"byte_end":18127,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":18132,"byte_end":18139,"line_start":452,"line_end":452,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":18144,"byte_end":18174,"line_start":453,"line_end":453,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":18179,"byte_end":18207,"line_start":454,"line_end":454,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":18212,"byte_end":18215,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ let mut map = FnvIndexMap::<_, _, U16>::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":18220,"byte_end":18270,"line_start":456,"line_end":456,"column_start":5,"column_end":55}},{"value":"/ map.insert(\"a\", 1).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":18275,"byte_end":18307,"line_start":457,"line_end":457,"column_start":5,"column_end":37}},{"value":"/ map.insert(\"b\", 2).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":18312,"byte_end":18344,"line_start":458,"line_end":458,"column_start":5,"column_end":37}},{"value":"/ map.insert(\"c\", 3).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":18349,"byte_end":18381,"line_start":459,"line_end":459,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":18386,"byte_end":18389,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ for (_, val) in map.iter_mut() {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":18394,"byte_end":18430,"line_start":461,"line_end":461,"column_start":5,"column_end":41}},{"value":"/     *val = 2;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":18435,"byte_end":18452,"line_start":462,"line_end":462,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":18457,"byte_end":18462,"line_start":463,"line_end":463,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":18467,"byte_end":18470,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ for (key, val) in &map {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":18475,"byte_end":18503,"line_start":465,"line_end":465,"column_start":5,"column_end":33}},{"value":"/     println!(\"key: {} val: {}\", key, val);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":18508,"byte_end":18554,"line_start":466,"line_end":466,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":18559,"byte_end":18564,"line_start":467,"line_end":467,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":18569,"byte_end":18576,"line_start":468,"line_end":468,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":19159,"byte_end":19162,"line_start":491,"line_end":491,"column_start":12,"column_end":15},"name":"len","qualname":"<IndexMap<K, V, N, S>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of key-value pairs in the map.","sig":null,"attributes":[{"value":"/ Return the number of key-value pairs in the map.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":18792,"byte_end":18844,"line_start":478,"line_end":478,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":18849,"byte_end":18852,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":18857,"byte_end":18887,"line_start":480,"line_end":480,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":18892,"byte_end":18895,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":18900,"byte_end":18907,"line_start":482,"line_end":482,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":18912,"byte_end":18942,"line_start":483,"line_end":483,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":18947,"byte_end":18975,"line_start":484,"line_end":484,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":18980,"byte_end":18983,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ let mut a = FnvIndexMap::<_, _, U16>::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":18988,"byte_end":19036,"line_start":486,"line_end":486,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(a.len(), 0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":19041,"byte_end":19068,"line_start":487,"line_end":487,"column_start":5,"column_end":32}},{"value":"/ a.insert(1, \"a\").unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":19073,"byte_end":19103,"line_start":488,"line_end":488,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.len(), 1);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":19108,"byte_end":19135,"line_start":489,"line_end":489,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":19140,"byte_end":19147,"line_start":490,"line_end":490,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":19578,"byte_end":19586,"line_start":508,"line_end":508,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<IndexMap<K, V, N, S>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the map contains no elements.","sig":null,"attributes":[{"value":"/ Returns true if the map contains no elements.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":19224,"byte_end":19273,"line_start":495,"line_end":495,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":19278,"byte_end":19281,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":19286,"byte_end":19316,"line_start":497,"line_end":497,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":19321,"byte_end":19324,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":19329,"byte_end":19336,"line_start":499,"line_end":499,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":19341,"byte_end":19371,"line_start":500,"line_end":500,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":19376,"byte_end":19404,"line_start":501,"line_end":501,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":19409,"byte_end":19412,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ let mut a = FnvIndexMap::<_, _, U16>::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":19417,"byte_end":19465,"line_start":503,"line_end":503,"column_start":5,"column_end":53}},{"value":"/ assert!(a.is_empty());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":19470,"byte_end":19496,"line_start":504,"line_end":504,"column_start":5,"column_end":31}},{"value":"/ a.insert(1, \"a\");","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":19501,"byte_end":19522,"line_start":505,"line_end":505,"column_start":5,"column_end":26}},{"value":"/ assert!(!a.is_empty());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":19527,"byte_end":19554,"line_start":506,"line_end":506,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":19559,"byte_end":19566,"line_start":507,"line_end":507,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":20004,"byte_end":20009,"line_start":525,"line_end":525,"column_start":12,"column_end":17},"name":"clear","qualname":"<IndexMap<K, V, N, S>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Remove all key-value pairs in the map, while preserving its capacity.","sig":null,"attributes":[{"value":"/ Remove all key-value pairs in the map, while preserving its capacity.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":19639,"byte_end":19712,"line_start":512,"line_end":512,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":19717,"byte_end":19720,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":19725,"byte_end":19755,"line_start":514,"line_end":514,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":19760,"byte_end":19763,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":19768,"byte_end":19775,"line_start":516,"line_end":516,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":19780,"byte_end":19810,"line_start":517,"line_end":517,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":19815,"byte_end":19843,"line_start":518,"line_end":518,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":19848,"byte_end":19851,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ let mut a = FnvIndexMap::<_, _, U16>::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":19856,"byte_end":19904,"line_start":520,"line_end":520,"column_start":5,"column_end":53}},{"value":"/ a.insert(1, \"a\");","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":19909,"byte_end":19930,"line_start":521,"line_end":521,"column_start":5,"column_end":26}},{"value":"/ a.clear();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":19935,"byte_end":19949,"line_start":522,"line_end":522,"column_start":5,"column_end":19}},{"value":"/ assert!(a.is_empty());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":19954,"byte_end":19980,"line_start":523,"line_end":523,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":19985,"byte_end":19992,"line_start":524,"line_end":524,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":20723,"byte_end":20726,"line_start":548,"line_end":548,"column_start":12,"column_end":15},"name":"get","qualname":"<IndexMap<K, V, N, S>>::get","value":"fn <Q> (&self, key: &Q) -> Option<&V>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the value corresponding to the key.","sig":null,"attributes":[{"value":"/ Returns a reference to the value corresponding to the key.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":20154,"byte_end":20216,"line_start":532,"line_end":532,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":20221,"byte_end":20224,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but `Hash` and `Eq` on the borrowed","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":20229,"byte_end":20324,"line_start":534,"line_end":534,"column_start":5,"column_end":100}},{"value":"/ form *must* match those for the key type.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":20329,"byte_end":20374,"line_start":535,"line_end":535,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":20379,"byte_end":20382,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":20387,"byte_end":20427,"line_start":537,"line_end":537,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":20432,"byte_end":20435,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":20440,"byte_end":20447,"line_start":539,"line_end":539,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":20452,"byte_end":20482,"line_start":540,"line_end":540,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":20487,"byte_end":20515,"line_start":541,"line_end":541,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":20520,"byte_end":20523,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ let mut map = FnvIndexMap::<_, _, U16>::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":20528,"byte_end":20578,"line_start":543,"line_end":543,"column_start":5,"column_end":55}},{"value":"/ map.insert(1, \"a\").unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":20583,"byte_end":20615,"line_start":544,"line_end":544,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(map.get(&1), Some(&\"a\"));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":20620,"byte_end":20660,"line_start":545,"line_end":545,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(map.get(&2), None);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":20665,"byte_end":20699,"line_start":546,"line_end":546,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":20704,"byte_end":20711,"line_start":547,"line_end":547,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":21564,"byte_end":21576,"line_start":575,"line_end":575,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<IndexMap<K, V, N, S>>::contains_key","value":"fn <Q> (&self, key: &Q) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the map contains a value for the specified key.","sig":null,"attributes":[{"value":"/ Returns true if the map contains a value for the specified key.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":20951,"byte_end":21018,"line_start":557,"line_end":557,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":21023,"byte_end":21026,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but `Hash` and `Eq` on the borrowed","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":21031,"byte_end":21126,"line_start":559,"line_end":559,"column_start":5,"column_end":100}},{"value":"/ form *must* match those for the key type.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":21131,"byte_end":21176,"line_start":560,"line_end":560,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":21181,"byte_end":21184,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":21189,"byte_end":21229,"line_start":562,"line_end":562,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":21234,"byte_end":21237,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":21242,"byte_end":21256,"line_start":564,"line_end":564,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":21261,"byte_end":21264,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":21269,"byte_end":21276,"line_start":566,"line_end":566,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":21281,"byte_end":21311,"line_start":567,"line_end":567,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":21316,"byte_end":21344,"line_start":568,"line_end":568,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":21349,"byte_end":21352,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ let mut map = FnvIndexMap::<_, _, U8>::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":21357,"byte_end":21406,"line_start":570,"line_end":570,"column_start":5,"column_end":54}},{"value":"/ map.insert(1, \"a\").unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":21411,"byte_end":21443,"line_start":571,"line_end":571,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(map.contains_key(&1), true);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":21448,"byte_end":21491,"line_start":572,"line_end":572,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(map.contains_key(&2), false);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":21496,"byte_end":21540,"line_start":573,"line_end":573,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":21545,"byte_end":21552,"line_start":574,"line_end":574,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":22345,"byte_end":22352,"line_start":603,"line_end":603,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<IndexMap<K, V, N, S>>::get_mut","value":"fn <'v, Q> (&'v mut self, key: &Q) -> Option<&'v mut V>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the value corresponding to the key.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the value corresponding to the key.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":21717,"byte_end":21787,"line_start":583,"line_end":583,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":21792,"byte_end":21795,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but `Hash` and `Eq` on the borrowed","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":21800,"byte_end":21895,"line_start":585,"line_end":585,"column_start":5,"column_end":100}},{"value":"/ form *must* match those for the key type.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":21900,"byte_end":21945,"line_start":586,"line_end":586,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":21950,"byte_end":21953,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":21958,"byte_end":21998,"line_start":588,"line_end":588,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":22003,"byte_end":22006,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":22011,"byte_end":22025,"line_start":590,"line_end":590,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":22030,"byte_end":22033,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":22038,"byte_end":22045,"line_start":592,"line_end":592,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":22050,"byte_end":22080,"line_start":593,"line_end":593,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":22085,"byte_end":22113,"line_start":594,"line_end":594,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":22118,"byte_end":22121,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ let mut map = FnvIndexMap::<_, _, U8>::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":22126,"byte_end":22175,"line_start":596,"line_end":596,"column_start":5,"column_end":54}},{"value":"/ map.insert(1, \"a\").unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":22180,"byte_end":22212,"line_start":597,"line_end":597,"column_start":5,"column_end":37}},{"value":"/ if let Some(x) = map.get_mut(&1) {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":22217,"byte_end":22255,"line_start":598,"line_end":598,"column_start":5,"column_end":43}},{"value":"/     *x = \"b\";","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":22260,"byte_end":22277,"line_start":599,"line_end":599,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":22282,"byte_end":22287,"line_start":600,"line_end":600,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(map[&1], \"b\");","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":22292,"byte_end":22321,"line_start":601,"line_end":601,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":22326,"byte_end":22333,"line_start":602,"line_end":602,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":23697,"byte_end":23703,"line_start":643,"line_end":643,"column_start":12,"column_end":18},"name":"insert","qualname":"<IndexMap<K, V, N, S>>::insert","value":"fn (&mut self, key: K, value: V) -> Result<Option<V>, (K, V)>","parent":null,"children":[],"decl_id":null,"docs":" Inserts a key-value pair into the map.","sig":null,"attributes":[{"value":"/ Inserts a key-value pair into the map.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":22662,"byte_end":22704,"line_start":615,"line_end":615,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":22709,"byte_end":22712,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ If an equivalent key already exists in the map: the key remains and retains in its place in","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":22717,"byte_end":22812,"line_start":617,"line_end":617,"column_start":5,"column_end":100}},{"value":"/ the order, its corresponding value is updated with `value` and the older value is returned","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":22817,"byte_end":22911,"line_start":618,"line_end":618,"column_start":5,"column_end":99}},{"value":"/ inside `Some(_)`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":22916,"byte_end":22937,"line_start":619,"line_end":619,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":22942,"byte_end":22945,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ If no equivalent key existed in the map: the new key-value pair is inserted, last in order,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":22950,"byte_end":23045,"line_start":621,"line_end":621,"column_start":5,"column_end":100}},{"value":"/ and `None` is returned.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":23050,"byte_end":23077,"line_start":622,"line_end":622,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":23082,"byte_end":23085,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":23090,"byte_end":23130,"line_start":624,"line_end":624,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":23135,"byte_end":23138,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ See also entry if you you want to insert or modify or if you need to get the index of the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":23143,"byte_end":23236,"line_start":626,"line_end":626,"column_start":5,"column_end":98}},{"value":"/ corresponding key-value pair.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":23241,"byte_end":23274,"line_start":627,"line_end":627,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":23279,"byte_end":23282,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":23287,"byte_end":23301,"line_start":629,"line_end":629,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":23306,"byte_end":23309,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":23314,"byte_end":23321,"line_start":631,"line_end":631,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":23326,"byte_end":23356,"line_start":632,"line_end":632,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":23361,"byte_end":23389,"line_start":633,"line_end":633,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":23394,"byte_end":23397,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ let mut map = FnvIndexMap::<_, _, U8>::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":23402,"byte_end":23451,"line_start":635,"line_end":635,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(map.insert(37, \"a\"), Ok(None));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":23456,"byte_end":23502,"line_start":636,"line_end":636,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(map.is_empty(), false);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":23507,"byte_end":23545,"line_start":637,"line_end":637,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":23550,"byte_end":23553,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ map.insert(37, \"b\");","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":23558,"byte_end":23582,"line_start":639,"line_end":639,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(map.insert(37, \"c\"), Ok(Some(\"b\")));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":23587,"byte_end":23638,"line_start":640,"line_end":640,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(map[&37], \"c\");","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":23643,"byte_end":23673,"line_start":641,"line_end":641,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":23678,"byte_end":23685,"line_start":642,"line_end":642,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":24666,"byte_end":24672,"line_start":673,"line_end":673,"column_start":12,"column_end":18},"name":"remove","qualname":"<IndexMap<K, V, N, S>>::remove","value":"fn <Q> (&mut self, key: &Q) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`swap_remove`](struct.IndexMap.html#method.swap_remove)","sig":null,"attributes":[{"value":"/ Same as [`swap_remove`](struct.IndexMap.html#method.swap_remove)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":24218,"byte_end":24286,"line_start":658,"line_end":658,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":24291,"byte_end":24294,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":24299,"byte_end":24339,"line_start":660,"line_end":660,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":24344,"byte_end":24347,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":24352,"byte_end":24366,"line_start":662,"line_end":662,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":24371,"byte_end":24374,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":24379,"byte_end":24386,"line_start":664,"line_end":664,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":24391,"byte_end":24421,"line_start":665,"line_end":665,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":24426,"byte_end":24454,"line_start":666,"line_end":666,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":24459,"byte_end":24462,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ let mut map = FnvIndexMap::<_, _, U8>::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":24467,"byte_end":24516,"line_start":668,"line_end":668,"column_start":5,"column_end":54}},{"value":"/ map.insert(1, \"a\").unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":24521,"byte_end":24553,"line_start":669,"line_end":669,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(map.remove(&1), Some(\"a\"));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":24558,"byte_end":24600,"line_start":670,"line_end":670,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(map.remove(&1), None);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":24605,"byte_end":24642,"line_start":671,"line_end":671,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":24647,"byte_end":24654,"line_start":672,"line_end":672,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":25213,"byte_end":25224,"line_start":689,"line_end":689,"column_start":12,"column_end":23},"name":"swap_remove","qualname":"<IndexMap<K, V, N, S>>::swap_remove","value":"fn <Q> (&mut self, key: &Q) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair equivalent to `key` and return its value.","sig":null,"attributes":[{"value":"/ Remove the key-value pair equivalent to `key` and return its value.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":24819,"byte_end":24890,"line_start":681,"line_end":681,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":24895,"byte_end":24898,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the pair is removed by swapping it with the last element of the map","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":24903,"byte_end":24999,"line_start":683,"line_end":683,"column_start":5,"column_end":101}},{"value":"/ and popping it off. **This perturbs the postion of what used to be the last element!**","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":25004,"byte_end":25094,"line_start":684,"line_end":684,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":25099,"byte_end":25102,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `key` is not in map.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":25107,"byte_end":25148,"line_start":686,"line_end":686,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":25153,"byte_end":25156,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":25161,"byte_end":25201,"line_start":688,"line_end":688,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":225},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":30019,"byte_end":30023,"line_start":886,"line_end":886,"column_start":12,"column_end":16},"name":"Iter","qualname":"::indexmap::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":229}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":242},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":30436,"byte_end":30443,"line_start":906,"line_end":906,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::indexmap::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":246}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":276},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":32604,"byte_end":32615,"line_start":9,"line_end":9,"column_start":10,"column_end":21},"name":"FnvIndexSet","qualname":"::indexset::FnvIndexSet","value":"IndexSet<T, N, BuildHasherDefault<FnvHasher>>","parent":null,"children":[],"decl_id":null,"docs":" An `IndexSet` using the default FNV hasher\n","sig":null,"attributes":[{"value":"/ An `IndexSet` using the default FNV hasher","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":32548,"byte_end":32594,"line_start":8,"line_end":8,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":279},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":33643,"byte_end":33651,"line_start":44,"line_end":44,"column_start":12,"column_end":20},"name":"IndexSet","qualname":"::indexset::IndexSet","value":"IndexSet {  }","parent":null,"children":[{"krate":0,"index":283}],"decl_id":null,"docs":" Fixed capacity [`IndexSet`](https://docs.rs/indexmap/1/indexmap/set/struct.IndexSet.html)","sig":null,"attributes":[{"value":"/ Fixed capacity [`IndexSet`](https://docs.rs/indexmap/1/indexmap/set/struct.IndexSet.html)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":32672,"byte_end":32765,"line_start":11,"line_end":11,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":32766,"byte_end":32769,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Note that the capacity of the `IndexSet` must be a power of 2.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":32770,"byte_end":32836,"line_start":13,"line_end":13,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":32837,"byte_end":32840,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":32841,"byte_end":32855,"line_start":15,"line_end":15,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":32856,"byte_end":32859,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":32860,"byte_end":32867,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use heapless::FnvIndexSet;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":32868,"byte_end":32898,"line_start":18,"line_end":18,"column_start":1,"column_end":31}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":32899,"byte_end":32927,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":32928,"byte_end":32931,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ // A hash set with a capacity of 16 elements allocated on the stack","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":32932,"byte_end":33003,"line_start":21,"line_end":21,"column_start":1,"column_end":72}},{"value":"/ let mut books = FnvIndexSet::<_, U16>::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":33004,"byte_end":33053,"line_start":22,"line_end":22,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":33054,"byte_end":33057,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ // Add some books.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":33058,"byte_end":33080,"line_start":24,"line_end":24,"column_start":1,"column_end":23}},{"value":"/ books.insert(\"A Dance With Dragons\").unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":33081,"byte_end":33131,"line_start":25,"line_end":25,"column_start":1,"column_end":51}},{"value":"/ books.insert(\"To Kill a Mockingbird\").unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":33132,"byte_end":33183,"line_start":26,"line_end":26,"column_start":1,"column_end":52}},{"value":"/ books.insert(\"The Odyssey\").unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":33184,"byte_end":33225,"line_start":27,"line_end":27,"column_start":1,"column_end":42}},{"value":"/ books.insert(\"The Great Gatsby\").unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":33226,"byte_end":33272,"line_start":28,"line_end":28,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":33273,"byte_end":33276,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ // Check for a specific one.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":33277,"byte_end":33309,"line_start":30,"line_end":30,"column_start":1,"column_end":33}},{"value":"/ if !books.contains(\"The Winds of Winter\") {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":33310,"byte_end":33357,"line_start":31,"line_end":31,"column_start":1,"column_end":48}},{"value":"/     println!(\"We have {} books, but The Winds of Winter ain't one.\",","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":33358,"byte_end":33430,"line_start":32,"line_end":32,"column_start":1,"column_end":73}},{"value":"/              books.len());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":33431,"byte_end":33461,"line_start":33,"line_end":33,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":33462,"byte_end":33467,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":33468,"byte_end":33471,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ // Remove a book.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":33472,"byte_end":33493,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"/ books.remove(\"The Odyssey\");","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":33494,"byte_end":33526,"line_start":37,"line_end":37,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":33527,"byte_end":33530,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ // Iterate over everything.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":33531,"byte_end":33562,"line_start":39,"line_end":39,"column_start":1,"column_end":32}},{"value":"/ for book in &books {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":33563,"byte_end":33587,"line_start":40,"line_end":40,"column_start":1,"column_end":25}},{"value":"/     println!(\"{}\", book);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":33588,"byte_end":33617,"line_start":41,"line_end":41,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":33618,"byte_end":33623,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":33624,"byte_end":33631,"line_start":43,"line_end":43,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":34009,"byte_end":34012,"line_start":59,"line_end":59,"column_start":12,"column_end":15},"name":"new","qualname":"<IndexSet<T, N, BuildHasherDefault<S>>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `IndexSet`\n","sig":null,"attributes":[{"value":"/ Creates an empty `IndexSet`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":33966,"byte_end":33997,"line_start":58,"line_end":58,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":34529,"byte_end":34537,"line_start":83,"line_end":83,"column_start":12,"column_end":20},"name":"capacity","qualname":"<IndexSet<T, N, S>>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements the set can hold","sig":null,"attributes":[{"value":"/ Returns the number of elements the set can hold","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":34241,"byte_end":34292,"line_start":72,"line_end":72,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":34297,"byte_end":34300,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":34305,"byte_end":34319,"line_start":74,"line_end":74,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":34324,"byte_end":34327,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":34332,"byte_end":34339,"line_start":76,"line_end":76,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexSet;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":34344,"byte_end":34374,"line_start":77,"line_end":77,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":34379,"byte_end":34407,"line_start":78,"line_end":78,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":34412,"byte_end":34415,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ let set = FnvIndexSet::<i32, U16>::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":34420,"byte_end":34465,"line_start":80,"line_end":80,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(set.capacity(), 16);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":34470,"byte_end":34505,"line_start":81,"line_end":81,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":34510,"byte_end":34517,"line_start":82,"line_end":82,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":35051,"byte_end":35055,"line_start":104,"line_end":104,"column_start":12,"column_end":16},"name":"iter","qualname":"<IndexSet<T, N, S>>::iter","value":"fn (&self) -> Iter<'_, T>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the values of the set, in their order","sig":null,"attributes":[{"value":"/ Return an iterator over the values of the set, in their order","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":34595,"byte_end":34660,"line_start":87,"line_end":87,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":34665,"byte_end":34668,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":34673,"byte_end":34687,"line_start":89,"line_end":89,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":34692,"byte_end":34695,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":34700,"byte_end":34707,"line_start":91,"line_end":91,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexSet;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":34712,"byte_end":34742,"line_start":92,"line_end":92,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":34747,"byte_end":34775,"line_start":93,"line_end":93,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":34780,"byte_end":34783,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ let mut set = FnvIndexSet::<_, U16>::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":34788,"byte_end":34835,"line_start":95,"line_end":95,"column_start":5,"column_end":52}},{"value":"/ set.insert(\"a\").unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":34840,"byte_end":34869,"line_start":96,"line_end":96,"column_start":5,"column_end":34}},{"value":"/ set.insert(\"b\").unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":34874,"byte_end":34903,"line_start":97,"line_end":97,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":34908,"byte_end":34911,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ // Will print in an arbitrary order.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":34916,"byte_end":34956,"line_start":99,"line_end":99,"column_start":5,"column_end":45}},{"value":"/ for x in set.iter() {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":34961,"byte_end":34986,"line_start":100,"line_end":100,"column_start":5,"column_end":30}},{"value":"/     println!(\"{}\", x);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":34991,"byte_end":35017,"line_start":101,"line_end":101,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":35022,"byte_end":35027,"line_start":102,"line_end":102,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":35032,"byte_end":35039,"line_start":103,"line_end":103,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":36090,"byte_end":36100,"line_start":135,"line_end":135,"column_start":12,"column_end":22},"name":"difference","qualname":"<IndexSet<T, N, S>>::difference","value":"fn <'a, N2, S2> (&'a self, other: &'a IndexSet<T, N2, S2>) -> Difference<'a, T, N2, S2>","parent":null,"children":[],"decl_id":null,"docs":" Visits the values representing the difference, i.e. the values that are in `self` but not in\n `other`.","sig":null,"attributes":[{"value":"/ Visits the values representing the difference, i.e. the values that are in `self` but not in","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":35151,"byte_end":35247,"line_start":110,"line_end":110,"column_start":5,"column_end":101}},{"value":"/ `other`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":35252,"byte_end":35264,"line_start":111,"line_end":111,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":35269,"byte_end":35272,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":35277,"byte_end":35291,"line_start":113,"line_end":113,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":35296,"byte_end":35299,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":35304,"byte_end":35311,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexSet;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":35316,"byte_end":35346,"line_start":116,"line_end":116,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":35351,"byte_end":35379,"line_start":117,"line_end":117,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":35384,"byte_end":35387,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ let mut a: FnvIndexSet<_, U16> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":35392,"byte_end":35465,"line_start":119,"line_end":119,"column_start":5,"column_end":78}},{"value":"/ let mut b: FnvIndexSet<_, U16> = [4, 2, 3, 4].iter().cloned().collect();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":35470,"byte_end":35546,"line_start":120,"line_end":120,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":35551,"byte_end":35554,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ // Can be seen as `a - b`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":35559,"byte_end":35589,"line_start":122,"line_end":122,"column_start":5,"column_end":35}},{"value":"/ for x in a.difference(&b) {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":35594,"byte_end":35625,"line_start":123,"line_end":123,"column_start":5,"column_end":36}},{"value":"/     println!(\"{}\", x); // Print 1","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":35630,"byte_end":35667,"line_start":124,"line_end":124,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":35672,"byte_end":35677,"line_start":125,"line_end":125,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":35682,"byte_end":35685,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ let diff: FnvIndexSet<_, U16> = a.difference(&b).collect();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":35690,"byte_end":35753,"line_start":127,"line_end":127,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(diff, [1].iter().collect::<FnvIndexSet<_, U16>>());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":35758,"byte_end":35824,"line_start":128,"line_end":128,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":35829,"byte_end":35832,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ // Note that difference is not symmetric,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":35837,"byte_end":35882,"line_start":130,"line_end":130,"column_start":5,"column_end":50}},{"value":"/ // and `b - a` means something else:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":35887,"byte_end":35927,"line_start":131,"line_end":131,"column_start":5,"column_end":45}},{"value":"/ let diff: FnvIndexSet<_, U16> = b.difference(&a).collect();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":35932,"byte_end":35995,"line_start":132,"line_end":132,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(diff, [4].iter().collect::<FnvIndexSet<_, U16>>());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":36000,"byte_end":36066,"line_start":133,"line_end":133,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":36071,"byte_end":36078,"line_start":134,"line_end":134,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":37268,"byte_end":37288,"line_start":172,"line_end":172,"column_start":12,"column_end":32},"name":"symmetric_difference","qualname":"<IndexSet<T, N, S>>::symmetric_difference","value":"fn <'a, N2, S2> (&'a self, other: &'a IndexSet<T, N2, S2>) -> impl Iterator<Item = &'a T>","parent":null,"children":[],"decl_id":null,"docs":" Visits the values representing the symmetric difference, i.e. the values that are in `self`\n or in `other` but not in both.","sig":null,"attributes":[{"value":"/ Visits the values representing the symmetric difference, i.e. the values that are in `self`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":36407,"byte_end":36502,"line_start":149,"line_end":149,"column_start":5,"column_end":100}},{"value":"/ or in `other` but not in both.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":36507,"byte_end":36541,"line_start":150,"line_end":150,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":36546,"byte_end":36549,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":36554,"byte_end":36568,"line_start":152,"line_end":152,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":36573,"byte_end":36576,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":36581,"byte_end":36588,"line_start":154,"line_end":154,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexSet;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":36593,"byte_end":36623,"line_start":155,"line_end":155,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":36628,"byte_end":36656,"line_start":156,"line_end":156,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":36661,"byte_end":36664,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ let mut a: FnvIndexSet<_, U16> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":36669,"byte_end":36742,"line_start":158,"line_end":158,"column_start":5,"column_end":78}},{"value":"/ let mut b: FnvIndexSet<_, U16> = [4, 2, 3, 4].iter().cloned().collect();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":36747,"byte_end":36823,"line_start":159,"line_end":159,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":36828,"byte_end":36831,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ // Print 1, 4 in that order order.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":36836,"byte_end":36874,"line_start":161,"line_end":161,"column_start":5,"column_end":43}},{"value":"/ for x in a.symmetric_difference(&b) {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":36879,"byte_end":36920,"line_start":162,"line_end":162,"column_start":5,"column_end":46}},{"value":"/     println!(\"{}\", x);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":36925,"byte_end":36951,"line_start":163,"line_end":163,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":36956,"byte_end":36961,"line_start":164,"line_end":164,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":36966,"byte_end":36969,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ let diff1: FnvIndexSet<_, U16> = a.symmetric_difference(&b).collect();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":36974,"byte_end":37048,"line_start":166,"line_end":166,"column_start":5,"column_end":79}},{"value":"/ let diff2: FnvIndexSet<_, U16> = b.symmetric_difference(&a).collect();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":37053,"byte_end":37127,"line_start":167,"line_end":167,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":37132,"byte_end":37135,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(diff1, diff2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":37140,"byte_end":37169,"line_start":169,"line_end":169,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(diff1, [1, 4].iter().collect::<FnvIndexSet<_, U16>>());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":37174,"byte_end":37244,"line_start":170,"line_end":170,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":37249,"byte_end":37256,"line_start":171,"line_end":171,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":38288,"byte_end":38300,"line_start":203,"line_end":203,"column_start":12,"column_end":24},"name":"intersection","qualname":"<IndexSet<T, N, S>>::intersection","value":"fn <'a, N2, S2> (&'a self, other: &'a IndexSet<T, N2, S2>) -> Intersection<'a, T, N2, S2>","parent":null,"children":[],"decl_id":null,"docs":" Visits the values representing the intersection, i.e. the values that are both in `self` and\n `other`.","sig":null,"attributes":[{"value":"/ Visits the values representing the intersection, i.e. the values that are both in `self` and","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":37577,"byte_end":37673,"line_start":183,"line_end":183,"column_start":5,"column_end":101}},{"value":"/ `other`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":37678,"byte_end":37690,"line_start":184,"line_end":184,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":37695,"byte_end":37698,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":37703,"byte_end":37717,"line_start":186,"line_end":186,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":37722,"byte_end":37725,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":37730,"byte_end":37737,"line_start":188,"line_end":188,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexSet;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":37742,"byte_end":37772,"line_start":189,"line_end":189,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":37777,"byte_end":37805,"line_start":190,"line_end":190,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":37810,"byte_end":37813,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ let mut a: FnvIndexSet<_, U16> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":37818,"byte_end":37891,"line_start":192,"line_end":192,"column_start":5,"column_end":78}},{"value":"/ let mut b: FnvIndexSet<_, U16> = [4, 2, 3, 4].iter().cloned().collect();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":37896,"byte_end":37972,"line_start":193,"line_end":193,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":37977,"byte_end":37980,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ // Print 2, 3 in that order.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":37985,"byte_end":38017,"line_start":195,"line_end":195,"column_start":5,"column_end":37}},{"value":"/ for x in a.intersection(&b) {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":38022,"byte_end":38055,"line_start":196,"line_end":196,"column_start":5,"column_end":38}},{"value":"/     println!(\"{}\", x);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":38060,"byte_end":38086,"line_start":197,"line_end":197,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":38091,"byte_end":38096,"line_start":198,"line_end":198,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":38101,"byte_end":38104,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ let intersection: FnvIndexSet<_, U16> = a.intersection(&b).collect();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":38109,"byte_end":38182,"line_start":200,"line_end":200,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(intersection, [2, 3].iter().collect::<FnvIndexSet<_, U16>>());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":38187,"byte_end":38264,"line_start":201,"line_end":201,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":38269,"byte_end":38276,"line_start":202,"line_end":202,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":39308,"byte_end":39313,"line_start":237,"line_end":237,"column_start":12,"column_end":17},"name":"union","qualname":"<IndexSet<T, N, S>>::union","value":"fn <'a, N2, S2> (&'a self, other: &'a IndexSet<T, N2, S2>) -> impl Iterator<Item = &'a T>","parent":null,"children":[],"decl_id":null,"docs":" Visits the values representing the union, i.e. all the values in `self` or `other`, without\n duplicates.","sig":null,"attributes":[{"value":"/ Visits the values representing the union, i.e. all the values in `self` or `other`, without","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":38611,"byte_end":38706,"line_start":217,"line_end":217,"column_start":5,"column_end":100}},{"value":"/ duplicates.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":38711,"byte_end":38726,"line_start":218,"line_end":218,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":38731,"byte_end":38734,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":38739,"byte_end":38753,"line_start":220,"line_end":220,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":38758,"byte_end":38761,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":38766,"byte_end":38773,"line_start":222,"line_end":222,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexSet;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":38778,"byte_end":38808,"line_start":223,"line_end":223,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":38813,"byte_end":38841,"line_start":224,"line_end":224,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":38846,"byte_end":38849,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ let mut a: FnvIndexSet<_, U16> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":38854,"byte_end":38927,"line_start":226,"line_end":226,"column_start":5,"column_end":78}},{"value":"/ let mut b: FnvIndexSet<_, U16> = [4, 2, 3, 4].iter().cloned().collect();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":38932,"byte_end":39008,"line_start":227,"line_end":227,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":39013,"byte_end":39016,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ // Print 1, 2, 3, 4 in that order.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":39021,"byte_end":39059,"line_start":229,"line_end":229,"column_start":5,"column_end":43}},{"value":"/ for x in a.union(&b) {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":39064,"byte_end":39090,"line_start":230,"line_end":230,"column_start":5,"column_end":31}},{"value":"/     println!(\"{}\", x);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":39095,"byte_end":39121,"line_start":231,"line_end":231,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":39126,"byte_end":39131,"line_start":232,"line_end":232,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":39136,"byte_end":39139,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ let union: FnvIndexSet<_, U16> = a.union(&b).collect();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":39144,"byte_end":39203,"line_start":234,"line_end":234,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(union, [1, 2, 3, 4].iter().collect::<FnvIndexSet<_, U16>>());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":39208,"byte_end":39284,"line_start":235,"line_end":235,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":39289,"byte_end":39296,"line_start":236,"line_end":236,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":39939,"byte_end":39942,"line_start":261,"line_end":261,"column_start":12,"column_end":15},"name":"len","qualname":"<IndexSet<T, N, S>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the set.","sig":null,"attributes":[{"value":"/ Returns the number of elements in the set.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":39591,"byte_end":39637,"line_start":248,"line_end":248,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":39642,"byte_end":39645,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":39650,"byte_end":39664,"line_start":250,"line_end":250,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":39669,"byte_end":39672,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":39677,"byte_end":39684,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexSet;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":39689,"byte_end":39719,"line_start":253,"line_end":253,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":39724,"byte_end":39752,"line_start":254,"line_end":254,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":39757,"byte_end":39760,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ let mut v: FnvIndexSet<_, U16> = FnvIndexSet::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":39765,"byte_end":39821,"line_start":256,"line_end":256,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(v.len(), 0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":39826,"byte_end":39853,"line_start":257,"line_end":257,"column_start":5,"column_end":32}},{"value":"/ v.insert(1).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":39858,"byte_end":39883,"line_start":258,"line_end":258,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(v.len(), 1);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":39888,"byte_end":39915,"line_start":259,"line_end":259,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":39920,"byte_end":39927,"line_start":260,"line_end":260,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":40347,"byte_end":40355,"line_start":278,"line_end":278,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<IndexSet<T, N, S>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no elements.","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no elements.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":39995,"byte_end":40046,"line_start":265,"line_end":265,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":40051,"byte_end":40054,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":40059,"byte_end":40073,"line_start":267,"line_end":267,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":40078,"byte_end":40081,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":40086,"byte_end":40093,"line_start":269,"line_end":269,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexSet;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":40098,"byte_end":40128,"line_start":270,"line_end":270,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":40133,"byte_end":40161,"line_start":271,"line_end":271,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":40166,"byte_end":40169,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ let mut v: FnvIndexSet<_, U16> = FnvIndexSet::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":40174,"byte_end":40230,"line_start":273,"line_end":273,"column_start":5,"column_end":61}},{"value":"/ assert!(v.is_empty());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":40235,"byte_end":40261,"line_start":274,"line_end":274,"column_start":5,"column_end":31}},{"value":"/ v.insert(1).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":40266,"byte_end":40291,"line_start":275,"line_end":275,"column_start":5,"column_end":30}},{"value":"/ assert!(!v.is_empty());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":40296,"byte_end":40323,"line_start":276,"line_end":276,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":40328,"byte_end":40335,"line_start":277,"line_end":277,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":40740,"byte_end":40745,"line_start":295,"line_end":295,"column_start":12,"column_end":17},"name":"clear","qualname":"<IndexSet<T, N, S>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears the set, removing all values.","sig":null,"attributes":[{"value":"/ Clears the set, removing all values.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":40412,"byte_end":40452,"line_start":282,"line_end":282,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":40457,"byte_end":40460,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":40465,"byte_end":40479,"line_start":284,"line_end":284,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":40484,"byte_end":40487,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":40492,"byte_end":40499,"line_start":286,"line_end":286,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexSet;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":40504,"byte_end":40534,"line_start":287,"line_end":287,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":40539,"byte_end":40567,"line_start":288,"line_end":288,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":40572,"byte_end":40575,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ let mut v: FnvIndexSet<_, U16> = FnvIndexSet::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":40580,"byte_end":40636,"line_start":290,"line_end":290,"column_start":5,"column_end":61}},{"value":"/ v.insert(1).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":40641,"byte_end":40666,"line_start":291,"line_end":291,"column_start":5,"column_end":30}},{"value":"/ v.clear();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":40671,"byte_end":40685,"line_start":292,"line_end":292,"column_start":5,"column_end":19}},{"value":"/ assert!(v.is_empty());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":40690,"byte_end":40716,"line_start":293,"line_end":293,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":40721,"byte_end":40728,"line_start":294,"line_end":294,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":41316,"byte_end":41324,"line_start":314,"line_end":314,"column_start":12,"column_end":20},"name":"contains","qualname":"<IndexSet<T, N, S>>::contains","value":"fn <Q> (&self, value: &Q) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains a value.","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains a value.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":40795,"byte_end":40842,"line_start":299,"line_end":299,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":40847,"byte_end":40850,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ The value may be any borrowed form of the set's value type, but `Hash` and `Eq` on the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":40855,"byte_end":40945,"line_start":301,"line_end":301,"column_start":5,"column_end":95}},{"value":"/ borrowed form must match those for the value type.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":40950,"byte_end":41004,"line_start":302,"line_end":302,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":41009,"byte_end":41012,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":41017,"byte_end":41031,"line_start":304,"line_end":304,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":41036,"byte_end":41039,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":41044,"byte_end":41051,"line_start":306,"line_end":306,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexSet;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":41056,"byte_end":41086,"line_start":307,"line_end":307,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":41091,"byte_end":41119,"line_start":308,"line_end":308,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":41124,"byte_end":41127,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ let set: FnvIndexSet<_, U16> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":41132,"byte_end":41203,"line_start":310,"line_end":310,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(set.contains(&1), true);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":41208,"byte_end":41247,"line_start":311,"line_end":311,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(set.contains(&4), false);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":41252,"byte_end":41292,"line_start":312,"line_end":312,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":41297,"byte_end":41304,"line_start":313,"line_end":313,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":42080,"byte_end":42091,"line_start":340,"line_end":340,"column_start":12,"column_end":23},"name":"is_disjoint","qualname":"<IndexSet<T, N, S>>::is_disjoint","value":"fn <N2, S2> (&self, other: &IndexSet<T, N2, S2>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` has no elements in common with `other`. This is equivalent to\n checking for an empty intersection.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` has no elements in common with `other`. This is equivalent to","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":41471,"byte_end":41561,"line_start":322,"line_end":322,"column_start":5,"column_end":95}},{"value":"/ checking for an empty intersection.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":41566,"byte_end":41605,"line_start":323,"line_end":323,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":41610,"byte_end":41613,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":41618,"byte_end":41632,"line_start":325,"line_end":325,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":41637,"byte_end":41640,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":41645,"byte_end":41652,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexSet;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":41657,"byte_end":41687,"line_start":328,"line_end":328,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":41692,"byte_end":41720,"line_start":329,"line_end":329,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":41725,"byte_end":41728,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ let a: FnvIndexSet<_, U16> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":41733,"byte_end":41802,"line_start":331,"line_end":331,"column_start":5,"column_end":74}},{"value":"/ let mut b = FnvIndexSet::<_, U16>::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":41807,"byte_end":41852,"line_start":332,"line_end":332,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":41857,"byte_end":41860,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.is_disjoint(&b), true);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":41865,"byte_end":41905,"line_start":334,"line_end":334,"column_start":5,"column_end":45}},{"value":"/ b.insert(4).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":41910,"byte_end":41935,"line_start":335,"line_end":335,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(a.is_disjoint(&b), true);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":41940,"byte_end":41980,"line_start":336,"line_end":336,"column_start":5,"column_end":45}},{"value":"/ b.insert(1).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":41985,"byte_end":42010,"line_start":337,"line_end":337,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(a.is_disjoint(&b), false);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":42015,"byte_end":42056,"line_start":338,"line_end":338,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":42061,"byte_end":42068,"line_start":339,"line_end":339,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":42918,"byte_end":42927,"line_start":366,"line_end":366,"column_start":12,"column_end":21},"name":"is_subset","qualname":"<IndexSet<T, N, S>>::is_subset","value":"fn <N2, S2> (&self, other: &IndexSet<T, N2, S2>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set is a subset of another, i.e. `other` contains at least all the\n values in `self`.","sig":null,"attributes":[{"value":"/ Returns `true` if the set is a subset of another, i.e. `other` contains at least all the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":42311,"byte_end":42403,"line_start":348,"line_end":348,"column_start":5,"column_end":97}},{"value":"/ values in `self`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":42408,"byte_end":42429,"line_start":349,"line_end":349,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":42434,"byte_end":42437,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":42442,"byte_end":42456,"line_start":351,"line_end":351,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":42461,"byte_end":42464,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":42469,"byte_end":42476,"line_start":353,"line_end":353,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexSet;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":42481,"byte_end":42511,"line_start":354,"line_end":354,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":42516,"byte_end":42544,"line_start":355,"line_end":355,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":42549,"byte_end":42552,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ let sup: FnvIndexSet<_, U16> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":42557,"byte_end":42628,"line_start":357,"line_end":357,"column_start":5,"column_end":76}},{"value":"/ let mut set = FnvIndexSet::<_, U16>::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":42633,"byte_end":42680,"line_start":358,"line_end":358,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":42685,"byte_end":42688,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(set.is_subset(&sup), true);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":42693,"byte_end":42735,"line_start":360,"line_end":360,"column_start":5,"column_end":47}},{"value":"/ set.insert(2).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":42740,"byte_end":42767,"line_start":361,"line_end":361,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(set.is_subset(&sup), true);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":42772,"byte_end":42814,"line_start":362,"line_end":362,"column_start":5,"column_end":47}},{"value":"/ set.insert(4).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":42819,"byte_end":42846,"line_start":363,"line_end":363,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(set.is_subset(&sup), false);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":42851,"byte_end":42894,"line_start":364,"line_end":364,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":42899,"byte_end":42906,"line_start":365,"line_end":365,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":43805,"byte_end":43816,"line_start":395,"line_end":395,"column_start":12,"column_end":23},"name":"is_superset","qualname":"<IndexSet<T, N, S>>::is_superset","value":"fn <N2, S2> (&self, other: &IndexSet<T, N2, S2>) -> bool","parent":null,"children":[],"decl_id":null,"docs":"\n # Examples","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":43269,"byte_end":43272,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":43277,"byte_end":43291,"line_start":377,"line_end":377,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":43296,"byte_end":43299,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":43304,"byte_end":43311,"line_start":379,"line_end":379,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexSet;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":43316,"byte_end":43346,"line_start":380,"line_end":380,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":43351,"byte_end":43379,"line_start":381,"line_end":381,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":43384,"byte_end":43387,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ let sub: FnvIndexSet<_, U16> = [1, 2].iter().cloned().collect();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":43392,"byte_end":43460,"line_start":383,"line_end":383,"column_start":5,"column_end":73}},{"value":"/ let mut set = FnvIndexSet::<_, U16>::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":43465,"byte_end":43512,"line_start":384,"line_end":384,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":43517,"byte_end":43520,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(set.is_superset(&sub), false);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":43525,"byte_end":43570,"line_start":386,"line_end":386,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":43575,"byte_end":43578,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ set.insert(0).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":43583,"byte_end":43610,"line_start":388,"line_end":388,"column_start":5,"column_end":32}},{"value":"/ set.insert(1).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":43615,"byte_end":43642,"line_start":389,"line_end":389,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(set.is_superset(&sub), false);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":43647,"byte_end":43692,"line_start":390,"line_end":390,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":43697,"byte_end":43700,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ set.insert(2).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":43705,"byte_end":43732,"line_start":392,"line_end":392,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(set.is_superset(&sub), true);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":43737,"byte_end":43781,"line_start":393,"line_end":393,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":43786,"byte_end":43793,"line_start":394,"line_end":394,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":329},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":44545,"byte_end":44551,"line_start":421,"line_end":421,"column_start":12,"column_end":18},"name":"insert","qualname":"<IndexSet<T, N, S>>::insert","value":"fn (&mut self, value: T) -> Result<bool, T>","parent":null,"children":[],"decl_id":null,"docs":" Adds a value to the set.","sig":null,"attributes":[{"value":"/ Adds a value to the set.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":44018,"byte_end":44046,"line_start":403,"line_end":403,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":44051,"byte_end":44054,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ If the set did not have this value present, `true` is returned.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":44059,"byte_end":44126,"line_start":405,"line_end":405,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":44131,"byte_end":44134,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ If the set did have this value present, `false` is returned.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":44139,"byte_end":44203,"line_start":407,"line_end":407,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":44208,"byte_end":44211,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":44216,"byte_end":44230,"line_start":409,"line_end":409,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":44235,"byte_end":44238,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":44243,"byte_end":44250,"line_start":411,"line_end":411,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexSet;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":44255,"byte_end":44285,"line_start":412,"line_end":412,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":44290,"byte_end":44318,"line_start":413,"line_end":413,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":44323,"byte_end":44326,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ let mut set = FnvIndexSet::<_, U16>::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":44331,"byte_end":44378,"line_start":415,"line_end":415,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":44383,"byte_end":44386,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(set.insert(2).unwrap(), true);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":44391,"byte_end":44436,"line_start":417,"line_end":417,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(set.insert(2).unwrap(), false);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":44441,"byte_end":44487,"line_start":418,"line_end":418,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(set.len(), 1);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":44492,"byte_end":44521,"line_start":419,"line_end":419,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":44526,"byte_end":44533,"line_start":420,"line_end":420,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":332},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":45295,"byte_end":45301,"line_start":445,"line_end":445,"column_start":12,"column_end":18},"name":"remove","qualname":"<IndexSet<T, N, S>>::remove","value":"fn <Q> (&mut self, value: &Q) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Removes a value from the set. Returns `true` if the value was present in the set.","sig":null,"attributes":[{"value":"/ Removes a value from the set. Returns `true` if the value was present in the set.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":44724,"byte_end":44809,"line_start":428,"line_end":428,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":44814,"byte_end":44817,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ The value may be any borrowed form of the set's value type, but `Hash` and `Eq` on the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":44822,"byte_end":44912,"line_start":430,"line_end":430,"column_start":5,"column_end":95}},{"value":"/ borrowed form must match those for the value type.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":44917,"byte_end":44971,"line_start":431,"line_end":431,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":44976,"byte_end":44979,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":44984,"byte_end":44998,"line_start":433,"line_end":433,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":45003,"byte_end":45006,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":45011,"byte_end":45018,"line_start":435,"line_end":435,"column_start":5,"column_end":12}},{"value":"/ use heapless::FnvIndexSet;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":45023,"byte_end":45053,"line_start":436,"line_end":436,"column_start":5,"column_end":35}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":45058,"byte_end":45086,"line_start":437,"line_end":437,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":45091,"byte_end":45094,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ let mut set = FnvIndexSet::<_, U16>::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":45099,"byte_end":45146,"line_start":439,"line_end":439,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":45151,"byte_end":45154,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ set.insert(2).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":45159,"byte_end":45186,"line_start":441,"line_end":441,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(set.remove(&2), true);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":45191,"byte_end":45228,"line_start":442,"line_end":442,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(set.remove(&2), false);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":45233,"byte_end":45271,"line_start":443,"line_end":443,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":45276,"byte_end":45283,"line_start":444,"line_end":444,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":384},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":47955,"byte_end":47959,"line_start":562,"line_end":562,"column_start":12,"column_end":16},"name":"Iter","qualname":"::indexset::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":387}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":398},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":48317,"byte_end":48327,"line_start":582,"line_end":582,"column_start":12,"column_end":22},"name":"Difference","qualname":"::indexset::Difference","value":"Difference {  }","parent":null,"children":[{"krate":0,"index":403},{"krate":0,"index":404}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":412},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":48920,"byte_end":48932,"line_start":610,"line_end":610,"column_start":12,"column_end":24},"name":"Intersection","qualname":"::indexset::Intersection","value":"Intersection {  }","parent":null,"children":[{"krate":0,"index":417},{"krate":0,"index":418}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":441},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":49888,"byte_end":49897,"line_start":16,"line_end":16,"column_start":12,"column_end":21},"name":"LinearMap","qualname":"::linear_map::LinearMap","value":"","parent":null,"children":[],"decl_id":null,"docs":" A fixed capacity map / dictionary that performs lookups via linear search","sig":null,"attributes":[{"value":"/ A fixed capacity map / dictionary that performs lookups via linear search","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":49701,"byte_end":49778,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":49779,"byte_end":49782,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Note that as this map doesn't use hashing so most operations are **O(N)** instead of O(1)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":49783,"byte_end":49876,"line_start":15,"line_end":15,"column_start":1,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":449},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":50184,"byte_end":50187,"line_start":24,"line_end":24,"column_start":18,"column_end":21},"name":"new","qualname":"<crate::i::LinearMap<A>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" `LinearMap` `const` constructor; wrap the returned value in\n [`LinearMap`](../struct.LinearMap.html)\n","sig":null,"attributes":[{"value":"/ `LinearMap` `const` constructor; wrap the returned value in","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":50055,"byte_end":50118,"line_start":22,"line_end":22,"column_start":5,"column_end":68}},{"value":"/ [`LinearMap`](../struct.LinearMap.html)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":50123,"byte_end":50166,"line_start":23,"line_end":23,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":454},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":50798,"byte_end":50801,"line_start":50,"line_end":50,"column_start":12,"column_end":15},"name":"new","qualname":"<LinearMap<K, V, N>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `LinearMap`","sig":null,"attributes":[{"value":"/ Creates an empty `LinearMap`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":50360,"byte_end":50392,"line_start":36,"line_end":36,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":50397,"byte_end":50400,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":50405,"byte_end":50419,"line_start":38,"line_end":38,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":50424,"byte_end":50427,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":50432,"byte_end":50439,"line_start":40,"line_end":40,"column_start":5,"column_end":12}},{"value":"/ use heapless::LinearMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":50444,"byte_end":50472,"line_start":41,"line_end":41,"column_start":5,"column_end":33}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":50477,"byte_end":50505,"line_start":42,"line_end":42,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":50510,"byte_end":50513,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ // allocate the map on the stack","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":50518,"byte_end":50554,"line_start":44,"line_end":44,"column_start":5,"column_end":41}},{"value":"/ let mut map: LinearMap<&str, isize, U8> = LinearMap::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":50559,"byte_end":50622,"line_start":45,"line_end":45,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":50627,"byte_end":50630,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ // allocate the map in a static variable","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":50635,"byte_end":50679,"line_start":47,"line_end":47,"column_start":5,"column_end":49}},{"value":"/ static mut MAP: LinearMap<&str, isize, U8> = LinearMap(heapless::i::LinearMap::new());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":50684,"byte_end":50774,"line_start":48,"line_end":48,"column_start":5,"column_end":95}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":50779,"byte_end":50786,"line_start":49,"line_end":49,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":455},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":51217,"byte_end":51225,"line_start":67,"line_end":67,"column_start":12,"column_end":20},"name":"capacity","qualname":"<LinearMap<K, V, N>>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements that the map can hold","sig":null,"attributes":[{"value":"/ Returns the number of elements that the map can hold","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":50871,"byte_end":50927,"line_start":54,"line_end":54,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":50932,"byte_end":50935,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":50940,"byte_end":50969,"line_start":56,"line_end":56,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":50974,"byte_end":50977,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":50982,"byte_end":50996,"line_start":58,"line_end":58,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":51001,"byte_end":51004,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":51009,"byte_end":51016,"line_start":60,"line_end":60,"column_start":5,"column_end":12}},{"value":"/ use heapless::LinearMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":51021,"byte_end":51049,"line_start":61,"line_end":61,"column_start":5,"column_end":33}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":51054,"byte_end":51082,"line_start":62,"line_end":62,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":51087,"byte_end":51090,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ let map: LinearMap<&str, isize, U8> = LinearMap::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":51095,"byte_end":51154,"line_start":64,"line_end":64,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(map.capacity(), 8);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":51159,"byte_end":51193,"line_start":65,"line_end":65,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":51198,"byte_end":51205,"line_start":66,"line_end":66,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":51664,"byte_end":51669,"line_start":86,"line_end":86,"column_start":12,"column_end":17},"name":"clear","qualname":"<LinearMap<K, V, N>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears the map, removing all key-value pairs","sig":null,"attributes":[{"value":"/ Clears the map, removing all key-value pairs","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":51277,"byte_end":51325,"line_start":71,"line_end":71,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":51330,"byte_end":51333,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":51338,"byte_end":51367,"line_start":73,"line_end":73,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":51372,"byte_end":51375,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":51380,"byte_end":51394,"line_start":75,"line_end":75,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":51399,"byte_end":51402,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":51407,"byte_end":51414,"line_start":77,"line_end":77,"column_start":5,"column_end":12}},{"value":"/ use heapless::LinearMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":51419,"byte_end":51447,"line_start":78,"line_end":78,"column_start":5,"column_end":33}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":51452,"byte_end":51480,"line_start":79,"line_end":79,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":51485,"byte_end":51488,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ let mut map: LinearMap<_, _, U8> = LinearMap::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":51493,"byte_end":51549,"line_start":81,"line_end":81,"column_start":5,"column_end":61}},{"value":"/ map.insert(1, \"a\").unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":51554,"byte_end":51586,"line_start":82,"line_end":82,"column_start":5,"column_end":37}},{"value":"/ map.clear();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":51591,"byte_end":51607,"line_start":83,"line_end":83,"column_start":5,"column_end":21}},{"value":"/ assert!(map.is_empty());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":51612,"byte_end":51640,"line_start":84,"line_end":84,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":51645,"byte_end":51652,"line_start":85,"line_end":85,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":52173,"byte_end":52185,"line_start":105,"line_end":105,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<LinearMap<K, V, N>>::contains_key","value":"fn (&self, key: &K) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the map contains a value for the specified key.","sig":null,"attributes":[{"value":"/ Returns true if the map contains a value for the specified key.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":51724,"byte_end":51791,"line_start":90,"line_end":90,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":51796,"byte_end":51799,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(N)** time","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":51804,"byte_end":51833,"line_start":92,"line_end":92,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":51838,"byte_end":51841,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":51846,"byte_end":51860,"line_start":94,"line_end":94,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":51865,"byte_end":51868,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":51873,"byte_end":51880,"line_start":96,"line_end":96,"column_start":5,"column_end":12}},{"value":"/ use heapless::LinearMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":51885,"byte_end":51913,"line_start":97,"line_end":97,"column_start":5,"column_end":33}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":51918,"byte_end":51946,"line_start":98,"line_end":98,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":51951,"byte_end":51954,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ let mut map: LinearMap<_, _, U8> = LinearMap::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":51959,"byte_end":52015,"line_start":100,"line_end":100,"column_start":5,"column_end":61}},{"value":"/ map.insert(1, \"a\").unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":52020,"byte_end":52052,"line_start":101,"line_end":101,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(map.contains_key(&1), true);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":52057,"byte_end":52100,"line_start":102,"line_end":102,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(map.contains_key(&2), false);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":52105,"byte_end":52149,"line_start":103,"line_end":103,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":52154,"byte_end":52161,"line_start":104,"line_end":104,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":458},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":52685,"byte_end":52688,"line_start":124,"line_end":124,"column_start":12,"column_end":15},"name":"get","qualname":"<LinearMap<K, V, N>>::get","value":"fn <Q> (&self, key: &Q) -> Option<&V>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the value corresponding to the key","sig":null,"attributes":[{"value":"/ Returns a reference to the value corresponding to the key","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":52255,"byte_end":52316,"line_start":109,"line_end":109,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":52321,"byte_end":52324,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(N)** time","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":52329,"byte_end":52358,"line_start":111,"line_end":111,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":52363,"byte_end":52366,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":52371,"byte_end":52385,"line_start":113,"line_end":113,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":52390,"byte_end":52393,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":52398,"byte_end":52405,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/ use heapless::LinearMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":52410,"byte_end":52438,"line_start":116,"line_end":116,"column_start":5,"column_end":33}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":52443,"byte_end":52471,"line_start":117,"line_end":117,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":52476,"byte_end":52479,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ let mut map: LinearMap<_, _, U8> = LinearMap::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":52484,"byte_end":52540,"line_start":119,"line_end":119,"column_start":5,"column_end":61}},{"value":"/ map.insert(1, \"a\").unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":52545,"byte_end":52577,"line_start":120,"line_end":120,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(map.get(&1), Some(&\"a\"));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":52582,"byte_end":52622,"line_start":121,"line_end":121,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(map.get(&2), None);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":52627,"byte_end":52661,"line_start":122,"line_end":122,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":52666,"byte_end":52673,"line_start":123,"line_end":123,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":53354,"byte_end":53361,"line_start":151,"line_end":151,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<LinearMap<K, V, N>>::get_mut","value":"fn <Q> (&mut self, key: &Q) -> Option<&mut V>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the value corresponding to the key","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the value corresponding to the key","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":52891,"byte_end":52960,"line_start":134,"line_end":134,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":52965,"byte_end":52968,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(N)** time","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":52973,"byte_end":53002,"line_start":136,"line_end":136,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":53007,"byte_end":53010,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":53015,"byte_end":53029,"line_start":138,"line_end":138,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":53034,"byte_end":53037,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":53042,"byte_end":53049,"line_start":140,"line_end":140,"column_start":5,"column_end":12}},{"value":"/ use heapless::LinearMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":53054,"byte_end":53082,"line_start":141,"line_end":141,"column_start":5,"column_end":33}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":53087,"byte_end":53115,"line_start":142,"line_end":142,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":53120,"byte_end":53123,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ let mut map: LinearMap<_, _, U8> = LinearMap::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":53128,"byte_end":53184,"line_start":144,"line_end":144,"column_start":5,"column_end":61}},{"value":"/ map.insert(1, \"a\").unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":53189,"byte_end":53221,"line_start":145,"line_end":145,"column_start":5,"column_end":37}},{"value":"/ if let Some(x) = map.get_mut(&1) {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":53226,"byte_end":53264,"line_start":146,"line_end":146,"column_start":5,"column_end":43}},{"value":"/     *x = \"b\";","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":53269,"byte_end":53286,"line_start":147,"line_end":147,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":53291,"byte_end":53296,"line_start":148,"line_end":148,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(map[&1], \"b\");","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":53301,"byte_end":53330,"line_start":149,"line_end":149,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":53335,"byte_end":53342,"line_start":150,"line_end":150,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":53967,"byte_end":53970,"line_start":176,"line_end":176,"column_start":12,"column_end":15},"name":"len","qualname":"<LinearMap<K, V, N>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in this map","sig":null,"attributes":[{"value":"/ Returns the number of elements in this map","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":53576,"byte_end":53622,"line_start":161,"line_end":161,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":53627,"byte_end":53630,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":53635,"byte_end":53664,"line_start":163,"line_end":163,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":53669,"byte_end":53672,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":53677,"byte_end":53691,"line_start":165,"line_end":165,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":53696,"byte_end":53699,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":53704,"byte_end":53711,"line_start":167,"line_end":167,"column_start":5,"column_end":12}},{"value":"/ use heapless::LinearMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":53716,"byte_end":53744,"line_start":168,"line_end":168,"column_start":5,"column_end":33}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":53749,"byte_end":53777,"line_start":169,"line_end":169,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":53782,"byte_end":53785,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ let mut a: LinearMap<_, _, U8> = LinearMap::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":53790,"byte_end":53844,"line_start":171,"line_end":171,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(a.len(), 0);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":53849,"byte_end":53876,"line_start":172,"line_end":172,"column_start":5,"column_end":32}},{"value":"/ a.insert(1, \"a\").unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":53881,"byte_end":53911,"line_start":173,"line_end":173,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.len(), 1);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":53916,"byte_end":53943,"line_start":174,"line_end":174,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":53948,"byte_end":53955,"line_start":175,"line_end":175,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":467},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":54742,"byte_end":54748,"line_start":202,"line_end":202,"column_start":12,"column_end":18},"name":"insert","qualname":"<LinearMap<K, V, N>>::insert","value":"fn (&mut self, key: K, mut value: V) -> Result<Option<V>, (K, V)>","parent":null,"children":[],"decl_id":null,"docs":" Inserts a key-value pair into the map.","sig":null,"attributes":[{"value":"/ Inserts a key-value pair into the map.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":54026,"byte_end":54068,"line_start":180,"line_end":180,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":54073,"byte_end":54076,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ If the map did not have this key present, `None` is returned.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":54081,"byte_end":54146,"line_start":182,"line_end":182,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":54151,"byte_end":54154,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ If the map did have this key present, the value is updated, and the old value is returned.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":54159,"byte_end":54253,"line_start":184,"line_end":184,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":54258,"byte_end":54261,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(N)** time","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":54266,"byte_end":54295,"line_start":186,"line_end":186,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":54300,"byte_end":54303,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":54308,"byte_end":54322,"line_start":188,"line_end":188,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":54327,"byte_end":54330,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":54335,"byte_end":54342,"line_start":190,"line_end":190,"column_start":5,"column_end":12}},{"value":"/ use heapless::LinearMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":54347,"byte_end":54375,"line_start":191,"line_end":191,"column_start":5,"column_end":33}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":54380,"byte_end":54408,"line_start":192,"line_end":192,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":54413,"byte_end":54416,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ let mut map: LinearMap<_, _, U8> = LinearMap::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":54421,"byte_end":54477,"line_start":194,"line_end":194,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(map.insert(37, \"a\").unwrap(), None);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":54482,"byte_end":54533,"line_start":195,"line_end":195,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(map.is_empty(), false);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":54538,"byte_end":54576,"line_start":196,"line_end":196,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":54581,"byte_end":54584,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ map.insert(37, \"b\").unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":54589,"byte_end":54622,"line_start":198,"line_end":198,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(map.insert(37, \"c\").unwrap(), Some(\"b\"));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":54627,"byte_end":54683,"line_start":199,"line_end":199,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(map[&37], \"c\");","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":54688,"byte_end":54718,"line_start":200,"line_end":200,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":54723,"byte_end":54730,"line_start":201,"line_end":201,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":469},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":55435,"byte_end":55443,"line_start":227,"line_end":227,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<LinearMap<K, V, N>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the map contains no elements","sig":null,"attributes":[{"value":"/ Returns true if the map contains no elements","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":55043,"byte_end":55091,"line_start":212,"line_end":212,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":55096,"byte_end":55099,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":55104,"byte_end":55133,"line_start":214,"line_end":214,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":55138,"byte_end":55141,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":55146,"byte_end":55160,"line_start":216,"line_end":216,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":55165,"byte_end":55168,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":55173,"byte_end":55180,"line_start":218,"line_end":218,"column_start":5,"column_end":12}},{"value":"/ use heapless::LinearMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":55185,"byte_end":55213,"line_start":219,"line_end":219,"column_start":5,"column_end":33}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":55218,"byte_end":55246,"line_start":220,"line_end":220,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":55251,"byte_end":55254,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ let mut a: LinearMap<_, _, U8> = LinearMap::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":55259,"byte_end":55313,"line_start":222,"line_end":222,"column_start":5,"column_end":59}},{"value":"/ assert!(a.is_empty());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":55318,"byte_end":55344,"line_start":223,"line_end":223,"column_start":5,"column_end":31}},{"value":"/ a.insert(1, \"a\").unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":55349,"byte_end":55379,"line_start":224,"line_end":224,"column_start":5,"column_end":35}},{"value":"/ assert!(!a.is_empty());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":55384,"byte_end":55411,"line_start":225,"line_end":225,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":55416,"byte_end":55423,"line_start":226,"line_end":226,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":55985,"byte_end":55989,"line_start":248,"line_end":248,"column_start":12,"column_end":16},"name":"iter","qualname":"<LinearMap<K, V, N>>::iter","value":"fn (&self) -> Iter<'_, K, V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all key-value pairs in arbitrary order.","sig":null,"attributes":[{"value":"/ An iterator visiting all key-value pairs in arbitrary order.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":55496,"byte_end":55560,"line_start":231,"line_end":231,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":55565,"byte_end":55568,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":55573,"byte_end":55587,"line_start":233,"line_end":233,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":55592,"byte_end":55595,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":55600,"byte_end":55607,"line_start":235,"line_end":235,"column_start":5,"column_end":12}},{"value":"/ use heapless::LinearMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":55612,"byte_end":55640,"line_start":236,"line_end":236,"column_start":5,"column_end":33}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":55645,"byte_end":55673,"line_start":237,"line_end":237,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":55678,"byte_end":55681,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ let mut map: LinearMap<_, _, U8> = LinearMap::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":55686,"byte_end":55742,"line_start":239,"line_end":239,"column_start":5,"column_end":61}},{"value":"/ map.insert(\"a\", 1).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":55747,"byte_end":55779,"line_start":240,"line_end":240,"column_start":5,"column_end":37}},{"value":"/ map.insert(\"b\", 2).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":55784,"byte_end":55816,"line_start":241,"line_end":241,"column_start":5,"column_end":37}},{"value":"/ map.insert(\"c\", 3).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":55821,"byte_end":55853,"line_start":242,"line_end":242,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":55858,"byte_end":55861,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ for (key, val) in map.iter() {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":55866,"byte_end":55900,"line_start":244,"line_end":244,"column_start":5,"column_end":39}},{"value":"/     println!(\"key: {} val: {}\", key, val);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":55905,"byte_end":55951,"line_start":245,"line_end":245,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":55956,"byte_end":55961,"line_start":246,"line_end":246,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":55966,"byte_end":55973,"line_start":247,"line_end":247,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":56743,"byte_end":56751,"line_start":277,"line_end":277,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<LinearMap<K, V, N>>::iter_mut","value":"fn (&mut self) -> IterMut<'_, K, V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all key-value pairs in arbitrary order, with mutable references to the\n values","sig":null,"attributes":[{"value":"/ An iterator visiting all key-value pairs in arbitrary order, with mutable references to the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":56104,"byte_end":56199,"line_start":254,"line_end":254,"column_start":5,"column_end":100}},{"value":"/ values","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":56204,"byte_end":56214,"line_start":255,"line_end":255,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":56219,"byte_end":56222,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":56227,"byte_end":56241,"line_start":257,"line_end":257,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":56246,"byte_end":56249,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":56254,"byte_end":56261,"line_start":259,"line_end":259,"column_start":5,"column_end":12}},{"value":"/ use heapless::LinearMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":56266,"byte_end":56294,"line_start":260,"line_end":260,"column_start":5,"column_end":33}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":56299,"byte_end":56327,"line_start":261,"line_end":261,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":56332,"byte_end":56335,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ let mut map: LinearMap<_, _, U8> = LinearMap::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":56340,"byte_end":56396,"line_start":263,"line_end":263,"column_start":5,"column_end":61}},{"value":"/ map.insert(\"a\", 1).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":56401,"byte_end":56433,"line_start":264,"line_end":264,"column_start":5,"column_end":37}},{"value":"/ map.insert(\"b\", 2).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":56438,"byte_end":56470,"line_start":265,"line_end":265,"column_start":5,"column_end":37}},{"value":"/ map.insert(\"c\", 3).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":56475,"byte_end":56507,"line_start":266,"line_end":266,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":56512,"byte_end":56515,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ // Update all values","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":56520,"byte_end":56544,"line_start":268,"line_end":268,"column_start":5,"column_end":29}},{"value":"/ for (_, val) in map.iter_mut() {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":56549,"byte_end":56585,"line_start":269,"line_end":269,"column_start":5,"column_end":41}},{"value":"/     *val = 2;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":56590,"byte_end":56607,"line_start":270,"line_end":270,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":56612,"byte_end":56617,"line_start":271,"line_end":271,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":56622,"byte_end":56625,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ for (key, val) in &map {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":56630,"byte_end":56658,"line_start":273,"line_end":273,"column_start":5,"column_end":33}},{"value":"/     println!(\"key: {} val: {}\", key, val);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":56663,"byte_end":56709,"line_start":274,"line_end":274,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":56714,"byte_end":56719,"line_start":275,"line_end":275,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":56724,"byte_end":56731,"line_start":276,"line_end":276,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":472},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":57336,"byte_end":57340,"line_start":300,"line_end":300,"column_start":12,"column_end":16},"name":"keys","qualname":"<LinearMap<K, V, N>>::keys","value":"fn (&self) -> impl Iterator<Item = &K>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all keys in arbitrary order","sig":null,"attributes":[{"value":"/ An iterator visiting all keys in arbitrary order","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":56884,"byte_end":56936,"line_start":283,"line_end":283,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":56941,"byte_end":56944,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":56949,"byte_end":56963,"line_start":285,"line_end":285,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":56968,"byte_end":56971,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":56976,"byte_end":56983,"line_start":287,"line_end":287,"column_start":5,"column_end":12}},{"value":"/ use heapless::LinearMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":56988,"byte_end":57016,"line_start":288,"line_end":288,"column_start":5,"column_end":33}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":57021,"byte_end":57049,"line_start":289,"line_end":289,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":57054,"byte_end":57057,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ let mut map: LinearMap<_, _, U8> = LinearMap::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":57062,"byte_end":57118,"line_start":291,"line_end":291,"column_start":5,"column_end":61}},{"value":"/ map.insert(\"a\", 1).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":57123,"byte_end":57155,"line_start":292,"line_end":292,"column_start":5,"column_end":37}},{"value":"/ map.insert(\"b\", 2).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":57160,"byte_end":57192,"line_start":293,"line_end":293,"column_start":5,"column_end":37}},{"value":"/ map.insert(\"c\", 3).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":57197,"byte_end":57229,"line_start":294,"line_end":294,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":57234,"byte_end":57237,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ for key in map.keys() {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":57242,"byte_end":57269,"line_start":296,"line_end":296,"column_start":5,"column_end":32}},{"value":"/     println!(\"{}\", key);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":57274,"byte_end":57302,"line_start":297,"line_end":297,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":57307,"byte_end":57312,"line_start":298,"line_end":298,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":57317,"byte_end":57324,"line_start":299,"line_end":299,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":475},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":57906,"byte_end":57912,"line_start":320,"line_end":320,"column_start":12,"column_end":18},"name":"remove","qualname":"<LinearMap<K, V, N>>::remove","value":"fn <Q> (&mut self, key: &Q) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Removes a key from the map, returning the value at the key if the key was previously in the\n map","sig":null,"attributes":[{"value":"/ Removes a key from the map, returning the value at the key if the key was previously in the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":57425,"byte_end":57520,"line_start":304,"line_end":304,"column_start":5,"column_end":100}},{"value":"/ map","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":57525,"byte_end":57532,"line_start":305,"line_end":305,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":57537,"byte_end":57540,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(N)** time","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":57545,"byte_end":57574,"line_start":307,"line_end":307,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":57579,"byte_end":57582,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":57587,"byte_end":57601,"line_start":309,"line_end":309,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":57606,"byte_end":57609,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":57614,"byte_end":57621,"line_start":311,"line_end":311,"column_start":5,"column_end":12}},{"value":"/ use heapless::LinearMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":57626,"byte_end":57654,"line_start":312,"line_end":312,"column_start":5,"column_end":33}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":57659,"byte_end":57687,"line_start":313,"line_end":313,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":57692,"byte_end":57695,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ let mut map: LinearMap<_, _, U8> = LinearMap::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":57700,"byte_end":57756,"line_start":315,"line_end":315,"column_start":5,"column_end":61}},{"value":"/ map.insert(1, \"a\").unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":57761,"byte_end":57793,"line_start":316,"line_end":316,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(map.remove(&1), Some(\"a\"));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":57798,"byte_end":57840,"line_start":317,"line_end":317,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(map.remove(&1), None);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":57845,"byte_end":57882,"line_start":318,"line_end":318,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":57887,"byte_end":57894,"line_start":319,"line_end":319,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":58684,"byte_end":58690,"line_start":351,"line_end":351,"column_start":12,"column_end":18},"name":"values","qualname":"<LinearMap<K, V, N>>::values","value":"fn (&self) -> impl Iterator<Item = &V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all values in arbitrary order","sig":null,"attributes":[{"value":"/ An iterator visiting all values in arbitrary order","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":58228,"byte_end":58282,"line_start":334,"line_end":334,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":58287,"byte_end":58290,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":58295,"byte_end":58309,"line_start":336,"line_end":336,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":58314,"byte_end":58317,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":58322,"byte_end":58329,"line_start":338,"line_end":338,"column_start":5,"column_end":12}},{"value":"/ use heapless::LinearMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":58334,"byte_end":58362,"line_start":339,"line_end":339,"column_start":5,"column_end":33}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":58367,"byte_end":58395,"line_start":340,"line_end":340,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":58400,"byte_end":58403,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ let mut map: LinearMap<_, _, U8> = LinearMap::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":58408,"byte_end":58464,"line_start":342,"line_end":342,"column_start":5,"column_end":61}},{"value":"/ map.insert(\"a\", 1).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":58469,"byte_end":58501,"line_start":343,"line_end":343,"column_start":5,"column_end":37}},{"value":"/ map.insert(\"b\", 2).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":58506,"byte_end":58538,"line_start":344,"line_end":344,"column_start":5,"column_end":37}},{"value":"/ map.insert(\"c\", 3).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":58543,"byte_end":58575,"line_start":345,"line_end":345,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":58580,"byte_end":58583,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ for val in map.values() {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":58588,"byte_end":58617,"line_start":347,"line_end":347,"column_start":5,"column_end":34}},{"value":"/     println!(\"{}\", val);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":58622,"byte_end":58650,"line_start":348,"line_end":348,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":58655,"byte_end":58660,"line_start":349,"line_end":349,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":58665,"byte_end":58672,"line_start":350,"line_end":350,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":483},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":59319,"byte_end":59329,"line_start":376,"line_end":376,"column_start":12,"column_end":22},"name":"values_mut","qualname":"<LinearMap<K, V, N>>::values_mut","value":"fn (&mut self) -> impl Iterator<Item = &mut V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all values mutably in arbitrary order","sig":null,"attributes":[{"value":"/ An iterator visiting all values mutably in arbitrary order","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":58775,"byte_end":58837,"line_start":355,"line_end":355,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":58842,"byte_end":58845,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":58850,"byte_end":58864,"line_start":357,"line_end":357,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":58869,"byte_end":58872,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":58877,"byte_end":58884,"line_start":359,"line_end":359,"column_start":5,"column_end":12}},{"value":"/ use heapless::LinearMap;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":58889,"byte_end":58917,"line_start":360,"line_end":360,"column_start":5,"column_end":33}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":58922,"byte_end":58950,"line_start":361,"line_end":361,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":58955,"byte_end":58958,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ let mut map: LinearMap<_, _, U8> = LinearMap::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":58963,"byte_end":59019,"line_start":363,"line_end":363,"column_start":5,"column_end":61}},{"value":"/ map.insert(\"a\", 1).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":59024,"byte_end":59056,"line_start":364,"line_end":364,"column_start":5,"column_end":37}},{"value":"/ map.insert(\"b\", 2).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":59061,"byte_end":59093,"line_start":365,"line_end":365,"column_start":5,"column_end":37}},{"value":"/ map.insert(\"c\", 3).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":59098,"byte_end":59130,"line_start":366,"line_end":366,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":59135,"byte_end":59138,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ for val in map.values_mut() {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":59143,"byte_end":59176,"line_start":368,"line_end":368,"column_start":5,"column_end":38}},{"value":"/     *val += 10;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":59181,"byte_end":59200,"line_start":369,"line_end":369,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":59205,"byte_end":59210,"line_start":370,"line_end":370,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":59215,"byte_end":59218,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ for val in map.values() {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":59223,"byte_end":59252,"line_start":372,"line_end":372,"column_start":5,"column_end":34}},{"value":"/     println!(\"{}\", val);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":59257,"byte_end":59285,"line_start":373,"line_end":373,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":59290,"byte_end":59295,"line_start":374,"line_end":374,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":59300,"byte_end":59307,"line_start":375,"line_end":375,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":522},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":60888,"byte_end":60896,"line_start":454,"line_end":454,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::linear_map::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":526}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":548},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":61948,"byte_end":61952,"line_start":505,"line_end":505,"column_start":12,"column_end":16},"name":"Iter","qualname":"::linear_map::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":552}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":570},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":62537,"byte_end":62544,"line_start":535,"line_end":535,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::linear_map::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":574}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":613},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":64534,"byte_end":64540,"line_start":19,"line_end":19,"column_start":12,"column_end":18},"name":"String","qualname":"::string::String","value":"","parent":null,"children":[],"decl_id":null,"docs":" A fixed capacity [`String`](https://doc.rust-lang.org/std/string/struct.String.html)\n","sig":null,"attributes":[{"value":"/ A fixed capacity [`String`](https://doc.rust-lang.org/std/string/struct.String.html)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":64434,"byte_end":64522,"line_start":18,"line_end":18,"column_start":1,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":619},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":64779,"byte_end":64782,"line_start":25,"line_end":25,"column_start":18,"column_end":21},"name":"new","qualname":"<crate::i::String<A>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" `String` `const` constructor; wrap the returned value in [`String`](../struct.String.html)\n","sig":null,"attributes":[{"value":"/ `String` `const` constructor; wrap the returned value in [`String`](../struct.String.html)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":64667,"byte_end":64761,"line_start":24,"line_end":24,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":622},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":65394,"byte_end":65397,"line_start":53,"line_end":53,"column_start":12,"column_end":15},"name":"new","qualname":"<String<N>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `String` with a fixed capacity of `N`","sig":null,"attributes":[{"value":"/ Constructs a new, empty `String` with a fixed capacity of `N`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":64922,"byte_end":64987,"line_start":36,"line_end":36,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":64992,"byte_end":64995,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":65000,"byte_end":65014,"line_start":38,"line_end":38,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":65019,"byte_end":65022,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":65027,"byte_end":65043,"line_start":40,"line_end":40,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":65048,"byte_end":65051,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":65056,"byte_end":65063,"line_start":42,"line_end":42,"column_start":5,"column_end":12}},{"value":"/ use heapless::String;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":65068,"byte_end":65093,"line_start":43,"line_end":43,"column_start":5,"column_end":30}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":65098,"byte_end":65126,"line_start":44,"line_end":44,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":65131,"byte_end":65134,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ // allocate the string on the stack","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":65139,"byte_end":65178,"line_start":46,"line_end":46,"column_start":5,"column_end":44}},{"value":"/ let mut s: String<U4> = String::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":65183,"byte_end":65225,"line_start":47,"line_end":47,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":65230,"byte_end":65233,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ // allocate the string in a static variable","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":65238,"byte_end":65285,"line_start":49,"line_end":49,"column_start":5,"column_end":52}},{"value":"/ static mut S: String<U4> = String(heapless::i::String::new());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":65290,"byte_end":65356,"line_start":50,"line_end":50,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":65361,"byte_end":65368,"line_start":51,"line_end":51,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":65373,"byte_end":65382,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":623},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":66748,"byte_end":66757,"line_start":99,"line_end":99,"column_start":12,"column_end":21},"name":"from_utf8","qualname":"<String<N>>::from_utf8","value":"fn (vec: Vec<u8, N>) -> Result<String<N>, Utf8Error>","parent":null,"children":[],"decl_id":null,"docs":" Converts a vector of bytes into a `String`.","sig":null,"attributes":[{"value":"/ Converts a vector of bytes into a `String`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":65461,"byte_end":65508,"line_start":57,"line_end":57,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":65513,"byte_end":65516,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ A string slice ([`&str`]) is made of bytes ([`u8`]), and a vector of bytes","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":65521,"byte_end":65599,"line_start":59,"line_end":59,"column_start":5,"column_end":83}},{"value":"/ ([`Vec<u8>`]) is made of bytes, so this function converts between the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":65604,"byte_end":65677,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ two. Not all byte slices are valid `String`s, however: `String`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":65682,"byte_end":65749,"line_start":61,"line_end":61,"column_start":5,"column_end":72}},{"value":"/ requires that it is valid UTF-8. `from_utf8()` checks to ensure that","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":65754,"byte_end":65826,"line_start":62,"line_end":62,"column_start":5,"column_end":77}},{"value":"/ the bytes are valid UTF-8, and then does the conversion.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":65831,"byte_end":65891,"line_start":63,"line_end":63,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":65896,"byte_end":65899,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ See std::String for further information.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":65904,"byte_end":65948,"line_start":65,"line_end":65,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":65953,"byte_end":65956,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":65961,"byte_end":65975,"line_start":67,"line_end":67,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":65980,"byte_end":65983,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":65988,"byte_end":66004,"line_start":69,"line_end":69,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":66009,"byte_end":66012,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":66017,"byte_end":66024,"line_start":71,"line_end":71,"column_start":5,"column_end":12}},{"value":"/ use heapless::{String, Vec};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":66029,"byte_end":66061,"line_start":72,"line_end":72,"column_start":5,"column_end":37}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":66066,"byte_end":66094,"line_start":73,"line_end":73,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":66099,"byte_end":66102,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ let mut v: Vec<u8, U8> = Vec::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":66107,"byte_end":66147,"line_start":75,"line_end":75,"column_start":5,"column_end":45}},{"value":"/ v.push('a' as u8).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":66152,"byte_end":66183,"line_start":76,"line_end":76,"column_start":5,"column_end":36}},{"value":"/ v.push('b' as u8).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":66188,"byte_end":66219,"line_start":77,"line_end":77,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":66224,"byte_end":66227,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let s = String::from_utf8(v).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":66232,"byte_end":66274,"line_start":79,"line_end":79,"column_start":5,"column_end":47}},{"value":"/ assert!(s.len() == 2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":66279,"byte_end":66305,"line_start":80,"line_end":80,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":66310,"byte_end":66317,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":66322,"byte_end":66325,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ Incorrect bytes:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":66330,"byte_end":66350,"line_start":83,"line_end":83,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":66355,"byte_end":66358,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":66363,"byte_end":66370,"line_start":85,"line_end":85,"column_start":5,"column_end":12}},{"value":"/ use heapless::{String, Vec};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":66375,"byte_end":66407,"line_start":86,"line_end":86,"column_start":5,"column_end":37}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":66412,"byte_end":66440,"line_start":87,"line_end":87,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":66445,"byte_end":66448,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ // some invalid bytes, in a vector","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":66453,"byte_end":66491,"line_start":89,"line_end":89,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":66496,"byte_end":66499,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ let mut v: Vec<u8, U8> = Vec::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":66504,"byte_end":66544,"line_start":91,"line_end":91,"column_start":5,"column_end":45}},{"value":"/ v.push(0).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":66549,"byte_end":66572,"line_start":92,"line_end":92,"column_start":5,"column_end":28}},{"value":"/ v.push(159).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":66577,"byte_end":66602,"line_start":93,"line_end":93,"column_start":5,"column_end":30}},{"value":"/ v.push(146).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":66607,"byte_end":66632,"line_start":94,"line_end":94,"column_start":5,"column_end":30}},{"value":"/ v.push(150).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":66637,"byte_end":66662,"line_start":95,"line_end":95,"column_start":5,"column_end":30}},{"value":"/ assert!(String::from_utf8(v).is_err());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":66667,"byte_end":66710,"line_start":96,"line_end":96,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":66715,"byte_end":66722,"line_start":97,"line_end":97,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":66727,"byte_end":66736,"line_start":98,"line_end":98,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":624},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":67144,"byte_end":67163,"line_start":111,"line_end":111,"column_start":19,"column_end":38},"name":"from_utf8_unchecked","qualname":"<String<N>>::from_utf8_unchecked","value":"fn (mut vec: Vec<u8, N>) -> String<N>","parent":null,"children":[],"decl_id":null,"docs":" Converts a vector of bytes to a `String` without checking that the\n string contains valid UTF-8.","sig":null,"attributes":[{"value":"/ Converts a vector of bytes to a `String` without checking that the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":66935,"byte_end":67005,"line_start":106,"line_end":106,"column_start":5,"column_end":75}},{"value":"/ string contains valid UTF-8.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":67010,"byte_end":67042,"line_start":107,"line_end":107,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":67047,"byte_end":67050,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ See the safe version, `from_utf8`, for more details.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":67055,"byte_end":67111,"line_start":109,"line_end":109,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":67116,"byte_end":67125,"line_start":110,"line_end":110,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":625},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":67906,"byte_end":67916,"line_start":137,"line_end":137,"column_start":12,"column_end":22},"name":"into_bytes","qualname":"<String<N>>::into_bytes","value":"fn (self) -> Vec<u8, N>","parent":null,"children":[],"decl_id":null,"docs":" Converts a `String` into a byte vector.","sig":null,"attributes":[{"value":"/ Converts a `String` into a byte vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":67422,"byte_end":67465,"line_start":118,"line_end":118,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":67470,"byte_end":67473,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ This consumes the `String`, so we do not need to copy its contents.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":67478,"byte_end":67549,"line_start":120,"line_end":120,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":67554,"byte_end":67557,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":67562,"byte_end":67576,"line_start":122,"line_end":122,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":67581,"byte_end":67584,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":67589,"byte_end":67605,"line_start":124,"line_end":124,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":67610,"byte_end":67613,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":67618,"byte_end":67625,"line_start":126,"line_end":126,"column_start":5,"column_end":12}},{"value":"/ use heapless::String;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":67630,"byte_end":67655,"line_start":127,"line_end":127,"column_start":5,"column_end":30}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":67660,"byte_end":67688,"line_start":128,"line_end":128,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":67693,"byte_end":67696,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ let s: String<U4> = String::from(\"ab\");","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":67701,"byte_end":67744,"line_start":130,"line_end":130,"column_start":5,"column_end":48}},{"value":"/ let b = s.into_bytes();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":67749,"byte_end":67776,"line_start":131,"line_end":131,"column_start":5,"column_end":32}},{"value":"/ assert!(b.len() == 2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":67781,"byte_end":67807,"line_start":132,"line_end":132,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":67812,"byte_end":67815,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&['a' as u8, 'b' as u8], &b[..]);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":67820,"byte_end":67868,"line_start":134,"line_end":134,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":67873,"byte_end":67880,"line_start":135,"line_end":135,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":67885,"byte_end":67894,"line_start":136,"line_end":136,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":626},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":68442,"byte_end":68448,"line_start":158,"line_end":158,"column_start":12,"column_end":18},"name":"as_str","qualname":"<String<N>>::as_str","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Extracts a string slice containing the entire string.","sig":null,"attributes":[{"value":"/ Extracts a string slice containing the entire string.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":67974,"byte_end":68031,"line_start":141,"line_end":141,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":68036,"byte_end":68039,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":68044,"byte_end":68058,"line_start":143,"line_end":143,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":68063,"byte_end":68066,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":68071,"byte_end":68087,"line_start":145,"line_end":145,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":68092,"byte_end":68095,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":68100,"byte_end":68107,"line_start":147,"line_end":147,"column_start":5,"column_end":12}},{"value":"/ use heapless::String;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":68112,"byte_end":68137,"line_start":148,"line_end":148,"column_start":5,"column_end":30}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":68142,"byte_end":68170,"line_start":149,"line_end":149,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":68175,"byte_end":68178,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ let mut s: String<U4> = String::from(\"ab\");","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":68183,"byte_end":68230,"line_start":151,"line_end":151,"column_start":5,"column_end":52}},{"value":"/ assert!(s.as_str() == \"ab\");","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":68235,"byte_end":68267,"line_start":152,"line_end":152,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":68272,"byte_end":68275,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ let _s = s.as_str();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":68280,"byte_end":68304,"line_start":154,"line_end":154,"column_start":5,"column_end":29}},{"value":"/ // s.push('c'); // <- cannot borrow `s` as mutable because it is also borrowed as immutable","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":68309,"byte_end":68404,"line_start":155,"line_end":155,"column_start":5,"column_end":100}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":68409,"byte_end":68416,"line_start":156,"line_end":156,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":68421,"byte_end":68430,"line_start":157,"line_end":157,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":627},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":68899,"byte_end":68909,"line_start":177,"line_end":177,"column_start":12,"column_end":22},"name":"as_mut_str","qualname":"<String<N>>::as_mut_str","value":"fn (&mut self) -> &mut str","parent":null,"children":[],"decl_id":null,"docs":" Converts a `String` into a mutable string slice.","sig":null,"attributes":[{"value":"/ Converts a `String` into a mutable string slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":68544,"byte_end":68596,"line_start":162,"line_end":162,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":68601,"byte_end":68604,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":68609,"byte_end":68623,"line_start":164,"line_end":164,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":68628,"byte_end":68631,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":68636,"byte_end":68652,"line_start":166,"line_end":166,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":68657,"byte_end":68660,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":68665,"byte_end":68672,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"/ use heapless::String;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":68677,"byte_end":68702,"line_start":169,"line_end":169,"column_start":5,"column_end":30}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":68707,"byte_end":68735,"line_start":170,"line_end":170,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":68740,"byte_end":68743,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ let mut s: String<U4> = String::from(\"ab\");","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":68748,"byte_end":68795,"line_start":172,"line_end":172,"column_start":5,"column_end":52}},{"value":"/ let s = s.as_mut_str();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":68800,"byte_end":68827,"line_start":173,"line_end":173,"column_start":5,"column_end":32}},{"value":"/ s.make_ascii_uppercase();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":68832,"byte_end":68861,"line_start":174,"line_end":174,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":68866,"byte_end":68873,"line_start":175,"line_end":175,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":68878,"byte_end":68887,"line_start":176,"line_end":176,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":628},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":69471,"byte_end":69479,"line_start":200,"line_end":200,"column_start":12,"column_end":20},"name":"push_str","qualname":"<String<N>>::push_str","value":"fn (&mut self, string: &str) -> Result<(), ()>","parent":null,"children":[],"decl_id":null,"docs":" Appends a given string slice onto the end of this `String`.","sig":null,"attributes":[{"value":"/ Appends a given string slice onto the end of this `String`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":69021,"byte_end":69084,"line_start":181,"line_end":181,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":69089,"byte_end":69092,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":69097,"byte_end":69111,"line_start":183,"line_end":183,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":69116,"byte_end":69119,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":69124,"byte_end":69140,"line_start":185,"line_end":185,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":69145,"byte_end":69148,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":69153,"byte_end":69160,"line_start":187,"line_end":187,"column_start":5,"column_end":12}},{"value":"/ use heapless::String;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":69165,"byte_end":69190,"line_start":188,"line_end":188,"column_start":5,"column_end":30}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":69195,"byte_end":69223,"line_start":189,"line_end":189,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":69228,"byte_end":69231,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ let mut s: String<U8> = String::from(\"foo\");","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":69236,"byte_end":69284,"line_start":191,"line_end":191,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":69289,"byte_end":69292,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ assert!(s.push_str(\"bar\").is_ok());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":69297,"byte_end":69336,"line_start":193,"line_end":193,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":69341,"byte_end":69344,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(\"foobar\", s);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":69349,"byte_end":69377,"line_start":195,"line_end":195,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":69382,"byte_end":69385,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ assert!(s.push_str(\"tender\").is_err());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":69390,"byte_end":69433,"line_start":197,"line_end":197,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":69438,"byte_end":69445,"line_start":198,"line_end":198,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":69450,"byte_end":69459,"line_start":199,"line_end":199,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":629},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":69922,"byte_end":69930,"line_start":218,"line_end":218,"column_start":12,"column_end":20},"name":"capacity","qualname":"<String<N>>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum number of elements the String can hold","sig":null,"attributes":[{"value":"/ Returns the maximum number of elements the String can hold","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":69592,"byte_end":69654,"line_start":204,"line_end":204,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":69659,"byte_end":69662,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":69667,"byte_end":69681,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":69686,"byte_end":69689,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":69694,"byte_end":69710,"line_start":208,"line_end":208,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":69715,"byte_end":69718,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":69723,"byte_end":69730,"line_start":210,"line_end":210,"column_start":5,"column_end":12}},{"value":"/ use heapless::String;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":69735,"byte_end":69760,"line_start":211,"line_end":211,"column_start":5,"column_end":30}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":69765,"byte_end":69793,"line_start":212,"line_end":212,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":69798,"byte_end":69801,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ let mut s: String<U4> = String::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":69806,"byte_end":69848,"line_start":214,"line_end":214,"column_start":5,"column_end":47}},{"value":"/ assert!(s.capacity() == 4);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":69853,"byte_end":69884,"line_start":215,"line_end":215,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":69889,"byte_end":69896,"line_start":216,"line_end":216,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":69901,"byte_end":69910,"line_start":217,"line_end":217,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":630},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":70531,"byte_end":70535,"line_start":245,"line_end":245,"column_start":12,"column_end":16},"name":"push","qualname":"<String<N>>::push","value":"fn (&mut self, c: char) -> Result<(), ()>","parent":null,"children":[],"decl_id":null,"docs":" Appends the given [`char`] to the end of this `String`.","sig":null,"attributes":[{"value":"/ Appends the given [`char`] to the end of this `String`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":69990,"byte_end":70049,"line_start":222,"line_end":222,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":70054,"byte_end":70057,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ [`char`]: ../../std/primitive.char.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":70062,"byte_end":70105,"line_start":224,"line_end":224,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":70110,"byte_end":70113,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":70118,"byte_end":70132,"line_start":226,"line_end":226,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":70137,"byte_end":70140,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":70145,"byte_end":70161,"line_start":228,"line_end":228,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":70166,"byte_end":70169,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":70174,"byte_end":70181,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/ use heapless::String;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":70186,"byte_end":70211,"line_start":231,"line_end":231,"column_start":5,"column_end":30}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":70216,"byte_end":70244,"line_start":232,"line_end":232,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":70249,"byte_end":70252,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ let mut s: String<U8> = String::from(\"abc\");","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":70257,"byte_end":70305,"line_start":234,"line_end":234,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":70310,"byte_end":70313,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ s.push('1').unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":70318,"byte_end":70343,"line_start":236,"line_end":236,"column_start":5,"column_end":30}},{"value":"/ s.push('2').unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":70348,"byte_end":70373,"line_start":237,"line_end":237,"column_start":5,"column_end":30}},{"value":"/ s.push('3').unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":70378,"byte_end":70403,"line_start":238,"line_end":238,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":70408,"byte_end":70411,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ assert!(\"abc123\" == s.as_str());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":70416,"byte_end":70452,"line_start":240,"line_end":240,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":70457,"byte_end":70460,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(\"abc123\", s);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":70465,"byte_end":70493,"line_start":242,"line_end":242,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":70498,"byte_end":70505,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":70510,"byte_end":70519,"line_start":244,"line_end":244,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":633},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":71537,"byte_end":71545,"line_start":284,"line_end":284,"column_start":12,"column_end":20},"name":"truncate","qualname":"<String<N>>::truncate","value":"fn (&mut self, new_len: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shortens this `String` to the specified length.","sig":null,"attributes":[{"value":"/ Shortens this `String` to the specified length.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":70822,"byte_end":70873,"line_start":255,"line_end":255,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":70878,"byte_end":70881,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ If `new_len` is greater than the string's current length, this has no","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":70886,"byte_end":70959,"line_start":257,"line_end":257,"column_start":5,"column_end":78}},{"value":"/ effect.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":70964,"byte_end":70975,"line_start":258,"line_end":258,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":70980,"byte_end":70983,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ Note that this method has no effect on the allocated capacity","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":70988,"byte_end":71053,"line_start":260,"line_end":260,"column_start":5,"column_end":70}},{"value":"/ of the string","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":71058,"byte_end":71075,"line_start":261,"line_end":261,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":71080,"byte_end":71083,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":71088,"byte_end":71100,"line_start":263,"line_end":263,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":71105,"byte_end":71108,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ Panics if `new_len` does not lie on a [`char`] boundary.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":71113,"byte_end":71173,"line_start":265,"line_end":265,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":71178,"byte_end":71181,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ [`char`]: ../../std/primitive.char.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":71186,"byte_end":71229,"line_start":267,"line_end":267,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":71234,"byte_end":71237,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":71242,"byte_end":71256,"line_start":269,"line_end":269,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":71261,"byte_end":71264,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":71269,"byte_end":71285,"line_start":271,"line_end":271,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":71290,"byte_end":71293,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":71298,"byte_end":71305,"line_start":273,"line_end":273,"column_start":5,"column_end":12}},{"value":"/ use heapless::String;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":71310,"byte_end":71335,"line_start":274,"line_end":274,"column_start":5,"column_end":30}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":71340,"byte_end":71368,"line_start":275,"line_end":275,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":71373,"byte_end":71376,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ let mut s: String<U8> = String::from(\"hello\");","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":71381,"byte_end":71431,"line_start":277,"line_end":277,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":71436,"byte_end":71439,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ s.truncate(2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":71444,"byte_end":71462,"line_start":279,"line_end":279,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":71467,"byte_end":71470,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(\"he\", s);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":71475,"byte_end":71499,"line_start":281,"line_end":281,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":71504,"byte_end":71511,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":71516,"byte_end":71525,"line_start":283,"line_end":283,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":634},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":72322,"byte_end":72325,"line_start":313,"line_end":313,"column_start":12,"column_end":15},"name":"pop","qualname":"<String<N>>::pop","value":"fn (&mut self) -> Option<char>","parent":null,"children":[],"decl_id":null,"docs":" Removes the last character from the string buffer and returns it.","sig":null,"attributes":[{"value":"/ Removes the last character from the string buffer and returns it.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":71725,"byte_end":71794,"line_start":291,"line_end":291,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":71799,"byte_end":71802,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if this `String` is empty.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":71807,"byte_end":71854,"line_start":293,"line_end":293,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":71859,"byte_end":71862,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ [`None`]: ../../std/option/enum.Option.html#variant.None","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":71867,"byte_end":71927,"line_start":295,"line_end":295,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":71932,"byte_end":71935,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":71940,"byte_end":71954,"line_start":297,"line_end":297,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":71959,"byte_end":71962,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":71967,"byte_end":71983,"line_start":299,"line_end":299,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":71988,"byte_end":71991,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":71996,"byte_end":72003,"line_start":301,"line_end":301,"column_start":5,"column_end":12}},{"value":"/ use heapless::String;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":72008,"byte_end":72033,"line_start":302,"line_end":302,"column_start":5,"column_end":30}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":72038,"byte_end":72066,"line_start":303,"line_end":303,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":72071,"byte_end":72074,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ let mut s: String<U8> = String::from(\"foo\");","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":72079,"byte_end":72127,"line_start":305,"line_end":305,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":72132,"byte_end":72135,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s.pop(), Some('o'));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":72140,"byte_end":72175,"line_start":307,"line_end":307,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(s.pop(), Some('o'));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":72180,"byte_end":72215,"line_start":308,"line_end":308,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(s.pop(), Some('f'));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":72220,"byte_end":72255,"line_start":309,"line_end":309,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":72260,"byte_end":72263,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s.pop(), None);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":72268,"byte_end":72298,"line_start":311,"line_end":311,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":72303,"byte_end":72310,"line_start":312,"line_end":312,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":635},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":73138,"byte_end":73143,"line_start":348,"line_end":348,"column_start":12,"column_end":17},"name":"clear","qualname":"<String<N>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Truncates this `String`, removing all contents.","sig":null,"attributes":[{"value":"/ Truncates this `String`, removing all contents.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":72600,"byte_end":72651,"line_start":326,"line_end":326,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":72656,"byte_end":72659,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ While this means the `String` will have a length of zero, it does not","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":72664,"byte_end":72737,"line_start":328,"line_end":328,"column_start":5,"column_end":78}},{"value":"/ touch its capacity.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":72742,"byte_end":72765,"line_start":329,"line_end":329,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":72770,"byte_end":72773,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":72778,"byte_end":72792,"line_start":331,"line_end":331,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":72797,"byte_end":72800,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":72805,"byte_end":72821,"line_start":333,"line_end":333,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":72826,"byte_end":72829,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":72834,"byte_end":72841,"line_start":335,"line_end":335,"column_start":5,"column_end":12}},{"value":"/ use heapless::String;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":72846,"byte_end":72871,"line_start":336,"line_end":336,"column_start":5,"column_end":30}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":72876,"byte_end":72904,"line_start":337,"line_end":337,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":72909,"byte_end":72912,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ let mut s: String<U8> = String::from(\"foo\");","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":72917,"byte_end":72965,"line_start":339,"line_end":339,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":72970,"byte_end":72973,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ s.clear();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":72978,"byte_end":72992,"line_start":341,"line_end":341,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":72997,"byte_end":73000,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ assert!(s.is_empty());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":73005,"byte_end":73031,"line_start":343,"line_end":343,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(0, s.len());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":73036,"byte_end":73063,"line_start":344,"line_end":344,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(8, s.capacity());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":73068,"byte_end":73100,"line_start":345,"line_end":345,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":73105,"byte_end":73112,"line_start":346,"line_end":346,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":73117,"byte_end":73126,"line_start":347,"line_end":347,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":707},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":83167,"byte_end":83170,"line_start":8,"line_end":8,"column_start":18,"column_end":21},"name":"new","qualname":"<crate::i::Vec<A>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" `Vec` `const` constructor; wrap the returned value in [`Vec`](../struct.Vec.html)\n","sig":null,"attributes":[{"value":"/ `Vec` `const` constructor; wrap the returned value in [`Vec`](../struct.Vec.html)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":83064,"byte_end":83149,"line_start":7,"line_end":7,"column_start":5,"column_end":90}}]},{"kind":"Struct","id":{"krate":0,"index":726},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":87306,"byte_end":87309,"line_start":163,"line_end":163,"column_start":12,"column_end":15},"name":"Vec","qualname":"::vec::Vec","value":"","parent":null,"children":[],"decl_id":null,"docs":" A fixed capacity [`Vec`](https://doc.rust-lang.org/std/vec/struct.Vec.html)","sig":null,"attributes":[{"value":"/ A fixed capacity [`Vec`](https://doc.rust-lang.org/std/vec/struct.Vec.html)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":86655,"byte_end":86734,"line_start":134,"line_end":134,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":86735,"byte_end":86738,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":86739,"byte_end":86753,"line_start":136,"line_end":136,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":86754,"byte_end":86757,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":86758,"byte_end":86765,"line_start":138,"line_end":138,"column_start":1,"column_end":8}},{"value":"/ use heapless::Vec;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":86766,"byte_end":86788,"line_start":139,"line_end":139,"column_start":1,"column_end":23}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":86789,"byte_end":86817,"line_start":140,"line_end":140,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":86818,"byte_end":86821,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ // A vector with a fixed capacity of 8 elements allocated on the stack","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":86822,"byte_end":86896,"line_start":142,"line_end":142,"column_start":1,"column_end":75}},{"value":"/ let mut vec = Vec::<_, U8>::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":86897,"byte_end":86935,"line_start":143,"line_end":143,"column_start":1,"column_end":39}},{"value":"/ vec.push(1);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":86936,"byte_end":86952,"line_start":144,"line_end":144,"column_start":1,"column_end":17}},{"value":"/ vec.push(2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":86953,"byte_end":86969,"line_start":145,"line_end":145,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":86970,"byte_end":86973,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(vec.len(), 2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":86974,"byte_end":87003,"line_start":147,"line_end":147,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(vec[0], 1);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":87004,"byte_end":87030,"line_start":148,"line_end":148,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":87031,"byte_end":87034,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(vec.pop(), Some(2));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":87035,"byte_end":87070,"line_start":150,"line_end":150,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(vec.len(), 1);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":87071,"byte_end":87100,"line_start":151,"line_end":151,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":87101,"byte_end":87104,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ vec[0] = 7;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":87105,"byte_end":87120,"line_start":153,"line_end":153,"column_start":1,"column_end":16}},{"value":"/ assert_eq!(vec[0], 7);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":87121,"byte_end":87147,"line_start":154,"line_end":154,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":87148,"byte_end":87151,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ vec.extend([1, 2, 3].iter().cloned());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":87152,"byte_end":87194,"line_start":156,"line_end":156,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":87195,"byte_end":87198,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ for x in &vec {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":87199,"byte_end":87218,"line_start":158,"line_end":158,"column_start":1,"column_end":20}},{"value":"/     println!(\"{}\", x);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":87219,"byte_end":87245,"line_start":159,"line_end":159,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":87246,"byte_end":87251,"line_start":160,"line_end":160,"column_start":1,"column_end":6}},{"value":"/ assert_eq!(vec, [7, 1, 2, 3]);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":87252,"byte_end":87286,"line_start":161,"line_end":161,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":87287,"byte_end":87294,"line_start":162,"line_end":162,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":738},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":88041,"byte_end":88044,"line_start":196,"line_end":196,"column_start":12,"column_end":15},"name":"new","qualname":"<Vec<T, N>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty vector with a fixed capacity of `N`","sig":null,"attributes":[{"value":"/ Constructs a new, empty vector with a fixed capacity of `N`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":87622,"byte_end":87685,"line_start":182,"line_end":182,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":87690,"byte_end":87693,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":87698,"byte_end":87712,"line_start":184,"line_end":184,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":87717,"byte_end":87720,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":87725,"byte_end":87732,"line_start":186,"line_end":186,"column_start":5,"column_end":12}},{"value":"/ use heapless::Vec;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":87737,"byte_end":87759,"line_start":187,"line_end":187,"column_start":5,"column_end":27}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":87764,"byte_end":87792,"line_start":188,"line_end":188,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":87797,"byte_end":87800,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ // allocate the vector on the stack","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":87805,"byte_end":87844,"line_start":190,"line_end":190,"column_start":5,"column_end":44}},{"value":"/ let mut x: Vec<u8, U16> = Vec::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":87849,"byte_end":87890,"line_start":191,"line_end":191,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":87895,"byte_end":87898,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ // allocate the vector in a static variable","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":87903,"byte_end":87950,"line_start":193,"line_end":193,"column_start":5,"column_end":52}},{"value":"/ static mut X: Vec<u8, U16> = Vec(heapless::i::Vec::new());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":87955,"byte_end":88017,"line_start":194,"line_end":194,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":88022,"byte_end":88029,"line_start":195,"line_end":195,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":739},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":88484,"byte_end":88494,"line_start":213,"line_end":213,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<Vec<T, N>>::from_slice","value":"fn (other: &[T]) -> Result<Self, ()>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new vector with a fixed capacity of `N` and fills it\n with the provided slice.","sig":null,"attributes":[{"value":"/ Constructs a new vector with a fixed capacity of `N` and fills it","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":88102,"byte_end":88171,"line_start":200,"line_end":200,"column_start":5,"column_end":74}},{"value":"/ with the provided slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":88176,"byte_end":88204,"line_start":201,"line_end":201,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":88209,"byte_end":88212,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the following code:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":88217,"byte_end":88262,"line_start":203,"line_end":203,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":88267,"byte_end":88270,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":88275,"byte_end":88282,"line_start":205,"line_end":205,"column_start":5,"column_end":12}},{"value":"/ use heapless::Vec;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":88287,"byte_end":88309,"line_start":206,"line_end":206,"column_start":5,"column_end":27}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":88314,"byte_end":88342,"line_start":207,"line_end":207,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":88347,"byte_end":88350,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ let mut v: Vec<u8, U16> = Vec::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":88355,"byte_end":88396,"line_start":209,"line_end":209,"column_start":5,"column_end":46}},{"value":"/ v.extend_from_slice(&[1, 2, 3]).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":88401,"byte_end":88446,"line_start":210,"line_end":210,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":88451,"byte_end":88458,"line_start":211,"line_end":211,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":88463,"byte_end":88472,"line_start":212,"line_end":212,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":740},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":88751,"byte_end":88759,"line_start":224,"line_end":224,"column_start":12,"column_end":20},"name":"capacity","qualname":"<Vec<T, N>>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum number of elements the vector can hold\n","sig":null,"attributes":[{"value":"/ Returns the maximum number of elements the vector can hold","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":88677,"byte_end":88739,"line_start":223,"line_end":223,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":741},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":88870,"byte_end":88875,"line_start":229,"line_end":229,"column_start":12,"column_end":17},"name":"clear","qualname":"<Vec<T, N>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears the vector, removing all values.\n","sig":null,"attributes":[{"value":"/ Clears the vector, removing all values.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":88815,"byte_end":88858,"line_start":228,"line_end":228,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":742},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":89443,"byte_end":89460,"line_start":249,"line_end":249,"column_start":12,"column_end":29},"name":"extend_from_slice","qualname":"<Vec<T, N>>::extend_from_slice","value":"fn (&mut self, other: &[T]) -> Result<(), ()>","parent":null,"children":[],"decl_id":null,"docs":" Clones and appends all elements in a slice to the `Vec`.","sig":null,"attributes":[{"value":"/ Clones and appends all elements in a slice to the `Vec`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":88923,"byte_end":88983,"line_start":233,"line_end":233,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":88988,"byte_end":88991,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ Iterates over the slice `other`, clones each element, and then appends","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":88996,"byte_end":89070,"line_start":235,"line_end":235,"column_start":5,"column_end":79}},{"value":"/ it to this `Vec`. The `other` vector is traversed in-order.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":89075,"byte_end":89138,"line_start":236,"line_end":236,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":89143,"byte_end":89146,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":89151,"byte_end":89165,"line_start":238,"line_end":238,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":89170,"byte_end":89173,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":89178,"byte_end":89185,"line_start":240,"line_end":240,"column_start":5,"column_end":12}},{"value":"/ use heapless::Vec;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":89190,"byte_end":89212,"line_start":241,"line_end":241,"column_start":5,"column_end":27}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":89217,"byte_end":89245,"line_start":242,"line_end":242,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":89250,"byte_end":89253,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ let mut vec = Vec::<u8, U8>::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":89258,"byte_end":89297,"line_start":244,"line_end":244,"column_start":5,"column_end":44}},{"value":"/ vec.push(1).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":89302,"byte_end":89327,"line_start":245,"line_end":245,"column_start":5,"column_end":30}},{"value":"/ vec.extend_from_slice(&[2, 3, 4]).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":89332,"byte_end":89379,"line_start":246,"line_end":246,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(*vec, [1, 2, 3, 4]);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":89384,"byte_end":89419,"line_start":247,"line_end":247,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":89424,"byte_end":89431,"line_start":248,"line_end":248,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":743},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":89681,"byte_end":89684,"line_start":257,"line_end":257,"column_start":12,"column_end":15},"name":"pop","qualname":"<Vec<T, N>>::pop","value":"fn (&mut self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes the last element from a vector and return it, or `None` if it's empty\n","sig":null,"attributes":[{"value":"/ Removes the last element from a vector and return it, or `None` if it's empty","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":89588,"byte_end":89669,"line_start":256,"line_end":256,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":744},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":89972,"byte_end":89976,"line_start":268,"line_end":268,"column_start":12,"column_end":16},"name":"push","qualname":"<Vec<T, N>>::push","value":"fn (&mut self, item: T) -> Result<(), T>","parent":null,"children":[],"decl_id":null,"docs":" Appends an `item` to the back of the collection","sig":null,"attributes":[{"value":"/ Appends an `item` to the back of the collection","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":89847,"byte_end":89898,"line_start":265,"line_end":265,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":89903,"byte_end":89906,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ Returns back the `item` if the vector is full","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":89911,"byte_end":89960,"line_start":267,"line_end":267,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":746},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":90250,"byte_end":90258,"line_start":277,"line_end":277,"column_start":12,"column_end":20},"name":"truncate","qualname":"<Vec<T, N>>::truncate","value":"fn (&mut self, len: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shortens the vector, keeping the first `len` elements and dropping the rest.\n","sig":null,"attributes":[{"value":"/ Shortens the vector, keeping the first `len` elements and dropping the rest.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":90158,"byte_end":90238,"line_start":276,"line_end":276,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":747},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":91049,"byte_end":91055,"line_start":297,"line_end":297,"column_start":12,"column_end":18},"name":"resize","qualname":"<Vec<T, N>>::resize","value":"fn (&mut self, new_len: usize, value: T) -> Result<(), ()>","parent":null,"children":[],"decl_id":null,"docs":" Resizes the Vec in-place so that len is equal to new_len.","sig":null,"attributes":[{"value":"/ Resizes the Vec in-place so that len is equal to new_len.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":90686,"byte_end":90747,"line_start":290,"line_end":290,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":90752,"byte_end":90755,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ If new_len is greater than len, the Vec is extended by the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":90760,"byte_end":90822,"line_start":292,"line_end":292,"column_start":5,"column_end":67}},{"value":"/ difference, with each additional slot filled with value. If","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":90827,"byte_end":90890,"line_start":293,"line_end":293,"column_start":5,"column_end":68}},{"value":"/ new_len is less than len, the Vec is simply truncated.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":90895,"byte_end":90953,"line_start":294,"line_end":294,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":90958,"byte_end":90961,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ See also [`resize_default`](struct.Vec.html#method.resize_default).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":90966,"byte_end":91037,"line_start":296,"line_end":296,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":748},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":91829,"byte_end":91843,"line_start":323,"line_end":323,"column_start":12,"column_end":26},"name":"resize_default","qualname":"<Vec<T, N>>::resize_default","value":"fn (&mut self, new_len: usize) -> Result<(), ()>","parent":null,"children":[],"decl_id":null,"docs":" Resizes the `Vec` in-place so that `len` is equal to `new_len`.","sig":null,"attributes":[{"value":"/ Resizes the `Vec` in-place so that `len` is equal to `new_len`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":91449,"byte_end":91516,"line_start":316,"line_end":316,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":91521,"byte_end":91524,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ If `new_len` is greater than `len`, the `Vec` is extended by the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":91529,"byte_end":91597,"line_start":318,"line_end":318,"column_start":5,"column_end":73}},{"value":"/ difference, with each additional slot filled with `Default::default()`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":91602,"byte_end":91677,"line_start":319,"line_end":319,"column_start":5,"column_end":80}},{"value":"/ If `new_len` is less than `len`, the `Vec` is simply truncated.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":91682,"byte_end":91749,"line_start":320,"line_end":320,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":91754,"byte_end":91757,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ See also [`resize`](struct.Vec.html#method.resize).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":91762,"byte_end":91817,"line_start":322,"line_end":322,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":749},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":92769,"byte_end":92780,"line_start":358,"line_end":358,"column_start":12,"column_end":23},"name":"swap_remove","qualname":"<Vec<T, N>>::swap_remove","value":"fn (&mut self, index: usize) -> T","parent":null,"children":[],"decl_id":null,"docs":" Removes an element from the vector and returns it.","sig":null,"attributes":[{"value":"/ Removes an element from the vector and returns it.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":91987,"byte_end":92041,"line_start":330,"line_end":330,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":92046,"byte_end":92049,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ The removed element is replaced by the last element of the vector.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":92054,"byte_end":92124,"line_start":332,"line_end":332,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":92129,"byte_end":92132,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ This does not preserve ordering, but is O(1).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":92137,"byte_end":92186,"line_start":334,"line_end":334,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":92191,"byte_end":92194,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":92199,"byte_end":92211,"line_start":336,"line_end":336,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":92216,"byte_end":92219,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ Panics if `index` is out of bounds.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":92224,"byte_end":92263,"line_start":338,"line_end":338,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":92268,"byte_end":92271,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":92276,"byte_end":92290,"line_start":340,"line_end":340,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":92295,"byte_end":92298,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":92303,"byte_end":92310,"line_start":342,"line_end":342,"column_start":5,"column_end":12}},{"value":"/ use heapless::Vec;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":92315,"byte_end":92337,"line_start":343,"line_end":343,"column_start":5,"column_end":27}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":92342,"byte_end":92370,"line_start":344,"line_end":344,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":92375,"byte_end":92378,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ let mut v: Vec<_, U8> = Vec::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":92383,"byte_end":92422,"line_start":346,"line_end":346,"column_start":5,"column_end":44}},{"value":"/ v.push(\"foo\").unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":92427,"byte_end":92454,"line_start":347,"line_end":347,"column_start":5,"column_end":32}},{"value":"/ v.push(\"bar\").unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":92459,"byte_end":92486,"line_start":348,"line_end":348,"column_start":5,"column_end":32}},{"value":"/ v.push(\"baz\").unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":92491,"byte_end":92518,"line_start":349,"line_end":349,"column_start":5,"column_end":32}},{"value":"/ v.push(\"qux\").unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":92523,"byte_end":92550,"line_start":350,"line_end":350,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":92555,"byte_end":92558,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(v.swap_remove(1), \"bar\");","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":92563,"byte_end":92603,"line_start":352,"line_end":352,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(&*v, [\"foo\", \"qux\", \"baz\"]);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":92608,"byte_end":92651,"line_start":353,"line_end":353,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":92656,"byte_end":92659,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(v.swap_remove(0), \"foo\");","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":92664,"byte_end":92704,"line_start":355,"line_end":355,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(&*v, [\"baz\", \"qux\"]);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":92709,"byte_end":92745,"line_start":356,"line_end":356,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":92750,"byte_end":92757,"line_start":357,"line_end":357,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":752},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":93544,"byte_end":93555,"line_start":386,"line_end":386,"column_start":12,"column_end":23},"name":"starts_with","qualname":"<Vec<T, N>>::starts_with","value":"fn (&self, needle: &[T]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `needle` is a prefix of the Vec.","sig":null,"attributes":[{"value":"/ Returns `true` if `needle` is a prefix of the Vec.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":93063,"byte_end":93117,"line_start":370,"line_end":370,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":93122,"byte_end":93125,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ Always returns `true` if `needle` is an empty slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":93130,"byte_end":93186,"line_start":372,"line_end":372,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":93191,"byte_end":93194,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":93199,"byte_end":93213,"line_start":374,"line_end":374,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":93218,"byte_end":93221,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":93226,"byte_end":93233,"line_start":376,"line_end":376,"column_start":5,"column_end":12}},{"value":"/ use heapless::Vec;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":93238,"byte_end":93260,"line_start":377,"line_end":377,"column_start":5,"column_end":27}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":93265,"byte_end":93293,"line_start":378,"line_end":378,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":93298,"byte_end":93301,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ let v: Vec<_, U8> = Vec::from_slice(b\"abc\").unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":93306,"byte_end":93363,"line_start":380,"line_end":380,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(v.starts_with(b\"\"), true);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":93368,"byte_end":93409,"line_start":381,"line_end":381,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(v.starts_with(b\"ab\"), true);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":93414,"byte_end":93457,"line_start":382,"line_end":382,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(v.starts_with(b\"bc\"), false);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":93462,"byte_end":93506,"line_start":383,"line_end":383,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":93511,"byte_end":93518,"line_start":384,"line_end":384,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":93523,"byte_end":93532,"line_start":385,"line_end":385,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":753},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":94187,"byte_end":94196,"line_start":410,"line_end":410,"column_start":12,"column_end":21},"name":"ends_with","qualname":"<Vec<T, N>>::ends_with","value":"fn (&self, needle: &[T]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `needle` is a suffix of the Vec.","sig":null,"attributes":[{"value":"/ Returns `true` if `needle` is a suffix of the Vec.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":93712,"byte_end":93766,"line_start":394,"line_end":394,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":93771,"byte_end":93774,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ Always returns `true` if `needle` is an empty slice.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":93779,"byte_end":93835,"line_start":396,"line_end":396,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":93840,"byte_end":93843,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":93848,"byte_end":93862,"line_start":398,"line_end":398,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":93867,"byte_end":93870,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":93875,"byte_end":93882,"line_start":400,"line_end":400,"column_start":5,"column_end":12}},{"value":"/ use heapless::Vec;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":93887,"byte_end":93909,"line_start":401,"line_end":401,"column_start":5,"column_end":27}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":93914,"byte_end":93942,"line_start":402,"line_end":402,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":93947,"byte_end":93950,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ let v: Vec<_, U8> = Vec::from_slice(b\"abc\").unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":93955,"byte_end":94012,"line_start":404,"line_end":404,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(v.ends_with(b\"\"), true);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":94017,"byte_end":94056,"line_start":405,"line_end":405,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(v.ends_with(b\"ab\"), false);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":94061,"byte_end":94103,"line_start":406,"line_end":406,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(v.ends_with(b\"bc\"), true);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":94108,"byte_end":94149,"line_start":407,"line_end":407,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":94154,"byte_end":94161,"line_start":408,"line_end":408,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":94166,"byte_end":94175,"line_start":409,"line_end":409,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":809},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":96904,"byte_end":96912,"line_start":550,"line_end":550,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::vec::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":812},{"krate":0,"index":813}],"decl_id":null,"docs":" An iterator that moves out of an [`Vec`][`Vec`].","sig":null,"attributes":[{"value":"/ An iterator that moves out of an [`Vec`][`Vec`].","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":96683,"byte_end":96735,"line_start":544,"line_end":544,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":96736,"byte_end":96739,"line_start":545,"line_end":545,"column_start":1,"column_end":4}},{"value":"/ This struct is created by calling the `into_iter` method on [`Vec`][`Vec`].","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":96740,"byte_end":96819,"line_start":546,"line_end":546,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":96820,"byte_end":96823,"line_start":547,"line_end":547,"column_start":1,"column_end":4}},{"value":"/ [`Vec`]: (https://doc.rust-lang.org/std/vec/struct.Vec.html)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":96824,"byte_end":96888,"line_start":548,"line_end":548,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":96889,"byte_end":96892,"line_start":549,"line_end":549,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":2321},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":109725,"byte_end":109738,"line_start":37,"line_end":37,"column_start":12,"column_end":25},"name":"HistoryBuffer","qualname":"::histbuf::HistoryBuffer","value":"HistoryBuffer {  }","parent":null,"children":[{"krate":0,"index":2324},{"krate":0,"index":2325}],"decl_id":null,"docs":" A \"history buffer\", similar to a write-only ring buffer of fixed length.","sig":null,"attributes":[{"value":"/ A \"history buffer\", similar to a write-only ring buffer of fixed length.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":108456,"byte_end":108532,"line_start":3,"line_end":3,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":108533,"byte_end":108536,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This buffer keeps a fixed number of elements.  On write, the oldest element","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":108537,"byte_end":108616,"line_start":5,"line_end":5,"column_start":1,"column_end":80}},{"value":"/ is overwritten. Thus, the buffer is useful to keep a history of values with","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":108617,"byte_end":108696,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/ some desired depth, and for example calculate a rolling average.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":108697,"byte_end":108765,"line_start":7,"line_end":7,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":108766,"byte_end":108769,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ The buffer is always fully initialized; depending on the constructor, the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":108770,"byte_end":108847,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/ initial value is either the default value for the element type or a supplied","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":108848,"byte_end":108928,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/ initial value. This simplifies the API and is mostly irrelevant for the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":108929,"byte_end":109004,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ intended use case.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":109005,"byte_end":109027,"line_start":12,"line_end":12,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":109028,"byte_end":109031,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":109032,"byte_end":109046,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":109047,"byte_end":109054,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/ use heapless::HistoryBuffer;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":109055,"byte_end":109087,"line_start":16,"line_end":16,"column_start":1,"column_end":33}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":109088,"byte_end":109116,"line_start":17,"line_end":17,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":109117,"byte_end":109120,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ // Initialize a new buffer with 8 elements, all initially zero.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":109121,"byte_end":109188,"line_start":19,"line_end":19,"column_start":1,"column_end":68}},{"value":"/ let mut buf = HistoryBuffer::<_, U8>::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":109189,"byte_end":109237,"line_start":20,"line_end":20,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":109238,"byte_end":109241,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ buf.write(3);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":109242,"byte_end":109259,"line_start":22,"line_end":22,"column_start":1,"column_end":18}},{"value":"/ buf.write(5);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":109260,"byte_end":109277,"line_start":23,"line_end":23,"column_start":1,"column_end":18}},{"value":"/ buf.extend(&[4, 4]);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":109278,"byte_end":109302,"line_start":24,"line_end":24,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":109303,"byte_end":109306,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ // The most recent written element is a four.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":109307,"byte_end":109356,"line_start":26,"line_end":26,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(buf.recent(), &4);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":109357,"byte_end":109390,"line_start":27,"line_end":27,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":109391,"byte_end":109394,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ // To access all elements in an unspecified order, use `as_slice()`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":109395,"byte_end":109467,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ for el in buf.as_slice() { println!(\"{:?}\", el); }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":109468,"byte_end":109522,"line_start":30,"line_end":30,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":109523,"byte_end":109526,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ // Now we can prepare an average of all values, which comes out to 2.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":109527,"byte_end":109600,"line_start":32,"line_end":32,"column_start":1,"column_end":74}},{"value":"/ let avg = buf.as_slice().iter().sum::<usize>() / buf.len();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":109601,"byte_end":109664,"line_start":33,"line_end":33,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(avg, 2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":109665,"byte_end":109688,"line_start":34,"line_end":34,"column_start":1,"column_end":24}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":109689,"byte_end":109696,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":877},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":110455,"byte_end":110458,"line_start":67,"line_end":67,"column_start":12,"column_end":15},"name":"new","qualname":"<HistoryBuffer<T, N>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new history buffer, where every element is filled with the\n default value of the type `T`.","sig":null,"attributes":[{"value":"/ Constructs a new history buffer, where every element is filled with the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":109913,"byte_end":109988,"line_start":51,"line_end":51,"column_start":5,"column_end":80}},{"value":"/ default value of the type `T`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":109993,"byte_end":110027,"line_start":52,"line_end":52,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":110032,"byte_end":110035,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ `HistoryBuffer` currently cannot be constructed in `const` context.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":110040,"byte_end":110111,"line_start":54,"line_end":54,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":110116,"byte_end":110119,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":110124,"byte_end":110138,"line_start":56,"line_end":56,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":110143,"byte_end":110146,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":110151,"byte_end":110158,"line_start":58,"line_end":58,"column_start":5,"column_end":12}},{"value":"/ use heapless::HistoryBuffer;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":110163,"byte_end":110195,"line_start":59,"line_end":59,"column_start":5,"column_end":37}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":110200,"byte_end":110228,"line_start":60,"line_end":60,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":110233,"byte_end":110236,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ // Allocate a 16-element buffer on the stack","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":110241,"byte_end":110289,"line_start":62,"line_end":62,"column_start":5,"column_end":53}},{"value":"/ let mut x: HistoryBuffer<u8, U16> = HistoryBuffer::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":110294,"byte_end":110355,"line_start":63,"line_end":63,"column_start":5,"column_end":66}},{"value":"/ // All elements are zero","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":110360,"byte_end":110388,"line_start":64,"line_end":64,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(x.as_slice(), [0; 16]);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":110393,"byte_end":110431,"line_start":65,"line_end":65,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":110436,"byte_end":110443,"line_start":66,"line_end":66,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":878},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":110672,"byte_end":110677,"line_start":76,"line_end":76,"column_start":12,"column_end":17},"name":"clear","qualname":"<HistoryBuffer<T, N>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears the buffer, replacing every element with the default value of\n type `T`.\n","sig":null,"attributes":[{"value":"/ Clears the buffer, replacing every element with the default value of","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":110570,"byte_end":110642,"line_start":74,"line_end":74,"column_start":5,"column_end":77}},{"value":"/ type `T`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":110647,"byte_end":110660,"line_start":75,"line_end":75,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":882},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":111235,"byte_end":111243,"line_start":99,"line_end":99,"column_start":12,"column_end":20},"name":"new_with","qualname":"<HistoryBuffer<T, N>>::new_with","value":"fn (t: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new history buffer, where every element is the given value.","sig":null,"attributes":[{"value":"/ Constructs a new history buffer, where every element is the given value.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":110809,"byte_end":110885,"line_start":86,"line_end":86,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":110890,"byte_end":110893,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":110898,"byte_end":110912,"line_start":88,"line_end":88,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":110917,"byte_end":110920,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":110925,"byte_end":110932,"line_start":90,"line_end":90,"column_start":5,"column_end":12}},{"value":"/ use heapless::HistoryBuffer;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":110937,"byte_end":110969,"line_start":91,"line_end":91,"column_start":5,"column_end":37}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":110974,"byte_end":111002,"line_start":92,"line_end":92,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":111007,"byte_end":111010,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ // Allocate a 16-element buffer on the stack","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":111015,"byte_end":111063,"line_start":94,"line_end":94,"column_start":5,"column_end":53}},{"value":"/ let mut x: HistoryBuffer<u8, U16> = HistoryBuffer::new_with(4);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":111068,"byte_end":111135,"line_start":95,"line_end":95,"column_start":5,"column_end":72}},{"value":"/ // All elements are four","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":111140,"byte_end":111168,"line_start":96,"line_end":96,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(x.as_slice(), [4; 16]);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":111173,"byte_end":111211,"line_start":97,"line_end":97,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":111216,"byte_end":111223,"line_start":98,"line_end":98,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":884},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":111458,"byte_end":111468,"line_start":107,"line_end":107,"column_start":12,"column_end":22},"name":"clear_with","qualname":"<HistoryBuffer<T, N>>::clear_with","value":"fn (&mut self, t: T) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears the buffer, replacing every element with the given value.\n","sig":null,"attributes":[{"value":"/ Clears the buffer, replacing every element with the given value.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":111378,"byte_end":111446,"line_start":106,"line_end":106,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":888},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":111710,"byte_end":111713,"line_start":118,"line_end":118,"column_start":12,"column_end":15},"name":"len","qualname":"<HistoryBuffer<T, N>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the capacity of the buffer, which is the length of the\n underlying backing array.\n","sig":null,"attributes":[{"value":"/ Returns the capacity of the buffer, which is the length of the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":111598,"byte_end":111664,"line_start":116,"line_end":116,"column_start":5,"column_end":71}},{"value":"/ underlying backing array.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":111669,"byte_end":111698,"line_start":117,"line_end":117,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":889},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":111845,"byte_end":111850,"line_start":123,"line_end":123,"column_start":12,"column_end":17},"name":"write","qualname":"<HistoryBuffer<T, N>>::write","value":"fn (&mut self, t: T) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Writes an element to the buffer, overwriting the oldest value.\n","sig":null,"attributes":[{"value":"/ Writes an element to the buffer, overwriting the oldest value.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":111767,"byte_end":111833,"line_start":122,"line_end":122,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":890},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":112174,"byte_end":112191,"line_start":132,"line_end":132,"column_start":12,"column_end":29},"name":"extend_from_slice","qualname":"<HistoryBuffer<T, N>>::extend_from_slice","value":"fn (&mut self, other: &[T]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clones and writes all elements in a slice to the buffer.","sig":null,"attributes":[{"value":"/ Clones and writes all elements in a slice to the buffer.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":111977,"byte_end":112037,"line_start":128,"line_end":128,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":112042,"byte_end":112045,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ If the slice is longer than the buffer, only the last `self.len()`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":112050,"byte_end":112120,"line_start":130,"line_end":130,"column_start":5,"column_end":75}},{"value":"/ elements will actually be stored.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":112125,"byte_end":112162,"line_start":131,"line_end":131,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":891},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":112689,"byte_end":112695,"line_start":154,"line_end":154,"column_start":12,"column_end":18},"name":"recent","qualname":"<HistoryBuffer<T, N>>::recent","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the most recently written value.","sig":null,"attributes":[{"value":"/ Returns a reference to the most recently written value.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":112337,"byte_end":112396,"line_start":141,"line_end":141,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":112401,"byte_end":112404,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":112409,"byte_end":112423,"line_start":143,"line_end":143,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":112428,"byte_end":112431,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":112436,"byte_end":112443,"line_start":145,"line_end":145,"column_start":5,"column_end":12}},{"value":"/ use heapless::HistoryBuffer;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":112448,"byte_end":112480,"line_start":146,"line_end":146,"column_start":5,"column_end":37}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":112485,"byte_end":112513,"line_start":147,"line_end":147,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":112518,"byte_end":112521,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ let mut x: HistoryBuffer<u8, U16> = HistoryBuffer::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":112526,"byte_end":112587,"line_start":149,"line_end":149,"column_start":5,"column_end":66}},{"value":"/ x.write(4);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":112592,"byte_end":112607,"line_start":150,"line_end":150,"column_start":5,"column_end":20}},{"value":"/ x.write(10);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":112612,"byte_end":112628,"line_start":151,"line_end":151,"column_start":5,"column_end":21}},{"value":"/ assert_eq!(x.recent(), &10);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":112633,"byte_end":112665,"line_start":152,"line_end":152,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":112670,"byte_end":112677,"line_start":153,"line_end":153,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":892},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":112945,"byte_end":112953,"line_start":160,"line_end":160,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<HistoryBuffer<T, N>>::as_slice","value":"fn (&self) -> &[T]","parent":null,"children":[],"decl_id":null,"docs":" Returns the array slice backing the buffer, without keeping track\n of the write position. Therefore, the element order is unspecified.\n","sig":null,"attributes":[{"value":"/ Returns the array slice backing the buffer, without keeping track","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":112788,"byte_end":112857,"line_start":158,"line_end":158,"column_start":5,"column_end":74}},{"value":"/ of the write position. Therefore, the element order is unspecified.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":112862,"byte_end":112933,"line_start":159,"line_end":159,"column_start":5,"column_end":76}}]},{"kind":"Mod","id":{"krate":0,"index":904},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"binary_heap","qualname":"::binary_heap","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","parent":null,"children":[{"krate":0,"index":905},{"krate":0,"index":916},{"krate":0,"index":919},{"krate":0,"index":920},{"krate":0,"index":921},{"krate":0,"index":922},{"krate":0,"index":926},{"krate":0,"index":932},{"krate":0,"index":951},{"krate":0,"index":957},{"krate":0,"index":965},{"krate":0,"index":972},{"krate":0,"index":977},{"krate":0,"index":983},{"krate":0,"index":988},{"krate":0,"index":994},{"krate":0,"index":998},{"krate":0,"index":1003},{"krate":0,"index":1008},{"krate":0,"index":1013},{"krate":0,"index":1018}],"decl_id":null,"docs":" A priority queue implemented with a binary heap.","sig":null,"attributes":[{"value":"! A priority queue implemented with a binary heap.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":115050,"byte_end":115102,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":115103,"byte_end":115106,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! Insertion and popping the largest element have `O(log n)` time complexity. Checking the largest","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":115107,"byte_end":115206,"line_start":3,"line_end":3,"column_start":1,"column_end":100}},{"value":"! / smallest element is `O(1)`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":115207,"byte_end":115240,"line_start":4,"line_end":4,"column_start":1,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":920},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":115728,"byte_end":115731,"line_start":24,"line_end":24,"column_start":10,"column_end":13},"name":"Min","qualname":"::binary_heap::Min","value":"Min::{}","parent":null,"children":[],"decl_id":null,"docs":" Min-heap\n","sig":null,"attributes":[{"value":"/ Min-heap","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":115706,"byte_end":115718,"line_start":23,"line_end":23,"column_start":1,"column_end":13}}]},{"kind":"Enum","id":{"krate":0,"index":921},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":115758,"byte_end":115761,"line_start":27,"line_end":27,"column_start":10,"column_end":13},"name":"Max","qualname":"::binary_heap::Max","value":"Max::{}","parent":null,"children":[],"decl_id":null,"docs":" Max-heap\n","sig":null,"attributes":[{"value":"/ Max-heap","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":115736,"byte_end":115748,"line_start":26,"line_end":26,"column_start":1,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":925},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":115942,"byte_end":115945,"line_start":32,"line_end":32,"column_start":18,"column_end":21},"name":"new","qualname":"<crate::i::BinaryHeap<A, K>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" `BinaryHeap` `const` constructor; wrap the returned value in\n [`BinaryHeap`](../struct.BinaryHeap.html)\n","sig":null,"attributes":[{"value":"/ `BinaryHeap` `const` constructor; wrap the returned value in","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":115810,"byte_end":115874,"line_start":30,"line_end":30,"column_start":5,"column_end":69}},{"value":"/ [`BinaryHeap`](../struct.BinaryHeap.html)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":115879,"byte_end":115924,"line_start":31,"line_end":31,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":926},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":117625,"byte_end":117635,"line_start":87,"line_end":87,"column_start":12,"column_end":22},"name":"BinaryHeap","qualname":"::binary_heap::BinaryHeap","value":"","parent":null,"children":[],"decl_id":null,"docs":" A priority queue implemented with a binary heap.","sig":null,"attributes":[{"value":"/ A priority queue implemented with a binary heap.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":116064,"byte_end":116116,"line_start":40,"line_end":40,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":116117,"byte_end":116120,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ This can be either a min-heap or a max-heap.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":116121,"byte_end":116169,"line_start":42,"line_end":42,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":116170,"byte_end":116173,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ It is a logic error for an item to be modified in such a way that the item's ordering relative","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":116174,"byte_end":116272,"line_start":44,"line_end":44,"column_start":1,"column_end":99}},{"value":"/ to any other item, as determined by the `Ord` trait, changes while it is in the heap. This is","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":116273,"byte_end":116370,"line_start":45,"line_end":45,"column_start":1,"column_end":98}},{"value":"/ normally only possible through `Cell`, `RefCell`, global state, I/O, or unsafe code.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":116371,"byte_end":116459,"line_start":46,"line_end":46,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":116460,"byte_end":116463,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":116464,"byte_end":116471,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/ use heapless::binary_heap::{BinaryHeap, Max};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":116472,"byte_end":116521,"line_start":49,"line_end":49,"column_start":1,"column_end":50}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":116522,"byte_end":116550,"line_start":50,"line_end":50,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":116551,"byte_end":116554,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ let mut heap: BinaryHeap<_, U8, Max> = BinaryHeap::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":116555,"byte_end":116616,"line_start":52,"line_end":52,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":116617,"byte_end":116620,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ // We can use peek to look at the next item in the heap. In this case,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":116621,"byte_end":116695,"line_start":54,"line_end":54,"column_start":1,"column_end":75}},{"value":"/ // there's no items in there yet so we get None.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":116696,"byte_end":116748,"line_start":55,"line_end":55,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(heap.peek(), None);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":116749,"byte_end":116783,"line_start":56,"line_end":56,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":116784,"byte_end":116787,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ // Let's add some scores...","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":116788,"byte_end":116819,"line_start":58,"line_end":58,"column_start":1,"column_end":32}},{"value":"/ heap.push(1).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":116820,"byte_end":116846,"line_start":59,"line_end":59,"column_start":1,"column_end":27}},{"value":"/ heap.push(5).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":116847,"byte_end":116873,"line_start":60,"line_end":60,"column_start":1,"column_end":27}},{"value":"/ heap.push(2).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":116874,"byte_end":116900,"line_start":61,"line_end":61,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":116901,"byte_end":116904,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ // Now peek shows the most important item in the heap.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":116905,"byte_end":116963,"line_start":63,"line_end":63,"column_start":1,"column_end":59}},{"value":"/ assert_eq!(heap.peek(), Some(&5));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":116964,"byte_end":117002,"line_start":64,"line_end":64,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":117003,"byte_end":117006,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ // We can check the length of a heap.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":117007,"byte_end":117048,"line_start":66,"line_end":66,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(heap.len(), 3);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":117049,"byte_end":117079,"line_start":67,"line_end":67,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":117080,"byte_end":117083,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ // We can iterate over the items in the heap, although they are returned in","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":117084,"byte_end":117163,"line_start":69,"line_end":69,"column_start":1,"column_end":80}},{"value":"/ // a random order.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":117164,"byte_end":117186,"line_start":70,"line_end":70,"column_start":1,"column_end":23}},{"value":"/ for x in &heap {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":117187,"byte_end":117207,"line_start":71,"line_end":71,"column_start":1,"column_end":21}},{"value":"/     println!(\"{}\", x);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":117208,"byte_end":117234,"line_start":72,"line_end":72,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":117235,"byte_end":117240,"line_start":73,"line_end":73,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":117241,"byte_end":117244,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ // If we instead pop these scores, they should come back in order.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":117245,"byte_end":117315,"line_start":75,"line_end":75,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(heap.pop(), Some(5));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":117316,"byte_end":117352,"line_start":76,"line_end":76,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(heap.pop(), Some(2));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":117353,"byte_end":117389,"line_start":77,"line_end":77,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(heap.pop(), Some(1));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":117390,"byte_end":117426,"line_start":78,"line_end":78,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(heap.pop(), None);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":117427,"byte_end":117460,"line_start":79,"line_end":79,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":117461,"byte_end":117464,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ // We can clear the heap of any remaining items.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":117465,"byte_end":117517,"line_start":81,"line_end":81,"column_start":1,"column_end":53}},{"value":"/ heap.clear();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":117518,"byte_end":117535,"line_start":82,"line_end":82,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":117536,"byte_end":117539,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ // The heap should now be empty.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":117540,"byte_end":117576,"line_start":84,"line_end":84,"column_start":1,"column_end":37}},{"value":"/ assert!(heap.is_empty())","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":117577,"byte_end":117605,"line_start":85,"line_end":85,"column_start":1,"column_end":29}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":117606,"byte_end":117613,"line_start":86,"line_end":86,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":936},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":118388,"byte_end":118391,"line_start":115,"line_end":115,"column_start":12,"column_end":15},"name":"new","qualname":"<BinaryHeap<T, N, K>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty BinaryHeap as a $K-heap.","sig":null,"attributes":[{"value":"/ Creates an empty BinaryHeap as a $K-heap.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":117897,"byte_end":117942,"line_start":102,"line_end":102,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":117947,"byte_end":117950,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":117955,"byte_end":117962,"line_start":104,"line_end":104,"column_start":5,"column_end":12}},{"value":"/ use heapless::binary_heap::{BinaryHeap, Max};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":117967,"byte_end":118016,"line_start":105,"line_end":105,"column_start":5,"column_end":54}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":118021,"byte_end":118049,"line_start":106,"line_end":106,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":118054,"byte_end":118057,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ // allocate the binary heap on the stack","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":118062,"byte_end":118106,"line_start":108,"line_end":108,"column_start":5,"column_end":49}},{"value":"/ let mut heap: BinaryHeap<_, U8, Max> = BinaryHeap::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":118111,"byte_end":118172,"line_start":109,"line_end":109,"column_start":5,"column_end":66}},{"value":"/ heap.push(4).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":118177,"byte_end":118203,"line_start":110,"line_end":110,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":118208,"byte_end":118211,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ // allocate the binary heap in a static variable","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":118216,"byte_end":118268,"line_start":112,"line_end":112,"column_start":5,"column_end":57}},{"value":"/ static mut HEAP: BinaryHeap<i32, U8, Max> = BinaryHeap(heapless::i::BinaryHeap::new());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":118273,"byte_end":118364,"line_start":113,"line_end":113,"column_start":5,"column_end":96}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":118369,"byte_end":118376,"line_start":114,"line_end":114,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":937},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":118540,"byte_end":118548,"line_start":121,"line_end":121,"column_start":12,"column_end":20},"name":"capacity","qualname":"<BinaryHeap<T, N, K>>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the capacity of the binary heap.\n","sig":null,"attributes":[{"value":"/ Returns the capacity of the binary heap.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":118484,"byte_end":118528,"line_start":120,"line_end":120,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":938},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":119032,"byte_end":119037,"line_start":141,"line_end":141,"column_start":12,"column_end":17},"name":"clear","qualname":"<BinaryHeap<T, N, K>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Drops all items from the binary heap.","sig":null,"attributes":[{"value":"/ Drops all items from the binary heap.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":118609,"byte_end":118650,"line_start":125,"line_end":125,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":118655,"byte_end":118658,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":118663,"byte_end":118670,"line_start":127,"line_end":127,"column_start":5,"column_end":12}},{"value":"/ use heapless::binary_heap::{BinaryHeap, Max};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":118675,"byte_end":118724,"line_start":128,"line_end":128,"column_start":5,"column_end":54}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":118729,"byte_end":118757,"line_start":129,"line_end":129,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":118762,"byte_end":118765,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ let mut heap: BinaryHeap<_, U8, Max> = BinaryHeap::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":118770,"byte_end":118831,"line_start":131,"line_end":131,"column_start":5,"column_end":66}},{"value":"/ heap.push(1).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":118836,"byte_end":118862,"line_start":132,"line_end":132,"column_start":5,"column_end":31}},{"value":"/ heap.push(3).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":118867,"byte_end":118893,"line_start":133,"line_end":133,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":118898,"byte_end":118901,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ assert!(!heap.is_empty());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":118906,"byte_end":118936,"line_start":135,"line_end":135,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":118941,"byte_end":118944,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ heap.clear();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":118949,"byte_end":118966,"line_start":137,"line_end":137,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":118971,"byte_end":118974,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ assert!(heap.is_empty());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":118979,"byte_end":119008,"line_start":139,"line_end":139,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":119013,"byte_end":119020,"line_start":140,"line_end":140,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":939},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":119442,"byte_end":119445,"line_start":157,"line_end":157,"column_start":12,"column_end":15},"name":"len","qualname":"<BinaryHeap<T, N, K>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the length of the binary heap.","sig":null,"attributes":[{"value":"/ Returns the length of the binary heap.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":119090,"byte_end":119132,"line_start":145,"line_end":145,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":119137,"byte_end":119140,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":119145,"byte_end":119152,"line_start":147,"line_end":147,"column_start":5,"column_end":12}},{"value":"/ use heapless::binary_heap::{BinaryHeap, Max};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":119157,"byte_end":119206,"line_start":148,"line_end":148,"column_start":5,"column_end":54}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":119211,"byte_end":119239,"line_start":149,"line_end":149,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":119244,"byte_end":119247,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ let mut heap: BinaryHeap<_, U8, Max> = BinaryHeap::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":119252,"byte_end":119313,"line_start":151,"line_end":151,"column_start":5,"column_end":66}},{"value":"/ heap.push(1).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":119318,"byte_end":119344,"line_start":152,"line_end":152,"column_start":5,"column_end":31}},{"value":"/ heap.push(3).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":119349,"byte_end":119375,"line_start":153,"line_end":153,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":119380,"byte_end":119383,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(heap.len(), 2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":119388,"byte_end":119418,"line_start":155,"line_end":155,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":119423,"byte_end":119430,"line_start":156,"line_end":156,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":940},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":119929,"byte_end":119937,"line_start":177,"line_end":177,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<BinaryHeap<T, N, K>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the binary heap is empty.","sig":null,"attributes":[{"value":"/ Checks if the binary heap is empty.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":119499,"byte_end":119538,"line_start":161,"line_end":161,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":119543,"byte_end":119546,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":119551,"byte_end":119558,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/ use heapless::binary_heap::{BinaryHeap, Max};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":119563,"byte_end":119612,"line_start":164,"line_end":164,"column_start":5,"column_end":54}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":119617,"byte_end":119645,"line_start":165,"line_end":165,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":119650,"byte_end":119653,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ let mut heap: BinaryHeap<_, U8, Max> = BinaryHeap::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":119658,"byte_end":119719,"line_start":167,"line_end":167,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":119724,"byte_end":119727,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ assert!(heap.is_empty());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":119732,"byte_end":119761,"line_start":169,"line_end":169,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":119766,"byte_end":119769,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ heap.push(3).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":119774,"byte_end":119800,"line_start":171,"line_end":171,"column_start":5,"column_end":31}},{"value":"/ heap.push(5).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":119805,"byte_end":119831,"line_start":172,"line_end":172,"column_start":5,"column_end":31}},{"value":"/ heap.push(1).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":119836,"byte_end":119862,"line_start":173,"line_end":173,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":119867,"byte_end":119870,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ assert!(!heap.is_empty());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":119875,"byte_end":119905,"line_start":175,"line_end":175,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":119910,"byte_end":119917,"line_start":176,"line_end":176,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":941},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":120543,"byte_end":120547,"line_start":199,"line_end":199,"column_start":12,"column_end":16},"name":"iter","qualname":"<BinaryHeap<T, N, K>>::iter","value":"fn (&self) -> slice::Iter<'_, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator visiting all values in the underlying vector, in arbitrary order.","sig":null,"attributes":[{"value":"/ Returns an iterator visiting all values in the underlying vector, in arbitrary order.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":119990,"byte_end":120079,"line_start":181,"line_end":181,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":120084,"byte_end":120087,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":120092,"byte_end":120099,"line_start":183,"line_end":183,"column_start":5,"column_end":12}},{"value":"/ use heapless::binary_heap::{BinaryHeap, Max};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":120104,"byte_end":120153,"line_start":184,"line_end":184,"column_start":5,"column_end":54}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":120158,"byte_end":120186,"line_start":185,"line_end":185,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":120191,"byte_end":120194,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ let mut heap: BinaryHeap<_, U8, Max> = BinaryHeap::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":120199,"byte_end":120260,"line_start":187,"line_end":187,"column_start":5,"column_end":66}},{"value":"/ heap.push(1).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":120265,"byte_end":120291,"line_start":188,"line_end":188,"column_start":5,"column_end":31}},{"value":"/ heap.push(2).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":120296,"byte_end":120322,"line_start":189,"line_end":189,"column_start":5,"column_end":31}},{"value":"/ heap.push(3).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":120327,"byte_end":120353,"line_start":190,"line_end":190,"column_start":5,"column_end":31}},{"value":"/ heap.push(4).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":120358,"byte_end":120384,"line_start":191,"line_end":191,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":120389,"byte_end":120392,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ // Print 1, 2, 3, 4 in arbitrary order","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":120397,"byte_end":120439,"line_start":193,"line_end":193,"column_start":5,"column_end":47}},{"value":"/ for x in heap.iter() {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":120444,"byte_end":120470,"line_start":194,"line_end":194,"column_start":5,"column_end":31}},{"value":"/     println!(\"{}\", x);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":120475,"byte_end":120501,"line_start":195,"line_end":195,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":120506,"byte_end":120509,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":120514,"byte_end":120519,"line_start":197,"line_end":197,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":120524,"byte_end":120531,"line_start":198,"line_end":198,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":942},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":120855,"byte_end":120863,"line_start":207,"line_end":207,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<BinaryHeap<T, N, K>>::iter_mut","value":"fn (&mut self) -> slice::IterMut<'_, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable iterator visiting all values in the underlying vector, in arbitrary order.","sig":null,"attributes":[{"value":"/ Returns a mutable iterator visiting all values in the underlying vector, in arbitrary order.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":120628,"byte_end":120724,"line_start":203,"line_end":203,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":120729,"byte_end":120732,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ **WARNING** Mutating the items in the binary heap can leave the heap in an inconsistent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":120737,"byte_end":120828,"line_start":205,"line_end":205,"column_start":5,"column_end":96}},{"value":"/ state.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":120833,"byte_end":120843,"line_start":206,"line_end":206,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":943},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":121470,"byte_end":121474,"line_start":226,"line_end":226,"column_start":12,"column_end":16},"name":"peek","qualname":"<BinaryHeap<T, N, K>>::peek","value":"fn (&self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the *top* (greatest if max-heap, smallest if min-heap) item in the binary heap, or\n None if it is empty.","sig":null,"attributes":[{"value":"/ Returns the *top* (greatest if max-heap, smallest if min-heap) item in the binary heap, or","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":120959,"byte_end":121053,"line_start":211,"line_end":211,"column_start":5,"column_end":99}},{"value":"/ None if it is empty.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":121058,"byte_end":121082,"line_start":212,"line_end":212,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":121087,"byte_end":121090,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":121095,"byte_end":121102,"line_start":214,"line_end":214,"column_start":5,"column_end":12}},{"value":"/ use heapless::binary_heap::{BinaryHeap, Max};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":121107,"byte_end":121156,"line_start":215,"line_end":215,"column_start":5,"column_end":54}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":121161,"byte_end":121189,"line_start":216,"line_end":216,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":121194,"byte_end":121197,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ let mut heap: BinaryHeap<_, U8, Max> = BinaryHeap::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":121202,"byte_end":121263,"line_start":218,"line_end":218,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(heap.peek(), None);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":121268,"byte_end":121302,"line_start":219,"line_end":219,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":121307,"byte_end":121310,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ heap.push(1).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":121315,"byte_end":121341,"line_start":221,"line_end":221,"column_start":5,"column_end":31}},{"value":"/ heap.push(5).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":121346,"byte_end":121372,"line_start":222,"line_end":222,"column_start":5,"column_end":31}},{"value":"/ heap.push(2).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":121377,"byte_end":121403,"line_start":223,"line_end":223,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(heap.peek(), Some(&5));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":121408,"byte_end":121446,"line_start":224,"line_end":224,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":121451,"byte_end":121458,"line_start":225,"line_end":225,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":944},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":122283,"byte_end":122291,"line_start":257,"line_end":257,"column_start":12,"column_end":20},"name":"peek_mut","qualname":"<BinaryHeap<T, N, K>>::peek_mut","value":"fn (&mut self) -> Option<PeekMut<'_, T, N, K>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the greatest item in the binary heap, or\n `None` if it is empty.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the greatest item in the binary heap, or","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":121547,"byte_end":121622,"line_start":230,"line_end":230,"column_start":5,"column_end":80}},{"value":"/ `None` if it is empty.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":121627,"byte_end":121653,"line_start":231,"line_end":231,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":121658,"byte_end":121661,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ Note: If the `PeekMut` value is leaked, the heap may be in an","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":121666,"byte_end":121731,"line_start":233,"line_end":233,"column_start":5,"column_end":70}},{"value":"/ inconsistent state.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":121736,"byte_end":121759,"line_start":234,"line_end":234,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":121764,"byte_end":121767,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":121772,"byte_end":121786,"line_start":236,"line_end":236,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":121791,"byte_end":121794,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":121799,"byte_end":121815,"line_start":238,"line_end":238,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":121820,"byte_end":121823,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":121828,"byte_end":121835,"line_start":240,"line_end":240,"column_start":5,"column_end":12}},{"value":"/ use heapless::binary_heap::{BinaryHeap, Max};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":121840,"byte_end":121889,"line_start":241,"line_end":241,"column_start":5,"column_end":54}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":121894,"byte_end":121922,"line_start":242,"line_end":242,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":121927,"byte_end":121930,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ let mut heap: BinaryHeap<_, U8, Max> = BinaryHeap::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":121935,"byte_end":121996,"line_start":244,"line_end":244,"column_start":5,"column_end":66}},{"value":"/ assert!(heap.peek_mut().is_none());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":122001,"byte_end":122040,"line_start":245,"line_end":245,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":122045,"byte_end":122048,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ heap.push(1);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":122053,"byte_end":122070,"line_start":247,"line_end":247,"column_start":5,"column_end":22}},{"value":"/ heap.push(5);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":122075,"byte_end":122092,"line_start":248,"line_end":248,"column_start":5,"column_end":22}},{"value":"/ heap.push(2);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":122097,"byte_end":122114,"line_start":249,"line_end":249,"column_start":5,"column_end":22}},{"value":"/ {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":122119,"byte_end":122124,"line_start":250,"line_end":250,"column_start":5,"column_end":10}},{"value":"/     let mut val = heap.peek_mut().unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":122129,"byte_end":122176,"line_start":251,"line_end":251,"column_start":5,"column_end":52}},{"value":"/     *val = 0;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":122181,"byte_end":122198,"line_start":252,"line_end":252,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":122203,"byte_end":122208,"line_start":253,"line_end":253,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":122213,"byte_end":122216,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(heap.peek(), Some(&2));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":122221,"byte_end":122259,"line_start":255,"line_end":255,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":122264,"byte_end":122271,"line_start":256,"line_end":256,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":945},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":123054,"byte_end":123057,"line_start":283,"line_end":283,"column_start":12,"column_end":15},"name":"pop","qualname":"<BinaryHeap<T, N, K>>::pop","value":"fn (&mut self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes the *top* (greatest if max-heap, smallest if min-heap) item from the binary heap and\n returns it, or None if it is empty.","sig":null,"attributes":[{"value":"/ Removes the *top* (greatest if max-heap, smallest if min-heap) item from the binary heap and","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":122519,"byte_end":122615,"line_start":268,"line_end":268,"column_start":5,"column_end":101}},{"value":"/ returns it, or None if it is empty.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":122620,"byte_end":122659,"line_start":269,"line_end":269,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":122664,"byte_end":122667,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":122672,"byte_end":122679,"line_start":271,"line_end":271,"column_start":5,"column_end":12}},{"value":"/ use heapless::binary_heap::{BinaryHeap, Max};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":122684,"byte_end":122733,"line_start":272,"line_end":272,"column_start":5,"column_end":54}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":122738,"byte_end":122766,"line_start":273,"line_end":273,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":122771,"byte_end":122774,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ let mut heap: BinaryHeap<_, U8, Max> = BinaryHeap::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":122779,"byte_end":122840,"line_start":275,"line_end":275,"column_start":5,"column_end":66}},{"value":"/ heap.push(1).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":122845,"byte_end":122871,"line_start":276,"line_end":276,"column_start":5,"column_end":31}},{"value":"/ heap.push(3).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":122876,"byte_end":122902,"line_start":277,"line_end":277,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":122907,"byte_end":122910,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(heap.pop(), Some(3));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":122915,"byte_end":122951,"line_start":279,"line_end":279,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(heap.pop(), Some(1));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":122956,"byte_end":122992,"line_start":280,"line_end":280,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(heap.pop(), None);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":122997,"byte_end":123030,"line_start":281,"line_end":281,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":123035,"byte_end":123042,"line_start":282,"line_end":282,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":946},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":123399,"byte_end":123412,"line_start":293,"line_end":293,"column_start":19,"column_end":32},"name":"pop_unchecked","qualname":"<BinaryHeap<T, N, K>>::pop_unchecked","value":"fn (&mut self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Removes the *top* (greatest if max-heap, smallest if min-heap) item from the binary heap and\n returns it, without checking if the binary heap is empty.\n","sig":null,"attributes":[{"value":"/ Removes the *top* (greatest if max-heap, smallest if min-heap) item from the binary heap and","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":123218,"byte_end":123314,"line_start":291,"line_end":291,"column_start":5,"column_end":101}},{"value":"/ returns it, without checking if the binary heap is empty.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":123319,"byte_end":123380,"line_start":292,"line_end":292,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":947},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":124096,"byte_end":124100,"line_start":317,"line_end":317,"column_start":12,"column_end":16},"name":"push","qualname":"<BinaryHeap<T, N, K>>::push","value":"fn (&mut self, item: T) -> Result<(), T>","parent":null,"children":[],"decl_id":null,"docs":" Pushes an item onto the binary heap.","sig":null,"attributes":[{"value":"/ Pushes an item onto the binary heap.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":123672,"byte_end":123712,"line_start":303,"line_end":303,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":123717,"byte_end":123720,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":123725,"byte_end":123732,"line_start":305,"line_end":305,"column_start":5,"column_end":12}},{"value":"/ use heapless::binary_heap::{BinaryHeap, Max};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":123737,"byte_end":123786,"line_start":306,"line_end":306,"column_start":5,"column_end":54}},{"value":"/ use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":123791,"byte_end":123819,"line_start":307,"line_end":307,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":123824,"byte_end":123827,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ let mut heap: BinaryHeap<_, U8, Max> = BinaryHeap::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":123832,"byte_end":123893,"line_start":309,"line_end":309,"column_start":5,"column_end":66}},{"value":"/ heap.push(3).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":123898,"byte_end":123924,"line_start":310,"line_end":310,"column_start":5,"column_end":31}},{"value":"/ heap.push(5).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":123929,"byte_end":123955,"line_start":311,"line_end":311,"column_start":5,"column_end":31}},{"value":"/ heap.push(1).unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":123960,"byte_end":123986,"line_start":312,"line_end":312,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":123991,"byte_end":123994,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(heap.len(), 3);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":123999,"byte_end":124029,"line_start":314,"line_end":314,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(heap.peek(), Some(&5));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":124034,"byte_end":124072,"line_start":315,"line_end":315,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":124077,"byte_end":124084,"line_start":316,"line_end":316,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":948},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":124382,"byte_end":124396,"line_start":327,"line_end":327,"column_start":19,"column_end":33},"name":"push_unchecked","qualname":"<BinaryHeap<T, N, K>>::push_unchecked","value":"fn (&mut self, item: T) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Pushes an item onto the binary heap without first checking if it's full.\n","sig":null,"attributes":[{"value":"/ Pushes an item onto the binary heap without first checking if it's full.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":124287,"byte_end":124363,"line_start":326,"line_end":326,"column_start":5,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":965},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":127901,"byte_end":127908,"line_start":440,"line_end":440,"column_start":12,"column_end":19},"name":"PeekMut","qualname":"::binary_heap::PeekMut","value":"PeekMut {  }","parent":null,"children":[{"krate":0,"index":970},{"krate":0,"index":971}],"decl_id":null,"docs":" Structure wrapping a mutable reference to the greatest item on a\n `BinaryHeap`.","sig":null,"attributes":[{"value":"/ Structure wrapping a mutable reference to the greatest item on a","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":127584,"byte_end":127652,"line_start":432,"line_end":432,"column_start":1,"column_end":69}},{"value":"/ `BinaryHeap`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":127653,"byte_end":127670,"line_start":433,"line_end":433,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":127671,"byte_end":127674,"line_start":434,"line_end":434,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`peek_mut`] method on [`BinaryHeap`]. See","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":127675,"byte_end":127753,"line_start":435,"line_end":435,"column_start":1,"column_end":79}},{"value":"/ its documentation for more.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":127754,"byte_end":127785,"line_start":436,"line_end":436,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":127786,"byte_end":127789,"line_start":437,"line_end":437,"column_start":1,"column_end":4}},{"value":"/ [`peek_mut`]: struct.BinaryHeap.html#method.peek_mut","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":127790,"byte_end":127846,"line_start":438,"line_end":438,"column_start":1,"column_end":57}},{"value":"/ [`BinaryHeap`]: struct.BinaryHeap.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":127847,"byte_end":127889,"line_start":439,"line_end":439,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":993},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":129090,"byte_end":129093,"line_start":497,"line_end":497,"column_start":12,"column_end":15},"name":"pop","qualname":"<PeekMut>::pop","value":"fn (mut this: PeekMut<'a, T, N, K>) -> T","parent":null,"children":[],"decl_id":null,"docs":" Removes the peeked value from the heap and returns it.\n","sig":null,"attributes":[{"value":"/ Removes the peeked value from the heap and returns it.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":129020,"byte_end":129078,"line_start":496,"line_end":496,"column_start":5,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":1026},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/i.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"i","qualname":"::i","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/i.rs","parent":null,"children":[{"krate":0,"index":1027},{"krate":0,"index":1030},{"krate":0,"index":1033},{"krate":0,"index":1038},{"krate":0,"index":1041},{"krate":0,"index":1048},{"krate":0,"index":1051}],"decl_id":null,"docs":" Unfortunate implementation detail required to construct `heapless` types in const context\n","sig":null,"attributes":[{"value":"! Unfortunate implementation detail required to construct `heapless` types in const context","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/i.rs","byte_start":133790,"byte_end":133883,"line_start":1,"line_end":1,"column_start":1,"column_end":94}}]},{"kind":"Struct","id":{"krate":0,"index":1033},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/i.rs","byte_start":134087,"byte_end":134097,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"BinaryHeap","qualname":"::i::BinaryHeap","value":"BinaryHeap {  }","parent":null,"children":[{"krate":0,"index":1036},{"krate":0,"index":1037}],"decl_id":null,"docs":" `const-fn` version of [`BinaryHeap`](../binary_heap/struct.BinaryHeap.html)\n","sig":null,"attributes":[{"value":"/ `const-fn` version of [`BinaryHeap`](../binary_heap/struct.BinaryHeap.html)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/i.rs","byte_start":133996,"byte_end":134075,"line_start":8,"line_end":8,"column_start":1,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":1038},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/i.rs","byte_start":134253,"byte_end":134262,"line_start":15,"line_end":15,"column_start":12,"column_end":21},"name":"LinearMap","qualname":"::i::LinearMap","value":"LinearMap {  }","parent":null,"children":[{"krate":0,"index":1040}],"decl_id":null,"docs":" `const-fn` version of [`LinearMap`](../struct.LinearMap.html)\n","sig":null,"attributes":[{"value":"/ `const-fn` version of [`LinearMap`](../struct.LinearMap.html)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/i.rs","byte_start":134176,"byte_end":134241,"line_start":14,"line_end":14,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":1041},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/i.rs","byte_start":134402,"byte_end":134407,"line_start":21,"line_end":21,"column_start":12,"column_end":17},"name":"Queue","qualname":"::i::Queue","value":"Queue {  }","parent":null,"children":[{"krate":0,"index":1045},{"krate":0,"index":1046},{"krate":0,"index":1047}],"decl_id":null,"docs":" `const-fn` version of [`spsc::Queue`](../spsc/struct.Queue.html)\n","sig":null,"attributes":[{"value":"/ `const-fn` version of [`spsc::Queue`](../spsc/struct.Queue.html)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/i.rs","byte_start":134302,"byte_end":134370,"line_start":19,"line_end":19,"column_start":1,"column_end":69}},{"value":"cfg(has_atomics)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/i.rs","byte_start":134371,"byte_end":134390,"line_start":20,"line_end":20,"column_start":1,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":1048},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/i.rs","byte_start":134709,"byte_end":134715,"line_start":32,"line_end":32,"column_start":12,"column_end":18},"name":"String","qualname":"::i::String","value":"String {  }","parent":null,"children":[{"krate":0,"index":1050}],"decl_id":null,"docs":" `const-fn` version of [`String`](../struct.String.html)\n","sig":null,"attributes":[{"value":"/ `const-fn` version of [`String`](../struct.String.html)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/i.rs","byte_start":134638,"byte_end":134697,"line_start":31,"line_end":31,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1051},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/i.rs","byte_start":134817,"byte_end":134820,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"Vec","qualname":"::i::Vec","value":"Vec {  }","parent":null,"children":[{"krate":0,"index":1053},{"krate":0,"index":1054}],"decl_id":null,"docs":" `const-fn` version of [`Vec`](../struct.Vec.html)\n","sig":null,"attributes":[{"value":"/ `const-fn` version of [`Vec`](../struct.Vec.html)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/i.rs","byte_start":134752,"byte_end":134805,"line_start":36,"line_end":36,"column_start":1,"column_end":54}}]},{"kind":"Mod","id":{"krate":0,"index":1055},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mpmc","qualname":"::mpmc","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","parent":null,"children":[{"krate":0,"index":1056},{"krate":0,"index":1062},{"krate":0,"index":1068},{"krate":0,"index":1074},{"krate":0,"index":1076},{"krate":0,"index":1082},{"krate":0,"index":1088},{"krate":0,"index":1090},{"krate":0,"index":1096},{"krate":0,"index":1102},{"krate":0,"index":1104},{"krate":0,"index":1110},{"krate":0,"index":1116},{"krate":0,"index":1118},{"krate":0,"index":1124},{"krate":0,"index":1130},{"krate":0,"index":1132},{"krate":0,"index":1138},{"krate":0,"index":1144},{"krate":0,"index":1146},{"krate":0,"index":1150},{"krate":0,"index":1153},{"krate":0,"index":1155}],"decl_id":null,"docs":" A fixed capacity Multiple-Producer Multiple-Consumer (MPMC) lock-free queue","sig":null,"attributes":[{"value":"cfg(all(has_cas, feature = \"cas\"))","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":4052,"byte_end":4089,"line_start":103,"line_end":103,"column_start":1,"column_end":38}},{"value":"! A fixed capacity Multiple-Producer Multiple-Consumer (MPMC) lock-free queue","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":134895,"byte_end":134974,"line_start":1,"line_end":1,"column_start":1,"column_end":80}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":134975,"byte_end":134978,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! NOTE: This module is not available on targets that do *not* support CAS operations, e.g. ARMv6-M","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":134979,"byte_end":135079,"line_start":3,"line_end":3,"column_start":1,"column_end":101}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":135080,"byte_end":135083,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! # Example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":135084,"byte_end":135097,"line_start":5,"line_end":5,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":135098,"byte_end":135101,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! This queue can be constructed in \"const context\". Placing it in a `static` variable lets *all*","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":135102,"byte_end":135200,"line_start":7,"line_end":7,"column_start":1,"column_end":99}},{"value":"! contexts (interrupts / threads / `main`) safely enqueue and dequeue items from it.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":135201,"byte_end":135287,"line_start":8,"line_end":8,"column_start":1,"column_end":87}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":135288,"byte_end":135291,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! ``` ignore","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":135292,"byte_end":135306,"line_start":10,"line_end":10,"column_start":1,"column_end":15}},{"value":"! #![no_main]","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":135307,"byte_end":135322,"line_start":11,"line_end":11,"column_start":1,"column_end":16}},{"value":"! #![no_std]","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":135323,"byte_end":135337,"line_start":12,"line_end":12,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":135338,"byte_end":135341,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! use panic_semihosting as _;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":135342,"byte_end":135373,"line_start":14,"line_end":14,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":135374,"byte_end":135377,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"! use cortex_m::{asm, peripheral::syst::SystClkSource};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":135378,"byte_end":135435,"line_start":16,"line_end":16,"column_start":1,"column_end":58}},{"value":"! use cortex_m_rt::{entry, exception};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":135436,"byte_end":135476,"line_start":17,"line_end":17,"column_start":1,"column_end":41}},{"value":"! use cortex_m_semihosting::hprintln;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":135477,"byte_end":135516,"line_start":18,"line_end":18,"column_start":1,"column_end":40}},{"value":"! use heapless::mpmc::Q2;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":135517,"byte_end":135544,"line_start":19,"line_end":19,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":135545,"byte_end":135548,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"! static Q: Q2<u8> = Q2::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":135549,"byte_end":135582,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":135583,"byte_end":135586,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"! #[entry]","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":135587,"byte_end":135599,"line_start":23,"line_end":23,"column_start":1,"column_end":13}},{"value":"! fn main() -> ! {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":135600,"byte_end":135620,"line_start":24,"line_end":24,"column_start":1,"column_end":21}},{"value":"!     if let Some(p) = cortex_m::Peripherals::take() {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":135621,"byte_end":135677,"line_start":25,"line_end":25,"column_start":1,"column_end":57}},{"value":"!         let mut syst = p.SYST;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":135678,"byte_end":135712,"line_start":26,"line_end":26,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":135713,"byte_end":135716,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"!         // configures the system timer to trigger a SysTick exception every second","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":135717,"byte_end":135803,"line_start":28,"line_end":28,"column_start":1,"column_end":87}},{"value":"!         syst.set_clock_source(SystClkSource::Core);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":135804,"byte_end":135859,"line_start":29,"line_end":29,"column_start":1,"column_end":56}},{"value":"!         syst.set_reload(12_000_000);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":135860,"byte_end":135900,"line_start":30,"line_end":30,"column_start":1,"column_end":41}},{"value":"!         syst.enable_counter();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":135901,"byte_end":135935,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"!         syst.enable_interrupt();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":135936,"byte_end":135972,"line_start":32,"line_end":32,"column_start":1,"column_end":37}},{"value":"!     }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":135973,"byte_end":135982,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":135983,"byte_end":135986,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"!     loop {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":135987,"byte_end":136001,"line_start":35,"line_end":35,"column_start":1,"column_end":15}},{"value":"!         if let Some(x) = Q.dequeue() {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":136002,"byte_end":136044,"line_start":36,"line_end":36,"column_start":1,"column_end":43}},{"value":"!             hprintln!(\"{}\", x).ok();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":136045,"byte_end":136085,"line_start":37,"line_end":37,"column_start":1,"column_end":41}},{"value":"!         } else {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":136086,"byte_end":136106,"line_start":38,"line_end":38,"column_start":1,"column_end":21}},{"value":"!             asm::wfi();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":136107,"byte_end":136134,"line_start":39,"line_end":39,"column_start":1,"column_end":28}},{"value":"!         }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":136135,"byte_end":136148,"line_start":40,"line_end":40,"column_start":1,"column_end":14}},{"value":"!     }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":136149,"byte_end":136158,"line_start":41,"line_end":41,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":136159,"byte_end":136164,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":136165,"byte_end":136168,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"! #[exception]","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":136169,"byte_end":136185,"line_start":44,"line_end":44,"column_start":1,"column_end":17}},{"value":"! fn SysTick() {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":136186,"byte_end":136204,"line_start":45,"line_end":45,"column_start":1,"column_end":19}},{"value":"!     static mut COUNT: u8 = 0;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":136205,"byte_end":136238,"line_start":46,"line_end":46,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":136239,"byte_end":136242,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"!     Q.enqueue(*COUNT).ok();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":136243,"byte_end":136274,"line_start":48,"line_end":48,"column_start":1,"column_end":32}},{"value":"!     *COUNT += 1;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":136275,"byte_end":136295,"line_start":49,"line_end":49,"column_start":1,"column_end":21}},{"value":"! }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":136296,"byte_end":136301,"line_start":50,"line_end":50,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":136302,"byte_end":136309,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":136310,"byte_end":136313,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"! # Benchmark","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":136314,"byte_end":136329,"line_start":53,"line_end":53,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":136330,"byte_end":136333,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"! Measured on a ARM Cortex-M3 core running at 8 MHz and with zero Flash wait cycles","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":136334,"byte_end":136419,"line_start":55,"line_end":55,"column_start":1,"column_end":86}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":136420,"byte_end":136423,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"! N| `Q8::<u8>::enqueue().ok()` (`z`) | `Q8::<u8>::dequeue()` (`z`) |","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":136424,"byte_end":136495,"line_start":57,"line_end":57,"column_start":1,"column_end":72}},{"value":"! -|----------------------------------|-----------------------------|","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":136496,"byte_end":136567,"line_start":58,"line_end":58,"column_start":1,"column_end":72}},{"value":"! 0|34                                |35                           |","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":136568,"byte_end":136639,"line_start":59,"line_end":59,"column_start":1,"column_end":72}},{"value":"! 1|52                                |53                           |","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":136640,"byte_end":136711,"line_start":60,"line_end":60,"column_start":1,"column_end":72}},{"value":"! 2|69                                |71                           |","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":136712,"byte_end":136783,"line_start":61,"line_end":61,"column_start":1,"column_end":72}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":136784,"byte_end":136787,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"! - `N` denotes the number of *interruptions*. On Cortex-M, an interruption consists of an","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":136788,"byte_end":136880,"line_start":63,"line_end":63,"column_start":1,"column_end":93}},{"value":"!   interrupt handler preempting the would-be atomic section of the `enqueue` / `dequeue`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":136881,"byte_end":136972,"line_start":64,"line_end":64,"column_start":1,"column_end":92}},{"value":"!   operation. Note that it does *not* matter if the higher priority handler uses the queue or","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":136973,"byte_end":137069,"line_start":65,"line_end":65,"column_start":1,"column_end":97}},{"value":"!   not.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":137070,"byte_end":137080,"line_start":66,"line_end":66,"column_start":1,"column_end":11}},{"value":"! - All execution times are in clock cycles. 1 clock cycle = 125 ns.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":137081,"byte_end":137151,"line_start":67,"line_end":67,"column_start":1,"column_end":71}},{"value":"! - Execution time is *dependent* of `mem::size_of::<T>()`. Both operations include one","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":137152,"byte_end":137241,"line_start":68,"line_end":68,"column_start":1,"column_end":90}},{"value":"! `memcpy(T)` in their successful path.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":137242,"byte_end":137283,"line_start":69,"line_end":69,"column_start":1,"column_end":42}},{"value":"! - The optimization level is indicated in parentheses.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":137284,"byte_end":137341,"line_start":70,"line_end":70,"column_start":1,"column_end":58}},{"value":"! - The numbers reported correspond to the successful path (i.e. `Some` is returned by `dequeue`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":137342,"byte_end":137440,"line_start":71,"line_end":71,"column_start":1,"column_end":99}},{"value":"! and `Ok` is returned by `enqueue`).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":137441,"byte_end":137480,"line_start":72,"line_end":72,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":137481,"byte_end":137484,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"! # Portability","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":137485,"byte_end":137502,"line_start":74,"line_end":74,"column_start":1,"column_end":18}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":137503,"byte_end":137506,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"! This module is not exposed to architectures that lack the instructions to implement CAS loops.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":137507,"byte_end":137605,"line_start":76,"line_end":76,"column_start":1,"column_end":99}},{"value":"! Those architectures include ARMv6-M (`thumbv6m-none-eabi`) and MSP430 (`msp430-none-elf`).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":137606,"byte_end":137700,"line_start":77,"line_end":77,"column_start":1,"column_end":95}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":137701,"byte_end":137704,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"! # References","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":137705,"byte_end":137721,"line_start":79,"line_end":79,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":137722,"byte_end":137725,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"! This is an implementation of Dmitry Vyukov's [\"Bounded MPMC queue\"][0] minus the cache padding.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":137726,"byte_end":137825,"line_start":81,"line_end":81,"column_start":1,"column_end":100}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":137826,"byte_end":137829,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"! [0]: http://www.1024cores.net/home/lock-free-algorithms/queues/bounded-mpmc-queue","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":137830,"byte_end":137915,"line_start":83,"line_end":83,"column_start":1,"column_end":86}}]},{"kind":"Struct","id":{"krate":0,"index":1062},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":138074,"byte_end":138076,"line_start":92,"line_end":92,"column_start":12,"column_end":14},"name":"Q2","qualname":"::mpmc::Q2","value":"Q2 {  }","parent":null,"children":[{"krate":0,"index":1064},{"krate":0,"index":1066},{"krate":0,"index":1067}],"decl_id":null,"docs":" MPMC queue with a capacity for 2 elements\n","sig":null,"attributes":[{"value":"/ MPMC queue with a capacity for 2 elements","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":138017,"byte_end":138062,"line_start":91,"line_end":91,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1071},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":138270,"byte_end":138273,"line_start":102,"line_end":102,"column_start":18,"column_end":21},"name":"new","qualname":"<Q2<T>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty queue\n","sig":null,"attributes":[{"value":"/ Creates an empty queue","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":138226,"byte_end":138252,"line_start":101,"line_end":101,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1072},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":138566,"byte_end":138573,"line_start":111,"line_end":111,"column_start":12,"column_end":19},"name":"dequeue","qualname":"<Q2<T>>::dequeue","value":"fn (&self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the item in the front of the queue, or `None` if the queue is empty\n","sig":null,"attributes":[{"value":"/ Returns the item in the front of the queue, or `None` if the queue is empty","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":138475,"byte_end":138554,"line_start":110,"line_end":110,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1073},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":138809,"byte_end":138816,"line_start":118,"line_end":118,"column_start":12,"column_end":19},"name":"enqueue","qualname":"<Q2<T>>::enqueue","value":"fn (&self, item: T) -> Result<(), T>","parent":null,"children":[],"decl_id":null,"docs":" Adds an `item` to the end of the queue","sig":null,"attributes":[{"value":"/ Adds an `item` to the end of the queue","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":138694,"byte_end":138736,"line_start":115,"line_end":115,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":138741,"byte_end":138744,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ Returns back the `item` if the queue is full","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":138749,"byte_end":138797,"line_start":117,"line_end":117,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":1076},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":139158,"byte_end":139160,"line_start":133,"line_end":133,"column_start":12,"column_end":14},"name":"Q4","qualname":"::mpmc::Q4","value":"Q4 {  }","parent":null,"children":[{"krate":0,"index":1078},{"krate":0,"index":1080},{"krate":0,"index":1081}],"decl_id":null,"docs":" MPMC queue with a capacity for 4 elements\n","sig":null,"attributes":[{"value":"/ MPMC queue with a capacity for 4 elements","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":139101,"byte_end":139146,"line_start":132,"line_end":132,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1085},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":139354,"byte_end":139357,"line_start":143,"line_end":143,"column_start":18,"column_end":21},"name":"new","qualname":"<Q4<T>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty queue\n","sig":null,"attributes":[{"value":"/ Creates an empty queue","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":139310,"byte_end":139336,"line_start":142,"line_end":142,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1086},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":139678,"byte_end":139685,"line_start":152,"line_end":152,"column_start":12,"column_end":19},"name":"dequeue","qualname":"<Q4<T>>::dequeue","value":"fn (&self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the item in the front of the queue, or `None` if the queue is empty\n","sig":null,"attributes":[{"value":"/ Returns the item in the front of the queue, or `None` if the queue is empty","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":139587,"byte_end":139666,"line_start":151,"line_end":151,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1087},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":139921,"byte_end":139928,"line_start":159,"line_end":159,"column_start":12,"column_end":19},"name":"enqueue","qualname":"<Q4<T>>::enqueue","value":"fn (&self, item: T) -> Result<(), T>","parent":null,"children":[],"decl_id":null,"docs":" Adds an `item` to the end of the queue","sig":null,"attributes":[{"value":"/ Adds an `item` to the end of the queue","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":139806,"byte_end":139848,"line_start":156,"line_end":156,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":139853,"byte_end":139856,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ Returns back the `item` if the queue is full","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":139861,"byte_end":139909,"line_start":158,"line_end":158,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":1090},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":140270,"byte_end":140272,"line_start":174,"line_end":174,"column_start":12,"column_end":14},"name":"Q8","qualname":"::mpmc::Q8","value":"Q8 {  }","parent":null,"children":[{"krate":0,"index":1092},{"krate":0,"index":1094},{"krate":0,"index":1095}],"decl_id":null,"docs":" MPMC queue with a capacity for 8 elements\n","sig":null,"attributes":[{"value":"/ MPMC queue with a capacity for 8 elements","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":140213,"byte_end":140258,"line_start":173,"line_end":173,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1099},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":140466,"byte_end":140469,"line_start":184,"line_end":184,"column_start":18,"column_end":21},"name":"new","qualname":"<Q8<T>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty queue\n","sig":null,"attributes":[{"value":"/ Creates an empty queue","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":140422,"byte_end":140448,"line_start":183,"line_end":183,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1100},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":140989,"byte_end":140996,"line_start":202,"line_end":202,"column_start":12,"column_end":19},"name":"dequeue","qualname":"<Q8<T>>::dequeue","value":"fn (&self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the item in the front of the queue, or `None` if the queue is empty\n","sig":null,"attributes":[{"value":"/ Returns the item in the front of the queue, or `None` if the queue is empty","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":140898,"byte_end":140977,"line_start":201,"line_end":201,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1101},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":141232,"byte_end":141239,"line_start":209,"line_end":209,"column_start":12,"column_end":19},"name":"enqueue","qualname":"<Q8<T>>::enqueue","value":"fn (&self, item: T) -> Result<(), T>","parent":null,"children":[],"decl_id":null,"docs":" Adds an `item` to the end of the queue","sig":null,"attributes":[{"value":"/ Adds an `item` to the end of the queue","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":141117,"byte_end":141159,"line_start":206,"line_end":206,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":141164,"byte_end":141167,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ Returns back the `item` if the queue is full","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":141172,"byte_end":141220,"line_start":208,"line_end":208,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":1104},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":141582,"byte_end":141585,"line_start":224,"line_end":224,"column_start":12,"column_end":15},"name":"Q16","qualname":"::mpmc::Q16","value":"Q16 {  }","parent":null,"children":[{"krate":0,"index":1106},{"krate":0,"index":1108},{"krate":0,"index":1109}],"decl_id":null,"docs":" MPMC queue with a capacity for 16 elements\n","sig":null,"attributes":[{"value":"/ MPMC queue with a capacity for 16 elements","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":141524,"byte_end":141570,"line_start":223,"line_end":223,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1113},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":141782,"byte_end":141785,"line_start":234,"line_end":234,"column_start":18,"column_end":21},"name":"new","qualname":"<Q16<T>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty queue\n","sig":null,"attributes":[{"value":"/ Creates an empty queue","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":141738,"byte_end":141764,"line_start":233,"line_end":233,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1114},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":142551,"byte_end":142558,"line_start":260,"line_end":260,"column_start":12,"column_end":19},"name":"dequeue","qualname":"<Q16<T>>::dequeue","value":"fn (&self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the item in the front of the queue, or `None` if the queue is empty\n","sig":null,"attributes":[{"value":"/ Returns the item in the front of the queue, or `None` if the queue is empty","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":142460,"byte_end":142539,"line_start":259,"line_end":259,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1115},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":142794,"byte_end":142801,"line_start":267,"line_end":267,"column_start":12,"column_end":19},"name":"enqueue","qualname":"<Q16<T>>::enqueue","value":"fn (&self, item: T) -> Result<(), T>","parent":null,"children":[],"decl_id":null,"docs":" Adds an `item` to the end of the queue","sig":null,"attributes":[{"value":"/ Adds an `item` to the end of the queue","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":142679,"byte_end":142721,"line_start":264,"line_end":264,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":142726,"byte_end":142729,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ Returns back the `item` if the queue is full","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":142734,"byte_end":142782,"line_start":266,"line_end":266,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":1118},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":143145,"byte_end":143148,"line_start":282,"line_end":282,"column_start":12,"column_end":15},"name":"Q32","qualname":"::mpmc::Q32","value":"Q32 {  }","parent":null,"children":[{"krate":0,"index":1120},{"krate":0,"index":1122},{"krate":0,"index":1123}],"decl_id":null,"docs":" MPMC queue with a capacity for 32 elements\n","sig":null,"attributes":[{"value":"/ MPMC queue with a capacity for 32 elements","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":143087,"byte_end":143133,"line_start":281,"line_end":281,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1127},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":143345,"byte_end":143348,"line_start":292,"line_end":292,"column_start":18,"column_end":21},"name":"new","qualname":"<Q32<T>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty queue\n","sig":null,"attributes":[{"value":"/ Creates an empty queue","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":143301,"byte_end":143327,"line_start":291,"line_end":291,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1128},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":144610,"byte_end":144617,"line_start":334,"line_end":334,"column_start":12,"column_end":19},"name":"dequeue","qualname":"<Q32<T>>::dequeue","value":"fn (&self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the item in the front of the queue, or `None` if the queue is empty\n","sig":null,"attributes":[{"value":"/ Returns the item in the front of the queue, or `None` if the queue is empty","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":144519,"byte_end":144598,"line_start":333,"line_end":333,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1129},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":144853,"byte_end":144860,"line_start":341,"line_end":341,"column_start":12,"column_end":19},"name":"enqueue","qualname":"<Q32<T>>::enqueue","value":"fn (&self, item: T) -> Result<(), T>","parent":null,"children":[],"decl_id":null,"docs":" Adds an `item` to the end of the queue","sig":null,"attributes":[{"value":"/ Adds an `item` to the end of the queue","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":144738,"byte_end":144780,"line_start":338,"line_end":338,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":144785,"byte_end":144788,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ Returns back the `item` if the queue is full","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":144793,"byte_end":144841,"line_start":340,"line_end":340,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":1132},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":145204,"byte_end":145207,"line_start":356,"line_end":356,"column_start":12,"column_end":15},"name":"Q64","qualname":"::mpmc::Q64","value":"Q64 {  }","parent":null,"children":[{"krate":0,"index":1134},{"krate":0,"index":1136},{"krate":0,"index":1137}],"decl_id":null,"docs":" MPMC queue with a capacity for 64 elements\n","sig":null,"attributes":[{"value":"/ MPMC queue with a capacity for 64 elements","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":145146,"byte_end":145192,"line_start":355,"line_end":355,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1141},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":145404,"byte_end":145407,"line_start":366,"line_end":366,"column_start":18,"column_end":21},"name":"new","qualname":"<Q64<T>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty queue\n","sig":null,"attributes":[{"value":"/ Creates an empty queue","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":145360,"byte_end":145386,"line_start":365,"line_end":365,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1142},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":147661,"byte_end":147668,"line_start":440,"line_end":440,"column_start":12,"column_end":19},"name":"dequeue","qualname":"<Q64<T>>::dequeue","value":"fn (&self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the item in the front of the queue, or `None` if the queue is empty\n","sig":null,"attributes":[{"value":"/ Returns the item in the front of the queue, or `None` if the queue is empty","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":147570,"byte_end":147649,"line_start":439,"line_end":439,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1143},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":147904,"byte_end":147911,"line_start":447,"line_end":447,"column_start":12,"column_end":19},"name":"enqueue","qualname":"<Q64<T>>::enqueue","value":"fn (&self, item: T) -> Result<(), T>","parent":null,"children":[],"decl_id":null,"docs":" Adds an `item` to the end of the queue","sig":null,"attributes":[{"value":"/ Adds an `item` to the end of the queue","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":147789,"byte_end":147831,"line_start":444,"line_end":444,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":147836,"byte_end":147839,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ Returns back the `item` if the queue is full","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":147844,"byte_end":147892,"line_start":446,"line_end":446,"column_start":5,"column_end":53}}]},{"kind":"Mod","id":{"krate":0,"index":1157},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"pool","qualname":"::pool","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","parent":null,"children":[{"krate":0,"index":1158},{"krate":0,"index":1161},{"krate":0,"index":1173},{"krate":0,"index":1176},{"krate":0,"index":1177},{"krate":0,"index":1180},{"krate":0,"index":1272},{"krate":0,"index":1295},{"krate":0,"index":1299},{"krate":0,"index":1301},{"krate":0,"index":1303},{"krate":0,"index":1312},{"krate":0,"index":1317},{"krate":0,"index":1320},{"krate":0,"index":1321},{"krate":0,"index":1322},{"krate":0,"index":1325},{"krate":0,"index":1328},{"krate":0,"index":1330},{"krate":0,"index":1334},{"krate":0,"index":1337},{"krate":0,"index":1341},{"krate":0,"index":1344},{"krate":0,"index":1347},{"krate":0,"index":1350},{"krate":0,"index":1353},{"krate":0,"index":1355},{"krate":0,"index":1358},{"krate":0,"index":1361}],"decl_id":null,"docs":" A heap-less, interrupt-safe, lock-free memory pool (\\*)","sig":null,"attributes":[{"value":"cfg(all(has_cas, feature = \"cas\"))","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":4104,"byte_end":4141,"line_start":105,"line_end":105,"column_start":1,"column_end":38}},{"value":"! A heap-less, interrupt-safe, lock-free memory pool (\\*)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":151093,"byte_end":151152,"line_start":1,"line_end":1,"column_start":1,"column_end":60}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":151153,"byte_end":151156,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! NOTE: This module is not available on targets that do *not* support CAS operations, e.g. ARMv6-M","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":151157,"byte_end":151257,"line_start":3,"line_end":3,"column_start":1,"column_end":101}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":151258,"byte_end":151261,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! (\\*) Currently, the implementation is only lock-free *and* `Sync` on ARMv7-{A,R,M} & ARMv8-M","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":151262,"byte_end":151358,"line_start":5,"line_end":5,"column_start":1,"column_end":97}},{"value":"! devices","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":151359,"byte_end":151370,"line_start":6,"line_end":6,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":151371,"byte_end":151374,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":151375,"byte_end":151389,"line_start":8,"line_end":8,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":151390,"byte_end":151393,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! The most common way of using this pool is as a global singleton; the singleton mode gives you","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":151394,"byte_end":151491,"line_start":10,"line_end":10,"column_start":1,"column_end":98}},{"value":"! automatic deallocation of memory blocks on `drop`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":151492,"byte_end":151546,"line_start":11,"line_end":11,"column_start":1,"column_end":55}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":151547,"byte_end":151550,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! ``` ignore","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":151551,"byte_end":151565,"line_start":13,"line_end":13,"column_start":1,"column_end":15}},{"value":"! #![no_main]","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":151566,"byte_end":151581,"line_start":14,"line_end":14,"column_start":1,"column_end":16}},{"value":"! #![no_std]","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":151582,"byte_end":151596,"line_start":15,"line_end":15,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":151597,"byte_end":151600,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! use heapless::{pool, pool::singleton::Box};","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":151601,"byte_end":151648,"line_start":17,"line_end":17,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":151649,"byte_end":151652,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"! // instantiate a memory pool of `[u8; 128]` blocks as a global singleton","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":151653,"byte_end":151729,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"! pool!(","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":151730,"byte_end":151740,"line_start":20,"line_end":20,"column_start":1,"column_end":11}},{"value":"!     // attributes can be used here","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":151741,"byte_end":151779,"line_start":21,"line_end":21,"column_start":1,"column_end":39}},{"value":"!     // #[link_section = \".ccram.A\"]","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":151780,"byte_end":151819,"line_start":22,"line_end":22,"column_start":1,"column_end":40}},{"value":"!     A: [u8; 128]","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":151820,"byte_end":151840,"line_start":23,"line_end":23,"column_start":1,"column_end":21}},{"value":"! );","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":151841,"byte_end":151847,"line_start":24,"line_end":24,"column_start":1,"column_end":7}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":151848,"byte_end":151851,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"! #[entry]","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":151852,"byte_end":151864,"line_start":26,"line_end":26,"column_start":1,"column_end":13}},{"value":"! fn main() -> ! {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":151865,"byte_end":151885,"line_start":27,"line_end":27,"column_start":1,"column_end":21}},{"value":"!     static mut MEMORY: [u8; 1024] = [0; 1024];","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":151886,"byte_end":151936,"line_start":28,"line_end":28,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":151937,"byte_end":151940,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"!     // increase the capacity of the pool by ~8 blocks","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":151941,"byte_end":151998,"line_start":30,"line_end":30,"column_start":1,"column_end":58}},{"value":"!     A::grow(MEMORY);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":151999,"byte_end":152023,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":152024,"byte_end":152027,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"!     // claim a block of memory","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":152028,"byte_end":152062,"line_start":33,"line_end":33,"column_start":1,"column_end":35}},{"value":"!     // note that the type is `Box<A>`, and not `Box<[u8; 128]>`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":152063,"byte_end":152130,"line_start":34,"line_end":34,"column_start":1,"column_end":68}},{"value":"!     // `A` is the \"name\" of the pool","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":152131,"byte_end":152171,"line_start":35,"line_end":35,"column_start":1,"column_end":41}},{"value":"!     let x: Box<A, _> = A::alloc().unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":152172,"byte_end":152219,"line_start":36,"line_end":36,"column_start":1,"column_end":48}},{"value":"!     loop {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":152220,"byte_end":152234,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"!         // .. do stuff with `x` ..","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":152235,"byte_end":152273,"line_start":38,"line_end":38,"column_start":1,"column_end":39}},{"value":"!     }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":152274,"byte_end":152283,"line_start":39,"line_end":39,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":152284,"byte_end":152289,"line_start":40,"line_end":40,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":152290,"byte_end":152293,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"! #[exception]","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":152294,"byte_end":152310,"line_start":42,"line_end":42,"column_start":1,"column_end":17}},{"value":"! fn SysTick() {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":152311,"byte_end":152329,"line_start":43,"line_end":43,"column_start":1,"column_end":19}},{"value":"!     // claim a block of memory","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":152330,"byte_end":152364,"line_start":44,"line_end":44,"column_start":1,"column_end":35}},{"value":"!     let y = A::alloc().unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":152365,"byte_end":152401,"line_start":45,"line_end":45,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":152402,"byte_end":152405,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"!     // .. do stuff with `y` ..","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":152406,"byte_end":152440,"line_start":47,"line_end":47,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":152441,"byte_end":152444,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"!     // return the memory block to the pool","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":152445,"byte_end":152491,"line_start":49,"line_end":49,"column_start":1,"column_end":47}},{"value":"!     drop(y);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":152492,"byte_end":152508,"line_start":50,"line_end":50,"column_start":1,"column_end":17}},{"value":"! }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":152509,"byte_end":152514,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":152515,"byte_end":152522,"line_start":52,"line_end":52,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":152523,"byte_end":152526,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"! # Portability","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":152527,"byte_end":152544,"line_start":54,"line_end":54,"column_start":1,"column_end":18}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":152545,"byte_end":152548,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"! This pool internally uses a Treiber stack which is known to be susceptible to the ABA problem.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":152549,"byte_end":152647,"line_start":56,"line_end":56,"column_start":1,"column_end":99}},{"value":"! The only counter measure against the ABA problem that this implementation currently takes is","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":152648,"byte_end":152744,"line_start":57,"line_end":57,"column_start":1,"column_end":97}},{"value":"! relying on LL/SC (Link-local / Store-conditional) instructions being used to implement CAS loops","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":152745,"byte_end":152845,"line_start":58,"line_end":58,"column_start":1,"column_end":101}},{"value":"! on the target architecture (see section on ['Soundness'](#soundness) for more information). For","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":152846,"byte_end":152945,"line_start":59,"line_end":59,"column_start":1,"column_end":100}},{"value":"! this reason, `Pool` only implements `Sync` when compiling for some ARM cores.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":152946,"byte_end":153027,"line_start":60,"line_end":60,"column_start":1,"column_end":82}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":153028,"byte_end":153031,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"! Also note that ARMv6-M architecture lacks the primitives for CAS loops so this module does *not*","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":153032,"byte_end":153132,"line_start":62,"line_end":62,"column_start":1,"column_end":101}},{"value":"! exist for `thumbv6m-none-eabi`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":153133,"byte_end":153168,"line_start":63,"line_end":63,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":153169,"byte_end":153172,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"! # Soundness","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":153173,"byte_end":153188,"line_start":65,"line_end":65,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":153189,"byte_end":153192,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"! This pool uses a Treiber stack to keep a list of free memory blocks (nodes). Each of these","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":153193,"byte_end":153287,"line_start":67,"line_end":67,"column_start":1,"column_end":95}},{"value":"! nodes has a pointer to the next node. To claim a memory block we simply pop a node from the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":153288,"byte_end":153383,"line_start":68,"line_end":68,"column_start":1,"column_end":96}},{"value":"! top of the stack and use it as a memory block. The pop operation consists of swapping the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":153384,"byte_end":153477,"line_start":69,"line_end":69,"column_start":1,"column_end":94}},{"value":"! current head (top) node with the node below it. The Rust code for the `pop` operation is shown","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":153478,"byte_end":153576,"line_start":70,"line_end":70,"column_start":1,"column_end":99}},{"value":"! below:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":153577,"byte_end":153587,"line_start":71,"line_end":71,"column_start":1,"column_end":11}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":153588,"byte_end":153591,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"! ``` ignore","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":153592,"byte_end":153606,"line_start":73,"line_end":73,"column_start":1,"column_end":15}},{"value":"! fn pop(&self) -> Option<NonNull<Node<T>>> {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":153607,"byte_end":153654,"line_start":74,"line_end":74,"column_start":1,"column_end":48}},{"value":"!     let fetch_order = ..;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":153655,"byte_end":153684,"line_start":75,"line_end":75,"column_start":1,"column_end":30}},{"value":"!     let set_order = ..;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":153685,"byte_end":153712,"line_start":76,"line_end":76,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":153713,"byte_end":153716,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"!     // `self.head` has type `AtomicPtr<Node<T>>`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":153717,"byte_end":153769,"line_start":78,"line_end":78,"column_start":1,"column_end":53}},{"value":"!     // where `struct Node<T> { next: AtomicPtr<Node<T>>, data: UnsafeCell<T> }`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":153770,"byte_end":153853,"line_start":79,"line_end":79,"column_start":1,"column_end":84}},{"value":"!     let mut head = self.head.load(fetch_order);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":153854,"byte_end":153905,"line_start":80,"line_end":80,"column_start":1,"column_end":52}},{"value":"!     loop {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":153906,"byte_end":153920,"line_start":81,"line_end":81,"column_start":1,"column_end":15}},{"value":"!         if let Some(nn_head) = NonNull::new(head) {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":153921,"byte_end":153976,"line_start":82,"line_end":82,"column_start":1,"column_end":56}},{"value":"!             let next = unsafe { (*head).next.load(Ordering::Relaxed) };","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":153977,"byte_end":154052,"line_start":83,"line_end":83,"column_start":1,"column_end":76}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":154053,"byte_end":154056,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"!             // <~ preempted","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":154057,"byte_end":154088,"line_start":85,"line_end":85,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":154089,"byte_end":154092,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"!             match self","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":154093,"byte_end":154119,"line_start":87,"line_end":87,"column_start":1,"column_end":27}},{"value":"!                 .head","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":154120,"byte_end":154145,"line_start":88,"line_end":88,"column_start":1,"column_end":26}},{"value":"!                 .compare_exchange_weak(head, next, set_order, fetch_order)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":154146,"byte_end":154224,"line_start":89,"line_end":89,"column_start":1,"column_end":79}},{"value":"!             {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":154225,"byte_end":154242,"line_start":90,"line_end":90,"column_start":1,"column_end":18}},{"value":"!                 Ok(_) => break Some(nn_head),","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":154243,"byte_end":154292,"line_start":91,"line_end":91,"column_start":1,"column_end":50}},{"value":"!                 // head was changed by some interrupt handler / thread","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":154293,"byte_end":154367,"line_start":92,"line_end":92,"column_start":1,"column_end":75}},{"value":"!                 Err(new_head) => head = new_head,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":154368,"byte_end":154421,"line_start":93,"line_end":93,"column_start":1,"column_end":54}},{"value":"!             }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":154422,"byte_end":154439,"line_start":94,"line_end":94,"column_start":1,"column_end":18}},{"value":"!         } else {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":154440,"byte_end":154460,"line_start":95,"line_end":95,"column_start":1,"column_end":21}},{"value":"!             // stack is observed as empty","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":154461,"byte_end":154506,"line_start":96,"line_end":96,"column_start":1,"column_end":46}},{"value":"!             break None;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":154507,"byte_end":154534,"line_start":97,"line_end":97,"column_start":1,"column_end":28}},{"value":"!         }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":154535,"byte_end":154548,"line_start":98,"line_end":98,"column_start":1,"column_end":14}},{"value":"!     }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":154549,"byte_end":154558,"line_start":99,"line_end":99,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":154559,"byte_end":154564,"line_start":100,"line_end":100,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":154565,"byte_end":154572,"line_start":101,"line_end":101,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":154573,"byte_end":154576,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"! In general, the `pop` operation is susceptible to the ABA problem. If this operation gets","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":154577,"byte_end":154670,"line_start":103,"line_end":103,"column_start":1,"column_end":94}},{"value":"! preempted by some interrupt handler somewhere between the `head.load` and the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":154671,"byte_end":154752,"line_start":104,"line_end":104,"column_start":1,"column_end":82}},{"value":"! `compare_and_exchange_weak`, and that handler modifies the stack in such a way that the head","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":154753,"byte_end":154849,"line_start":105,"line_end":105,"column_start":1,"column_end":97}},{"value":"! (top) of the stack remains unchanged then resuming the `pop` operation will corrupt the stack.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":154850,"byte_end":154948,"line_start":106,"line_end":106,"column_start":1,"column_end":99}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":154949,"byte_end":154952,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"! An example: imagine we are doing on `pop` on stack that contains these nodes: `A -> B -> C`,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":154953,"byte_end":155049,"line_start":108,"line_end":108,"column_start":1,"column_end":97}},{"value":"! `A` is the head (top), `B` is next to `A` and `C` is next to `B`. The `pop` operation will do a","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":155050,"byte_end":155149,"line_start":109,"line_end":109,"column_start":1,"column_end":100}},{"value":"! `CAS(&self.head, A, B)` operation to atomically change the head to `B` iff it currently is `A`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":155150,"byte_end":155249,"line_start":110,"line_end":110,"column_start":1,"column_end":100}},{"value":"! Now, let's say a handler preempts the `pop` operation before the `CAS` operation starts and it","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":155250,"byte_end":155348,"line_start":111,"line_end":111,"column_start":1,"column_end":99}},{"value":"! `pop`s the stack twice and then `push`es back the `A` node; now the state of the stack is `A ->","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":155349,"byte_end":155448,"line_start":112,"line_end":112,"column_start":1,"column_end":100}},{"value":"! C`. When the original `pop` operation is resumed it will succeed in doing the `CAS` operation","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":155449,"byte_end":155546,"line_start":113,"line_end":113,"column_start":1,"column_end":98}},{"value":"! setting `B` as the head of the stack. However, `B` was used by the handler as a memory block and","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":155547,"byte_end":155647,"line_start":114,"line_end":114,"column_start":1,"column_end":101}},{"value":"! no longer is a valid free node. As a result the stack, and thus the allocator, is in a invalid","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":155648,"byte_end":155746,"line_start":115,"line_end":115,"column_start":1,"column_end":99}},{"value":"! state.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":155747,"byte_end":155757,"line_start":116,"line_end":116,"column_start":1,"column_end":11}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":155758,"byte_end":155761,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"! However, not all is lost because ARM devices use LL/SC (Link-local / Store-conditional)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":155762,"byte_end":155853,"line_start":118,"line_end":118,"column_start":1,"column_end":92}},{"value":"! operations to implement CAS loops. Let's look at the actual disassembly of `pop` for the ARM","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":155854,"byte_end":155950,"line_start":119,"line_end":119,"column_start":1,"column_end":97}},{"value":"! Cortex-M.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":155951,"byte_end":155964,"line_start":120,"line_end":120,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":155965,"byte_end":155968,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"! ``` text","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":155969,"byte_end":155981,"line_start":122,"line_end":122,"column_start":1,"column_end":13}},{"value":"! 08000130 <<heapless::pool::Pool<T>>::pop>:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":155982,"byte_end":156028,"line_start":123,"line_end":123,"column_start":1,"column_end":47}},{"value":"!  8000130:       6802            ldr     r2, [r0, #0]","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":156029,"byte_end":156085,"line_start":124,"line_end":124,"column_start":1,"column_end":57}},{"value":"!  8000132:       e00c            b.n     800014e <<heapless::pool::Pool<T>>::pop+0x1e>","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":156086,"byte_end":156175,"line_start":125,"line_end":125,"column_start":1,"column_end":90}},{"value":"!  8000134:       4611            mov     r1, r2","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":156176,"byte_end":156226,"line_start":126,"line_end":126,"column_start":1,"column_end":51}},{"value":"!  8000136:       f8d2 c000       ldr.w   ip, [r2]","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":156227,"byte_end":156279,"line_start":127,"line_end":127,"column_start":1,"column_end":53}},{"value":"!  800013a:       e850 2f00       ldrex   r2, [r0]","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":156280,"byte_end":156332,"line_start":128,"line_end":128,"column_start":1,"column_end":53}},{"value":"!  800013e:       428a            cmp     r2, r1","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":156333,"byte_end":156383,"line_start":129,"line_end":129,"column_start":1,"column_end":51}},{"value":"!  8000140:       d103            bne.n   800014a <<heapless::pool::Pool<T>>::pop+0x1a>","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":156384,"byte_end":156473,"line_start":130,"line_end":130,"column_start":1,"column_end":90}},{"value":"!  8000142:       e840 c300       strex   r3, ip, [r0]","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":156474,"byte_end":156530,"line_start":131,"line_end":131,"column_start":1,"column_end":57}},{"value":"!  8000146:       b913            cbnz    r3, 800014e <<heapless::pool::Pool<T>>::pop+0x1e>","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":156531,"byte_end":156624,"line_start":132,"line_end":132,"column_start":1,"column_end":94}},{"value":"!  8000148:       e004            b.n     8000154 <<heapless::pool::Pool<T>>::pop+0x24>","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":156625,"byte_end":156714,"line_start":133,"line_end":133,"column_start":1,"column_end":90}},{"value":"!  800014a:       f3bf 8f2f       clrex","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":156715,"byte_end":156756,"line_start":134,"line_end":134,"column_start":1,"column_end":42}},{"value":"!  800014e:       2a00            cmp     r2, #0","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":156757,"byte_end":156807,"line_start":135,"line_end":135,"column_start":1,"column_end":51}},{"value":"!  8000150:       d1f0            bne.n   8000134 <<heapless::pool::Pool<T>>::pop+0x4>","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":156808,"byte_end":156896,"line_start":136,"line_end":136,"column_start":1,"column_end":89}},{"value":"!  8000152:       2100            movs    r1, #0","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":156897,"byte_end":156947,"line_start":137,"line_end":137,"column_start":1,"column_end":51}},{"value":"!  8000154:       4608            mov     r0, r1","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":156948,"byte_end":156998,"line_start":138,"line_end":138,"column_start":1,"column_end":51}},{"value":"!  8000156:       4770            bx      lr","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":156999,"byte_end":157045,"line_start":139,"line_end":139,"column_start":1,"column_end":47}},{"value":"! ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":157046,"byte_end":157053,"line_start":140,"line_end":140,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":157054,"byte_end":157057,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"! LDREX (\"load exclusive\") is the LL instruction, and STREX (\"store exclusive\") is the SC","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":157058,"byte_end":157149,"line_start":142,"line_end":142,"column_start":1,"column_end":92}},{"value":"! instruction (see [1](#references)). On the Cortex-M, STREX will always fail if the processor","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":157150,"byte_end":157246,"line_start":143,"line_end":143,"column_start":1,"column_end":97}},{"value":"! takes an exception between it and its corresponding LDREX operation (see [2](#references)). If","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":157247,"byte_end":157345,"line_start":144,"line_end":144,"column_start":1,"column_end":99}},{"value":"! STREX fails then the CAS loop is retried (see instruction @ `0x8000146`). On single core","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":157346,"byte_end":157438,"line_start":145,"line_end":145,"column_start":1,"column_end":93}},{"value":"! systems, preemption is required to run into the ABA problem and on Cortex-M devices preemption","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":157439,"byte_end":157537,"line_start":146,"line_end":146,"column_start":1,"column_end":99}},{"value":"! always involves taking an exception. Thus the underlying LL/SC operations prevent the ABA","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":157538,"byte_end":157631,"line_start":147,"line_end":147,"column_start":1,"column_end":94}},{"value":"! problem on Cortex-M.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":157632,"byte_end":157656,"line_start":148,"line_end":148,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":157657,"byte_end":157660,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"! In the case of multi-core systems if any other core successfully does a STREX op on the head","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":157661,"byte_end":157757,"line_start":150,"line_end":150,"column_start":1,"column_end":97}},{"value":"! while the current core is somewhere between LDREX and STREX then the current core will fail its","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":157758,"byte_end":157857,"line_start":151,"line_end":151,"column_start":1,"column_end":100}},{"value":"! STREX operation.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":157858,"byte_end":157878,"line_start":152,"line_end":152,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":157879,"byte_end":157882,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"! # x86_64 support / limitations","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":157883,"byte_end":157917,"line_start":154,"line_end":154,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":157918,"byte_end":157921,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"! *NOTE* `Pool` is only `Sync` on `x86_64` if the Cargo feature \"x86-sync-pool\" is enabled","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":157922,"byte_end":158014,"line_start":156,"line_end":156,"column_start":1,"column_end":93}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":158015,"byte_end":158018,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"! x86_64 support is a gamble. Yes, a gamble. Do you feel lucky enough to use `Pool` on x86_64?","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":158019,"byte_end":158115,"line_start":158,"line_end":158,"column_start":1,"column_end":97}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":158116,"byte_end":158119,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"! As it's not possible to implement *ideal* LL/SC semantics (\\*) on x86_64 the architecture is","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":158120,"byte_end":158216,"line_start":160,"line_end":160,"column_start":1,"column_end":97}},{"value":"! susceptible to the ABA problem described above. To *reduce the chances* of ABA occurring in","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":158217,"byte_end":158312,"line_start":161,"line_end":161,"column_start":1,"column_end":96}},{"value":"! practice we use version tags (keyword: IBM ABA-prevention tags). Again, this approach does","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":158313,"byte_end":158407,"line_start":162,"line_end":162,"column_start":1,"column_end":95}},{"value":"! *not* fix / prevent / avoid the ABA problem; it only reduces the chance of it occurring in","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":158408,"byte_end":158502,"line_start":163,"line_end":163,"column_start":1,"column_end":95}},{"value":"! practice but the chances of it occurring are not reduced to zero.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":158503,"byte_end":158572,"line_start":164,"line_end":164,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":158573,"byte_end":158576,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"! How we have implemented version tags: instead of using an `AtomicPtr` to link the stack `Node`s","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":158577,"byte_end":158676,"line_start":166,"line_end":166,"column_start":1,"column_end":100}},{"value":"! we use an `AtomicUsize` where the 64-bit `usize` is always comprised of a monotonically","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":158677,"byte_end":158768,"line_start":167,"line_end":167,"column_start":1,"column_end":92}},{"value":"! increasing 32-bit tag (higher bits) and a 32-bit signed address offset. The address of a node is","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":158769,"byte_end":158869,"line_start":168,"line_end":168,"column_start":1,"column_end":101}},{"value":"! computed by adding the 32-bit offset to an \"anchor\" address (the address of a static variable","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":158870,"byte_end":158967,"line_start":169,"line_end":169,"column_start":1,"column_end":98}},{"value":"! that lives somewhere in the `.bss` linker section). The tag is increased every time a node is","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":158968,"byte_end":159065,"line_start":170,"line_end":170,"column_start":1,"column_end":98}},{"value":"! popped (removed) from the stack.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":159066,"byte_end":159102,"line_start":171,"line_end":171,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":159103,"byte_end":159106,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"! To see how version tags can prevent ABA consider the example from the previous section. Let's","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":159107,"byte_end":159204,"line_start":173,"line_end":173,"column_start":1,"column_end":98}},{"value":"! start with a stack in this state: `(~A, 0) -> (~B, 1) -> (~C, 2)`, where `~A` represents the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":159205,"byte_end":159301,"line_start":174,"line_end":174,"column_start":1,"column_end":97}},{"value":"! address of node A as a 32-bit offset from the \"anchor\" and the second tuple element (e.g. `0`)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":159302,"byte_end":159400,"line_start":175,"line_end":175,"column_start":1,"column_end":99}},{"value":"! indicates the version of the node. For simplicity, assume a single core system: thread T1 is","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":159401,"byte_end":159497,"line_start":176,"line_end":176,"column_start":1,"column_end":97}},{"value":"! performing `pop` and before `CAS(&self.head, (~A, 0), (~B, 1))` is executed a context switch","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":159498,"byte_end":159594,"line_start":177,"line_end":177,"column_start":1,"column_end":97}},{"value":"! occurs and the core resumes T2. T2 pops the stack twice and pushes A back into the stack;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":159595,"byte_end":159688,"line_start":178,"line_end":178,"column_start":1,"column_end":94}},{"value":"! because the `pop` operation increases the version the stack ends in the following state: `(~A,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":159689,"byte_end":159787,"line_start":179,"line_end":179,"column_start":1,"column_end":99}},{"value":"! 1) -> (~C, 2)`. Now if T1 is resumed the CAS operation will fail because `self.head` is `(~A,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":159788,"byte_end":159885,"line_start":180,"line_end":180,"column_start":1,"column_end":98}},{"value":"! 1)` and not `(~A, 0)`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":159886,"byte_end":159912,"line_start":181,"line_end":181,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":159913,"byte_end":159916,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"! When can version tags fail to prevent ABA? Using the previous example: if T2 performs a `push`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":159917,"byte_end":160015,"line_start":183,"line_end":183,"column_start":1,"column_end":99}},{"value":"! followed by a `pop` `(1 << 32) - 1` times before doing its original `pop` - `pop` - `push`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":160016,"byte_end":160110,"line_start":184,"line_end":184,"column_start":1,"column_end":95}},{"value":"! operation then ABA will occur because the version tag of node `A` will wraparound to its","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":160111,"byte_end":160203,"line_start":185,"line_end":185,"column_start":1,"column_end":93}},{"value":"! original value of `0` and the CAS operation in T1 will succeed and corrupt the stack.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":160204,"byte_end":160293,"line_start":186,"line_end":186,"column_start":1,"column_end":90}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":160294,"byte_end":160297,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"! It does seem unlikely that (1) a thread will perform the above operation and (2) that the above","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":160298,"byte_end":160397,"line_start":188,"line_end":188,"column_start":1,"column_end":100}},{"value":"! operation will complete within one time slice, assuming time sliced threads. If you have thread","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":160398,"byte_end":160497,"line_start":189,"line_end":189,"column_start":1,"column_end":100}},{"value":"! priorities then the above operation could occur during the lifetime of many high priorities","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":160498,"byte_end":160593,"line_start":190,"line_end":190,"column_start":1,"column_end":96}},{"value":"! threads if T1 is running at low priority.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":160594,"byte_end":160639,"line_start":191,"line_end":191,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":160640,"byte_end":160643,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"! Other implementations of version tags use more than 32 bits in their tags (e.g. \"Scalable","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":160644,"byte_end":160737,"line_start":193,"line_end":193,"column_start":1,"column_end":94}},{"value":"! Lock-Free Dynamic Memory Allocation\" uses 42-bit tags in its super blocks). In theory, one could","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":160738,"byte_end":160838,"line_start":194,"line_end":194,"column_start":1,"column_end":101}},{"value":"! use double-word CAS on x86_64 to pack a 64-bit tag and a 64-bit pointer in a double-word but","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":160839,"byte_end":160935,"line_start":195,"line_end":195,"column_start":1,"column_end":97}},{"value":"! this CAS operation is not exposed in the standard library (and I think it's not available on","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":160936,"byte_end":161032,"line_start":196,"line_end":196,"column_start":1,"column_end":97}},{"value":"! older x86_64 processors?)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":161033,"byte_end":161062,"line_start":197,"line_end":197,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":161063,"byte_end":161066,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"! (\\*) Apparently one can emulate proper LL/SC semantics on x86_64 using hazard pointers (?) --","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":161067,"byte_end":161164,"line_start":199,"line_end":199,"column_start":1,"column_end":98}},{"value":"! the technique appears to be documented in \"ABA Prevention Using Single-Word Instructions\", which","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":161165,"byte_end":161265,"line_start":200,"line_end":200,"column_start":1,"column_end":101}},{"value":"! is not public AFAICT -- but hazard pointers require Thread Local Storage (TLS), which is a","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":161266,"byte_end":161360,"line_start":201,"line_end":201,"column_start":1,"column_end":95}},{"value":"! non-starter for a `no_std` library like `heapless`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":161361,"byte_end":161416,"line_start":202,"line_end":202,"column_start":1,"column_end":56}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":161417,"byte_end":161420,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"! ## x86_64 Limitations","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":161421,"byte_end":161446,"line_start":204,"line_end":204,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":161447,"byte_end":161450,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"! Because stack nodes must be located within +- 2 GB of the hidden `ANCHOR` variable, which","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":161451,"byte_end":161544,"line_start":206,"line_end":206,"column_start":1,"column_end":94}},{"value":"! lives in the `.bss` section, `Pool` may not be able to manage static references created using","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":161545,"byte_end":161642,"line_start":207,"line_end":207,"column_start":1,"column_end":98}},{"value":"! `Box::leak` -- these heap allocated chunks of memory may live in a very different address space.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":161643,"byte_end":161743,"line_start":208,"line_end":208,"column_start":1,"column_end":101}},{"value":"! When the `Pool` is unable to manage a node because of its address it will simply discard it:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":161744,"byte_end":161840,"line_start":209,"line_end":209,"column_start":1,"column_end":97}},{"value":"! `Pool::grow*` methods return the number of new memory blocks added to the pool; if these methods","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":161841,"byte_end":161941,"line_start":210,"line_end":210,"column_start":1,"column_end":101}},{"value":"! return `0` it means the `Pool` is unable to manage the memory given to them.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":161942,"byte_end":162022,"line_start":211,"line_end":211,"column_start":1,"column_end":81}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":162023,"byte_end":162026,"line_start":212,"line_end":212,"column_start":1,"column_end":4}},{"value":"! # References","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":162027,"byte_end":162043,"line_start":213,"line_end":213,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":162044,"byte_end":162047,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"! 1. [Cortex-M3 Devices Generic User Guide (DUI 0552A)][0], Section 2.2.7 \"Synchronization","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":162048,"byte_end":162140,"line_start":215,"line_end":215,"column_start":1,"column_end":93}},{"value":"! primitives\"","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":162141,"byte_end":162156,"line_start":216,"line_end":216,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":162157,"byte_end":162160,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"! [0]: http://infocenter.arm.com/help/topic/com.arm.doc.dui0552a/DUI0552A_cortex_m3_dgug.pdf","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":162161,"byte_end":162255,"line_start":218,"line_end":218,"column_start":1,"column_end":95}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":162256,"byte_end":162259,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"! 2. [ARMv7-M Architecture Reference Manual (DDI 0403E.b)][1], Section A3.4 \"Synchronization and","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":162260,"byte_end":162358,"line_start":220,"line_end":220,"column_start":1,"column_end":99}},{"value":"! semaphores\"","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":162359,"byte_end":162374,"line_start":221,"line_end":221,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":162375,"byte_end":162378,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"! [1]: https://static.docs.arm.com/ddi0403/eb/DDI0403E_B_armv7m_arm.pdf","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":162379,"byte_end":162452,"line_start":223,"line_end":223,"column_start":1,"column_end":74}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":162453,"byte_end":162456,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"! 3. \"Scalable Lock-Free Dynamic Memory Allocation\" Michael, Maged M.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":162457,"byte_end":162528,"line_start":225,"line_end":225,"column_start":1,"column_end":72}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":162529,"byte_end":162532,"line_start":226,"line_end":226,"column_start":1,"column_end":4}},{"value":"! 4. \"Hazard pointers: Safe memory reclamation for lock-free objects.\" Michael, Maged M.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":162533,"byte_end":162623,"line_start":227,"line_end":227,"column_start":1,"column_end":91}}]},{"kind":"Mod","id":{"krate":0,"index":1180},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/singleton.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"singleton","qualname":"::pool::singleton","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/singleton.rs","parent":null,"children":[{"krate":0,"index":1181},{"krate":0,"index":1196},{"krate":0,"index":1199},{"krate":0,"index":1203},{"krate":0,"index":1204},{"krate":0,"index":1212},{"krate":0,"index":1217},{"krate":0,"index":1220},{"krate":0,"index":1223},{"krate":0,"index":1227},{"krate":0,"index":1230},{"krate":0,"index":1232},{"krate":0,"index":1235},{"krate":0,"index":1238},{"krate":0,"index":1242},{"krate":0,"index":1245},{"krate":0,"index":1248},{"krate":0,"index":1253},{"krate":0,"index":1257},{"krate":0,"index":1260},{"krate":0,"index":1262},{"krate":0,"index":1265},{"krate":0,"index":1268}],"decl_id":null,"docs":" `Pool` as a global singleton\n","sig":null,"attributes":[{"value":"! `Pool` as a global singleton","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/singleton.rs","byte_start":172229,"byte_end":172261,"line_start":1,"line_end":1,"column_start":1,"column_end":33}}]},{"kind":"Trait","id":{"krate":0,"index":1204},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/singleton.rs","byte_start":173156,"byte_end":173160,"line_start":44,"line_end":44,"column_start":11,"column_end":15},"name":"Pool","qualname":"::pool::singleton::Pool","value":"Pool","parent":null,"children":[{"krate":0,"index":1205},{"krate":0,"index":1206},{"krate":0,"index":1207},{"krate":0,"index":1209},{"krate":0,"index":1210}],"decl_id":null,"docs":" A global singleton memory pool\n","sig":null,"attributes":[{"value":"/ A global singleton memory pool","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/singleton.rs","byte_start":173111,"byte_end":173145,"line_start":43,"line_end":43,"column_start":1,"column_end":35}}]},{"kind":"Type","id":{"krate":0,"index":1205},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/singleton.rs","byte_start":173232,"byte_end":173236,"line_start":46,"line_end":46,"column_start":10,"column_end":14},"name":"Data","qualname":"::pool::singleton::Pool::Data","value":"type Data: 'static;","parent":{"krate":0,"index":1204},"children":[],"decl_id":null,"docs":" The type of data that can be allocated on this pool\n","sig":null,"attributes":[{"value":"/ The type of data that can be allocated on this pool","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/singleton.rs","byte_start":173167,"byte_end":173222,"line_start":45,"line_end":45,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1206},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/singleton.rs","byte_start":173274,"byte_end":173277,"line_start":49,"line_end":49,"column_start":8,"column_end":11},"name":"ptr","qualname":"::pool::singleton::Pool::ptr","value":"fn () -> &'static super::Pool<Self::Data>","parent":{"krate":0,"index":1204},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1207},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/singleton.rs","byte_start":173543,"byte_end":173548,"line_start":56,"line_end":56,"column_start":8,"column_end":13},"name":"alloc","qualname":"::pool::singleton::Pool::alloc","value":"fn () -> Option<Box<Self, Uninit>>","parent":{"krate":0,"index":1204},"children":[],"decl_id":null,"docs":" Claims a memory block from the pool","sig":null,"attributes":[{"value":"/ Claims a memory block from the pool","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/singleton.rs","byte_start":173322,"byte_end":173361,"line_start":51,"line_end":51,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/singleton.rs","byte_start":173366,"byte_end":173369,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the pool is observed as exhausted","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/singleton.rs","byte_start":173374,"byte_end":173431,"line_start":53,"line_end":53,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/singleton.rs","byte_start":173436,"byte_end":173439,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ *NOTE:* This method does *not* have bounded execution time; i.e. it contains a CAS loop","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/singleton.rs","byte_start":173444,"byte_end":173535,"line_start":55,"line_end":55,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":1209},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/singleton.rs","byte_start":173975,"byte_end":173979,"line_start":71,"line_end":71,"column_start":8,"column_end":12},"name":"grow","qualname":"::pool::singleton::Pool::grow","value":"fn (memory: &'static mut [u8]) -> usize","parent":{"krate":0,"index":1204},"children":[],"decl_id":null,"docs":" Increases the capacity of the pool","sig":null,"attributes":[{"value":"/ Increases the capacity of the pool","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/singleton.rs","byte_start":173736,"byte_end":173774,"line_start":66,"line_end":66,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/singleton.rs","byte_start":173779,"byte_end":173782,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ This method might *not* fully utilize the given memory block due to alignment requirements","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/singleton.rs","byte_start":173787,"byte_end":173881,"line_start":68,"line_end":68,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/singleton.rs","byte_start":173886,"byte_end":173889,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ This method returns the number of *new* blocks that can be allocated.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/singleton.rs","byte_start":173894,"byte_end":173967,"line_start":70,"line_end":70,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":1210},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/singleton.rs","byte_start":174238,"byte_end":174248,"line_start":79,"line_end":79,"column_start":8,"column_end":18},"name":"grow_exact","qualname":"::pool::singleton::Pool::grow_exact","value":"fn <A> (memory: &'static mut MaybeUninit<A>) -> usize","parent":{"krate":0,"index":1204},"children":[],"decl_id":null,"docs":" Increases the capacity of the pool","sig":null,"attributes":[{"value":"/ Increases the capacity of the pool","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/singleton.rs","byte_start":174062,"byte_end":174100,"line_start":75,"line_end":75,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/singleton.rs","byte_start":174105,"byte_end":174108,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ Unlike [`Pool.grow`](trait.Pool.html#method.grow_exact) this method fully utilizes the given","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/singleton.rs","byte_start":174113,"byte_end":174209,"line_start":77,"line_end":77,"column_start":5,"column_end":101}},{"value":"/ memory block","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/singleton.rs","byte_start":174214,"byte_end":174230,"line_start":78,"line_end":78,"column_start":5,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":1212},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/singleton.rs","byte_start":174490,"byte_end":174493,"line_start":88,"line_end":88,"column_start":12,"column_end":15},"name":"Box","qualname":"::pool::singleton::Box","value":"Box {  }","parent":null,"children":[{"krate":0,"index":1215},{"krate":0,"index":1216}],"decl_id":null,"docs":" A memory block that belongs to the global memory pool, `POOL`\n","sig":null,"attributes":[{"value":"/ A memory block that belongs to the global memory pool, `POOL`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/singleton.rs","byte_start":174413,"byte_end":174478,"line_start":87,"line_end":87,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1219},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/singleton.rs","byte_start":174726,"byte_end":174730,"line_start":102,"line_end":102,"column_start":12,"column_end":16},"name":"init","qualname":"<Box<P, Uninit>>::init","value":"fn (self, val: P::Data) -> Box<P, Init>","parent":null,"children":[],"decl_id":null,"docs":" Initializes this memory block\n","sig":null,"attributes":[{"value":"/ Initializes this memory block","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/singleton.rs","byte_start":174681,"byte_end":174714,"line_start":101,"line_end":101,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1222},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/singleton.rs","byte_start":175331,"byte_end":175337,"line_start":129,"line_end":129,"column_start":12,"column_end":18},"name":"freeze","qualname":"<Box<P, Uninit>>::freeze","value":"fn (self) -> Box<P, Init>","parent":null,"children":[],"decl_id":null,"docs":" Freezes the contents of this memory block","sig":null,"attributes":[{"value":"/ Freezes the contents of this memory block","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/singleton.rs","byte_start":175172,"byte_end":175217,"line_start":126,"line_end":126,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/singleton.rs","byte_start":175222,"byte_end":175225,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ See [rust-lang/rust#58363](https://github.com/rust-lang/rust/pull/58363) for details.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/singleton.rs","byte_start":175230,"byte_end":175319,"line_start":128,"line_end":128,"column_start":5,"column_end":94}}]},{"kind":"Struct","id":{"krate":0,"index":1280},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/llsc.rs","byte_start":180099,"byte_end":180103,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"Node","qualname":"::pool::stack::Node","value":"Node {  }","parent":null,"children":[{"krate":0,"index":1282},{"krate":0,"index":1283}],"decl_id":null,"docs":" Unfortunate implementation detail required to use the\n [`Pool.grow_exact`](struct.Pool.html#method.grow_exact) method\n","sig":null,"attributes":[{"value":"/ Unfortunate implementation detail required to use the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/llsc.rs","byte_start":179963,"byte_end":180020,"line_start":10,"line_end":10,"column_start":1,"column_end":58}},{"value":"/ [`Pool.grow_exact`](struct.Pool.html#method.grow_exact) method","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/llsc.rs","byte_start":180021,"byte_end":180087,"line_start":11,"line_end":11,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":1295},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":163062,"byte_end":163066,"line_start":250,"line_end":250,"column_start":12,"column_end":16},"name":"Pool","qualname":"::pool::Pool","value":"Pool {  }","parent":null,"children":[{"krate":0,"index":1297},{"krate":0,"index":1298}],"decl_id":null,"docs":" A lock-free memory pool\n","sig":null,"attributes":[{"value":"/ A lock-free memory pool","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":163023,"byte_end":163050,"line_start":249,"line_end":249,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1305},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":163653,"byte_end":163656,"line_start":273,"line_end":273,"column_start":18,"column_end":21},"name":"new","qualname":"<Pool<T>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty pool\n","sig":null,"attributes":[{"value":"/ Creates a new empty pool","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":163607,"byte_end":163635,"line_start":272,"line_end":272,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1306},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":164010,"byte_end":164015,"line_start":286,"line_end":286,"column_start":12,"column_end":17},"name":"alloc","qualname":"<Pool<T>>::alloc","value":"fn (&self) -> Option<Box<T, Uninit>>","parent":null,"children":[],"decl_id":null,"docs":" Claims a memory block from the pool","sig":null,"attributes":[{"value":"/ Claims a memory block from the pool","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":163783,"byte_end":163822,"line_start":281,"line_end":281,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":163827,"byte_end":163830,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the pool is observed as exhausted","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":163835,"byte_end":163892,"line_start":283,"line_end":283,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":163897,"byte_end":163900,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ *NOTE:* This method does *not* have bounded execution time because it contains a CAS loop","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":163905,"byte_end":163998,"line_start":285,"line_end":285,"column_start":5,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":1307},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":164666,"byte_end":164670,"line_start":309,"line_end":309,"column_start":12,"column_end":16},"name":"free","qualname":"<Pool<T>>::free","value":"fn <S> (&self, value: Box<T, S>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Returns a memory block to the pool","sig":null,"attributes":[{"value":"/ Returns a memory block to the pool","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":164425,"byte_end":164463,"line_start":304,"line_end":304,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":164468,"byte_end":164471,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ *NOTE*: `T`'s destructor (if any) will run on `value` iff `S = Init`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":164476,"byte_end":164548,"line_start":306,"line_end":306,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":164553,"byte_end":164556,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ *NOTE:* This method does *not* have bounded execution time because it contains a CAS loop","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":164561,"byte_end":164654,"line_start":308,"line_end":308,"column_start":5,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":1309},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":165288,"byte_end":165292,"line_start":332,"line_end":332,"column_start":12,"column_end":16},"name":"grow","qualname":"<Pool<T>>::grow","value":"fn (&self, memory: &'static mut [u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Increases the capacity of the pool","sig":null,"attributes":[{"value":"/ Increases the capacity of the pool","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":165044,"byte_end":165082,"line_start":327,"line_end":327,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":165087,"byte_end":165090,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ This method might *not* fully utilize the given memory block due to alignment requirements.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":165095,"byte_end":165190,"line_start":329,"line_end":329,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":165195,"byte_end":165198,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ This method returns the number of *new* blocks that can be allocated.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":165203,"byte_end":165276,"line_start":331,"line_end":331,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":1310},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":166716,"byte_end":166726,"line_start":385,"line_end":385,"column_start":12,"column_end":22},"name":"grow_exact","qualname":"<Pool<T>>::grow_exact","value":"fn <A> (&self, memory: &'static mut MaybeUninit<A>) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Increases the capacity of the pool","sig":null,"attributes":[{"value":"/ Increases the capacity of the pool","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":166541,"byte_end":166579,"line_start":381,"line_end":381,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":166584,"byte_end":166587,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ Unlike [`Pool.grow`](struct.Pool.html#method.grow) this method fully utilizes the given","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":166592,"byte_end":166683,"line_start":383,"line_end":383,"column_start":5,"column_end":96}},{"value":"/ memory block","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":166688,"byte_end":166704,"line_start":384,"line_end":384,"column_start":5,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":1312},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":167480,"byte_end":167483,"line_start":413,"line_end":413,"column_start":12,"column_end":15},"name":"Box","qualname":"::pool::Box","value":"Box {  }","parent":null,"children":[{"krate":0,"index":1315},{"krate":0,"index":1316}],"decl_id":null,"docs":" A memory block\n","sig":null,"attributes":[{"value":"/ A memory block","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":167450,"byte_end":167468,"line_start":412,"line_end":412,"column_start":1,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":1319},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":167636,"byte_end":167640,"line_start":420,"line_end":420,"column_start":12,"column_end":16},"name":"init","qualname":"<Box<T, Uninit>>::init","value":"fn (self, val: T) -> Box<T, Init>","parent":null,"children":[],"decl_id":null,"docs":" Initializes this memory block\n","sig":null,"attributes":[{"value":"/ Initializes this memory block","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":167591,"byte_end":167624,"line_start":419,"line_end":419,"column_start":5,"column_end":38}}]},{"kind":"Enum","id":{"krate":0,"index":1320},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":167894,"byte_end":167900,"line_start":433,"line_end":433,"column_start":10,"column_end":16},"name":"Uninit","qualname":"::pool::Uninit","value":"Uninit::{}","parent":null,"children":[],"decl_id":null,"docs":" Uninitialized type state\n","sig":null,"attributes":[{"value":"/ Uninitialized type state","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":167856,"byte_end":167884,"line_start":432,"line_end":432,"column_start":1,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":1321},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":167941,"byte_end":167945,"line_start":436,"line_end":436,"column_start":10,"column_end":14},"name":"Init","qualname":"::pool::Init","value":"Init::{}","parent":null,"children":[],"decl_id":null,"docs":" Initialized type state\n","sig":null,"attributes":[{"value":"/ Initialized type state","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":167905,"byte_end":167931,"line_start":435,"line_end":435,"column_start":1,"column_end":27}}]},{"kind":"Mod","id":{"krate":0,"index":1365},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"spsc","qualname":"::spsc","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","parent":null,"children":[{"krate":0,"index":1366},{"krate":0,"index":1373},{"krate":0,"index":1376},{"krate":0,"index":1377},{"krate":0,"index":1378},{"krate":0,"index":1381},{"krate":0,"index":1426},{"krate":0,"index":1428},{"krate":0,"index":1430},{"krate":0,"index":1435},{"krate":0,"index":1439},{"krate":0,"index":1447},{"krate":0,"index":1454},{"krate":0,"index":1464},{"krate":0,"index":1470},{"krate":0,"index":1476},{"krate":0,"index":1483},{"krate":0,"index":1490},{"krate":0,"index":1499},{"krate":0,"index":1508},{"krate":0,"index":1509},{"krate":0,"index":1512},{"krate":0,"index":1516},{"krate":0,"index":1519},{"krate":0,"index":2390},{"krate":0,"index":2394},{"krate":0,"index":2397},{"krate":0,"index":2401},{"krate":0,"index":2404},{"krate":0,"index":2413},{"krate":0,"index":2418},{"krate":0,"index":2422},{"krate":0,"index":2425},{"krate":0,"index":2429},{"krate":0,"index":2432},{"krate":0,"index":2441},{"krate":0,"index":2446},{"krate":0,"index":2450},{"krate":0,"index":2453},{"krate":0,"index":2457},{"krate":0,"index":2460},{"krate":0,"index":2469},{"krate":0,"index":1523},{"krate":0,"index":1533},{"krate":0,"index":1538},{"krate":0,"index":1547},{"krate":0,"index":1554},{"krate":0,"index":1563},{"krate":0,"index":1564},{"krate":0,"index":1565},{"krate":0,"index":2474},{"krate":0,"index":2482},{"krate":0,"index":2489},{"krate":0,"index":2497}],"decl_id":null,"docs":" Fixed capacity Single Producer Single Consumer (SPSC) queue","sig":null,"attributes":[{"value":"cfg(has_atomics)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":4156,"byte_end":4175,"line_start":107,"line_end":107,"column_start":1,"column_end":20}},{"value":"! Fixed capacity Single Producer Single Consumer (SPSC) queue","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":182040,"byte_end":182103,"line_start":1,"line_end":1,"column_start":1,"column_end":64}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":182104,"byte_end":182107,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! NOTE: This module is not available on targets that do *not* support atomic loads, e.g. RISC-V","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":182108,"byte_end":182205,"line_start":3,"line_end":3,"column_start":1,"column_end":98}},{"value":"! cores w/o the A (Atomic) extension","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":182206,"byte_end":182244,"line_start":4,"line_end":4,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":182245,"byte_end":182248,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":182249,"byte_end":182263,"line_start":6,"line_end":6,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":182264,"byte_end":182267,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! - `Queue` can be used as a plain queue","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":182268,"byte_end":182310,"line_start":8,"line_end":8,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":182311,"byte_end":182314,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":182315,"byte_end":182322,"line_start":10,"line_end":10,"column_start":1,"column_end":8}},{"value":"! use heapless::spsc::Queue;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":182323,"byte_end":182353,"line_start":11,"line_end":11,"column_start":1,"column_end":31}},{"value":"! use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":182354,"byte_end":182382,"line_start":12,"line_end":12,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":182383,"byte_end":182386,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! let mut rb: Queue<u8, U4> = Queue::new();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":182387,"byte_end":182432,"line_start":14,"line_end":14,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":182433,"byte_end":182436,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"! assert!(rb.enqueue(0).is_ok());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":182437,"byte_end":182472,"line_start":16,"line_end":16,"column_start":1,"column_end":36}},{"value":"! assert!(rb.enqueue(1).is_ok());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":182473,"byte_end":182508,"line_start":17,"line_end":17,"column_start":1,"column_end":36}},{"value":"! assert!(rb.enqueue(2).is_ok());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":182509,"byte_end":182544,"line_start":18,"line_end":18,"column_start":1,"column_end":36}},{"value":"! assert!(rb.enqueue(3).is_ok());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":182545,"byte_end":182580,"line_start":19,"line_end":19,"column_start":1,"column_end":36}},{"value":"! assert!(rb.enqueue(4).is_err()); // full","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":182581,"byte_end":182625,"line_start":20,"line_end":20,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":182626,"byte_end":182629,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! assert_eq!(rb.dequeue(), Some(0));","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":182630,"byte_end":182668,"line_start":22,"line_end":22,"column_start":1,"column_end":39}},{"value":"! ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":182669,"byte_end":182676,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":182677,"byte_end":182680,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"! - `Queue` can be `split` and then be used in Single Producer Single Consumer mode","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":182681,"byte_end":182766,"line_start":25,"line_end":25,"column_start":1,"column_end":86}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":182767,"byte_end":182770,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":182771,"byte_end":182778,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"! use heapless::spsc::Queue;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":182779,"byte_end":182809,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"! use heapless::consts::*;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":182810,"byte_end":182838,"line_start":29,"line_end":29,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":182839,"byte_end":182842,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"! static mut Q: Queue<Event, U4> = Queue(heapless::i::Queue::new());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":182843,"byte_end":182913,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":182914,"byte_end":182917,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"! enum Event { A, B }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":182918,"byte_end":182941,"line_start":33,"line_end":33,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":182942,"byte_end":182945,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"! fn main() {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":182946,"byte_end":182961,"line_start":35,"line_end":35,"column_start":1,"column_end":16}},{"value":"!     // NOTE(unsafe) beware of aliasing the `consumer` end point","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":182962,"byte_end":183029,"line_start":36,"line_end":36,"column_start":1,"column_end":68}},{"value":"!     let mut consumer = unsafe { Q.split().1 };","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":183030,"byte_end":183080,"line_start":37,"line_end":37,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":183081,"byte_end":183084,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"!     loop {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":183085,"byte_end":183099,"line_start":39,"line_end":39,"column_start":1,"column_end":15}},{"value":"!         // `dequeue` is a lockless operation","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":183100,"byte_end":183148,"line_start":40,"line_end":40,"column_start":1,"column_end":49}},{"value":"!         match consumer.dequeue() {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":183149,"byte_end":183187,"line_start":41,"line_end":41,"column_start":1,"column_end":39}},{"value":"!             Some(Event::A) => { /* .. */ },","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":183188,"byte_end":183235,"line_start":42,"line_end":42,"column_start":1,"column_end":48}},{"value":"!             Some(Event::B) => { /* .. */ },","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":183236,"byte_end":183283,"line_start":43,"line_end":43,"column_start":1,"column_end":48}},{"value":"!             None => { /* sleep */ },","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":183284,"byte_end":183324,"line_start":44,"line_end":44,"column_start":1,"column_end":41}},{"value":"!         }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":183325,"byte_end":183338,"line_start":45,"line_end":45,"column_start":1,"column_end":14}},{"value":"! #       break","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":183339,"byte_end":183356,"line_start":46,"line_end":46,"column_start":1,"column_end":18}},{"value":"!     }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":183357,"byte_end":183366,"line_start":47,"line_end":47,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":183367,"byte_end":183372,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":183373,"byte_end":183376,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"! // this is a different execution context that can preempt `main`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":183377,"byte_end":183445,"line_start":50,"line_end":50,"column_start":1,"column_end":69}},{"value":"! fn interrupt_handler() {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":183446,"byte_end":183474,"line_start":51,"line_end":51,"column_start":1,"column_end":29}},{"value":"!     // NOTE(unsafe) beware of aliasing the `producer` end point","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":183475,"byte_end":183542,"line_start":52,"line_end":52,"column_start":1,"column_end":68}},{"value":"!     let mut producer = unsafe { Q.split().0 };","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":183543,"byte_end":183593,"line_start":53,"line_end":53,"column_start":1,"column_end":51}},{"value":"! #   let condition = true;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":183594,"byte_end":183623,"line_start":54,"line_end":54,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":183624,"byte_end":183627,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"!     // ..","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":183628,"byte_end":183641,"line_start":56,"line_end":56,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":183642,"byte_end":183645,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"!     if condition {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":183646,"byte_end":183668,"line_start":58,"line_end":58,"column_start":1,"column_end":23}},{"value":"!         producer.enqueue(Event::A).ok().unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":183669,"byte_end":183722,"line_start":59,"line_end":59,"column_start":1,"column_end":54}},{"value":"!     } else {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":183723,"byte_end":183739,"line_start":60,"line_end":60,"column_start":1,"column_end":17}},{"value":"!         producer.enqueue(Event::B).ok().unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":183740,"byte_end":183793,"line_start":61,"line_end":61,"column_start":1,"column_end":54}},{"value":"!     }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":183794,"byte_end":183803,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":183804,"byte_end":183807,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"!     // ..","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":183808,"byte_end":183821,"line_start":64,"line_end":64,"column_start":1,"column_end":14}},{"value":"! }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":183822,"byte_end":183827,"line_start":65,"line_end":65,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":183828,"byte_end":183835,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":183836,"byte_end":183839,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"! # Benchmarks","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":183840,"byte_end":183856,"line_start":68,"line_end":68,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":183857,"byte_end":183860,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"! Measured on a ARM Cortex-M3 core running at 8 MHz and with zero Flash wait cycles","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":183861,"byte_end":183946,"line_start":70,"line_end":70,"column_start":1,"column_end":86}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":183947,"byte_end":183950,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"! `-C opt-level`         |`3`|","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":183951,"byte_end":183983,"line_start":72,"line_end":72,"column_start":1,"column_end":33}},{"value":"! -----------------------|---|","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":183984,"byte_end":184016,"line_start":73,"line_end":73,"column_start":1,"column_end":33}},{"value":"! `Consumer<u8>::dequeue`| 15|","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":184017,"byte_end":184049,"line_start":74,"line_end":74,"column_start":1,"column_end":33}},{"value":"! `Queue<u8>::dequeue`   | 12|","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":184050,"byte_end":184082,"line_start":75,"line_end":75,"column_start":1,"column_end":33}},{"value":"! `Producer<u8>::enqueue`| 16|","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":184083,"byte_end":184115,"line_start":76,"line_end":76,"column_start":1,"column_end":33}},{"value":"! `Queue<u8>::enqueue`   | 14|","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":184116,"byte_end":184148,"line_start":77,"line_end":77,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":184149,"byte_end":184152,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"! - All execution times are in clock cycles. 1 clock cycle = 125 ns.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":184153,"byte_end":184223,"line_start":79,"line_end":79,"column_start":1,"column_end":71}},{"value":"! - Execution time is *dependent* of `mem::size_of::<T>()`. Both operations include one","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":184224,"byte_end":184313,"line_start":80,"line_end":80,"column_start":1,"column_end":90}},{"value":"! `memcpy(T)` in their successful path.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":184314,"byte_end":184355,"line_start":81,"line_end":81,"column_start":1,"column_end":42}},{"value":"! - The optimization level is indicated in the first row.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":184356,"byte_end":184415,"line_start":82,"line_end":82,"column_start":1,"column_end":60}},{"value":"! - The numbers reported correspond to the successful path (i.e. `Some` is returned by `dequeue`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":184416,"byte_end":184514,"line_start":83,"line_end":83,"column_start":1,"column_end":99}},{"value":"! and `Ok` is returned by `enqueue`).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":184515,"byte_end":184554,"line_start":84,"line_end":84,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1396},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/split.rs","byte_start":208057,"byte_end":208062,"line_start":17,"line_end":17,"column_start":12,"column_end":17},"name":"split","qualname":"<Queue<T, N, U, C>>::split","value":"fn <'rb> (&'rb mut self) -> (Producer<'rb, T, N, U, C>, Consumer<'rb, T, N, U, C>)","parent":null,"children":[],"decl_id":null,"docs":" Splits a statically allocated queue into producer and consumer end points\n","sig":null,"attributes":[{"value":"/ Splits a statically allocated queue into producer and consumer end points","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/split.rs","byte_start":207968,"byte_end":208045,"line_start":16,"line_end":16,"column_start":5,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":1398},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/split.rs","byte_start":208588,"byte_end":208596,"line_start":33,"line_end":33,"column_start":12,"column_end":20},"name":"Consumer","qualname":"::spsc::split::Consumer","value":"Consumer {  }","parent":null,"children":[{"krate":0,"index":1404},{"krate":0,"index":1405}],"decl_id":null,"docs":" A queue \"consumer\"; it can dequeue items from the queue\n","sig":null,"attributes":[{"value":"/ A queue \"consumer\"; it can dequeue items from the queue","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/split.rs","byte_start":208446,"byte_end":208505,"line_start":31,"line_end":31,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1412},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/split.rs","byte_start":209072,"byte_end":209080,"line_start":54,"line_end":54,"column_start":12,"column_end":20},"name":"Producer","qualname":"::spsc::split::Producer","value":"Producer {  }","parent":null,"children":[{"krate":0,"index":1418},{"krate":0,"index":1419}],"decl_id":null,"docs":" A queue \"producer\"; it can enqueue items into the queue\n","sig":null,"attributes":[{"value":"/ A queue \"producer\"; it can enqueue items into the queue","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/split.rs","byte_start":208930,"byte_end":208989,"line_start":52,"line_end":52,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1426},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":184877,"byte_end":184886,"line_start":97,"line_end":97,"column_start":12,"column_end":21},"name":"MultiCore","qualname":"::spsc::MultiCore","value":"","parent":null,"children":[],"decl_id":null,"docs":" Multi core synchronization - a memory barrier is used for synchronization\n","sig":null,"attributes":[{"value":"/ Multi core synchronization - a memory barrier is used for synchronization","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":184788,"byte_end":184865,"line_start":96,"line_end":96,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":1428},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":184991,"byte_end":185001,"line_start":100,"line_end":100,"column_start":12,"column_end":22},"name":"SingleCore","qualname":"::spsc::SingleCore","value":"","parent":null,"children":[],"decl_id":null,"docs":" Single core synchronization - no memory barrier synchronization, just a compiler fence\n","sig":null,"attributes":[{"value":"/ Single core synchronization - no memory barrier synchronization, just a compiler fence","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":184889,"byte_end":184979,"line_start":99,"line_end":99,"column_start":1,"column_end":91}}]},{"kind":"Struct","id":{"krate":0,"index":1447},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":187107,"byte_end":187112,"line_start":164,"line_end":164,"column_start":12,"column_end":17},"name":"Queue","qualname":"::spsc::Queue","value":"","parent":null,"children":[],"decl_id":null,"docs":" A statically allocated single producer single consumer queue with a capacity of `N` elements","sig":null,"attributes":[{"value":"/ A statically allocated single producer single consumer queue with a capacity of `N` elements","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":185895,"byte_end":185991,"line_start":144,"line_end":144,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":185992,"byte_end":185995,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ *IMPORTANT*: To get better performance use a capacity that is a power of 2 (e.g. `U16`, `U32`,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":185996,"byte_end":186094,"line_start":146,"line_end":146,"column_start":1,"column_end":99}},{"value":"/ etc.).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":186095,"byte_end":186105,"line_start":147,"line_end":147,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":186106,"byte_end":186109,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ By default `spsc::Queue` will use `usize` integers to hold the indices to its head and tail. For","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":186110,"byte_end":186210,"line_start":149,"line_end":149,"column_start":1,"column_end":101}},{"value":"/ small queues `usize` indices may be overkill. However, `spsc::Queue`'s index type is generic and","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":186211,"byte_end":186311,"line_start":150,"line_end":150,"column_start":1,"column_end":101}},{"value":"/ can be changed to `u8` or `u16` to reduce its footprint. The easiest to construct a","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":186312,"byte_end":186399,"line_start":151,"line_end":151,"column_start":1,"column_end":88}},{"value":"/ `spsc::Queue` with a smaller index type is to use the [`u8`] and [`u16`] constructors.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":186400,"byte_end":186490,"line_start":152,"line_end":152,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":186491,"byte_end":186494,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ [`u8`]: struct.Queue.html#method.u8","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":186495,"byte_end":186534,"line_start":154,"line_end":154,"column_start":1,"column_end":40}},{"value":"/ [`u16`]: struct.Queue.html#method.u16","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":186535,"byte_end":186576,"line_start":155,"line_end":155,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":186577,"byte_end":186580,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ *IMPORTANT*: `spsc::Queue<_, _, u8>` has a maximum capacity of 255 elements; `spsc::Queue<_, _,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":186581,"byte_end":186680,"line_start":157,"line_end":157,"column_start":1,"column_end":100}},{"value":"/ u16>` has a maximum capacity of 65535 elements.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":186681,"byte_end":186732,"line_start":158,"line_end":158,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":186733,"byte_end":186736,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ `spsc::Queue` also comes in a single core variant. This variant can be created using the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":186737,"byte_end":186829,"line_start":160,"line_end":160,"column_start":1,"column_end":93}},{"value":"/ following constructors: `u8_sc`, `u16_sc`, `usize_sc` and `new_sc`. This variant is `unsafe` to","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":186830,"byte_end":186929,"line_start":161,"line_end":161,"column_start":1,"column_end":100}},{"value":"/ create because the programmer must make sure that the queue's consumer and producer endpoints","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":186930,"byte_end":187027,"line_start":162,"line_end":162,"column_start":1,"column_end":98}},{"value":"/ (if split) are kept on a single core for their entire lifetime.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":187028,"byte_end":187095,"line_start":163,"line_end":163,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1459},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":187471,"byte_end":187479,"line_start":179,"line_end":179,"column_start":12,"column_end":20},"name":"capacity","qualname":"<Queue<T, N, U, C>>::capacity","value":"fn (&self) -> U","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum number of elements the queue can hold\n","sig":null,"attributes":[{"value":"/ Returns the maximum number of elements the queue can hold","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":187398,"byte_end":187459,"line_start":178,"line_end":178,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1460},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":187601,"byte_end":187609,"line_start":184,"line_end":184,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Queue<T, N, U, C>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the queue has a length of 0\n","sig":null,"attributes":[{"value":"/ Returns `true` if the queue has a length of 0","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":187540,"byte_end":187589,"line_start":183,"line_end":183,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1461},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":187732,"byte_end":187736,"line_start":189,"line_end":189,"column_start":12,"column_end":16},"name":"iter","qualname":"<Queue<T, N, U, C>>::iter","value":"fn (&self) -> Iter<'_, T, N, U, C>","parent":null,"children":[],"decl_id":null,"docs":" Iterates from the front of the queue to the back\n","sig":null,"attributes":[{"value":"/ Iterates from the front of the queue to the back","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":187668,"byte_end":187720,"line_start":188,"line_end":188,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1462},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":187954,"byte_end":187962,"line_start":198,"line_end":198,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<Queue<T, N, U, C>>::iter_mut","value":"fn (&mut self) -> IterMut<'_, T, N, U, C>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each value.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each value.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":187885,"byte_end":187942,"line_start":197,"line_end":197,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1511},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":196425,"byte_end":196428,"line_start":475,"line_end":475,"column_start":18,"column_end":21},"name":"new","qualname":"<crate::i::Queue<A, usize, MultiCore>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" `spsc::Queue` `const` constructor; wrap the returned value in\n [`spsc::Queue`](struct.Queue.html)\n","sig":null,"attributes":[{"value":"/ `spsc::Queue` `const` constructor; wrap the returned value in","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":196299,"byte_end":196364,"line_start":473,"line_end":473,"column_start":5,"column_end":70}},{"value":"/ [`spsc::Queue`](struct.Queue.html)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":196369,"byte_end":196407,"line_start":474,"line_end":474,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1515},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":196639,"byte_end":196642,"line_start":485,"line_end":485,"column_start":12,"column_end":15},"name":"new","qualname":"<Queue<T, N, usize, MultiCore>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Alias for [`spsc::Queue::usize`](struct.Queue.html#method.usize)\n","sig":null,"attributes":[{"value":"/ Alias for [`spsc::Queue::usize`](struct.Queue.html#method.usize)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":196559,"byte_end":196627,"line_start":484,"line_end":484,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1518},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":196887,"byte_end":196893,"line_start":493,"line_end":493,"column_start":25,"column_end":31},"name":"new_sc","qualname":"<crate::i::Queue<A, usize, SingleCore>>::new_sc","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" `spsc::Queue` `const` constructor; wrap the returned value in\n [`spsc::Queue`](struct.Queue.html)\n","sig":null,"attributes":[{"value":"/ `spsc::Queue` `const` constructor; wrap the returned value in","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":196754,"byte_end":196819,"line_start":491,"line_end":491,"column_start":5,"column_end":70}},{"value":"/ [`spsc::Queue`](struct.Queue.html)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":196824,"byte_end":196862,"line_start":492,"line_end":492,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1522},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":197121,"byte_end":197127,"line_start":503,"line_end":503,"column_start":19,"column_end":25},"name":"new_sc","qualname":"<Queue<T, N, usize, SingleCore>>::new_sc","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Alias for [`spsc::Queue::usize_sc`](struct.Queue.html#method.usize_sc)\n","sig":null,"attributes":[{"value":"/ Alias for [`spsc::Queue::usize_sc`](struct.Queue.html#method.usize_sc)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":197028,"byte_end":197102,"line_start":502,"line_end":502,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":2393},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":197197,"byte_end":197199,"line_start":508,"line_end":508,"column_start":8,"column_end":10},"name":"u8","qualname":"<Queue<T, N, u8, MultiCore>>::u8","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty queue with a fixed capacity of `N`\n","sig":null,"attributes":[{"value":"/ Creates an empty queue with a fixed capacity of `N`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":190256,"byte_end":190311,"line_start":306,"line_end":306,"column_start":13,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2396},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":197197,"byte_end":197199,"line_start":508,"line_end":508,"column_start":8,"column_end":10},"name":"u8","qualname":"<crate::i::Queue<A, u8, MultiCore>>::u8","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" `spsc::Queue` `const` constructor; wrap the returned value in\n [`spsc::Queue`](struct.Queue.html)\n","sig":null,"attributes":[{"value":"/ `spsc::Queue` `const` constructor; wrap the returned value in","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":190486,"byte_end":190551,"line_start":313,"line_end":313,"column_start":13,"column_end":78}},{"value":"/ [`spsc::Queue`](struct.Queue.html)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":190564,"byte_end":190602,"line_start":314,"line_end":314,"column_start":13,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2400},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":197201,"byte_end":197206,"line_start":508,"line_end":508,"column_start":12,"column_end":17},"name":"u8_sc","qualname":"<Queue<T, N, u8, SingleCore>>::u8_sc","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty queue with a fixed capacity of `N` (single core variant)\n","sig":null,"attributes":[{"value":"/ Creates an empty queue with a fixed capacity of `N` (single core variant)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":190973,"byte_end":191050,"line_start":328,"line_end":328,"column_start":13,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":2403},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":197201,"byte_end":197206,"line_start":508,"line_end":508,"column_start":12,"column_end":17},"name":"u8_sc","qualname":"<crate::i::Queue<A, u8, SingleCore>>::u8_sc","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" `spsc::Queue` `const` constructor; wrap the returned value in\n [`spsc::Queue`](struct.Queue.html)\n","sig":null,"attributes":[{"value":"/ `spsc::Queue` `const` constructor; wrap the returned value in","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":191239,"byte_end":191304,"line_start":335,"line_end":335,"column_start":13,"column_end":78}},{"value":"/ [`spsc::Queue`](struct.Queue.html)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":191317,"byte_end":191355,"line_start":336,"line_end":336,"column_start":13,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2421},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":197216,"byte_end":197219,"line_start":509,"line_end":509,"column_start":8,"column_end":11},"name":"u16","qualname":"<Queue<T, N, u16, MultiCore>>::u16","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty queue with a fixed capacity of `N`\n","sig":null,"attributes":[{"value":"/ Creates an empty queue with a fixed capacity of `N`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":190256,"byte_end":190311,"line_start":306,"line_end":306,"column_start":13,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2424},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":197216,"byte_end":197219,"line_start":509,"line_end":509,"column_start":8,"column_end":11},"name":"u16","qualname":"<crate::i::Queue<A, u16, MultiCore>>::u16","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" `spsc::Queue` `const` constructor; wrap the returned value in\n [`spsc::Queue`](struct.Queue.html)\n","sig":null,"attributes":[{"value":"/ `spsc::Queue` `const` constructor; wrap the returned value in","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":190486,"byte_end":190551,"line_start":313,"line_end":313,"column_start":13,"column_end":78}},{"value":"/ [`spsc::Queue`](struct.Queue.html)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":190564,"byte_end":190602,"line_start":314,"line_end":314,"column_start":13,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2428},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":197221,"byte_end":197227,"line_start":509,"line_end":509,"column_start":13,"column_end":19},"name":"u16_sc","qualname":"<Queue<T, N, u16, SingleCore>>::u16_sc","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty queue with a fixed capacity of `N` (single core variant)\n","sig":null,"attributes":[{"value":"/ Creates an empty queue with a fixed capacity of `N` (single core variant)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":190973,"byte_end":191050,"line_start":328,"line_end":328,"column_start":13,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":2431},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":197221,"byte_end":197227,"line_start":509,"line_end":509,"column_start":13,"column_end":19},"name":"u16_sc","qualname":"<crate::i::Queue<A, u16, SingleCore>>::u16_sc","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" `spsc::Queue` `const` constructor; wrap the returned value in\n [`spsc::Queue`](struct.Queue.html)\n","sig":null,"attributes":[{"value":"/ `spsc::Queue` `const` constructor; wrap the returned value in","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":191239,"byte_end":191304,"line_start":335,"line_end":335,"column_start":13,"column_end":78}},{"value":"/ [`spsc::Queue`](struct.Queue.html)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":191317,"byte_end":191355,"line_start":336,"line_end":336,"column_start":13,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2449},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":197237,"byte_end":197242,"line_start":510,"line_end":510,"column_start":8,"column_end":13},"name":"usize","qualname":"<Queue<T, N, usize, MultiCore>>::usize","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty queue with a fixed capacity of `N`\n","sig":null,"attributes":[{"value":"/ Creates an empty queue with a fixed capacity of `N`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":190256,"byte_end":190311,"line_start":306,"line_end":306,"column_start":13,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2452},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":197237,"byte_end":197242,"line_start":510,"line_end":510,"column_start":8,"column_end":13},"name":"usize","qualname":"<crate::i::Queue<A, usize, MultiCore>>::usize","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" `spsc::Queue` `const` constructor; wrap the returned value in\n [`spsc::Queue`](struct.Queue.html)\n","sig":null,"attributes":[{"value":"/ `spsc::Queue` `const` constructor; wrap the returned value in","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":190486,"byte_end":190551,"line_start":313,"line_end":313,"column_start":13,"column_end":78}},{"value":"/ [`spsc::Queue`](struct.Queue.html)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":190564,"byte_end":190602,"line_start":314,"line_end":314,"column_start":13,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2456},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":197244,"byte_end":197252,"line_start":510,"line_end":510,"column_start":15,"column_end":23},"name":"usize_sc","qualname":"<Queue<T, N, usize, SingleCore>>::usize_sc","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty queue with a fixed capacity of `N` (single core variant)\n","sig":null,"attributes":[{"value":"/ Creates an empty queue with a fixed capacity of `N` (single core variant)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":190973,"byte_end":191050,"line_start":328,"line_end":328,"column_start":13,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":2459},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":197244,"byte_end":197252,"line_start":510,"line_end":510,"column_start":15,"column_end":23},"name":"usize_sc","qualname":"<crate::i::Queue<A, usize, SingleCore>>::usize_sc","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" `spsc::Queue` `const` constructor; wrap the returned value in\n [`spsc::Queue`](struct.Queue.html)\n","sig":null,"attributes":[{"value":"/ `spsc::Queue` `const` constructor; wrap the returned value in","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":191239,"byte_end":191304,"line_start":335,"line_end":335,"column_start":13,"column_end":78}},{"value":"/ [`spsc::Queue`](struct.Queue.html)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":191317,"byte_end":191355,"line_start":336,"line_end":336,"column_start":13,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1538},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":197862,"byte_end":197866,"line_start":538,"line_end":538,"column_start":12,"column_end":16},"name":"Iter","qualname":"::spsc::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":1544},{"krate":0,"index":1545},{"krate":0,"index":1546}],"decl_id":null,"docs":" An iterator over the items of a queue\n","sig":null,"attributes":[{"value":"/ An iterator over the items of a queue","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":197809,"byte_end":197850,"line_start":537,"line_end":537,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":1554},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":198356,"byte_end":198363,"line_start":565,"line_end":565,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::spsc::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":1560},{"krate":0,"index":1561},{"krate":0,"index":1562}],"decl_id":null,"docs":" A mutable iterator over the items of a queue\n","sig":null,"attributes":[{"value":"/ A mutable iterator over the items of a queue","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":198296,"byte_end":198344,"line_start":564,"line_end":564,"column_start":1,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":1577},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/sealed.rs","byte_start":216847,"byte_end":216852,"line_start":9,"line_end":9,"column_start":22,"column_end":27},"name":"XCore","qualname":"::sealed::spsc::XCore","value":"XCore","parent":null,"children":[{"krate":0,"index":1578}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1578},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/sealed.rs","byte_start":216866,"byte_end":216879,"line_start":10,"line_end":10,"column_start":12,"column_end":25},"name":"is_multi_core","qualname":"::sealed::spsc::XCore::is_multi_core","value":"fn () -> bool","parent":{"krate":0,"index":1577},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1583},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/sealed.rs","byte_start":217187,"byte_end":217190,"line_start":27,"line_end":27,"column_start":22,"column_end":25},"name":"Uxx","qualname":"::sealed::spsc::Uxx","value":"Uxx: Into<usize> + Send","parent":null,"children":[{"krate":0,"index":1584},{"krate":0,"index":1585},{"krate":0,"index":1586},{"krate":0,"index":1588},{"krate":0,"index":1589}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1584},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/sealed.rs","byte_start":217247,"byte_end":217255,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"saturate","qualname":"::sealed::spsc::Uxx::saturate","value":"fn (x: usize) -> Self","parent":{"krate":0,"index":1583},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1585},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/sealed.rs","byte_start":217310,"byte_end":217318,"line_start":32,"line_end":32,"column_start":12,"column_end":20},"name":"truncate","qualname":"::sealed::spsc::Uxx::truncate","value":"fn (x: usize) -> Self","parent":{"krate":0,"index":1583},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1586},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/sealed.rs","byte_start":217408,"byte_end":217420,"line_start":36,"line_end":36,"column_start":19,"column_end":31},"name":"load_acquire","qualname":"::sealed::spsc::Uxx::load_acquire","value":"fn <C> (x: *const Self) -> Self","parent":{"krate":0,"index":1583},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(has_atomics)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/sealed.rs","byte_start":217347,"byte_end":217366,"line_start":34,"line_end":34,"column_start":9,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1588},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/sealed.rs","byte_start":217547,"byte_end":217559,"line_start":42,"line_end":42,"column_start":12,"column_end":24},"name":"load_relaxed","qualname":"::sealed::spsc::Uxx::load_relaxed","value":"fn (x: *const Self) -> Self","parent":{"krate":0,"index":1583},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(has_atomics)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/sealed.rs","byte_start":217493,"byte_end":217512,"line_start":40,"line_end":40,"column_start":9,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1589},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/sealed.rs","byte_start":217655,"byte_end":217668,"line_start":46,"line_end":46,"column_start":19,"column_end":32},"name":"store_release","qualname":"::sealed::spsc::Uxx::store_release","value":"fn <C> (x: *const Self, val: Self) -> ()","parent":{"krate":0,"index":1583},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(has_atomics)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/sealed.rs","byte_start":217594,"byte_end":217613,"line_start":44,"line_end":44,"column_start":9,"column_end":28}}]},{"kind":"Trait","id":{"krate":0,"index":1620},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/sealed.rs","byte_start":221966,"byte_end":221970,"line_start":194,"line_end":194,"column_start":22,"column_end":26},"name":"Kind","qualname":"::sealed::binary_heap::Kind","value":"Kind","parent":null,"children":[{"krate":0,"index":1621}],"decl_id":null,"docs":" The binary heap kind: min-heap or max-heap\n","sig":null,"attributes":[{"value":"/ The binary heap kind: min-heap or max-heap","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/sealed.rs","byte_start":221898,"byte_end":221944,"line_start":193,"line_end":193,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1621},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/sealed.rs","byte_start":222007,"byte_end":222015,"line_start":196,"line_end":196,"column_start":12,"column_end":20},"name":"ordering","qualname":"::sealed::binary_heap::Kind::ordering","value":"fn () -> Ordering","parent":{"krate":0,"index":1620},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":4737,"byte_end":4746,"line_start":21,"line_end":21,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":44},{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":5516,"byte_end":5519,"line_start":49,"line_end":49,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":6580,"byte_end":6587,"line_start":97,"line_end":97,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":12806,"byte_end":12813,"line_start":273,"line_end":273,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":14883,"byte_end":14891,"line_start":338,"line_end":338,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":15415,"byte_end":15423,"line_start":356,"line_end":356,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":106},{"krate":0,"index":109},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":120},{"krate":0,"index":122},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":128},{"krate":0,"index":131},{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":26020,"byte_end":26028,"line_start":718,"line_end":718,"column_start":47,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":26350,"byte_end":26358,"line_start":732,"line_end":732,"column_start":50,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":26652,"byte_end":26660,"line_start":744,"line_end":744,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":26982,"byte_end":26990,"line_start":759,"line_end":759,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":27295,"byte_end":27303,"line_start":771,"line_end":771,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":27637,"byte_end":27645,"line_start":785,"line_end":785,"column_start":64,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":28113,"byte_end":28121,"line_start":802,"line_end":802,"column_start":25,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":28291,"byte_end":28299,"line_start":811,"line_end":811,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":189}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":28661,"byte_end":28669,"line_start":827,"line_end":827,"column_start":49,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":29042,"byte_end":29050,"line_start":842,"line_end":842,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":205}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":30108,"byte_end":30112,"line_start":890,"line_end":890,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":234},{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":30307,"byte_end":30311,"line_start":898,"line_end":898,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":30531,"byte_end":30538,"line_start":910,"line_end":910,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":251},{"krate":0,"index":252}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":33798,"byte_end":33806,"line_start":52,"line_end":52,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":288}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":34111,"byte_end":34119,"line_start":66,"line_end":66,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":299},{"krate":0,"index":304},{"krate":0,"index":308},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":318},{"krate":0,"index":322},{"krate":0,"index":326},{"krate":0,"index":329},{"krate":0,"index":332}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":45478,"byte_end":45486,"line_start":454,"line_end":454,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":45734,"byte_end":45742,"line_start":467,"line_end":467,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":46023,"byte_end":46031,"line_start":478,"line_end":478,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":348}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":46316,"byte_end":46324,"line_start":491,"line_end":491,"column_start":60,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":355}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":46682,"byte_end":46690,"line_start":504,"line_end":504,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":47008,"byte_end":47016,"line_start":518,"line_end":518,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":368}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":47336,"byte_end":47344,"line_start":532,"line_end":532,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":48034,"byte_end":48038,"line_start":566,"line_end":566,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":391},{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":48191,"byte_end":48195,"line_start":574,"line_end":574,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":397}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":48540,"byte_end":48550,"line_start":592,"line_end":592,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":410},{"krate":0,"index":411}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":49145,"byte_end":49157,"line_start":620,"line_end":620,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":424},{"krate":0,"index":425}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":50036,"byte_end":50045,"line_start":21,"line_end":21,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":449}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":50290,"byte_end":50299,"line_start":31,"line_end":31,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":462},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":475},{"krate":0,"index":480},{"krate":0,"index":483}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":59467,"byte_end":59476,"line_start":381,"line_end":381,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":492},{"krate":0,"index":493}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":59734,"byte_end":59743,"line_start":394,"line_end":394,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":500}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":59975,"byte_end":59984,"line_start":405,"line_end":405,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":505}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":60121,"byte_end":60130,"line_start":415,"line_end":415,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":510}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":60366,"byte_end":60375,"line_start":428,"line_end":428,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":515}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":60627,"byte_end":60636,"line_start":439,"line_end":439,"column_start":40,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":520}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":61038,"byte_end":61046,"line_start":462,"line_end":462,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":531},{"krate":0,"index":532}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":61240,"byte_end":61249,"line_start":473,"line_end":473,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":539}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":62031,"byte_end":62035,"line_start":509,"line_end":509,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":557},{"krate":0,"index":558}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":62217,"byte_end":62221,"line_start":517,"line_end":517,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":564}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":62358,"byte_end":62367,"line_start":525,"line_end":525,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":569}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":62626,"byte_end":62633,"line_start":539,"line_end":539,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":579},{"krate":0,"index":580}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":62855,"byte_end":62864,"line_start":547,"line_end":547,"column_start":54,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":587}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":63216,"byte_end":63225,"line_start":562,"line_end":562,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":64651,"byte_end":64657,"line_start":23,"line_end":23,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":619}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":64876,"byte_end":64882,"line_start":32,"line_end":32,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":622},{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":635}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":73213,"byte_end":73219,"line_start":353,"line_end":353,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":638}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":73341,"byte_end":73347,"line_start":362,"line_end":362,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":642}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":73534,"byte_end":73540,"line_start":373,"line_end":373,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":645},{"krate":0,"index":646}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":73756,"byte_end":73762,"line_start":386,"line_end":386,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":649}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":73940,"byte_end":73946,"line_start":397,"line_end":397,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":652}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":74121,"byte_end":74127,"line_start":406,"line_end":406,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":655}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":74302,"byte_end":74308,"line_start":415,"line_end":415,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":658}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":74494,"byte_end":74500,"line_start":425,"line_end":425,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":662}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":74688,"byte_end":74694,"line_start":435,"line_end":435,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":666},{"krate":0,"index":668}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":74994,"byte_end":75000,"line_start":448,"line_end":448,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":672},{"krate":0,"index":673}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":75147,"byte_end":75153,"line_start":459,"line_end":459,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":676}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":75289,"byte_end":75295,"line_start":468,"line_end":468,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":679}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":75422,"byte_end":75428,"line_start":478,"line_end":478,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":682}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":75582,"byte_end":75588,"line_start":488,"line_end":488,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":686},{"krate":0,"index":687}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":76719,"byte_end":76725,"line_start":537,"line_end":537,"column_start":16,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":83051,"byte_end":83054,"line_start":6,"line_end":6,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":707}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":83301,"byte_end":83304,"line_start":16,"line_end":16,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":723},{"krate":0,"index":724},{"krate":0,"index":725}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":87421,"byte_end":87424,"line_start":167,"line_end":167,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":734}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":87554,"byte_end":87557,"line_start":177,"line_end":177,"column_start":12,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":738},{"krate":0,"index":739},{"krate":0,"index":740},{"krate":0,"index":741},{"krate":0,"index":742},{"krate":0,"index":743},{"krate":0,"index":744},{"krate":0,"index":745},{"krate":0,"index":746},{"krate":0,"index":747},{"krate":0,"index":748},{"krate":0,"index":749},{"krate":0,"index":750},{"krate":0,"index":751},{"krate":0,"index":752},{"krate":0,"index":753}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":94388,"byte_end":94391,"line_start":419,"line_end":419,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":757}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":94511,"byte_end":94514,"line_start":428,"line_end":428,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":761}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":94708,"byte_end":94711,"line_start":438,"line_end":438,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":764}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":94966,"byte_end":94969,"line_start":450,"line_end":450,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":768}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":95119,"byte_end":95122,"line_start":459,"line_end":459,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":772}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":95318,"byte_end":95321,"line_start":471,"line_end":471,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":778}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":95551,"byte_end":95554,"line_start":484,"line_end":484,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":783}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":95754,"byte_end":95757,"line_start":494,"line_end":494,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":788}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":96401,"byte_end":96404,"line_start":528,"line_end":528,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":807}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":97014,"byte_end":97022,"line_start":558,"line_end":558,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":817},{"krate":0,"index":818}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":97459,"byte_end":97467,"line_start":578,"line_end":578,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":822}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":97667,"byte_end":97675,"line_start":591,"line_end":591,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":826}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":98017,"byte_end":98020,"line_start":605,"line_end":605,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":830},{"krate":0,"index":831},{"krate":0,"index":832}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":98251,"byte_end":98254,"line_start":617,"line_end":617,"column_start":46,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":838}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":99130,"byte_end":99133,"line_start":660,"line_end":660,"column_start":19,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":99211,"byte_end":99214,"line_start":667,"line_end":667,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":847},{"krate":0,"index":848}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":99370,"byte_end":99373,"line_start":678,"line_end":678,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":852}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":99524,"byte_end":99527,"line_start":687,"line_end":687,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":856}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":99665,"byte_end":99668,"line_start":697,"line_end":697,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":860}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":99808,"byte_end":99811,"line_start":707,"line_end":707,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":864}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":99942,"byte_end":99945,"line_start":717,"line_end":717,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":868}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":109842,"byte_end":109855,"line_start":46,"line_end":46,"column_start":12,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":877},{"krate":0,"index":878}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":110740,"byte_end":110753,"line_start":81,"line_end":81,"column_start":12,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":882},{"krate":0,"index":884}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":111543,"byte_end":111556,"line_start":112,"line_end":112,"column_start":12,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":888},{"krate":0,"index":889},{"krate":0,"index":890},{"krate":0,"index":891},{"krate":0,"index":892}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":113024,"byte_end":113037,"line_start":165,"line_end":165,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":896}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":113284,"byte_end":113297,"line_start":179,"line_end":179,"column_start":34,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":902}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":115787,"byte_end":115797,"line_start":29,"line_end":29,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":925}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":117794,"byte_end":117804,"line_start":95,"line_end":95,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":936},{"krate":0,"index":937},{"krate":0,"index":938},{"krate":0,"index":939},{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":942},{"krate":0,"index":943},{"krate":0,"index":944},{"krate":0,"index":945},{"krate":0,"index":946},{"krate":0,"index":947},{"krate":0,"index":948},{"krate":0,"index":949},{"krate":0,"index":950}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":126160,"byte_end":126164,"line_start":382,"line_end":382,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":960},{"krate":0,"index":961},{"krate":0,"index":962},{"krate":0,"index":963},{"krate":0,"index":964}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":128059,"byte_end":128066,"line_start":450,"line_end":450,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":976}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":128273,"byte_end":128280,"line_start":463,"line_end":463,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":981},{"krate":0,"index":982}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":128611,"byte_end":128618,"line_start":477,"line_end":477,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":987}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":128939,"byte_end":128946,"line_start":490,"line_end":490,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":993}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":129250,"byte_end":129254,"line_start":504,"line_end":504,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":997}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":129509,"byte_end":129519,"line_start":515,"line_end":515,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1002}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":129665,"byte_end":129675,"line_start":526,"line_end":526,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1007}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":129936,"byte_end":129946,"line_start":540,"line_end":540,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1012}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":130141,"byte_end":130151,"line_start":551,"line_end":551,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1017}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":138185,"byte_end":138187,"line_start":98,"line_end":98,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1070},{"krate":0,"index":1071},{"krate":0,"index":1072},{"krate":0,"index":1073}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":139077,"byte_end":139079,"line_start":130,"line_end":130,"column_start":25,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":139269,"byte_end":139271,"line_start":139,"line_end":139,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1084},{"krate":0,"index":1085},{"krate":0,"index":1086},{"krate":0,"index":1087}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":140189,"byte_end":140191,"line_start":171,"line_end":171,"column_start":25,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":140381,"byte_end":140383,"line_start":180,"line_end":180,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1098},{"krate":0,"index":1099},{"krate":0,"index":1100},{"krate":0,"index":1101}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":141500,"byte_end":141502,"line_start":221,"line_end":221,"column_start":25,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":141695,"byte_end":141698,"line_start":230,"line_end":230,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1112},{"krate":0,"index":1113},{"krate":0,"index":1114},{"krate":0,"index":1115}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":143062,"byte_end":143065,"line_start":279,"line_end":279,"column_start":25,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":143258,"byte_end":143261,"line_start":288,"line_end":288,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1126},{"krate":0,"index":1127},{"krate":0,"index":1128},{"krate":0,"index":1129}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":145121,"byte_end":145124,"line_start":353,"line_end":353,"column_start":25,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":145317,"byte_end":145320,"line_start":362,"line_end":362,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1140},{"krate":0,"index":1141},{"krate":0,"index":1142},{"krate":0,"index":1143}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":148172,"byte_end":148175,"line_start":459,"line_end":459,"column_start":25,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":148275,"byte_end":148279,"line_start":466,"line_end":466,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1152}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/singleton.rs","byte_start":174641,"byte_end":174644,"line_start":97,"line_end":97,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1219}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/singleton.rs","byte_start":175096,"byte_end":175099,"line_start":121,"line_end":121,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1222}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/singleton.rs","byte_start":175896,"byte_end":175899,"line_start":149,"line_end":149,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1225},{"krate":0,"index":1226}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/singleton.rs","byte_start":176043,"byte_end":176046,"line_start":160,"line_end":160,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1229}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/singleton.rs","byte_start":176214,"byte_end":176217,"line_start":169,"line_end":169,"column_start":58,"column_end":61},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/singleton.rs","byte_start":176248,"byte_end":176251,"line_start":171,"line_end":171,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1234}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/singleton.rs","byte_start":176444,"byte_end":176447,"line_start":181,"line_end":181,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1237}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/singleton.rs","byte_start":176639,"byte_end":176642,"line_start":191,"line_end":191,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1241}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/singleton.rs","byte_start":177024,"byte_end":177027,"line_start":209,"line_end":209,"column_start":28,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/singleton.rs","byte_start":177104,"byte_end":177107,"line_start":216,"line_end":216,"column_start":28,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/singleton.rs","byte_start":177180,"byte_end":177183,"line_start":223,"line_end":223,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1251},{"krate":0,"index":1252}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/singleton.rs","byte_start":177366,"byte_end":177369,"line_start":235,"line_end":235,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1256}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/singleton.rs","byte_start":177548,"byte_end":177551,"line_start":245,"line_end":245,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1259}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/singleton.rs","byte_start":177711,"byte_end":177714,"line_start":255,"line_end":255,"column_start":16,"column_end":19},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/singleton.rs","byte_start":177782,"byte_end":177785,"line_start":262,"line_end":262,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1264}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/singleton.rs","byte_start":177983,"byte_end":177986,"line_start":272,"line_end":272,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1267}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/singleton.rs","byte_start":178147,"byte_end":178150,"line_start":282,"line_end":282,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1270}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/llsc.rs","byte_start":180186,"byte_end":180190,"line_start":17,"line_end":17,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1286}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/llsc.rs","byte_start":180331,"byte_end":180336,"line_start":27,"line_end":27,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1292},{"krate":0,"index":1293},{"krate":0,"index":1294}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":163537,"byte_end":163541,"line_start":267,"line_end":267,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":163573,"byte_end":163577,"line_start":269,"line_end":269,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":163593,"byte_end":163597,"line_start":271,"line_end":271,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1305},{"krate":0,"index":1306},{"krate":0,"index":1307},{"krate":0,"index":1309},{"krate":0,"index":1310}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":167570,"byte_end":167573,"line_start":418,"line_end":418,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1319}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":167977,"byte_end":167980,"line_start":438,"line_end":438,"column_start":28,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":168032,"byte_end":168035,"line_start":440,"line_end":440,"column_start":28,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":168111,"byte_end":168114,"line_start":442,"line_end":442,"column_start":52,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":168142,"byte_end":168145,"line_start":444,"line_end":444,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1332},{"krate":0,"index":1333}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":168311,"byte_end":168314,"line_start":455,"line_end":455,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1336}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":168466,"byte_end":168469,"line_start":464,"line_end":464,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1339},{"krate":0,"index":1340}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":168606,"byte_end":168609,"line_start":472,"line_end":472,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1343}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":168742,"byte_end":168745,"line_start":478,"line_end":478,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1346}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":168913,"byte_end":168916,"line_start":487,"line_end":487,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1349}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":169085,"byte_end":169088,"line_start":496,"line_end":496,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1352}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":169223,"byte_end":169226,"line_start":505,"line_end":505,"column_start":16,"column_end":19},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":169269,"byte_end":169272,"line_start":507,"line_end":507,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1357}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":169445,"byte_end":169448,"line_start":516,"line_end":516,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1360}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":169584,"byte_end":169587,"line_start":525,"line_end":525,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1363}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/split.rs","byte_start":207873,"byte_end":207878,"line_start":10,"line_end":10,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1396}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/split.rs","byte_start":208816,"byte_end":208824,"line_start":43,"line_end":43,"column_start":38,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/split.rs","byte_start":209297,"byte_end":209305,"line_start":64,"line_end":64,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":185232,"byte_end":185238,"line_start":109,"line_end":109,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1438}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":185401,"byte_end":185407,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1442},{"krate":0,"index":1443},{"krate":0,"index":1444},{"krate":0,"index":1445},{"krate":0,"index":1446}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":187303,"byte_end":187308,"line_start":172,"line_end":172,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1459},{"krate":0,"index":1460},{"krate":0,"index":1461},{"krate":0,"index":1462},{"krate":0,"index":1463}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":188366,"byte_end":188371,"line_start":215,"line_end":215,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1469}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":188637,"byte_end":188642,"line_start":230,"line_end":230,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1475}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":188904,"byte_end":188909,"line_start":242,"line_end":242,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1481}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":189229,"byte_end":189234,"line_start":257,"line_end":257,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1488}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":196266,"byte_end":196271,"line_start":472,"line_end":472,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1511}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":196494,"byte_end":196499,"line_start":480,"line_end":480,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1515}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":196720,"byte_end":196725,"line_start":490,"line_end":490,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1518}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Inherent","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":196962,"byte_end":196967,"line_start":498,"line_end":498,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1522}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":197321,"byte_end":197326,"line_start":512,"line_end":512,"column_start":66,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":1531}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":197704,"byte_end":197709,"line_start":528,"line_end":528,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":198055,"byte_end":198059,"line_start":549,"line_end":549,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1553}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/sealed.rs","byte_start":216948,"byte_end":216958,"line_start":14,"line_end":14,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1580}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/sealed.rs","byte_start":217083,"byte_end":217092,"line_start":21,"line_end":21,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1582}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/sealed.rs","byte_start":222063,"byte_end":222066,"line_start":199,"line_end":199,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1623}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/sealed.rs","byte_start":222174,"byte_end":222177,"line_start":205,"line_end":205,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1625}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":4028,"byte_end":4039,"line_start":101,"line_end":101,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":904}},{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":4049,"byte_end":4050,"line_start":102,"line_end":102,"column_start":9,"column_end":10},"ref_id":{"krate":0,"index":1026}},{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":4098,"byte_end":4102,"line_start":104,"line_end":104,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1055}},{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":4150,"byte_end":4154,"line_start":106,"line_end":106,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1157}},{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":162888,"byte_end":162897,"line_start":244,"line_end":244,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":1180}},{"kind":"Mod","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/lib.rs","byte_start":4184,"byte_end":4188,"line_start":108,"line_end":108,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1365}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":4737,"byte_end":4746,"line_start":21,"line_end":21,"column_start":6,"column_end":15},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1626},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":5516,"byte_end":5519,"line_start":49,"line_end":49,"column_start":6,"column_end":9},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1649},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":6580,"byte_end":6587,"line_start":97,"line_end":97,"column_start":15,"column_end":22},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":60},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":12806,"byte_end":12813,"line_start":273,"line_end":273,"column_start":25,"column_end":32},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":60},"to":{"krate":1,"index":1606}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":14883,"byte_end":14891,"line_start":338,"line_end":338,"column_start":18,"column_end":26},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":84},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":15415,"byte_end":15423,"line_start":356,"line_end":356,"column_start":18,"column_end":26},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":84},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":26020,"byte_end":26028,"line_start":718,"line_end":718,"column_start":47,"column_end":55},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":84},"to":{"krate":1,"index":2154}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":26350,"byte_end":26358,"line_start":732,"line_end":732,"column_start":50,"column_end":58},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":84},"to":{"krate":1,"index":2158}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":26652,"byte_end":26660,"line_start":744,"line_end":744,"column_start":28,"column_end":36},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":84},"to":{"krate":1,"index":1606}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":26982,"byte_end":26990,"line_start":759,"line_end":759,"column_start":33,"column_end":41},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":84},"to":{"krate":1,"index":6076}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":27295,"byte_end":27303,"line_start":771,"line_end":771,"column_start":30,"column_end":38},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":84},"to":{"krate":1,"index":1895}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":27637,"byte_end":27645,"line_start":785,"line_end":785,"column_start":64,"column_end":72},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":84},"to":{"krate":1,"index":1634}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":28113,"byte_end":28121,"line_start":802,"line_end":802,"column_start":25,"column_end":33},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":84},"to":{"krate":1,"index":1639}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":28291,"byte_end":28299,"line_start":811,"line_end":811,"column_start":37,"column_end":45},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":84},"to":{"krate":1,"index":4775}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":28661,"byte_end":28669,"line_start":827,"line_end":827,"column_start":49,"column_end":57},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":84},"to":{"krate":1,"index":4775}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":29042,"byte_end":29050,"line_start":842,"line_end":842,"column_start":43,"column_end":51},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":84},"to":{"krate":1,"index":4762}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":30108,"byte_end":30112,"line_start":890,"line_end":890,"column_start":29,"column_end":33},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":225},"to":{"krate":1,"index":4859}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":30307,"byte_end":30311,"line_start":898,"line_end":898,"column_start":26,"column_end":30},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":225},"to":{"krate":1,"index":1606}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexmap.rs","byte_start":30531,"byte_end":30538,"line_start":910,"line_end":910,"column_start":29,"column_end":36},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":242},"to":{"krate":1,"index":4859}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":33798,"byte_end":33806,"line_start":52,"line_end":52,"column_start":15,"column_end":23},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":279},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":34111,"byte_end":34119,"line_start":66,"line_end":66,"column_start":15,"column_end":23},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":279},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":45478,"byte_end":45486,"line_start":454,"line_end":454,"column_start":25,"column_end":33},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":279},"to":{"krate":1,"index":1606}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":45734,"byte_end":45742,"line_start":467,"line_end":467,"column_start":30,"column_end":38},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":279},"to":{"krate":1,"index":6076}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":46023,"byte_end":46031,"line_start":478,"line_end":478,"column_start":27,"column_end":35},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":279},"to":{"krate":1,"index":1895}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":46316,"byte_end":46324,"line_start":491,"line_end":491,"column_start":60,"column_end":68},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":279},"to":{"krate":1,"index":1634}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":46682,"byte_end":46690,"line_start":504,"line_end":504,"column_start":29,"column_end":37},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":279},"to":{"krate":1,"index":4775}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":47008,"byte_end":47016,"line_start":518,"line_end":518,"column_start":37,"column_end":45},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":279},"to":{"krate":1,"index":4775}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":47336,"byte_end":47344,"line_start":532,"line_end":532,"column_start":35,"column_end":43},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":279},"to":{"krate":1,"index":4762}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":48034,"byte_end":48038,"line_start":566,"line_end":566,"column_start":26,"column_end":30},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":384},"to":{"krate":1,"index":4859}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":48191,"byte_end":48195,"line_start":574,"line_end":574,"column_start":23,"column_end":27},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":384},"to":{"krate":1,"index":1606}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":48540,"byte_end":48550,"line_start":592,"line_end":592,"column_start":32,"column_end":42},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":398},"to":{"krate":1,"index":4859}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/indexset.rs","byte_start":49145,"byte_end":49157,"line_start":620,"line_end":620,"column_start":32,"column_end":44},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":412},"to":{"krate":1,"index":4859}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":50036,"byte_end":50045,"line_start":21,"line_end":21,"column_start":19,"column_end":28},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1038},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":50290,"byte_end":50299,"line_start":31,"line_end":31,"column_start":15,"column_end":24},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":441},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":59467,"byte_end":59476,"line_start":381,"line_end":381,"column_start":44,"column_end":53},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":441},"to":{"krate":1,"index":2154}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":59734,"byte_end":59743,"line_start":394,"line_end":394,"column_start":47,"column_end":56},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":441},"to":{"krate":1,"index":2158}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":59975,"byte_end":59984,"line_start":405,"line_end":405,"column_start":27,"column_end":36},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":441},"to":{"krate":1,"index":1895}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":60121,"byte_end":60130,"line_start":415,"line_end":415,"column_start":25,"column_end":34},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":441},"to":{"krate":1,"index":1606}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":60366,"byte_end":60375,"line_start":428,"line_end":428,"column_start":30,"column_end":39},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":441},"to":{"krate":1,"index":6076}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":60627,"byte_end":60636,"line_start":439,"line_end":439,"column_start":40,"column_end":49},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":441},"to":{"krate":1,"index":4762}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":61038,"byte_end":61046,"line_start":462,"line_end":462,"column_start":28,"column_end":36},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":522},"to":{"krate":1,"index":4859}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":61240,"byte_end":61249,"line_start":473,"line_end":473,"column_start":32,"column_end":41},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":441},"to":{"krate":1,"index":4766}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":62031,"byte_end":62035,"line_start":509,"line_end":509,"column_start":29,"column_end":33},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":548},"to":{"krate":1,"index":4859}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":62217,"byte_end":62221,"line_start":517,"line_end":517,"column_start":26,"column_end":30},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":548},"to":{"krate":1,"index":1606}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":62358,"byte_end":62367,"line_start":525,"line_end":525,"column_start":24,"column_end":33},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":441},"to":{"krate":1,"index":2097}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":62626,"byte_end":62633,"line_start":539,"line_end":539,"column_start":29,"column_end":36},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":570},"to":{"krate":1,"index":4859}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":62855,"byte_end":62864,"line_start":547,"line_end":547,"column_start":54,"column_end":63},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":441},"to":{"krate":1,"index":1634}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/linear_map.rs","byte_start":63216,"byte_end":63225,"line_start":562,"line_end":562,"column_start":22,"column_end":31},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":441},"to":{"krate":1,"index":1639}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":64651,"byte_end":64657,"line_start":23,"line_end":23,"column_start":19,"column_end":25},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1048},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":64876,"byte_end":64882,"line_start":32,"line_end":32,"column_start":9,"column_end":15},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":613},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":73213,"byte_end":73219,"line_start":353,"line_end":353,"column_start":21,"column_end":27},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":613},"to":{"krate":1,"index":1895}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":73341,"byte_end":73347,"line_start":362,"line_end":362,"column_start":31,"column_end":37},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":613},"to":{"krate":1,"index":1825}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":73534,"byte_end":73540,"line_start":373,"line_end":373,"column_start":26,"column_end":32},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":613},"to":{"krate":1,"index":7603}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":73756,"byte_end":73762,"line_start":386,"line_end":386,"column_start":19,"column_end":25},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":613},"to":{"krate":1,"index":1606}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":73940,"byte_end":73946,"line_start":397,"line_end":397,"column_start":24,"column_end":30},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":613},"to":{"krate":1,"index":6076}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":74121,"byte_end":74127,"line_start":406,"line_end":406,"column_start":26,"column_end":32},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":613},"to":{"krate":1,"index":6081}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":74302,"byte_end":74308,"line_start":415,"line_end":415,"column_start":24,"column_end":30},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":613},"to":{"krate":1,"index":6264}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":74494,"byte_end":74500,"line_start":425,"line_end":425,"column_start":26,"column_end":32},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":613},"to":{"krate":6,"index":72}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":74688,"byte_end":74694,"line_start":435,"line_end":435,"column_start":24,"column_end":30},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":613},"to":{"krate":1,"index":6037}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":74994,"byte_end":75000,"line_start":448,"line_end":448,"column_start":24,"column_end":30},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":613},"to":{"krate":1,"index":2073}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":75147,"byte_end":75153,"line_start":459,"line_end":459,"column_start":27,"column_end":33},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":613},"to":{"krate":1,"index":2086}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":75289,"byte_end":75295,"line_start":468,"line_end":468,"column_start":24,"column_end":30},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":613},"to":{"krate":1,"index":1816}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":75422,"byte_end":75428,"line_start":478,"line_end":478,"column_start":25,"column_end":31},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":613},"to":{"krate":1,"index":1816}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":75582,"byte_end":75588,"line_start":488,"line_end":488,"column_start":40,"column_end":46},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":613},"to":{"krate":1,"index":1634}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/string.rs","byte_start":76719,"byte_end":76725,"line_start":537,"line_end":537,"column_start":16,"column_end":22},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":613},"to":{"krate":1,"index":1639}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":83051,"byte_end":83054,"line_start":6,"line_end":6,"column_start":19,"column_end":22},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1051},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":83301,"byte_end":83304,"line_start":16,"line_end":16,"column_start":22,"column_end":25},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1051},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":87421,"byte_end":87424,"line_start":167,"line_end":167,"column_start":22,"column_end":25},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":726},"to":{"krate":1,"index":1606}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":87554,"byte_end":87557,"line_start":177,"line_end":177,"column_start":12,"column_end":15},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":726},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":94388,"byte_end":94391,"line_start":419,"line_end":419,"column_start":24,"column_end":27},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":726},"to":{"krate":1,"index":1895}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":94511,"byte_end":94514,"line_start":428,"line_end":428,"column_start":27,"column_end":30},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":726},"to":{"krate":1,"index":6076}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":94708,"byte_end":94711,"line_start":438,"line_end":438,"column_start":24,"column_end":27},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":726},"to":{"krate":1,"index":6037}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":94966,"byte_end":94969,"line_start":450,"line_end":450,"column_start":21,"column_end":24},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":726},"to":{"krate":1,"index":2097}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":95119,"byte_end":95122,"line_start":459,"line_end":459,"column_start":26,"column_end":29},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":726},"to":{"krate":1,"index":4775}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":95318,"byte_end":95321,"line_start":471,"line_end":471,"column_start":34,"column_end":37},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":726},"to":{"krate":1,"index":4775}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":95551,"byte_end":95554,"line_start":484,"line_end":484,"column_start":27,"column_end":30},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":726},"to":{"krate":1,"index":6264}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":95754,"byte_end":95757,"line_start":494,"line_end":494,"column_start":29,"column_end":32},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":726},"to":{"krate":6,"index":72}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":96401,"byte_end":96404,"line_start":528,"line_end":528,"column_start":32,"column_end":35},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":726},"to":{"krate":1,"index":4762}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":97014,"byte_end":97022,"line_start":558,"line_end":558,"column_start":25,"column_end":33},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":809},"to":{"krate":1,"index":4859}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":97459,"byte_end":97467,"line_start":578,"line_end":578,"column_start":22,"column_end":30},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":809},"to":{"krate":1,"index":1606}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":97667,"byte_end":97675,"line_start":591,"line_end":591,"column_start":21,"column_end":29},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":809},"to":{"krate":1,"index":2097}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":98017,"byte_end":98020,"line_start":605,"line_end":605,"column_start":29,"column_end":32},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":726},"to":{"krate":1,"index":4766}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":98251,"byte_end":98254,"line_start":617,"line_end":617,"column_start":46,"column_end":49},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":726},"to":{"krate":1,"index":1634}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":99130,"byte_end":99133,"line_start":660,"line_end":660,"column_start":19,"column_end":22},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":726},"to":{"krate":1,"index":1639}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":99211,"byte_end":99214,"line_start":667,"line_end":667,"column_start":27,"column_end":30},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":726},"to":{"krate":1,"index":2073}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":99370,"byte_end":99373,"line_start":678,"line_end":678,"column_start":30,"column_end":33},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":726},"to":{"krate":1,"index":2086}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":99524,"byte_end":99527,"line_start":687,"line_end":687,"column_start":33,"column_end":36},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":726},"to":{"krate":1,"index":1816}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":99665,"byte_end":99668,"line_start":697,"line_end":697,"column_start":33,"column_end":36},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":726},"to":{"krate":1,"index":1819}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":99808,"byte_end":99811,"line_start":707,"line_end":707,"column_start":27,"column_end":30},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":726},"to":{"krate":1,"index":1816}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/vec.rs","byte_start":99942,"byte_end":99945,"line_start":717,"line_end":717,"column_start":27,"column_end":30},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":726},"to":{"krate":1,"index":1819}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":109842,"byte_end":109855,"line_start":46,"line_end":46,"column_start":12,"column_end":25},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":2321},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":110740,"byte_end":110753,"line_start":81,"line_end":81,"column_start":12,"column_end":25},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":2321},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":111543,"byte_end":111556,"line_start":112,"line_end":112,"column_start":12,"column_end":25},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":2321},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":113024,"byte_end":113037,"line_start":165,"line_end":165,"column_start":26,"column_end":39},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":2321},"to":{"krate":1,"index":4775}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/histbuf.rs","byte_start":113284,"byte_end":113297,"line_start":179,"line_end":179,"column_start":34,"column_end":47},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":2321},"to":{"krate":1,"index":4775}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":115787,"byte_end":115797,"line_start":29,"line_end":29,"column_start":22,"column_end":32},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1033},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":117794,"byte_end":117804,"line_start":95,"line_end":95,"column_start":15,"column_end":25},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":926},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":126160,"byte_end":126164,"line_start":382,"line_end":382,"column_start":13,"column_end":17},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":951},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":128059,"byte_end":128066,"line_start":450,"line_end":450,"column_start":24,"column_end":31},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":965},"to":{"krate":1,"index":2097}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":128273,"byte_end":128280,"line_start":463,"line_end":463,"column_start":25,"column_end":32},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":965},"to":{"krate":1,"index":2073}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":128611,"byte_end":128618,"line_start":477,"line_end":477,"column_start":28,"column_end":35},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":965},"to":{"krate":1,"index":2086}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":128939,"byte_end":128946,"line_start":490,"line_end":490,"column_start":19,"column_end":26},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":965},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":129250,"byte_end":129254,"line_start":504,"line_end":504,"column_start":22,"column_end":26},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":951},"to":{"krate":1,"index":2097}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":129509,"byte_end":129519,"line_start":515,"line_end":515,"column_start":27,"column_end":37},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":926},"to":{"krate":1,"index":1895}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":129665,"byte_end":129675,"line_start":526,"line_end":526,"column_start":25,"column_end":35},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":926},"to":{"krate":1,"index":1606}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":129936,"byte_end":129946,"line_start":540,"line_end":540,"column_start":24,"column_end":34},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":926},"to":{"krate":1,"index":2097}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/binary_heap.rs","byte_start":130141,"byte_end":130151,"line_start":551,"line_end":551,"column_start":30,"column_end":40},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":926},"to":{"krate":1,"index":6076}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":138185,"byte_end":138187,"line_start":98,"line_end":98,"column_start":9,"column_end":11},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1062},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":139077,"byte_end":139079,"line_start":130,"line_end":130,"column_start":25,"column_end":27},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1062},"to":{"krate":1,"index":1916}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":139269,"byte_end":139271,"line_start":139,"line_end":139,"column_start":9,"column_end":11},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1076},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":140189,"byte_end":140191,"line_start":171,"line_end":171,"column_start":25,"column_end":27},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1076},"to":{"krate":1,"index":1916}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":140381,"byte_end":140383,"line_start":180,"line_end":180,"column_start":9,"column_end":11},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1090},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":141500,"byte_end":141502,"line_start":221,"line_end":221,"column_start":25,"column_end":27},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1090},"to":{"krate":1,"index":1916}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":141695,"byte_end":141698,"line_start":230,"line_end":230,"column_start":9,"column_end":12},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1104},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":143062,"byte_end":143065,"line_start":279,"line_end":279,"column_start":25,"column_end":28},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1104},"to":{"krate":1,"index":1916}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":143258,"byte_end":143261,"line_start":288,"line_end":288,"column_start":9,"column_end":12},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1118},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":145121,"byte_end":145124,"line_start":353,"line_end":353,"column_start":25,"column_end":28},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1118},"to":{"krate":1,"index":1916}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":145317,"byte_end":145320,"line_start":362,"line_end":362,"column_start":9,"column_end":12},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1132},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":148172,"byte_end":148175,"line_start":459,"line_end":459,"column_start":25,"column_end":28},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1132},"to":{"krate":1,"index":1916}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/mpmc.rs","byte_start":148275,"byte_end":148279,"line_start":466,"line_end":466,"column_start":9,"column_end":13},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1146},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/singleton.rs","byte_start":174641,"byte_end":174644,"line_start":97,"line_end":97,"column_start":9,"column_end":12},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1212},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/singleton.rs","byte_start":175096,"byte_end":175099,"line_start":121,"line_end":121,"column_start":9,"column_end":12},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1212},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/singleton.rs","byte_start":175896,"byte_end":175899,"line_start":149,"line_end":149,"column_start":19,"column_end":22},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1212},"to":{"krate":1,"index":2073}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/singleton.rs","byte_start":176043,"byte_end":176046,"line_start":160,"line_end":160,"column_start":22,"column_end":25},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":1212},"to":{"krate":1,"index":2086}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/singleton.rs","byte_start":176214,"byte_end":176217,"line_start":169,"line_end":169,"column_start":58,"column_end":61},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":1212},"to":{"krate":10,"index":5}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/singleton.rs","byte_start":176248,"byte_end":176251,"line_start":171,"line_end":171,"column_start":24,"column_end":27},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":1212},"to":{"krate":1,"index":6076}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/singleton.rs","byte_start":176444,"byte_end":176447,"line_start":181,"line_end":181,"column_start":26,"column_end":29},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":1212},"to":{"krate":1,"index":6081}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/singleton.rs","byte_start":176639,"byte_end":176642,"line_start":191,"line_end":191,"column_start":21,"column_end":24},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":1212},"to":{"krate":1,"index":2097}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/singleton.rs","byte_start":177024,"byte_end":177027,"line_start":209,"line_end":209,"column_start":28,"column_end":31},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":1212},"to":{"krate":1,"index":1904}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/singleton.rs","byte_start":177104,"byte_end":177107,"line_start":216,"line_end":216,"column_start":28,"column_end":31},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":1212},"to":{"krate":1,"index":1916}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/singleton.rs","byte_start":177180,"byte_end":177183,"line_start":223,"line_end":223,"column_start":24,"column_end":27},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":1212},"to":{"krate":8,"index":7}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/singleton.rs","byte_start":177366,"byte_end":177369,"line_start":235,"line_end":235,"column_start":27,"column_end":30},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":1212},"to":{"krate":8,"index":10}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/singleton.rs","byte_start":177548,"byte_end":177551,"line_start":245,"line_end":245,"column_start":23,"column_end":26},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":1212},"to":{"krate":1,"index":1634}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/singleton.rs","byte_start":177711,"byte_end":177714,"line_start":255,"line_end":255,"column_start":16,"column_end":19},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":1212},"to":{"krate":1,"index":1639}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/singleton.rs","byte_start":177782,"byte_end":177785,"line_start":262,"line_end":262,"column_start":24,"column_end":27},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":1212},"to":{"krate":1,"index":1671}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/singleton.rs","byte_start":177983,"byte_end":177986,"line_start":272,"line_end":272,"column_start":17,"column_end":20},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":1212},"to":{"krate":1,"index":1660}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/singleton.rs","byte_start":178147,"byte_end":178150,"line_start":282,"line_end":282,"column_start":18,"column_end":21},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":1212},"to":{"krate":1,"index":6264}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/llsc.rs","byte_start":180186,"byte_end":180190,"line_start":17,"line_end":17,"column_start":9,"column_end":13},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":1280},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/llsc.rs","byte_start":180331,"byte_end":180336,"line_start":27,"line_end":27,"column_start":9,"column_end":14},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":1287},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":163537,"byte_end":163541,"line_start":267,"line_end":267,"column_start":25,"column_end":29},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":1295},"to":{"krate":1,"index":1916}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":163573,"byte_end":163577,"line_start":269,"line_end":269,"column_start":25,"column_end":29},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":1295},"to":{"krate":1,"index":1904}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":163593,"byte_end":163597,"line_start":271,"line_end":271,"column_start":9,"column_end":13},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":1295},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":167570,"byte_end":167573,"line_start":418,"line_end":418,"column_start":9,"column_end":12},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":1312},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":167977,"byte_end":167980,"line_start":438,"line_end":438,"column_start":28,"column_end":31},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":1312},"to":{"krate":1,"index":1904}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":168032,"byte_end":168035,"line_start":440,"line_end":440,"column_start":28,"column_end":31},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":1312},"to":{"krate":1,"index":1916}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":168111,"byte_end":168114,"line_start":442,"line_end":442,"column_start":52,"column_end":55},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":1312},"to":{"krate":10,"index":5}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":168142,"byte_end":168145,"line_start":444,"line_end":444,"column_start":21,"column_end":24},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":1312},"to":{"krate":8,"index":7}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":168311,"byte_end":168314,"line_start":455,"line_end":455,"column_start":24,"column_end":27},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":1312},"to":{"krate":8,"index":10}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":168466,"byte_end":168469,"line_start":464,"line_end":464,"column_start":19,"column_end":22},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":1312},"to":{"krate":1,"index":2073}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":168606,"byte_end":168609,"line_start":472,"line_end":472,"column_start":22,"column_end":25},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":1312},"to":{"krate":1,"index":2086}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":168742,"byte_end":168745,"line_start":478,"line_end":478,"column_start":24,"column_end":27},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":1312},"to":{"krate":1,"index":6076}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":168913,"byte_end":168916,"line_start":487,"line_end":487,"column_start":26,"column_end":29},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":1312},"to":{"krate":1,"index":6081}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":169085,"byte_end":169088,"line_start":496,"line_end":496,"column_start":23,"column_end":26},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":1312},"to":{"krate":1,"index":1634}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":169223,"byte_end":169226,"line_start":505,"line_end":505,"column_start":16,"column_end":19},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":1312},"to":{"krate":1,"index":1639}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":169269,"byte_end":169272,"line_start":507,"line_end":507,"column_start":24,"column_end":27},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":1312},"to":{"krate":1,"index":1671}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":169445,"byte_end":169448,"line_start":516,"line_end":516,"column_start":17,"column_end":20},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":1312},"to":{"krate":1,"index":1660}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/pool/mod.rs","byte_start":169584,"byte_end":169587,"line_start":525,"line_end":525,"column_start":18,"column_end":21},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":1312},"to":{"krate":1,"index":6264}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/split.rs","byte_start":207873,"byte_end":207878,"line_start":10,"line_end":10,"column_start":18,"column_end":23},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":1447},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/split.rs","byte_start":208816,"byte_end":208824,"line_start":43,"line_end":43,"column_start":38,"column_end":46},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":1398},"to":{"krate":1,"index":1904}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/split.rs","byte_start":209297,"byte_end":209305,"line_start":64,"line_end":64,"column_start":35,"column_end":43},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":1412},"to":{"krate":1,"index":1904}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":185232,"byte_end":185238,"line_start":109,"line_end":109,"column_start":12,"column_end":18},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":1430},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":185401,"byte_end":185407,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":1430},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":187303,"byte_end":187308,"line_start":172,"line_end":172,"column_start":18,"column_end":23},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":1447},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":188366,"byte_end":188371,"line_start":215,"line_end":215,"column_start":27,"column_end":32},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":1447},"to":{"krate":1,"index":2097}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":188637,"byte_end":188642,"line_start":230,"line_end":230,"column_start":33,"column_end":38},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":1447},"to":{"krate":1,"index":6076}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":188904,"byte_end":188909,"line_start":242,"line_end":242,"column_start":33,"column_end":38},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":1447},"to":{"krate":1,"index":6264}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":189229,"byte_end":189234,"line_start":257,"line_end":257,"column_start":35,"column_end":40},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":1447},"to":{"krate":6,"index":72}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":196266,"byte_end":196271,"line_start":472,"line_end":472,"column_start":19,"column_end":24},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":1041},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":196494,"byte_end":196499,"line_start":480,"line_end":480,"column_start":12,"column_end":17},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":1447},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":196720,"byte_end":196725,"line_start":490,"line_end":490,"column_start":19,"column_end":24},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":1041},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":196962,"byte_end":196967,"line_start":498,"line_end":498,"column_start":12,"column_end":17},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":1447},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":197321,"byte_end":197326,"line_start":512,"line_end":512,"column_start":66,"column_end":71},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":1447},"to":{"krate":1,"index":1634}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":197704,"byte_end":197709,"line_start":528,"line_end":528,"column_start":25,"column_end":30},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":1447},"to":{"krate":1,"index":1639}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/spsc/mod.rs","byte_start":198055,"byte_end":198059,"line_start":549,"line_end":549,"column_start":32,"column_end":36},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":1538},"to":{"krate":1,"index":1606}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/sealed.rs","byte_start":216948,"byte_end":216958,"line_start":14,"line_end":14,"column_start":27,"column_end":37},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":1428},"to":{"krate":0,"index":1577}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/sealed.rs","byte_start":217083,"byte_end":217092,"line_start":21,"line_end":21,"column_start":27,"column_end":36},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":1426},"to":{"krate":0,"index":1577}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/sealed.rs","byte_start":217192,"byte_end":217196,"line_start":27,"line_end":27,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":1,"index":1822},"to":{"krate":0,"index":1583}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/sealed.rs","byte_start":217206,"byte_end":217210,"line_start":27,"line_end":27,"column_start":41,"column_end":45},"kind":"SuperTrait","from":{"krate":1,"index":1904},"to":{"krate":0,"index":1583}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/sealed.rs","byte_start":222063,"byte_end":222066,"line_start":199,"line_end":199,"column_start":26,"column_end":29},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":920},"to":{"krate":0,"index":1620}},{"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.5.5/src/sealed.rs","byte_start":222174,"byte_end":222177,"line_start":205,"line_end":205,"column_start":26,"column_end":29},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":921},"to":{"krate":0,"index":1620}}]}