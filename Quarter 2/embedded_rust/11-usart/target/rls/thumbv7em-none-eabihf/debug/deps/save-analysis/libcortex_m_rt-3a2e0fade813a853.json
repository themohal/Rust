{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7","program":"/home/farjad-ali/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","cortex_m_rt","/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=3a2e0fade813a853","-C","extra-filename=-3a2e0fade813a853","--out-dir","/home/farjad-ali/Rust/Quarter 2/embedded_rust/11-usart/target/rls/thumbv7em-none-eabihf/debug/deps","--target","thumbv7em-none-eabihf","-L","dependency=/home/farjad-ali/Rust/Quarter 2/embedded_rust/11-usart/target/rls/thumbv7em-none-eabihf/debug/deps","-L","dependency=/home/farjad-ali/Rust/Quarter 2/embedded_rust/11-usart/target/rls/debug/deps","--extern","cortex_m_rt=/home/farjad-ali/Rust/Quarter 2/embedded_rust/11-usart/target/rls/thumbv7em-none-eabihf/debug/deps/libcortex_m_rt-3bc80694e733ad61.rmeta","--extern","r0=/home/farjad-ali/Rust/Quarter 2/embedded_rust/11-usart/target/rls/thumbv7em-none-eabihf/debug/deps/libr0-3328217bf19ceae2.rmeta","--cap-lints","allow","-L","/home/farjad-ali/Rust/Quarter 2/embedded_rust/11-usart/target/rls/thumbv7em-none-eabihf/debug/build/cortex-m-rt-12116750e273a8fa/out","--error-format=json","--sysroot","/home/farjad-ali/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/farjad-ali/Rust/Quarter 2/embedded_rust/11-usart/target/rls/thumbv7em-none-eabihf/debug/deps/libcortex_m_rt-3a2e0fade813a853.rmeta"},"prelude":{"crate_id":{"name":"cortex_m_rt","disambiguator":[3080708287000958166,15771391663644764064]},"crate_root":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src","external_crates":[{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[16410780912699979615,14786055825151821009]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[16250002860209205769,6607268543709446693]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[14103481253267247487,17467155086432962609]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","num":4,"id":{"name":"cortex_m_rt","disambiguator":[18243088186130340819,17015650215914363966]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","num":5,"id":{"name":"cortex_m_rt_macros","disambiguator":[259780975637706482,9247701130211580840]}},{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","num":6,"id":{"name":"r0","disambiguator":[2235721308740287632,5161421979057078425]}}],"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":0,"byte_end":22903,"line_start":1,"line_end":632,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":4,"index":76},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":16198,"byte_end":16212,"line_start":402,"line_end":402,"column_start":23,"column_end":37},"alias_span":null,"name":"ExceptionFrame","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":23},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":16214,"byte_end":16224,"line_start":402,"line_end":402,"column_start":39,"column_end":49},"alias_span":null,"name":"heap_start","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":44},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":16263,"byte_end":16272,"line_start":404,"line_end":404,"column_start":22,"column_end":31},"alias_span":null,"name":"Exception","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":0,"byte_end":22903,"line_start":1,"line_end":632,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11}],"decl_id":null,"docs":" Startup code and minimal runtime for Cortex-M microcontrollers","sig":null,"attributes":[{"value":"! Startup code and minimal runtime for Cortex-M microcontrollers","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":0,"byte_end":66,"line_start":1,"line_end":1,"column_start":1,"column_end":67}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":67,"byte_end":70,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This crate contains all the required parts to build a `no_std` application (binary crate) that","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":71,"byte_end":169,"line_start":3,"line_end":3,"column_start":1,"column_end":99}},{"value":"! targets a Cortex-M microcontroller.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":170,"byte_end":209,"line_start":4,"line_end":4,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":210,"byte_end":213,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! # Features","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":214,"byte_end":228,"line_start":6,"line_end":6,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":229,"byte_end":232,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! This crates takes care of:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":233,"byte_end":263,"line_start":8,"line_end":8,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":264,"byte_end":267,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! - The memory layout of the program. In particular, it populates the vector table so the device","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":268,"byte_end":366,"line_start":10,"line_end":10,"column_start":1,"column_end":99}},{"value":"! can boot correctly, and properly dispatch exceptions and interrupts.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":367,"byte_end":439,"line_start":11,"line_end":11,"column_start":1,"column_end":73}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":440,"byte_end":443,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! - Initializing `static` variables before the program entry point.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":444,"byte_end":513,"line_start":13,"line_end":13,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":514,"byte_end":517,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"! - Enabling the FPU before the program entry point if the target is `thumbv7em-none-eabihf`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":518,"byte_end":613,"line_start":15,"line_end":15,"column_start":1,"column_end":96}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":614,"byte_end":617,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! This crate also provides a mechanism to set exception handlers: see the [`exception!`] macro.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":618,"byte_end":715,"line_start":17,"line_end":17,"column_start":1,"column_end":98}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":716,"byte_end":719,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"! [`exception!`]: macro.exception.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":720,"byte_end":760,"line_start":19,"line_end":19,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":761,"byte_end":764,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"! # Requirements","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":765,"byte_end":783,"line_start":21,"line_end":21,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":784,"byte_end":787,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"! ## `memory.x`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":788,"byte_end":805,"line_start":23,"line_end":23,"column_start":1,"column_end":18}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":806,"byte_end":809,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"! This crate expects the user, or some other crate, to provide the memory layout of the target","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":810,"byte_end":906,"line_start":25,"line_end":25,"column_start":1,"column_end":97}},{"value":"! device via a linker script named `memory.x`. This section covers the contents of `memory.x`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":907,"byte_end":1002,"line_start":26,"line_end":26,"column_start":1,"column_end":96}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":1003,"byte_end":1006,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"! ### `MEMORY`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":1007,"byte_end":1023,"line_start":28,"line_end":28,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":1024,"byte_end":1027,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"! The linker script must specify the memory available in the device as, at least, two `MEMORY`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":1028,"byte_end":1124,"line_start":30,"line_end":30,"column_start":1,"column_end":97}},{"value":"! regions: one named `FLASH` and one named `RAM`. The `.text` and `.rodata` sections of the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":1125,"byte_end":1218,"line_start":31,"line_end":31,"column_start":1,"column_end":94}},{"value":"! program will be placed in the `FLASH` region, whereas the `.bss` and `.data` sections, as well","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":1219,"byte_end":1317,"line_start":32,"line_end":32,"column_start":1,"column_end":99}},{"value":"! as the heap,will be placed in the `RAM` region.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":1318,"byte_end":1369,"line_start":33,"line_end":33,"column_start":1,"column_end":52}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":1370,"byte_end":1373,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"! ``` text","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":1374,"byte_end":1386,"line_start":35,"line_end":35,"column_start":1,"column_end":13}},{"value":"! /* Linker script for the STM32F103C8T6 */","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":1387,"byte_end":1432,"line_start":36,"line_end":36,"column_start":1,"column_end":46}},{"value":"! MEMORY","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":1433,"byte_end":1443,"line_start":37,"line_end":37,"column_start":1,"column_end":11}},{"value":"! {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":1444,"byte_end":1449,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"!   FLASH : ORIGIN = 0x08000000, LENGTH = 64K","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":1450,"byte_end":1497,"line_start":39,"line_end":39,"column_start":1,"column_end":48}},{"value":"!   RAM : ORIGIN = 0x20000000, LENGTH = 20K","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":1498,"byte_end":1543,"line_start":40,"line_end":40,"column_start":1,"column_end":46}},{"value":"! }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":1544,"byte_end":1549,"line_start":41,"line_end":41,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":1550,"byte_end":1557,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":1558,"byte_end":1561,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"! ### `_stack_start`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":1562,"byte_end":1584,"line_start":44,"line_end":44,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":1585,"byte_end":1588,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"! This optional symbol can be used to indicate where the call stack of the program should be","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":1589,"byte_end":1683,"line_start":46,"line_end":46,"column_start":1,"column_end":95}},{"value":"! placed. If this symbol is not used then the stack will be placed at the *end* of the `RAM`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":1684,"byte_end":1778,"line_start":47,"line_end":47,"column_start":1,"column_end":95}},{"value":"! region -- the stack grows downwards towards smaller address. This symbol can be used to place","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":1779,"byte_end":1876,"line_start":48,"line_end":48,"column_start":1,"column_end":98}},{"value":"! the stack in a different memory region, for example:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":1877,"byte_end":1933,"line_start":49,"line_end":49,"column_start":1,"column_end":57}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":1934,"byte_end":1937,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"! ``` text","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":1938,"byte_end":1950,"line_start":51,"line_end":51,"column_start":1,"column_end":13}},{"value":"! /* Linker script for the STM32F303VCT6 */","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":1951,"byte_end":1996,"line_start":52,"line_end":52,"column_start":1,"column_end":46}},{"value":"! MEMORY","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":1997,"byte_end":2007,"line_start":53,"line_end":53,"column_start":1,"column_end":11}},{"value":"! {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":2008,"byte_end":2013,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"!     FLASH : ORIGIN = 0x08000000, LENGTH = 256K","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":2014,"byte_end":2064,"line_start":55,"line_end":55,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":2065,"byte_end":2068,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"!     /* .bss, .data and the heap go in this region */","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":2069,"byte_end":2125,"line_start":57,"line_end":57,"column_start":1,"column_end":57}},{"value":"!     RAM : ORIGIN = 0x20000000, LENGTH = 40K","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":2126,"byte_end":2173,"line_start":58,"line_end":58,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":2174,"byte_end":2177,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"!     /* Core coupled (faster) RAM dedicated to hold the stack */","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":2178,"byte_end":2245,"line_start":60,"line_end":60,"column_start":1,"column_end":68}},{"value":"!     CCRAM : ORIGIN = 0x10000000, LENGTH = 8K","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":2246,"byte_end":2294,"line_start":61,"line_end":61,"column_start":1,"column_end":49}},{"value":"! }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":2295,"byte_end":2300,"line_start":62,"line_end":62,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":2301,"byte_end":2304,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"! _stack_start = ORIGIN(CCRAM) + LENGTH(CCRAM);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":2305,"byte_end":2354,"line_start":64,"line_end":64,"column_start":1,"column_end":50}},{"value":"! ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":2355,"byte_end":2362,"line_start":65,"line_end":65,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":2363,"byte_end":2366,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"! ### `_stext`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":2367,"byte_end":2383,"line_start":67,"line_end":67,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":2384,"byte_end":2387,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"! This optional symbol can be used to control where the `.text` section is placed. If omitted the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":2388,"byte_end":2487,"line_start":69,"line_end":69,"column_start":1,"column_end":100}},{"value":"! `.text` section will be placed right after the vector table, which is placed at the beginning of","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":2488,"byte_end":2588,"line_start":70,"line_end":70,"column_start":1,"column_end":101}},{"value":"! `FLASH`. Some devices store settings like Flash configuration right after the vector table;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":2589,"byte_end":2684,"line_start":71,"line_end":71,"column_start":1,"column_end":96}},{"value":"! for these devices one must place the `.text` section after this configuration section --","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":2685,"byte_end":2777,"line_start":72,"line_end":72,"column_start":1,"column_end":93}},{"value":"! `_stext` can be used for this purpose.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":2778,"byte_end":2820,"line_start":73,"line_end":73,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":2821,"byte_end":2824,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"! ``` text","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":2825,"byte_end":2837,"line_start":75,"line_end":75,"column_start":1,"column_end":13}},{"value":"! MEMORY","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":2838,"byte_end":2848,"line_start":76,"line_end":76,"column_start":1,"column_end":11}},{"value":"! {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":2849,"byte_end":2854,"line_start":77,"line_end":77,"column_start":1,"column_end":6}},{"value":"!   /* .. */","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":2855,"byte_end":2869,"line_start":78,"line_end":78,"column_start":1,"column_end":15}},{"value":"! }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":2870,"byte_end":2875,"line_start":79,"line_end":79,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":2876,"byte_end":2879,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"! /* The device stores Flash configuration in 0x400-0x40C so we place .text after that */","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":2880,"byte_end":2971,"line_start":81,"line_end":81,"column_start":1,"column_end":92}},{"value":"! _stext = ORIGIN(FLASH) + 0x40C","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":2972,"byte_end":3006,"line_start":82,"line_end":82,"column_start":1,"column_end":35}},{"value":"! ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":3007,"byte_end":3014,"line_start":83,"line_end":83,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":3015,"byte_end":3018,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"! # An example","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":3019,"byte_end":3035,"line_start":85,"line_end":85,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":3036,"byte_end":3039,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"! This section presents a minimal application built on top of `cortex-m-rt`. Apart from the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":3040,"byte_end":3133,"line_start":87,"line_end":87,"column_start":1,"column_end":94}},{"value":"! mandatory `memory.x` linker script describing the memory layout of the device, the hard fault","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":3134,"byte_end":3231,"line_start":88,"line_end":88,"column_start":1,"column_end":98}},{"value":"! handler and the default exception handler must also be defined somewhere in the dependency","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":3232,"byte_end":3326,"line_start":89,"line_end":89,"column_start":1,"column_end":95}},{"value":"! graph (cf. [`exception!`]). In this example we define them in the binary crate:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":3327,"byte_end":3410,"line_start":90,"line_end":90,"column_start":1,"column_end":84}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":3411,"byte_end":3414,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"! ``` ignore","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":3415,"byte_end":3429,"line_start":92,"line_end":92,"column_start":1,"column_end":15}},{"value":"! // IMPORTANT the standard `main` interface is not used because it requires nightly","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":3430,"byte_end":3516,"line_start":93,"line_end":93,"column_start":1,"column_end":87}},{"value":"! #![no_main]","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":3517,"byte_end":3532,"line_start":94,"line_end":94,"column_start":1,"column_end":16}},{"value":"! #![no_std]","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":3533,"byte_end":3547,"line_start":95,"line_end":95,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":3548,"byte_end":3551,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"! #[macro_use(entry, exception)]","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":3552,"byte_end":3586,"line_start":97,"line_end":97,"column_start":1,"column_end":35}},{"value":"! extern crate cortex_m_rt as rt;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":3587,"byte_end":3622,"line_start":98,"line_end":98,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":3623,"byte_end":3626,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"! // makes `panic!` print messages to the host stderr using semihosting","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":3627,"byte_end":3700,"line_start":100,"line_end":100,"column_start":1,"column_end":74}},{"value":"! extern crate panic_semihosting;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":3701,"byte_end":3736,"line_start":101,"line_end":101,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":3737,"byte_end":3740,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"! use rt::ExceptionFrame;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":3741,"byte_end":3768,"line_start":103,"line_end":103,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":3769,"byte_end":3772,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"! // use `main` as the entry point of this application","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":3773,"byte_end":3829,"line_start":105,"line_end":105,"column_start":1,"column_end":57}},{"value":"! entry!(main);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":3830,"byte_end":3847,"line_start":106,"line_end":106,"column_start":1,"column_end":18}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":3848,"byte_end":3851,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"! // `main` is not allowed to return","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":3852,"byte_end":3890,"line_start":108,"line_end":108,"column_start":1,"column_end":39}},{"value":"! fn main() -> ! {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":3891,"byte_end":3911,"line_start":109,"line_end":109,"column_start":1,"column_end":21}},{"value":"!     // initialization","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":3912,"byte_end":3937,"line_start":110,"line_end":110,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":3938,"byte_end":3941,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"!     loop {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":3942,"byte_end":3956,"line_start":112,"line_end":112,"column_start":1,"column_end":15}},{"value":"!         // application logic","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":3957,"byte_end":3989,"line_start":113,"line_end":113,"column_start":1,"column_end":33}},{"value":"!     }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":3990,"byte_end":3999,"line_start":114,"line_end":114,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":4000,"byte_end":4005,"line_start":115,"line_end":115,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":4006,"byte_end":4009,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"! // define the hard fault handler","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":4010,"byte_end":4046,"line_start":117,"line_end":117,"column_start":1,"column_end":37}},{"value":"! exception!(HardFault, hard_fault);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":4047,"byte_end":4085,"line_start":118,"line_end":118,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":4086,"byte_end":4089,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"! fn hard_fault(ef: &ExceptionFrame) -> ! {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":4090,"byte_end":4135,"line_start":120,"line_end":120,"column_start":1,"column_end":46}},{"value":"!     panic!(\"{:#?}\", ef);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":4136,"byte_end":4164,"line_start":121,"line_end":121,"column_start":1,"column_end":29}},{"value":"! }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":4165,"byte_end":4170,"line_start":122,"line_end":122,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":4171,"byte_end":4174,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"! // define the default exception handler","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":4175,"byte_end":4218,"line_start":124,"line_end":124,"column_start":1,"column_end":44}},{"value":"! exception!(*, default_handler);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":4219,"byte_end":4254,"line_start":125,"line_end":125,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":4255,"byte_end":4258,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"! fn default_handler(irqn: i16) {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":4259,"byte_end":4294,"line_start":127,"line_end":127,"column_start":1,"column_end":36}},{"value":"!     panic!(\"unhandled exception (IRQn={})\", irqn);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":4295,"byte_end":4349,"line_start":128,"line_end":128,"column_start":1,"column_end":55}},{"value":"! }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":4350,"byte_end":4355,"line_start":129,"line_end":129,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":4356,"byte_end":4363,"line_start":130,"line_end":130,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":4364,"byte_end":4367,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"! To actually build this program you need to place a `memory.x` linker script somewhere the linker","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":4368,"byte_end":4468,"line_start":132,"line_end":132,"column_start":1,"column_end":101}},{"value":"! can find it, e.g. in the current directory; and then link the program using `cortex-m-rt`'s","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":4469,"byte_end":4564,"line_start":133,"line_end":133,"column_start":1,"column_end":96}},{"value":"! linker script: `link.x`. The required steps are shown below:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":4565,"byte_end":4629,"line_start":134,"line_end":134,"column_start":1,"column_end":65}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":4630,"byte_end":4633,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"! ``` text","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":4634,"byte_end":4646,"line_start":136,"line_end":136,"column_start":1,"column_end":13}},{"value":"! $ cat > memory.x <<EOF","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":4647,"byte_end":4673,"line_start":137,"line_end":137,"column_start":1,"column_end":27}},{"value":"! /* Linker script for the STM32F103C8T6 */","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":4674,"byte_end":4719,"line_start":138,"line_end":138,"column_start":1,"column_end":46}},{"value":"! MEMORY","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":4720,"byte_end":4730,"line_start":139,"line_end":139,"column_start":1,"column_end":11}},{"value":"! {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":4731,"byte_end":4736,"line_start":140,"line_end":140,"column_start":1,"column_end":6}},{"value":"!   FLASH : ORIGIN = 0x08000000, LENGTH = 64K","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":4737,"byte_end":4784,"line_start":141,"line_end":141,"column_start":1,"column_end":48}},{"value":"!   RAM : ORIGIN = 0x20000000, LENGTH = 20K","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":4785,"byte_end":4830,"line_start":142,"line_end":142,"column_start":1,"column_end":46}},{"value":"! }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":4831,"byte_end":4836,"line_start":143,"line_end":143,"column_start":1,"column_end":6}},{"value":"! EOF","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":4837,"byte_end":4844,"line_start":144,"line_end":144,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":4845,"byte_end":4848,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"! $ cargo rustc --target thumbv7m-none-eabi -- \\","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":4849,"byte_end":4899,"line_start":146,"line_end":146,"column_start":1,"column_end":51}},{"value":"!       -C link-arg=-nostartfiles -C link-arg=-Tlink.x","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":4900,"byte_end":4956,"line_start":147,"line_end":147,"column_start":1,"column_end":57}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":4957,"byte_end":4960,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"! $ file target/thumbv7m-none-eabi/debug/app","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":4961,"byte_end":5007,"line_start":149,"line_end":149,"column_start":1,"column_end":47}},{"value":"! app: ELF 32-bit LSB executable, ARM, EABI5 version 1 (SYSV), statically linked, (..)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":5008,"byte_end":5096,"line_start":150,"line_end":150,"column_start":1,"column_end":89}},{"value":"! ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":5097,"byte_end":5104,"line_start":151,"line_end":151,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":5105,"byte_end":5108,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"! # Optional features","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":5109,"byte_end":5132,"line_start":153,"line_end":153,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":5133,"byte_end":5136,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"! ## `device`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":5137,"byte_end":5152,"line_start":155,"line_end":155,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":5153,"byte_end":5156,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"! If this feature is disabled then this crate populates the whole vector table. All the interrupts","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":5157,"byte_end":5257,"line_start":157,"line_end":157,"column_start":1,"column_end":101}},{"value":"! in the vector table, even the ones unused by the target device, will be bound to the default","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":5258,"byte_end":5354,"line_start":158,"line_end":158,"column_start":1,"column_end":97}},{"value":"! exception handler. This makes the final application device agnostic: you will be able to run it","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":5355,"byte_end":5454,"line_start":159,"line_end":159,"column_start":1,"column_end":100}},{"value":"! on any Cortex-M device -- provided that you correctly specified its memory layout in `memory.x`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":5455,"byte_end":5554,"line_start":160,"line_end":160,"column_start":1,"column_end":100}},{"value":"! -- without hitting undefined behavior.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":5555,"byte_end":5597,"line_start":161,"line_end":161,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":5598,"byte_end":5601,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"! If this feature is enabled then the interrupts section of the vector table is left unpopulated","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":5602,"byte_end":5700,"line_start":163,"line_end":163,"column_start":1,"column_end":99}},{"value":"! and some other crate, or the user, will have to populate it. This mode is meant to be used in","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":5701,"byte_end":5798,"line_start":164,"line_end":164,"column_start":1,"column_end":98}},{"value":"! conjunction with crates generated using `svd2rust`. Those *device crates* will populate the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":5799,"byte_end":5894,"line_start":165,"line_end":165,"column_start":1,"column_end":96}},{"value":"! missing part of the vector table when their `\"rt\"` feature is enabled.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":5895,"byte_end":5969,"line_start":166,"line_end":166,"column_start":1,"column_end":75}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":5970,"byte_end":5973,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"! # Inspection","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":5974,"byte_end":5990,"line_start":168,"line_end":168,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":5991,"byte_end":5994,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"! This section covers how to inspect a binary that builds on top of `cortex-m-rt`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":5995,"byte_end":6079,"line_start":170,"line_end":170,"column_start":1,"column_end":85}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":6080,"byte_end":6083,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"! ## Sections (`size`)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":6084,"byte_end":6108,"line_start":172,"line_end":172,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":6109,"byte_end":6112,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"! `cortex-m-rt` uses standard sections like `.text`, `.rodata`, `.bss` and `.data` as one would","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":6113,"byte_end":6210,"line_start":174,"line_end":174,"column_start":1,"column_end":98}},{"value":"! expect. `cortex-m-rt` separates the vector table in its own section, named `.vector_table`. This","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":6211,"byte_end":6311,"line_start":175,"line_end":175,"column_start":1,"column_end":101}},{"value":"! lets you distinguish how much space is taking the vector table in Flash vs how much is being","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":6312,"byte_end":6408,"line_start":176,"line_end":176,"column_start":1,"column_end":97}},{"value":"! used by actual instructions (`.text`) and constants (`.rodata`).","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":6409,"byte_end":6477,"line_start":177,"line_end":177,"column_start":1,"column_end":69}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":6478,"byte_end":6481,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":6482,"byte_end":6489,"line_start":179,"line_end":179,"column_start":1,"column_end":8}},{"value":"! $ size -Ax target/thumbv7m-none-eabi/examples/app","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":6490,"byte_end":6543,"line_start":180,"line_end":180,"column_start":1,"column_end":54}},{"value":"! target/thumbv7m-none-eabi/release/examples/app  :","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":6544,"byte_end":6597,"line_start":181,"line_end":181,"column_start":1,"column_end":54}},{"value":"! section             size         addr","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":6598,"byte_end":6639,"line_start":182,"line_end":182,"column_start":1,"column_end":42}},{"value":"! .vector_table      0x400    0x8000000","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":6640,"byte_end":6681,"line_start":183,"line_end":183,"column_start":1,"column_end":42}},{"value":"! .text               0x88    0x8000400","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":6682,"byte_end":6723,"line_start":184,"line_end":184,"column_start":1,"column_end":42}},{"value":"! .rodata              0x0    0x8000488","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":6724,"byte_end":6765,"line_start":185,"line_end":185,"column_start":1,"column_end":42}},{"value":"! .data                0x0   0x20000000","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":6766,"byte_end":6807,"line_start":186,"line_end":186,"column_start":1,"column_end":42}},{"value":"! .bss                 0x0   0x20000000","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":6808,"byte_end":6849,"line_start":187,"line_end":187,"column_start":1,"column_end":42}},{"value":"! ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":6850,"byte_end":6857,"line_start":188,"line_end":188,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":6858,"byte_end":6861,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"! Without the `-A` argument `size` reports the sum of the sizes of `.text`, `.rodata` and","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":6862,"byte_end":6953,"line_start":190,"line_end":190,"column_start":1,"column_end":92}},{"value":"! `.vector_table` under \"text\".","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":6954,"byte_end":6987,"line_start":191,"line_end":191,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":6988,"byte_end":6991,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":6992,"byte_end":6999,"line_start":193,"line_end":193,"column_start":1,"column_end":8}},{"value":"! $ size target/thumbv7m-none-eabi/examples/app","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":7000,"byte_end":7049,"line_start":194,"line_end":194,"column_start":1,"column_end":50}},{"value":"!   text    data     bss     dec     hex filename","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":7050,"byte_end":7101,"line_start":195,"line_end":195,"column_start":1,"column_end":52}},{"value":"!   1160       0       0    1660     67c target/thumbv7m-none-eabi/release/app","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":7102,"byte_end":7182,"line_start":196,"line_end":196,"column_start":1,"column_end":81}},{"value":"! ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":7183,"byte_end":7190,"line_start":197,"line_end":197,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":7191,"byte_end":7194,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"! ## Symbols (`objdump`, `nm`)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":7195,"byte_end":7227,"line_start":199,"line_end":199,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":7228,"byte_end":7231,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"! One will always find the following (unmangled) symbols in `cortex-m-rt` applications:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":7232,"byte_end":7321,"line_start":201,"line_end":201,"column_start":1,"column_end":90}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":7322,"byte_end":7325,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"! - `Reset`. This is the reset handler. The microcontroller will executed this function upon","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":7326,"byte_end":7420,"line_start":203,"line_end":203,"column_start":1,"column_end":95}},{"value":"! booting. This function will call the user program entry point (cf. [`entry!`]) using the `main`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":7421,"byte_end":7520,"line_start":204,"line_end":204,"column_start":1,"column_end":100}},{"value":"! symbol so you may also find that symbol in your program; if you do, `main` will contain your","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":7521,"byte_end":7617,"line_start":205,"line_end":205,"column_start":1,"column_end":97}},{"value":"! application code. Some other times `main` gets inlined into `Reset` so you won't find it.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":7618,"byte_end":7711,"line_start":206,"line_end":206,"column_start":1,"column_end":94}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":7712,"byte_end":7715,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"! [`entry!`]:  macro.entry.html","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":7716,"byte_end":7749,"line_start":208,"line_end":208,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":7750,"byte_end":7753,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"! - `DefaultHandler`. This is the default handler. This function will contain, or call, the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":7754,"byte_end":7847,"line_start":210,"line_end":210,"column_start":1,"column_end":94}},{"value":"! function you declared in the second argument of `exception!(*, ..)`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":7848,"byte_end":7920,"line_start":211,"line_end":211,"column_start":1,"column_end":73}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":7921,"byte_end":7924,"line_start":212,"line_end":212,"column_start":1,"column_end":4}},{"value":"! - `HardFault`. This is the hard fault handler. This function is simply a trampoline that jumps","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":7925,"byte_end":8023,"line_start":213,"line_end":213,"column_start":1,"column_end":99}},{"value":"! into the user defined hard fault handler: `UserHardFault`. The trampoline is required to set up","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":8024,"byte_end":8123,"line_start":214,"line_end":214,"column_start":1,"column_end":100}},{"value":"! the pointer to the stacked exception frame.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":8124,"byte_end":8171,"line_start":215,"line_end":215,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":8172,"byte_end":8175,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"! - `UserHardFault`. This is the user defined hard fault handler. This function will contain, or","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":8176,"byte_end":8274,"line_start":217,"line_end":217,"column_start":1,"column_end":99}},{"value":"! call, the function you declared in the second argument of `exception!(HardFault, ..)`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":8275,"byte_end":8364,"line_start":218,"line_end":218,"column_start":1,"column_end":90}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":8365,"byte_end":8368,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"! - `__STACK_START`. This is the first entry in the `.vector_table` section. This symbol contains","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":8369,"byte_end":8468,"line_start":220,"line_end":220,"column_start":1,"column_end":100}},{"value":"! the initial value of the stack pointer; this is where the stack will be located -- the stack","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":8469,"byte_end":8565,"line_start":221,"line_end":221,"column_start":1,"column_end":97}},{"value":"! grows downwards towards smaller addresses.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":8566,"byte_end":8612,"line_start":222,"line_end":222,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":8613,"byte_end":8616,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"! - `__RESET_VECTOR`. This is the reset vector, a pointer into the `Reset` handler. This vector is","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":8617,"byte_end":8717,"line_start":224,"line_end":224,"column_start":1,"column_end":101}},{"value":"! located in the `.vector_table` section after `__STACK_START`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":8718,"byte_end":8783,"line_start":225,"line_end":225,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":8784,"byte_end":8787,"line_start":226,"line_end":226,"column_start":1,"column_end":4}},{"value":"! - `__EXCEPTIONS`. This is the core exceptions portion of the vector table; it's an array of 14","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":8788,"byte_end":8886,"line_start":227,"line_end":227,"column_start":1,"column_end":99}},{"value":"! exception vectors, which includes exceptions like `HardFault` and `SysTick`. This array is","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":8887,"byte_end":8981,"line_start":228,"line_end":228,"column_start":1,"column_end":95}},{"value":"! located after `__RESET_VECTOR` in the `.vector_table` section.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":8982,"byte_end":9048,"line_start":229,"line_end":229,"column_start":1,"column_end":67}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":9049,"byte_end":9052,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"! - `__EXCEPTIONS`. This is the device specific interrupt portion of the vector table; its exact","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":9053,"byte_end":9151,"line_start":231,"line_end":231,"column_start":1,"column_end":99}},{"value":"! size depends on the target device but if the `\"device\"` feature has not been enabled it will","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":9152,"byte_end":9248,"line_start":232,"line_end":232,"column_start":1,"column_end":97}},{"value":"! have a size of 32 vectors (on ARMv6-M) or 240 vectors (on ARMv7-M). This array is located after","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":9249,"byte_end":9348,"line_start":233,"line_end":233,"column_start":1,"column_end":100}},{"value":"! `__EXCEPTIONS` in the `.vector_table` section.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":9349,"byte_end":9399,"line_start":234,"line_end":234,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":9400,"byte_end":9403,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"! - `__pre_init`. This is a function to be run before RAM is initialized. It defaults to an empty","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":9404,"byte_end":9503,"line_start":236,"line_end":236,"column_start":1,"column_end":100}},{"value":"! function. The function called can be changed by calling the `pre_init!` macro. The empty","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":9504,"byte_end":9596,"line_start":237,"line_end":237,"column_start":1,"column_end":93}},{"value":"! function is not optimized out by default, but if an empty function is passed to `pre_init!` the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":9597,"byte_end":9696,"line_start":238,"line_end":238,"column_start":1,"column_end":100}},{"value":"! function call will be optimized out.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":9697,"byte_end":9737,"line_start":239,"line_end":239,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":9738,"byte_end":9741,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"! If you override any exception handler you'll find it as an unmangled symbol, e.g. `SysTick` or","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":9742,"byte_end":9840,"line_start":241,"line_end":241,"column_start":1,"column_end":99}},{"value":"! `SVCall`, in the output of `objdump`,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":9841,"byte_end":9882,"line_start":242,"line_end":242,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":9883,"byte_end":9886,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"! If you are targeting the `thumbv7em-none-eabihf` target you'll also see a `ResetTrampoline`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":9887,"byte_end":9982,"line_start":244,"line_end":244,"column_start":1,"column_end":96}},{"value":"! symbol in the output. To avoid the compiler placing FPU instructions before the FPU has been","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":9983,"byte_end":10079,"line_start":245,"line_end":245,"column_start":1,"column_end":97}},{"value":"! enabled (cf. `vpush`) `Reset` calls the function `ResetTrampoline` which is marked as","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":10080,"byte_end":10169,"line_start":246,"line_end":246,"column_start":1,"column_end":90}},{"value":"! `#[inline(never)]` and `ResetTrampoline` calls `main`. The compiler is free to inline `main`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":10170,"byte_end":10266,"line_start":247,"line_end":247,"column_start":1,"column_end":97}},{"value":"! into `ResetTrampoline` but it can't inline `ResetTrampoline` into `Reset` -- the FPU is enabled","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":10267,"byte_end":10366,"line_start":248,"line_end":248,"column_start":1,"column_end":100}},{"value":"! in `Reset`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":10367,"byte_end":10382,"line_start":249,"line_end":249,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":10383,"byte_end":10386,"line_start":250,"line_end":250,"column_start":1,"column_end":4}},{"value":"! # Advanced usage","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":10387,"byte_end":10407,"line_start":251,"line_end":251,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":10408,"byte_end":10411,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"! ## Setting the program entry point","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":10412,"byte_end":10450,"line_start":253,"line_end":253,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":10451,"byte_end":10454,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"! This section describes how `entry!` is implemented. This information is useful to developers who","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":10455,"byte_end":10555,"line_start":255,"line_end":255,"column_start":1,"column_end":101}},{"value":"! want to provide an alternative to `entry!` that provides extra guarantees.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":10556,"byte_end":10634,"line_start":256,"line_end":256,"column_start":1,"column_end":79}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":10635,"byte_end":10638,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"! The `Reset` handler will call a symbol named `main` (unmangled) *after* initializing `.bss` and","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":10639,"byte_end":10738,"line_start":258,"line_end":258,"column_start":1,"column_end":100}},{"value":"! `.data`, and enabling the FPU (if the target is `thumbv7em-none-eabihf`). `entry!` provides this","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":10739,"byte_end":10839,"line_start":259,"line_end":259,"column_start":1,"column_end":101}},{"value":"! symbol in its expansion:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":10840,"byte_end":10868,"line_start":260,"line_end":260,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":10869,"byte_end":10872,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"! ``` ignore","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":10873,"byte_end":10887,"line_start":262,"line_end":262,"column_start":1,"column_end":15}},{"value":"! entry!(path::to::main);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":10888,"byte_end":10915,"line_start":263,"line_end":263,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":10916,"byte_end":10919,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"! // expands into","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":10920,"byte_end":10939,"line_start":265,"line_end":265,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":10940,"byte_end":10943,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"! #[export_name = \"main\"]","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":10944,"byte_end":10971,"line_start":267,"line_end":267,"column_start":1,"column_end":28}},{"value":"! pub extern \"C\" fn __impl_main() -> ! {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":10972,"byte_end":11014,"line_start":268,"line_end":268,"column_start":1,"column_end":43}},{"value":"!     // validate the signature of the program entry point","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":11015,"byte_end":11075,"line_start":269,"line_end":269,"column_start":1,"column_end":61}},{"value":"!     let f: fn() -> ! = path::to::main;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":11076,"byte_end":11118,"line_start":270,"line_end":270,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":11119,"byte_end":11122,"line_start":271,"line_end":271,"column_start":1,"column_end":4}},{"value":"!     f()","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":11123,"byte_end":11134,"line_start":272,"line_end":272,"column_start":1,"column_end":12}},{"value":"! }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":11135,"byte_end":11140,"line_start":273,"line_end":273,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":11141,"byte_end":11148,"line_start":274,"line_end":274,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":11149,"byte_end":11152,"line_start":275,"line_end":275,"column_start":1,"column_end":4}},{"value":"! The unmangled `main` symbol must have signature `extern \"C\" fn() -> !` or its invocation from","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":11153,"byte_end":11250,"line_start":276,"line_end":276,"column_start":1,"column_end":98}},{"value":"! `Reset`  will result in undefined behavior.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":11251,"byte_end":11298,"line_start":277,"line_end":277,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":11299,"byte_end":11302,"line_start":278,"line_end":278,"column_start":1,"column_end":4}},{"value":"! ## Incorporating device specific interrupts","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":11303,"byte_end":11350,"line_start":279,"line_end":279,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":11351,"byte_end":11354,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"! This section covers how an external crate can insert device specific interrupt handlers into the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":11355,"byte_end":11455,"line_start":281,"line_end":281,"column_start":1,"column_end":101}},{"value":"! vector table. Most users don't need to concern themselves with these details, but if you are","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":11456,"byte_end":11552,"line_start":282,"line_end":282,"column_start":1,"column_end":97}},{"value":"! interested in how device crates generated using `svd2rust` integrate with `cortex-m-rt` read on.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":11553,"byte_end":11653,"line_start":283,"line_end":283,"column_start":1,"column_end":101}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":11654,"byte_end":11657,"line_start":284,"line_end":284,"column_start":1,"column_end":4}},{"value":"! The information in this section applies when the `\"device\"` feature has been enabled.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":11658,"byte_end":11747,"line_start":285,"line_end":285,"column_start":1,"column_end":90}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":11748,"byte_end":11751,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"! ### `__INTERRUPTS`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":11752,"byte_end":11774,"line_start":287,"line_end":287,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":11775,"byte_end":11778,"line_start":288,"line_end":288,"column_start":1,"column_end":4}},{"value":"! The external crate must provide the interrupts portion of the vector table via a `static`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":11779,"byte_end":11872,"line_start":289,"line_end":289,"column_start":1,"column_end":94}},{"value":"! variable named`__INTERRUPTS` (unmangled) that must be placed in the `.vector_table.interrupts`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":11873,"byte_end":11971,"line_start":290,"line_end":290,"column_start":1,"column_end":99}},{"value":"! section of its object file.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":11972,"byte_end":12003,"line_start":291,"line_end":291,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":12004,"byte_end":12007,"line_start":292,"line_end":292,"column_start":1,"column_end":4}},{"value":"! This `static` variable will be placed at `ORIGIN(FLASH) + 0x40`. This address corresponds to the","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":12008,"byte_end":12108,"line_start":293,"line_end":293,"column_start":1,"column_end":101}},{"value":"! spot where IRQ0 (IRQ number 0) is located.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":12109,"byte_end":12155,"line_start":294,"line_end":294,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":12156,"byte_end":12159,"line_start":295,"line_end":295,"column_start":1,"column_end":4}},{"value":"! To conform to the Cortex-M ABI `__INTERRUPTS` must be an array of function pointers; some spots","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":12160,"byte_end":12259,"line_start":296,"line_end":296,"column_start":1,"column_end":100}},{"value":"! in this array may need to be set to 0 if they are marked as *reserved* in the data sheet /","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":12260,"byte_end":12354,"line_start":297,"line_end":297,"column_start":1,"column_end":95}},{"value":"! reference manual. We recommend using a `union` to set the reserved spots to `0`; `None`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":12355,"byte_end":12446,"line_start":298,"line_end":298,"column_start":1,"column_end":92}},{"value":"! (`Option<fn()>`) may also work but it's not guaranteed that the `None` variant will *always* be","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":12447,"byte_end":12546,"line_start":299,"line_end":299,"column_start":1,"column_end":100}},{"value":"! represented by the value `0`.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":12547,"byte_end":12580,"line_start":300,"line_end":300,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":12581,"byte_end":12584,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"! Let's illustrate with an artificial example where a device only has two interrupt: `Foo`, with","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":12585,"byte_end":12683,"line_start":302,"line_end":302,"column_start":1,"column_end":99}},{"value":"! IRQ number = 2, and `Bar`, with IRQ number = 4.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":12684,"byte_end":12735,"line_start":303,"line_end":303,"column_start":1,"column_end":52}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":12736,"byte_end":12739,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"! ``` ignore","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":12740,"byte_end":12754,"line_start":305,"line_end":305,"column_start":1,"column_end":15}},{"value":"! union Vector {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":12755,"byte_end":12773,"line_start":306,"line_end":306,"column_start":1,"column_end":19}},{"value":"!     handler: extern \"C\" fn(),","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":12774,"byte_end":12807,"line_start":307,"line_end":307,"column_start":1,"column_end":34}},{"value":"!     reserved: usize,","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":12808,"byte_end":12832,"line_start":308,"line_end":308,"column_start":1,"column_end":25}},{"value":"! }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":12833,"byte_end":12838,"line_start":309,"line_end":309,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":12839,"byte_end":12842,"line_start":310,"line_end":310,"column_start":1,"column_end":4}},{"value":"! extern \"C\" {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":12843,"byte_end":12859,"line_start":311,"line_end":311,"column_start":1,"column_end":17}},{"value":"!     fn Foo();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":12860,"byte_end":12877,"line_start":312,"line_end":312,"column_start":1,"column_end":18}},{"value":"!     fn Bar();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":12878,"byte_end":12895,"line_start":313,"line_end":313,"column_start":1,"column_end":18}},{"value":"! }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":12896,"byte_end":12901,"line_start":314,"line_end":314,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":12902,"byte_end":12905,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"! #[link_section = \".vector_table.interrupts\"]","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":12906,"byte_end":12954,"line_start":316,"line_end":316,"column_start":1,"column_end":49}},{"value":"! #[no_mangle]","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":12955,"byte_end":12971,"line_start":317,"line_end":317,"column_start":1,"column_end":17}},{"value":"! pub static __INTERRUPTS: [Vector; 5] = [","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":12972,"byte_end":13016,"line_start":318,"line_end":318,"column_start":1,"column_end":45}},{"value":"!     // 0-1: Reserved","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":13017,"byte_end":13041,"line_start":319,"line_end":319,"column_start":1,"column_end":25}},{"value":"!     Vector { reserved: 0 },","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":13042,"byte_end":13073,"line_start":320,"line_end":320,"column_start":1,"column_end":32}},{"value":"!     Vector { reserved: 0 },","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":13074,"byte_end":13105,"line_start":321,"line_end":321,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":13106,"byte_end":13109,"line_start":322,"line_end":322,"column_start":1,"column_end":4}},{"value":"!     // 2: Foo","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":13110,"byte_end":13127,"line_start":323,"line_end":323,"column_start":1,"column_end":18}},{"value":"!     Vector { handler: Foo },","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":13128,"byte_end":13160,"line_start":324,"line_end":324,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":13161,"byte_end":13164,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"!     // 3: Reserved","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":13165,"byte_end":13187,"line_start":326,"line_end":326,"column_start":1,"column_end":23}},{"value":"!     Vector { reserved: 0 },","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":13188,"byte_end":13219,"line_start":327,"line_end":327,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":13220,"byte_end":13223,"line_start":328,"line_end":328,"column_start":1,"column_end":4}},{"value":"!     // 4: Bar","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":13224,"byte_end":13241,"line_start":329,"line_end":329,"column_start":1,"column_end":18}},{"value":"!     Vector { handler: Bar },","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":13242,"byte_end":13274,"line_start":330,"line_end":330,"column_start":1,"column_end":33}},{"value":"! ];","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":13275,"byte_end":13281,"line_start":331,"line_end":331,"column_start":1,"column_end":7}},{"value":"! ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":13282,"byte_end":13289,"line_start":332,"line_end":332,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":13290,"byte_end":13293,"line_start":333,"line_end":333,"column_start":1,"column_end":4}},{"value":"! ### `device.x`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":13294,"byte_end":13312,"line_start":334,"line_end":334,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":13313,"byte_end":13316,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"! Linking in `__INTERRUPTS` creates a bunch of undefined references. If the user doesn't set a","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":13317,"byte_end":13413,"line_start":336,"line_end":336,"column_start":1,"column_end":97}},{"value":"! handler for *all* the device specific interrupts then linking will fail with `\"undefined","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":13414,"byte_end":13506,"line_start":337,"line_end":337,"column_start":1,"column_end":93}},{"value":"! reference\"` errors.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":13507,"byte_end":13530,"line_start":338,"line_end":338,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":13531,"byte_end":13534,"line_start":339,"line_end":339,"column_start":1,"column_end":4}},{"value":"! We want to provide a default handler for all the interrupts while still letting the user","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":13535,"byte_end":13627,"line_start":340,"line_end":340,"column_start":1,"column_end":93}},{"value":"! individually override each interrupt handler. In C projects, this is usually accomplished using","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":13628,"byte_end":13727,"line_start":341,"line_end":341,"column_start":1,"column_end":100}},{"value":"! weak aliases declared in external assembly files. In Rust, we could achieve something similar","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":13728,"byte_end":13825,"line_start":342,"line_end":342,"column_start":1,"column_end":98}},{"value":"! using `global_asm!`, but that's an unstable feature.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":13826,"byte_end":13882,"line_start":343,"line_end":343,"column_start":1,"column_end":57}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":13883,"byte_end":13886,"line_start":344,"line_end":344,"column_start":1,"column_end":4}},{"value":"! A solution that doesn't require `global_asm!` or external assembly files is to use the `PROVIDE`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":13887,"byte_end":13987,"line_start":345,"line_end":345,"column_start":1,"column_end":101}},{"value":"! command in a linker script to create the weak aliases. This is the approach that `cortex-m-rt`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":13988,"byte_end":14086,"line_start":346,"line_end":346,"column_start":1,"column_end":99}},{"value":"! uses; when the `\"device\"` feature is enabled `cortex-m-rt`'s linker script (`link.x`) depends on","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":14087,"byte_end":14187,"line_start":347,"line_end":347,"column_start":1,"column_end":101}},{"value":"! a linker script named `device.x`. The crate that provides `__INTERRUPTS` must also provide this","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":14188,"byte_end":14287,"line_start":348,"line_end":348,"column_start":1,"column_end":100}},{"value":"! file.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":14288,"byte_end":14297,"line_start":349,"line_end":349,"column_start":1,"column_end":10}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":14298,"byte_end":14301,"line_start":350,"line_end":350,"column_start":1,"column_end":4}},{"value":"! For our running example the `device.x` linker script looks like this:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":14302,"byte_end":14375,"line_start":351,"line_end":351,"column_start":1,"column_end":74}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":14376,"byte_end":14379,"line_start":352,"line_end":352,"column_start":1,"column_end":4}},{"value":"! ``` text","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":14380,"byte_end":14392,"line_start":353,"line_end":353,"column_start":1,"column_end":13}},{"value":"! /* device.x */","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":14393,"byte_end":14411,"line_start":354,"line_end":354,"column_start":1,"column_end":19}},{"value":"! PROVIDE(Foo = DefaultHandler);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":14412,"byte_end":14446,"line_start":355,"line_end":355,"column_start":1,"column_end":35}},{"value":"! PROVIDE(Bar = DefaultHandler);","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":14447,"byte_end":14481,"line_start":356,"line_end":356,"column_start":1,"column_end":35}},{"value":"! ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":14482,"byte_end":14489,"line_start":357,"line_end":357,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":14490,"byte_end":14493,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"! This weakly aliases both `Foo` and `Bar`. `DefaultHandler` is the default exception handler that","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":14494,"byte_end":14594,"line_start":359,"line_end":359,"column_start":1,"column_end":101}},{"value":"! the user provides via `exception!(*, ..)` and that the core exceptions use unless overridden.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":14595,"byte_end":14692,"line_start":360,"line_end":360,"column_start":1,"column_end":98}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":14693,"byte_end":14696,"line_start":361,"line_end":361,"column_start":1,"column_end":4}},{"value":"! Because this linker script is provided by a dependency of the final application the dependency","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":14697,"byte_end":14795,"line_start":362,"line_end":362,"column_start":1,"column_end":99}},{"value":"! must contain build script that puts `device.x` somewhere the linker can find. An example of such","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":14796,"byte_end":14896,"line_start":363,"line_end":363,"column_start":1,"column_end":101}},{"value":"! build script is shown below:","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":14897,"byte_end":14929,"line_start":364,"line_end":364,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":14930,"byte_end":14933,"line_start":365,"line_end":365,"column_start":1,"column_end":4}},{"value":"! ``` ignore","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":14934,"byte_end":14948,"line_start":366,"line_end":366,"column_start":1,"column_end":15}},{"value":"! use std::env;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":14949,"byte_end":14966,"line_start":367,"line_end":367,"column_start":1,"column_end":18}},{"value":"! use std::fs::File;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":14967,"byte_end":14989,"line_start":368,"line_end":368,"column_start":1,"column_end":23}},{"value":"! use std::io::Write;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":14990,"byte_end":15013,"line_start":369,"line_end":369,"column_start":1,"column_end":24}},{"value":"! use std::path::PathBuf;","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":15014,"byte_end":15041,"line_start":370,"line_end":370,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":15042,"byte_end":15045,"line_start":371,"line_end":371,"column_start":1,"column_end":4}},{"value":"! fn main() {","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":15046,"byte_end":15061,"line_start":372,"line_end":372,"column_start":1,"column_end":16}},{"value":"!     // Put the linker script somewhere the linker can find it","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":15062,"byte_end":15127,"line_start":373,"line_end":373,"column_start":1,"column_end":66}},{"value":"!     let out = &PathBuf::from(env::var_os(\"OUT_DIR\").unwrap());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":15128,"byte_end":15194,"line_start":374,"line_end":374,"column_start":1,"column_end":67}},{"value":"!     File::create(out.join(\"device.x\"))","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":15195,"byte_end":15237,"line_start":375,"line_end":375,"column_start":1,"column_end":43}},{"value":"!         .unwrap()","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":15238,"byte_end":15259,"line_start":376,"line_end":376,"column_start":1,"column_end":22}},{"value":"!         .write_all(include_bytes!(\"device.x\"))","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":15260,"byte_end":15310,"line_start":377,"line_end":377,"column_start":1,"column_end":51}},{"value":"!         .unwrap();","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":15311,"byte_end":15333,"line_start":378,"line_end":378,"column_start":1,"column_end":23}},{"value":"!     println!(\"cargo:rustc-link-search={}\", out.display());","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":15334,"byte_end":15396,"line_start":379,"line_end":379,"column_start":1,"column_end":63}},{"value":"! }","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":15397,"byte_end":15402,"line_start":380,"line_end":380,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":15403,"byte_end":15410,"line_start":381,"line_end":381,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":15411,"byte_end":15414,"line_start":382,"line_end":382,"column_start":1,"column_end":4}},{"value":"! ## `pre_init!`","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":15415,"byte_end":15433,"line_start":383,"line_end":383,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":15434,"byte_end":15437,"line_start":384,"line_end":384,"column_start":1,"column_end":4}},{"value":"! A user-defined function can be run at the start of the reset handler, before RAM is","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":15438,"byte_end":15525,"line_start":385,"line_end":385,"column_start":1,"column_end":88}},{"value":"! initialized. The macro `pre_init!` can be called to set the function to be run. The function is","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":15526,"byte_end":15625,"line_start":386,"line_end":386,"column_start":1,"column_end":100}},{"value":"! intended to perform actions that cannot wait the time it takes for RAM to be initialized, such","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":15626,"byte_end":15724,"line_start":387,"line_end":387,"column_start":1,"column_end":99}},{"value":"! as disabling a watchdog. As the function is called before RAM is initialized, any access of","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":15725,"byte_end":15820,"line_start":388,"line_end":388,"column_start":1,"column_end":96}},{"value":"! static variables will result in undefined behavior.","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":15821,"byte_end":15876,"line_start":389,"line_end":389,"column_start":1,"column_end":56}},{"value":"deny(missing_docs)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":16095,"byte_end":16117,"line_start":396,"line_end":396,"column_start":1,"column_end":23}},{"value":"deny(warnings)","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":16118,"byte_end":16136,"line_start":397,"line_end":397,"column_start":1,"column_end":19}},{"value":"no_std","span":{"file_name":"/home/farjad-ali/.cargo/registry/src/github.com-1ecc6299db9ec823/cortex-m-rt-0.5.7/src/lib.rs","byte_start":16137,"byte_end":16147,"line_start":398,"line_end":398,"column_start":1,"column_end":11}}]}],"impls":[],"refs":[],"macro_refs":[],"relations":[]}